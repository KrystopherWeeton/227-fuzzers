; ModuleID = '../../v8/src/compiler/load-elimination.cc'
source_filename = "../../v8/src/compiler/load-elimination.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::LoadElimination::AbstractState" = type { %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"struct.std::__1::array", %"struct.std::__1::array", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* }
%"class.v8::internal::compiler::LoadElimination::AbstractElements" = type { [8 x %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"], i64 }
%"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element" = type <{ %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i8, [7 x i8] }>
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"struct.std::__1::array" = type { [32 x %"class.v8::internal::compiler::LoadElimination::AbstractField"*] }
%"class.v8::internal::compiler::LoadElimination::AbstractField" = type { %"class.v8::internal::ZoneMap" }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.14" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.8" }
%"class.std::__1::__tree.8" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::set.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::compiler::LoadElimination::AbstractMaps" = type { %"class.v8::internal::ZoneMap.23" }
%"class.v8::internal::ZoneMap.23" = type { %"class.std::__1::map.24" }
%"class.std::__1::map.24" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::internal::ZoneAllocator.28" }
%"class.v8::internal::ZoneAllocator.28" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::LoadElimination" = type { %"class.v8::internal::compiler::AdvancedReducer", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::JSGraph"* }
%"class.v8::internal::compiler::AdvancedReducer" = type { %"class.v8::internal::compiler::Reducer", %"class.v8::internal::compiler::AdvancedReducer::Editor"* }
%"class.v8::internal::compiler::Reducer" = type { i32 (...)** }
%"class.v8::internal::compiler::AdvancedReducer::Editor" = type { i32 (...)** }
%"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes" = type { %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.v8::internal::compiler::LoadElimination::AbstractState"** }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.v8::internal::ZoneAllocator.35" }
%"class.v8::internal::ZoneAllocator.35" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::JSGraph" = type { %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::MachineGraph" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector.36" }
%"class.v8::internal::ZoneVector.36" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.39" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.v8::internal::ZoneAllocator.42" }
%"class.v8::internal::ZoneAllocator.42" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.43", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.43" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.61", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.61", %"class.v8::internal::compiler::NodeCache.61", %"class.v8::internal::compiler::NodeCache.61", %"class.v8::internal::compiler::NodeCache.61", %"class.v8::internal::compiler::NodeCache.61", %"class.v8::internal::compiler::NodeCache.88", %"class.v8::internal::compiler::NodeCache.115" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.44", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.57", [4 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.v8::internal::ZoneAllocator.50" }
%"class.v8::internal::ZoneAllocator.50" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.v8::internal::ZoneAllocator.54" }
%"class.v8::internal::ZoneAllocator.54" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { float }
%"class.v8::internal::compiler::NodeCache.61" = type { %"class.v8::internal::ZoneUnorderedMap.62" }
%"class.v8::internal::ZoneUnorderedMap.62" = type { %"class.std::__1::unordered_map.63" }
%"class.std::__1::unordered_map.63" = type { %"class.std::__1::__hash_table.64" }
%"class.std::__1::__hash_table.64" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.82", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base.68"** }
%"struct.std::__1::__hash_node_base.68" = type { %"struct.std::__1::__hash_node_base.68"* }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::__bucket_list_deallocator.70" }
%"class.std::__1::__bucket_list_deallocator.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.v8::internal::ZoneAllocator.73" }
%"class.v8::internal::ZoneAllocator.73" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75", %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base.68" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.v8::internal::ZoneAllocator.77" }
%"class.v8::internal::ZoneAllocator.77" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::internal::compiler::NodeCache.88" = type { %"class.v8::internal::ZoneUnorderedMap.89" }
%"class.v8::internal::ZoneUnorderedMap.89" = type { %"class.std::__1::unordered_map.90" }
%"class.std::__1::unordered_map.90" = type { %"class.std::__1::__hash_table.91" }
%"class.std::__1::__hash_table.91" = type <{ %"class.std::__1::unique_ptr.92", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109", [4 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base.95"** }
%"struct.std::__1::__hash_node_base.95" = type { %"struct.std::__1::__hash_node_base.95"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator.97" }
%"class.std::__1::__bucket_list_deallocator.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::ZoneAllocator.100" }
%"class.v8::internal::ZoneAllocator.100" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base.95" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.v8::internal::ZoneAllocator.104" }
%"class.v8::internal::ZoneAllocator.104" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::internal::compiler::NodeCache.115" = type { %"class.v8::internal::ZoneUnorderedMap.116" }
%"class.v8::internal::ZoneUnorderedMap.116" = type { %"class.std::__1::unordered_map.117" }
%"class.std::__1::unordered_map.117" = type { %"class.std::__1::__hash_table.118" }
%"class.std::__1::__hash_table.118" = type <{ %"class.std::__1::unique_ptr.119", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.136", [4 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121", %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base.122"** }
%"struct.std::__1::__hash_node_base.122" = type { %"struct.std::__1::__hash_node_base.122"* }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.std::__1::__bucket_list_deallocator.124" }
%"class.std::__1::__bucket_list_deallocator.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.v8::internal::ZoneAllocator.127" }
%"class.v8::internal::ZoneAllocator.127" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.122" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.v8::internal::ZoneAllocator.131" }
%"class.v8::internal::ZoneAllocator.131" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.147", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.783", %"class.std::__1::unique_ptr.804", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.814", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.948", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.961", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.971", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.982", %"struct.std::__1::atomic.310", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1057", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1100"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1108", i32, i8, i8, i32, i32, %"class.std::__1::vector.1114", %"class.std::__1::vector.1114", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1121", i64, %"class.std::__1::unordered_map.1122", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.681", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.318", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1178", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1216", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1250", %"class.std::__1::vector.1254", %"class.std::__1::vector.1254", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.142", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.142" = type { %"struct.std::__1::__atomic_base.143" }
%"struct.std::__1::__atomic_base.143" = type { %"struct.std::__1::__cxx_atomic_impl.144" }
%"struct.std::__1::__cxx_atomic_impl.144" = type { %"struct.std::__1::__cxx_atomic_base_impl.145" }
%"struct.std::__1::__cxx_atomic_base_impl.145" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.153", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.184", %"class.std::__1::vector.188", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.304", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.319", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.323", %"class.std::__1::vector.323", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.336", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.517", %"class.std::__1::unique_ptr.556", %"class.std::__1::unique_ptr.586", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.608", %"class.std::__1::unique_ptr.608", %"class.std::__1::unique_ptr.614", %"class.std::__1::unique_ptr.620", %"class.std::__1::unique_ptr.620", %"class.std::__1::unique_ptr.626", %"class.std::__1::unique_ptr.632", %"class.std::__1::shared_ptr.638", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.643", %"class.std::__1::unique_ptr.669", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.675", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.688", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.488", i8, [7 x i8], %"class.std::__1::unordered_map.694", %"class.std::__1::unordered_map.720", %"class.std::__1::unordered_map.694", %"class.std::__1::unordered_map.744", %"class.std::__1::vector.770", i8, %"class.std::__1::unique_ptr.777", i32, i32 }
%"class.std::__1::unordered_map.153" = type { %"class.std::__1::__hash_table.154" }
%"class.std::__1::__hash_table.154" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.165", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base.158"** }
%"struct.std::__1::__hash_node_base.158" = type { %"struct.std::__1::__hash_node_base.158"* }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.std::__1::__bucket_list_deallocator.160" }
%"class.std::__1::__bucket_list_deallocator.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.158" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.179", %"struct.std::__1::atomic.179", %"struct.std::__1::atomic.179" }
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i64 }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i32 }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.190" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.261" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.255" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.195", %"class.std::__1::vector.195", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.197" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.220", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.179", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.236"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.244", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.179", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.179", %"struct.std::__1::atomic.225", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__cxx_atomic_impl.227" }
%"struct.std::__1::__cxx_atomic_impl.227" = type { %"struct.std::__1::__cxx_atomic_base_impl.228" }
%"struct.std::__1::__cxx_atomic_base_impl.228" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.229" }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.231" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.236" = type { %"class.std::__1::__tree.237" }
%"class.std::__1::__tree.237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.244" = type { %"struct.std::__1::__atomic_base.245" }
%"struct.std::__1::__atomic_base.245" = type { %"struct.std::__1::__cxx_atomic_impl.246" }
%"struct.std::__1::__cxx_atomic_impl.246" = type { %"struct.std::__1::__cxx_atomic_base_impl.247" }
%"struct.std::__1::__cxx_atomic_base_impl.247" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.248", i8, [7 x i8] }>
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { i64*, i64*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { %"struct.std::__1::pair.263"*, %"struct.std::__1::pair.263"*, %"class.std::__1::__compressed_pair.264" }
%"struct.std::__1::pair.263" = type { i32, i64 }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::pair.263"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.269" }
%"class.std::__1::unordered_map.269" = type { %"class.std::__1::__hash_table.270" }
%"class.std::__1::__hash_table.270" = type <{ %"class.std::__1::unique_ptr.271", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.291", [4 x i8] }>
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273", %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base.274"** }
%"struct.std::__1::__hash_node_base.274" = type { %"struct.std::__1::__hash_node_base.274"* }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.std::__1::__bucket_list_deallocator.276" }
%"class.std::__1::__bucket_list_deallocator.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.274" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.297", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.299" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1183", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1187", %"class.std::__1::unique_ptr.1193", %"class.std::__1::unique_ptr.632", %"class.std::__1::vector.1199", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1183" = type { %"struct.std::__1::__atomic_base.1184" }
%"struct.std::__1::__atomic_base.1184" = type { %"struct.std::__1::__cxx_atomic_impl.1185" }
%"struct.std::__1::__cxx_atomic_impl.1185" = type { %"struct.std::__1::__cxx_atomic_base_impl.1186" }
%"struct.std::__1::__cxx_atomic_base_impl.1186" = type { i32 }
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.941" }
%"class.std::__1::vector.941" = type { %"class.std::__1::__vector_base.942" }
%"class.std::__1::__vector_base.942" = type { i64**, i64**, %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { i64** }
%"class.std::__1::unique_ptr.1193" = type { %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.941", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1199" = type { %"class.std::__1::__vector_base.1200" }
%"class.std::__1::__vector_base.1200" = type { %"struct.std::__1::pair.1201"*, %"struct.std::__1::pair.1201"*, %"class.std::__1::__compressed_pair.1202" }
%"struct.std::__1::pair.1201" = type opaque
%"class.std::__1::__compressed_pair.1202" = type { %"struct.std::__1::__compressed_pair_elem.1203" }
%"struct.std::__1::__compressed_pair_elem.1203" = type { %"struct.std::__1::pair.1201"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.310", %"struct.std::__1::atomic.314", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.318" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.319" = type { %"struct.std::__1::__atomic_base.320" }
%"struct.std::__1::__atomic_base.320" = type { %"struct.std::__1::__cxx_atomic_impl.321" }
%"struct.std::__1::__cxx_atomic_impl.321" = type { %"struct.std::__1::__cxx_atomic_base_impl.322" }
%"struct.std::__1::__cxx_atomic_base_impl.322" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.325" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.384", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.438", %"class.std::__1::vector.438", %"class.std::__1::vector.438", %"class.std::__1::vector.445", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.339", %"class.std::__1::vector.340", %"class.std::__1::vector.347", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.339" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.340" = type { %"class.std::__1::__vector_base.341" }
%"class.std::__1::__vector_base.341" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.342" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.347" = type { %"class.std::__1::__vector_base.348" }
%"class.std::__1::__vector_base.348" = type { %"class.std::__1::unique_ptr.349"*, %"class.std::__1::unique_ptr.349"*, %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::unique_ptr.349" = type opaque
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.std::__1::unique_ptr.349"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.355", %"class.v8::internal::Worklist.357", %"class.v8::internal::Worklist.357", %"class.v8::internal::Worklist.357", %"class.v8::internal::Worklist.359", %"class.v8::internal::Worklist.361", %"class.v8::internal::Worklist.363", %"class.v8::internal::Worklist.365", %"class.v8::internal::Worklist.367", %"class.v8::internal::Worklist.369" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.355" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.357" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.359" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.361" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.363" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.365" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.367" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.369" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.371", i8, i64 }
%"class.std::__1::vector.371" = type { %"class.std::__1::__vector_base.372" }
%"class.std::__1::__vector_base.372" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.387" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.339"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.387" = type { %"class.std::__1::__hash_table.388" }
%"class.std::__1::__hash_table.388" = type <{ %"class.std::__1::unique_ptr.389", %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.407", [4 x i8] }>
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391", %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.392"** }
%"struct.std::__1::__hash_node_base.392" = type { %"struct.std::__1::__hash_node_base.392"* }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.std::__1::__bucket_list_deallocator.394" }
%"class.std::__1::__bucket_list_deallocator.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::__hash_node_base.392" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.414" }
%"class.std::__1::unordered_map.414" = type { %"class.std::__1::__hash_table.415" }
%"class.std::__1::__hash_table.415" = type <{ %"class.std::__1::unique_ptr.416", %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.431", %"class.std::__1::__compressed_pair.434", [4 x i8] }>
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418", %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.std::__1::__hash_node_base.419"** }
%"struct.std::__1::__hash_node_base.419" = type { %"struct.std::__1::__hash_node_base.419"* }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.std::__1::__bucket_list_deallocator.421" }
%"class.std::__1::__bucket_list_deallocator.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::__hash_node_base.419" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.445" = type { %"class.std::__1::__vector_base.446" }
%"class.std::__1::__vector_base.446" = type { %"struct.std::__1::pair.447"*, %"struct.std::__1::pair.447"*, %"class.std::__1::__compressed_pair.448" }
%"struct.std::__1::pair.447" = type opaque
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::pair.447"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.453", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.438"], [3 x %"class.std::__1::vector.438"], i8, %"struct.std::__1::atomic.310", [6 x i8], %"class.std::__1::vector.438", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.463"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.438", %"class.std::__1::vector.438", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.463" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.488", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.481"], %"class.std::__1::unique_ptr.453" }
%"class.std::__1::vector.481" = type { %"class.std::__1::__vector_base.482" }
%"class.std::__1::__vector_base.482" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.520", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.524", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.529" }
%"struct.std::__1::atomic.520" = type { %"struct.std::__1::__atomic_base.521" }
%"struct.std::__1::__atomic_base.521" = type { %"struct.std::__1::__cxx_atomic_impl.522" }
%"struct.std::__1::__cxx_atomic_impl.522" = type { %"struct.std::__1::__cxx_atomic_base_impl.523" }
%"struct.std::__1::__cxx_atomic_base_impl.523" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.524" = type { %"struct.std::__1::__atomic_base.525" }
%"struct.std::__1::__atomic_base.525" = type { %"struct.std::__1::__cxx_atomic_impl.526" }
%"struct.std::__1::__cxx_atomic_impl.526" = type { %"struct.std::__1::__cxx_atomic_base_impl.527" }
%"struct.std::__1::__cxx_atomic_base_impl.527" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.529" = type { %"class.std::__1::__hash_table.530" }
%"class.std::__1::__hash_table.530" = type <{ %"class.std::__1::unique_ptr.531", %"class.std::__1::__compressed_pair.541", %"class.std::__1::__compressed_pair.546", %"class.std::__1::__compressed_pair.549", [4 x i8] }>
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533", %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"struct.std::__1::__hash_node_base.534"** }
%"struct.std::__1::__hash_node_base.534" = type { %"struct.std::__1::__hash_node_base.534"* }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.std::__1::__bucket_list_deallocator.536" }
%"class.std::__1::__bucket_list_deallocator.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"struct.std::__1::__hash_node_base.534" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.453", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.310", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.559", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.559" = type { %"class.std::__1::__hash_table.560" }
%"class.std::__1::__hash_table.560" = type <{ %"class.std::__1::unique_ptr.561", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.576", %"class.std::__1::__compressed_pair.579", [4 x i8] }>
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563", %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"struct.std::__1::__hash_node_base.564"** }
%"struct.std::__1::__hash_node_base.564" = type { %"struct.std::__1::__hash_node_base.564"* }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.std::__1::__bucket_list_deallocator.566" }
%"class.std::__1::__bucket_list_deallocator.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"struct.std::__1::__hash_node_base.564" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.595" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.638" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.639", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.5", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.639" = type { %"struct.std::__1::__atomic_base.640" }
%"struct.std::__1::__atomic_base.640" = type { %"struct.std::__1::__cxx_atomic_impl.641" }
%"struct.std::__1::__cxx_atomic_impl.641" = type { %"struct.std::__1::__cxx_atomic_base_impl.642" }
%"struct.std::__1::__cxx_atomic_base_impl.642" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.643" = type { %"class.std::__1::__hash_table.644" }
%"class.std::__1::__hash_table.644" = type <{ %"class.std::__1::unique_ptr.645", %"class.std::__1::__compressed_pair.655", %"class.std::__1::__compressed_pair.660", %"class.std::__1::__compressed_pair.663", [4 x i8] }>
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647", %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.std::__1::__hash_node_base.648"** }
%"struct.std::__1::__hash_node_base.648" = type { %"struct.std::__1::__hash_node_base.648"* }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.std::__1::__bucket_list_deallocator.650" }
%"class.std::__1::__bucket_list_deallocator.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"struct.std::__1::__hash_node_base.648" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.681", %"class.std::__1::vector.681" }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.488" = type { %"class.std::__1::__hash_table.489" }
%"class.std::__1::__hash_table.489" = type <{ %"class.std::__1::unique_ptr.490", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.505", %"class.std::__1::__compressed_pair.509", [4 x i8] }>
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492", %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"struct.std::__1::__hash_node_base.493"** }
%"struct.std::__1::__hash_node_base.493" = type { %"struct.std::__1::__hash_node_base.493"* }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.std::__1::__bucket_list_deallocator.495" }
%"class.std::__1::__bucket_list_deallocator.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"struct.std::__1::__hash_node_base.493" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unordered_map.720" = type { %"class.std::__1::__hash_table.721" }
%"class.std::__1::__hash_table.721" = type <{ %"class.std::__1::unique_ptr.722", %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.737", %"class.std::__1::__compressed_pair.740", [4 x i8] }>
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724", %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.std::__1::__hash_node_base.725"** }
%"struct.std::__1::__hash_node_base.725" = type { %"struct.std::__1::__hash_node_base.725"* }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.std::__1::__bucket_list_deallocator.727" }
%"class.std::__1::__bucket_list_deallocator.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"struct.std::__1::__hash_node_base.725" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unordered_map.694" = type { %"class.std::__1::__hash_table.695" }
%"class.std::__1::__hash_table.695" = type <{ %"class.std::__1::unique_ptr.696", %"class.std::__1::__compressed_pair.706", %"class.std::__1::__compressed_pair.711", %"class.std::__1::__compressed_pair.714", [4 x i8] }>
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698", %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.std::__1::__hash_node_base.699"** }
%"struct.std::__1::__hash_node_base.699" = type { %"struct.std::__1::__hash_node_base.699"* }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.std::__1::__bucket_list_deallocator.701" }
%"class.std::__1::__bucket_list_deallocator.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"struct.std::__1::__hash_node_base.699" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unordered_map.744" = type { %"class.std::__1::__hash_table.745" }
%"class.std::__1::__hash_table.745" = type <{ %"class.std::__1::unique_ptr.746", %"class.std::__1::__compressed_pair.756", %"class.std::__1::__compressed_pair.761", %"class.std::__1::__compressed_pair.766", [4 x i8] }>
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748", %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"struct.std::__1::__hash_node_base.749"** }
%"struct.std::__1::__hash_node_base.749" = type { %"struct.std::__1::__hash_node_base.749"* }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.std::__1::__bucket_list_deallocator.751" }
%"class.std::__1::__bucket_list_deallocator.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"struct.std::__1::__hash_node_base.749" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::vector.770" = type { %"class.std::__1::__vector_base.771" }
%"class.std::__1::__vector_base.771" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.772" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.681" }
%"class.std::__1::shared_ptr.783" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.297", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.784", %"class.std::__1::unique_ptr.798" }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.787" }
%"class.std::__1::vector.787" = type { %"class.std::__1::__vector_base.788" }
%"class.std::__1::__vector_base.788" = type { %"class.std::__1::unique_ptr.789"*, %"class.std::__1::unique_ptr.789"*, %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.std::__1::unique_ptr.789"* }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.807", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.807" = type { %"struct.std::__1::__atomic_base.808" }
%"struct.std::__1::__atomic_base.808" = type { %"struct.std::__1::__cxx_atomic_impl.809" }
%"struct.std::__1::__cxx_atomic_impl.809" = type { %"struct.std::__1::__cxx_atomic_base_impl.810" }
%"struct.std::__1::__cxx_atomic_base_impl.810" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.814" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.815", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.815" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.816", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { %"class.std::__1::unique_ptr.818"*, %"class.std::__1::unique_ptr.818"*, %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::unique_ptr.818" = type opaque
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.std::__1::unique_ptr.818"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.824", %"class.std::__1::unique_ptr.830", %"struct.std::__1::atomic.310", %"class.std::__1::unique_ptr.836", %"class.std::__1::unique_ptr.842", %"class.std::__1::unique_ptr.848", %"class.std::__1::unique_ptr.854", %"class.std::__1::unique_ptr.860", %"class.std::__1::set.866", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.866" = type { %"class.std::__1::__tree.867" }
%"class.std::__1::__tree.867" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.868", %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.876" }
%"class.v8::internal::TaggedImpl.876" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.875" }
%"class.v8::internal::TaggedImpl.875" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.877", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.883", %"class.v8::internal::DetachableVector.884", %"class.v8::internal::DetachableVector.883", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.884" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.883" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.885", %"class.std::__1::vector.891", %"class.std::__1::unique_ptr.898", %"class.std::__1::vector.905", %"class.std::__1::unique_ptr.912", i64, %"class.std::__1::vector.918", %"class.std::__1::vector.926", %"class.std::__1::vector.934", i8, i8, i32 }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.891" = type { %"class.std::__1::__vector_base.892" }
%"class.std::__1::__vector_base.892" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.893" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::GlobalHandles::NodeSpace.901"* }
%"class.v8::internal::GlobalHandles::NodeSpace.901" = type opaque
%"class.std::__1::vector.905" = type { %"class.std::__1::__vector_base.906" }
%"class.std::__1::__vector_base.906" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.907" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"struct.std::__1::pair.920"*, %"struct.std::__1::pair.920"*, %"class.std::__1::__compressed_pair.921" }
%"struct.std::__1::pair.920" = type opaque
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"struct.std::__1::pair.920"* }
%"class.std::__1::vector.926" = type { %"class.std::__1::__vector_base.927" }
%"class.std::__1::__vector_base.927" = type { %"struct.std::__1::pair.928"*, %"struct.std::__1::pair.928"*, %"class.std::__1::__compressed_pair.929" }
%"struct.std::__1::pair.928" = type opaque
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::pair.928"* }
%"class.std::__1::vector.934" = type { %"class.std::__1::__vector_base.935" }
%"class.std::__1::__vector_base.935" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.936" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.941", %"class.std::__1::vector.948" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.955" }
%"class.std::__1::unique_ptr.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.948" = type { %"class.std::__1::__vector_base.949" }
%"class.std::__1::__vector_base.949" = type { i32*, i32*, %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.961" = type { %"struct.std::__1::__atomic_base.962" }
%"struct.std::__1::__atomic_base.962" = type { %"struct.std::__1::__cxx_atomic_impl.963" }
%"struct.std::__1::__cxx_atomic_impl.963" = type { %"struct.std::__1::__cxx_atomic_base_impl.964" }
%"struct.std::__1::__cxx_atomic_base_impl.964" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.971" = type { %"struct.std::__1::__atomic_base.972" }
%"struct.std::__1::__atomic_base.972" = type { %"struct.std::__1::__cxx_atomic_impl.973" }
%"struct.std::__1::__cxx_atomic_impl.973" = type { %"struct.std::__1::__cxx_atomic_base_impl.974" }
%"struct.std::__1::__cxx_atomic_base_impl.974" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.978 }
%union.anon.978 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.982" = type { %"class.std::__1::__hash_table.983" }
%"class.std::__1::__hash_table.983" = type <{ %"class.std::__1::unique_ptr.984", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.999", %"class.std::__1::__compressed_pair.1002", [4 x i8] }>
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986", %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::__hash_node_base.987"** }
%"struct.std::__1::__hash_node_base.987" = type { %"struct.std::__1::__hash_node_base.987"* }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"class.std::__1::__bucket_list_deallocator.989" }
%"class.std::__1::__bucket_list_deallocator.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.std::__1::__hash_node_base.987" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::atomic.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__cxx_atomic_impl.312" }
%"struct.std::__1::__cxx_atomic_impl.312" = type { %"struct.std::__1::__cxx_atomic_base_impl.313" }
%"struct.std::__1::__cxx_atomic_base_impl.313" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.1008", %"class.v8::internal::Handle.1014", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.1015", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.1014" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1015" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.1016", %"class.std::__1::vector.1022", %"class.std::__1::unique_ptr.1030", %"class.std::__1::unique_ptr.1036", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1042", %"class.std::__1::vector.1048", %"struct.std::__1::pair.1056" }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.1022" = type { %"class.std::__1::__vector_base.1023" }
%"class.std::__1::__vector_base.1023" = type { %"class.std::__1::unique_ptr.1024"*, %"class.std::__1::unique_ptr.1024"*, %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::unique_ptr.1024" = type opaque
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.std::__1::unique_ptr.1024"* }
%"class.std::__1::unique_ptr.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.1042" = type { %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.1048" = type { %"class.std::__1::__vector_base.1049" }
%"class.std::__1::__vector_base.1049" = type { %"struct.std::__1::pair.1050"*, %"struct.std::__1::pair.1050"*, %"class.std::__1::__compressed_pair.1051" }
%"struct.std::__1::pair.1050" = type opaque
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"struct.std::__1::pair.1050"* }
%"struct.std::__1::pair.1056" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.146"*, i16, i8*)*, i8* }
%"class.v8::Local.146" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1060", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1060" = type { %"class.std::__1::__hash_table.1061" }
%"class.std::__1::__hash_table.1061" = type <{ %"class.std::__1::unique_ptr.1062", %"class.std::__1::__compressed_pair.1072", %"class.std::__1::__compressed_pair.1077", %"class.std::__1::__compressed_pair.1081", [4 x i8] }>
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064", %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"struct.std::__1::__hash_node_base.1065"** }
%"struct.std::__1::__hash_node_base.1065" = type { %"struct.std::__1::__hash_node_base.1065"* }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.std::__1::__bucket_list_deallocator.1067" }
%"class.std::__1::__bucket_list_deallocator.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::__hash_node_base.1065" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1095" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1089"**, %"struct.std::__1::pair.1089"**, %"struct.std::__1::pair.1089"**, %"class.std::__1::__compressed_pair.1090" }
%"struct.std::__1::pair.1089" = type opaque
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"struct.std::__1::pair.1089"** }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1100" = type { %"class.std::__1::__vector_base.1101" }
%"class.std::__1::__vector_base.1101" = type { %"class.v8::internal::Handle.1102"*, %"class.v8::internal::Handle.1102"*, %"class.std::__1::__compressed_pair.1103" }
%"class.v8::internal::Handle.1102" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.v8::internal::Handle.1102"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.966", i32, %"class.v8::Local.146" }
%"class.v8::Local.966" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1108" = type { %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1114" = type { %"class.std::__1::__vector_base.1115" }
%"class.std::__1::__vector_base.1115" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1121" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1122" = type { %"class.std::__1::__hash_table.1123" }
%"class.std::__1::__hash_table.1123" = type <{ %"class.std::__1::unique_ptr.1124", %"class.std::__1::__compressed_pair.1134", %"class.std::__1::__compressed_pair.1139", %"class.std::__1::__compressed_pair.1142", [4 x i8] }>
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126", %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.std::__1::__hash_node_base.1127"** }
%"struct.std::__1::__hash_node_base.1127" = type { %"struct.std::__1::__hash_node_base.1127"* }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.std::__1::__bucket_list_deallocator.1129" }
%"class.std::__1::__bucket_list_deallocator.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"struct.std::__1::__hash_node_base.1127" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.681" = type { %"class.std::__1::__vector_base.682" }
%"class.std::__1::__vector_base.682" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.318" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1146", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1175", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1176", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1146" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1171, %union.anon.1173, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1171 = type { i64 }
%union.anon.1173 = type { i64 }
%"class.std::__1::weak_ptr.1175" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1176" = type { %"class.v8::PersistentBase.1177" }
%"class.v8::PersistentBase.1177" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1147", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1147" = type { %"class.std::__1::__hash_table.1148" }
%"class.std::__1::__hash_table.1148" = type <{ %"class.std::__1::unique_ptr.1149", %"class.std::__1::__compressed_pair.1159", %"class.std::__1::__compressed_pair.1164", %"class.std::__1::__compressed_pair.1167", [4 x i8] }>
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151", %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.std::__1::__hash_node_base.1152"** }
%"struct.std::__1::__hash_node_base.1152" = type { %"struct.std::__1::__hash_node_base.1152"* }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.std::__1::__bucket_list_deallocator.1154" }
%"class.std::__1::__bucket_list_deallocator.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.std::__1::__hash_node_base.1152" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1207", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1207" = type { %"class.std::__1::__compressed_pair.1208" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.967", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.967" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1224" }
%"class.std::__1::unordered_map.1224" = type { %"class.std::__1::__hash_table.1225" }
%"class.std::__1::__hash_table.1225" = type <{ %"class.std::__1::unique_ptr.1226", %"class.std::__1::__compressed_pair.1236", %"class.std::__1::__compressed_pair.1241", %"class.std::__1::__compressed_pair.1244", [4 x i8] }>
%"class.std::__1::unique_ptr.1226" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1228", %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"struct.std::__1::__hash_node_base.1229"** }
%"struct.std::__1::__hash_node_base.1229" = type { %"struct.std::__1::__hash_node_base.1229"* }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.std::__1::__bucket_list_deallocator.1231" }
%"class.std::__1::__bucket_list_deallocator.1231" = type { %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"struct.std::__1::__hash_node_base.1229" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::atomic.1250" = type { %"struct.std::__1::__atomic_base.1251" }
%"struct.std::__1::__atomic_base.1251" = type { %"struct.std::__1::__cxx_atomic_impl.1252" }
%"struct.std::__1::__cxx_atomic_impl.1252" = type { %"struct.std::__1::__cxx_atomic_base_impl.1253" }
%"struct.std::__1::__cxx_atomic_base_impl.1253" = type { %"class.std::__1::vector.1254"* }
%"class.std::__1::vector.1254" = type { %"class.std::__1::__vector_base.1255" }
%"class.std::__1::__vector_base.1255" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1256" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::compiler::JSOperatorBuilder" = type { %"struct.v8::internal::compiler::JSOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::JSOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"struct.v8::internal::compiler::FieldAccess" = type <{ i8, [3 x i8], i32, %"class.v8::internal::MaybeHandle", %"class.v8::internal::MaybeHandle.1261", %"class.v8::internal::compiler::Type", %"class.v8::internal::MachineType", i8, i8, i32, %"struct.v8::internal::compiler::ConstFieldInfo", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::MaybeHandle.1261" = type { i64* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"struct.v8::internal::compiler::ConstFieldInfo" = type { %"class.v8::internal::MaybeHandle.1261" }
%"class.v8::internal::ZoneHandleSet" = type { i64 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1271" }
%"struct.std::__1::pair.1271" = type { %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneHandleSet" }
%"class.v8::internal::ZoneVector.1336" = type { %"class.std::__1::vector.1337" }
%"class.std::__1::vector.1337" = type { %"class.std::__1::__vector_base.1338" }
%"class.std::__1::__vector_base.1338" = type { i64**, i64**, %"class.std::__1::__compressed_pair.1339" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.944", %"struct.std::__1::__compressed_pair_elem.1340" }
%"struct.std::__1::__compressed_pair_elem.1340" = type { %"class.v8::internal::ZoneAllocator.1341" }
%"class.v8::internal::ZoneAllocator.1341" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CheckMapsParameters" = type { %"class.v8::base::Flags.1278", %"class.v8::internal::ZoneHandleSet", %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::base::Flags.1278" = type { i32 }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.1279", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.1279" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.v8::internal::compiler::LoadElimination::AliasStateInfo" = type { %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::MaybeHandle.1261" }
%"struct.v8::internal::compiler::LoadElimination::FieldInfo" = type { %"class.v8::internal::compiler::Node"*, i8, %"class.v8::internal::MaybeHandle", %"struct.v8::internal::compiler::ConstFieldInfo" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::compiler::GrowFastElementsParameters" = type { i8, [7 x i8], %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::ElementsTransition" = type { i8, %"class.v8::internal::Handle.1272", %"class.v8::internal::Handle.1272" }
%"class.v8::internal::Handle.1272" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::array.1357" = type { [3 x %"class.v8::internal::compiler::Node"*] }
%"struct.std::__1::array.1358" = type { [2 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::internal::compiler::MapRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::HeapObjectRef" = type { %"class.v8::internal::compiler::ObjectRef" }
%"class.v8::internal::compiler::ObjectRef" = type { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* }
%"class.v8::internal::compiler::ObjectData" = type opaque
%"class.v8::internal::compiler::JSHeapBroker" = type opaque
%"class.v8::internal::compiler::TypeBase" = type { i32 }
%"class.v8::internal::compiler::HeapConstantType" = type { %"class.v8::internal::compiler::TypeBase", i32, %"class.v8::internal::compiler::HeapObjectRef" }
%"struct.v8::internal::compiler::ElementAccess" = type { i8, i32, %"class.v8::internal::compiler::Type", %"class.v8::internal::MachineType", i8, i32 }
%"class.std::__1::__tree_node.1320" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1321" }
%"struct.std::__1::__value_type.1321" = type { %"struct.std::__1::pair.1262" }
%"struct.std::__1::pair.1262" = type { %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::LoadElimination::FieldInfo" }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.v8::internal::Brief" = type { i64 }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.1288" }
%"class.std::__1::deque.1288" = type { %"class.std::__1::__deque_base.1289" }
%"class.std::__1::__deque_base.1289" = type { %"struct.std::__1::__split_buffer.1290", i64, %"class.std::__1::__compressed_pair.1295" }
%"struct.std::__1::__split_buffer.1290" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292", %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.v8::internal::compiler::Node"*** }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.1294", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1294" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"class.v8::internal::RecyclingZoneAllocator.1297" }
%"class.v8::internal::RecyclingZoneAllocator.1297" = type { %"class.v8::internal::ZoneAllocator.1298", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1298" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneVector.1280" = type { %"class.std::__1::vector.1281" }
%"class.std::__1::vector.1281" = type { %"class.std::__1::__vector_base.1282" }
%"class.std::__1::__vector_base.1282" = type { %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo*, %"class.std::__1::__compressed_pair.1283" }
%struct.TransitionElementsKindInfo = type { %"class.v8::internal::compiler::ElementsTransition", %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284", %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %struct.TransitionElementsKindInfo* }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.v8::internal::ZoneAllocator.1286" }
%"class.v8::internal::ZoneAllocator.1286" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneQueue" = type { %"class.std::__1::queue.1287" }
%"class.std::__1::queue.1287" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set.1299" }
%"class.std::__1::set.1299" = type { %"class.std::__1::__tree.1300" }
%"class.std::__1::__tree.1300" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1301", %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.v8::internal::ZoneAllocator.1303" }
%"class.v8::internal::ZoneAllocator.1303" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__tree_node.1334" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::compiler::Node"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer.1368" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1292", %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"class.v8::internal::RecyclingZoneAllocator"* }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZNK2v88internal8compiler15LoadElimination13AbstractField5MergeEPKS3_PNS0_4ZoneE = comdat any

$_ZN2v88internal4Zone3NewINS0_8compiler15LoadElimination13AbstractFieldEJRPNS3_4NodeERNS4_9FieldInfoERPS1_EEEPT_DpOT0_ = comdat any

$_ZN2v88internal13ZoneHandleSetINS0_3MapEE6insertENS0_6HandleIS2_EEPNS0_4ZoneE = comdat any

$_ZN2v88internal8compiler15LoadEliminationD2Ev = comdat any

$_ZN2v88internal8compiler15LoadEliminationD0Ev = comdat any

$_ZNK2v88internal8compiler15LoadElimination12reducer_nameEv = comdat any

$_ZNSt3__15equalINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIPN2v88internal8compiler4NodeENS5_13ZoneHandleSetINS5_3MapEEEEEPNS_11__tree_nodeISC_PvEElEEEESI_NS_10__equal_toINS_4pairIKS8_SB_EESM_EEEEbT_SO_T0_T1_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE14__assign_multiINS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEEEEvT_SP_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE14__assign_multiINS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEEEEvT_SO_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_ = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@_ZN2v88internal33FLAG_trace_turbo_load_eliminationE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [14 x i8] c" visit #%d:%s\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"#%d:%s\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"  state[%i]: #%d:%s\0A\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"  no state[%i]: #%d:%s\0A\00", align 1
@_ZN2v88internal8compiler15LoadElimination13AbstractState12empty_state_E = hidden constant %"class.v8::internal::compiler::LoadElimination::AbstractState" zeroinitializer, align 8
@.str.8 = private unnamed_addr constant [31 x i8] c"    #%d:%s @ #%d:%s -> #%d:%s\0A\00", align 1
@.str.9 = private unnamed_addr constant [32 x i8] c"    #%d:%s -> #%d:%s [repr=%s]\0A\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"    #\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"     - \00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"   maps:\0A\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"   elements:\0A\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"   field %zu:\0A\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"   const field %zu:\0A\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Temporary scoped zone\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZTVN2v88internal8compiler15LoadEliminationE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::LoadElimination"*)* @_ZN2v88internal8compiler15LoadEliminationD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::LoadElimination"*)* @_ZN2v88internal8compiler15LoadEliminationD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::compiler::LoadElimination"*)* @_ZNK2v88internal8compiler15LoadElimination12reducer_nameEv to i8*), i8* bitcast (void (%"class.v8::internal::compiler::Reducer"*)* @_ZN2v88internal8compiler7Reducer8FinalizeEv to i8*), i8* bitcast (%"class.v8::internal::compiler::Node"* (%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler15LoadElimination6ReduceEPNS1_4NodeE to i8*)] }, align 8
@.str.19 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.21 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.22 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.23 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"LoadElimination\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2v88internal8compiler15LoadElimination12AbstractMapsC1EPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS0_4ZoneE
@_ZN2v88internal8compiler15LoadElimination12AbstractMapsC1EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::Node"*, i64, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::Node"*, i64, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination6ReduceEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = load i8, i8* @_ZN2v88internal33FLAG_trace_turbo_load_eliminationE, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  br i1 %5, label %140, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %140

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %15, i8* %17) #14
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %70

22:                                               ; preds = %12
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #14
  %23 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %23, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %29 = add i64 %28, 32
  %30 = inttoptr i64 %29 to i64*
  br label %32

31:                                               ; preds = %52, %22
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %70

32:                                               ; preds = %27, %52
  %33 = phi %"class.v8::internal::compiler::Operator"* [ %23, %27 ], [ %65, %52 ]
  %34 = phi i64 [ 0, %27 ], [ %64, %52 ]
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #14
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  br label %38

38:                                               ; preds = %36, %32
  %39 = phi %"class.v8::internal::compiler::Operator"* [ %37, %36 ], [ %33, %32 ]
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %39, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = icmp slt i64 %34, %42
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

45:                                               ; preds = %38
  %46 = load i32, i32* %13, align 4
  %47 = and i32 %46, 251658240
  %48 = icmp eq i32 %47, 251658240
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = load i64, i64* %30, align 8
  %51 = add i64 %50, 16
  br label %52

52:                                               ; preds = %45, %49
  %53 = phi i64 [ %51, %49 ], [ %29, %45 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::Node"**
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, i64 %34
  %56 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %56, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 16777215
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %56, i64 0, i32 0
  %61 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %61, i64 0, i32 1
  %63 = load i8*, i8** %62, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i32 %59, i8* %63) #14
  %64 = add nuw nsw i64 %34, 1
  %65 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %65, i64 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = icmp slt i64 %64, %68
  br i1 %69, label %32, label %31

70:                                               ; preds = %31, %12
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #14
  %71 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %71, i64 0, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %140

75:                                               ; preds = %70
  %76 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %77 = add i64 %76, 32
  %78 = inttoptr i64 %77 to i64*
  %79 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %80 to i64*
  %82 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %79 to i64*
  br label %83

83:                                               ; preds = %75, %134
  %84 = phi %"class.v8::internal::compiler::Operator"* [ %71, %75 ], [ %136, %134 ]
  %85 = phi i32 [ 0, %75 ], [ %135, %134 ]
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %84, i64 0, i32 5
  %87 = load i32, i32* %86, align 4
  %88 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %84) #14
  %89 = zext i1 %88 to i32
  %90 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %91 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %90) #14
  %92 = zext i1 %91 to i32
  %93 = add i32 %87, %85
  %94 = add i32 %93, %89
  %95 = add i32 %94, %92
  %96 = load i32, i32* %13, align 4
  %97 = and i32 %96, 251658240
  %98 = icmp eq i32 %97, 251658240
  br i1 %98, label %99, label %102

99:                                               ; preds = %83
  %100 = load i64, i64* %78, align 8
  %101 = add i64 %100, 16
  br label %102

102:                                              ; preds = %83, %99
  %103 = phi i64 [ %101, %99 ], [ %77, %83 ]
  %104 = inttoptr i64 %103 to %"class.v8::internal::compiler::Node"**
  %105 = sext i32 %95 to i64
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 %105
  %107 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %107, i64 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, 16777215
  %111 = zext i32 %110 to i64
  %112 = load i64, i64* %81, align 8
  %113 = load i64, i64* %82, align 8
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 3
  %116 = icmp ugt i64 %115, %111
  br i1 %116, label %122, label %117

117:                                              ; preds = %102
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %107, i64 0, i32 0
  %119 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %119, i64 0, i32 1
  %121 = load i8*, i8** %120, align 8
  br label %132

122:                                              ; preds = %102
  %123 = inttoptr i64 %113 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %123, i64 %111
  %125 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %124, align 8
  %126 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %125, null
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %107, i64 0, i32 0
  %128 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %128, i64 0, i32 1
  %130 = load i8*, i8** %129, align 8
  br i1 %126, label %132, label %131

131:                                              ; preds = %122
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 %85, i32 %110, i8* %130) #14
  tail call void @_ZNK2v88internal8compiler15LoadElimination13AbstractState5PrintEv(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %125)
  br label %134

132:                                              ; preds = %117, %122
  %133 = phi i8* [ %121, %117 ], [ %130, %122 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i32 %85, i32 %110, i8* %133) #14
  br label %134

134:                                              ; preds = %132, %131
  %135 = add nuw nsw i32 %85, 1
  %136 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %136, i64 0, i32 6
  %138 = load i32, i32* %137, align 8
  %139 = icmp slt i32 %135, %138
  br i1 %139, label %83, label %140

140:                                              ; preds = %134, %2, %70, %8
  %141 = phi %"class.v8::internal::compiler::Operator"* [ %71, %70 ], [ %7, %8 ], [ %7, %2 ], [ %136, %134 ]
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %141, i64 0, i32 2
  %143 = load i16, i16* %142, align 8
  switch i16 %143, label %219 [
    i16 57, label %144
    i16 210, label %146
    i16 218, label %148
    i16 224, label %150
    i16 236, label %152
    i16 294, label %154
    i16 230, label %156
    i16 272, label %159
    i16 229, label %162
    i16 271, label %164
    i16 291, label %166
    i16 276, label %168
    i16 36, label %170
    i16 62, label %221
    i16 0, label %172
  ]

144:                                              ; preds = %140
  %145 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination14ReduceMapGuardEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

146:                                              ; preds = %140
  %147 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination15ReduceCheckMapsEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

148:                                              ; preds = %140
  %149 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination17ReduceCompareMapsEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

150:                                              ; preds = %140
  %151 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination32ReduceEnsureWritableFastElementsEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

152:                                              ; preds = %140
  %153 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination27ReduceMaybeGrowFastElementsEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

154:                                              ; preds = %140
  %155 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination28ReduceTransitionElementsKindEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

156:                                              ; preds = %140
  %157 = tail call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %141) #14
  %158 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination15ReduceLoadFieldEPNS1_4NodeERKNS1_11FieldAccessE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1, %"struct.v8::internal::compiler::FieldAccess"* dereferenceable(56) %157)
  br label %221

159:                                              ; preds = %140
  %160 = tail call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %141) #14
  %161 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination16ReduceStoreFieldEPNS1_4NodeERKNS1_11FieldAccessE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1, %"struct.v8::internal::compiler::FieldAccess"* dereferenceable(56) %160)
  br label %221

162:                                              ; preds = %140
  %163 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination17ReduceLoadElementEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

164:                                              ; preds = %140
  %165 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination18ReduceStoreElementEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

166:                                              ; preds = %140
  %167 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination31ReduceTransitionAndStoreElementEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

168:                                              ; preds = %140
  %169 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination23ReduceStoreTypedElementEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

170:                                              ; preds = %140
  %171 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination15ReduceEffectPhiEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

172:                                              ; preds = %140
  %173 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 16777215
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %179 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %173 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = sub i64 %180, %182
  %184 = ashr exact i64 %183, 3
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %186, label %203

186:                                              ; preds = %172
  %187 = inttoptr i64 %182 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %188 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %187, i64 %177
  %189 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %188, align 8
  %190 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %189, @_ZN2v88internal8compiler15LoadElimination13AbstractState12empty_state_E
  br i1 %190, label %221, label %191

191:                                              ; preds = %186
  %192 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %189, null
  br i1 %192, label %203, label %193

193:                                              ; preds = %191
  %194 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull @_ZN2v88internal8compiler15LoadElimination13AbstractState12empty_state_E, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %189) #14
  br i1 %194, label %221, label %195

195:                                              ; preds = %193
  %196 = load i32, i32* %174, align 4
  %197 = load i64, i64* %179, align 8
  %198 = load i64, i64* %181, align 8
  %199 = and i32 %196, 16777215
  %200 = zext i32 %199 to i64
  %201 = sub i64 %197, %198
  %202 = ashr exact i64 %201, 3
  br label %203

203:                                              ; preds = %195, %191, %172
  %204 = phi i64 [ %202, %195 ], [ %184, %191 ], [ %184, %172 ]
  %205 = phi i64 [ %200, %195 ], [ %177, %191 ], [ %177, %172 ]
  %206 = phi i64 [ %198, %195 ], [ %182, %191 ], [ %182, %172 ]
  %207 = icmp ugt i64 %204, %205
  %208 = inttoptr i64 %206 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %207, label %216, label %209

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %173, i64 0, i32 0, i32 0
  %211 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %212 = sub nsw i64 1, %204
  %213 = add nsw i64 %212, %205
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %210, i64 %213, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #14
  %214 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %173, i64 0, i32 0, i32 0, i32 0, i32 0
  %215 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %214, align 8
  br label %216

216:                                              ; preds = %209, %203
  %217 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %208, %203 ], [ %215, %209 ]
  %218 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %217, i64 %205
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZN2v88internal8compiler15LoadElimination13AbstractState12empty_state_E, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %218, align 8
  br label %221

219:                                              ; preds = %140
  %220 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination15ReduceOtherNodeEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %221

221:                                              ; preds = %140, %216, %193, %186, %219, %170, %168, %166, %164, %162, %159, %156, %154, %152, %150, %148, %146, %144
  %222 = phi %"class.v8::internal::compiler::Node"* [ %220, %219 ], [ %171, %170 ], [ %169, %168 ], [ %167, %166 ], [ %165, %164 ], [ %163, %162 ], [ %161, %159 ], [ %158, %156 ], [ %155, %154 ], [ %153, %152 ], [ %151, %150 ], [ %149, %148 ], [ %147, %146 ], [ %145, %144 ], [ %1, %216 ], [ null, %186 ], [ null, %193 ], [ null, %140 ]
  ret %"class.v8::internal::compiler::Node"* %222
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination27AbstractStateForEffectNodes3GetEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %13, %6
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = inttoptr i64 %11 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %16, i64 %6
  %18 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %17, align 8
  br label %19

19:                                               ; preds = %2, %15
  %20 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %18, %15 ], [ null, %2 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler15LoadElimination13AbstractState5PrintEv(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %2, align 8
  %4 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #14
  %6 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %2, align 8
  tail call void @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps5PrintEv(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %6)
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0)) #14
  %12 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %8, align 8
  tail call void @_ZNK2v88internal8compiler15LoadElimination16AbstractElements5PrintEv(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* %12)
  br label %13

13:                                               ; preds = %7, %11
  br label %14

14:                                               ; preds = %13, %80
  %15 = phi i64 [ %81, %80 ], [ 0, %13 ]
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 1, i32 0, i64 %15
  %17 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %16, align 8
  %18 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %17, null
  br i1 %18, label %80, label %19

19:                                               ; preds = %14
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i64 %15) #14
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %21, %22
  br i1 %23, label %80, label %24

24:                                               ; preds = %19, %77
  %25 = phi %"class.std::__1::__tree_end_node"* [ %78, %77 ], [ %21, %19 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.v8::internal::compiler::Node"**
  %28 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.v8::internal::compiler::Node"**
  %31 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 6
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to i8*
  %34 = load i8, i8* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %28, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 16777215
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %28, i64 0, i32 0
  %39 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %39, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %31, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 16777215
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %31, i64 0, i32 0
  %46 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %46, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = tail call i8* @_ZN2v88internal19MachineReprToStringENS0_21MachineRepresentationE(i8 zeroext %34) #14
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0), i32 %37, i8* %41, i32 %44, i8* %48, i8* %49) #14
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %61

53:                                               ; preds = %24
  %54 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 2
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_end_node"**
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, %54
  br i1 %60, label %77, label %68

61:                                               ; preds = %24, %61
  %62 = phi %"class.std::__1::__tree_node_base"* [ %64, %61 ], [ %51, %24 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %61

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  br label %77

68:                                               ; preds = %53, %68
  %69 = phi %"class.std::__1::__tree_end_node"** [ %72, %68 ], [ %56, %53 ]
  %70 = bitcast %"class.std::__1::__tree_end_node"** %69 to %"class.std::__1::__tree_node_base"**
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 2
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, %71
  br i1 %76, label %77, label %68

77:                                               ; preds = %68, %66, %53
  %78 = phi %"class.std::__1::__tree_end_node"* [ %67, %66 ], [ %57, %53 ], [ %73, %68 ]
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %78, %22
  br i1 %79, label %80, label %24

80:                                               ; preds = %77, %19, %14
  %81 = add nuw nsw i64 %15, 1
  %82 = icmp eq i64 %81, 32
  br i1 %82, label %84, label %14

83:                                               ; preds = %150
  ret void

84:                                               ; preds = %80, %150
  %85 = phi i64 [ %151, %150 ], [ 0, %80 ]
  %86 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 %85
  %87 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %86, align 8
  %88 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %87, null
  br i1 %88, label %150, label %89

89:                                               ; preds = %84
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i64 %85) #14
  %90 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %93 = icmp eq %"class.std::__1::__tree_end_node"* %91, %92
  br i1 %93, label %150, label %94

94:                                               ; preds = %89, %147
  %95 = phi %"class.std::__1::__tree_end_node"* [ %148, %147 ], [ %91, %89 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 4
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to %"class.v8::internal::compiler::Node"**
  %98 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 5
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to %"class.v8::internal::compiler::Node"**
  %101 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 6
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to i8*
  %104 = load i8, i8* %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %98, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 16777215
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %98, i64 0, i32 0
  %109 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %109, i64 0, i32 1
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %101, i64 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 16777215
  %115 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %101, i64 0, i32 0
  %116 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %116, i64 0, i32 1
  %118 = load i8*, i8** %117, align 8
  %119 = tail call i8* @_ZN2v88internal19MachineReprToStringENS0_21MachineRepresentationE(i8 zeroext %104) #14
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0), i32 %107, i8* %111, i32 %114, i8* %118, i8* %119) #14
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 1, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, null
  br i1 %122, label %123, label %131

123:                                              ; preds = %94
  %124 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_node_base"*
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 2
  %126 = bitcast %"class.std::__1::__tree_end_node"* %125 to %"class.std::__1::__tree_end_node"**
  %127 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, %124
  br i1 %130, label %147, label %138

131:                                              ; preds = %94, %131
  %132 = phi %"class.std::__1::__tree_node_base"* [ %134, %131 ], [ %121, %94 ]
  %133 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %136, label %131

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %132, i64 0, i32 0
  br label %147

138:                                              ; preds = %123, %138
  %139 = phi %"class.std::__1::__tree_end_node"** [ %142, %138 ], [ %126, %123 ]
  %140 = bitcast %"class.std::__1::__tree_end_node"** %139 to %"class.std::__1::__tree_node_base"**
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %141, i64 0, i32 2
  %143 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %143, i64 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, %141
  br i1 %146, label %147, label %138

147:                                              ; preds = %138, %136, %123
  %148 = phi %"class.std::__1::__tree_end_node"* [ %137, %136 ], [ %127, %123 ], [ %143, %138 ]
  %149 = icmp eq %"class.std::__1::__tree_end_node"* %148, %92
  br i1 %149, label %150, label %94

150:                                              ; preds = %147, %89, %84
  %151 = add nuw nsw i64 %85, 1
  %152 = icmp eq i64 %151, 32
  br i1 %152, label %83, label %84
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination14ReduceMapGuardEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = tail call dereferenceable(8) %"class.v8::internal::ZoneHandleSet"* @_ZN2v88internal8compiler14MapGuardMapsOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #14
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 251658240
  %16 = icmp eq i32 %15, 251658240
  %17 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %18 = add i64 %17, 32
  br i1 %16, label %19, label %23

19:                                               ; preds = %12
  %20 = inttoptr i64 %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 16
  br label %23

23:                                               ; preds = %12, %19
  %24 = phi i64 [ %22, %19 ], [ %18, %12 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"**
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 6
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

31:                                               ; preds = %23
  %32 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %7) #14
  %33 = zext i1 %32 to i32
  %34 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %35 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %34) #14
  %36 = zext i1 %35 to i32
  %37 = add nuw i32 %9, %33
  %38 = add nuw i32 %37, %36
  %39 = load i32, i32* %13, align 4
  %40 = and i32 %39, 251658240
  %41 = icmp eq i32 %40, 251658240
  br i1 %41, label %42, label %46

42:                                               ; preds = %31
  %43 = inttoptr i64 %18 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 16
  br label %46

46:                                               ; preds = %31, %42
  %47 = phi i64 [ %45, %42 ], [ %18, %31 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::Node"**
  %49 = sext i32 %38 to i64
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, i64 %49
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %51, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 16777215
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %52 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = ashr exact i64 %62, 3
  %64 = icmp ugt i64 %63, %56
  br i1 %64, label %65, label %293

65:                                               ; preds = %46
  %66 = inttoptr i64 %61 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %66, i64 %56
  %68 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %67, align 8
  %69 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %68, null
  br i1 %69, label %293, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %68, i64 0, i32 3
  %72 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %71, align 8
  %73 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %72, null
  br i1 %73, label %211, label %74

74:                                               ; preds = %70, %110
  %75 = phi %"class.v8::internal::compiler::Node"* [ %113, %110 ], [ %26, %70 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %75, i64 0, i32 0
  %77 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %77, i64 0, i32 2
  %79 = load i16, i16* %78, align 8
  switch i16 %79, label %114 [
    i16 207, label %80
    i16 40, label %80
    i16 59, label %80
  ]

80:                                               ; preds = %74, %74, %74
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %75, i64 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = lshr i32 %82, 24
  %84 = and i32 %83, 15
  %85 = icmp eq i32 %84, 15
  %86 = ptrtoint %"class.v8::internal::compiler::Node"* %75 to i64
  %87 = add i64 %86, 32
  br i1 %85, label %88, label %95

88:                                               ; preds = %80
  %89 = inttoptr i64 %87 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %90 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %89, align 8
  %91 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %90 to i64
  %92 = add i64 %91, 16
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 8
  br label %95

95:                                               ; preds = %88, %80
  %96 = phi i32 [ %94, %88 ], [ %84, %80 ]
  %97 = phi i64 [ %92, %88 ], [ %87, %80 ]
  %98 = icmp sgt i32 %96, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = inttoptr i64 %97 to %"class.v8::internal::compiler::Node"**
  %101 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, align 8
  %102 = icmp eq %"class.v8::internal::compiler::Node"* %101, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %99, %95
  %104 = and i32 %82, 251658240
  %105 = icmp eq i32 %104, 251658240
  br i1 %105, label %106, label %110

106:                                              ; preds = %103
  %107 = inttoptr i64 %87 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 16
  br label %110

110:                                              ; preds = %106, %103
  %111 = phi i64 [ %109, %106 ], [ %87, %103 ]
  %112 = inttoptr i64 %111 to %"class.v8::internal::compiler::Node"**
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  br label %74

114:                                              ; preds = %99, %74
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to %"class.std::__1::__tree_node"**
  %117 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node"* %117, null
  br i1 %118, label %211, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.std::__1::__tree_end_node"* [ %130, %119 ], [ %115, %114 ]
  %121 = phi %"class.std::__1::__tree_node"* [ %131, %119 ], [ %117, %114 ]
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 1, i32 0, i32 0
  %123 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, align 8
  %124 = icmp ult %"class.v8::internal::compiler::Node"* %123, %75
  %125 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 1
  %126 = bitcast %"class.std::__1::__tree_node_base"** %125 to %"class.std::__1::__tree_node"**
  %127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::__tree_node"* %121 to %"class.std::__1::__tree_node"**
  %129 = select i1 %124, %"class.std::__1::__tree_node"** %126, %"class.std::__1::__tree_node"** %128
  %130 = select i1 %124, %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"* %127
  %131 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %129, align 8
  %132 = icmp eq %"class.std::__1::__tree_node"* %131, null
  br i1 %132, label %133, label %119

133:                                              ; preds = %119
  %134 = icmp eq %"class.std::__1::__tree_end_node"* %130, %115
  br i1 %134, label %211, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 4
  %137 = bitcast %"class.std::__1::__tree_end_node"* %136 to %"class.v8::internal::compiler::Node"**
  %138 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, align 8
  %139 = icmp ult %"class.v8::internal::compiler::Node"* %75, %138
  br i1 %139, label %211, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 5
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %6, i64 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, %143
  %147 = inttoptr i64 %143 to i64*
  br i1 %146, label %293, label %148

148:                                              ; preds = %140
  %149 = icmp eq i64 %145, 1
  br i1 %149, label %211, label %150

150:                                              ; preds = %148
  %151 = icmp eq i64 %143, 1
  br i1 %151, label %293, label %152

152:                                              ; preds = %150
  %153 = and i64 %145, 3
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %211, label %155

155:                                              ; preds = %152
  %156 = add i64 %145, -2
  %157 = inttoptr i64 %156 to %"class.v8::internal::ZoneVector.1336"*
  %158 = and i64 %143, 3
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %179, label %160

160:                                              ; preds = %155
  %161 = add i64 %143, -2
  %162 = inttoptr i64 %161 to %"class.v8::internal::ZoneVector.1336"*
  %163 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %162, i64 0, i32 0, i32 0, i32 1
  %164 = bitcast i64*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = inttoptr i64 %161 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %165, %167
  br i1 %168, label %293, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %157, i64 0, i32 0, i32 0, i32 0
  %171 = load i64**, i64*** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %157, i64 0, i32 0, i32 0, i32 1
  %173 = load i64**, i64*** %172, align 8
  %174 = icmp eq i64** %171, %173
  br i1 %174, label %211, label %175

175:                                              ; preds = %169
  %176 = inttoptr i64 %167 to i64**
  %177 = sub i64 %165, %167
  %178 = ashr exact i64 %177, 3
  br label %194

179:                                              ; preds = %155
  %180 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %157, i64 0, i32 0, i32 0, i32 0
  %181 = load i64**, i64*** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %157, i64 0, i32 0, i32 0, i32 1
  %183 = load i64**, i64*** %182, align 8
  %184 = icmp eq i64** %181, %183
  br i1 %184, label %208, label %185

185:                                              ; preds = %179, %189
  %186 = phi i64** [ %190, %189 ], [ %181, %179 ]
  %187 = load i64*, i64** %186, align 8
  %188 = icmp eq i64* %187, %147
  br i1 %188, label %208, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds i64*, i64** %186, i64 1
  %191 = icmp eq i64** %190, %183
  br i1 %191, label %211, label %185

192:                                              ; preds = %205
  %193 = icmp ult i64 %207, %178
  br i1 %193, label %194, label %293

194:                                              ; preds = %192, %175
  %195 = phi i64 [ %207, %192 ], [ 0, %175 ]
  %196 = getelementptr inbounds i64*, i64** %176, i64 %195
  %197 = load i64*, i64** %196, align 8
  br label %198

198:                                              ; preds = %202, %194
  %199 = phi i64** [ %171, %194 ], [ %203, %202 ]
  %200 = load i64*, i64** %199, align 8
  %201 = icmp eq i64* %200, %197
  br i1 %201, label %205, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds i64*, i64** %199, i64 1
  %204 = icmp eq i64** %203, %173
  br i1 %204, label %211, label %198

205:                                              ; preds = %198
  %206 = icmp eq i64** %199, %173
  %207 = add nuw i64 %195, 1
  br i1 %206, label %211, label %192

208:                                              ; preds = %185, %179
  %209 = phi i64** [ %181, %179 ], [ %186, %185 ]
  %210 = icmp eq i64** %209, %183
  br i1 %210, label %211, label %293

211:                                              ; preds = %205, %202, %189, %208, %169, %152, %148, %135, %133, %114, %70
  %212 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %6, i64 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %215 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %215, i64 0, i32 2
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %215, i64 0, i32 3
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 %219, %217
  %221 = icmp ult i64 %220, 528
  br i1 %221, label %222, label %224, !prof !4

222:                                              ; preds = %211
  %223 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %215, i64 528) #14
  br label %226

224:                                              ; preds = %211
  %225 = add i64 %217, 528
  store i64 %225, i64* %216, align 8
  br label %226

226:                                              ; preds = %224, %222
  %227 = phi i64 [ %223, %222 ], [ %217, %224 ]
  %228 = inttoptr i64 %227 to i8*
  %229 = inttoptr i64 %227 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %230 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* nonnull align 8 %230, i64 528, i1 false) #14
  %231 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %229, i64 0, i32 3
  %232 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %231, align 8
  %233 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %232, null
  br i1 %233, label %236, label %234

234:                                              ; preds = %226
  %235 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %232, %"class.v8::internal::compiler::Node"* %26, i64 %213, %"class.v8::internal::Zone"* %215) #14
  br label %248

236:                                              ; preds = %226
  %237 = load i64, i64* %216, align 8
  %238 = load i64, i64* %218, align 8
  %239 = sub i64 %238, %237
  %240 = icmp ult i64 %239, 32
  br i1 %240, label %241, label %243, !prof !4

241:                                              ; preds = %236
  %242 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %215, i64 32) #14
  br label %245

243:                                              ; preds = %236
  %244 = add i64 %237, 32
  store i64 %244, i64* %216, align 8
  br label %245

245:                                              ; preds = %243, %241
  %246 = phi i64 [ %242, %241 ], [ %237, %243 ]
  %247 = inttoptr i64 %246 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  tail call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %247, %"class.v8::internal::compiler::Node"* %26, i64 %213, %"class.v8::internal::Zone"* %215) #14
  br label %248

248:                                              ; preds = %234, %245
  %249 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %247, %245 ], [ %235, %234 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %249, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %231, align 8
  %250 = load i32, i32* %13, align 4
  %251 = and i32 %250, 16777215
  %252 = zext i32 %251 to i64
  %253 = load i64, i64* %58, align 8
  %254 = load i64, i64* %60, align 8
  %255 = sub i64 %253, %254
  %256 = ashr exact i64 %255, 3
  %257 = icmp ugt i64 %256, %252
  br i1 %257, label %258, label %262

258:                                              ; preds = %248
  %259 = inttoptr i64 %254 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %260 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %259, i64 %252
  %261 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %260, align 8
  br label %262

262:                                              ; preds = %258, %248
  %263 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %261, %258 ], [ null, %248 ]
  %264 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %263, %229
  br i1 %264, label %293, label %265

265:                                              ; preds = %262
  %266 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %263, null
  br i1 %266, label %277, label %267

267:                                              ; preds = %265
  %268 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %229, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %263) #14
  br i1 %268, label %293, label %269

269:                                              ; preds = %267
  %270 = load i32, i32* %13, align 4
  %271 = load i64, i64* %58, align 8
  %272 = load i64, i64* %60, align 8
  %273 = and i32 %270, 16777215
  %274 = zext i32 %273 to i64
  %275 = sub i64 %271, %272
  %276 = ashr exact i64 %275, 3
  br label %277

277:                                              ; preds = %269, %265
  %278 = phi i64 [ %276, %269 ], [ %256, %265 ]
  %279 = phi i64 [ %274, %269 ], [ %252, %265 ]
  %280 = phi i64 [ %272, %269 ], [ %254, %265 ]
  %281 = icmp ugt i64 %278, %279
  %282 = inttoptr i64 %280 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %281, label %290, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %52, i64 0, i32 0, i32 0
  %285 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %285) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %286 = sub nsw i64 1, %278
  %287 = add nsw i64 %286, %279
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %284, i64 %287, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %285) #14
  %288 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %289 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %288, align 8
  br label %290

290:                                              ; preds = %283, %277
  %291 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %282, %277 ], [ %289, %283 ]
  %292 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %291, i64 %279
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %229, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %292, align 8
  br label %293

293:                                              ; preds = %192, %208, %160, %150, %140, %46, %262, %267, %290, %65
  %294 = phi %"class.v8::internal::compiler::Node"* [ null, %65 ], [ %51, %208 ], [ %1, %290 ], [ null, %262 ], [ null, %267 ], [ null, %46 ], [ %51, %140 ], [ %51, %150 ], [ %51, %160 ], [ %51, %192 ]
  ret %"class.v8::internal::compiler::Node"* %294
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination15ReduceCheckMapsEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = tail call dereferenceable(32) %"class.v8::internal::compiler::CheckMapsParameters"* @_ZN2v88internal8compiler21CheckMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #14
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CheckMapsParameters", %"class.v8::internal::compiler::CheckMapsParameters"* %6, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 251658240
  %17 = icmp eq i32 %16, 251658240
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %19 = add i64 %18, 32
  br i1 %17, label %20, label %24

20:                                               ; preds = %13
  %21 = inttoptr i64 %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 16
  br label %24

24:                                               ; preds = %13, %20
  %25 = phi i64 [ %23, %20 ], [ %19, %13 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %27 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %24
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

32:                                               ; preds = %24
  %33 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #14
  %34 = zext i1 %33 to i32
  %35 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %36 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %35) #14
  %37 = zext i1 %36 to i32
  %38 = add nuw i32 %10, %34
  %39 = add nuw i32 %38, %37
  %40 = load i32, i32* %14, align 4
  %41 = and i32 %40, 251658240
  %42 = icmp eq i32 %41, 251658240
  br i1 %42, label %43, label %47

43:                                               ; preds = %32
  %44 = inttoptr i64 %19 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 16
  br label %47

47:                                               ; preds = %32, %43
  %48 = phi i64 [ %46, %43 ], [ %19, %32 ]
  %49 = inttoptr i64 %48 to %"class.v8::internal::compiler::Node"**
  %50 = sext i32 %39 to i64
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, i64 %50
  %52 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %52, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777215
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %53 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp ugt i64 %64, %57
  br i1 %65, label %66, label %294

66:                                               ; preds = %47
  %67 = inttoptr i64 %62 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %67, i64 %57
  %69 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %68, align 8
  %70 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %69, null
  br i1 %70, label %294, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %69, i64 0, i32 3
  %73 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %72, align 8
  %74 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %73, null
  br i1 %74, label %212, label %75

75:                                               ; preds = %71, %111
  %76 = phi %"class.v8::internal::compiler::Node"* [ %114, %111 ], [ %27, %71 ]
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %76, i64 0, i32 0
  %78 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %78, i64 0, i32 2
  %80 = load i16, i16* %79, align 8
  switch i16 %80, label %115 [
    i16 207, label %81
    i16 40, label %81
    i16 59, label %81
  ]

81:                                               ; preds = %75, %75, %75
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %76, i64 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = lshr i32 %83, 24
  %85 = and i32 %84, 15
  %86 = icmp eq i32 %85, 15
  %87 = ptrtoint %"class.v8::internal::compiler::Node"* %76 to i64
  %88 = add i64 %87, 32
  br i1 %86, label %89, label %96

89:                                               ; preds = %81
  %90 = inttoptr i64 %88 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %91 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %90, align 8
  %92 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %91 to i64
  %93 = add i64 %92, 16
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %91, i64 0, i32 1
  %95 = load i32, i32* %94, align 8
  br label %96

96:                                               ; preds = %89, %81
  %97 = phi i32 [ %95, %89 ], [ %85, %81 ]
  %98 = phi i64 [ %93, %89 ], [ %88, %81 ]
  %99 = icmp sgt i32 %97, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %96
  %101 = inttoptr i64 %98 to %"class.v8::internal::compiler::Node"**
  %102 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, align 8
  %103 = icmp eq %"class.v8::internal::compiler::Node"* %102, null
  br i1 %103, label %115, label %104

104:                                              ; preds = %100, %96
  %105 = and i32 %83, 251658240
  %106 = icmp eq i32 %105, 251658240
  br i1 %106, label %107, label %111

107:                                              ; preds = %104
  %108 = inttoptr i64 %88 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, 16
  br label %111

111:                                              ; preds = %107, %104
  %112 = phi i64 [ %110, %107 ], [ %88, %104 ]
  %113 = inttoptr i64 %112 to %"class.v8::internal::compiler::Node"**
  %114 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %113, align 8
  br label %75

115:                                              ; preds = %100, %75
  %116 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %117 = bitcast %"class.std::__1::__tree_end_node"* %116 to %"class.std::__1::__tree_node"**
  %118 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node"* %118, null
  br i1 %119, label %212, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.std::__1::__tree_end_node"* [ %131, %120 ], [ %116, %115 ]
  %122 = phi %"class.std::__1::__tree_node"* [ %132, %120 ], [ %118, %115 ]
  %123 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 1, i32 0, i32 0
  %124 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, align 8
  %125 = icmp ult %"class.v8::internal::compiler::Node"* %124, %76
  %126 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 0, i32 1
  %127 = bitcast %"class.std::__1::__tree_node_base"** %126 to %"class.std::__1::__tree_node"**
  %128 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 0, i32 0
  %129 = bitcast %"class.std::__1::__tree_node"* %122 to %"class.std::__1::__tree_node"**
  %130 = select i1 %125, %"class.std::__1::__tree_node"** %127, %"class.std::__1::__tree_node"** %129
  %131 = select i1 %125, %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"* %128
  %132 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %130, align 8
  %133 = icmp eq %"class.std::__1::__tree_node"* %132, null
  br i1 %133, label %134, label %120

134:                                              ; preds = %120
  %135 = icmp eq %"class.std::__1::__tree_end_node"* %131, %116
  br i1 %135, label %212, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 4
  %138 = bitcast %"class.std::__1::__tree_end_node"* %137 to %"class.v8::internal::compiler::Node"**
  %139 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, align 8
  %140 = icmp ult %"class.v8::internal::compiler::Node"* %76, %139
  br i1 %140, label %212, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 5
  %143 = bitcast %"class.std::__1::__tree_end_node"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %7, i64 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %146, %144
  %148 = inttoptr i64 %144 to i64*
  br i1 %147, label %294, label %149

149:                                              ; preds = %141
  %150 = icmp eq i64 %146, 1
  br i1 %150, label %212, label %151

151:                                              ; preds = %149
  %152 = icmp eq i64 %144, 1
  br i1 %152, label %294, label %153

153:                                              ; preds = %151
  %154 = and i64 %146, 3
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %212, label %156

156:                                              ; preds = %153
  %157 = add i64 %146, -2
  %158 = inttoptr i64 %157 to %"class.v8::internal::ZoneVector.1336"*
  %159 = and i64 %144, 3
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %180, label %161

161:                                              ; preds = %156
  %162 = add i64 %144, -2
  %163 = inttoptr i64 %162 to %"class.v8::internal::ZoneVector.1336"*
  %164 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %163, i64 0, i32 0, i32 0, i32 1
  %165 = bitcast i64*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = inttoptr i64 %162 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = icmp eq i64 %166, %168
  br i1 %169, label %294, label %170

170:                                              ; preds = %161
  %171 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %158, i64 0, i32 0, i32 0, i32 0
  %172 = load i64**, i64*** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %158, i64 0, i32 0, i32 0, i32 1
  %174 = load i64**, i64*** %173, align 8
  %175 = icmp eq i64** %172, %174
  br i1 %175, label %212, label %176

176:                                              ; preds = %170
  %177 = inttoptr i64 %168 to i64**
  %178 = sub i64 %166, %168
  %179 = ashr exact i64 %178, 3
  br label %195

180:                                              ; preds = %156
  %181 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %158, i64 0, i32 0, i32 0, i32 0
  %182 = load i64**, i64*** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %158, i64 0, i32 0, i32 0, i32 1
  %184 = load i64**, i64*** %183, align 8
  %185 = icmp eq i64** %182, %184
  br i1 %185, label %209, label %186

186:                                              ; preds = %180, %190
  %187 = phi i64** [ %191, %190 ], [ %182, %180 ]
  %188 = load i64*, i64** %187, align 8
  %189 = icmp eq i64* %188, %148
  br i1 %189, label %209, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds i64*, i64** %187, i64 1
  %192 = icmp eq i64** %191, %184
  br i1 %192, label %212, label %186

193:                                              ; preds = %206
  %194 = icmp ult i64 %208, %179
  br i1 %194, label %195, label %294

195:                                              ; preds = %193, %176
  %196 = phi i64 [ %208, %193 ], [ 0, %176 ]
  %197 = getelementptr inbounds i64*, i64** %177, i64 %196
  %198 = load i64*, i64** %197, align 8
  br label %199

199:                                              ; preds = %203, %195
  %200 = phi i64** [ %172, %195 ], [ %204, %203 ]
  %201 = load i64*, i64** %200, align 8
  %202 = icmp eq i64* %201, %198
  br i1 %202, label %206, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds i64*, i64** %200, i64 1
  %205 = icmp eq i64** %204, %174
  br i1 %205, label %212, label %199

206:                                              ; preds = %199
  %207 = icmp eq i64** %200, %174
  %208 = add nuw i64 %196, 1
  br i1 %207, label %212, label %193

209:                                              ; preds = %186, %180
  %210 = phi i64** [ %182, %180 ], [ %187, %186 ]
  %211 = icmp eq i64** %210, %184
  br i1 %211, label %212, label %294

212:                                              ; preds = %206, %203, %190, %209, %170, %153, %149, %136, %134, %115, %71
  %213 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %7, i64 0, i32 0
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %216 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %215, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %216, i64 0, i32 2
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %216, i64 0, i32 3
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 %220, %218
  %222 = icmp ult i64 %221, 528
  br i1 %222, label %223, label %225, !prof !4

223:                                              ; preds = %212
  %224 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %216, i64 528) #14
  br label %227

225:                                              ; preds = %212
  %226 = add i64 %218, 528
  store i64 %226, i64* %217, align 8
  br label %227

227:                                              ; preds = %225, %223
  %228 = phi i64 [ %224, %223 ], [ %218, %225 ]
  %229 = inttoptr i64 %228 to i8*
  %230 = inttoptr i64 %228 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %231 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* nonnull align 8 %231, i64 528, i1 false) #14
  %232 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %230, i64 0, i32 3
  %233 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %232, align 8
  %234 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %227
  %236 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %233, %"class.v8::internal::compiler::Node"* %27, i64 %214, %"class.v8::internal::Zone"* %216) #14
  br label %249

237:                                              ; preds = %227
  %238 = load i64, i64* %217, align 8
  %239 = load i64, i64* %219, align 8
  %240 = sub i64 %239, %238
  %241 = icmp ult i64 %240, 32
  br i1 %241, label %242, label %244, !prof !4

242:                                              ; preds = %237
  %243 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %216, i64 32) #14
  br label %246

244:                                              ; preds = %237
  %245 = add i64 %238, 32
  store i64 %245, i64* %217, align 8
  br label %246

246:                                              ; preds = %244, %242
  %247 = phi i64 [ %243, %242 ], [ %238, %244 ]
  %248 = inttoptr i64 %247 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  tail call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %248, %"class.v8::internal::compiler::Node"* %27, i64 %214, %"class.v8::internal::Zone"* %216) #14
  br label %249

249:                                              ; preds = %235, %246
  %250 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %248, %246 ], [ %236, %235 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %250, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %232, align 8
  %251 = load i32, i32* %14, align 4
  %252 = and i32 %251, 16777215
  %253 = zext i32 %252 to i64
  %254 = load i64, i64* %59, align 8
  %255 = load i64, i64* %61, align 8
  %256 = sub i64 %254, %255
  %257 = ashr exact i64 %256, 3
  %258 = icmp ugt i64 %257, %253
  br i1 %258, label %259, label %263

259:                                              ; preds = %249
  %260 = inttoptr i64 %255 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %261 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %260, i64 %253
  %262 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %261, align 8
  br label %263

263:                                              ; preds = %259, %249
  %264 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %262, %259 ], [ null, %249 ]
  %265 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %264, %230
  br i1 %265, label %294, label %266

266:                                              ; preds = %263
  %267 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %264, null
  br i1 %267, label %278, label %268

268:                                              ; preds = %266
  %269 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %230, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %264) #14
  br i1 %269, label %294, label %270

270:                                              ; preds = %268
  %271 = load i32, i32* %14, align 4
  %272 = load i64, i64* %59, align 8
  %273 = load i64, i64* %61, align 8
  %274 = and i32 %271, 16777215
  %275 = zext i32 %274 to i64
  %276 = sub i64 %272, %273
  %277 = ashr exact i64 %276, 3
  br label %278

278:                                              ; preds = %270, %266
  %279 = phi i64 [ %277, %270 ], [ %257, %266 ]
  %280 = phi i64 [ %275, %270 ], [ %253, %266 ]
  %281 = phi i64 [ %273, %270 ], [ %255, %266 ]
  %282 = icmp ugt i64 %279, %280
  %283 = inttoptr i64 %281 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %282, label %291, label %284

284:                                              ; preds = %278
  %285 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %53, i64 0, i32 0, i32 0
  %286 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %287 = sub nsw i64 1, %279
  %288 = add nsw i64 %287, %280
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %285, i64 %288, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #14
  %289 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %290 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %289, align 8
  br label %291

291:                                              ; preds = %284, %278
  %292 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %283, %278 ], [ %290, %284 ]
  %293 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %292, i64 %280
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %230, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %293, align 8
  br label %294

294:                                              ; preds = %193, %209, %161, %151, %141, %47, %263, %268, %291, %66
  %295 = phi %"class.v8::internal::compiler::Node"* [ null, %66 ], [ %52, %209 ], [ %1, %291 ], [ null, %263 ], [ null, %268 ], [ null, %47 ], [ %52, %141 ], [ %52, %151 ], [ %52, %161 ], [ %52, %193 ]
  ret %"class.v8::internal::compiler::Node"* %295
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination17ReduceCompareMapsEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = tail call dereferenceable(8) %"class.v8::internal::ZoneHandleSet"* @_ZN2v88internal8compiler23CompareMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #14
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 251658240
  %16 = icmp eq i32 %15, 251658240
  %17 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %18 = add i64 %17, 32
  br i1 %16, label %19, label %23

19:                                               ; preds = %12
  %20 = inttoptr i64 %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 16
  br label %23

23:                                               ; preds = %12, %19
  %24 = phi i64 [ %22, %19 ], [ %18, %12 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"**
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 6
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

31:                                               ; preds = %23
  %32 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %7) #14
  %33 = zext i1 %32 to i32
  %34 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %35 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %34) #14
  %36 = zext i1 %35 to i32
  %37 = add nuw i32 %9, %33
  %38 = add nuw i32 %37, %36
  %39 = load i32, i32* %13, align 4
  %40 = and i32 %39, 251658240
  %41 = icmp eq i32 %40, 251658240
  br i1 %41, label %42, label %46

42:                                               ; preds = %31
  %43 = inttoptr i64 %18 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 16
  br label %46

46:                                               ; preds = %31, %42
  %47 = phi i64 [ %45, %42 ], [ %18, %31 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::Node"**
  %49 = sext i32 %38 to i64
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, i64 %49
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %51, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 16777215
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %52 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = ashr exact i64 %62, 3
  %64 = icmp ugt i64 %63, %56
  br i1 %64, label %65, label %259

65:                                               ; preds = %46
  %66 = inttoptr i64 %61 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %66, i64 %56
  %68 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %67, align 8
  %69 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %68, null
  br i1 %69, label %259, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %68, i64 0, i32 3
  %72 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %71, align 8
  %73 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %72, null
  br i1 %73, label %221, label %74

74:                                               ; preds = %70, %110
  %75 = phi %"class.v8::internal::compiler::Node"* [ %113, %110 ], [ %26, %70 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %75, i64 0, i32 0
  %77 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %77, i64 0, i32 2
  %79 = load i16, i16* %78, align 8
  switch i16 %79, label %114 [
    i16 207, label %80
    i16 40, label %80
    i16 59, label %80
  ]

80:                                               ; preds = %74, %74, %74
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %75, i64 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = lshr i32 %82, 24
  %84 = and i32 %83, 15
  %85 = icmp eq i32 %84, 15
  %86 = ptrtoint %"class.v8::internal::compiler::Node"* %75 to i64
  %87 = add i64 %86, 32
  br i1 %85, label %88, label %95

88:                                               ; preds = %80
  %89 = inttoptr i64 %87 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %90 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %89, align 8
  %91 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %90 to i64
  %92 = add i64 %91, 16
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 8
  br label %95

95:                                               ; preds = %88, %80
  %96 = phi i32 [ %94, %88 ], [ %84, %80 ]
  %97 = phi i64 [ %92, %88 ], [ %87, %80 ]
  %98 = icmp sgt i32 %96, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = inttoptr i64 %97 to %"class.v8::internal::compiler::Node"**
  %101 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, align 8
  %102 = icmp eq %"class.v8::internal::compiler::Node"* %101, null
  br i1 %102, label %114, label %103

103:                                              ; preds = %99, %95
  %104 = and i32 %82, 251658240
  %105 = icmp eq i32 %104, 251658240
  br i1 %105, label %106, label %110

106:                                              ; preds = %103
  %107 = inttoptr i64 %87 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 16
  br label %110

110:                                              ; preds = %106, %103
  %111 = phi i64 [ %109, %106 ], [ %87, %103 ]
  %112 = inttoptr i64 %111 to %"class.v8::internal::compiler::Node"**
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  br label %74

114:                                              ; preds = %99, %74
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to %"class.std::__1::__tree_node"**
  %117 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node"* %117, null
  br i1 %118, label %221, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.std::__1::__tree_end_node"* [ %130, %119 ], [ %115, %114 ]
  %121 = phi %"class.std::__1::__tree_node"* [ %131, %119 ], [ %117, %114 ]
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 1, i32 0, i32 0
  %123 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, align 8
  %124 = icmp ult %"class.v8::internal::compiler::Node"* %123, %75
  %125 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 1
  %126 = bitcast %"class.std::__1::__tree_node_base"** %125 to %"class.std::__1::__tree_node"**
  %127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %121, i64 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::__tree_node"* %121 to %"class.std::__1::__tree_node"**
  %129 = select i1 %124, %"class.std::__1::__tree_node"** %126, %"class.std::__1::__tree_node"** %128
  %130 = select i1 %124, %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"* %127
  %131 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %129, align 8
  %132 = icmp eq %"class.std::__1::__tree_node"* %131, null
  br i1 %132, label %133, label %119

133:                                              ; preds = %119
  %134 = icmp eq %"class.std::__1::__tree_end_node"* %130, %115
  br i1 %134, label %221, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 4
  %137 = bitcast %"class.std::__1::__tree_end_node"* %136 to %"class.v8::internal::compiler::Node"**
  %138 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, align 8
  %139 = icmp ult %"class.v8::internal::compiler::Node"* %75, %138
  br i1 %139, label %221, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 5
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %6, i64 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, %143
  %147 = inttoptr i64 %143 to i64*
  br i1 %146, label %211, label %148

148:                                              ; preds = %140
  %149 = icmp eq i64 %145, 1
  br i1 %149, label %221, label %150

150:                                              ; preds = %148
  %151 = icmp eq i64 %143, 1
  br i1 %151, label %211, label %152

152:                                              ; preds = %150
  %153 = and i64 %145, 3
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %221, label %155

155:                                              ; preds = %152
  %156 = add i64 %145, -2
  %157 = inttoptr i64 %156 to %"class.v8::internal::ZoneVector.1336"*
  %158 = and i64 %143, 3
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %179, label %160

160:                                              ; preds = %155
  %161 = add i64 %143, -2
  %162 = inttoptr i64 %161 to %"class.v8::internal::ZoneVector.1336"*
  %163 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %162, i64 0, i32 0, i32 0, i32 1
  %164 = bitcast i64*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = inttoptr i64 %161 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %165, %167
  br i1 %168, label %211, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %157, i64 0, i32 0, i32 0, i32 0
  %171 = load i64**, i64*** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %157, i64 0, i32 0, i32 0, i32 1
  %173 = load i64**, i64*** %172, align 8
  %174 = icmp eq i64** %171, %173
  br i1 %174, label %221, label %175

175:                                              ; preds = %169
  %176 = inttoptr i64 %167 to i64**
  %177 = sub i64 %165, %167
  %178 = ashr exact i64 %177, 3
  br label %194

179:                                              ; preds = %155
  %180 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %157, i64 0, i32 0, i32 0, i32 0
  %181 = load i64**, i64*** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %157, i64 0, i32 0, i32 0, i32 1
  %183 = load i64**, i64*** %182, align 8
  %184 = icmp eq i64** %181, %183
  br i1 %184, label %208, label %185

185:                                              ; preds = %179, %189
  %186 = phi i64** [ %190, %189 ], [ %181, %179 ]
  %187 = load i64*, i64** %186, align 8
  %188 = icmp eq i64* %187, %147
  br i1 %188, label %208, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds i64*, i64** %186, i64 1
  %191 = icmp eq i64** %190, %183
  br i1 %191, label %221, label %185

192:                                              ; preds = %205
  %193 = icmp ult i64 %207, %178
  br i1 %193, label %194, label %211

194:                                              ; preds = %192, %175
  %195 = phi i64 [ %207, %192 ], [ 0, %175 ]
  %196 = getelementptr inbounds i64*, i64** %176, i64 %195
  %197 = load i64*, i64** %196, align 8
  br label %198

198:                                              ; preds = %202, %194
  %199 = phi i64** [ %171, %194 ], [ %203, %202 ]
  %200 = load i64*, i64** %199, align 8
  %201 = icmp eq i64* %200, %197
  br i1 %201, label %205, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds i64*, i64** %199, i64 1
  %204 = icmp eq i64** %203, %173
  br i1 %204, label %221, label %198

205:                                              ; preds = %198
  %206 = icmp eq i64** %199, %173
  %207 = add nuw i64 %195, 1
  br i1 %206, label %221, label %192

208:                                              ; preds = %185, %179
  %209 = phi i64** [ %181, %179 ], [ %186, %185 ]
  %210 = icmp eq i64** %209, %183
  br i1 %210, label %221, label %211

211:                                              ; preds = %192, %208, %160, %150, %140
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %213 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %212, align 8
  %214 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"* %213) #14
  %215 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 0, i32 1
  %216 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %215, align 8
  %217 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %216 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %218 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %218, i64 4
  %220 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %219, align 8
  tail call void %220(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %216, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %214, %"class.v8::internal::compiler::Node"* %51, %"class.v8::internal::compiler::Node"* null) #14
  br label %259

221:                                              ; preds = %205, %202, %189, %208, %169, %152, %148, %135, %133, %114, %70
  %222 = and i32 %39, 16777215
  %223 = zext i32 %222 to i64
  %224 = icmp ugt i64 %63, %223
  br i1 %224, label %225, label %228

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %66, i64 %223
  %227 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %226, align 8
  br label %228

228:                                              ; preds = %225, %221
  %229 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %227, %225 ], [ null, %221 ]
  %230 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %229, %68
  br i1 %230, label %259, label %231

231:                                              ; preds = %228
  %232 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %229, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %231
  %234 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %68, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %229) #14
  br i1 %234, label %259, label %235

235:                                              ; preds = %233
  %236 = load i32, i32* %13, align 4
  %237 = load i64, i64* %58, align 8
  %238 = load i64, i64* %60, align 8
  %239 = and i32 %236, 16777215
  %240 = zext i32 %239 to i64
  %241 = sub i64 %237, %238
  %242 = ashr exact i64 %241, 3
  %243 = inttoptr i64 %238 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br label %244

244:                                              ; preds = %235, %231
  %245 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %243, %235 ], [ %66, %231 ]
  %246 = phi i64 [ %242, %235 ], [ %63, %231 ]
  %247 = phi i64 [ %240, %235 ], [ %223, %231 ]
  %248 = icmp ugt i64 %246, %247
  br i1 %248, label %256, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %52, i64 0, i32 0, i32 0
  %251 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %252 = sub nsw i64 1, %246
  %253 = add nsw i64 %252, %247
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %250, i64 %253, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #14
  %254 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %255 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %254, align 8
  br label %256

256:                                              ; preds = %249, %244
  %257 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %245, %244 ], [ %255, %249 ]
  %258 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %257, i64 %247
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %68, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %258, align 8
  br label %259

259:                                              ; preds = %46, %211, %228, %233, %256, %65
  %260 = phi %"class.v8::internal::compiler::Node"* [ null, %65 ], [ %214, %211 ], [ %1, %256 ], [ null, %228 ], [ null, %233 ], [ null, %46 ]
  ret %"class.v8::internal::compiler::Node"* %260
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination32ReduceEnsureWritableFastElementsEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %5 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 251658240
  %16 = icmp eq i32 %15, 251658240
  %17 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %18 = add i64 %17, 32
  br i1 %16, label %19, label %23

19:                                               ; preds = %12
  %20 = inttoptr i64 %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 16
  br label %23

23:                                               ; preds = %12, %19
  %24 = phi i64 [ %22, %19 ], [ %18, %12 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"**
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = icmp sgt i32 %9, 1
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

29:                                               ; preds = %23
  br i1 %16, label %30, label %34

30:                                               ; preds = %29
  %31 = inttoptr i64 %18 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 16
  br label %34

34:                                               ; preds = %29, %30
  %35 = phi i64 [ %33, %30 ], [ %18, %29 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::Node"**
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 1
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %43, label %42, !prof !3

42:                                               ; preds = %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

43:                                               ; preds = %34
  %44 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %7) #14
  %45 = zext i1 %44 to i32
  %46 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %47 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %46) #14
  %48 = zext i1 %47 to i32
  %49 = add nuw i32 %9, %45
  %50 = add nuw i32 %49, %48
  %51 = load i32, i32* %13, align 4
  %52 = and i32 %51, 251658240
  %53 = icmp eq i32 %52, 251658240
  br i1 %53, label %54, label %58

54:                                               ; preds = %43
  %55 = inttoptr i64 %18 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 16
  br label %58

58:                                               ; preds = %43, %54
  %59 = phi i64 [ %57, %54 ], [ %18, %43 ]
  %60 = inttoptr i64 %59 to %"class.v8::internal::compiler::Node"**
  %61 = sext i32 %50 to i64
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, i64 %61
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %63, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 16777215
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %64 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = ashr exact i64 %74, 3
  %76 = icmp ugt i64 %75, %68
  br i1 %76, label %77, label %353

77:                                               ; preds = %58
  %78 = inttoptr i64 %73 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %79 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %78, i64 %68
  %80 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %79, align 8
  %81 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %80, null
  br i1 %81, label %353, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %84 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %84, i64 0, i32 1
  %86 = bitcast %"class.v8::internal::Isolate"** %85 to %"class.v8::internal::Factory"**
  %87 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %87, i64 224
  %89 = ptrtoint %"class.v8::internal::Factory"* %88 to i64
  %90 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %80, i64 0, i32 3
  %91 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %90, align 8
  %92 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %91, null
  br i1 %92, label %235, label %93

93:                                               ; preds = %82, %129
  %94 = phi %"class.v8::internal::compiler::Node"* [ %132, %129 ], [ %38, %82 ]
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %94, i64 0, i32 0
  %96 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %96, i64 0, i32 2
  %98 = load i16, i16* %97, align 8
  switch i16 %98, label %133 [
    i16 207, label %99
    i16 40, label %99
    i16 59, label %99
  ]

99:                                               ; preds = %93, %93, %93
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %94, i64 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = lshr i32 %101, 24
  %103 = and i32 %102, 15
  %104 = icmp eq i32 %103, 15
  %105 = ptrtoint %"class.v8::internal::compiler::Node"* %94 to i64
  %106 = add i64 %105, 32
  br i1 %104, label %107, label %114

107:                                              ; preds = %99
  %108 = inttoptr i64 %106 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %109 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %108, align 8
  %110 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %109 to i64
  %111 = add i64 %110, 16
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  br label %114

114:                                              ; preds = %107, %99
  %115 = phi i32 [ %113, %107 ], [ %103, %99 ]
  %116 = phi i64 [ %111, %107 ], [ %106, %99 ]
  %117 = icmp sgt i32 %115, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %114
  %119 = inttoptr i64 %116 to %"class.v8::internal::compiler::Node"**
  %120 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, align 8
  %121 = icmp eq %"class.v8::internal::compiler::Node"* %120, null
  br i1 %121, label %133, label %122

122:                                              ; preds = %118, %114
  %123 = and i32 %101, 251658240
  %124 = icmp eq i32 %123, 251658240
  br i1 %124, label %125, label %129

125:                                              ; preds = %122
  %126 = inttoptr i64 %106 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 16
  br label %129

129:                                              ; preds = %125, %122
  %130 = phi i64 [ %128, %125 ], [ %106, %122 ]
  %131 = inttoptr i64 %130 to %"class.v8::internal::compiler::Node"**
  %132 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %131, align 8
  br label %93

133:                                              ; preds = %118, %93
  %134 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %91, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %135 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_node"**
  %136 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node"* %136, null
  br i1 %137, label %235, label %138

138:                                              ; preds = %133, %138
  %139 = phi %"class.std::__1::__tree_end_node"* [ %149, %138 ], [ %134, %133 ]
  %140 = phi %"class.std::__1::__tree_node"* [ %150, %138 ], [ %136, %133 ]
  %141 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1, i32 0, i32 0
  %142 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, align 8
  %143 = icmp ult %"class.v8::internal::compiler::Node"* %142, %94
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 1
  %145 = bitcast %"class.std::__1::__tree_node_base"** %144 to %"class.std::__1::__tree_node"**
  %146 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  %147 = bitcast %"class.std::__1::__tree_node"* %140 to %"class.std::__1::__tree_node"**
  %148 = select i1 %143, %"class.std::__1::__tree_node"** %145, %"class.std::__1::__tree_node"** %147
  %149 = select i1 %143, %"class.std::__1::__tree_end_node"* %139, %"class.std::__1::__tree_end_node"* %146
  %150 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %148, align 8
  %151 = icmp eq %"class.std::__1::__tree_node"* %150, null
  br i1 %151, label %152, label %138

152:                                              ; preds = %138
  %153 = icmp eq %"class.std::__1::__tree_end_node"* %149, %134
  br i1 %153, label %235, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 4
  %156 = bitcast %"class.std::__1::__tree_end_node"* %155 to %"class.v8::internal::compiler::Node"**
  %157 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, align 8
  %158 = icmp ult %"class.v8::internal::compiler::Node"* %94, %157
  br i1 %158, label %235, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 5
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = icmp eq i64 %162, %89
  %164 = inttoptr i64 %162 to i64*
  br i1 %163, label %228, label %165

165:                                              ; preds = %159
  %166 = icmp eq %"class.v8::internal::Factory"* %88, inttoptr (i64 1 to %"class.v8::internal::Factory"*)
  br i1 %166, label %235, label %167

167:                                              ; preds = %165
  %168 = icmp eq i64 %162, 1
  br i1 %168, label %228, label %169

169:                                              ; preds = %167
  %170 = and i64 %89, 3
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %235, label %172

172:                                              ; preds = %169
  %173 = add i64 %89, -2
  %174 = inttoptr i64 %173 to %"class.v8::internal::ZoneVector.1336"*
  %175 = and i64 %162, 3
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %196, label %177

177:                                              ; preds = %172
  %178 = add i64 %162, -2
  %179 = inttoptr i64 %178 to %"class.v8::internal::ZoneVector.1336"*
  %180 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %179, i64 0, i32 0, i32 0, i32 1
  %181 = bitcast i64*** %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = inttoptr i64 %178 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = icmp eq i64 %182, %184
  br i1 %185, label %228, label %186

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %174, i64 0, i32 0, i32 0, i32 0
  %188 = load i64**, i64*** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %174, i64 0, i32 0, i32 0, i32 1
  %190 = load i64**, i64*** %189, align 8
  %191 = icmp eq i64** %188, %190
  br i1 %191, label %235, label %192

192:                                              ; preds = %186
  %193 = inttoptr i64 %184 to i64**
  %194 = sub i64 %182, %184
  %195 = ashr exact i64 %194, 3
  br label %211

196:                                              ; preds = %172
  %197 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %174, i64 0, i32 0, i32 0, i32 0
  %198 = load i64**, i64*** %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %174, i64 0, i32 0, i32 0, i32 1
  %200 = load i64**, i64*** %199, align 8
  %201 = icmp eq i64** %198, %200
  br i1 %201, label %225, label %202

202:                                              ; preds = %196, %206
  %203 = phi i64** [ %207, %206 ], [ %198, %196 ]
  %204 = load i64*, i64** %203, align 8
  %205 = icmp eq i64* %204, %164
  br i1 %205, label %225, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds i64*, i64** %203, i64 1
  %208 = icmp eq i64** %207, %200
  br i1 %208, label %235, label %202

209:                                              ; preds = %222
  %210 = icmp ult i64 %224, %195
  br i1 %210, label %211, label %228

211:                                              ; preds = %209, %192
  %212 = phi i64 [ %224, %209 ], [ 0, %192 ]
  %213 = getelementptr inbounds i64*, i64** %193, i64 %212
  %214 = load i64*, i64** %213, align 8
  br label %215

215:                                              ; preds = %219, %211
  %216 = phi i64** [ %188, %211 ], [ %220, %219 ]
  %217 = load i64*, i64** %216, align 8
  %218 = icmp eq i64* %217, %214
  br i1 %218, label %222, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds i64*, i64** %216, i64 1
  %221 = icmp eq i64** %220, %190
  br i1 %221, label %235, label %215

222:                                              ; preds = %215
  %223 = icmp eq i64** %216, %190
  %224 = add nuw i64 %212, 1
  br i1 %223, label %235, label %209

225:                                              ; preds = %202, %196
  %226 = phi i64** [ %198, %196 ], [ %203, %202 ]
  %227 = icmp eq i64** %226, %200
  br i1 %227, label %235, label %228

228:                                              ; preds = %209, %225, %177, %167, %159
  %229 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 0, i32 1
  %230 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %230 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %232 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %232, i64 4
  %234 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %233, align 8
  tail call void %234(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %230, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %38, %"class.v8::internal::compiler::Node"* %63, %"class.v8::internal::compiler::Node"* null) #14
  br label %353

235:                                              ; preds = %222, %219, %206, %225, %186, %169, %165, %154, %152, %133, %82
  %236 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %237 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %237, i64 0, i32 2
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %237, i64 0, i32 3
  %241 = load i64, i64* %240, align 8
  %242 = sub i64 %241, %239
  %243 = icmp ult i64 %242, 528
  br i1 %243, label %244, label %246, !prof !4

244:                                              ; preds = %235
  %245 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %237, i64 528) #14
  br label %248

246:                                              ; preds = %235
  %247 = add i64 %239, 528
  store i64 %247, i64* %238, align 8
  br label %248

248:                                              ; preds = %246, %244
  %249 = phi i64 [ %245, %244 ], [ %239, %246 ]
  %250 = inttoptr i64 %249 to i8*
  %251 = inttoptr i64 %249 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %252 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* nonnull align 8 %252, i64 528, i1 false) #14
  %253 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %251, i64 0, i32 3
  %254 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %253, align 8
  %255 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %254, null
  br i1 %255, label %258, label %256

256:                                              ; preds = %248
  %257 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %254, %"class.v8::internal::compiler::Node"* %1, i64 %89, %"class.v8::internal::Zone"* %237) #14
  br label %270

258:                                              ; preds = %248
  %259 = load i64, i64* %238, align 8
  %260 = load i64, i64* %240, align 8
  %261 = sub i64 %260, %259
  %262 = icmp ult i64 %261, 32
  br i1 %262, label %263, label %265, !prof !4

263:                                              ; preds = %258
  %264 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %237, i64 32) #14
  br label %267

265:                                              ; preds = %258
  %266 = add i64 %259, 32
  store i64 %266, i64* %238, align 8
  br label %267

267:                                              ; preds = %265, %263
  %268 = phi i64 [ %264, %263 ], [ %259, %265 ]
  %269 = inttoptr i64 %268 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  tail call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %269, %"class.v8::internal::compiler::Node"* %1, i64 %89, %"class.v8::internal::Zone"* %237) #14
  br label %270

270:                                              ; preds = %267, %256
  %271 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %269, %267 ], [ %257, %256 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %271, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %253, align 8
  %272 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %236, align 8
  %273 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #14
  %274 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %251, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %274, align 8
  %275 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %26, %"class.v8::internal::compiler::Node"** %275, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 2, i32 0
  store i64* null, i64** %276, align 8
  %277 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %272, i64 0, i32 2
  %278 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %272, i64 0, i32 3
  %279 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %251, i64 0, i32 1, i32 0, i64 1
  %280 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %279, align 8
  %281 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %280, null
  br i1 %281, label %300, label %282

282:                                              ; preds = %270
  %283 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %280, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %3, i64* null, %"class.v8::internal::Zone"* %272) #14
  %284 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %279, align 8
  %285 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %284, %283
  br i1 %285, label %300, label %286

286:                                              ; preds = %282
  %287 = load i64, i64* %277, align 8
  %288 = load i64, i64* %278, align 8
  %289 = sub i64 %288, %287
  %290 = icmp ult i64 %289, 528
  br i1 %290, label %291, label %293, !prof !4

291:                                              ; preds = %286
  %292 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %272, i64 528) #14
  br label %295

293:                                              ; preds = %286
  %294 = add i64 %287, 528
  store i64 %294, i64* %277, align 8
  br label %295

295:                                              ; preds = %291, %293
  %296 = phi i64 [ %292, %291 ], [ %287, %293 ]
  %297 = inttoptr i64 %296 to i8*
  %298 = inttoptr i64 %296 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %297, i8* align 8 %250, i64 528, i1 false) #14
  %299 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %298, i64 0, i32 1, i32 0, i64 1
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %283, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %299, align 8
  br label %300

300:                                              ; preds = %295, %282, %270
  %301 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %298, %295 ], [ null, %282 ], [ null, %270 ]
  %302 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %301, null
  %303 = select i1 %302, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %251, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %301
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %273) #14
  %304 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %304, align 8
  %305 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5, i64 0, i32 1
  store i8 8, i8* %305, align 8
  %306 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5, i64 0, i32 2, i32 0
  %307 = bitcast i64** %306 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %307, i8 0, i64 16, i1 false)
  %308 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %236, align 8
  %309 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState8AddFieldEPNS1_4NodeENS2_10IndexRangeENS2_9FieldInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %303, %"class.v8::internal::compiler::Node"* %26, i64 8589934593, %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* nonnull byval(%"struct.v8::internal::compiler::LoadElimination::FieldInfo") align 8 %5, %"class.v8::internal::Zone"* %308)
  %310 = load i32, i32* %13, align 4
  %311 = and i32 %310, 16777215
  %312 = zext i32 %311 to i64
  %313 = load i64, i64* %70, align 8
  %314 = load i64, i64* %72, align 8
  %315 = sub i64 %313, %314
  %316 = ashr exact i64 %315, 3
  %317 = icmp ugt i64 %316, %312
  br i1 %317, label %318, label %322

318:                                              ; preds = %300
  %319 = inttoptr i64 %314 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %320 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %319, i64 %312
  %321 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %320, align 8
  br label %322

322:                                              ; preds = %318, %300
  %323 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %321, %318 ], [ null, %300 ]
  %324 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %323, %309
  br i1 %324, label %353, label %325

325:                                              ; preds = %322
  %326 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %323, null
  br i1 %326, label %337, label %327

327:                                              ; preds = %325
  %328 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %309, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %323) #14
  br i1 %328, label %353, label %329

329:                                              ; preds = %327
  %330 = load i32, i32* %13, align 4
  %331 = load i64, i64* %70, align 8
  %332 = load i64, i64* %72, align 8
  %333 = and i32 %330, 16777215
  %334 = zext i32 %333 to i64
  %335 = sub i64 %331, %332
  %336 = ashr exact i64 %335, 3
  br label %337

337:                                              ; preds = %329, %325
  %338 = phi i64 [ %336, %329 ], [ %316, %325 ]
  %339 = phi i64 [ %334, %329 ], [ %312, %325 ]
  %340 = phi i64 [ %332, %329 ], [ %314, %325 ]
  %341 = icmp ugt i64 %338, %339
  %342 = inttoptr i64 %340 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %341, label %350, label %343

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %64, i64 0, i32 0, i32 0
  %345 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4, align 8
  %346 = sub nsw i64 1, %338
  %347 = add nsw i64 %346, %339
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %344, i64 %347, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #14
  %348 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %349 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %348, align 8
  br label %350

350:                                              ; preds = %343, %337
  %351 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %342, %337 ], [ %349, %343 ]
  %352 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %351, i64 %339
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %309, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %352, align 8
  br label %353

353:                                              ; preds = %58, %228, %322, %327, %350, %77
  %354 = phi %"class.v8::internal::compiler::Node"* [ null, %77 ], [ %38, %228 ], [ %1, %350 ], [ null, %322 ], [ null, %327 ], [ null, %58 ]
  ret %"class.v8::internal::compiler::Node"* %354
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination27ReduceMaybeGrowFastElementsEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %5 = alloca %"class.v8::internal::ZoneHandleSet", align 8
  %6 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = tail call dereferenceable(24) %"class.v8::internal::compiler::GrowFastElementsParameters"* @_ZN2v88internal8compiler28GrowFastElementsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #14
  %10 = getelementptr inbounds %"class.v8::internal::compiler::GrowFastElementsParameters", %"class.v8::internal::compiler::GrowFastElementsParameters"* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %12, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 251658240
  %21 = icmp eq i32 %20, 251658240
  %22 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %23 = add i64 %22, 32
  br i1 %21, label %24, label %28

24:                                               ; preds = %17
  %25 = inttoptr i64 %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 16
  br label %28

28:                                               ; preds = %17, %24
  %29 = phi i64 [ %27, %24 ], [ %23, %17 ]
  %30 = inttoptr i64 %29 to %"class.v8::internal::compiler::Node"**
  %31 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %12, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %28
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

36:                                               ; preds = %28
  %37 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %12) #14
  %38 = zext i1 %37 to i32
  %39 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %40 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %39) #14
  %41 = zext i1 %40 to i32
  %42 = add nuw i32 %14, %38
  %43 = add nuw i32 %42, %41
  %44 = load i32, i32* %18, align 4
  %45 = and i32 %44, 251658240
  %46 = icmp eq i32 %45, 251658240
  br i1 %46, label %47, label %51

47:                                               ; preds = %36
  %48 = inttoptr i64 %23 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 16
  br label %51

51:                                               ; preds = %36, %47
  %52 = phi i64 [ %50, %47 ], [ %23, %36 ]
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::Node"**
  %54 = sext i32 %43 to i64
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, i64 %54
  %56 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %56, i64 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 16777215
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %57 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 3
  %69 = icmp ugt i64 %68, %61
  br i1 %69, label %70, label %256

70:                                               ; preds = %51
  %71 = inttoptr i64 %66 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %71, i64 %61
  %73 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %72, align 8
  %74 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %73, null
  br i1 %74, label %256, label %75

75:                                               ; preds = %70
  %76 = icmp eq i8 %11, 0
  br i1 %76, label %77, label %121

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %79 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %79, i64 0, i32 1
  %81 = bitcast %"class.v8::internal::Isolate"** %80 to %"class.v8::internal::Factory"**
  %82 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %82, i64 488
  %84 = ptrtoint %"class.v8::internal::Factory"* %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %86 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %86, i64 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %86, i64 0, i32 3
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %90, %88
  %92 = icmp ult i64 %91, 528
  br i1 %92, label %93, label %95, !prof !4

93:                                               ; preds = %77
  %94 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %86, i64 528) #14
  br label %97

95:                                               ; preds = %77
  %96 = add i64 %88, 528
  store i64 %96, i64* %87, align 8
  br label %97

97:                                               ; preds = %95, %93
  %98 = phi i64 [ %94, %93 ], [ %88, %95 ]
  %99 = inttoptr i64 %98 to i8*
  %100 = inttoptr i64 %98 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %101 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %101, i64 528, i1 false) #14
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %100, i64 0, i32 3
  %103 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %102, align 8
  %104 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %97
  %106 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %103, %"class.v8::internal::compiler::Node"* %1, i64 %84, %"class.v8::internal::Zone"* %86) #14
  br label %119

107:                                              ; preds = %97
  %108 = load i64, i64* %87, align 8
  %109 = load i64, i64* %89, align 8
  %110 = sub i64 %109, %108
  %111 = icmp ult i64 %110, 32
  br i1 %111, label %112, label %114, !prof !4

112:                                              ; preds = %107
  %113 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %86, i64 32) #14
  br label %116

114:                                              ; preds = %107
  %115 = add i64 %108, 32
  store i64 %115, i64* %87, align 8
  br label %116

116:                                              ; preds = %114, %112
  %117 = phi i64 [ %113, %112 ], [ %108, %114 ]
  %118 = inttoptr i64 %117 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  tail call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %118, %"class.v8::internal::compiler::Node"* %1, i64 %84, %"class.v8::internal::Zone"* %86) #14
  br label %119

119:                                              ; preds = %105, %116
  %120 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %118, %116 ], [ %106, %105 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %120, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %102, align 8
  br label %171

121:                                              ; preds = %75
  %122 = bitcast %"class.v8::internal::ZoneHandleSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #14
  %123 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %124 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %124, i64 0, i32 1
  %126 = bitcast %"class.v8::internal::Isolate"** %125 to %"class.v8::internal::Factory"**
  %127 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %127, i64 224
  %129 = ptrtoint %"class.v8::internal::Factory"* %128 to i64
  %130 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %5, i64 0, i32 0
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %127, i64 232
  %132 = bitcast %"class.v8::internal::Factory"* %131 to i64*
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  call void @_ZN2v88internal13ZoneHandleSetINS0_3MapEE6insertENS0_6HandleIS2_EEPNS0_4ZoneE(%"class.v8::internal::ZoneHandleSet"* nonnull %5, i64* %132, %"class.v8::internal::Zone"* %134)
  %135 = load i64, i64* %130, align 8
  %136 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %136, i64 0, i32 2
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %136, i64 0, i32 3
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %140, %138
  %142 = icmp ult i64 %141, 528
  br i1 %142, label %143, label %145, !prof !4

143:                                              ; preds = %121
  %144 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %136, i64 528) #14
  br label %147

145:                                              ; preds = %121
  %146 = add i64 %138, 528
  store i64 %146, i64* %137, align 8
  br label %147

147:                                              ; preds = %145, %143
  %148 = phi i64 [ %144, %143 ], [ %138, %145 ]
  %149 = inttoptr i64 %148 to i8*
  %150 = inttoptr i64 %148 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %151 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* nonnull align 8 %151, i64 528, i1 false) #14
  %152 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %150, i64 0, i32 3
  %153 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %152, align 8
  %154 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %147
  %156 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %153, %"class.v8::internal::compiler::Node"* %1, i64 %135, %"class.v8::internal::Zone"* %136) #14
  br label %169

157:                                              ; preds = %147
  %158 = load i64, i64* %137, align 8
  %159 = load i64, i64* %139, align 8
  %160 = sub i64 %159, %158
  %161 = icmp ult i64 %160, 32
  br i1 %161, label %162, label %164, !prof !4

162:                                              ; preds = %157
  %163 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %136, i64 32) #14
  br label %166

164:                                              ; preds = %157
  %165 = add i64 %158, 32
  store i64 %165, i64* %137, align 8
  br label %166

166:                                              ; preds = %164, %162
  %167 = phi i64 [ %163, %162 ], [ %158, %164 ]
  %168 = inttoptr i64 %167 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %168, %"class.v8::internal::compiler::Node"* %1, i64 %135, %"class.v8::internal::Zone"* %136) #14
  br label %169

169:                                              ; preds = %155, %166
  %170 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %168, %166 ], [ %156, %155 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %170, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %152, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #14
  br label %171

171:                                              ; preds = %119, %169
  %172 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %100, %119 ], [ %150, %169 ]
  %173 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %174 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %173, align 8
  %175 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #14
  %176 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %172, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %31, %"class.v8::internal::compiler::Node"** %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 2, i32 0
  store i64* null, i64** %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %174, i64 0, i32 2
  %180 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %174, i64 0, i32 3
  %181 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %172 to i8*
  %182 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %172, i64 0, i32 1, i32 0, i64 1
  %183 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %182, align 8
  %184 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %183, null
  br i1 %184, label %203, label %185

185:                                              ; preds = %171
  %186 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %183, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %3, i64* null, %"class.v8::internal::Zone"* %174) #14
  %187 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %182, align 8
  %188 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %187, %186
  br i1 %188, label %203, label %189

189:                                              ; preds = %185
  %190 = load i64, i64* %179, align 8
  %191 = load i64, i64* %180, align 8
  %192 = sub i64 %191, %190
  %193 = icmp ult i64 %192, 528
  br i1 %193, label %194, label %196, !prof !4

194:                                              ; preds = %189
  %195 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %174, i64 528) #14
  br label %198

196:                                              ; preds = %189
  %197 = add i64 %190, 528
  store i64 %197, i64* %179, align 8
  br label %198

198:                                              ; preds = %194, %196
  %199 = phi i64 [ %195, %194 ], [ %190, %196 ]
  %200 = inttoptr i64 %199 to i8*
  %201 = inttoptr i64 %199 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %181, i64 528, i1 false) #14
  %202 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %201, i64 0, i32 1, i32 0, i64 1
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %186, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %202, align 8
  br label %203

203:                                              ; preds = %198, %185, %171
  %204 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %201, %198 ], [ null, %185 ], [ null, %171 ]
  %205 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %204, null
  %206 = select i1 %205, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %172, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #14
  %207 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %207, align 8
  %208 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %6, i64 0, i32 1
  store i8 8, i8* %208, align 8
  %209 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %6, i64 0, i32 2, i32 0
  %210 = bitcast i64** %209 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 16, i1 false)
  %211 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %173, align 8
  %212 = call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState8AddFieldEPNS1_4NodeENS2_10IndexRangeENS2_9FieldInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %206, %"class.v8::internal::compiler::Node"* %31, i64 8589934593, %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* nonnull byval(%"struct.v8::internal::compiler::LoadElimination::FieldInfo") align 8 %6, %"class.v8::internal::Zone"* %211)
  %213 = load i32, i32* %18, align 4
  %214 = and i32 %213, 16777215
  %215 = zext i32 %214 to i64
  %216 = load i64, i64* %63, align 8
  %217 = load i64, i64* %65, align 8
  %218 = sub i64 %216, %217
  %219 = ashr exact i64 %218, 3
  %220 = icmp ugt i64 %219, %215
  br i1 %220, label %221, label %225

221:                                              ; preds = %203
  %222 = inttoptr i64 %217 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %223 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %222, i64 %215
  %224 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %223, align 8
  br label %225

225:                                              ; preds = %221, %203
  %226 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %224, %221 ], [ null, %203 ]
  %227 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %226, %212
  br i1 %227, label %256, label %228

228:                                              ; preds = %225
  %229 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %226, null
  br i1 %229, label %240, label %230

230:                                              ; preds = %228
  %231 = call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %212, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %226) #14
  br i1 %231, label %256, label %232

232:                                              ; preds = %230
  %233 = load i32, i32* %18, align 4
  %234 = load i64, i64* %63, align 8
  %235 = load i64, i64* %65, align 8
  %236 = and i32 %233, 16777215
  %237 = zext i32 %236 to i64
  %238 = sub i64 %234, %235
  %239 = ashr exact i64 %238, 3
  br label %240

240:                                              ; preds = %232, %228
  %241 = phi i64 [ %239, %232 ], [ %219, %228 ]
  %242 = phi i64 [ %237, %232 ], [ %215, %228 ]
  %243 = phi i64 [ %235, %232 ], [ %217, %228 ]
  %244 = icmp ugt i64 %241, %242
  %245 = inttoptr i64 %243 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %244, label %253, label %246

246:                                              ; preds = %240
  %247 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %57, i64 0, i32 0, i32 0
  %248 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4, align 8
  %249 = sub nsw i64 1, %241
  %250 = add nsw i64 %249, %242
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %247, i64 %250, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #14
  %251 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %252 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %251, align 8
  br label %253

253:                                              ; preds = %246, %240
  %254 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %245, %240 ], [ %252, %246 ]
  %255 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %254, i64 %242
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %212, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %255, align 8
  br label %256

256:                                              ; preds = %51, %253, %230, %225, %70
  %257 = phi %"class.v8::internal::compiler::Node"* [ null, %70 ], [ %1, %253 ], [ null, %225 ], [ null, %230 ], [ null, %51 ]
  ret %"class.v8::internal::compiler::Node"* %257
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination28ReduceTransitionElementsKindEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::ZoneHandleSet", align 8
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %5 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %6 = alloca %"class.v8::internal::ZoneHandleSet", align 8
  %7 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %8 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %11 = tail call dereferenceable(24) %"class.v8::internal::compiler::ElementsTransition"* @_ZN2v88internal8compiler20ElementsTransitionOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %10) #14
  %12 = getelementptr inbounds %"class.v8::internal::compiler::ElementsTransition", %"class.v8::internal::compiler::ElementsTransition"* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::ElementsTransition", %"class.v8::internal::compiler::ElementsTransition"* %11, i64 0, i32 1, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::ElementsTransition", %"class.v8::internal::compiler::ElementsTransition"* %11, i64 0, i32 2, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %23, label %22, !prof !3

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 251658240
  %27 = icmp eq i32 %26, 251658240
  %28 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %29 = add i64 %28, 32
  br i1 %27, label %30, label %34

30:                                               ; preds = %23
  %31 = inttoptr i64 %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 16
  br label %34

34:                                               ; preds = %23, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %23 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::Node"**
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 6
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

42:                                               ; preds = %34
  %43 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %18) #14
  %44 = zext i1 %43 to i32
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %46 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %45) #14
  %47 = zext i1 %46 to i32
  %48 = add nuw i32 %20, %44
  %49 = add nuw i32 %48, %47
  %50 = load i32, i32* %24, align 4
  %51 = and i32 %50, 251658240
  %52 = icmp eq i32 %51, 251658240
  br i1 %52, label %53, label %57

53:                                               ; preds = %42
  %54 = inttoptr i64 %29 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 16
  br label %57

57:                                               ; preds = %42, %53
  %58 = phi i64 [ %56, %53 ], [ %29, %42 ]
  %59 = inttoptr i64 %58 to %"class.v8::internal::compiler::Node"**
  %60 = sext i32 %49 to i64
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 %60
  %62 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %62, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 16777215
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %63 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = ashr exact i64 %73, 3
  %75 = icmp ugt i64 %74, %67
  br i1 %75, label %76, label %526

76:                                               ; preds = %57
  %77 = inttoptr i64 %72 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %78 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %77, i64 %67
  %79 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %78, align 8
  %80 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %79, null
  br i1 %80, label %526, label %81

81:                                               ; preds = %76
  %82 = icmp eq i8 %13, 1
  br i1 %82, label %83, label %118

83:                                               ; preds = %81
  %84 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #14
  %85 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %79, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %37, %"class.v8::internal::compiler::Node"** %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 2, i32 0
  store i64* %15, i64** %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %89 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 2
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 3
  %92 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %79 to i8*
  %93 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %79, i64 0, i32 1, i32 0, i64 1
  %94 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %93, align 8
  %95 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %94, null
  br i1 %95, label %114, label %96

96:                                               ; preds = %83
  %97 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %94, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %5, i64* null, %"class.v8::internal::Zone"* %89) #14
  %98 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %93, align 8
  %99 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %98, %97
  br i1 %99, label %114, label %100

100:                                              ; preds = %96
  %101 = load i64, i64* %90, align 8
  %102 = load i64, i64* %91, align 8
  %103 = sub i64 %102, %101
  %104 = icmp ult i64 %103, 528
  br i1 %104, label %105, label %107, !prof !4

105:                                              ; preds = %100
  %106 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %89, i64 528) #14
  br label %109

107:                                              ; preds = %100
  %108 = add i64 %101, 528
  store i64 %108, i64* %90, align 8
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi i64 [ %106, %105 ], [ %101, %107 ]
  %111 = inttoptr i64 %110 to i8*
  %112 = inttoptr i64 %110 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* nonnull align 8 %92, i64 528, i1 false) #14
  %113 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %112, i64 0, i32 1, i32 0, i64 1
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %97, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %113, align 8
  br label %114

114:                                              ; preds = %109, %96, %83
  %115 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %112, %109 ], [ null, %96 ], [ null, %83 ]
  %116 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %115, null
  %117 = select i1 %116, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %79, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #14
  br label %118

118:                                              ; preds = %81, %114
  %119 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %117, %114 ], [ %79, %81 ]
  %120 = bitcast %"class.v8::internal::ZoneHandleSet"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #14
  %121 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %6, i64 0, i32 0
  store i64 1, i64* %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %119, i64 0, i32 3
  %123 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %122, align 8
  %124 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %123, null
  br i1 %124, label %449, label %125

125:                                              ; preds = %118, %161
  %126 = phi %"class.v8::internal::compiler::Node"* [ %164, %161 ], [ %37, %118 ]
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %126, i64 0, i32 0
  %128 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %128, i64 0, i32 2
  %130 = load i16, i16* %129, align 8
  switch i16 %130, label %165 [
    i16 207, label %131
    i16 40, label %131
    i16 59, label %131
  ]

131:                                              ; preds = %125, %125, %125
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %126, i64 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = lshr i32 %133, 24
  %135 = and i32 %134, 15
  %136 = icmp eq i32 %135, 15
  %137 = ptrtoint %"class.v8::internal::compiler::Node"* %126 to i64
  %138 = add i64 %137, 32
  br i1 %136, label %139, label %146

139:                                              ; preds = %131
  %140 = inttoptr i64 %138 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %141 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %140, align 8
  %142 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %141 to i64
  %143 = add i64 %142, 16
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %141, i64 0, i32 1
  %145 = load i32, i32* %144, align 8
  br label %146

146:                                              ; preds = %139, %131
  %147 = phi i32 [ %145, %139 ], [ %135, %131 ]
  %148 = phi i64 [ %143, %139 ], [ %138, %131 ]
  %149 = icmp sgt i32 %147, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = inttoptr i64 %148 to %"class.v8::internal::compiler::Node"**
  %152 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, align 8
  %153 = icmp eq %"class.v8::internal::compiler::Node"* %152, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %150, %146
  %155 = and i32 %133, 251658240
  %156 = icmp eq i32 %155, 251658240
  br i1 %156, label %157, label %161

157:                                              ; preds = %154
  %158 = inttoptr i64 %138 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, 16
  br label %161

161:                                              ; preds = %157, %154
  %162 = phi i64 [ %160, %157 ], [ %138, %154 ]
  %163 = inttoptr i64 %162 to %"class.v8::internal::compiler::Node"**
  %164 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, align 8
  br label %125

165:                                              ; preds = %150, %125
  %166 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %123, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %167 = bitcast %"class.std::__1::__tree_end_node"* %166 to %"class.std::__1::__tree_node"**
  %168 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node"* %168, null
  br i1 %169, label %449, label %170

170:                                              ; preds = %165, %170
  %171 = phi %"class.std::__1::__tree_end_node"* [ %181, %170 ], [ %166, %165 ]
  %172 = phi %"class.std::__1::__tree_node"* [ %182, %170 ], [ %168, %165 ]
  %173 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %172, i64 0, i32 1, i32 0, i32 0
  %174 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %173, align 8
  %175 = icmp ult %"class.v8::internal::compiler::Node"* %174, %126
  %176 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %172, i64 0, i32 0, i32 1
  %177 = bitcast %"class.std::__1::__tree_node_base"** %176 to %"class.std::__1::__tree_node"**
  %178 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %172, i64 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::__tree_node"* %172 to %"class.std::__1::__tree_node"**
  %180 = select i1 %175, %"class.std::__1::__tree_node"** %177, %"class.std::__1::__tree_node"** %179
  %181 = select i1 %175, %"class.std::__1::__tree_end_node"* %171, %"class.std::__1::__tree_end_node"* %178
  %182 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %180, align 8
  %183 = icmp eq %"class.std::__1::__tree_node"* %182, null
  br i1 %183, label %184, label %170

184:                                              ; preds = %170
  %185 = icmp eq %"class.std::__1::__tree_end_node"* %181, %166
  br i1 %185, label %449, label %186

186:                                              ; preds = %184
  %187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %181, i64 4
  %188 = bitcast %"class.std::__1::__tree_end_node"* %187 to %"class.v8::internal::compiler::Node"**
  %189 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %188, align 8
  %190 = icmp ult %"class.v8::internal::compiler::Node"* %126, %189
  br i1 %190, label %449, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %181, i64 5
  %193 = bitcast %"class.std::__1::__tree_end_node"* %192 to i64*
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %121, align 8
  %195 = ptrtoint i64* %17 to i64
  %196 = icmp eq i64 %194, %195
  %197 = inttoptr i64 %194 to i64*
  br i1 %196, label %524, label %198

198:                                              ; preds = %191
  %199 = icmp eq i64* %17, inttoptr (i64 1 to i64*)
  br i1 %199, label %261, label %200

200:                                              ; preds = %198
  %201 = icmp eq i64 %194, 1
  br i1 %201, label %524, label %202

202:                                              ; preds = %200
  %203 = and i64 %195, 3
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %261, label %205

205:                                              ; preds = %202
  %206 = add i64 %195, -2
  %207 = inttoptr i64 %206 to %"class.v8::internal::ZoneVector.1336"*
  %208 = and i64 %194, 3
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %229, label %210

210:                                              ; preds = %205
  %211 = add i64 %194, -2
  %212 = inttoptr i64 %211 to %"class.v8::internal::ZoneVector.1336"*
  %213 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %212, i64 0, i32 0, i32 0, i32 1
  %214 = bitcast i64*** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = inttoptr i64 %211 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = icmp eq i64 %215, %217
  br i1 %218, label %524, label %219

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %207, i64 0, i32 0, i32 0, i32 0
  %221 = load i64**, i64*** %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %207, i64 0, i32 0, i32 0, i32 1
  %223 = load i64**, i64*** %222, align 8
  %224 = icmp eq i64** %221, %223
  br i1 %224, label %261, label %225

225:                                              ; preds = %219
  %226 = inttoptr i64 %217 to i64**
  %227 = sub i64 %215, %217
  %228 = ashr exact i64 %227, 3
  br label %244

229:                                              ; preds = %205
  %230 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %207, i64 0, i32 0, i32 0, i32 0
  %231 = load i64**, i64*** %230, align 8
  %232 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %207, i64 0, i32 0, i32 0, i32 1
  %233 = load i64**, i64*** %232, align 8
  %234 = icmp eq i64** %231, %233
  br i1 %234, label %258, label %235

235:                                              ; preds = %229, %239
  %236 = phi i64** [ %240, %239 ], [ %231, %229 ]
  %237 = load i64*, i64** %236, align 8
  %238 = icmp eq i64* %237, %197
  br i1 %238, label %258, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds i64*, i64** %236, i64 1
  %241 = icmp eq i64** %240, %233
  br i1 %241, label %261, label %235

242:                                              ; preds = %255
  %243 = icmp ult i64 %257, %228
  br i1 %243, label %244, label %524

244:                                              ; preds = %242, %225
  %245 = phi i64 [ %257, %242 ], [ 0, %225 ]
  %246 = getelementptr inbounds i64*, i64** %226, i64 %245
  %247 = load i64*, i64** %246, align 8
  br label %248

248:                                              ; preds = %252, %244
  %249 = phi i64** [ %221, %244 ], [ %253, %252 ]
  %250 = load i64*, i64** %249, align 8
  %251 = icmp eq i64* %250, %247
  br i1 %251, label %255, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds i64*, i64** %249, i64 1
  %254 = icmp eq i64** %253, %223
  br i1 %254, label %261, label %248

255:                                              ; preds = %248
  %256 = icmp eq i64** %249, %223
  %257 = add nuw i64 %245, 1
  br i1 %256, label %261, label %242

258:                                              ; preds = %235, %229
  %259 = phi i64** [ %231, %229 ], [ %236, %235 ]
  %260 = icmp eq i64** %259, %233
  br i1 %260, label %261, label %524

261:                                              ; preds = %255, %252, %239, %258, %219, %202, %198
  %262 = ptrtoint i64* %15 to i64
  %263 = icmp eq i64 %194, %262
  br i1 %263, label %327, label %264

264:                                              ; preds = %261
  %265 = icmp eq i64 %194, 1
  br i1 %265, label %479, label %266

266:                                              ; preds = %264
  %267 = icmp eq i64* %15, inttoptr (i64 1 to i64*)
  br i1 %267, label %327, label %268

268:                                              ; preds = %266
  %269 = and i64 %194, 3
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %479, label %271

271:                                              ; preds = %268
  %272 = add i64 %194, -2
  %273 = inttoptr i64 %272 to %"class.v8::internal::ZoneVector.1336"*
  %274 = and i64 %262, 3
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %295, label %276

276:                                              ; preds = %271
  %277 = add i64 %262, -2
  %278 = inttoptr i64 %277 to %"class.v8::internal::ZoneVector.1336"*
  %279 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %278, i64 0, i32 0, i32 0, i32 1
  %280 = bitcast i64*** %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = inttoptr i64 %277 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = icmp eq i64 %281, %283
  br i1 %284, label %327, label %285

285:                                              ; preds = %276
  %286 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %273, i64 0, i32 0, i32 0, i32 0
  %287 = load i64**, i64*** %286, align 8
  %288 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %273, i64 0, i32 0, i32 0, i32 1
  %289 = load i64**, i64*** %288, align 8
  %290 = icmp eq i64** %287, %289
  br i1 %290, label %479, label %291

291:                                              ; preds = %285
  %292 = inttoptr i64 %283 to i64**
  %293 = sub i64 %281, %283
  %294 = ashr exact i64 %293, 3
  br label %310

295:                                              ; preds = %271
  %296 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %273, i64 0, i32 0, i32 0, i32 0
  %297 = load i64**, i64*** %296, align 8
  %298 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %273, i64 0, i32 0, i32 0, i32 1
  %299 = load i64**, i64*** %298, align 8
  %300 = icmp eq i64** %297, %299
  br i1 %300, label %324, label %301

301:                                              ; preds = %295, %305
  %302 = phi i64** [ %306, %305 ], [ %297, %295 ]
  %303 = load i64*, i64** %302, align 8
  %304 = icmp eq i64* %303, %15
  br i1 %304, label %324, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds i64*, i64** %302, i64 1
  %307 = icmp eq i64** %306, %299
  br i1 %307, label %479, label %301

308:                                              ; preds = %321
  %309 = icmp ult i64 %323, %294
  br i1 %309, label %310, label %327

310:                                              ; preds = %308, %291
  %311 = phi i64 [ %323, %308 ], [ 0, %291 ]
  %312 = getelementptr inbounds i64*, i64** %292, i64 %311
  %313 = load i64*, i64** %312, align 8
  br label %314

314:                                              ; preds = %318, %310
  %315 = phi i64** [ %287, %310 ], [ %319, %318 ]
  %316 = load i64*, i64** %315, align 8
  %317 = icmp eq i64* %316, %313
  br i1 %317, label %321, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds i64*, i64** %315, i64 1
  %320 = icmp eq i64** %319, %289
  br i1 %320, label %479, label %314

321:                                              ; preds = %314
  %322 = icmp eq i64** %315, %289
  %323 = add nuw i64 %311, 1
  br i1 %322, label %479, label %308

324:                                              ; preds = %301, %295
  %325 = phi i64** [ %297, %295 ], [ %302, %301 ]
  %326 = icmp eq i64** %325, %299
  br i1 %326, label %479, label %327

327:                                              ; preds = %308, %324, %276, %266, %261
  %328 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %329 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %328, align 8
  %330 = bitcast %"class.v8::internal::ZoneHandleSet"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %330) #14
  %331 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %3, i64 0, i32 0
  store i64 1, i64* %331, align 8
  br label %332

332:                                              ; preds = %377, %327
  %333 = phi i64 [ %194, %327 ], [ %378, %377 ]
  %334 = phi i64 [ 0, %327 ], [ %379, %377 ]
  %335 = and i64 %333, 3
  %336 = inttoptr i64 %333 to i64*
  switch i64 %335, label %338 [
    i64 1, label %348
    i64 0, label %337
  ]

337:                                              ; preds = %332
  br label %348

338:                                              ; preds = %332
  %339 = add i64 %333, -2
  %340 = inttoptr i64 %339 to %"class.v8::internal::ZoneVector.1336"*
  %341 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %340, i64 0, i32 0, i32 0, i32 1
  %342 = bitcast i64*** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = inttoptr i64 %339 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = sub i64 %343, %345
  %347 = ashr exact i64 %346, 3
  br label %348

348:                                              ; preds = %338, %337, %332
  %349 = phi i64 [ 1, %337 ], [ %347, %338 ], [ 0, %332 ]
  %350 = icmp ult i64 %334, %349
  br i1 %350, label %351, label %380

351:                                              ; preds = %348
  %352 = icmp eq i64 %335, 0
  br i1 %352, label %372, label %353

353:                                              ; preds = %351
  %354 = add i64 %333, -2
  %355 = inttoptr i64 %354 to %"class.v8::internal::ZoneVector.1336"*
  %356 = shl i64 %334, 32
  %357 = ashr exact i64 %356, 32
  %358 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %355, i64 0, i32 0, i32 0, i32 1
  %359 = bitcast i64*** %358 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = inttoptr i64 %354 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = sub i64 %360, %362
  %364 = ashr exact i64 %363, 3
  %365 = icmp ugt i64 %364, %357
  br i1 %365, label %368, label %366

366:                                              ; preds = %353
  %367 = inttoptr i64 %354 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %367) #15
  unreachable

368:                                              ; preds = %353
  %369 = inttoptr i64 %362 to i64**
  %370 = getelementptr inbounds i64*, i64** %369, i64 %357
  %371 = load i64*, i64** %370, align 8
  br label %372

372:                                              ; preds = %368, %351
  %373 = phi i64* [ %371, %368 ], [ %336, %351 ]
  %374 = icmp eq i64* %373, %15
  br i1 %374, label %377, label %375

375:                                              ; preds = %372
  call void @_ZN2v88internal13ZoneHandleSetINS0_3MapEE6insertENS0_6HandleIS2_EEPNS0_4ZoneE(%"class.v8::internal::ZoneHandleSet"* nonnull %3, i64* %373, %"class.v8::internal::Zone"* %329) #14
  %376 = load i64, i64* %121, align 8
  br label %377

377:                                              ; preds = %375, %372
  %378 = phi i64 [ %376, %375 ], [ %333, %372 ]
  %379 = add nuw i64 %334, 1
  br label %332

380:                                              ; preds = %348
  %381 = load i64, i64* %331, align 8
  store i64 %381, i64* %121, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %330) #14
  %382 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %328, align 8
  call void @_ZN2v88internal13ZoneHandleSetINS0_3MapEE6insertENS0_6HandleIS2_EEPNS0_4ZoneE(%"class.v8::internal::ZoneHandleSet"* nonnull %6, i64* %17, %"class.v8::internal::Zone"* %382)
  %383 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %383) #14
  %384 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %119, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %37, %"class.v8::internal::compiler::Node"** %385, align 8
  %386 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 2, i32 0
  store i64* %15, i64** %386, align 8
  %387 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %328, align 8
  %388 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %122, align 8
  %389 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %388, null
  br i1 %389, label %411, label %390

390:                                              ; preds = %380
  %391 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %388, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %7, %"class.v8::internal::Zone"* %387) #14
  %392 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %122, align 8
  %393 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %392, %391
  br i1 %393, label %411, label %394

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %387, i64 0, i32 2
  %396 = load i64, i64* %395, align 8
  %397 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %387, i64 0, i32 3
  %398 = load i64, i64* %397, align 8
  %399 = sub i64 %398, %396
  %400 = icmp ult i64 %399, 528
  br i1 %400, label %401, label %403, !prof !4

401:                                              ; preds = %394
  %402 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %387, i64 528) #14
  br label %405

403:                                              ; preds = %394
  %404 = add i64 %396, 528
  store i64 %404, i64* %395, align 8
  br label %405

405:                                              ; preds = %403, %401
  %406 = phi i64 [ %402, %401 ], [ %396, %403 ]
  %407 = inttoptr i64 %406 to i8*
  %408 = inttoptr i64 %406 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %409 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %407, i8* align 8 %409, i64 528, i1 false) #14
  %410 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %408, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %391, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %410, align 8
  br label %411

411:                                              ; preds = %380, %390, %405
  %412 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %408, %405 ], [ %119, %380 ], [ %119, %390 ]
  %413 = load i64, i64* %121, align 8
  %414 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %328, align 8
  %415 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %414, i64 0, i32 2
  %416 = load i64, i64* %415, align 8
  %417 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %414, i64 0, i32 3
  %418 = load i64, i64* %417, align 8
  %419 = sub i64 %418, %416
  %420 = icmp ult i64 %419, 528
  br i1 %420, label %421, label %423, !prof !4

421:                                              ; preds = %411
  %422 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %414, i64 528) #14
  br label %425

423:                                              ; preds = %411
  %424 = add i64 %416, 528
  store i64 %424, i64* %415, align 8
  br label %425

425:                                              ; preds = %423, %421
  %426 = phi i64 [ %422, %421 ], [ %416, %423 ]
  %427 = inttoptr i64 %426 to i8*
  %428 = inttoptr i64 %426 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %429 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %412 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %427, i8* align 8 %429, i64 528, i1 false) #14
  %430 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %428, i64 0, i32 3
  %431 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %430, align 8
  %432 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %431, null
  br i1 %432, label %435, label %433

433:                                              ; preds = %425
  %434 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %431, %"class.v8::internal::compiler::Node"* %37, i64 %413, %"class.v8::internal::Zone"* %414) #14
  br label %447

435:                                              ; preds = %425
  %436 = load i64, i64* %415, align 8
  %437 = load i64, i64* %417, align 8
  %438 = sub i64 %437, %436
  %439 = icmp ult i64 %438, 32
  br i1 %439, label %440, label %442, !prof !4

440:                                              ; preds = %435
  %441 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %414, i64 32) #14
  br label %444

442:                                              ; preds = %435
  %443 = add i64 %436, 32
  store i64 %443, i64* %415, align 8
  br label %444

444:                                              ; preds = %442, %440
  %445 = phi i64 [ %441, %440 ], [ %436, %442 ]
  %446 = inttoptr i64 %445 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %446, %"class.v8::internal::compiler::Node"* %37, i64 %413, %"class.v8::internal::Zone"* %414) #14
  br label %447

447:                                              ; preds = %433, %444
  %448 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %446, %444 ], [ %434, %433 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %448, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %430, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %383) #14
  br label %479

449:                                              ; preds = %118, %165, %184, %186
  %450 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #14
  %451 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %8, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %119, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %8, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %37, %"class.v8::internal::compiler::Node"** %452, align 8
  %453 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %8, i64 0, i32 2, i32 0
  store i64* %15, i64** %453, align 8
  %454 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %455 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %454, align 8
  br i1 %124, label %477, label %456

456:                                              ; preds = %449
  %457 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %123, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %8, %"class.v8::internal::Zone"* %455) #14
  %458 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %122, align 8
  %459 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %458, %457
  br i1 %459, label %477, label %460

460:                                              ; preds = %456
  %461 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %455, i64 0, i32 2
  %462 = load i64, i64* %461, align 8
  %463 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %455, i64 0, i32 3
  %464 = load i64, i64* %463, align 8
  %465 = sub i64 %464, %462
  %466 = icmp ult i64 %465, 528
  br i1 %466, label %467, label %469, !prof !4

467:                                              ; preds = %460
  %468 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %455, i64 528) #14
  br label %471

469:                                              ; preds = %460
  %470 = add i64 %462, 528
  store i64 %470, i64* %461, align 8
  br label %471

471:                                              ; preds = %469, %467
  %472 = phi i64 [ %468, %467 ], [ %462, %469 ]
  %473 = inttoptr i64 %472 to i8*
  %474 = inttoptr i64 %472 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %475 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %473, i8* align 8 %475, i64 528, i1 false) #14
  %476 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %474, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %457, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %476, align 8
  br label %477

477:                                              ; preds = %449, %456, %471
  %478 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %474, %471 ], [ %119, %449 ], [ %119, %456 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #14
  br label %479

479:                                              ; preds = %321, %318, %305, %324, %285, %268, %264, %447, %477
  %480 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %428, %447 ], [ %119, %324 ], [ %478, %477 ], [ %119, %264 ], [ %119, %268 ], [ %119, %285 ], [ %119, %305 ], [ %119, %318 ], [ %119, %321 ]
  %481 = load i32, i32* %24, align 4
  %482 = and i32 %481, 16777215
  %483 = zext i32 %482 to i64
  %484 = load i64, i64* %69, align 8
  %485 = load i64, i64* %71, align 8
  %486 = sub i64 %484, %485
  %487 = ashr exact i64 %486, 3
  %488 = icmp ugt i64 %487, %483
  br i1 %488, label %489, label %493

489:                                              ; preds = %479
  %490 = inttoptr i64 %485 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %491 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %490, i64 %483
  %492 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %491, align 8
  br label %493

493:                                              ; preds = %489, %479
  %494 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %492, %489 ], [ null, %479 ]
  %495 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %494, %480
  br i1 %495, label %524, label %496

496:                                              ; preds = %493
  %497 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %494, null
  br i1 %497, label %508, label %498

498:                                              ; preds = %496
  %499 = call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %480, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %494) #14
  br i1 %499, label %524, label %500

500:                                              ; preds = %498
  %501 = load i32, i32* %24, align 4
  %502 = load i64, i64* %69, align 8
  %503 = load i64, i64* %71, align 8
  %504 = and i32 %501, 16777215
  %505 = zext i32 %504 to i64
  %506 = sub i64 %502, %503
  %507 = ashr exact i64 %506, 3
  br label %508

508:                                              ; preds = %500, %496
  %509 = phi i64 [ %507, %500 ], [ %487, %496 ]
  %510 = phi i64 [ %505, %500 ], [ %483, %496 ]
  %511 = phi i64 [ %503, %500 ], [ %485, %496 ]
  %512 = icmp ugt i64 %509, %510
  %513 = inttoptr i64 %511 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %512, label %521, label %514

514:                                              ; preds = %508
  %515 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %63, i64 0, i32 0, i32 0
  %516 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %516) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4, align 8
  %517 = sub nsw i64 1, %509
  %518 = add nsw i64 %517, %510
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %515, i64 %518, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %516) #14
  %519 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %520 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %519, align 8
  br label %521

521:                                              ; preds = %514, %508
  %522 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %513, %508 ], [ %520, %514 ]
  %523 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %522, i64 %510
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %480, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %523, align 8
  br label %524

524:                                              ; preds = %242, %258, %210, %200, %191, %521, %498, %493
  %525 = phi %"class.v8::internal::compiler::Node"* [ %62, %258 ], [ %1, %521 ], [ null, %493 ], [ null, %498 ], [ %62, %191 ], [ %62, %200 ], [ %62, %210 ], [ %62, %242 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #14
  br label %526

526:                                              ; preds = %57, %76, %524
  %527 = phi %"class.v8::internal::compiler::Node"* [ %525, %524 ], [ null, %76 ], [ null, %57 ]
  ret %"class.v8::internal::compiler::Node"* %527
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination15ReduceLoadFieldEPNS1_4NodeERKNS1_11FieldAccessE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::FieldAccess"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array.1357", align 8
  %5 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %6 = alloca %"class.v8::internal::compiler::Type", align 8
  %7 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %9, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 251658240
  %18 = icmp eq i32 %17, 251658240
  %19 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %20 = add i64 %19, 32
  br i1 %18, label %21, label %25

21:                                               ; preds = %14
  %22 = inttoptr i64 %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 16
  br label %25

25:                                               ; preds = %14, %21
  %26 = phi i64 [ %24, %21 ], [ %20, %14 ]
  %27 = inttoptr i64 %26 to %"class.v8::internal::compiler::Node"**
  %28 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %9, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %25
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

33:                                               ; preds = %25
  %34 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %9) #14
  %35 = zext i1 %34 to i32
  %36 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %37 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %36) #14
  %38 = zext i1 %37 to i32
  %39 = add nuw i32 %11, %35
  %40 = add nuw i32 %39, %38
  %41 = load i32, i32* %15, align 4
  %42 = and i32 %41, 251658240
  %43 = icmp eq i32 %42, 251658240
  br i1 %43, label %44, label %48

44:                                               ; preds = %33
  %45 = inttoptr i64 %20 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 16
  br label %48

48:                                               ; preds = %33, %44
  %49 = phi i64 [ %47, %44 ], [ %20, %33 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::Node"**
  %51 = sext i32 %40 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, i64 %51
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %54, i64 0, i32 7
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %59, label %58, !prof !3

58:                                               ; preds = %48
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #15
  unreachable

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %54, i64 0, i32 5
  %61 = load i32, i32* %60, align 4
  %62 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %54) #14
  %63 = zext i1 %62 to i32
  %64 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %65 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %64) #14
  %66 = zext i1 %65 to i32
  %67 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %67, i64 0, i32 6
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %61, %63
  %71 = add i32 %70, %66
  %72 = add i32 %71, %69
  %73 = load i32, i32* %15, align 4
  %74 = and i32 %73, 251658240
  %75 = icmp eq i32 %74, 251658240
  br i1 %75, label %76, label %80

76:                                               ; preds = %59
  %77 = inttoptr i64 %20 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 16
  br label %80

80:                                               ; preds = %59, %76
  %81 = phi i64 [ %79, %76 ], [ %20, %59 ]
  %82 = inttoptr i64 %81 to %"class.v8::internal::compiler::Node"**
  %83 = sext i32 %72 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 %83
  %85 = bitcast %"class.v8::internal::compiler::Node"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 16777215
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %87 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = icmp ugt i64 %98, %91
  br i1 %99, label %100, label %439

100:                                              ; preds = %80
  %101 = inttoptr i64 %96 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %101, i64 %91
  %103 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %102, align 8
  %104 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %103, null
  br i1 %104, label %439, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %219

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 0
  %111 = load i8, i8* %110, align 8
  %112 = icmp eq i8 %111, 1
  br i1 %112, label %113, label %219

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %103, i64 0, i32 3
  %115 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %114, align 8
  %116 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %115, null
  br i1 %116, label %351, label %117

117:                                              ; preds = %113, %153
  %118 = phi %"class.v8::internal::compiler::Node"* [ %156, %153 ], [ %28, %113 ]
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 0
  %120 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 2
  %122 = load i16, i16* %121, align 8
  switch i16 %122, label %157 [
    i16 207, label %123
    i16 40, label %123
    i16 59, label %123
  ]

123:                                              ; preds = %117, %117, %117
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = lshr i32 %125, 24
  %127 = and i32 %126, 15
  %128 = icmp eq i32 %127, 15
  %129 = ptrtoint %"class.v8::internal::compiler::Node"* %118 to i64
  %130 = add i64 %129, 32
  br i1 %128, label %131, label %138

131:                                              ; preds = %123
  %132 = inttoptr i64 %130 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %133 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %132, align 8
  %134 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %133 to i64
  %135 = add i64 %134, 16
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %133, i64 0, i32 1
  %137 = load i32, i32* %136, align 8
  br label %138

138:                                              ; preds = %131, %123
  %139 = phi i32 [ %137, %131 ], [ %127, %123 ]
  %140 = phi i64 [ %135, %131 ], [ %130, %123 ]
  %141 = icmp sgt i32 %139, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %138
  %143 = inttoptr i64 %140 to %"class.v8::internal::compiler::Node"**
  %144 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, align 8
  %145 = icmp eq %"class.v8::internal::compiler::Node"* %144, null
  br i1 %145, label %157, label %146

146:                                              ; preds = %142, %138
  %147 = and i32 %125, 251658240
  %148 = icmp eq i32 %147, 251658240
  br i1 %148, label %149, label %153

149:                                              ; preds = %146
  %150 = inttoptr i64 %130 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 16
  br label %153

153:                                              ; preds = %149, %146
  %154 = phi i64 [ %152, %149 ], [ %130, %146 ]
  %155 = inttoptr i64 %154 to %"class.v8::internal::compiler::Node"**
  %156 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, align 8
  br label %117

157:                                              ; preds = %142, %117
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %115, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %159 = bitcast %"class.std::__1::__tree_end_node"* %158 to %"class.std::__1::__tree_node"**
  %160 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node"* %160, null
  br i1 %161, label %351, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.std::__1::__tree_end_node"* [ %173, %162 ], [ %158, %157 ]
  %164 = phi %"class.std::__1::__tree_node"* [ %174, %162 ], [ %160, %157 ]
  %165 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %164, i64 0, i32 1, i32 0, i32 0
  %166 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %165, align 8
  %167 = icmp ult %"class.v8::internal::compiler::Node"* %166, %118
  %168 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %164, i64 0, i32 0, i32 1
  %169 = bitcast %"class.std::__1::__tree_node_base"** %168 to %"class.std::__1::__tree_node"**
  %170 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %164, i64 0, i32 0, i32 0
  %171 = bitcast %"class.std::__1::__tree_node"* %164 to %"class.std::__1::__tree_node"**
  %172 = select i1 %167, %"class.std::__1::__tree_node"** %169, %"class.std::__1::__tree_node"** %171
  %173 = select i1 %167, %"class.std::__1::__tree_end_node"* %163, %"class.std::__1::__tree_end_node"* %170
  %174 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %172, align 8
  %175 = icmp eq %"class.std::__1::__tree_node"* %174, null
  br i1 %175, label %176, label %162

176:                                              ; preds = %162
  %177 = icmp eq %"class.std::__1::__tree_end_node"* %173, %158
  br i1 %177, label %351, label %178

178:                                              ; preds = %176
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %173, i64 4
  %180 = bitcast %"class.std::__1::__tree_end_node"* %179 to %"class.v8::internal::compiler::Node"**
  %181 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, align 8
  %182 = icmp ult %"class.v8::internal::compiler::Node"* %118, %181
  br i1 %182, label %351, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %173, i64 5
  %185 = bitcast %"class.std::__1::__tree_end_node"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = and i64 %186, 3
  switch i64 %187, label %188 [
    i64 1, label %351
    i64 0, label %198
  ]

188:                                              ; preds = %183
  %189 = add i64 %186, -2
  %190 = inttoptr i64 %189 to %"class.v8::internal::ZoneVector.1336"*
  %191 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %190, i64 0, i32 0, i32 0, i32 1
  %192 = bitcast i64*** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = inttoptr i64 %189 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %193, %195
  %197 = icmp eq i64 %196, 8
  br i1 %197, label %200, label %351

198:                                              ; preds = %183
  %199 = inttoptr i64 %186 to i64*
  br label %207

200:                                              ; preds = %188
  %201 = icmp eq i64 %193, %195
  br i1 %201, label %202, label %204

202:                                              ; preds = %200
  %203 = inttoptr i64 %189 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %203) #15
  unreachable

204:                                              ; preds = %200
  %205 = inttoptr i64 %195 to i64**
  %206 = load i64*, i64** %205, align 8
  br label %207

207:                                              ; preds = %204, %198
  %208 = phi i64* [ %199, %198 ], [ %206, %204 ]
  %209 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %210 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %209, align 8
  %211 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12HeapConstantENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::JSGraph"* %210, i64* %208) #14
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %211, i64 0, i32 1, i32 0
  store i64 16777217, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 0, i32 1
  %214 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %213, align 8
  %215 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %214 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %216 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %215, align 8
  %217 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %216, i64 4
  %218 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %217, align 8
  tail call void %218(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %214, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %211, %"class.v8::internal::compiler::Node"* %53, %"class.v8::internal::compiler::Node"* null) #14
  br label %439

219:                                              ; preds = %109, %105
  %220 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 6, i32 0
  %221 = load i8, i8* %220, align 1
  switch i8 %221, label %224 [
    i8 0, label %222
    i8 1, label %222
    i8 14, label %222
    i8 2, label %351
    i8 3, label %351
    i8 12, label %351
    i8 11, label %225
    i8 10, label %225
    i8 6, label %225
    i8 4, label %225
    i8 8, label %225
    i8 5, label %223
    i8 13, label %223
    i8 9, label %225
    i8 7, label %225
  ]

222:                                              ; preds = %219, %219, %219
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #15
  unreachable

223:                                              ; preds = %219, %219
  br label %225

224:                                              ; preds = %219
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #15
  unreachable

225:                                              ; preds = %223, %219, %219, %219, %219, %219, %219, %219
  %226 = phi i32 [ 3, %223 ], [ 2, %219 ], [ 2, %219 ], [ 2, %219 ], [ 2, %219 ], [ 2, %219 ], [ 2, %219 ], [ 2, %219 ]
  %227 = shl i32 1, %226
  %228 = icmp slt i32 %227, 4
  br i1 %228, label %351, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 0
  %231 = load i8, i8* %230, align 8
  %232 = icmp eq i8 %231, 1
  br i1 %232, label %233, label %351

233:                                              ; preds = %229
  %234 = sdiv i32 %107, 4
  %235 = add nsw i32 %234, -1
  %236 = lshr exact i32 %227, 2
  %237 = add nsw i32 %236, %235
  %238 = icmp sgt i32 %237, 32
  %239 = select i1 %238, i32 -1, i32 %237
  %240 = select i1 %238, i32 -1, i32 %235
  %241 = and i32 %240, %239
  %242 = icmp eq i32 %241, -1
  br i1 %242, label %351, label %243

243:                                              ; preds = %233
  %244 = zext i32 %239 to i64
  %245 = shl nuw i64 %244, 32
  %246 = zext i32 %240 to i64
  %247 = or i64 %245, %246
  %248 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 10, i32 0, i32 0
  %249 = load i64*, i64** %248, align 8
  %250 = tail call %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState11LookupFieldEPNS1_4NodeENS2_10IndexRangeENS1_14ConstFieldInfoE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %103, %"class.v8::internal::compiler::Node"* %28, i64 %247, i64* %249)
  %251 = icmp eq %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %250, null
  br i1 %251, label %252, label %258

252:                                              ; preds = %243
  %253 = load i64*, i64** %248, align 8
  %254 = icmp eq i64* %253, null
  br i1 %254, label %327, label %255

255:                                              ; preds = %252
  %256 = tail call %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState11LookupFieldEPNS1_4NodeENS2_10IndexRangeENS1_14ConstFieldInfoE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %103, %"class.v8::internal::compiler::Node"* %28, i64 %247, i64* null)
  %257 = icmp eq %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %256, null
  br i1 %257, label %327, label %258

258:                                              ; preds = %243, %255
  %259 = phi %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* [ %256, %255 ], [ %250, %243 ]
  %260 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %259, i64 0, i32 0
  %261 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %260, align 8
  %262 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %259, i64 0, i32 1
  %263 = load i8, i8* %262, align 8
  %264 = icmp eq i8 %221, %263
  br i1 %264, label %270, label %265

265:                                              ; preds = %258
  %266 = add nsw i8 %221, -6
  %267 = add i8 %263, -6
  %268 = or i8 %267, %266
  %269 = icmp ult i8 %268, 4
  br i1 %269, label %270, label %327

270:                                              ; preds = %265, %258
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %261, i64 0, i32 3
  %272 = load i32, i32* %271, align 4
  %273 = lshr i32 %272, 24
  %274 = and i32 %273, 15
  %275 = icmp eq i32 %274, 15
  %276 = ptrtoint %"class.v8::internal::compiler::Node"* %261 to i64
  %277 = add i64 %276, 32
  br i1 %275, label %278, label %285

278:                                              ; preds = %270
  %279 = inttoptr i64 %277 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %280 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %279, align 8
  %281 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %280 to i64
  %282 = add i64 %281, 16
  %283 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %280, i64 0, i32 1
  %284 = load i32, i32* %283, align 8
  br label %285

285:                                              ; preds = %278, %270
  %286 = phi i32 [ %284, %278 ], [ %274, %270 ]
  %287 = phi i64 [ %282, %278 ], [ %277, %270 ]
  %288 = icmp sgt i32 %286, 0
  br i1 %288, label %289, label %293

289:                                              ; preds = %285
  %290 = inttoptr i64 %287 to %"class.v8::internal::compiler::Node"**
  %291 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %290, align 8
  %292 = icmp eq %"class.v8::internal::compiler::Node"* %291, null
  br i1 %292, label %327, label %293

293:                                              ; preds = %285, %289
  %294 = bitcast %"class.v8::internal::compiler::Type"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %294) #14
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %261, i64 0, i32 1, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %6, i64 0, i32 0
  store i64 %296, i64* %297, align 8
  %298 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = icmp eq i64 %296, %299
  br i1 %300, label %301, label %302

301:                                              ; preds = %293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #14
  br label %342

302:                                              ; preds = %293
  %303 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %299) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #14
  br i1 %303, label %342, label %304

304:                                              ; preds = %302
  %305 = load i64, i64* %298, align 8
  %306 = load i64, i64* %295, align 8
  %307 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %308 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %307, align 8
  %309 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %308, i64 0, i32 0, i32 0
  %310 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %309, align 8
  %311 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %310, i64 0, i32 0
  %312 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %311, align 8
  %313 = call i64 @_ZN2v88internal8compiler4Type9IntersectES2_S2_PNS0_4ZoneE(i64 %305, i64 %306, %"class.v8::internal::Zone"* %312) #14
  %314 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %307, align 8
  %315 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %314, i64 0, i32 0, i32 0
  %316 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %315, align 8
  %317 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %314, i64 0, i32 0, i32 1
  %318 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %317, align 8
  %319 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9TypeGuardENS1_4TypeE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %318, i64 %313) #14
  %320 = bitcast %"struct.std::__1::array.1357"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %320) #14
  %321 = getelementptr inbounds %"struct.std::__1::array.1357", %"struct.std::__1::array.1357"* %4, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %261, %"class.v8::internal::compiler::Node"** %321, align 8
  %322 = getelementptr inbounds %"struct.std::__1::array.1357", %"struct.std::__1::array.1357"* %4, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %53, %"class.v8::internal::compiler::Node"** %322, align 8
  %323 = getelementptr inbounds %"struct.std::__1::array.1357", %"struct.std::__1::array.1357"* %4, i64 0, i32 0, i64 2
  %324 = bitcast %"class.v8::internal::compiler::Node"** %323 to i64*
  store i64 %86, i64* %324, align 8
  %325 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %316, %"class.v8::internal::compiler::Operator"* %319, i32 3, %"class.v8::internal::compiler::Node"** nonnull %321, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %320) #14
  %326 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %325, i64 0, i32 1, i32 0
  store i64 %313, i64* %326, align 8
  br label %342

327:                                              ; preds = %252, %255, %289, %265
  %328 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 3, i32 0
  %329 = bitcast i64** %328 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = bitcast i64** %248 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %7, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %333, align 8
  %334 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %7, i64 0, i32 1
  store i8 %221, i8* %334, align 8
  %335 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %7, i64 0, i32 2, i32 0
  %336 = bitcast i64** %335 to i64*
  store i64 %330, i64* %336, align 8
  %337 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %7, i64 0, i32 3, i32 0, i32 0
  %338 = bitcast i64** %337 to i64*
  store i64 %332, i64* %338, align 8
  %339 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %340 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %339, align 8
  %341 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState8AddFieldEPNS1_4NodeENS2_10IndexRangeENS2_9FieldInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %103, %"class.v8::internal::compiler::Node"* %28, i64 %247, %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* nonnull byval(%"struct.v8::internal::compiler::LoadElimination::FieldInfo") align 8 %7, %"class.v8::internal::Zone"* %340)
  br label %351

342:                                              ; preds = %304, %302, %301
  %343 = phi %"class.v8::internal::compiler::Node"* [ %325, %304 ], [ %261, %302 ], [ %261, %301 ]
  %344 = phi %"class.v8::internal::compiler::Node"* [ %325, %304 ], [ %53, %302 ], [ %53, %301 ]
  %345 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 0, i32 1
  %346 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %345, align 8
  %347 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %346 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %348 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %347, align 8
  %349 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %348, i64 4
  %350 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %349, align 8
  call void %350(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %346, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %343, %"class.v8::internal::compiler::Node"* %344, %"class.v8::internal::compiler::Node"* null) #14
  br label %439

351:                                              ; preds = %233, %219, %219, %219, %225, %229, %327, %183, %178, %176, %157, %113, %188
  %352 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %103, %188 ], [ %103, %113 ], [ %103, %157 ], [ %103, %176 ], [ %103, %178 ], [ %103, %183 ], [ %341, %327 ], [ %103, %229 ], [ %103, %225 ], [ %103, %219 ], [ %103, %219 ], [ %103, %219 ], [ %103, %233 ]
  %353 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 4, i32 0
  %354 = load i64*, i64** %353, align 8
  %355 = icmp eq i64* %354, null
  br i1 %355, label %394, label %356

356:                                              ; preds = %351
  %357 = ptrtoint i64* %354 to i64
  %358 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %359 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %358, align 8
  %360 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %359, i64 0, i32 2
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %359, i64 0, i32 3
  %363 = load i64, i64* %362, align 8
  %364 = sub i64 %363, %361
  %365 = icmp ult i64 %364, 528
  br i1 %365, label %366, label %368, !prof !4

366:                                              ; preds = %356
  %367 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %359, i64 528) #14
  br label %370

368:                                              ; preds = %356
  %369 = add i64 %361, 528
  store i64 %369, i64* %360, align 8
  br label %370

370:                                              ; preds = %368, %366
  %371 = phi i64 [ %367, %366 ], [ %361, %368 ]
  %372 = inttoptr i64 %371 to i8*
  %373 = inttoptr i64 %371 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %374 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %352 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %372, i8* align 8 %374, i64 528, i1 false) #14
  %375 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %373, i64 0, i32 3
  %376 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %375, align 8
  %377 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %376, null
  br i1 %377, label %380, label %378

378:                                              ; preds = %370
  %379 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %376, %"class.v8::internal::compiler::Node"* %1, i64 %357, %"class.v8::internal::Zone"* %359) #14
  br label %392

380:                                              ; preds = %370
  %381 = load i64, i64* %360, align 8
  %382 = load i64, i64* %362, align 8
  %383 = sub i64 %382, %381
  %384 = icmp ult i64 %383, 32
  br i1 %384, label %385, label %387, !prof !4

385:                                              ; preds = %380
  %386 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %359, i64 32) #14
  br label %389

387:                                              ; preds = %380
  %388 = add i64 %381, 32
  store i64 %388, i64* %360, align 8
  br label %389

389:                                              ; preds = %387, %385
  %390 = phi i64 [ %386, %385 ], [ %381, %387 ]
  %391 = inttoptr i64 %390 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  tail call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %391, %"class.v8::internal::compiler::Node"* %1, i64 %357, %"class.v8::internal::Zone"* %359) #14
  br label %392

392:                                              ; preds = %378, %389
  %393 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %391, %389 ], [ %379, %378 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %393, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %375, align 8
  br label %394

394:                                              ; preds = %351, %392
  %395 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %373, %392 ], [ %352, %351 ]
  %396 = load i32, i32* %15, align 4
  %397 = and i32 %396, 16777215
  %398 = zext i32 %397 to i64
  %399 = load i64, i64* %93, align 8
  %400 = load i64, i64* %95, align 8
  %401 = sub i64 %399, %400
  %402 = ashr exact i64 %401, 3
  %403 = icmp ugt i64 %402, %398
  br i1 %403, label %404, label %408

404:                                              ; preds = %394
  %405 = inttoptr i64 %400 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %406 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %405, i64 %398
  %407 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %406, align 8
  br label %408

408:                                              ; preds = %404, %394
  %409 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %407, %404 ], [ null, %394 ]
  %410 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %409, %395
  br i1 %410, label %439, label %411

411:                                              ; preds = %408
  %412 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %409, null
  br i1 %412, label %423, label %413

413:                                              ; preds = %411
  %414 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %395, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %409) #14
  br i1 %414, label %439, label %415

415:                                              ; preds = %413
  %416 = load i32, i32* %15, align 4
  %417 = load i64, i64* %93, align 8
  %418 = load i64, i64* %95, align 8
  %419 = and i32 %416, 16777215
  %420 = zext i32 %419 to i64
  %421 = sub i64 %417, %418
  %422 = ashr exact i64 %421, 3
  br label %423

423:                                              ; preds = %415, %411
  %424 = phi i64 [ %422, %415 ], [ %402, %411 ]
  %425 = phi i64 [ %420, %415 ], [ %398, %411 ]
  %426 = phi i64 [ %418, %415 ], [ %400, %411 ]
  %427 = icmp ugt i64 %424, %425
  %428 = inttoptr i64 %426 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %427, label %436, label %429

429:                                              ; preds = %423
  %430 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %87, i64 0, i32 0, i32 0
  %431 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %431) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %5, align 8
  %432 = sub nsw i64 1, %424
  %433 = add nsw i64 %432, %425
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %430, i64 %433, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %431) #14
  %434 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %435 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %434, align 8
  br label %436

436:                                              ; preds = %429, %423
  %437 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %428, %423 ], [ %435, %429 ]
  %438 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %437, i64 %425
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %395, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %438, align 8
  br label %439

439:                                              ; preds = %80, %436, %413, %408, %342, %207, %100
  %440 = phi %"class.v8::internal::compiler::Node"* [ %211, %207 ], [ %343, %342 ], [ null, %100 ], [ %1, %436 ], [ null, %408 ], [ null, %413 ], [ null, %80 ]
  ret %"class.v8::internal::compiler::Node"* %440
}

declare dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination16ReduceStoreFieldEPNS1_4NodeERKNS1_11FieldAccessE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::FieldAccess"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %5 = alloca %"struct.std::__1::array.1358", align 8
  %6 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %7 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %8 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %9 = alloca %"class.v8::internal::compiler::Type", align 8
  %10 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %11 = alloca [7 x i8], align 1
  %12 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %13 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %20, label %19, !prof !3

19:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 251658240
  %24 = icmp eq i32 %23, 251658240
  %25 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %26 = add i64 %25, 32
  br i1 %24, label %27, label %31

27:                                               ; preds = %20
  %28 = inttoptr i64 %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 16
  br label %31

31:                                               ; preds = %20, %27
  %32 = phi i64 [ %30, %27 ], [ %26, %20 ]
  %33 = inttoptr i64 %32 to %"class.v8::internal::compiler::Node"**
  %34 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, align 8
  %35 = icmp sgt i32 %17, 1
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %31
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

37:                                               ; preds = %31
  br i1 %24, label %38, label %42

38:                                               ; preds = %37
  %39 = inttoptr i64 %26 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 16
  br label %42

42:                                               ; preds = %37, %38
  %43 = phi i64 [ %41, %38 ], [ %26, %37 ]
  %44 = inttoptr i64 %43 to %"class.v8::internal::compiler::Node"**
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, i64 1
  %46 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 6
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %51, label %50, !prof !3

50:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

51:                                               ; preds = %42
  %52 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %53 = zext i1 %52 to i32
  %54 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %55 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %54) #14
  %56 = zext i1 %55 to i32
  %57 = add nuw i32 %17, %53
  %58 = add nuw i32 %57, %56
  %59 = load i32, i32* %21, align 4
  %60 = and i32 %59, 251658240
  %61 = icmp eq i32 %60, 251658240
  br i1 %61, label %62, label %66

62:                                               ; preds = %51
  %63 = inttoptr i64 %26 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 16
  br label %66

66:                                               ; preds = %51, %62
  %67 = phi i64 [ %65, %62 ], [ %26, %51 ]
  %68 = inttoptr i64 %67 to %"class.v8::internal::compiler::Node"**
  %69 = sext i32 %58 to i64
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 %69
  %71 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %71, i64 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 16777215
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %72 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = icmp ugt i64 %83, %76
  br i1 %84, label %85, label %522

85:                                               ; preds = %66
  %86 = inttoptr i64 %81 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %87 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %86, i64 %76
  %88 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %87, align 8
  %89 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88, null
  br i1 %89, label %522, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %190

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 0
  %96 = load i8, i8* %95, align 8
  %97 = icmp eq i8 %96, 1
  br i1 %97, label %98, label %190

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %100 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %99, align 8
  %101 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #14
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %34, %"class.v8::internal::compiler::Node"** %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 2, i32 0
  store i64* null, i64** %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88, i64 0, i32 3
  %106 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %105, align 8
  %107 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %106, null
  br i1 %107, label %129, label %108

108:                                              ; preds = %98
  %109 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %106, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %7, %"class.v8::internal::Zone"* %100) #14
  %110 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %105, align 8
  %111 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %110, %109
  br i1 %111, label %129, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %100, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %100, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %114
  %118 = icmp ult i64 %117, 528
  br i1 %118, label %119, label %121, !prof !4

119:                                              ; preds = %112
  %120 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %100, i64 528) #14
  br label %123

121:                                              ; preds = %112
  %122 = add i64 %114, 528
  store i64 %122, i64* %113, align 8
  br label %123

123:                                              ; preds = %121, %119
  %124 = phi i64 [ %120, %119 ], [ %114, %121 ]
  %125 = inttoptr i64 %124 to i8*
  %126 = inttoptr i64 %124 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %127 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* nonnull align 8 %127, i64 528, i1 false) #14
  %128 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %126, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %109, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %128, align 8
  br label %129

129:                                              ; preds = %98, %108, %123
  %130 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %126, %123 ], [ %88, %98 ], [ %88, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #14
  %131 = bitcast %"class.v8::internal::compiler::Type"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #14
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %46, i64 0, i32 1, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %9, i64 0, i32 0
  store i64 %133, i64* %134, align 8
  %135 = and i64 %133, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %188

137:                                              ; preds = %129
  %138 = inttoptr i64 %133 to %"class.v8::internal::compiler::TypeBase"*
  %139 = getelementptr inbounds %"class.v8::internal::compiler::TypeBase", %"class.v8::internal::compiler::TypeBase"* %138, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %188

142:                                              ; preds = %137
  %143 = bitcast %"class.v8::internal::compiler::MapRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #14
  %144 = call %"class.v8::internal::compiler::HeapConstantType"* @_ZNK2v88internal8compiler4Type14AsHeapConstantEv(%"class.v8::internal::compiler::Type"* nonnull %9) #14
  %145 = getelementptr inbounds %"class.v8::internal::compiler::HeapConstantType", %"class.v8::internal::compiler::HeapConstantType"* %144, i64 0, i32 2, i32 0
  %146 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef5AsMapEv(%"class.v8::internal::compiler::ObjectRef"* %145) #14
  %147 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %10, i64 0, i32 0, i32 0, i32 0
  %148 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %146, 0
  store %"class.v8::internal::compiler::ObjectData"* %148, %"class.v8::internal::compiler::ObjectData"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %10, i64 0, i32 0, i32 0, i32 1
  %150 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %146, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %150, %"class.v8::internal::compiler::JSHeapBroker"** %149, align 8
  %151 = call i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"* nonnull %10) #14
  %152 = ptrtoint i64* %151 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #14
  %153 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %99, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %153, i64 0, i32 2
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %153, i64 0, i32 3
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %157, %155
  %159 = icmp ult i64 %158, 528
  br i1 %159, label %160, label %162, !prof !4

160:                                              ; preds = %142
  %161 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %153, i64 528) #14
  br label %164

162:                                              ; preds = %142
  %163 = add i64 %155, 528
  store i64 %163, i64* %154, align 8
  br label %164

164:                                              ; preds = %162, %160
  %165 = phi i64 [ %161, %160 ], [ %155, %162 ]
  %166 = inttoptr i64 %165 to i8*
  %167 = inttoptr i64 %165 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %168 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %168, i64 528, i1 false) #14
  %169 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %167, i64 0, i32 3
  %170 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %169, align 8
  %171 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %164
  %173 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %170, %"class.v8::internal::compiler::Node"* %34, i64 %152, %"class.v8::internal::Zone"* %153) #14
  br label %186

174:                                              ; preds = %164
  %175 = load i64, i64* %154, align 8
  %176 = load i64, i64* %156, align 8
  %177 = sub i64 %176, %175
  %178 = icmp ult i64 %177, 32
  br i1 %178, label %179, label %181, !prof !4

179:                                              ; preds = %174
  %180 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %153, i64 32) #14
  br label %183

181:                                              ; preds = %174
  %182 = add i64 %175, 32
  store i64 %182, i64* %154, align 8
  br label %183

183:                                              ; preds = %181, %179
  %184 = phi i64 [ %180, %179 ], [ %175, %181 ]
  %185 = inttoptr i64 %184 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %185, %"class.v8::internal::compiler::Node"* %34, i64 %152, %"class.v8::internal::Zone"* %153) #14
  br label %186

186:                                              ; preds = %172, %183
  %187 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %185, %183 ], [ %173, %172 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %187, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %169, align 8
  br label %188

188:                                              ; preds = %129, %186, %137
  %189 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %167, %186 ], [ %130, %137 ], [ %130, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #14
  br label %477

190:                                              ; preds = %94, %90
  %191 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 6, i32 0
  %192 = load i8, i8* %191, align 1
  switch i8 %192, label %195 [
    i8 0, label %193
    i8 1, label %193
    i8 14, label %193
    i8 2, label %425
    i8 3, label %425
    i8 12, label %425
    i8 11, label %196
    i8 10, label %196
    i8 6, label %196
    i8 4, label %196
    i8 8, label %196
    i8 5, label %194
    i8 13, label %194
    i8 9, label %196
    i8 7, label %196
  ]

193:                                              ; preds = %190, %190, %190
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #15
  unreachable

194:                                              ; preds = %190, %190
  br label %196

195:                                              ; preds = %190
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #15
  unreachable

196:                                              ; preds = %194, %190, %190, %190, %190, %190, %190, %190
  %197 = phi i32 [ 3, %194 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ], [ 2, %190 ]
  %198 = shl i32 1, %197
  %199 = icmp slt i32 %198, 4
  br i1 %199, label %425, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 0
  %202 = load i8, i8* %201, align 8
  %203 = icmp eq i8 %202, 1
  br i1 %203, label %204, label %425

204:                                              ; preds = %200
  %205 = sdiv i32 %92, 4
  %206 = add nsw i32 %205, -1
  %207 = lshr exact i32 %198, 2
  %208 = add nsw i32 %207, %206
  %209 = icmp sgt i32 %208, 32
  %210 = select i1 %209, i32 -1, i32 %208
  %211 = select i1 %209, i32 -1, i32 %206
  %212 = and i32 %211, %210
  %213 = icmp eq i32 %212, -1
  br i1 %213, label %425, label %214

214:                                              ; preds = %204
  %215 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 10, i32 0, i32 0
  %216 = load i64*, i64** %215, align 8
  %217 = icmp ne i64* %216, null
  %218 = zext i32 %210 to i64
  %219 = shl nuw i64 %218, 32
  %220 = zext i32 %211 to i64
  %221 = or i64 %219, %220
  %222 = tail call %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState11LookupFieldEPNS1_4NodeENS2_10IndexRangeENS1_14ConstFieldInfoE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %88, %"class.v8::internal::compiler::Node"* %34, i64 %221, i64* %216)
  %223 = icmp eq %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %222, null
  %224 = or i1 %217, %223
  br i1 %224, label %288, label %225

225:                                              ; preds = %214
  %226 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %222, i64 0, i32 2, i32 0
  %227 = load i64*, i64** %226, align 8
  %228 = icmp eq i64* %227, null
  br i1 %228, label %284, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %222, i64 0, i32 1
  %231 = load i8, i8* %230, align 8
  %232 = icmp eq i8 %192, %231
  br i1 %232, label %284, label %233

233:                                              ; preds = %229
  %234 = add nsw i8 %192, -6
  %235 = add i8 %231, -6
  %236 = or i8 %234, %235
  %237 = icmp ult i8 %236, 4
  br i1 %237, label %284, label %238

238:                                              ; preds = %233
  %239 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %239, i64 0, i32 7
  %241 = load i32, i32* %240, align 4
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %244, label %243, !prof !3

243:                                              ; preds = %238
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #15
  unreachable

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %239, i64 0, i32 5
  %246 = load i32, i32* %245, align 4
  %247 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %239) #14
  %248 = zext i1 %247 to i32
  %249 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %250 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %249) #14
  %251 = zext i1 %250 to i32
  %252 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %253 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %252, i64 0, i32 6
  %254 = load i32, i32* %253, align 8
  %255 = add i32 %246, %248
  %256 = add i32 %255, %251
  %257 = add i32 %256, %254
  %258 = load i32, i32* %21, align 4
  %259 = and i32 %258, 251658240
  %260 = icmp eq i32 %259, 251658240
  br i1 %260, label %261, label %265

261:                                              ; preds = %244
  %262 = inttoptr i64 %26 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = add i64 %263, 16
  br label %265

265:                                              ; preds = %244, %261
  %266 = phi i64 [ %264, %261 ], [ %26, %244 ]
  %267 = inttoptr i64 %266 to %"class.v8::internal::compiler::Node"**
  %268 = sext i32 %257 to i64
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, i64 %268
  %270 = bitcast %"class.v8::internal::compiler::Node"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %273 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %272, align 8
  %274 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %273, i64 0, i32 0, i32 0
  %275 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %273, i64 0, i32 0, i32 1
  %277 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %276, align 8
  %278 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11UnreachableEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %277) #14
  %279 = bitcast %"struct.std::__1::array.1358"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %279) #14
  %280 = getelementptr inbounds %"struct.std::__1::array.1358", %"struct.std::__1::array.1358"* %5, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %71, %"class.v8::internal::compiler::Node"** %280, align 8
  %281 = getelementptr inbounds %"struct.std::__1::array.1358", %"struct.std::__1::array.1358"* %5, i64 0, i32 0, i64 1
  %282 = bitcast %"class.v8::internal::compiler::Node"** %281 to i64*
  store i64 %271, i64* %282, align 8
  %283 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %275, %"class.v8::internal::compiler::Operator"* %278, i32 2, %"class.v8::internal::compiler::Node"** nonnull %280, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %279) #14
  br label %522

284:                                              ; preds = %233, %229, %225
  %285 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %222, i64 0, i32 0
  %286 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %285, align 8
  %287 = icmp eq %"class.v8::internal::compiler::Node"* %286, %46
  br i1 %287, label %522, label %288

288:                                              ; preds = %284, %214
  %289 = getelementptr inbounds [7 x i8], [7 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %289)
  %290 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 3, i32 0
  %291 = bitcast i64** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast i64** %215 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = inttoptr i64 %292 to i64*
  br i1 %217, label %296, label %349

296:                                              ; preds = %288
  %297 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 11
  %298 = load i8, i8* %297, align 8, !range !2
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %349, label %300

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %302 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %301, align 8
  %303 = icmp eq i32 %211, %210
  br i1 %303, label %344, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %302, i64 0, i32 2
  %306 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %302, i64 0, i32 3
  %307 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88 to i8*
  %308 = sext i32 %211 to i64
  br label %309

309:                                              ; preds = %337, %304
  %310 = phi i64 [ %308, %304 ], [ %339, %337 ]
  %311 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %304 ], [ %338, %337 ]
  %312 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88, i64 0, i32 2, i32 0, i64 %310
  %313 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %312, align 8
  %314 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %313, null
  br i1 %314, label %337, label %315

315:                                              ; preds = %309
  %316 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField9KillConstEPNS1_4NodeEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %313, %"class.v8::internal::compiler::Node"* %34, %"class.v8::internal::Zone"* %302) #14
  %317 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %312, align 8
  %318 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %317, %316
  br i1 %318, label %337, label %319

319:                                              ; preds = %315
  %320 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %311, null
  br i1 %320, label %321, label %334

321:                                              ; preds = %319
  %322 = load i64, i64* %305, align 8
  %323 = load i64, i64* %306, align 8
  %324 = sub i64 %323, %322
  %325 = icmp ult i64 %324, 528
  br i1 %325, label %326, label %328, !prof !4

326:                                              ; preds = %321
  %327 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %302, i64 528) #14
  br label %330

328:                                              ; preds = %321
  %329 = add i64 %322, 528
  store i64 %329, i64* %305, align 8
  br label %330

330:                                              ; preds = %328, %326
  %331 = phi i64 [ %327, %326 ], [ %322, %328 ]
  %332 = inttoptr i64 %331 to i8*
  %333 = inttoptr i64 %331 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %332, i8* nonnull align 8 %307, i64 528, i1 false) #14
  br label %334

334:                                              ; preds = %330, %319
  %335 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %311, %319 ], [ %333, %330 ]
  %336 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %335, i64 0, i32 2, i32 0, i64 %310
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %316, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %336, align 8
  br label %337

337:                                              ; preds = %334, %315, %309
  %338 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %335, %334 ], [ %311, %315 ], [ %311, %309 ]
  %339 = add nsw i64 %310, 1
  %340 = trunc i64 %339 to i32
  %341 = icmp eq i32 %210, %340
  br i1 %341, label %342, label %309

342:                                              ; preds = %337
  %343 = load i64*, i64** %290, align 8
  br label %344

344:                                              ; preds = %342, %300
  %345 = phi i64* [ %295, %300 ], [ %343, %342 ]
  %346 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %300 ], [ %338, %342 ]
  %347 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %346, null
  %348 = select i1 %347, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %346
  br label %349

349:                                              ; preds = %296, %344, %288
  %350 = phi i64* [ %345, %344 ], [ %295, %296 ], [ %295, %288 ]
  %351 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %348, %344 ], [ %88, %296 ], [ %88, %288 ]
  %352 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %353 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %352, align 8
  %354 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #14
  %355 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %351, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %355, align 8
  %356 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %34, %"class.v8::internal::compiler::Node"** %356, align 8
  %357 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 2, i32 0
  store i64* null, i64** %357, align 8
  %358 = icmp eq i32 %211, %210
  br i1 %358, label %399, label %359

359:                                              ; preds = %349
  %360 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %353, i64 0, i32 2
  %361 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %353, i64 0, i32 3
  %362 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %351 to i8*
  %363 = sext i32 %211 to i64
  br label %364

364:                                              ; preds = %392, %359
  %365 = phi i64 [ %363, %359 ], [ %394, %392 ]
  %366 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %359 ], [ %393, %392 ]
  %367 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %351, i64 0, i32 1, i32 0, i64 %365
  %368 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %367, align 8
  %369 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %368, null
  br i1 %369, label %392, label %370

370:                                              ; preds = %364
  %371 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %368, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %4, i64* %350, %"class.v8::internal::Zone"* %353) #14
  %372 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %367, align 8
  %373 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %372, %371
  br i1 %373, label %392, label %374

374:                                              ; preds = %370
  %375 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %366, null
  br i1 %375, label %376, label %389

376:                                              ; preds = %374
  %377 = load i64, i64* %360, align 8
  %378 = load i64, i64* %361, align 8
  %379 = sub i64 %378, %377
  %380 = icmp ult i64 %379, 528
  br i1 %380, label %381, label %383, !prof !4

381:                                              ; preds = %376
  %382 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %353, i64 528) #14
  br label %385

383:                                              ; preds = %376
  %384 = add i64 %377, 528
  store i64 %384, i64* %360, align 8
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i64 [ %382, %381 ], [ %377, %383 ]
  %387 = inttoptr i64 %386 to i8*
  %388 = inttoptr i64 %386 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %387, i8* align 8 %362, i64 528, i1 false) #14
  br label %389

389:                                              ; preds = %385, %374
  %390 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %366, %374 ], [ %388, %385 ]
  %391 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %390, i64 0, i32 1, i32 0, i64 %365
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %371, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %391, align 8
  br label %392

392:                                              ; preds = %389, %370, %364
  %393 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %390, %389 ], [ %366, %370 ], [ %366, %364 ]
  %394 = add nsw i64 %365, 1
  %395 = trunc i64 %394 to i32
  %396 = icmp eq i32 %210, %395
  br i1 %396, label %397, label %364

397:                                              ; preds = %392
  %398 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %352, align 8
  br label %399

399:                                              ; preds = %397, %349
  %400 = phi %"class.v8::internal::Zone"* [ %353, %349 ], [ %398, %397 ]
  %401 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %349 ], [ %393, %397 ]
  %402 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %401, null
  %403 = select i1 %402, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %351, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %401
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #14
  %404 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %12, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %46, %"class.v8::internal::compiler::Node"** %404, align 8
  %405 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %12, i64 0, i32 1
  store i8 %192, i8* %405, align 8
  %406 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %12 to i8*
  %407 = getelementptr inbounds i8, i8* %406, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %407, i8* nonnull align 1 %289, i64 7, i1 false)
  %408 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %12, i64 0, i32 2, i32 0
  %409 = bitcast i64** %408 to i64*
  store i64 %292, i64* %409, align 8
  %410 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %12, i64 0, i32 3, i32 0, i32 0
  %411 = bitcast i64** %410 to i64*
  store i64 %294, i64* %411, align 8
  %412 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState8AddFieldEPNS1_4NodeENS2_10IndexRangeENS2_9FieldInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %403, %"class.v8::internal::compiler::Node"* %34, i64 %221, %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* nonnull byval(%"struct.v8::internal::compiler::LoadElimination::FieldInfo") align 8 %12, %"class.v8::internal::Zone"* %400)
  br i1 %217, label %413, label %423

413:                                              ; preds = %399
  %414 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %13, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %46, %"class.v8::internal::compiler::Node"** %414, align 8
  %415 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %13, i64 0, i32 1
  store i8 %192, i8* %415, align 8
  %416 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %13 to i8*
  %417 = getelementptr inbounds i8, i8* %416, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %417, i8* nonnull align 1 %289, i64 7, i1 false)
  %418 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %13, i64 0, i32 2, i32 0
  %419 = bitcast i64** %418 to i64*
  store i64 %292, i64* %419, align 8
  %420 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %13, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %420, align 8
  %421 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %352, align 8
  %422 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState8AddFieldEPNS1_4NodeENS2_10IndexRangeENS2_9FieldInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %412, %"class.v8::internal::compiler::Node"* %34, i64 %221, %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* nonnull byval(%"struct.v8::internal::compiler::LoadElimination::FieldInfo") align 8 %13, %"class.v8::internal::Zone"* %421)
  br label %423

423:                                              ; preds = %399, %413
  %424 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %422, %413 ], [ %412, %399 ]
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %289)
  br label %477

425:                                              ; preds = %204, %190, %190, %190, %196, %200
  %426 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %2, i64 0, i32 3, i32 0
  %427 = load i64*, i64** %426, align 8
  %428 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %429 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %428, align 8
  %430 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %430) #14
  %431 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %431, align 8
  %432 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %34, %"class.v8::internal::compiler::Node"** %432, align 8
  %433 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 2, i32 0
  store i64* null, i64** %433, align 8
  br label %434

434:                                              ; preds = %472, %425
  %435 = phi i64 [ 0, %425 ], [ %473, %472 ]
  %436 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88, i64 0, i32 1, i32 0, i64 %435
  %437 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %436, align 8
  %438 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %437, null
  br i1 %438, label %472, label %439

439:                                              ; preds = %434
  %440 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %437, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %6, i64* %427, %"class.v8::internal::Zone"* %429) #14
  %441 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %440, %437
  br i1 %441, label %472, label %442

442:                                              ; preds = %439
  %443 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %429, i64 0, i32 2
  %444 = load i64, i64* %443, align 8
  %445 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %429, i64 0, i32 3
  %446 = load i64, i64* %445, align 8
  %447 = sub i64 %446, %444
  %448 = icmp ult i64 %447, 528
  br i1 %448, label %449, label %451, !prof !4

449:                                              ; preds = %442
  %450 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %429, i64 528) #14
  br label %453

451:                                              ; preds = %442
  %452 = add i64 %444, 528
  store i64 %452, i64* %443, align 8
  br label %453

453:                                              ; preds = %451, %449
  %454 = phi i64 [ %450, %449 ], [ %444, %451 ]
  %455 = inttoptr i64 %454 to i8*
  %456 = inttoptr i64 %454 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %457 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %455, i8* nonnull align 8 %457, i64 528, i1 false) #14
  %458 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %456, i64 0, i32 1, i32 0, i64 %435
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %440, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %458, align 8
  %459 = add nuw i64 %435, 1
  %460 = icmp ult i64 %459, 32
  br i1 %460, label %461, label %475

461:                                              ; preds = %453, %469
  %462 = phi i64 [ %470, %469 ], [ %459, %453 ]
  %463 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %88, i64 0, i32 1, i32 0, i64 %462
  %464 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %463, align 8
  %465 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %464, null
  br i1 %465, label %469, label %466

466:                                              ; preds = %461
  %467 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %464, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %6, i64* %427, %"class.v8::internal::Zone"* %429) #14
  %468 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %456, i64 0, i32 1, i32 0, i64 %462
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %467, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %468, align 8
  br label %469

469:                                              ; preds = %466, %461
  %470 = add i64 %462, 1
  %471 = icmp eq i64 %470, 32
  br i1 %471, label %475, label %461

472:                                              ; preds = %439, %434
  %473 = add nuw nsw i64 %435, 1
  %474 = icmp eq i64 %473, 32
  br i1 %474, label %475, label %434

475:                                              ; preds = %472, %469, %453
  %476 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %456, %453 ], [ %456, %469 ], [ %88, %472 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %430) #14
  br label %477

477:                                              ; preds = %475, %423, %188
  %478 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %189, %188 ], [ %424, %423 ], [ %476, %475 ]
  %479 = load i32, i32* %21, align 4
  %480 = and i32 %479, 16777215
  %481 = zext i32 %480 to i64
  %482 = load i64, i64* %78, align 8
  %483 = load i64, i64* %80, align 8
  %484 = sub i64 %482, %483
  %485 = ashr exact i64 %484, 3
  %486 = icmp ugt i64 %485, %481
  br i1 %486, label %487, label %491

487:                                              ; preds = %477
  %488 = inttoptr i64 %483 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %489 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %488, i64 %481
  %490 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %489, align 8
  br label %491

491:                                              ; preds = %487, %477
  %492 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %490, %487 ], [ null, %477 ]
  %493 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %492, %478
  br i1 %493, label %522, label %494

494:                                              ; preds = %491
  %495 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %492, null
  br i1 %495, label %506, label %496

496:                                              ; preds = %494
  %497 = call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %478, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %492) #14
  br i1 %497, label %522, label %498

498:                                              ; preds = %496
  %499 = load i32, i32* %21, align 4
  %500 = load i64, i64* %78, align 8
  %501 = load i64, i64* %80, align 8
  %502 = and i32 %499, 16777215
  %503 = zext i32 %502 to i64
  %504 = sub i64 %500, %501
  %505 = ashr exact i64 %504, 3
  br label %506

506:                                              ; preds = %498, %494
  %507 = phi i64 [ %505, %498 ], [ %485, %494 ]
  %508 = phi i64 [ %503, %498 ], [ %481, %494 ]
  %509 = phi i64 [ %501, %498 ], [ %483, %494 ]
  %510 = icmp ugt i64 %507, %508
  %511 = inttoptr i64 %509 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %510, label %519, label %512

512:                                              ; preds = %506
  %513 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %72, i64 0, i32 0, i32 0
  %514 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %514) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %8, align 8
  %515 = sub nsw i64 1, %507
  %516 = add nsw i64 %515, %508
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %513, i64 %516, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %514) #14
  %517 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %518 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %517, align 8
  br label %519

519:                                              ; preds = %512, %506
  %520 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %511, %506 ], [ %518, %512 ]
  %521 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %520, i64 %508
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %478, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %521, align 8
  br label %522

522:                                              ; preds = %284, %66, %519, %496, %491, %265, %85
  %523 = phi %"class.v8::internal::compiler::Node"* [ null, %85 ], [ %283, %265 ], [ %1, %519 ], [ null, %491 ], [ null, %496 ], [ null, %66 ], [ %71, %284 ]
  ret %"class.v8::internal::compiler::Node"* %523
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination17ReduceLoadElementEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = alloca %"class.v8::internal::compiler::Type", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 251658240
  %15 = icmp eq i32 %14, 251658240
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %17 = add i64 %16, 32
  br i1 %15, label %18, label %22

18:                                               ; preds = %11
  %19 = inttoptr i64 %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 16
  br label %22

22:                                               ; preds = %11, %18
  %23 = phi i64 [ %21, %18 ], [ %17, %11 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"**
  %25 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, align 8
  %26 = icmp sgt i32 %8, 1
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %22
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

28:                                               ; preds = %22
  br i1 %15, label %29, label %33

29:                                               ; preds = %28
  %30 = inttoptr i64 %17 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %28, %29
  %34 = phi i64 [ %32, %29 ], [ %17, %28 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 1
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 6
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

42:                                               ; preds = %33
  %43 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %6) #14
  %44 = zext i1 %43 to i32
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %46 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %45) #14
  %47 = zext i1 %46 to i32
  %48 = add nuw i32 %8, %44
  %49 = add nuw i32 %48, %47
  %50 = load i32, i32* %12, align 4
  %51 = and i32 %50, 251658240
  %52 = icmp eq i32 %51, 251658240
  br i1 %52, label %53, label %57

53:                                               ; preds = %42
  %54 = inttoptr i64 %17 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 16
  br label %57

57:                                               ; preds = %42, %53
  %58 = phi i64 [ %56, %53 ], [ %17, %42 ]
  %59 = inttoptr i64 %58 to %"class.v8::internal::compiler::Node"**
  %60 = sext i32 %49 to i64
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 %60
  %62 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %62, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 16777215
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %63 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = ashr exact i64 %73, 3
  %75 = icmp ugt i64 %74, %67
  br i1 %75, label %76, label %188

76:                                               ; preds = %57
  %77 = inttoptr i64 %72 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %78 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %77, i64 %67
  %79 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %78, align 8
  %80 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %79, null
  br i1 %80, label %188, label %81

81:                                               ; preds = %76
  %82 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %83 = tail call dereferenceable(24) %"struct.v8::internal::compiler::ElementAccess"* @_ZN2v88internal8compiler15ElementAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %82) #14
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %83, i64 0, i32 3, i32 0
  %85 = load i8, i8* %84, align 1
  switch i8 %85, label %188 [
    i8 6, label %86
    i8 9, label %86
    i8 8, label %86
    i8 7, label %86
    i8 14, label %86
    i8 13, label %86
  ]

86:                                               ; preds = %81, %81, %81, %81, %81, %81
  %87 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %79, i64 0, i32 0
  %88 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %87, align 8
  %89 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %88, null
  br i1 %89, label %140, label %90

90:                                               ; preds = %86
  %91 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements6LookupEPNS1_4NodeES5_NS0_21MachineRepresentationE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %88, %"class.v8::internal::compiler::Node"* %25, %"class.v8::internal::compiler::Node"* %37, i8 zeroext %85) #14
  %92 = icmp eq %"class.v8::internal::compiler::Node"* %91, null
  br i1 %92, label %140, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %91, i64 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = lshr i32 %95, 24
  %97 = and i32 %96, 15
  %98 = icmp eq i32 %97, 15
  %99 = ptrtoint %"class.v8::internal::compiler::Node"* %91 to i64
  %100 = add i64 %99, 32
  br i1 %98, label %101, label %108

101:                                              ; preds = %93
  %102 = inttoptr i64 %100 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %103 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %102, align 8
  %104 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %103 to i64
  %105 = add i64 %104, 16
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  br label %108

108:                                              ; preds = %101, %93
  %109 = phi i32 [ %107, %101 ], [ %97, %93 ]
  %110 = phi i64 [ %105, %101 ], [ %100, %93 ]
  %111 = icmp sgt i32 %109, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  %113 = bitcast %"class.v8::internal::compiler::Type"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #14
  br label %119

114:                                              ; preds = %108
  %115 = inttoptr i64 %110 to %"class.v8::internal::compiler::Node"**
  %116 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, align 8
  %117 = icmp eq %"class.v8::internal::compiler::Node"* %116, null
  %118 = bitcast %"class.v8::internal::compiler::Type"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #14
  br i1 %117, label %132, label %119

119:                                              ; preds = %112, %114
  %120 = phi i8* [ %113, %112 ], [ %118, %114 ]
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %91, i64 0, i32 1, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %4, i64 0, i32 0
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %122, %125
  br i1 %126, label %127, label %128

127:                                              ; preds = %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #14
  br label %133

128:                                              ; preds = %119
  %129 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %4, i64 %125) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #14
  br i1 %129, label %133, label %130

130:                                              ; preds = %128
  %131 = load i8, i8* %84, align 1
  br label %140

132:                                              ; preds = %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #14
  br label %140

133:                                              ; preds = %128, %127
  %134 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 0, i32 1
  %135 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %135 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %137 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %137, i64 4
  %139 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %138, align 8
  call void %139(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %135, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %91, %"class.v8::internal::compiler::Node"* %62, %"class.v8::internal::compiler::Node"* null) #14
  br label %188

140:                                              ; preds = %130, %86, %90, %132
  %141 = phi i8 [ %131, %130 ], [ %85, %86 ], [ %85, %90 ], [ %85, %132 ]
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %143 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %142, align 8
  %144 = call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState10AddElementEPNS1_4NodeES5_S5_NS0_21MachineRepresentationEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %79, %"class.v8::internal::compiler::Node"* %25, %"class.v8::internal::compiler::Node"* %37, %"class.v8::internal::compiler::Node"* %1, i8 zeroext %141, %"class.v8::internal::Zone"* %143)
  %145 = load i32, i32* %12, align 4
  %146 = and i32 %145, 16777215
  %147 = zext i32 %146 to i64
  %148 = load i64, i64* %69, align 8
  %149 = load i64, i64* %71, align 8
  %150 = sub i64 %148, %149
  %151 = ashr exact i64 %150, 3
  %152 = icmp ugt i64 %151, %147
  br i1 %152, label %153, label %157

153:                                              ; preds = %140
  %154 = inttoptr i64 %149 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %155 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %154, i64 %147
  %156 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %155, align 8
  br label %157

157:                                              ; preds = %153, %140
  %158 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %156, %153 ], [ null, %140 ]
  %159 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %158, %144
  br i1 %159, label %188, label %160

160:                                              ; preds = %157
  %161 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %158, null
  br i1 %161, label %172, label %162

162:                                              ; preds = %160
  %163 = call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %144, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %158) #14
  br i1 %163, label %188, label %164

164:                                              ; preds = %162
  %165 = load i32, i32* %12, align 4
  %166 = load i64, i64* %69, align 8
  %167 = load i64, i64* %71, align 8
  %168 = and i32 %165, 16777215
  %169 = zext i32 %168 to i64
  %170 = sub i64 %166, %167
  %171 = ashr exact i64 %170, 3
  br label %172

172:                                              ; preds = %164, %160
  %173 = phi i64 [ %171, %164 ], [ %151, %160 ]
  %174 = phi i64 [ %169, %164 ], [ %147, %160 ]
  %175 = phi i64 [ %167, %164 ], [ %149, %160 ]
  %176 = icmp ugt i64 %173, %174
  %177 = inttoptr i64 %175 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %176, label %185, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %63, i64 0, i32 0, i32 0
  %180 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %181 = sub nsw i64 1, %173
  %182 = add nsw i64 %181, %174
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %179, i64 %182, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #14
  %183 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %184 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %183, align 8
  br label %185

185:                                              ; preds = %178, %172
  %186 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %177, %172 ], [ %184, %178 ]
  %187 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %186, i64 %174
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %144, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %187, align 8
  br label %188

188:                                              ; preds = %57, %81, %185, %162, %157, %133, %76
  %189 = phi %"class.v8::internal::compiler::Node"* [ %91, %133 ], [ null, %76 ], [ %1, %185 ], [ null, %157 ], [ null, %162 ], [ null, %81 ], [ null, %57 ]
  ret %"class.v8::internal::compiler::Node"* %189
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination18ReduceStoreElementEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = tail call dereferenceable(24) %"struct.v8::internal::compiler::ElementAccess"* @_ZN2v88internal8compiler15ElementAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #14
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 251658240
  %16 = icmp eq i32 %15, 251658240
  %17 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %18 = add i64 %17, 32
  br i1 %16, label %19, label %23

19:                                               ; preds = %12
  %20 = inttoptr i64 %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 16
  br label %23

23:                                               ; preds = %12, %19
  %24 = phi i64 [ %22, %19 ], [ %18, %12 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"**
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = icmp sgt i32 %9, 1
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

29:                                               ; preds = %23
  br i1 %16, label %30, label %34

30:                                               ; preds = %29
  %31 = inttoptr i64 %18 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 16
  br label %34

34:                                               ; preds = %29, %30
  %35 = phi i64 [ %33, %30 ], [ %18, %29 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::Node"**
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 1
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = icmp sgt i32 %9, 2
  br i1 %39, label %41, label %40, !prof !3

40:                                               ; preds = %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

41:                                               ; preds = %34
  br i1 %16, label %42, label %46

42:                                               ; preds = %41
  %43 = inttoptr i64 %18 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 16
  br label %46

46:                                               ; preds = %41, %42
  %47 = phi i64 [ %45, %42 ], [ %18, %41 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::Node"**
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, i64 2
  %50 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

55:                                               ; preds = %46
  %56 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %7) #14
  %57 = zext i1 %56 to i32
  %58 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %59 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %58) #14
  %60 = zext i1 %59 to i32
  %61 = add nuw i32 %9, %57
  %62 = add nuw i32 %61, %60
  %63 = load i32, i32* %13, align 4
  %64 = and i32 %63, 251658240
  %65 = icmp eq i32 %64, 251658240
  br i1 %65, label %66, label %70

66:                                               ; preds = %55
  %67 = inttoptr i64 %18 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 16
  br label %70

70:                                               ; preds = %55, %66
  %71 = phi i64 [ %69, %66 ], [ %18, %55 ]
  %72 = inttoptr i64 %71 to %"class.v8::internal::compiler::Node"**
  %73 = sext i32 %62 to i64
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, i64 %73
  %75 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %75, i64 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 16777215
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %76 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, %80
  br i1 %88, label %89, label %180

89:                                               ; preds = %70
  %90 = inttoptr i64 %85 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %91 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %90, i64 %80
  %92 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %91, align 8
  %93 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %92, null
  br i1 %93, label %180, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"struct.v8::internal::compiler::ElementAccess", %"struct.v8::internal::compiler::ElementAccess"* %6, i64 0, i32 3, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %92, i64 0, i32 0
  %97 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %96, align 8
  %98 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = load i8, i8* %95, align 1
  %101 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements6LookupEPNS1_4NodeES5_NS0_21MachineRepresentationE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %97, %"class.v8::internal::compiler::Node"* %26, %"class.v8::internal::compiler::Node"* %38, i8 zeroext %100) #14
  br label %102

102:                                              ; preds = %94, %99
  %103 = phi %"class.v8::internal::compiler::Node"* [ %101, %99 ], [ null, %94 ]
  %104 = icmp eq %"class.v8::internal::compiler::Node"* %103, %50
  br i1 %104, label %180, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %107 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %106, align 8
  br i1 %98, label %129, label %108

108:                                              ; preds = %105
  %109 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractElements"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements4KillEPNS1_4NodeES5_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %97, %"class.v8::internal::compiler::Node"* %26, %"class.v8::internal::compiler::Node"* %38, %"class.v8::internal::Zone"* %107) #14
  %110 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %96, align 8
  %111 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %110, %109
  br i1 %111, label %129, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %107, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %107, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %114
  %118 = icmp ult i64 %117, 528
  br i1 %118, label %119, label %121, !prof !4

119:                                              ; preds = %112
  %120 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %107, i64 528) #14
  br label %123

121:                                              ; preds = %112
  %122 = add i64 %114, 528
  store i64 %122, i64* %113, align 8
  br label %123

123:                                              ; preds = %121, %119
  %124 = phi i64 [ %120, %119 ], [ %114, %121 ]
  %125 = inttoptr i64 %124 to i8*
  %126 = inttoptr i64 %124 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %127 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* nonnull align 8 %127, i64 528, i1 false) #14
  %128 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %126, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %109, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %128, align 8
  br label %129

129:                                              ; preds = %105, %108, %123
  %130 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %126, %123 ], [ %92, %105 ], [ %92, %108 ]
  %131 = load i8, i8* %95, align 1
  switch i8 %131, label %135 [
    i8 6, label %132
    i8 9, label %132
    i8 8, label %132
    i8 7, label %132
    i8 14, label %132
    i8 13, label %132
  ]

132:                                              ; preds = %129, %129, %129, %129, %129, %129
  %133 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %106, align 8
  %134 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState10AddElementEPNS1_4NodeES5_S5_NS0_21MachineRepresentationEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %130, %"class.v8::internal::compiler::Node"* %26, %"class.v8::internal::compiler::Node"* %38, %"class.v8::internal::compiler::Node"* %50, i8 zeroext %131, %"class.v8::internal::Zone"* %133)
  br label %135

135:                                              ; preds = %129, %132
  %136 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %130, %129 ], [ %134, %132 ]
  %137 = load i32, i32* %13, align 4
  %138 = and i32 %137, 16777215
  %139 = zext i32 %138 to i64
  %140 = load i64, i64* %82, align 8
  %141 = load i64, i64* %84, align 8
  %142 = sub i64 %140, %141
  %143 = ashr exact i64 %142, 3
  %144 = icmp ugt i64 %143, %139
  br i1 %144, label %145, label %149

145:                                              ; preds = %135
  %146 = inttoptr i64 %141 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %147 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %146, i64 %139
  %148 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %147, align 8
  br label %149

149:                                              ; preds = %145, %135
  %150 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %148, %145 ], [ null, %135 ]
  %151 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %150, %136
  br i1 %151, label %180, label %152

152:                                              ; preds = %149
  %153 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %150, null
  br i1 %153, label %164, label %154

154:                                              ; preds = %152
  %155 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %136, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %150) #14
  br i1 %155, label %180, label %156

156:                                              ; preds = %154
  %157 = load i32, i32* %13, align 4
  %158 = load i64, i64* %82, align 8
  %159 = load i64, i64* %84, align 8
  %160 = and i32 %157, 16777215
  %161 = zext i32 %160 to i64
  %162 = sub i64 %158, %159
  %163 = ashr exact i64 %162, 3
  br label %164

164:                                              ; preds = %156, %152
  %165 = phi i64 [ %163, %156 ], [ %143, %152 ]
  %166 = phi i64 [ %161, %156 ], [ %139, %152 ]
  %167 = phi i64 [ %159, %156 ], [ %141, %152 ]
  %168 = icmp ugt i64 %165, %166
  %169 = inttoptr i64 %167 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %168, label %177, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %76, i64 0, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %173 = sub nsw i64 1, %165
  %174 = add nsw i64 %173, %166
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %171, i64 %174, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #14
  %175 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %175, align 8
  br label %177

177:                                              ; preds = %170, %164
  %178 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %169, %164 ], [ %176, %170 ]
  %179 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %178, i64 %166
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %136, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %179, align 8
  br label %180

180:                                              ; preds = %70, %177, %154, %149, %102, %89
  %181 = phi %"class.v8::internal::compiler::Node"* [ null, %89 ], [ %75, %102 ], [ %1, %177 ], [ null, %149 ], [ null, %154 ], [ null, %70 ]
  ret %"class.v8::internal::compiler::Node"* %181
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination31ReduceTransitionAndStoreElementEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %5 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %6 = alloca %"class.v8::internal::ZoneHandleSet", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 251658240
  %17 = icmp eq i32 %16, 251658240
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %19 = add i64 %18, 32
  br i1 %17, label %20, label %24

20:                                               ; preds = %13
  %21 = inttoptr i64 %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 16
  br label %24

24:                                               ; preds = %13, %20
  %25 = phi i64 [ %23, %20 ], [ %19, %13 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %27 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %28 = tail call i64* @_ZN2v88internal8compiler20DoubleMapParameterOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #14
  %29 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %30 = tail call i64* @_ZN2v88internal8compiler18FastMapParameterOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %29) #14
  %31 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %31, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %24
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %31, i64 0, i32 5
  %38 = load i32, i32* %37, align 4
  %39 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %31) #14
  %40 = zext i1 %39 to i32
  %41 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %42 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %41) #14
  %43 = zext i1 %42 to i32
  %44 = add i32 %38, %40
  %45 = add i32 %44, %43
  %46 = load i32, i32* %14, align 4
  %47 = and i32 %46, 251658240
  %48 = icmp eq i32 %47, 251658240
  br i1 %48, label %49, label %53

49:                                               ; preds = %36
  %50 = inttoptr i64 %19 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 16
  br label %53

53:                                               ; preds = %36, %49
  %54 = phi i64 [ %52, %49 ], [ %19, %36 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::Node"**
  %56 = sext i32 %45 to i64
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, i64 %56
  %58 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %58, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 16777215
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %59 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 3
  %71 = icmp ugt i64 %70, %63
  br i1 %71, label %72, label %303

72:                                               ; preds = %53
  %73 = inttoptr i64 %68 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %74 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %73, i64 %63
  %75 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %74, align 8
  %76 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %75, null
  br i1 %76, label %303, label %77

77:                                               ; preds = %72
  %78 = bitcast %"class.v8::internal::ZoneHandleSet"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #14
  %79 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %6, i64 0, i32 0
  store i64 1, i64* %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %75, i64 0, i32 3
  %81 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %80, align 8
  %82 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %81, null
  br i1 %82, label %222, label %83

83:                                               ; preds = %77, %119
  %84 = phi %"class.v8::internal::compiler::Node"* [ %122, %119 ], [ %27, %77 ]
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %84, i64 0, i32 0
  %86 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %86, i64 0, i32 2
  %88 = load i16, i16* %87, align 8
  switch i16 %88, label %123 [
    i16 207, label %89
    i16 40, label %89
    i16 59, label %89
  ]

89:                                               ; preds = %83, %83, %83
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %84, i64 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = lshr i32 %91, 24
  %93 = and i32 %92, 15
  %94 = icmp eq i32 %93, 15
  %95 = ptrtoint %"class.v8::internal::compiler::Node"* %84 to i64
  %96 = add i64 %95, 32
  br i1 %94, label %97, label %104

97:                                               ; preds = %89
  %98 = inttoptr i64 %96 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %99 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %98, align 8
  %100 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %99 to i64
  %101 = add i64 %100, 16
  %102 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  br label %104

104:                                              ; preds = %97, %89
  %105 = phi i32 [ %103, %97 ], [ %93, %89 ]
  %106 = phi i64 [ %101, %97 ], [ %96, %89 ]
  %107 = icmp sgt i32 %105, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = inttoptr i64 %106 to %"class.v8::internal::compiler::Node"**
  %110 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %109, align 8
  %111 = icmp eq %"class.v8::internal::compiler::Node"* %110, null
  br i1 %111, label %123, label %112

112:                                              ; preds = %108, %104
  %113 = and i32 %91, 251658240
  %114 = icmp eq i32 %113, 251658240
  br i1 %114, label %115, label %119

115:                                              ; preds = %112
  %116 = inttoptr i64 %96 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 16
  br label %119

119:                                              ; preds = %115, %112
  %120 = phi i64 [ %118, %115 ], [ %96, %112 ]
  %121 = inttoptr i64 %120 to %"class.v8::internal::compiler::Node"**
  %122 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, align 8
  br label %83

123:                                              ; preds = %108, %83
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %81, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %125 = bitcast %"class.std::__1::__tree_end_node"* %124 to %"class.std::__1::__tree_node"**
  %126 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node"* %126, null
  br i1 %127, label %222, label %128

128:                                              ; preds = %123, %128
  %129 = phi %"class.std::__1::__tree_end_node"* [ %139, %128 ], [ %124, %123 ]
  %130 = phi %"class.std::__1::__tree_node"* [ %140, %128 ], [ %126, %123 ]
  %131 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 1, i32 0, i32 0
  %132 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %131, align 8
  %133 = icmp ult %"class.v8::internal::compiler::Node"* %132, %84
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 0, i32 1
  %135 = bitcast %"class.std::__1::__tree_node_base"** %134 to %"class.std::__1::__tree_node"**
  %136 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 0, i32 0
  %137 = bitcast %"class.std::__1::__tree_node"* %130 to %"class.std::__1::__tree_node"**
  %138 = select i1 %133, %"class.std::__1::__tree_node"** %135, %"class.std::__1::__tree_node"** %137
  %139 = select i1 %133, %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"* %136
  %140 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %138, align 8
  %141 = icmp eq %"class.std::__1::__tree_node"* %140, null
  br i1 %141, label %142, label %128

142:                                              ; preds = %128
  %143 = icmp eq %"class.std::__1::__tree_end_node"* %139, %124
  br i1 %143, label %222, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 4
  %146 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"class.v8::internal::compiler::Node"**
  %147 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, align 8
  %148 = icmp ult %"class.v8::internal::compiler::Node"* %84, %147
  br i1 %148, label %222, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 5
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %79, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %154 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %153, align 8
  call void @_ZN2v88internal13ZoneHandleSetINS0_3MapEE6insertENS0_6HandleIS2_EEPNS0_4ZoneE(%"class.v8::internal::ZoneHandleSet"* nonnull %6, i64* %28, %"class.v8::internal::Zone"* %154)
  %155 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %153, align 8
  call void @_ZN2v88internal13ZoneHandleSetINS0_3MapEE6insertENS0_6HandleIS2_EEPNS0_4ZoneE(%"class.v8::internal::ZoneHandleSet"* nonnull %6, i64* %30, %"class.v8::internal::Zone"* %155)
  %156 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %153, align 8
  %157 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #14
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %75, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %27, %"class.v8::internal::compiler::Node"** %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %3, i64 0, i32 2, i32 0
  store i64* null, i64** %160, align 8
  %161 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %80, align 8
  %162 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %161, null
  br i1 %162, label %184, label %163

163:                                              ; preds = %149
  %164 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %161, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %3, %"class.v8::internal::Zone"* %156) #14
  %165 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %80, align 8
  %166 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %165, %164
  br i1 %166, label %184, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %156, i64 0, i32 2
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %156, i64 0, i32 3
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 %171, %169
  %173 = icmp ult i64 %172, 528
  br i1 %173, label %174, label %176, !prof !4

174:                                              ; preds = %167
  %175 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %156, i64 528) #14
  br label %178

176:                                              ; preds = %167
  %177 = add i64 %169, 528
  store i64 %177, i64* %168, align 8
  br label %178

178:                                              ; preds = %176, %174
  %179 = phi i64 [ %175, %174 ], [ %169, %176 ]
  %180 = inttoptr i64 %179 to i8*
  %181 = inttoptr i64 %179 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %182 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* nonnull align 8 %182, i64 528, i1 false) #14
  %183 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %181, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %164, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %183, align 8
  br label %184

184:                                              ; preds = %149, %163, %178
  %185 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %181, %178 ], [ %75, %149 ], [ %75, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #14
  %186 = load i64, i64* %79, align 8
  %187 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %153, align 8
  %188 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %187, i64 0, i32 2
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %187, i64 0, i32 3
  %191 = load i64, i64* %190, align 8
  %192 = sub i64 %191, %189
  %193 = icmp ult i64 %192, 528
  br i1 %193, label %194, label %196, !prof !4

194:                                              ; preds = %184
  %195 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %187, i64 528) #14
  br label %198

196:                                              ; preds = %184
  %197 = add i64 %189, 528
  store i64 %197, i64* %188, align 8
  br label %198

198:                                              ; preds = %196, %194
  %199 = phi i64 [ %195, %194 ], [ %189, %196 ]
  %200 = inttoptr i64 %199 to i8*
  %201 = inttoptr i64 %199 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %202 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %202, i64 528, i1 false) #14
  %203 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %201, i64 0, i32 3
  %204 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %203, align 8
  %205 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %198
  %207 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %204, %"class.v8::internal::compiler::Node"* %27, i64 %186, %"class.v8::internal::Zone"* %187) #14
  br label %220

208:                                              ; preds = %198
  %209 = load i64, i64* %188, align 8
  %210 = load i64, i64* %190, align 8
  %211 = sub i64 %210, %209
  %212 = icmp ult i64 %211, 32
  br i1 %212, label %213, label %215, !prof !4

213:                                              ; preds = %208
  %214 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %187, i64 32) #14
  br label %217

215:                                              ; preds = %208
  %216 = add i64 %209, 32
  store i64 %216, i64* %188, align 8
  br label %217

217:                                              ; preds = %215, %213
  %218 = phi i64 [ %214, %213 ], [ %209, %215 ]
  %219 = inttoptr i64 %218 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %219, %"class.v8::internal::compiler::Node"* %27, i64 %186, %"class.v8::internal::Zone"* %187) #14
  br label %220

220:                                              ; preds = %206, %217
  %221 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %219, %217 ], [ %207, %206 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %221, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %203, align 8
  br label %222

222:                                              ; preds = %144, %142, %123, %77, %220
  %223 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %201, %220 ], [ %75, %77 ], [ %75, %123 ], [ %75, %142 ], [ %75, %144 ]
  %224 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %225 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #14
  %227 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %223, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %27, %"class.v8::internal::compiler::Node"** %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 2, i32 0
  store i64* null, i64** %229, align 8
  %230 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %225, i64 0, i32 2
  %231 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %225, i64 0, i32 3
  %232 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %223 to i8*
  %233 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %223, i64 0, i32 1, i32 0, i64 1
  %234 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %233, align 8
  %235 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %234, null
  br i1 %235, label %254, label %236

236:                                              ; preds = %222
  %237 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %234, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %4, i64* null, %"class.v8::internal::Zone"* %225) #14
  %238 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %233, align 8
  %239 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %238, %237
  br i1 %239, label %254, label %240

240:                                              ; preds = %236
  %241 = load i64, i64* %230, align 8
  %242 = load i64, i64* %231, align 8
  %243 = sub i64 %242, %241
  %244 = icmp ult i64 %243, 528
  br i1 %244, label %245, label %247, !prof !4

245:                                              ; preds = %240
  %246 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %225, i64 528) #14
  br label %249

247:                                              ; preds = %240
  %248 = add i64 %241, 528
  store i64 %248, i64* %230, align 8
  br label %249

249:                                              ; preds = %245, %247
  %250 = phi i64 [ %246, %245 ], [ %241, %247 ]
  %251 = inttoptr i64 %250 to i8*
  %252 = inttoptr i64 %250 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %232, i64 528, i1 false) #14
  %253 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %252, i64 0, i32 1, i32 0, i64 1
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %237, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %253, align 8
  br label %254

254:                                              ; preds = %249, %236, %222
  %255 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %252, %249 ], [ null, %236 ], [ null, %222 ]
  %256 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %255, null
  %257 = select i1 %256, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %223, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #14
  %258 = load i32, i32* %14, align 4
  %259 = and i32 %258, 16777215
  %260 = zext i32 %259 to i64
  %261 = load i64, i64* %65, align 8
  %262 = load i64, i64* %67, align 8
  %263 = sub i64 %261, %262
  %264 = ashr exact i64 %263, 3
  %265 = icmp ugt i64 %264, %260
  br i1 %265, label %266, label %270

266:                                              ; preds = %254
  %267 = inttoptr i64 %262 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %268 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %267, i64 %260
  %269 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %268, align 8
  br label %270

270:                                              ; preds = %266, %254
  %271 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %269, %266 ], [ null, %254 ]
  %272 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %271, %257
  br i1 %272, label %301, label %273

273:                                              ; preds = %270
  %274 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %271, null
  br i1 %274, label %285, label %275

275:                                              ; preds = %273
  %276 = call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %257, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %271) #14
  br i1 %276, label %301, label %277

277:                                              ; preds = %275
  %278 = load i32, i32* %14, align 4
  %279 = load i64, i64* %65, align 8
  %280 = load i64, i64* %67, align 8
  %281 = and i32 %278, 16777215
  %282 = zext i32 %281 to i64
  %283 = sub i64 %279, %280
  %284 = ashr exact i64 %283, 3
  br label %285

285:                                              ; preds = %277, %273
  %286 = phi i64 [ %284, %277 ], [ %264, %273 ]
  %287 = phi i64 [ %282, %277 ], [ %260, %273 ]
  %288 = phi i64 [ %280, %277 ], [ %262, %273 ]
  %289 = icmp ugt i64 %286, %287
  %290 = inttoptr i64 %288 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %289, label %298, label %291

291:                                              ; preds = %285
  %292 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %59, i64 0, i32 0, i32 0
  %293 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %5, align 8
  %294 = sub nsw i64 1, %286
  %295 = add nsw i64 %294, %287
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %292, i64 %295, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #14
  %296 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %297 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %296, align 8
  br label %298

298:                                              ; preds = %291, %285
  %299 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %290, %285 ], [ %297, %291 ]
  %300 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %299, i64 %287
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %257, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %300, align 8
  br label %301

301:                                              ; preds = %270, %275, %298
  %302 = phi %"class.v8::internal::compiler::Node"* [ %1, %298 ], [ null, %270 ], [ null, %275 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #14
  br label %303

303:                                              ; preds = %53, %72, %301
  %304 = phi %"class.v8::internal::compiler::Node"* [ %302, %301 ], [ null, %72 ], [ null, %53 ]
  ret %"class.v8::internal::compiler::Node"* %304
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination23ReduceStoreTypedElementEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #14
  %14 = zext i1 %13 to i32
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %16 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #14
  %17 = zext i1 %16 to i32
  %18 = add i32 %12, %14
  %19 = add i32 %18, %17
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 251658240
  %23 = icmp eq i32 %22, 251658240
  %24 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %25 = add i64 %24, 32
  br i1 %23, label %26, label %30

26:                                               ; preds = %10
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 16
  br label %30

30:                                               ; preds = %10, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %10 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::compiler::Node"**
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, i64 %33
  %35 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %35, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 16777215
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %36 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 3
  %48 = icmp ugt i64 %47, %40
  br i1 %48, label %49, label %92

49:                                               ; preds = %30
  %50 = inttoptr i64 %45 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %50, i64 %40
  %52 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %51, align 8
  %53 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %52, null
  br i1 %53, label %92, label %54

54:                                               ; preds = %49
  %55 = and i32 %21, 16777215
  %56 = zext i32 %55 to i64
  %57 = icmp ugt i64 %47, %56
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %50, i64 %56
  %60 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %59, align 8
  br label %61

61:                                               ; preds = %58, %54
  %62 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %60, %58 ], [ null, %54 ]
  %63 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %62, %52
  br i1 %63, label %92, label %64

64:                                               ; preds = %61
  %65 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %62, null
  br i1 %65, label %77, label %66

66:                                               ; preds = %64
  %67 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %52, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %62) #14
  br i1 %67, label %92, label %68

68:                                               ; preds = %66
  %69 = load i32, i32* %20, align 4
  %70 = load i64, i64* %42, align 8
  %71 = load i64, i64* %44, align 8
  %72 = and i32 %69, 16777215
  %73 = zext i32 %72 to i64
  %74 = sub i64 %70, %71
  %75 = ashr exact i64 %74, 3
  %76 = inttoptr i64 %71 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br label %77

77:                                               ; preds = %68, %64
  %78 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %76, %68 ], [ %50, %64 ]
  %79 = phi i64 [ %75, %68 ], [ %47, %64 ]
  %80 = phi i64 [ %73, %68 ], [ %56, %64 ]
  %81 = icmp ugt i64 %79, %80
  br i1 %81, label %89, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %36, i64 0, i32 0, i32 0
  %84 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %85 = sub nsw i64 1, %79
  %86 = add nsw i64 %85, %80
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %83, i64 %86, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #14
  %87 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %87, align 8
  br label %89

89:                                               ; preds = %82, %77
  %90 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %78, %77 ], [ %88, %82 ]
  %91 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %90, i64 %80
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %52, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %91, align 8
  br label %92

92:                                               ; preds = %30, %89, %66, %61, %49
  %93 = phi %"class.v8::internal::compiler::Node"* [ null, %49 ], [ %1, %89 ], [ null, %61 ], [ null, %66 ], [ null, %30 ]
  ret %"class.v8::internal::compiler::Node"* %93
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination15ReduceEffectPhiEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %6) #14
  %15 = zext i1 %14 to i32
  %16 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %17 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %16) #14
  %18 = zext i1 %17 to i32
  %19 = add i32 %13, %15
  %20 = add i32 %19, %18
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 251658240
  %24 = icmp eq i32 %23, 251658240
  %25 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %26 = add i64 %25, 32
  br i1 %24, label %27, label %31

27:                                               ; preds = %11
  %28 = inttoptr i64 %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 16
  br label %31

31:                                               ; preds = %11, %27
  %32 = phi i64 [ %30, %27 ], [ %26, %11 ]
  %33 = inttoptr i64 %32 to %"class.v8::internal::compiler::Node"**
  %34 = sext i32 %20 to i64
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, i64 %34
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %37, i64 0, i32 7
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %31
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #15
  unreachable

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %37, i64 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #14
  %46 = zext i1 %45 to i32
  %47 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %48 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %47) #14
  %49 = zext i1 %48 to i32
  %50 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %50, i64 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = add i32 %44, %46
  %54 = add i32 %53, %49
  %55 = add i32 %54, %52
  %56 = load i32, i32* %21, align 4
  %57 = and i32 %56, 251658240
  %58 = icmp eq i32 %57, 251658240
  br i1 %58, label %59, label %63

59:                                               ; preds = %42
  %60 = inttoptr i64 %26 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 16
  br label %63

63:                                               ; preds = %42, %59
  %64 = phi i64 [ %62, %59 ], [ %26, %42 ]
  %65 = inttoptr i64 %64 to %"class.v8::internal::compiler::Node"**
  %66 = sext i32 %55 to i64
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, i64 %66
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %36, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 16777215
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %69 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = icmp ugt i64 %80, %73
  br i1 %81, label %82, label %339

82:                                               ; preds = %63
  %83 = inttoptr i64 %78 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %83, i64 %73
  %85 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %85, null
  br i1 %86, label %339, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %68, i64 0, i32 0
  %89 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %89, i64 0, i32 2
  %91 = load i16, i16* %90, align 8
  %92 = icmp eq i16 %91, 1
  br i1 %92, label %97, label %93

93:                                               ; preds = %87
  %94 = icmp sgt i32 %52, 1
  br i1 %94, label %95, label %190

95:                                               ; preds = %93
  %96 = inttoptr i64 %26 to i64*
  br label %150

97:                                               ; preds = %87
  %98 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination16ComputeLoopStateEPNS1_4NodeEPKNS2_13AbstractStateE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %85)
  %99 = load i32, i32* %21, align 4
  %100 = and i32 %99, 16777215
  %101 = zext i32 %100 to i64
  %102 = load i64, i64* %75, align 8
  %103 = load i64, i64* %77, align 8
  %104 = sub i64 %102, %103
  %105 = ashr exact i64 %104, 3
  %106 = icmp ugt i64 %105, %101
  br i1 %106, label %107, label %111

107:                                              ; preds = %97
  %108 = inttoptr i64 %103 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %109 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %108, i64 %101
  %110 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %109, align 8
  br label %111

111:                                              ; preds = %107, %97
  %112 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %110, %107 ], [ null, %97 ]
  %113 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %112, %98
  br i1 %113, label %339, label %114

114:                                              ; preds = %111
  %115 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %112, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %114
  %117 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %98, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %112) #14
  br i1 %117, label %339, label %118

118:                                              ; preds = %116
  %119 = load i32, i32* %21, align 4
  %120 = load i64, i64* %75, align 8
  %121 = load i64, i64* %77, align 8
  %122 = and i32 %119, 16777215
  %123 = zext i32 %122 to i64
  %124 = sub i64 %120, %121
  %125 = ashr exact i64 %124, 3
  br label %126

126:                                              ; preds = %118, %114
  %127 = phi i64 [ %125, %118 ], [ %105, %114 ]
  %128 = phi i64 [ %123, %118 ], [ %101, %114 ]
  %129 = phi i64 [ %121, %118 ], [ %103, %114 ]
  %130 = icmp ugt i64 %127, %128
  %131 = inttoptr i64 %129 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %130, label %139, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %69, i64 0, i32 0, i32 0
  %134 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4, align 8
  %135 = sub nsw i64 1, %127
  %136 = add nsw i64 %135, %128
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %133, i64 %136, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #14
  %137 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %137, align 8
  br label %139

139:                                              ; preds = %132, %126
  %140 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %131, %126 ], [ %138, %132 ]
  %141 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %140, i64 %128
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %98, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %141, align 8
  br label %339

142:                                              ; preds = %184
  %143 = icmp eq i32 %189, %52
  br i1 %143, label %190, label %144

144:                                              ; preds = %142
  %145 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %145, i64 0, i32 6
  %147 = load i32, i32* %146, align 8
  %148 = icmp sgt i32 %147, %189
  br i1 %148, label %150, label %149, !prof !3

149:                                              ; preds = %144
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

150:                                              ; preds = %95, %144
  %151 = phi i32 [ 1, %95 ], [ %189, %144 ]
  %152 = phi %"class.v8::internal::compiler::Operator"* [ %50, %95 ], [ %145, %144 ]
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %152, i64 0, i32 5
  %154 = load i32, i32* %153, align 4
  %155 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %152) #14
  %156 = zext i1 %155 to i32
  %157 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %158 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %157) #14
  %159 = zext i1 %158 to i32
  %160 = add i32 %154, %151
  %161 = add i32 %160, %156
  %162 = add i32 %161, %159
  %163 = load i32, i32* %21, align 4
  %164 = and i32 %163, 251658240
  %165 = icmp eq i32 %164, 251658240
  br i1 %165, label %166, label %169

166:                                              ; preds = %150
  %167 = load i64, i64* %96, align 8
  %168 = add i64 %167, 16
  br label %169

169:                                              ; preds = %150, %166
  %170 = phi i64 [ %168, %166 ], [ %26, %150 ]
  %171 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"**
  %172 = sext i32 %162 to i64
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 %172
  %174 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %174, i64 0, i32 3
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, 16777215
  %178 = zext i32 %177 to i64
  %179 = load i64, i64* %75, align 8
  %180 = load i64, i64* %77, align 8
  %181 = sub i64 %179, %180
  %182 = ashr exact i64 %181, 3
  %183 = icmp ugt i64 %182, %178
  br i1 %183, label %184, label %339

184:                                              ; preds = %169
  %185 = inttoptr i64 %180 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %186 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %185, i64 %178
  %187 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %186, align 8
  %188 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %187, null
  %189 = add nuw nsw i32 %151, 1
  br i1 %188, label %339, label %142

190:                                              ; preds = %142, %93
  %191 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %192 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %192, i64 0, i32 2
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %192, i64 0, i32 3
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %196, %194
  %198 = icmp ult i64 %197, 528
  br i1 %198, label %199, label %201, !prof !4

199:                                              ; preds = %190
  %200 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %192, i64 528) #14
  br label %203

201:                                              ; preds = %190
  %202 = add i64 %194, 528
  store i64 %202, i64* %193, align 8
  br label %203

203:                                              ; preds = %199, %201
  %204 = phi i64 [ %200, %199 ], [ %194, %201 ]
  %205 = inttoptr i64 %204 to i8*
  %206 = inttoptr i64 %204 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %207 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* nonnull align 8 %207, i64 528, i1 false) #14
  br i1 %94, label %208, label %210

208:                                              ; preds = %203
  %209 = inttoptr i64 %26 to i64*
  br label %215

210:                                              ; preds = %258, %203
  %211 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %68, i64 0, i32 4
  %212 = bitcast %"struct.v8::internal::compiler::Node::Use"** %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %263, label %308

215:                                              ; preds = %258, %208
  %216 = phi i32 [ 1, %208 ], [ %261, %258 ]
  %217 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %217, i64 0, i32 6
  %219 = load i32, i32* %218, align 8
  %220 = icmp sgt i32 %219, %216
  br i1 %220, label %222, label %221, !prof !3

221:                                              ; preds = %215
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

222:                                              ; preds = %215
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %217, i64 0, i32 5
  %224 = load i32, i32* %223, align 4
  %225 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %217) #14
  %226 = zext i1 %225 to i32
  %227 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %228 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %227) #14
  %229 = zext i1 %228 to i32
  %230 = add i32 %224, %216
  %231 = add i32 %230, %226
  %232 = add i32 %231, %229
  %233 = load i32, i32* %21, align 4
  %234 = and i32 %233, 251658240
  %235 = icmp eq i32 %234, 251658240
  br i1 %235, label %236, label %239

236:                                              ; preds = %222
  %237 = load i64, i64* %209, align 8
  %238 = add i64 %237, 16
  br label %239

239:                                              ; preds = %222, %236
  %240 = phi i64 [ %238, %236 ], [ %26, %222 ]
  %241 = inttoptr i64 %240 to %"class.v8::internal::compiler::Node"**
  %242 = sext i32 %232 to i64
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %241, i64 %242
  %244 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %243, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %244, i64 0, i32 3
  %246 = load i32, i32* %245, align 4
  %247 = and i32 %246, 16777215
  %248 = zext i32 %247 to i64
  %249 = load i64, i64* %75, align 8
  %250 = load i64, i64* %77, align 8
  %251 = sub i64 %249, %250
  %252 = ashr exact i64 %251, 3
  %253 = icmp ugt i64 %252, %248
  br i1 %253, label %254, label %258

254:                                              ; preds = %239
  %255 = inttoptr i64 %250 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %256 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %255, i64 %248
  %257 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %256, align 8
  br label %258

258:                                              ; preds = %239, %254
  %259 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %257, %254 ], [ null, %239 ]
  %260 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %191, align 8
  tail call void @_ZN2v88internal8compiler15LoadElimination13AbstractState5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %206, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %259, %"class.v8::internal::Zone"* %260)
  %261 = add nuw nsw i32 %216, 1
  %262 = icmp eq i32 %261, %52
  br i1 %262, label %210, label %215

263:                                              ; preds = %334, %210
  %264 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %206, %210 ], [ %335, %334 ]
  %265 = load i32, i32* %21, align 4
  %266 = and i32 %265, 16777215
  %267 = zext i32 %266 to i64
  %268 = load i64, i64* %75, align 8
  %269 = load i64, i64* %77, align 8
  %270 = sub i64 %268, %269
  %271 = ashr exact i64 %270, 3
  %272 = icmp ugt i64 %271, %267
  br i1 %272, label %273, label %277

273:                                              ; preds = %263
  %274 = inttoptr i64 %269 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %275 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %274, i64 %267
  %276 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %275, align 8
  br label %277

277:                                              ; preds = %273, %263
  %278 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %276, %273 ], [ null, %263 ]
  %279 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %278, %264
  br i1 %279, label %339, label %280

280:                                              ; preds = %277
  %281 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %278, null
  br i1 %281, label %292, label %282

282:                                              ; preds = %280
  %283 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %264, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %278) #14
  br i1 %283, label %339, label %284

284:                                              ; preds = %282
  %285 = load i32, i32* %21, align 4
  %286 = load i64, i64* %75, align 8
  %287 = load i64, i64* %77, align 8
  %288 = and i32 %285, 16777215
  %289 = zext i32 %288 to i64
  %290 = sub i64 %286, %287
  %291 = ashr exact i64 %290, 3
  br label %292

292:                                              ; preds = %284, %280
  %293 = phi i64 [ %291, %284 ], [ %271, %280 ]
  %294 = phi i64 [ %289, %284 ], [ %267, %280 ]
  %295 = phi i64 [ %287, %284 ], [ %269, %280 ]
  %296 = icmp ugt i64 %293, %294
  %297 = inttoptr i64 %295 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %296, label %305, label %298

298:                                              ; preds = %292
  %299 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %69, i64 0, i32 0, i32 0
  %300 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %301 = sub nsw i64 1, %293
  %302 = add nsw i64 %301, %294
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %299, i64 %302, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #14
  %303 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %304 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %303, align 8
  br label %305

305:                                              ; preds = %298, %292
  %306 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %297, %292 ], [ %304, %298 ]
  %307 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %306, i64 %294
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %264, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %307, align 8
  br label %339

308:                                              ; preds = %210, %334
  %309 = phi i64 [ %337, %334 ], [ %213, %210 ]
  %310 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %335, %334 ], [ %206, %210 ]
  %311 = inttoptr i64 %309 to %"struct.v8::internal::compiler::Node::Use"*
  %312 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %311, i64 1
  %313 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %311, i64 0, i32 2
  %314 = load i32, i32* %313, align 8
  %315 = lshr i32 %314, 1
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %312, i64 %316
  %318 = and i32 %314, 1
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %322, label %320

320:                                              ; preds = %308
  %321 = bitcast %"struct.v8::internal::compiler::Node::Use"* %317 to %"class.v8::internal::compiler::Node"*
  br label %325

322:                                              ; preds = %308
  %323 = bitcast %"struct.v8::internal::compiler::Node::Use"* %317 to %"class.v8::internal::compiler::Node"**
  %324 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, align 8
  br label %325

325:                                              ; preds = %320, %322
  %326 = phi %"class.v8::internal::compiler::Node"* [ %321, %320 ], [ %324, %322 ]
  %327 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %326, i64 0, i32 0
  %328 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %327, align 8
  %329 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %328, i64 0, i32 2
  %330 = load i16, i16* %329, align 8
  %331 = icmp eq i16 %330, 35
  br i1 %331, label %332, label %334

332:                                              ; preds = %325
  %333 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZN2v88internal8compiler15LoadElimination17UpdateStateForPhiEPKNS2_13AbstractStateEPNS1_4NodeES7_(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %310, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %326)
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %333, %332 ], [ %310, %325 ]
  %336 = inttoptr i64 %309 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %263, label %308

339:                                              ; preds = %169, %184, %63, %305, %282, %277, %139, %116, %111, %82
  %340 = phi %"class.v8::internal::compiler::Node"* [ null, %82 ], [ %1, %139 ], [ null, %111 ], [ null, %116 ], [ %1, %305 ], [ null, %277 ], [ null, %282 ], [ null, %63 ], [ null, %184 ], [ null, %169 ]
  ret %"class.v8::internal::compiler::Node"* %340
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination11ReduceStartEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %4 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %15, %8
  br i1 %16, label %17, label %34

17:                                               ; preds = %2
  %18 = inttoptr i64 %13 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %18, i64 %8
  %20 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %20, @_ZN2v88internal8compiler15LoadElimination13AbstractState12empty_state_E
  br i1 %21, label %50, label %22

22:                                               ; preds = %17
  %23 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %20, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull @_ZN2v88internal8compiler15LoadElimination13AbstractState12empty_state_E, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %20) #14
  br i1 %25, label %50, label %26

26:                                               ; preds = %24
  %27 = load i32, i32* %5, align 4
  %28 = load i64, i64* %10, align 8
  %29 = load i64, i64* %12, align 8
  %30 = and i32 %27, 16777215
  %31 = zext i32 %30 to i64
  %32 = sub i64 %28, %29
  %33 = ashr exact i64 %32, 3
  br label %34

34:                                               ; preds = %2, %26, %22
  %35 = phi i64 [ %33, %26 ], [ %15, %22 ], [ %15, %2 ]
  %36 = phi i64 [ %31, %26 ], [ %8, %22 ], [ %8, %2 ]
  %37 = phi i64 [ %29, %26 ], [ %13, %22 ], [ %13, %2 ]
  %38 = icmp ugt i64 %35, %36
  %39 = inttoptr i64 %37 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %38, label %47, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %4, i64 0, i32 0, i32 0
  %42 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %43 = sub nsw i64 1, %35
  %44 = add nsw i64 %43, %36
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %41, i64 %44, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #14
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %45, align 8
  br label %47

47:                                               ; preds = %40, %34
  %48 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %39, %34 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %48, i64 %36
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZN2v88internal8compiler15LoadElimination13AbstractState12empty_state_E, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %49, align 8
  br label %50

50:                                               ; preds = %17, %24, %47
  %51 = phi %"class.v8::internal::compiler::Node"* [ %1, %47 ], [ null, %17 ], [ null, %24 ]
  ret %"class.v8::internal::compiler::Node"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination15ReduceOtherNodeEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %115

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 9
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %115

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %5) #14
  %17 = zext i1 %16 to i32
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %19 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %18) #14
  %20 = zext i1 %19 to i32
  %21 = add i32 %15, %17
  %22 = add i32 %21, %20
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 251658240
  %26 = icmp eq i32 %25, 251658240
  %27 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %28 = add i64 %27, 32
  br i1 %26, label %29, label %33

29:                                               ; preds = %13
  %30 = inttoptr i64 %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %13, %29
  %34 = phi i64 [ %32, %29 ], [ %28, %13 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = sext i32 %22 to i64
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 %36
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %38, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 16777215
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %39 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ugt i64 %50, %43
  br i1 %51, label %52, label %115

52:                                               ; preds = %33
  %53 = inttoptr i64 %48 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %53, i64 %43
  %55 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %54, align 8
  %56 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %55, null
  br i1 %56, label %115, label %57

57:                                               ; preds = %52
  %58 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %58, i64 0, i32 3, i32 0
  %60 = load i8, i8* %59, align 2
  %61 = and i8 %60, 16
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %72

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %65 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %64, align 8
  %66 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState7KillAllEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %55, %"class.v8::internal::Zone"* %65)
  %67 = load i32, i32* %23, align 4
  %68 = load i64, i64* %45, align 8
  %69 = load i64, i64* %47, align 8
  %70 = sub i64 %68, %69
  %71 = ashr exact i64 %70, 3
  br label %72

72:                                               ; preds = %57, %63
  %73 = phi i64 [ %50, %57 ], [ %71, %63 ]
  %74 = phi i64 [ %48, %57 ], [ %69, %63 ]
  %75 = phi i32 [ %24, %57 ], [ %67, %63 ]
  %76 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %55, %57 ], [ %66, %63 ]
  %77 = and i32 %75, 16777215
  %78 = zext i32 %77 to i64
  %79 = icmp ugt i64 %73, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %72
  %81 = inttoptr i64 %74 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %82 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %81, i64 %78
  %83 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %82, align 8
  br label %84

84:                                               ; preds = %80, %72
  %85 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %83, %80 ], [ null, %72 ]
  %86 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %85, %76
  br i1 %86, label %115, label %87

87:                                               ; preds = %84
  %88 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %85, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %87
  %90 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %76, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %85) #14
  br i1 %90, label %115, label %91

91:                                               ; preds = %89
  %92 = load i32, i32* %23, align 4
  %93 = load i64, i64* %45, align 8
  %94 = load i64, i64* %47, align 8
  %95 = and i32 %92, 16777215
  %96 = zext i32 %95 to i64
  %97 = sub i64 %93, %94
  %98 = ashr exact i64 %97, 3
  br label %99

99:                                               ; preds = %91, %87
  %100 = phi i64 [ %98, %91 ], [ %73, %87 ]
  %101 = phi i64 [ %96, %91 ], [ %78, %87 ]
  %102 = phi i64 [ %94, %91 ], [ %74, %87 ]
  %103 = icmp ugt i64 %100, %101
  %104 = inttoptr i64 %102 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %103, label %112, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %39, i64 0, i32 0, i32 0
  %107 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %3, align 8
  %108 = sub nsw i64 1, %100
  %109 = add nsw i64 %108, %101
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %106, i64 %109, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #14
  %110 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %110, align 8
  br label %112

112:                                              ; preds = %105, %99
  %113 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %104, %99 ], [ %111, %105 ]
  %114 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %113, i64 %101
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %76, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %114, align 8
  br label %115

115:                                              ; preds = %33, %2, %9, %112, %89, %84, %52
  %116 = phi %"class.v8::internal::compiler::Node"* [ null, %52 ], [ %1, %112 ], [ null, %84 ], [ null, %89 ], [ null, %9 ], [ null, %2 ], [ null, %33 ]
  ret %"class.v8::internal::compiler::Node"* %116
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements6LookupEPNS1_4NodeES5_NS0_21MachineRepresentationE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i8 zeroext) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0
  %6 = add i8 %3, -6
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 3
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::Node"* %8, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %4
  %15 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %8)
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %10)
  br i1 %17, label %18, label %24

18:                                               ; preds = %16
  %19 = icmp eq i8 %12, %3
  br i1 %19, label %37, label %20

20:                                               ; preds = %18
  %21 = add i8 %12, -6
  %22 = or i8 %21, %6
  %23 = icmp ult i8 %22, 4
  br i1 %23, label %33, label %24

24:                                               ; preds = %14, %16, %20, %4
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %25, i64 0, i32 0
  %27 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 1
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 3
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq %"class.v8::internal::compiler::Node"* %27, null
  br i1 %32, label %53, label %43

33:                                               ; preds = %163, %144, %125, %106, %87, %68, %49, %20
  %34 = phi %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* [ %5, %20 ], [ %25, %49 ], [ %54, %68 ], [ %73, %87 ], [ %92, %106 ], [ %111, %125 ], [ %130, %144 ], [ %149, %163 ]
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %34, i64 0, i32 2
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  br label %41

37:                                               ; preds = %161, %142, %123, %104, %85, %66, %47, %18
  %38 = phi %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* [ %5, %18 ], [ %25, %47 ], [ %54, %66 ], [ %73, %85 ], [ %92, %104 ], [ %111, %123 ], [ %130, %142 ], [ %149, %161 ]
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %38, i64 0, i32 2
  %40 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, align 8
  br label %41

41:                                               ; preds = %148, %157, %159, %163, %37, %33
  %42 = phi %"class.v8::internal::compiler::Node"* [ %36, %33 ], [ %40, %37 ], [ null, %163 ], [ null, %159 ], [ null, %157 ], [ null, %148 ]
  ret %"class.v8::internal::compiler::Node"* %42

43:                                               ; preds = %24
  %44 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %27)
  br i1 %44, label %45, label %53

45:                                               ; preds = %43
  %46 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %29)
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  %48 = icmp eq i8 %31, %3
  br i1 %48, label %37, label %49

49:                                               ; preds = %47
  %50 = add i8 %31, -6
  %51 = or i8 %50, %6
  %52 = icmp ult i8 %51, 4
  br i1 %52, label %33, label %53

53:                                               ; preds = %49, %45, %43, %24
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %54, i64 0, i32 0
  %56 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 1
  %58 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 3
  %60 = load i8, i8* %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::Node"* %56, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %53
  %63 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %56)
  br i1 %63, label %64, label %72

64:                                               ; preds = %62
  %65 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %58)
  br i1 %65, label %66, label %72

66:                                               ; preds = %64
  %67 = icmp eq i8 %60, %3
  br i1 %67, label %37, label %68

68:                                               ; preds = %66
  %69 = add i8 %60, -6
  %70 = or i8 %69, %6
  %71 = icmp ult i8 %70, 4
  br i1 %71, label %33, label %72

72:                                               ; preds = %68, %64, %62, %53
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3
  %74 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %73, i64 0, i32 0
  %75 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 1
  %77 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 3
  %79 = load i8, i8* %78, align 8
  %80 = icmp eq %"class.v8::internal::compiler::Node"* %75, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %72
  %82 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %75)
  br i1 %82, label %83, label %91

83:                                               ; preds = %81
  %84 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %77)
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = icmp eq i8 %79, %3
  br i1 %86, label %37, label %87

87:                                               ; preds = %85
  %88 = add i8 %79, -6
  %89 = or i8 %88, %6
  %90 = icmp ult i8 %89, 4
  br i1 %90, label %33, label %91

91:                                               ; preds = %87, %83, %81, %72
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %92, i64 0, i32 0
  %94 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 1
  %96 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 3
  %98 = load i8, i8* %97, align 8
  %99 = icmp eq %"class.v8::internal::compiler::Node"* %94, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %91
  %101 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %94)
  br i1 %101, label %102, label %110

102:                                              ; preds = %100
  %103 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %96)
  br i1 %103, label %104, label %110

104:                                              ; preds = %102
  %105 = icmp eq i8 %98, %3
  br i1 %105, label %37, label %106

106:                                              ; preds = %104
  %107 = add i8 %98, -6
  %108 = or i8 %107, %6
  %109 = icmp ult i8 %108, 4
  br i1 %109, label %33, label %110

110:                                              ; preds = %106, %102, %100, %91
  %111 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %111, i64 0, i32 0
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 1
  %115 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 3
  %117 = load i8, i8* %116, align 8
  %118 = icmp eq %"class.v8::internal::compiler::Node"* %113, null
  br i1 %118, label %129, label %119

119:                                              ; preds = %110
  %120 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %113)
  br i1 %120, label %121, label %129

121:                                              ; preds = %119
  %122 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %115)
  br i1 %122, label %123, label %129

123:                                              ; preds = %121
  %124 = icmp eq i8 %117, %3
  br i1 %124, label %37, label %125

125:                                              ; preds = %123
  %126 = add i8 %117, -6
  %127 = or i8 %126, %6
  %128 = icmp ult i8 %127, 4
  br i1 %128, label %33, label %129

129:                                              ; preds = %125, %121, %119, %110
  %130 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %130, i64 0, i32 0
  %132 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 1
  %134 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 3
  %136 = load i8, i8* %135, align 8
  %137 = icmp eq %"class.v8::internal::compiler::Node"* %132, null
  br i1 %137, label %148, label %138

138:                                              ; preds = %129
  %139 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %132)
  br i1 %139, label %140, label %148

140:                                              ; preds = %138
  %141 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %134)
  br i1 %141, label %142, label %148

142:                                              ; preds = %140
  %143 = icmp eq i8 %136, %3
  br i1 %143, label %37, label %144

144:                                              ; preds = %142
  %145 = add i8 %136, -6
  %146 = or i8 %145, %6
  %147 = icmp ult i8 %146, 4
  br i1 %147, label %33, label %148

148:                                              ; preds = %144, %140, %138, %129
  %149 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %149, i64 0, i32 0
  %151 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 1
  %153 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 3
  %155 = load i8, i8* %154, align 8
  %156 = icmp eq %"class.v8::internal::compiler::Node"* %151, null
  br i1 %156, label %41, label %157

157:                                              ; preds = %148
  %158 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %151)
  br i1 %158, label %159, label %41

159:                                              ; preds = %157
  %160 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %153)
  br i1 %160, label %161, label %41

161:                                              ; preds = %159
  %162 = icmp eq i8 %155, %3
  br i1 %162, label %37, label %163

163:                                              ; preds = %161
  %164 = add i8 %155, -6
  %165 = or i8 %164, %6
  %166 = icmp ult i8 %165, 4
  br i1 %166, label %33, label %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #3 {
  br label %3

3:                                                ; preds = %40, %2
  %4 = phi %"class.v8::internal::compiler::Node"* [ %0, %2 ], [ %43, %40 ]
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 2
  %8 = load i16, i16* %7, align 8
  switch i16 %8, label %32 [
    i16 207, label %9
    i16 40, label %9
    i16 59, label %9
  ]

9:                                                ; preds = %3, %3, %3
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = lshr i32 %11, 24
  %13 = and i32 %12, 15
  %14 = icmp eq i32 %13, 15
  %15 = ptrtoint %"class.v8::internal::compiler::Node"* %4 to i64
  %16 = add i64 %15, 32
  br i1 %14, label %17, label %24

17:                                               ; preds = %9
  %18 = inttoptr i64 %16 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %19 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %18, align 8
  %20 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %19 to i64
  %21 = add i64 %20, 16
  %22 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  br label %24

24:                                               ; preds = %17, %9
  %25 = phi i32 [ %23, %17 ], [ %13, %9 ]
  %26 = phi i64 [ %21, %17 ], [ %16, %9 ]
  %27 = icmp sgt i32 %25, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = inttoptr i64 %26 to %"class.v8::internal::compiler::Node"**
  %30 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, align 8
  %31 = icmp eq %"class.v8::internal::compiler::Node"* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %3, %28
  br label %44

33:                                               ; preds = %28, %24
  %34 = and i32 %11, 251658240
  %35 = icmp eq i32 %34, 251658240
  br i1 %35, label %36, label %40

36:                                               ; preds = %33
  %37 = inttoptr i64 %16 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 16
  br label %40

40:                                               ; preds = %36, %33
  %41 = phi i64 [ %39, %36 ], [ %16, %33 ]
  %42 = inttoptr i64 %41 to %"class.v8::internal::compiler::Node"**
  %43 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, align 8
  br label %3

44:                                               ; preds = %32, %80
  %45 = phi %"class.v8::internal::compiler::Node"* [ %83, %80 ], [ %1, %32 ]
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %45, i64 0, i32 0
  %47 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %47, i64 0, i32 2
  %49 = load i16, i16* %48, align 8
  switch i16 %49, label %84 [
    i16 207, label %50
    i16 40, label %50
    i16 59, label %50
  ]

50:                                               ; preds = %44, %44, %44
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %45, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = lshr i32 %52, 24
  %54 = and i32 %53, 15
  %55 = icmp eq i32 %54, 15
  %56 = ptrtoint %"class.v8::internal::compiler::Node"* %45 to i64
  %57 = add i64 %56, 32
  br i1 %55, label %58, label %65

58:                                               ; preds = %50
  %59 = inttoptr i64 %57 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %60 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %59, align 8
  %61 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %60 to i64
  %62 = add i64 %61, 16
  %63 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  br label %65

65:                                               ; preds = %58, %50
  %66 = phi i32 [ %64, %58 ], [ %54, %50 ]
  %67 = phi i64 [ %62, %58 ], [ %57, %50 ]
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = inttoptr i64 %67 to %"class.v8::internal::compiler::Node"**
  %71 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %72 = icmp eq %"class.v8::internal::compiler::Node"* %71, null
  br i1 %72, label %84, label %73

73:                                               ; preds = %69, %65
  %74 = and i32 %52, 251658240
  %75 = icmp eq i32 %74, 251658240
  br i1 %75, label %76, label %80

76:                                               ; preds = %73
  %77 = inttoptr i64 %57 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 16
  br label %80

80:                                               ; preds = %76, %73
  %81 = phi i64 [ %79, %76 ], [ %57, %73 ]
  %82 = inttoptr i64 %81 to %"class.v8::internal::compiler::Node"**
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, align 8
  br label %44

84:                                               ; preds = %44, %69
  %85 = icmp eq %"class.v8::internal::compiler::Node"* %4, %45
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractElements"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements4KillEPNS1_4NodeES5_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = alloca [16 x i8], align 8
  %6 = alloca %"class.v8::internal::compiler::Type", align 8
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::Node"* %9, null
  br i1 %10, label %75, label %11

11:                                               ; preds = %4
  %12 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %9)
  br i1 %12, label %13, label %75

13:                                               ; preds = %273, %267, %261, %255, %249, %243, %237, %11
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %15
  %19 = icmp ult i64 %18, 264
  br i1 %19, label %20, label %22, !prof !4

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 264) #14
  br label %24

22:                                               ; preds = %13
  %23 = add i64 %15, 264
  store i64 %23, i64* %14, align 8
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi i64 [ %21, %20 ], [ %15, %22 ]
  %26 = inttoptr i64 %25 to i8*
  %27 = inttoptr i64 %25 to %"class.v8::internal::compiler::LoadElimination::AbstractElements"*
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 1
  store i64 0, i64* %28, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 25, i1 false) #14
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 1
  %30 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 25, i1 false) #14
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 2
  %32 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 25, i1 false) #14
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 3
  %34 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 25, i1 false) #14
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 4
  %36 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 25, i1 false) #14
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 5
  %38 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 25, i1 false) #14
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 6
  %40 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 25, i1 false) #14
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 7
  %42 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 25, i1 false) #14
  %43 = bitcast %"class.v8::internal::compiler::Type"* %6 to i8*
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %46 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 1
  %48 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 2
  %50 = bitcast %"class.v8::internal::compiler::Node"** %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %50, i64 16, i1 false)
  %51 = icmp eq %"class.v8::internal::compiler::Node"* %46, null
  br i1 %51, label %67, label %52

52:                                               ; preds = %24
  %53 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %46)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %53, label %54, label %59

54:                                               ; preds = %52
  %55 = load i64, i64* %44, align 8
  store i64 %55, i64* %45, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %48, i64 0, i32 1, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %57) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %58, label %67, label %60

59:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %60

60:                                               ; preds = %54, %59
  %61 = load i64, i64* %28, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %28, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %61, i32 0
  store %"class.v8::internal::compiler::Node"* %46, %"class.v8::internal::compiler::Node"** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %61, i32 1
  store %"class.v8::internal::compiler::Node"* %48, %"class.v8::internal::compiler::Node"** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %61, i32 2
  %66 = bitcast %"class.v8::internal::compiler::Node"** %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %7, i64 9, i1 false)
  br label %67

67:                                               ; preds = %60, %54, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 0
  %69 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 1
  %71 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 2
  %73 = bitcast %"class.v8::internal::compiler::Node"** %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %73, i64 16, i1 false)
  %74 = icmp eq %"class.v8::internal::compiler::Node"* %69, null
  br i1 %74, label %96, label %81

75:                                               ; preds = %4, %11
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 0
  %77 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::Node"* %77, null
  br i1 %78, label %239, label %237

79:                                               ; preds = %269, %273, %234
  %80 = phi %"class.v8::internal::compiler::LoadElimination::AbstractElements"* [ %27, %234 ], [ %0, %273 ], [ %0, %269 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %80

81:                                               ; preds = %67
  %82 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %69)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %82, label %84, label %83

83:                                               ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %89

84:                                               ; preds = %81
  %85 = load i64, i64* %44, align 8
  store i64 %85, i64* %45, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %71, i64 0, i32 1, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %87) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %88, label %96, label %89

89:                                               ; preds = %84, %83
  %90 = load i64, i64* %28, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %28, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %90, i32 0
  store %"class.v8::internal::compiler::Node"* %69, %"class.v8::internal::compiler::Node"** %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %90, i32 1
  store %"class.v8::internal::compiler::Node"* %71, %"class.v8::internal::compiler::Node"** %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %90, i32 2
  %95 = bitcast %"class.v8::internal::compiler::Node"** %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* nonnull align 8 %7, i64 9, i1 false)
  br label %96

96:                                               ; preds = %89, %84, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %97 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 0
  %98 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 1
  %100 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 2
  %102 = bitcast %"class.v8::internal::compiler::Node"** %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %102, i64 16, i1 false)
  %103 = icmp eq %"class.v8::internal::compiler::Node"* %98, null
  br i1 %103, label %119, label %104

104:                                              ; preds = %96
  %105 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %98)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %105, label %107, label %106

106:                                              ; preds = %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %112

107:                                              ; preds = %104
  %108 = load i64, i64* %44, align 8
  store i64 %108, i64* %45, align 8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %100, i64 0, i32 1, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %110) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %111, label %119, label %112

112:                                              ; preds = %107, %106
  %113 = load i64, i64* %28, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %28, align 8
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %113, i32 0
  store %"class.v8::internal::compiler::Node"* %98, %"class.v8::internal::compiler::Node"** %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %113, i32 1
  store %"class.v8::internal::compiler::Node"* %100, %"class.v8::internal::compiler::Node"** %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %113, i32 2
  %118 = bitcast %"class.v8::internal::compiler::Node"** %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 8 %7, i64 9, i1 false)
  br label %119

119:                                              ; preds = %112, %107, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %120 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 0
  %121 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 1
  %123 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 2
  %125 = bitcast %"class.v8::internal::compiler::Node"** %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %125, i64 16, i1 false)
  %126 = icmp eq %"class.v8::internal::compiler::Node"* %121, null
  br i1 %126, label %142, label %127

127:                                              ; preds = %119
  %128 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %121)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %128, label %130, label %129

129:                                              ; preds = %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %135

130:                                              ; preds = %127
  %131 = load i64, i64* %44, align 8
  store i64 %131, i64* %45, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %123, i64 0, i32 1, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %133) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %134, label %142, label %135

135:                                              ; preds = %130, %129
  %136 = load i64, i64* %28, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %28, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %136, i32 0
  store %"class.v8::internal::compiler::Node"* %121, %"class.v8::internal::compiler::Node"** %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %136, i32 1
  store %"class.v8::internal::compiler::Node"* %123, %"class.v8::internal::compiler::Node"** %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %136, i32 2
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* nonnull align 8 %7, i64 9, i1 false)
  br label %142

142:                                              ; preds = %135, %130, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 0
  %144 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 1
  %146 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 2
  %148 = bitcast %"class.v8::internal::compiler::Node"** %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %148, i64 16, i1 false)
  %149 = icmp eq %"class.v8::internal::compiler::Node"* %144, null
  br i1 %149, label %165, label %150

150:                                              ; preds = %142
  %151 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %144)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %151, label %153, label %152

152:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %158

153:                                              ; preds = %150
  %154 = load i64, i64* %44, align 8
  store i64 %154, i64* %45, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %146, i64 0, i32 1, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %156) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %157, label %165, label %158

158:                                              ; preds = %153, %152
  %159 = load i64, i64* %28, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %28, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %159, i32 0
  store %"class.v8::internal::compiler::Node"* %144, %"class.v8::internal::compiler::Node"** %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %159, i32 1
  store %"class.v8::internal::compiler::Node"* %146, %"class.v8::internal::compiler::Node"** %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %159, i32 2
  %164 = bitcast %"class.v8::internal::compiler::Node"** %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* nonnull align 8 %7, i64 9, i1 false)
  br label %165

165:                                              ; preds = %158, %153, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %166 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 0
  %167 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 1
  %169 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 2
  %171 = bitcast %"class.v8::internal::compiler::Node"** %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %171, i64 16, i1 false)
  %172 = icmp eq %"class.v8::internal::compiler::Node"* %167, null
  br i1 %172, label %188, label %173

173:                                              ; preds = %165
  %174 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %167)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %174, label %176, label %175

175:                                              ; preds = %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %181

176:                                              ; preds = %173
  %177 = load i64, i64* %44, align 8
  store i64 %177, i64* %45, align 8
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %169, i64 0, i32 1, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %179) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %180, label %188, label %181

181:                                              ; preds = %176, %175
  %182 = load i64, i64* %28, align 8
  %183 = add i64 %182, 1
  store i64 %183, i64* %28, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %182, i32 0
  store %"class.v8::internal::compiler::Node"* %167, %"class.v8::internal::compiler::Node"** %184, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %182, i32 1
  store %"class.v8::internal::compiler::Node"* %169, %"class.v8::internal::compiler::Node"** %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %182, i32 2
  %187 = bitcast %"class.v8::internal::compiler::Node"** %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* nonnull align 8 %7, i64 9, i1 false)
  br label %188

188:                                              ; preds = %181, %176, %165
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %189 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 0
  %190 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 1
  %192 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 2
  %194 = bitcast %"class.v8::internal::compiler::Node"** %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %194, i64 16, i1 false)
  %195 = icmp eq %"class.v8::internal::compiler::Node"* %190, null
  br i1 %195, label %211, label %196

196:                                              ; preds = %188
  %197 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %190)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %197, label %199, label %198

198:                                              ; preds = %196
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %204

199:                                              ; preds = %196
  %200 = load i64, i64* %44, align 8
  store i64 %200, i64* %45, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %192, i64 0, i32 1, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %202) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %203, label %211, label %204

204:                                              ; preds = %199, %198
  %205 = load i64, i64* %28, align 8
  %206 = add i64 %205, 1
  store i64 %206, i64* %28, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %205, i32 0
  store %"class.v8::internal::compiler::Node"* %190, %"class.v8::internal::compiler::Node"** %207, align 8
  %208 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %205, i32 1
  store %"class.v8::internal::compiler::Node"* %192, %"class.v8::internal::compiler::Node"** %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %205, i32 2
  %210 = bitcast %"class.v8::internal::compiler::Node"** %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* nonnull align 8 %7, i64 9, i1 false)
  br label %211

211:                                              ; preds = %204, %199, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 0
  %213 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 1
  %215 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 2
  %217 = bitcast %"class.v8::internal::compiler::Node"** %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %217, i64 16, i1 false)
  %218 = icmp eq %"class.v8::internal::compiler::Node"* %213, null
  br i1 %218, label %234, label %219

219:                                              ; preds = %211
  %220 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %213)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %220, label %222, label %221

221:                                              ; preds = %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %227

222:                                              ; preds = %219
  %223 = load i64, i64* %44, align 8
  store i64 %223, i64* %45, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %215, i64 0, i32 1, i32 0
  %225 = load i64, i64* %224, align 8
  %226 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %225) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br i1 %226, label %234, label %227

227:                                              ; preds = %222, %221
  %228 = load i64, i64* %28, align 8
  %229 = add i64 %228, 1
  store i64 %229, i64* %28, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %228, i32 0
  store %"class.v8::internal::compiler::Node"* %213, %"class.v8::internal::compiler::Node"** %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %228, i32 1
  store %"class.v8::internal::compiler::Node"* %215, %"class.v8::internal::compiler::Node"** %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %27, i64 0, i32 0, i64 %228, i32 2
  %233 = bitcast %"class.v8::internal::compiler::Node"** %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* nonnull align 8 %7, i64 9, i1 false)
  br label %234

234:                                              ; preds = %227, %222, %211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  %235 = load i64, i64* %28, align 8
  %236 = and i64 %235, 7
  store i64 %236, i64* %28, align 8
  br label %79

237:                                              ; preds = %75
  %238 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %77)
  br i1 %238, label %13, label %239

239:                                              ; preds = %237, %75
  %240 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 0
  %241 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, align 8
  %242 = icmp eq %"class.v8::internal::compiler::Node"* %241, null
  br i1 %242, label %245, label %243

243:                                              ; preds = %239
  %244 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %241)
  br i1 %244, label %13, label %245

245:                                              ; preds = %243, %239
  %246 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 0
  %247 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, align 8
  %248 = icmp eq %"class.v8::internal::compiler::Node"* %247, null
  br i1 %248, label %251, label %249

249:                                              ; preds = %245
  %250 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %247)
  br i1 %250, label %13, label %251

251:                                              ; preds = %249, %245
  %252 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 0
  %253 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %252, align 8
  %254 = icmp eq %"class.v8::internal::compiler::Node"* %253, null
  br i1 %254, label %257, label %255

255:                                              ; preds = %251
  %256 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %253)
  br i1 %256, label %13, label %257

257:                                              ; preds = %255, %251
  %258 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 0
  %259 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %258, align 8
  %260 = icmp eq %"class.v8::internal::compiler::Node"* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %259)
  br i1 %262, label %13, label %263

263:                                              ; preds = %261, %257
  %264 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 0
  %265 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, align 8
  %266 = icmp eq %"class.v8::internal::compiler::Node"* %265, null
  br i1 %266, label %269, label %267

267:                                              ; preds = %263
  %268 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %265)
  br i1 %268, label %13, label %269

269:                                              ; preds = %267, %263
  %270 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 0
  %271 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %270, align 8
  %272 = icmp eq %"class.v8::internal::compiler::Node"* %271, null
  br i1 %272, label %79, label %273

273:                                              ; preds = %269
  %274 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* nonnull %271)
  br i1 %274, label %13, label %79
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::compiler::Type", align 8
  %4 = icmp eq %"class.v8::internal::compiler::Node"* %0, %1
  br i1 %4, label %99, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.v8::internal::compiler::Type"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %3, i64 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = call zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"* nonnull %3, i64 %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  br i1 %12, label %13, label %100

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 2
  %17 = load i16, i16* %16, align 8
  switch i16 %17, label %53 [
    i16 207, label %18
    i16 40, label %18
    i16 59, label %18
  ]

18:                                               ; preds = %13, %13, %13
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = lshr i32 %20, 24
  %22 = and i32 %21, 15
  %23 = icmp eq i32 %22, 15
  %24 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %25 = add i64 %24, 32
  br i1 %23, label %26, label %33

26:                                               ; preds = %18
  %27 = inttoptr i64 %25 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %28 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %27, align 8
  %29 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %28 to i64
  %30 = add i64 %29, 16
  %31 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  br label %33

33:                                               ; preds = %26, %18
  %34 = phi i32 [ %32, %26 ], [ %22, %18 ]
  %35 = phi i64 [ %30, %26 ], [ %25, %18 ]
  %36 = icmp sgt i32 %34, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = inttoptr i64 %35 to %"class.v8::internal::compiler::Node"**
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %40 = icmp eq %"class.v8::internal::compiler::Node"* %39, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %37, %33
  %42 = and i32 %20, 251658240
  %43 = icmp eq i32 %42, 251658240
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = inttoptr i64 %25 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 16
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi i64 [ %47, %44 ], [ %25, %41 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::Node"**
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %52 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %0, %"class.v8::internal::compiler::Node"* %51)
  br label %100

53:                                               ; preds = %37, %13
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %55 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %55, i64 0, i32 2
  %57 = load i16, i16* %56, align 8
  switch i16 %57, label %93 [
    i16 207, label %58
    i16 40, label %58
    i16 59, label %58
  ]

58:                                               ; preds = %53, %53, %53
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = lshr i32 %60, 24
  %62 = and i32 %61, 15
  %63 = icmp eq i32 %62, 15
  %64 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %65 = add i64 %64, 32
  br i1 %63, label %66, label %73

66:                                               ; preds = %58
  %67 = inttoptr i64 %65 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %68 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %67, align 8
  %69 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %68 to i64
  %70 = add i64 %69, 16
  %71 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %68, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  br label %73

73:                                               ; preds = %66, %58
  %74 = phi i32 [ %72, %66 ], [ %62, %58 ]
  %75 = phi i64 [ %70, %66 ], [ %65, %58 ]
  %76 = icmp sgt i32 %74, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"**
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %80 = icmp eq %"class.v8::internal::compiler::Node"* %79, null
  br i1 %80, label %93, label %81

81:                                               ; preds = %77, %73
  %82 = and i32 %60, 251658240
  %83 = icmp eq i32 %82, 251658240
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = inttoptr i64 %65 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 16
  br label %88

88:                                               ; preds = %81, %84
  %89 = phi i64 [ %87, %84 ], [ %65, %81 ]
  %90 = inttoptr i64 %89 to %"class.v8::internal::compiler::Node"**
  %91 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %90, align 8
  %92 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %91, %"class.v8::internal::compiler::Node"* %1)
  br label %100

93:                                               ; preds = %77, %53
  %94 = icmp eq i16 %17, 197
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  switch i16 %57, label %99 [
    i16 197, label %100
    i16 30, label %100
    i16 50, label %100
  ]

96:                                               ; preds = %93
  %97 = icmp eq i16 %57, 197
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  switch i16 %17, label %99 [
    i16 30, label %100
    i16 50, label %100
  ]

99:                                               ; preds = %2, %96, %98, %95
  br label %100

100:                                              ; preds = %98, %98, %95, %95, %95, %5, %99, %88, %48
  %101 = phi i1 [ %52, %48 ], [ %92, %88 ], [ true, %99 ], [ false, %5 ], [ false, %95 ], [ false, %95 ], [ false, %95 ], [ false, %98 ], [ false, %98 ]
  ret i1 %101
}

declare zeroext i1 @_ZNK2v88internal8compiler4Type5MaybeES2_(%"class.v8::internal::compiler::Type"*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler15LoadElimination16AbstractElements6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* readonly, %"class.v8::internal::compiler::LoadElimination::AbstractElements"* readonly) local_unnamed_addr #3 align 2 {
  %3 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, %1
  br i1 %3, label %102, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 1, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 1, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 1, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 2, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 2, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 2, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 3, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 3, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 3, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 4, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 4, i32 2
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 4, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 5, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 5, i32 2
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 5, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 6, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 6, i32 2
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 6, i32 1
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 7, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 7, i32 2
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 7, i32 1
  br label %29

29:                                               ; preds = %50, %4
  %30 = phi i64 [ %51, %50 ], [ 0, %4 ]
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 %30, i32 0
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 %30, i32 1
  %34 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 %30, i32 2
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  %37 = icmp eq %"class.v8::internal::compiler::Node"* %32, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %29
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %5, align 8
  %40 = icmp eq %"class.v8::internal::compiler::Node"* %32, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %6, align 8
  %43 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %7, align 8
  %44 = icmp eq %"class.v8::internal::compiler::Node"* %34, %43
  %45 = icmp eq %"class.v8::internal::compiler::Node"* %36, %42
  %46 = and i1 %45, %44
  br i1 %46, label %50, label %47

47:                                               ; preds = %38, %41
  %48 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %49 = icmp eq %"class.v8::internal::compiler::Node"* %32, %48
  br i1 %49, label %164, label %170

50:                                               ; preds = %41, %164, %173, %182, %191, %200, %209, %218, %29
  %51 = add nuw nsw i64 %30, 1
  %52 = icmp eq i64 %51, 8
  br i1 %52, label %53, label %29

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 2
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 1
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 0
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 2
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 0
  %61 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 2
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 1
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 0
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 2
  %65 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 2
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 1
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 2
  %71 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 1
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 0
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 2
  %74 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 1
  %75 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 2
  %77 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 1
  br label %78

78:                                               ; preds = %99, %53
  %79 = phi i64 [ %100, %99 ], [ 0, %53 ]
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 %79, i32 0
  %81 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 %79, i32 1
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 %79, i32 2
  %85 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::Node"* %81, null
  br i1 %86, label %99, label %87

87:                                               ; preds = %78
  %88 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, align 8
  %89 = icmp eq %"class.v8::internal::compiler::Node"* %81, %88
  br i1 %89, label %90, label %96

90:                                               ; preds = %87
  %91 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, align 8
  %92 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, align 8
  %93 = icmp eq %"class.v8::internal::compiler::Node"* %83, %92
  %94 = icmp eq %"class.v8::internal::compiler::Node"* %85, %91
  %95 = and i1 %94, %93
  br i1 %95, label %99, label %96

96:                                               ; preds = %87, %90
  %97 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, align 8
  %98 = icmp eq %"class.v8::internal::compiler::Node"* %81, %97
  br i1 %98, label %104, label %110

99:                                               ; preds = %90, %104, %113, %122, %131, %140, %149, %158, %78
  %100 = add nuw nsw i64 %79, 1
  %101 = icmp eq i64 %100, 8
  br i1 %101, label %102, label %78

102:                                              ; preds = %215, %218, %155, %158, %99, %2
  %103 = phi i1 [ true, %2 ], [ false, %155 ], [ false, %158 ], [ true, %99 ], [ false, %218 ], [ false, %215 ]
  ret i1 %103

104:                                              ; preds = %96
  %105 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, align 8
  %106 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  %107 = icmp eq %"class.v8::internal::compiler::Node"* %83, %106
  %108 = icmp eq %"class.v8::internal::compiler::Node"* %85, %105
  %109 = and i1 %108, %107
  br i1 %109, label %99, label %110

110:                                              ; preds = %104, %96
  %111 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, align 8
  %112 = icmp eq %"class.v8::internal::compiler::Node"* %81, %111
  br i1 %112, label %113, label %119

113:                                              ; preds = %110
  %114 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, align 8
  %115 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  %116 = icmp eq %"class.v8::internal::compiler::Node"* %83, %115
  %117 = icmp eq %"class.v8::internal::compiler::Node"* %85, %114
  %118 = and i1 %117, %116
  br i1 %118, label %99, label %119

119:                                              ; preds = %113, %110
  %120 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, align 8
  %121 = icmp eq %"class.v8::internal::compiler::Node"* %81, %120
  br i1 %121, label %122, label %128

122:                                              ; preds = %119
  %123 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, align 8
  %124 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, align 8
  %125 = icmp eq %"class.v8::internal::compiler::Node"* %83, %124
  %126 = icmp eq %"class.v8::internal::compiler::Node"* %85, %123
  %127 = and i1 %126, %125
  br i1 %127, label %99, label %128

128:                                              ; preds = %122, %119
  %129 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, align 8
  %130 = icmp eq %"class.v8::internal::compiler::Node"* %81, %129
  br i1 %130, label %131, label %137

131:                                              ; preds = %128
  %132 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %133 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, align 8
  %134 = icmp eq %"class.v8::internal::compiler::Node"* %83, %133
  %135 = icmp eq %"class.v8::internal::compiler::Node"* %85, %132
  %136 = and i1 %135, %134
  br i1 %136, label %99, label %137

137:                                              ; preds = %131, %128
  %138 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %69, align 8
  %139 = icmp eq %"class.v8::internal::compiler::Node"* %81, %138
  br i1 %139, label %140, label %146

140:                                              ; preds = %137
  %141 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %142 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, align 8
  %143 = icmp eq %"class.v8::internal::compiler::Node"* %83, %142
  %144 = icmp eq %"class.v8::internal::compiler::Node"* %85, %141
  %145 = and i1 %144, %143
  br i1 %145, label %99, label %146

146:                                              ; preds = %140, %137
  %147 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, align 8
  %148 = icmp eq %"class.v8::internal::compiler::Node"* %81, %147
  br i1 %148, label %149, label %155

149:                                              ; preds = %146
  %150 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, align 8
  %151 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, align 8
  %152 = icmp eq %"class.v8::internal::compiler::Node"* %83, %151
  %153 = icmp eq %"class.v8::internal::compiler::Node"* %85, %150
  %154 = and i1 %153, %152
  br i1 %154, label %99, label %155

155:                                              ; preds = %149, %146
  %156 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, align 8
  %157 = icmp eq %"class.v8::internal::compiler::Node"* %81, %156
  br i1 %157, label %158, label %102

158:                                              ; preds = %155
  %159 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, align 8
  %160 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, align 8
  %161 = icmp eq %"class.v8::internal::compiler::Node"* %83, %160
  %162 = icmp eq %"class.v8::internal::compiler::Node"* %85, %159
  %163 = and i1 %162, %161
  br i1 %163, label %99, label %102

164:                                              ; preds = %47
  %165 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %9, align 8
  %166 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %167 = icmp eq %"class.v8::internal::compiler::Node"* %34, %166
  %168 = icmp eq %"class.v8::internal::compiler::Node"* %36, %165
  %169 = and i1 %168, %167
  br i1 %169, label %50, label %170

170:                                              ; preds = %164, %47
  %171 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %11, align 8
  %172 = icmp eq %"class.v8::internal::compiler::Node"* %32, %171
  br i1 %172, label %173, label %179

173:                                              ; preds = %170
  %174 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %12, align 8
  %175 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, align 8
  %176 = icmp eq %"class.v8::internal::compiler::Node"* %34, %175
  %177 = icmp eq %"class.v8::internal::compiler::Node"* %36, %174
  %178 = and i1 %177, %176
  br i1 %178, label %50, label %179

179:                                              ; preds = %173, %170
  %180 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  %181 = icmp eq %"class.v8::internal::compiler::Node"* %32, %180
  br i1 %181, label %182, label %188

182:                                              ; preds = %179
  %183 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %184 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, align 8
  %185 = icmp eq %"class.v8::internal::compiler::Node"* %34, %184
  %186 = icmp eq %"class.v8::internal::compiler::Node"* %36, %183
  %187 = and i1 %186, %185
  br i1 %187, label %50, label %188

188:                                              ; preds = %182, %179
  %189 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %190 = icmp eq %"class.v8::internal::compiler::Node"* %32, %189
  br i1 %190, label %191, label %197

191:                                              ; preds = %188
  %192 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, align 8
  %193 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %194 = icmp eq %"class.v8::internal::compiler::Node"* %34, %193
  %195 = icmp eq %"class.v8::internal::compiler::Node"* %36, %192
  %196 = and i1 %195, %194
  br i1 %196, label %50, label %197

197:                                              ; preds = %191, %188
  %198 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, align 8
  %199 = icmp eq %"class.v8::internal::compiler::Node"* %32, %198
  br i1 %199, label %200, label %206

200:                                              ; preds = %197
  %201 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  %202 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  %203 = icmp eq %"class.v8::internal::compiler::Node"* %34, %202
  %204 = icmp eq %"class.v8::internal::compiler::Node"* %36, %201
  %205 = and i1 %204, %203
  br i1 %205, label %50, label %206

206:                                              ; preds = %200, %197
  %207 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, align 8
  %208 = icmp eq %"class.v8::internal::compiler::Node"* %32, %207
  br i1 %208, label %209, label %215

209:                                              ; preds = %206
  %210 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, align 8
  %211 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %212 = icmp eq %"class.v8::internal::compiler::Node"* %34, %211
  %213 = icmp eq %"class.v8::internal::compiler::Node"* %36, %210
  %214 = and i1 %213, %212
  br i1 %214, label %50, label %215

215:                                              ; preds = %209, %206
  %216 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %217 = icmp eq %"class.v8::internal::compiler::Node"* %32, %216
  br i1 %217, label %218, label %102

218:                                              ; preds = %215
  %219 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  %220 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  %221 = icmp eq %"class.v8::internal::compiler::Node"* %34, %220
  %222 = icmp eq %"class.v8::internal::compiler::Node"* %36, %219
  %223 = and i1 %222, %221
  br i1 %223, label %50, label %102
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractElements"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination16AbstractElements6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1)
  br i1 %4, label %99, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 264
  br i1 %11, label %12, label %14, !prof !4

12:                                               ; preds = %5
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 264) #14
  br label %16

14:                                               ; preds = %5
  %15 = add i64 %7, 264
  store i64 %15, i64* %6, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %7, %14 ]
  %18 = inttoptr i64 %17 to i8*
  %19 = inttoptr i64 %17 to %"class.v8::internal::compiler::LoadElimination::AbstractElements"*
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 1
  store i64 0, i64* %20, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false) #14
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 1
  %22 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 25, i1 false) #14
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 2
  %24 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false) #14
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 3
  %26 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 25, i1 false) #14
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 4
  %28 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 25, i1 false) #14
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 5
  %30 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 25, i1 false) #14
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 6
  %32 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 25, i1 false) #14
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 7
  %34 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 25, i1 false) #14
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 0, i32 1
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 1, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 1, i32 2
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 1, i32 1
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 2, i32 0
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 2, i32 2
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 2, i32 1
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 3, i32 0
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 3, i32 2
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 3, i32 1
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 4, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 4, i32 2
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 4, i32 1
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 5, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 5, i32 2
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 5, i32 1
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 6, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 6, i32 2
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 6, i32 1
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 7, i32 0
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 7, i32 2
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %1, i64 0, i32 0, i64 7, i32 1
  br label %64

61:                                               ; preds = %96
  %62 = load i64, i64* %20, align 8
  %63 = and i64 %62, 7
  store i64 %63, i64* %20, align 8
  br label %99

64:                                               ; preds = %16, %96
  %65 = phi %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* [ %35, %16 ], [ %97, %96 ]
  %66 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %65, i64 0, i32 0
  %67 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %65, i64 0, i32 1
  %69 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, align 8
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %65, i64 0, i32 2
  %71 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %65, i64 0, i32 3
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i8
  %76 = icmp eq %"class.v8::internal::compiler::Node"* %67, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %64
  %78 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %79 = icmp eq %"class.v8::internal::compiler::Node"* %67, %78
  br i1 %79, label %80, label %93

80:                                               ; preds = %77
  %81 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %82 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, align 8
  %83 = icmp eq %"class.v8::internal::compiler::Node"* %69, %82
  %84 = icmp eq %"class.v8::internal::compiler::Node"* %71, %81
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %93

86:                                               ; preds = %155, %146, %137, %128, %119, %110, %101, %80
  %87 = load i64, i64* %20, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %20, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 %87, i32 0
  store %"class.v8::internal::compiler::Node"* %67, %"class.v8::internal::compiler::Node"** %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 %87, i32 1
  store %"class.v8::internal::compiler::Node"* %69, %"class.v8::internal::compiler::Node"** %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 %87, i32 2
  store %"class.v8::internal::compiler::Node"* %71, %"class.v8::internal::compiler::Node"** %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %19, i64 0, i32 0, i64 %87, i32 3
  store i8 %75, i8* %92, align 8
  br label %96

93:                                               ; preds = %80, %77
  %94 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %95 = icmp eq %"class.v8::internal::compiler::Node"* %67, %94
  br i1 %95, label %101, label %107

96:                                               ; preds = %152, %155, %86, %64
  %97 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element", %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %65, i64 1
  %98 = icmp eq %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %97, %36
  br i1 %98, label %61, label %64

99:                                               ; preds = %3, %61
  %100 = phi %"class.v8::internal::compiler::LoadElimination::AbstractElements"* [ %19, %61 ], [ %0, %3 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %100

101:                                              ; preds = %93
  %102 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, align 8
  %103 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, align 8
  %104 = icmp eq %"class.v8::internal::compiler::Node"* %69, %103
  %105 = icmp eq %"class.v8::internal::compiler::Node"* %71, %102
  %106 = and i1 %105, %104
  br i1 %106, label %86, label %107

107:                                              ; preds = %101, %93
  %108 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, align 8
  %109 = icmp eq %"class.v8::internal::compiler::Node"* %67, %108
  br i1 %109, label %110, label %116

110:                                              ; preds = %107
  %111 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, align 8
  %112 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, align 8
  %113 = icmp eq %"class.v8::internal::compiler::Node"* %69, %112
  %114 = icmp eq %"class.v8::internal::compiler::Node"* %71, %111
  %115 = and i1 %114, %113
  br i1 %115, label %86, label %116

116:                                              ; preds = %110, %107
  %117 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, align 8
  %118 = icmp eq %"class.v8::internal::compiler::Node"* %67, %117
  br i1 %118, label %119, label %125

119:                                              ; preds = %116
  %120 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, align 8
  %121 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  %122 = icmp eq %"class.v8::internal::compiler::Node"* %69, %121
  %123 = icmp eq %"class.v8::internal::compiler::Node"* %71, %120
  %124 = and i1 %123, %122
  br i1 %124, label %86, label %125

125:                                              ; preds = %119, %116
  %126 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, align 8
  %127 = icmp eq %"class.v8::internal::compiler::Node"* %67, %126
  br i1 %127, label %128, label %134

128:                                              ; preds = %125
  %129 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %130 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %131 = icmp eq %"class.v8::internal::compiler::Node"* %69, %130
  %132 = icmp eq %"class.v8::internal::compiler::Node"* %71, %129
  %133 = and i1 %132, %131
  br i1 %133, label %86, label %134

134:                                              ; preds = %128, %125
  %135 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %136 = icmp eq %"class.v8::internal::compiler::Node"* %67, %135
  br i1 %136, label %137, label %143

137:                                              ; preds = %134
  %138 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, align 8
  %139 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, align 8
  %140 = icmp eq %"class.v8::internal::compiler::Node"* %69, %139
  %141 = icmp eq %"class.v8::internal::compiler::Node"* %71, %138
  %142 = and i1 %141, %140
  br i1 %142, label %86, label %143

143:                                              ; preds = %137, %134
  %144 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, align 8
  %145 = icmp eq %"class.v8::internal::compiler::Node"* %67, %144
  br i1 %145, label %146, label %152

146:                                              ; preds = %143
  %147 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, align 8
  %148 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, align 8
  %149 = icmp eq %"class.v8::internal::compiler::Node"* %69, %148
  %150 = icmp eq %"class.v8::internal::compiler::Node"* %71, %147
  %151 = and i1 %150, %149
  br i1 %151, label %86, label %152

152:                                              ; preds = %146, %143
  %153 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, align 8
  %154 = icmp eq %"class.v8::internal::compiler::Node"* %67, %153
  br i1 %154, label %155, label %96

155:                                              ; preds = %152
  %156 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  %157 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, align 8
  %158 = icmp eq %"class.v8::internal::compiler::Node"* %69, %157
  %159 = icmp eq %"class.v8::internal::compiler::Node"* %71, %156
  %160 = and i1 %159, %158
  br i1 %160, label %86, label %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler15LoadElimination16AbstractElements5PrintEv(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %4 = icmp eq %"class.v8::internal::compiler::Node"* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %10, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 1
  %14 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %14, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 16777215
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %14, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 0, i32 2
  %23 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %23, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 16777215
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %23, i64 0, i32 0
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %8, i8* %12, i32 %17, i8* %21, i32 %26, i8* %30) #14
  br label %31

31:                                               ; preds = %1, %5
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 0
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, align 8
  %34 = icmp eq %"class.v8::internal::compiler::Node"* %33, null
  br i1 %34, label %61, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 16777215
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 0
  %40 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %40, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 1
  %44 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %44, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 16777215
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %44, i64 0, i32 0
  %49 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %49, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 1, i32 2
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777215
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 0
  %58 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %58, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %38, i8* %42, i32 %47, i8* %51, i32 %56, i8* %60) #14
  br label %61

61:                                               ; preds = %35, %31
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 0
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  %64 = icmp eq %"class.v8::internal::compiler::Node"* %63, null
  br i1 %64, label %91, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %63, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 16777215
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %63, i64 0, i32 0
  %70 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %70, i64 0, i32 1
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 1
  %74 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 16777215
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 0
  %79 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %79, i64 0, i32 1
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 2, i32 2
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %83, i64 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 16777215
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %83, i64 0, i32 0
  %88 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %88, i64 0, i32 1
  %90 = load i8*, i8** %89, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %68, i8* %72, i32 %77, i8* %81, i32 %86, i8* %90) #14
  br label %91

91:                                               ; preds = %65, %61
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 0
  %93 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %92, align 8
  %94 = icmp eq %"class.v8::internal::compiler::Node"* %93, null
  br i1 %94, label %121, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %93, i64 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 16777215
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %93, i64 0, i32 0
  %100 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %100, i64 0, i32 1
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 1
  %104 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %104, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 16777215
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %104, i64 0, i32 0
  %109 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %109, i64 0, i32 1
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 3, i32 2
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %113, i64 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 16777215
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %113, i64 0, i32 0
  %118 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %118, i64 0, i32 1
  %120 = load i8*, i8** %119, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %98, i8* %102, i32 %107, i8* %111, i32 %116, i8* %120) #14
  br label %121

121:                                              ; preds = %95, %91
  %122 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 0
  %123 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, align 8
  %124 = icmp eq %"class.v8::internal::compiler::Node"* %123, null
  br i1 %124, label %151, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %123, i64 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 16777215
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %123, i64 0, i32 0
  %130 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %130, i64 0, i32 1
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 1
  %134 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %134, i64 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 16777215
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %134, i64 0, i32 0
  %139 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %139, i64 0, i32 1
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 4, i32 2
  %143 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %143, i64 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, 16777215
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %143, i64 0, i32 0
  %148 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %148, i64 0, i32 1
  %150 = load i8*, i8** %149, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %128, i8* %132, i32 %137, i8* %141, i32 %146, i8* %150) #14
  br label %151

151:                                              ; preds = %125, %121
  %152 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 0
  %153 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, align 8
  %154 = icmp eq %"class.v8::internal::compiler::Node"* %153, null
  br i1 %154, label %181, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %153, i64 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = and i32 %157, 16777215
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %153, i64 0, i32 0
  %160 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %160, i64 0, i32 1
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 1
  %164 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %164, i64 0, i32 3
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %166, 16777215
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %164, i64 0, i32 0
  %169 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %169, i64 0, i32 1
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 5, i32 2
  %173 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %173, i64 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 16777215
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %173, i64 0, i32 0
  %178 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %178, i64 0, i32 1
  %180 = load i8*, i8** %179, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %158, i8* %162, i32 %167, i8* %171, i32 %176, i8* %180) #14
  br label %181

181:                                              ; preds = %155, %151
  %182 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 0
  %183 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %182, align 8
  %184 = icmp eq %"class.v8::internal::compiler::Node"* %183, null
  br i1 %184, label %211, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %183, i64 0, i32 3
  %187 = load i32, i32* %186, align 4
  %188 = and i32 %187, 16777215
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %183, i64 0, i32 0
  %190 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %190, i64 0, i32 1
  %192 = load i8*, i8** %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 1
  %194 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %194, i64 0, i32 3
  %196 = load i32, i32* %195, align 4
  %197 = and i32 %196, 16777215
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %194, i64 0, i32 0
  %199 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %199, i64 0, i32 1
  %201 = load i8*, i8** %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 6, i32 2
  %203 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %202, align 8
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %203, i64 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = and i32 %205, 16777215
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %203, i64 0, i32 0
  %208 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %207, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %208, i64 0, i32 1
  %210 = load i8*, i8** %209, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %188, i8* %192, i32 %197, i8* %201, i32 %206, i8* %210) #14
  br label %211

211:                                              ; preds = %185, %181
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 0
  %213 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, align 8
  %214 = icmp eq %"class.v8::internal::compiler::Node"* %213, null
  br i1 %214, label %241, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %213, i64 0, i32 3
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, 16777215
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %213, i64 0, i32 0
  %220 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %219, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %220, i64 0, i32 1
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 1
  %224 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %224, i64 0, i32 3
  %226 = load i32, i32* %225, align 4
  %227 = and i32 %226, 16777215
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %224, i64 0, i32 0
  %229 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %228, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %229, i64 0, i32 1
  %231 = load i8*, i8** %230, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %0, i64 0, i32 0, i64 7, i32 2
  %233 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %233, i64 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = and i32 %235, 16777215
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %233, i64 0, i32 0
  %238 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %237, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %238, i64 0, i32 1
  %240 = load i8*, i8** %239, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %218, i8* %222, i32 %227, i8* %231, i32 %236, i8* %240) #14
  br label %241

241:                                              ; preds = %215, %211
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField6LookupEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %70, label %7

7:                                                ; preds = %2, %64
  %8 = phi %"class.std::__1::__tree_end_node"* [ %65, %64 ], [ %4, %2 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 4
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.v8::internal::compiler::Node"**
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 24
  %15 = and i32 %14, 15
  %16 = icmp eq i32 %15, 15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"* %11 to i64
  %18 = add i64 %17, 32
  br i1 %16, label %19, label %26

19:                                               ; preds = %7
  %20 = inttoptr i64 %18 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %21 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %20, align 8
  %22 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %21 to i64
  %23 = add i64 %22, 16
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  br label %26

26:                                               ; preds = %19, %7
  %27 = phi i32 [ %25, %19 ], [ %15, %7 ]
  %28 = phi i64 [ %23, %19 ], [ %18, %7 ]
  %29 = icmp sgt i32 %27, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = inttoptr i64 %28 to %"class.v8::internal::compiler::Node"**
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = icmp eq %"class.v8::internal::compiler::Node"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %26, %30
  %35 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %11)
  br i1 %35, label %67, label %36

36:                                               ; preds = %30, %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_end_node"**
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %41
  br i1 %47, label %64, label %55

48:                                               ; preds = %36, %48
  %49 = phi %"class.std::__1::__tree_node_base"* [ %51, %48 ], [ %38, %36 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %48

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 0
  br label %64

55:                                               ; preds = %40, %55
  %56 = phi %"class.std::__1::__tree_end_node"** [ %59, %55 ], [ %43, %40 ]
  %57 = bitcast %"class.std::__1::__tree_end_node"** %56 to %"class.std::__1::__tree_node_base"**
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 2
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, %58
  br i1 %63, label %64, label %55

64:                                               ; preds = %55, %40, %53
  %65 = phi %"class.std::__1::__tree_end_node"* [ %54, %53 ], [ %44, %40 ], [ %60, %55 ]
  %66 = icmp eq %"class.std::__1::__tree_end_node"* %65, %5
  br i1 %66, label %70, label %7

67:                                               ; preds = %34
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 5
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"struct.v8::internal::compiler::LoadElimination::FieldInfo"*
  br label %70

70:                                               ; preds = %64, %67, %2
  %71 = phi %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* [ %69, %67 ], [ null, %2 ], [ null, %64 ]
  ret %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField9KillConstEPNS1_4NodeEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %5 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %207, label %10

10:                                               ; preds = %3, %204
  %11 = phi %"class.std::__1::__tree_end_node"* [ %205, %204 ], [ %7, %3 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 4
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.v8::internal::compiler::Node"**
  %14 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %14, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = lshr i32 %16, 24
  %18 = and i32 %17, 15
  %19 = icmp eq i32 %18, 15
  %20 = ptrtoint %"class.v8::internal::compiler::Node"* %14 to i64
  %21 = add i64 %20, 32
  br i1 %19, label %22, label %29

22:                                               ; preds = %10
  %23 = inttoptr i64 %21 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %24 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %23, align 8
  %25 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %24 to i64
  %26 = add i64 %25, 16
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %22, %10
  %30 = phi i32 [ %28, %22 ], [ %18, %10 ]
  %31 = phi i64 [ %26, %22 ], [ %21, %10 ]
  %32 = icmp sgt i32 %30, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = inttoptr i64 %31 to %"class.v8::internal::compiler::Node"**
  %35 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::Node"* %35, null
  br i1 %36, label %176, label %37

37:                                               ; preds = %29, %33
  %38 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %14)
  br i1 %38, label %39, label %176

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %43, %41
  %45 = icmp ult i64 %44, 32
  br i1 %45, label %46, label %48, !prof !4

46:                                               ; preds = %39
  %47 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #14
  br label %50

48:                                               ; preds = %39
  %49 = add i64 %41, 32
  store i64 %49, i64* %40, align 8
  br label %50

50:                                               ; preds = %46, %48
  %51 = phi i64 [ %47, %46 ], [ %41, %48 ]
  %52 = inttoptr i64 %51 to %"class.v8::internal::compiler::LoadElimination::AbstractField"*
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %55 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %54 to i64*
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %52, i64 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::__compressed_pair"* %56 to i64*
  store i64 0, i64* %57, align 8
  store i64 %5, i64* %55, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %52, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"** %53, align 8
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %60, %8
  br i1 %61, label %207, label %62

62:                                               ; preds = %50
  %63 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %4 to i8*
  %64 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.std::__1::__tree_node.1320"**
  %65 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %68 = inttoptr i64 %51 to i64*
  br label %69

69:                                               ; preds = %62, %173
  %70 = phi %"class.std::__1::__tree_end_node"* [ %60, %62 ], [ %174, %173 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63)
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 4
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.v8::internal::compiler::Node"**
  %73 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 5
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 8 %75, i64 32, i1 false)
  %76 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %73)
  br i1 %76, label %145, label %77

77:                                               ; preds = %69
  %78 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %64, align 8
  %79 = icmp eq %"class.std::__1::__tree_node.1320"* %78, null
  br i1 %79, label %106, label %80

80:                                               ; preds = %77, %102
  %81 = phi %"class.std::__1::__tree_node.1320"* [ %105, %102 ], [ %78, %77 ]
  %82 = phi %"class.std::__1::__tree_node_base"** [ %104, %102 ], [ %65, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %81, i64 0, i32 1, i32 0, i32 0
  %84 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, align 8
  %85 = icmp ult %"class.v8::internal::compiler::Node"* %73, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %81, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %102

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %81, i64 0, i32 0, i32 0
  br label %106

92:                                               ; preds = %80
  %93 = icmp ult %"class.v8::internal::compiler::Node"* %84, %73
  br i1 %93, label %94, label %100

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %81, i64 0, i32 0, i32 1
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %81, i64 0, i32 0, i32 0
  br label %106

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %81, i64 0, i32 0, i32 0
  br label %106

102:                                              ; preds = %94, %86
  %103 = phi %"class.std::__1::__tree_node_base"* [ %88, %86 ], [ %96, %94 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %87, %86 ], [ %95, %94 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"* %103 to %"class.std::__1::__tree_node.1320"*
  br label %80

106:                                              ; preds = %77, %100, %98, %90
  %107 = phi %"class.std::__1::__tree_end_node"* [ %91, %90 ], [ %99, %98 ], [ %101, %100 ], [ %59, %77 ]
  %108 = phi %"class.std::__1::__tree_node_base"** [ %87, %90 ], [ %95, %98 ], [ %82, %100 ], [ %66, %77 ]
  %109 = bitcast %"class.std::__1::__tree_node_base"** %108 to %"class.std::__1::__tree_node.1320"**
  %110 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node.1320"* %110, null
  br i1 %111, label %112, label %145

112:                                              ; preds = %106
  %113 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %67, align 8, !noalias !5
  %114 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %113, i64 0, i32 2
  %115 = load i64, i64* %114, align 8, !noalias !5
  %116 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %113, i64 0, i32 3
  %117 = load i64, i64* %116, align 8, !noalias !5
  %118 = sub i64 %117, %115
  %119 = icmp ult i64 %118, 72
  br i1 %119, label %120, label %122, !prof !4

120:                                              ; preds = %112
  %121 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %113, i64 72) #14, !noalias !5
  br label %124

122:                                              ; preds = %112
  %123 = add i64 %115, 72
  store i64 %123, i64* %114, align 8, !noalias !5
  br label %124

124:                                              ; preds = %122, %120
  %125 = phi i64 [ %121, %120 ], [ %115, %122 ]
  %126 = inttoptr i64 %125 to %"class.std::__1::__tree_node.1320"*
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %126, i64 0, i32 1, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %73, %"class.v8::internal::compiler::Node"** %127, align 8, !noalias !5
  %128 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %126, i64 0, i32 1, i32 0, i32 1
  %129 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* nonnull align 8 %63, i64 32, i1 false), !noalias !5
  %130 = inttoptr i64 %125 to %"class.std::__1::__tree_node_base"*
  %131 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %130, i64 0, i32 2
  %132 = inttoptr i64 %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %107, %"class.std::__1::__tree_end_node"** %131, align 8
  store %"class.std::__1::__tree_node_base"* %130, %"class.std::__1::__tree_node_base"** %108, align 8
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %124
  %138 = ptrtoint %"class.std::__1::__tree_node_base"* %135 to i64
  store i64 %138, i64* %68, align 8
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  br label %140

140:                                              ; preds = %137, %124
  %141 = phi %"class.std::__1::__tree_node_base"* [ %130, %124 ], [ %139, %137 ]
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"* %141) #14
  %143 = load i64, i64* %58, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %58, align 8
  br label %145

145:                                              ; preds = %140, %106, %69
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63)
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 1, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %157

149:                                              ; preds = %145
  %150 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node_base"*
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 2
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to %"class.std::__1::__tree_end_node"**
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 0, i32 0
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, %150
  br i1 %156, label %173, label %164

157:                                              ; preds = %145, %157
  %158 = phi %"class.std::__1::__tree_node_base"* [ %160, %157 ], [ %147, %145 ]
  %159 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %158, i64 0, i32 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, null
  br i1 %161, label %162, label %157

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %158, i64 0, i32 0
  br label %173

164:                                              ; preds = %149, %164
  %165 = phi %"class.std::__1::__tree_end_node"** [ %168, %164 ], [ %152, %149 ]
  %166 = bitcast %"class.std::__1::__tree_end_node"** %165 to %"class.std::__1::__tree_node_base"**
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %167, i64 0, i32 2
  %169 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %168, align 8
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 0, i32 0
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, %167
  br i1 %172, label %173, label %164

173:                                              ; preds = %164, %149, %162
  %174 = phi %"class.std::__1::__tree_end_node"* [ %163, %162 ], [ %153, %149 ], [ %169, %164 ]
  %175 = icmp eq %"class.std::__1::__tree_end_node"* %174, %8
  br i1 %175, label %207, label %69

176:                                              ; preds = %33, %37
  %177 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  %179 = icmp eq %"class.std::__1::__tree_node_base"* %178, null
  br i1 %179, label %180, label %188

180:                                              ; preds = %176
  %181 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %182 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %183 = bitcast %"class.std::__1::__tree_end_node"* %182 to %"class.std::__1::__tree_end_node"**
  %184 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, %181
  br i1 %187, label %204, label %195

188:                                              ; preds = %176, %188
  %189 = phi %"class.std::__1::__tree_node_base"* [ %191, %188 ], [ %178, %176 ]
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %193, label %188

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  br label %204

195:                                              ; preds = %180, %195
  %196 = phi %"class.std::__1::__tree_end_node"** [ %199, %195 ], [ %183, %180 ]
  %197 = bitcast %"class.std::__1::__tree_end_node"** %196 to %"class.std::__1::__tree_node_base"**
  %198 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %198, i64 0, i32 2
  %200 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 0, i32 0
  %202 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %201, align 8
  %203 = icmp eq %"class.std::__1::__tree_node_base"* %202, %198
  br i1 %203, label %204, label %195

204:                                              ; preds = %195, %180, %193
  %205 = phi %"class.std::__1::__tree_end_node"* [ %194, %193 ], [ %184, %180 ], [ %200, %195 ]
  %206 = icmp eq %"class.std::__1::__tree_end_node"* %205, %8
  br i1 %206, label %207, label %10

207:                                              ; preds = %204, %173, %3, %50
  %208 = phi %"class.v8::internal::compiler::LoadElimination::AbstractField"* [ %52, %50 ], [ %0, %3 ], [ %52, %173 ], [ %0, %204 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractField"* %208
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nocapture readonly dereferenceable(24), i64* readnone, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = alloca { %"class.v8::internal::compiler::Node"*, i8 }, align 8
  %6 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %334, label %11

11:                                               ; preds = %4, %331
  %12 = phi %"class.std::__1::__tree_end_node"* [ %332, %331 ], [ %8, %4 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 4
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.v8::internal::compiler::Node"**
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = lshr i32 %17, 24
  %19 = and i32 %18, 15
  %20 = icmp eq i32 %19, 15
  %21 = ptrtoint %"class.v8::internal::compiler::Node"* %15 to i64
  %22 = add i64 %21, 32
  br i1 %20, label %23, label %30

23:                                               ; preds = %11
  %24 = inttoptr i64 %22 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %25 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %24, align 8
  %26 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %25 to i64
  %27 = add i64 %26, 16
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  br label %30

30:                                               ; preds = %23, %11
  %31 = phi i32 [ %29, %23 ], [ %19, %11 ]
  %32 = phi i64 [ %27, %23 ], [ %22, %11 ]
  %33 = icmp sgt i32 %31, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = inttoptr i64 %32 to %"class.v8::internal::compiler::Node"**
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  %37 = icmp eq %"class.v8::internal::compiler::Node"* %36, null
  br i1 %37, label %303, label %38

38:                                               ; preds = %30, %34
  %39 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination14AliasStateInfo8MayAliasEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %1, %"class.v8::internal::compiler::Node"* %15)
  br i1 %39, label %40, label %303

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %44, %42
  %46 = icmp ult i64 %45, 32
  br i1 %46, label %47, label %49, !prof !4

47:                                               ; preds = %40
  %48 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 32) #14
  br label %51

49:                                               ; preds = %40
  %50 = add i64 %42, 32
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %47, %49
  %52 = phi i64 [ %48, %47 ], [ %42, %49 ]
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::LoadElimination::AbstractField"*
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %53, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %56 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %55 to i64*
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %53, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::__compressed_pair"* %57 to i64*
  store i64 0, i64* %58, align 8
  store i64 %6, i64* %56, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %53, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %53, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** %54, align 8
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %9
  br i1 %62, label %334, label %63

63:                                               ; preds = %51
  %64 = bitcast { %"class.v8::internal::compiler::Node"*, i8 }* %5 to i8*
  %65 = icmp eq i64* %2, null
  %66 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node.1320"**
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %53, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %53, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %70 = inttoptr i64 %52 to i64*
  br i1 %65, label %71, label %183

71:                                               ; preds = %63, %180
  %72 = phi %"class.std::__1::__tree_end_node"* [ %181, %180 ], [ %61, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64)
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 4
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.v8::internal::compiler::Node"**
  %75 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 5
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %77, i64 16, i1 false)
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 7
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8
  %81 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination14AliasStateInfo8MayAliasEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %1, %"class.v8::internal::compiler::Node"* %75)
  br i1 %81, label %152, label %82

82:                                               ; preds = %71
  %83 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %66, align 8
  %84 = icmp eq %"class.std::__1::__tree_node.1320"* %83, null
  br i1 %84, label %111, label %85

85:                                               ; preds = %82, %105
  %86 = phi %"class.std::__1::__tree_node.1320"* [ %108, %105 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::__tree_node_base"** [ %107, %105 ], [ %67, %82 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %86, i64 0, i32 1, i32 0, i32 0
  %89 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %88, align 8
  %90 = icmp ult %"class.v8::internal::compiler::Node"* %75, %89
  br i1 %90, label %101, label %91

91:                                               ; preds = %85
  %92 = icmp ult %"class.v8::internal::compiler::Node"* %89, %75
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %86, i64 0, i32 0, i32 0
  br label %111

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %86, i64 0, i32 0, i32 1
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %86, i64 0, i32 0, i32 0
  br label %111

101:                                              ; preds = %85
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %86, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %101, %95
  %106 = phi %"class.std::__1::__tree_node_base"* [ %103, %101 ], [ %97, %95 ]
  %107 = phi %"class.std::__1::__tree_node_base"** [ %102, %101 ], [ %96, %95 ]
  %108 = bitcast %"class.std::__1::__tree_node_base"* %106 to %"class.std::__1::__tree_node.1320"*
  br label %85

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %86, i64 0, i32 0, i32 0
  br label %111

111:                                              ; preds = %82, %109, %99, %93
  %112 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %99 ], [ %94, %93 ], [ %60, %82 ]
  %113 = phi %"class.std::__1::__tree_node_base"** [ %102, %109 ], [ %96, %99 ], [ %87, %93 ], [ %68, %82 ]
  %114 = bitcast %"class.std::__1::__tree_node_base"** %113 to %"class.std::__1::__tree_node.1320"**
  %115 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node.1320"* %115, null
  br i1 %116, label %117, label %152

117:                                              ; preds = %111
  %118 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %69, align 8, !noalias !8
  %119 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %118, i64 0, i32 2
  %120 = load i64, i64* %119, align 8, !noalias !8
  %121 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %118, i64 0, i32 3
  %122 = load i64, i64* %121, align 8, !noalias !8
  %123 = sub i64 %122, %120
  %124 = icmp ult i64 %123, 72
  br i1 %124, label %127, label %125, !prof !4

125:                                              ; preds = %117
  %126 = add i64 %120, 72
  store i64 %126, i64* %119, align 8, !noalias !8
  br label %129

127:                                              ; preds = %117
  %128 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %118, i64 72) #14, !noalias !8
  br label %129

129:                                              ; preds = %127, %125
  %130 = phi i64 [ %128, %127 ], [ %120, %125 ]
  %131 = inttoptr i64 %130 to %"class.std::__1::__tree_node.1320"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %131, i64 0, i32 1, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %75, %"class.v8::internal::compiler::Node"** %132, align 8, !noalias !8
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %131, i64 0, i32 1, i32 0, i32 1
  %134 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 8 %64, i64 16, i1 false), !noalias !8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %131, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0
  %136 = bitcast i64** %135 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %136, align 8, !noalias !8
  %137 = inttoptr i64 %130 to %"class.std::__1::__tree_node_base"*
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %137, i64 0, i32 2
  %139 = inttoptr i64 %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %112, %"class.std::__1::__tree_end_node"** %138, align 8
  store %"class.std::__1::__tree_node_base"* %137, %"class.std::__1::__tree_node_base"** %113, align 8
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %129
  %145 = ptrtoint %"class.std::__1::__tree_node_base"* %142 to i64
  store i64 %145, i64* %70, align 8
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  br label %147

147:                                              ; preds = %144, %129
  %148 = phi %"class.std::__1::__tree_node_base"* [ %137, %129 ], [ %146, %144 ]
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %149, %"class.std::__1::__tree_node_base"* %148) #14
  %150 = load i64, i64* %59, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %59, align 8
  br label %152

152:                                              ; preds = %71, %147, %111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64)
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 1, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, null
  br i1 %155, label %163, label %156

156:                                              ; preds = %152, %156
  %157 = phi %"class.std::__1::__tree_node_base"* [ %159, %156 ], [ %154, %152 ]
  %158 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  %160 = icmp eq %"class.std::__1::__tree_node_base"* %159, null
  br i1 %160, label %161, label %156

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %157, i64 0, i32 0
  br label %180

163:                                              ; preds = %152
  %164 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node_base"*
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 2
  %166 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_end_node"**
  %167 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, %164
  br i1 %170, label %180, label %171

171:                                              ; preds = %163, %171
  %172 = phi %"class.std::__1::__tree_end_node"** [ %175, %171 ], [ %166, %163 ]
  %173 = bitcast %"class.std::__1::__tree_end_node"** %172 to %"class.std::__1::__tree_node_base"**
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %174, i64 0, i32 2
  %176 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %175, align 8
  %177 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %176, i64 0, i32 0
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  %179 = icmp eq %"class.std::__1::__tree_node_base"* %178, %174
  br i1 %179, label %180, label %171

180:                                              ; preds = %171, %163, %161
  %181 = phi %"class.std::__1::__tree_end_node"* [ %162, %161 ], [ %167, %163 ], [ %176, %171 ]
  %182 = icmp eq %"class.std::__1::__tree_end_node"* %181, %9
  br i1 %182, label %334, label %71

183:                                              ; preds = %63, %300
  %184 = phi %"class.std::__1::__tree_end_node"* [ %301, %300 ], [ %61, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64)
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 4
  %186 = bitcast %"class.std::__1::__tree_end_node"* %185 to %"class.v8::internal::compiler::Node"**
  %187 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 5
  %189 = bitcast %"class.std::__1::__tree_end_node"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %189, i64 16, i1 false)
  %190 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 7
  %191 = bitcast %"class.std::__1::__tree_end_node"* %190 to i64**
  %192 = load i64*, i64** %191, align 8
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 8
  %194 = bitcast %"class.std::__1::__tree_end_node"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination14AliasStateInfo8MayAliasEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %1, %"class.v8::internal::compiler::Node"* %187)
  br i1 %196, label %197, label %201

197:                                              ; preds = %183
  %198 = icmp eq i64* %192, null
  %199 = icmp eq i64* %192, %2
  %200 = or i1 %199, %198
  br i1 %200, label %272, label %201

201:                                              ; preds = %197, %183
  %202 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %66, align 8
  %203 = icmp eq %"class.std::__1::__tree_node.1320"* %202, null
  br i1 %203, label %230, label %204

204:                                              ; preds = %201, %226
  %205 = phi %"class.std::__1::__tree_node.1320"* [ %229, %226 ], [ %202, %201 ]
  %206 = phi %"class.std::__1::__tree_node_base"** [ %228, %226 ], [ %67, %201 ]
  %207 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %205, i64 0, i32 1, i32 0, i32 0
  %208 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, align 8
  %209 = icmp ult %"class.v8::internal::compiler::Node"* %187, %208
  br i1 %209, label %210, label %216

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %205, i64 0, i32 0, i32 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, null
  br i1 %213, label %214, label %226

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %205, i64 0, i32 0, i32 0
  br label %230

216:                                              ; preds = %204
  %217 = icmp ult %"class.v8::internal::compiler::Node"* %208, %187
  br i1 %217, label %218, label %224

218:                                              ; preds = %216
  %219 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %205, i64 0, i32 0, i32 1
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %219, align 8
  %221 = icmp eq %"class.std::__1::__tree_node_base"* %220, null
  br i1 %221, label %222, label %226

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %205, i64 0, i32 0, i32 0
  br label %230

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %205, i64 0, i32 0, i32 0
  br label %230

226:                                              ; preds = %218, %210
  %227 = phi %"class.std::__1::__tree_node_base"* [ %212, %210 ], [ %220, %218 ]
  %228 = phi %"class.std::__1::__tree_node_base"** [ %211, %210 ], [ %219, %218 ]
  %229 = bitcast %"class.std::__1::__tree_node_base"* %227 to %"class.std::__1::__tree_node.1320"*
  br label %204

230:                                              ; preds = %201, %224, %222, %214
  %231 = phi %"class.std::__1::__tree_end_node"* [ %215, %214 ], [ %223, %222 ], [ %225, %224 ], [ %60, %201 ]
  %232 = phi %"class.std::__1::__tree_node_base"** [ %211, %214 ], [ %219, %222 ], [ %206, %224 ], [ %68, %201 ]
  %233 = bitcast %"class.std::__1::__tree_node_base"** %232 to %"class.std::__1::__tree_node.1320"**
  %234 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %233, align 8
  %235 = icmp eq %"class.std::__1::__tree_node.1320"* %234, null
  br i1 %235, label %236, label %272

236:                                              ; preds = %230
  %237 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %69, align 8, !noalias !8
  %238 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %237, i64 0, i32 2
  %239 = load i64, i64* %238, align 8, !noalias !8
  %240 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %237, i64 0, i32 3
  %241 = load i64, i64* %240, align 8, !noalias !8
  %242 = sub i64 %241, %239
  %243 = icmp ult i64 %242, 72
  br i1 %243, label %244, label %246, !prof !4

244:                                              ; preds = %236
  %245 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %237, i64 72) #14, !noalias !8
  br label %248

246:                                              ; preds = %236
  %247 = add i64 %239, 72
  store i64 %247, i64* %238, align 8, !noalias !8
  br label %248

248:                                              ; preds = %246, %244
  %249 = phi i64 [ %245, %244 ], [ %239, %246 ]
  %250 = inttoptr i64 %249 to %"class.std::__1::__tree_node.1320"*
  %251 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %250, i64 0, i32 1, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %187, %"class.v8::internal::compiler::Node"** %251, align 8, !noalias !8
  %252 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %250, i64 0, i32 1, i32 0, i32 1
  %253 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* nonnull align 8 %64, i64 16, i1 false), !noalias !8
  %254 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %250, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0
  store i64* %192, i64** %254, align 8, !noalias !8
  %255 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %250, i64 0, i32 1, i32 0, i32 1, i32 3, i32 0, i32 0
  %256 = bitcast i64** %255 to i64*
  store i64 %195, i64* %256, align 8, !noalias !8
  %257 = inttoptr i64 %249 to %"class.std::__1::__tree_node_base"*
  %258 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %257, i64 0, i32 2
  %259 = inttoptr i64 %249 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %231, %"class.std::__1::__tree_end_node"** %258, align 8
  store %"class.std::__1::__tree_node_base"* %257, %"class.std::__1::__tree_node_base"** %232, align 8
  %260 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %261 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 0, i32 0
  %262 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %261, align 8
  %263 = icmp eq %"class.std::__1::__tree_node_base"* %262, null
  br i1 %263, label %267, label %264

264:                                              ; preds = %248
  %265 = ptrtoint %"class.std::__1::__tree_node_base"* %262 to i64
  store i64 %265, i64* %70, align 8
  %266 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  br label %267

267:                                              ; preds = %264, %248
  %268 = phi %"class.std::__1::__tree_node_base"* [ %257, %248 ], [ %266, %264 ]
  %269 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %269, %"class.std::__1::__tree_node_base"* %268) #14
  %270 = load i64, i64* %59, align 8
  %271 = add i64 %270, 1
  store i64 %271, i64* %59, align 8
  br label %272

272:                                              ; preds = %267, %230, %197
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64)
  %273 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 1, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, null
  br i1 %275, label %276, label %284

276:                                              ; preds = %272
  %277 = bitcast %"class.std::__1::__tree_end_node"* %184 to %"class.std::__1::__tree_node_base"*
  %278 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 2
  %279 = bitcast %"class.std::__1::__tree_end_node"* %278 to %"class.std::__1::__tree_end_node"**
  %280 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %279, align 8
  %281 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %280, i64 0, i32 0
  %282 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %281, align 8
  %283 = icmp eq %"class.std::__1::__tree_node_base"* %282, %277
  br i1 %283, label %300, label %291

284:                                              ; preds = %272, %284
  %285 = phi %"class.std::__1::__tree_node_base"* [ %287, %284 ], [ %274, %272 ]
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %285, i64 0, i32 0, i32 0
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %289, label %284

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %285, i64 0, i32 0
  br label %300

291:                                              ; preds = %276, %291
  %292 = phi %"class.std::__1::__tree_end_node"** [ %295, %291 ], [ %279, %276 ]
  %293 = bitcast %"class.std::__1::__tree_end_node"** %292 to %"class.std::__1::__tree_node_base"**
  %294 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %293, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %294, i64 0, i32 2
  %296 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %295, align 8
  %297 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %296, i64 0, i32 0
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %297, align 8
  %299 = icmp eq %"class.std::__1::__tree_node_base"* %298, %294
  br i1 %299, label %300, label %291

300:                                              ; preds = %291, %276, %289
  %301 = phi %"class.std::__1::__tree_end_node"* [ %290, %289 ], [ %280, %276 ], [ %296, %291 ]
  %302 = icmp eq %"class.std::__1::__tree_end_node"* %301, %9
  br i1 %302, label %334, label %183

303:                                              ; preds = %34, %38
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 1, i32 0
  %305 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %304, align 8
  %306 = icmp eq %"class.std::__1::__tree_node_base"* %305, null
  br i1 %306, label %307, label %315

307:                                              ; preds = %303
  %308 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node_base"*
  %309 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 2
  %310 = bitcast %"class.std::__1::__tree_end_node"* %309 to %"class.std::__1::__tree_end_node"**
  %311 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %310, align 8
  %312 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 0, i32 0
  %313 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node_base"* %313, %308
  br i1 %314, label %331, label %322

315:                                              ; preds = %303, %315
  %316 = phi %"class.std::__1::__tree_node_base"* [ %318, %315 ], [ %305, %303 ]
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %316, i64 0, i32 0, i32 0
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %317, align 8
  %319 = icmp eq %"class.std::__1::__tree_node_base"* %318, null
  br i1 %319, label %320, label %315

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %316, i64 0, i32 0
  br label %331

322:                                              ; preds = %307, %322
  %323 = phi %"class.std::__1::__tree_end_node"** [ %326, %322 ], [ %310, %307 ]
  %324 = bitcast %"class.std::__1::__tree_end_node"** %323 to %"class.std::__1::__tree_node_base"**
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %325, i64 0, i32 2
  %327 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %328 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %327, i64 0, i32 0
  %329 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node_base"* %329, %325
  br i1 %330, label %331, label %322

331:                                              ; preds = %322, %307, %320
  %332 = phi %"class.std::__1::__tree_end_node"* [ %321, %320 ], [ %311, %307 ], [ %327, %322 ]
  %333 = icmp eq %"class.std::__1::__tree_end_node"* %332, %9
  br i1 %333, label %334, label %11

334:                                              ; preds = %331, %300, %180, %4, %51
  %335 = phi %"class.v8::internal::compiler::LoadElimination::AbstractField"* [ %53, %51 ], [ %0, %4 ], [ %53, %180 ], [ %53, %300 ], [ %0, %331 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractField"* %335
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler15LoadElimination14AliasStateInfo8MayAliasEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 2
  %8 = load i16, i16* %7, align 8
  %9 = icmp eq i16 %8, 197
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = icmp eq %"class.v8::internal::compiler::Node"* %4, %1
  br label %118

12:                                               ; preds = %2
  %13 = tail call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_18MayAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Node"* %1)
  br i1 %13, label %14, label %118

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %0, i64 0, i32 2, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %16, null
  br i1 %17, label %118, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %0, i64 0, i32 0
  %20 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %20, i64 0, i32 3
  %22 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %21, align 8
  %23 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %22, null
  br i1 %23, label %117, label %24

24:                                               ; preds = %18, %60
  %25 = phi %"class.v8::internal::compiler::Node"* [ %63, %60 ], [ %1, %18 ]
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 0
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 2
  %29 = load i16, i16* %28, align 8
  switch i16 %29, label %64 [
    i16 207, label %30
    i16 40, label %30
    i16 59, label %30
  ]

30:                                               ; preds = %24, %24, %24
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %25, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = lshr i32 %32, 24
  %34 = and i32 %33, 15
  %35 = icmp eq i32 %34, 15
  %36 = ptrtoint %"class.v8::internal::compiler::Node"* %25 to i64
  %37 = add i64 %36, 32
  br i1 %35, label %38, label %45

38:                                               ; preds = %30
  %39 = inttoptr i64 %37 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %40 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %39, align 8
  %41 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %40 to i64
  %42 = add i64 %41, 16
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %40, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  br label %45

45:                                               ; preds = %38, %30
  %46 = phi i32 [ %44, %38 ], [ %34, %30 ]
  %47 = phi i64 [ %42, %38 ], [ %37, %30 ]
  %48 = icmp sgt i32 %46, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = inttoptr i64 %47 to %"class.v8::internal::compiler::Node"**
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::Node"* %51, null
  br i1 %52, label %64, label %53

53:                                               ; preds = %49, %45
  %54 = and i32 %32, 251658240
  %55 = icmp eq i32 %54, 251658240
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = inttoptr i64 %37 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 16
  br label %60

60:                                               ; preds = %56, %53
  %61 = phi i64 [ %59, %56 ], [ %37, %53 ]
  %62 = inttoptr i64 %61 to %"class.v8::internal::compiler::Node"**
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  br label %24

64:                                               ; preds = %49, %24
  %65 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.std::__1::__tree_node"**
  %67 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node"* %67, null
  br i1 %68, label %117, label %69

69:                                               ; preds = %64, %69
  %70 = phi %"class.std::__1::__tree_end_node"* [ %80, %69 ], [ %65, %64 ]
  %71 = phi %"class.std::__1::__tree_node"* [ %81, %69 ], [ %67, %64 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, align 8
  %74 = icmp ult %"class.v8::internal::compiler::Node"* %73, %25
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 0, i32 1
  %76 = bitcast %"class.std::__1::__tree_node_base"** %75 to %"class.std::__1::__tree_node"**
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::__tree_node"* %71 to %"class.std::__1::__tree_node"**
  %79 = select i1 %74, %"class.std::__1::__tree_node"** %76, %"class.std::__1::__tree_node"** %78
  %80 = select i1 %74, %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"* %77
  %81 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %79, align 8
  %82 = icmp eq %"class.std::__1::__tree_node"* %81, null
  br i1 %82, label %83, label %69

83:                                               ; preds = %69
  %84 = icmp eq %"class.std::__1::__tree_end_node"* %80, %65
  br i1 %84, label %117, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 4
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to %"class.v8::internal::compiler::Node"**
  %88 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %87, align 8
  %89 = icmp ult %"class.v8::internal::compiler::Node"* %25, %88
  br i1 %89, label %117, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 5
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 3
  switch i64 %94, label %95 [
    i64 1, label %117
    i64 0, label %105
  ]

95:                                               ; preds = %90
  %96 = add i64 %93, -2
  %97 = inttoptr i64 %96 to %"class.v8::internal::ZoneVector.1336"*
  %98 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %97, i64 0, i32 0, i32 0, i32 1
  %99 = bitcast i64*** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = inttoptr i64 %96 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = icmp eq i64 %103, 8
  br i1 %104, label %107, label %117

105:                                              ; preds = %90
  %106 = inttoptr i64 %93 to i64*
  br label %114

107:                                              ; preds = %95
  %108 = icmp eq i64 %100, %102
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = inttoptr i64 %96 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %110) #15
  unreachable

111:                                              ; preds = %107
  %112 = inttoptr i64 %102 to i64**
  %113 = load i64*, i64** %112, align 8
  br label %114

114:                                              ; preds = %105, %111
  %115 = phi i64* [ %106, %105 ], [ %113, %111 ]
  %116 = icmp eq i64* %16, %115
  br i1 %116, label %117, label %118

117:                                              ; preds = %90, %85, %83, %64, %18, %95, %114
  br label %118

118:                                              ; preds = %117, %14, %114, %12, %10
  %119 = phi i1 [ %11, %10 ], [ false, %12 ], [ true, %117 ], [ true, %14 ], [ false, %114 ]
  ret i1 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler15LoadElimination13AbstractField5PrintEv(%"class.v8::internal::compiler::LoadElimination::AbstractField"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %60, %1
  ret void

7:                                                ; preds = %1, %60
  %8 = phi %"class.std::__1::__tree_end_node"* [ %61, %60 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 4
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.v8::internal::compiler::Node"**
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 5
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.v8::internal::compiler::Node"**
  %14 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 6
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i8*
  %17 = load i8, i8* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %11, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %11, i64 0, i32 0
  %22 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %22, i64 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %14, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 16777215
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %14, i64 0, i32 0
  %29 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %29, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = tail call i8* @_ZN2v88internal19MachineReprToStringENS0_21MachineRepresentationE(i8 zeroext %17) #14
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0), i32 %20, i8* %24, i32 %27, i8* %31, i8* %32) #14
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %7
  %37 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_end_node"**
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %37
  br i1 %43, label %60, label %51

44:                                               ; preds = %7, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %34, %7 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %36, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %36 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %36, %49
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %36 ], [ %56, %51 ]
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %4
  br i1 %62, label %6, label %7
}

declare i8* @_ZN2v88internal19MachineReprToStringENS0_21MachineRepresentationE(i8 zeroext) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::Zone"*) unnamed_addr #5 align 2 {
  %3 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %6 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %5 to i64*
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__compressed_pair.26"* %7 to i64*
  store i64 0, i64* %8, align 8
  store i64 %3, i64* %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::Node"*, i64, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %8 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %7 to i64*
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::__compressed_pair.26"* %9 to i64*
  store i64 0, i64* %10, align 8
  store i64 %5, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %6, align 8
  br label %13

13:                                               ; preds = %49, %4
  %14 = phi %"class.v8::internal::compiler::Node"* [ %1, %4 ], [ %52, %49 ]
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %14, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %16, i64 0, i32 2
  %18 = load i16, i16* %17, align 8
  switch i16 %18, label %53 [
    i16 207, label %19
    i16 40, label %19
    i16 59, label %19
  ]

19:                                               ; preds = %13, %13, %13
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %14, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 24
  %23 = and i32 %22, 15
  %24 = icmp eq i32 %23, 15
  %25 = ptrtoint %"class.v8::internal::compiler::Node"* %14 to i64
  %26 = add i64 %25, 32
  br i1 %24, label %27, label %34

27:                                               ; preds = %19
  %28 = inttoptr i64 %26 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %29 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %28, align 8
  %30 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %29 to i64
  %31 = add i64 %30, 16
  %32 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  br label %34

34:                                               ; preds = %27, %19
  %35 = phi i32 [ %33, %27 ], [ %23, %19 ]
  %36 = phi i64 [ %31, %27 ], [ %26, %19 ]
  %37 = icmp sgt i32 %35, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = inttoptr i64 %36 to %"class.v8::internal::compiler::Node"**
  %40 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, align 8
  %41 = icmp eq %"class.v8::internal::compiler::Node"* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %38, %34
  %43 = and i32 %21, 251658240
  %44 = icmp eq i32 %43, 251658240
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = inttoptr i64 %26 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 16
  br label %49

49:                                               ; preds = %45, %42
  %50 = phi i64 [ %48, %45 ], [ %26, %42 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::Node"**
  %52 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  br label %13

53:                                               ; preds = %38, %13
  %54 = ptrtoint %"class.v8::internal::compiler::Node"* %14 to i64
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %57 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node"* %57, null
  br i1 %58, label %59, label %91

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %61 = load i64, i64* %60, align 8, !noalias !11
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %63 = load i64, i64* %62, align 8, !noalias !11
  %64 = sub i64 %63, %61
  %65 = icmp ult i64 %64, 48
  br i1 %65, label %66, label %68, !prof !4

66:                                               ; preds = %59
  %67 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 48) #14, !noalias !11
  br label %70

68:                                               ; preds = %59
  %69 = add i64 %61, 48
  store i64 %69, i64* %60, align 8, !noalias !11
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi i64 [ %67, %66 ], [ %61, %68 ]
  %72 = inttoptr i64 %71 to %"class.std::__1::__tree_node"*
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 1, i32 0
  %74 = bitcast %"struct.std::__1::pair.1271"* %73 to i64*
  store i64 %54, i64* %74, align 8, !noalias !11
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %72, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %2, i64* %75, align 8, !noalias !11
  %76 = inttoptr i64 %71 to %"class.std::__1::__tree_node_base"*
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  %78 = inttoptr i64 %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %77, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %55, align 8
  %79 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %70
  %84 = ptrtoint %"class.std::__1::__tree_node_base"* %81 to i64
  %85 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0 to i64*
  store i64 %84, i64* %85, align 8
  br label %86

86:                                               ; preds = %83, %70
  %87 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %88, %"class.std::__1::__tree_node_base"* %76) #14
  %89 = load i64, i64* %11, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %11, align 8
  br label %91

91:                                               ; preds = %53, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6LookupEPNS1_4NodeEPNS0_13ZoneHandleSetINS0_3MapEEE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneHandleSet"* nocapture) local_unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %40, %3
  %5 = phi %"class.v8::internal::compiler::Node"* [ %1, %3 ], [ %43, %40 ]
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 2
  %9 = load i16, i16* %8, align 8
  switch i16 %9, label %44 [
    i16 207, label %10
    i16 40, label %10
    i16 59, label %10
  ]

10:                                               ; preds = %4, %4, %4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = lshr i32 %12, 24
  %14 = and i32 %13, 15
  %15 = icmp eq i32 %14, 15
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %5 to i64
  %17 = add i64 %16, 32
  br i1 %15, label %18, label %25

18:                                               ; preds = %10
  %19 = inttoptr i64 %17 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %20 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %19, align 8
  %21 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %20 to i64
  %22 = add i64 %21, 16
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  br label %25

25:                                               ; preds = %18, %10
  %26 = phi i32 [ %24, %18 ], [ %14, %10 ]
  %27 = phi i64 [ %22, %18 ], [ %17, %10 ]
  %28 = icmp sgt i32 %26, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = inttoptr i64 %27 to %"class.v8::internal::compiler::Node"**
  %31 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %30, align 8
  %32 = icmp eq %"class.v8::internal::compiler::Node"* %31, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %29, %25
  %34 = and i32 %12, 251658240
  %35 = icmp eq i32 %34, 251658240
  br i1 %35, label %36, label %40

36:                                               ; preds = %33
  %37 = inttoptr i64 %17 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 16
  br label %40

40:                                               ; preds = %36, %33
  %41 = phi i64 [ %39, %36 ], [ %17, %33 ]
  %42 = inttoptr i64 %41 to %"class.v8::internal::compiler::Node"**
  %43 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, align 8
  br label %4

44:                                               ; preds = %4, %29
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node"**
  %47 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node"* %47, null
  br i1 %48, label %75, label %49

49:                                               ; preds = %44, %49
  %50 = phi %"class.std::__1::__tree_end_node"* [ %60, %49 ], [ %45, %44 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %61, %49 ], [ %47, %44 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = icmp ult %"class.v8::internal::compiler::Node"* %53, %5
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__tree_node_base"** %55 to %"class.std::__1::__tree_node"**
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_node"* %51 to %"class.std::__1::__tree_node"**
  %59 = select i1 %54, %"class.std::__1::__tree_node"** %56, %"class.std::__1::__tree_node"** %58
  %60 = select i1 %54, %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"* %57
  %61 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %59, align 8
  %62 = icmp eq %"class.std::__1::__tree_node"* %61, null
  br i1 %62, label %63, label %49

63:                                               ; preds = %49
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %60, %45
  br i1 %64, label %75, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 4
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.v8::internal::compiler::Node"**
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %69 = icmp ult %"class.v8::internal::compiler::Node"* %5, %68
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 5
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to i64*
  %73 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %2, i64 0, i32 0
  %74 = load i64, i64* %72, align 8
  store i64 %74, i64* %73, align 8
  br label %75

75:                                               ; preds = %65, %63, %44, %70
  %76 = phi i1 [ true, %70 ], [ false, %44 ], [ false, %63 ], [ false, %65 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nocapture readonly dereferenceable(24), %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %182, label %9

9:                                                ; preds = %3, %179
  %10 = phi %"class.std::__1::__tree_end_node"* [ %180, %179 ], [ %6, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 4
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.v8::internal::compiler::Node"**
  %13 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination14AliasStateInfo8MayAliasEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %1, %"class.v8::internal::compiler::Node"* %13)
  br i1 %14, label %15, label %151

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 32
  br i1 %21, label %22, label %24, !prof !4

22:                                               ; preds = %15
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #14
  br label %26

24:                                               ; preds = %15
  %25 = add i64 %17, 32
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %31 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %30 to i64*
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %28, i64 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::__compressed_pair.26"* %32 to i64*
  store i64 0, i64* %33, align 8
  store i64 %4, i64* %31, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %28, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %35, %"class.std::__1::__tree_end_node"** %29, align 8
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %37 = icmp eq %"class.std::__1::__tree_end_node"* %36, %7
  br i1 %37, label %182, label %38

38:                                               ; preds = %26
  %39 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node"**
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %43 = inttoptr i64 %27 to i64*
  br label %44

44:                                               ; preds = %38, %148
  %45 = phi %"class.std::__1::__tree_end_node"* [ %36, %38 ], [ %149, %148 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 4
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.v8::internal::compiler::Node"**
  %48 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 5
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination14AliasStateInfo8MayAliasEPNS1_4NodeE(%"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %1, %"class.v8::internal::compiler::Node"* %48)
  br i1 %52, label %120, label %53

53:                                               ; preds = %44
  %54 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %39, align 8
  %55 = icmp eq %"class.std::__1::__tree_node"* %54, null
  br i1 %55, label %82, label %56

56:                                               ; preds = %53, %78
  %57 = phi %"class.std::__1::__tree_node"* [ %81, %78 ], [ %54, %53 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %80, %78 ], [ %40, %53 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 1, i32 0, i32 0
  %60 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  %61 = icmp ult %"class.v8::internal::compiler::Node"* %48, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %78

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

68:                                               ; preds = %56
  %69 = icmp ult %"class.v8::internal::compiler::Node"* %60, %48
  br i1 %69, label %70, label %76

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 1
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %57, i64 0, i32 0, i32 0
  br label %82

78:                                               ; preds = %70, %62
  %79 = phi %"class.std::__1::__tree_node_base"* [ %64, %62 ], [ %72, %70 ]
  %80 = phi %"class.std::__1::__tree_node_base"** [ %63, %62 ], [ %71, %70 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"* %79 to %"class.std::__1::__tree_node"*
  br label %56

82:                                               ; preds = %53, %76, %74, %66
  %83 = phi %"class.std::__1::__tree_end_node"* [ %67, %66 ], [ %75, %74 ], [ %77, %76 ], [ %35, %53 ]
  %84 = phi %"class.std::__1::__tree_node_base"** [ %63, %66 ], [ %71, %74 ], [ %58, %76 ], [ %41, %53 ]
  %85 = bitcast %"class.std::__1::__tree_node_base"** %84 to %"class.std::__1::__tree_node"**
  %86 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node"* %86, null
  br i1 %87, label %88, label %120

88:                                               ; preds = %82
  %89 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %42, align 8, !noalias !14
  %90 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 2
  %91 = load i64, i64* %90, align 8, !noalias !14
  %92 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 3
  %93 = load i64, i64* %92, align 8, !noalias !14
  %94 = sub i64 %93, %91
  %95 = icmp ult i64 %94, 48
  br i1 %95, label %96, label %98, !prof !4

96:                                               ; preds = %88
  %97 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %89, i64 48) #14, !noalias !14
  br label %100

98:                                               ; preds = %88
  %99 = add i64 %91, 48
  store i64 %99, i64* %90, align 8, !noalias !14
  br label %100

100:                                              ; preds = %98, %96
  %101 = phi i64 [ %97, %96 ], [ %91, %98 ]
  %102 = inttoptr i64 %101 to %"class.std::__1::__tree_node"*
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %102, i64 0, i32 1, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %48, %"class.v8::internal::compiler::Node"** %103, align 8, !noalias !14
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %102, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %51, i64* %104, align 8, !noalias !14
  %105 = inttoptr i64 %101 to %"class.std::__1::__tree_node_base"*
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 2
  %107 = inttoptr i64 %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %106, align 8
  store %"class.std::__1::__tree_node_base"* %105, %"class.std::__1::__tree_node_base"** %84, align 8
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %100
  %113 = ptrtoint %"class.std::__1::__tree_node_base"* %110 to i64
  store i64 %113, i64* %43, align 8
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  br label %115

115:                                              ; preds = %112, %100
  %116 = phi %"class.std::__1::__tree_node_base"* [ %105, %100 ], [ %114, %112 ]
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"* %116) #14
  %118 = load i64, i64* %34, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %34, align 8
  br label %120

120:                                              ; preds = %115, %82, %44
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 1, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node_base"*
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 2
  %127 = bitcast %"class.std::__1::__tree_end_node"* %126 to %"class.std::__1::__tree_end_node"**
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %125
  br i1 %131, label %148, label %139

132:                                              ; preds = %120, %132
  %133 = phi %"class.std::__1::__tree_node_base"* [ %135, %132 ], [ %122, %120 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %137, label %132

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0
  br label %148

139:                                              ; preds = %124, %139
  %140 = phi %"class.std::__1::__tree_end_node"** [ %143, %139 ], [ %127, %124 ]
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to %"class.std::__1::__tree_node_base"**
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %142
  br i1 %147, label %148, label %139

148:                                              ; preds = %139, %124, %137
  %149 = phi %"class.std::__1::__tree_end_node"* [ %138, %137 ], [ %128, %124 ], [ %144, %139 ]
  %150 = icmp eq %"class.std::__1::__tree_end_node"* %149, %7
  br i1 %150, label %182, label %44

151:                                              ; preds = %9
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 1, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  %156 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node_base"*
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 2
  %158 = bitcast %"class.std::__1::__tree_end_node"* %157 to %"class.std::__1::__tree_end_node"**
  %159 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %158, align 8
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %159, i64 0, i32 0
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node_base"* %161, %156
  br i1 %162, label %179, label %170

163:                                              ; preds = %151, %163
  %164 = phi %"class.std::__1::__tree_node_base"* [ %166, %163 ], [ %153, %151 ]
  %165 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %164, i64 0, i32 0, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, null
  br i1 %167, label %168, label %163

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %164, i64 0, i32 0
  br label %179

170:                                              ; preds = %155, %170
  %171 = phi %"class.std::__1::__tree_end_node"** [ %174, %170 ], [ %158, %155 ]
  %172 = bitcast %"class.std::__1::__tree_end_node"** %171 to %"class.std::__1::__tree_node_base"**
  %173 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %172, align 8
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 2
  %175 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 0, i32 0
  %177 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node_base"* %177, %173
  br i1 %178, label %179, label %170

179:                                              ; preds = %170, %155, %168
  %180 = phi %"class.std::__1::__tree_end_node"* [ %169, %168 ], [ %159, %155 ], [ %175, %170 ]
  %181 = icmp eq %"class.std::__1::__tree_end_node"* %180, %7
  br i1 %181, label %182, label %9

182:                                              ; preds = %179, %148, %3, %26
  %183 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %28, %26 ], [ %0, %3 ], [ %28, %148 ], [ %0, %179 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %183
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %5 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, %1
  br i1 %5, label %234, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = tail call zeroext i1 @_ZNSt3__15equalINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIPN2v88internal8compiler4NodeENS5_13ZoneHandleSetINS5_3MapEEEEEPNS_11__tree_nodeISC_PvEElEEEESI_NS_10__equal_toINS_4pairIKS8_SB_EESM_EEEEbT_SO_T0_T1_(%"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %17) #14
  br i1 %18, label %234, label %19

19:                                               ; preds = %6, %12
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ult i64 %24, 32
  br i1 %25, label %26, label %28, !prof !4

26:                                               ; preds = %19
  %27 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #14
  br label %30

28:                                               ; preds = %19
  %29 = add i64 %21, 32
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %26, %28
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %35 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %34 to i64*
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %32, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__compressed_pair.26"* %36 to i64*
  store i64 0, i64* %37, align 8
  store i64 %4, i64* %35, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %32, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %33, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %43 = icmp eq %"class.std::__1::__tree_end_node"* %41, %42
  br i1 %43, label %234, label %44

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node"**
  %47 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node"**
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %51 = inttoptr i64 %31 to i64*
  br label %52

52:                                               ; preds = %44, %231
  %53 = phi %"class.std::__1::__tree_end_node"* [ %41, %44 ], [ %232, %231 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 4
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 5
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %46, align 8
  %61 = icmp eq %"class.std::__1::__tree_node"* %60, null
  br i1 %61, label %203, label %62

62:                                               ; preds = %52
  %63 = inttoptr i64 %56 to %"class.v8::internal::compiler::Node"*
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi %"class.std::__1::__tree_end_node"* [ %45, %62 ], [ %75, %64 ]
  %66 = phi %"class.std::__1::__tree_node"* [ %60, %62 ], [ %76, %64 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %69 = icmp ult %"class.v8::internal::compiler::Node"* %68, %63
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 1
  %71 = bitcast %"class.std::__1::__tree_node_base"** %70 to %"class.std::__1::__tree_node"**
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::__tree_node"* %66 to %"class.std::__1::__tree_node"**
  %74 = select i1 %69, %"class.std::__1::__tree_node"** %71, %"class.std::__1::__tree_node"** %73
  %75 = select i1 %69, %"class.std::__1::__tree_end_node"* %65, %"class.std::__1::__tree_end_node"* %72
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %74, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %78, label %64

78:                                               ; preds = %64
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %75, %45
  br i1 %79, label %203, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 4
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.v8::internal::compiler::Node"**
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, align 8
  %84 = icmp ugt %"class.v8::internal::compiler::Node"* %83, %63
  br i1 %84, label %203, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 5
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, %59
  br i1 %89, label %135, label %90

90:                                               ; preds = %85
  %91 = and i64 %88, 3
  %92 = icmp eq i64 %91, 2
  %93 = and i64 %59, 3
  %94 = icmp eq i64 %93, 2
  %95 = and i1 %94, %92
  br i1 %95, label %96, label %203

96:                                               ; preds = %90
  %97 = add i64 %88, -2
  %98 = inttoptr i64 %97 to %"class.v8::internal::ZoneVector.1336"*
  %99 = add i64 %59, -2
  %100 = inttoptr i64 %99 to %"class.v8::internal::ZoneVector.1336"*
  %101 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %98, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast i64*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %97 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = ashr exact i64 %106, 3
  %108 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %100, i64 0, i32 0, i32 0, i32 1
  %109 = bitcast i64*** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = inttoptr i64 %99 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %110, %112
  %114 = ashr exact i64 %113, 3
  %115 = icmp eq i64 %107, %114
  br i1 %115, label %116, label %203

116:                                              ; preds = %96
  %117 = icmp eq i64 %106, 0
  br i1 %117, label %135, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %105 to i64**
  %120 = inttoptr i64 %112 to i64**
  br label %123

121:                                              ; preds = %128
  %122 = icmp ult i64 %134, %107
  br i1 %122, label %123, label %135

123:                                              ; preds = %121, %118
  %124 = phi i64 [ 0, %118 ], [ %134, %121 ]
  %125 = icmp eq i64 %124, %107
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = inttoptr i64 %99 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %127) #15
  unreachable

128:                                              ; preds = %123
  %129 = getelementptr inbounds i64*, i64** %119, i64 %124
  %130 = load i64*, i64** %129, align 8
  %131 = getelementptr inbounds i64*, i64** %120, i64 %124
  %132 = load i64*, i64** %131, align 8
  %133 = icmp eq i64* %130, %132
  %134 = add nuw i64 %124, 1
  br i1 %133, label %121, label %203

135:                                              ; preds = %121, %85, %116
  %136 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %47, align 8
  %137 = icmp eq %"class.std::__1::__tree_node"* %136, null
  br i1 %137, label %164, label %138

138:                                              ; preds = %135, %160
  %139 = phi %"class.std::__1::__tree_node"* [ %163, %160 ], [ %136, %135 ]
  %140 = phi %"class.std::__1::__tree_node_base"** [ %162, %160 ], [ %48, %135 ]
  %141 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 1, i32 0, i32 0
  %142 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, align 8
  %143 = icmp ugt %"class.v8::internal::compiler::Node"* %142, %63
  br i1 %143, label %144, label %150

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %148, label %160

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 0, i32 0
  br label %164

150:                                              ; preds = %138
  %151 = icmp ult %"class.v8::internal::compiler::Node"* %142, %63
  br i1 %151, label %152, label %158

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 0, i32 1
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, null
  br i1 %155, label %156, label %160

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 0, i32 0
  br label %164

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 0, i32 0
  br label %164

160:                                              ; preds = %152, %144
  %161 = phi %"class.std::__1::__tree_node_base"* [ %146, %144 ], [ %154, %152 ]
  %162 = phi %"class.std::__1::__tree_node_base"** [ %145, %144 ], [ %153, %152 ]
  %163 = bitcast %"class.std::__1::__tree_node_base"* %161 to %"class.std::__1::__tree_node"*
  br label %138

164:                                              ; preds = %135, %158, %156, %148
  %165 = phi %"class.std::__1::__tree_end_node"* [ %149, %148 ], [ %157, %156 ], [ %159, %158 ], [ %39, %135 ]
  %166 = phi %"class.std::__1::__tree_node_base"** [ %145, %148 ], [ %153, %156 ], [ %140, %158 ], [ %49, %135 ]
  %167 = bitcast %"class.std::__1::__tree_node_base"** %166 to %"class.std::__1::__tree_node"**
  %168 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node"* %168, null
  br i1 %169, label %170, label %203

170:                                              ; preds = %164
  %171 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %50, align 8, !noalias !17
  %172 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %171, i64 0, i32 2
  %173 = load i64, i64* %172, align 8, !noalias !17
  %174 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %171, i64 0, i32 3
  %175 = load i64, i64* %174, align 8, !noalias !17
  %176 = sub i64 %175, %173
  %177 = icmp ult i64 %176, 48
  br i1 %177, label %178, label %180, !prof !4

178:                                              ; preds = %170
  %179 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %171, i64 48) #14, !noalias !17
  br label %182

180:                                              ; preds = %170
  %181 = add i64 %173, 48
  store i64 %181, i64* %172, align 8, !noalias !17
  br label %182

182:                                              ; preds = %180, %178
  %183 = phi i64 [ %179, %178 ], [ %173, %180 ]
  %184 = inttoptr i64 %183 to %"class.std::__1::__tree_node"*
  %185 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 1
  %186 = bitcast %"struct.std::__1::__value_type"* %185 to i64*
  store i64 %56, i64* %186, align 8, !noalias !17
  %187 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %59, i64* %187, align 8, !noalias !17
  %188 = inttoptr i64 %183 to %"class.std::__1::__tree_node_base"*
  %189 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %188, i64 0, i32 2
  %190 = inttoptr i64 %183 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %165, %"class.std::__1::__tree_end_node"** %189, align 8
  store %"class.std::__1::__tree_node_base"* %188, %"class.std::__1::__tree_node_base"** %166, align 8
  %191 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %191, i64 0, i32 0
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = icmp eq %"class.std::__1::__tree_node_base"* %193, null
  br i1 %194, label %198, label %195

195:                                              ; preds = %182
  %196 = ptrtoint %"class.std::__1::__tree_node_base"* %193 to i64
  store i64 %196, i64* %51, align 8
  %197 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  br label %198

198:                                              ; preds = %195, %182
  %199 = phi %"class.std::__1::__tree_node_base"* [ %188, %182 ], [ %197, %195 ]
  %200 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %200, %"class.std::__1::__tree_node_base"* %199) #14
  %201 = load i64, i64* %38, align 8
  %202 = add i64 %201, 1
  store i64 %202, i64* %38, align 8
  br label %203

203:                                              ; preds = %128, %198, %164, %80, %78, %52, %96, %90
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 1, i32 0
  %205 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %204, align 8
  %206 = icmp eq %"class.std::__1::__tree_node_base"* %205, null
  br i1 %206, label %207, label %215

207:                                              ; preds = %203
  %208 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node_base"*
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 2
  %210 = bitcast %"class.std::__1::__tree_end_node"* %209 to %"class.std::__1::__tree_end_node"**
  %211 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %210, align 8
  %212 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %211, i64 0, i32 0
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node_base"* %213, %208
  br i1 %214, label %231, label %222

215:                                              ; preds = %203, %215
  %216 = phi %"class.std::__1::__tree_node_base"* [ %218, %215 ], [ %205, %203 ]
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %216, i64 0, i32 0, i32 0
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = icmp eq %"class.std::__1::__tree_node_base"* %218, null
  br i1 %219, label %220, label %215

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %216, i64 0, i32 0
  br label %231

222:                                              ; preds = %207, %222
  %223 = phi %"class.std::__1::__tree_end_node"** [ %226, %222 ], [ %210, %207 ]
  %224 = bitcast %"class.std::__1::__tree_end_node"** %223 to %"class.std::__1::__tree_node_base"**
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  %226 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %225, i64 0, i32 2
  %227 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %227, i64 0, i32 0
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %228, align 8
  %230 = icmp eq %"class.std::__1::__tree_node_base"* %229, %225
  br i1 %230, label %231, label %222

231:                                              ; preds = %222, %207, %220
  %232 = phi %"class.std::__1::__tree_end_node"* [ %221, %220 ], [ %211, %207 ], [ %227, %222 ]
  %233 = icmp eq %"class.std::__1::__tree_end_node"* %232, %42
  br i1 %233, label %234, label %52

234:                                              ; preds = %231, %30, %3, %12
  %235 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %0, %12 ], [ %0, %3 ], [ %32, %30 ], [ %32, %231 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %235
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::Node"*, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 32
  br i1 %11, label %12, label %14, !prof !4

12:                                               ; preds = %4
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 32) #14
  br label %16

14:                                               ; preds = %4
  %15 = add i64 %7, 32
  store i64 %15, i64* %6, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %7, %14 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %21 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %20 to i64*
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::__compressed_pair.26"* %22 to i64*
  store i64 0, i64* %23, align 8
  store i64 %5, i64* %21, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %25, %"class.std::__1::__tree_end_node"** %19, align 8
  %26 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, %0
  br i1 %26, label %32, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE14__assign_multiINS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEEEEvT_SP_(%"class.std::__1::__tree.25"* %28, %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"* %31) #14
  br label %32

32:                                               ; preds = %16, %27
  br label %33

33:                                               ; preds = %32, %69
  %34 = phi %"class.v8::internal::compiler::Node"* [ %72, %69 ], [ %1, %32 ]
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %34, i64 0, i32 0
  %36 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %36, i64 0, i32 2
  %38 = load i16, i16* %37, align 8
  switch i16 %38, label %73 [
    i16 207, label %39
    i16 40, label %39
    i16 59, label %39
  ]

39:                                               ; preds = %33, %33, %33
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %34, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = lshr i32 %41, 24
  %43 = and i32 %42, 15
  %44 = icmp eq i32 %43, 15
  %45 = ptrtoint %"class.v8::internal::compiler::Node"* %34 to i64
  %46 = add i64 %45, 32
  br i1 %44, label %47, label %54

47:                                               ; preds = %39
  %48 = inttoptr i64 %46 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %49 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %48, align 8
  %50 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %49 to i64
  %51 = add i64 %50, 16
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  br label %54

54:                                               ; preds = %47, %39
  %55 = phi i32 [ %53, %47 ], [ %43, %39 ]
  %56 = phi i64 [ %51, %47 ], [ %46, %39 ]
  %57 = icmp sgt i32 %55, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = inttoptr i64 %56 to %"class.v8::internal::compiler::Node"**
  %60 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::Node"* %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %58, %54
  %63 = and i32 %41, 251658240
  %64 = icmp eq i32 %63, 251658240
  br i1 %64, label %65, label %69

65:                                               ; preds = %62
  %66 = inttoptr i64 %46 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 16
  br label %69

69:                                               ; preds = %65, %62
  %70 = phi i64 [ %68, %65 ], [ %46, %62 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  %72 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, align 8
  br label %33

73:                                               ; preds = %58, %33
  %74 = ptrtoint %"class.v8::internal::compiler::Node"* %34 to i64
  %75 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %106, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %102, %78
  %81 = phi %"class.std::__1::__tree_node"* [ %105, %102 ], [ %76, %78 ]
  %82 = phi %"class.std::__1::__tree_node_base"** [ %104, %102 ], [ %79, %78 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1, i32 0, i32 0
  %84 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, align 8
  %85 = icmp ult %"class.v8::internal::compiler::Node"* %34, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %102

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 0
  br label %108

92:                                               ; preds = %80
  %93 = icmp ult %"class.v8::internal::compiler::Node"* %84, %34
  br i1 %93, label %94, label %100

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 1
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 0
  br label %108

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 0
  br label %108

102:                                              ; preds = %94, %86
  %103 = phi %"class.std::__1::__tree_node_base"* [ %88, %86 ], [ %96, %94 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %87, %86 ], [ %95, %94 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"* %103 to %"class.std::__1::__tree_node"*
  br label %80

106:                                              ; preds = %73
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  br label %108

108:                                              ; preds = %106, %100, %98, %90
  %109 = phi %"class.std::__1::__tree_end_node"* [ %25, %106 ], [ %91, %90 ], [ %99, %98 ], [ %101, %100 ]
  %110 = phi %"class.std::__1::__tree_node_base"** [ %107, %106 ], [ %87, %90 ], [ %95, %98 ], [ %82, %100 ]
  %111 = bitcast %"class.std::__1::__tree_node_base"** %110 to %"class.std::__1::__tree_node"**
  %112 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node"* %112, null
  br i1 %113, label %114, label %150

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %116 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %115, align 8, !noalias !20
  %117 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %116, i64 0, i32 2
  %118 = load i64, i64* %117, align 8, !noalias !20
  %119 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %116, i64 0, i32 3
  %120 = load i64, i64* %119, align 8, !noalias !20
  %121 = sub i64 %120, %118
  %122 = icmp ult i64 %121, 48
  br i1 %122, label %123, label %125, !prof !4

123:                                              ; preds = %114
  %124 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %116, i64 48) #14, !noalias !20
  br label %127

125:                                              ; preds = %114
  %126 = add i64 %118, 48
  store i64 %126, i64* %117, align 8, !noalias !20
  br label %127

127:                                              ; preds = %125, %123
  %128 = phi i64 [ %124, %123 ], [ %118, %125 ]
  %129 = inttoptr i64 %128 to %"class.std::__1::__tree_node"*
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 1, i32 0
  %131 = bitcast %"struct.std::__1::pair.1271"* %130 to i64*
  store i64 %74, i64* %131, align 8, !noalias !20
  %132 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 1, i64* %132, align 8, !noalias !20
  %133 = inttoptr i64 %128 to %"class.std::__1::__tree_node_base"*
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 2
  %135 = inttoptr i64 %128 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %109, %"class.std::__1::__tree_end_node"** %134, align 8
  store %"class.std::__1::__tree_node_base"* %133, %"class.std::__1::__tree_node_base"** %110, align 8
  %136 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %136, i64 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %127
  %141 = ptrtoint %"class.std::__1::__tree_node_base"* %138 to i64
  %142 = inttoptr i64 %17 to i64*
  store i64 %141, i64* %142, align 8
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  br label %144

144:                                              ; preds = %140, %127
  %145 = phi %"class.std::__1::__tree_node_base"* [ %133, %127 ], [ %143, %140 ]
  %146 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %147, %"class.std::__1::__tree_node_base"* %145) #14
  %148 = load i64, i64* %24, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %24, align 8
  br label %150

150:                                              ; preds = %108, %144
  %151 = phi %"class.std::__1::__tree_node"* [ %129, %144 ], [ %112, %108 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %2, i64* %152, align 8
  ret %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps5PrintEv(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.v8::internal::StdoutStream", align 8
  %5 = alloca %"struct.v8::internal::Brief", align 8
  %6 = bitcast %"class.v8::internal::StdoutStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = bitcast %"class.v8::internal::StdoutStream"* %4 to %"class.v8::internal::OFStream"*
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %9) #14
  %10 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %11 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #14
  %12 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %11, %"class.v8::base::RecursiveMutex"** %12, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %11) #14
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = icmp eq %"class.std::__1::__tree_end_node"* %14, %15
  %17 = bitcast %"class.v8::internal::StdoutStream"* %4 to %"class.std::__1::basic_ostream"*
  br i1 %16, label %23, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.std::__1::locale"* %3 to i8*
  %20 = bitcast %"struct.v8::internal::Brief"* %5 to i8*
  %21 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %5, i64 0, i32 0
  %22 = bitcast %"class.std::__1::locale"* %2 to i8*
  br label %30

23:                                               ; preds = %115, %1
  %24 = bitcast %"class.v8::internal::StdoutStream"* %4 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ios.base"* %25 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %26, align 8
  %27 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %12, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %27) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %24, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %28) #14
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %29 = bitcast %"class.std::__1::basic_ios.base"* %25 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %29) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %6) #14
  ret void

30:                                               ; preds = %18, %115
  %31 = phi %"class.std::__1::__tree_end_node"* [ %14, %18 ], [ %116, %115 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 4
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.v8::internal::compiler::Node"**
  %34 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 5
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #14
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %34, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 16777215
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %38, i32 %41) #14
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #14
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %34, i64 0, i32 0
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %45, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = call i64 @strlen(i8* %47) #14
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* %47, i64 %48) #14
  %50 = bitcast %"class.std::__1::basic_ostream"* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr i8, i8* %51, i64 -24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_ostream"* %49 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  %57 = bitcast i8* %56 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %57) #14
  %58 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %59 = bitcast %"class.std::__1::locale::facet"* %58 to %"class.std::__1::ctype"*
  %60 = bitcast %"class.std::__1::locale::facet"* %58 to i8 (%"class.std::__1::ctype"*, i8)***
  %61 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %60, align 8
  %62 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %61, i64 7
  %63 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %62, align 8
  %64 = call signext i8 %63(%"class.std::__1::ctype"* %59, i8 signext 10) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %49, i8 signext %64) #14
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %49) #14
  %67 = and i64 %37, 3
  %68 = add i64 %37, -2
  %69 = inttoptr i64 %68 to %"class.v8::internal::ZoneVector.1336"*
  %70 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %69, i64 0, i32 0, i32 0, i32 1
  %71 = bitcast i64*** %70 to i64*
  %72 = inttoptr i64 %68 to i64*
  %73 = icmp eq i64 %67, 0
  %74 = inttoptr i64 %37 to i64*
  %75 = icmp eq i64 %67, 1
  br i1 %75, label %87, label %76

76:                                               ; preds = %30, %134
  %77 = phi i64 [ %155, %134 ], [ 0, %30 ]
  switch i64 %67, label %79 [
    i64 1, label %84
    i64 0, label %78
  ]

78:                                               ; preds = %76
  br label %84

79:                                               ; preds = %76
  %80 = load i64, i64* %71, align 8
  %81 = load i64, i64* %72, align 8
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 3
  br label %84

84:                                               ; preds = %76, %78, %79
  %85 = phi i64 [ 1, %78 ], [ %83, %79 ], [ 0, %76 ]
  %86 = icmp ult i64 %77, %85
  br i1 %86, label %118, label %87

87:                                               ; preds = %84, %30
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 1, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 2
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"class.std::__1::__tree_end_node"**
  %95 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %92
  br i1 %98, label %115, label %106

99:                                               ; preds = %87, %99
  %100 = phi %"class.std::__1::__tree_node_base"* [ %102, %99 ], [ %89, %87 ]
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, null
  br i1 %103, label %104, label %99

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %100, i64 0, i32 0
  br label %115

106:                                              ; preds = %91, %106
  %107 = phi %"class.std::__1::__tree_end_node"** [ %110, %106 ], [ %94, %91 ]
  %108 = bitcast %"class.std::__1::__tree_end_node"** %107 to %"class.std::__1::__tree_node_base"**
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %109, i64 0, i32 2
  %111 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, %109
  br i1 %114, label %115, label %106

115:                                              ; preds = %106, %91, %104
  %116 = phi %"class.std::__1::__tree_end_node"* [ %105, %104 ], [ %95, %91 ], [ %111, %106 ]
  %117 = icmp eq %"class.std::__1::__tree_end_node"* %116, %15
  br i1 %117, label %23, label %30

118:                                              ; preds = %84
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 7) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  br i1 %73, label %134, label %120

120:                                              ; preds = %118
  %121 = shl i64 %77, 32
  %122 = ashr exact i64 %121, 32
  %123 = load i64, i64* %71, align 8
  %124 = load i64, i64* %72, align 8
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 3
  %127 = icmp ugt i64 %126, %122
  br i1 %127, label %130, label %128

128:                                              ; preds = %120
  %129 = inttoptr i64 %68 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %129) #15
  unreachable

130:                                              ; preds = %120
  %131 = inttoptr i64 %124 to i64**
  %132 = getelementptr inbounds i64*, i64** %131, i64 %122
  %133 = load i64*, i64** %132, align 8
  br label %134

134:                                              ; preds = %118, %130
  %135 = phi i64* [ %133, %130 ], [ %74, %118 ]
  %136 = load i64, i64* %135, align 8
  store i64 %136, i64* %21, align 8
  %137 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %119, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %5) #14
  %138 = bitcast %"class.std::__1::basic_ostream"* %137 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr i8, i8* %139, i64 -24
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.std::__1::basic_ostream"* %137 to i8*
  %144 = getelementptr inbounds i8, i8* %143, i64 %142
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  %145 = bitcast i8* %144 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %145) #14
  %146 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %147 = bitcast %"class.std::__1::locale::facet"* %146 to %"class.std::__1::ctype"*
  %148 = bitcast %"class.std::__1::locale::facet"* %146 to i8 (%"class.std::__1::ctype"*, i8)***
  %149 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %148, align 8
  %150 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %149, i64 7
  %151 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %150, align 8
  %152 = call signext i8 %151(%"class.std::__1::ctype"* %147, i8 signext 10) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  %153 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %137, i8 signext %152) #14
  %154 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %137) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  %155 = add nuw i64 %77, 1
  br label %76
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #14
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState12FieldsEqualsERKNSt3__15arrayIPKNS2_13AbstractFieldELm32EEESB_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readnone, %"struct.std::__1::array"* nocapture readonly dereferenceable(256), %"struct.std::__1::array"* nocapture readonly dereferenceable(256)) local_unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %130, %3
  %5 = phi i64 [ 0, %3 ], [ %131, %130 ]
  %6 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 %5
  %7 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 0, i32 0, i64 %5
  %9 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %7, null
  %11 = icmp ne %"class.v8::internal::compiler::LoadElimination::AbstractField"* %9, null
  br i1 %10, label %129, label %12

12:                                               ; preds = %4
  br i1 %11, label %13, label %133

13:                                               ; preds = %12
  %14 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %9, %7
  br i1 %14, label %130, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %133

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %23, %24
  br i1 %25, label %130, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  br label %29

29:                                               ; preds = %126, %26
  %30 = phi %"class.std::__1::__tree_end_node"* [ %127, %126 ], [ %28, %26 ]
  %31 = phi %"class.std::__1::__tree_end_node"* [ %98, %126 ], [ %23, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 4
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 4
  %34 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.v8::internal::compiler::Node"**
  %35 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, align 8
  %36 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.v8::internal::compiler::Node"**
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, align 8
  %38 = icmp eq %"class.v8::internal::compiler::Node"* %35, %37
  br i1 %38, label %39, label %133

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 5
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.v8::internal::compiler::Node"**
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 5
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.v8::internal::compiler::Node"**
  %45 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, align 8
  %46 = icmp eq %"class.v8::internal::compiler::Node"* %42, %45
  br i1 %46, label %47, label %133

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 6
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to i8*
  %50 = load i8, i8* %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 6
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to i8*
  %53 = load i8, i8* %52, align 8
  %54 = icmp eq i8 %50, %53
  br i1 %54, label %55, label %133

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 7
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 7
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %58, %61
  br i1 %62, label %63, label %133

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 8
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"struct.v8::internal::compiler::ConstFieldInfo"*
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 8
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"struct.v8::internal::compiler::ConstFieldInfo"*
  %68 = tail call zeroext i1 @_ZN2v88internal8compilereqERKNS1_14ConstFieldInfoES4_(%"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %65, %"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %67) #14
  br i1 %68, label %69, label %133

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 1, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %81

73:                                               ; preds = %69
  %74 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 2
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"class.std::__1::__tree_end_node"**
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, %74
  br i1 %80, label %97, label %88

81:                                               ; preds = %69, %81
  %82 = phi %"class.std::__1::__tree_node_base"* [ %84, %81 ], [ %71, %69 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %81

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %82, i64 0, i32 0
  br label %97

88:                                               ; preds = %73, %88
  %89 = phi %"class.std::__1::__tree_end_node"** [ %92, %88 ], [ %76, %73 ]
  %90 = bitcast %"class.std::__1::__tree_end_node"** %89 to %"class.std::__1::__tree_node_base"**
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 2
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, %91
  br i1 %96, label %97, label %88

97:                                               ; preds = %88, %86, %73
  %98 = phi %"class.std::__1::__tree_end_node"* [ %87, %86 ], [ %77, %73 ], [ %93, %88 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 1, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %110

102:                                              ; preds = %97
  %103 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node_base"*
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 2
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_end_node"**
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %103
  br i1 %109, label %126, label %117

110:                                              ; preds = %97, %110
  %111 = phi %"class.std::__1::__tree_node_base"* [ %113, %110 ], [ %100, %97 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %110

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0
  br label %126

117:                                              ; preds = %102, %117
  %118 = phi %"class.std::__1::__tree_end_node"** [ %121, %117 ], [ %105, %102 ]
  %119 = bitcast %"class.std::__1::__tree_end_node"** %118 to %"class.std::__1::__tree_node_base"**
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 2
  %122 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, %120
  br i1 %125, label %126, label %117

126:                                              ; preds = %117, %115, %102
  %127 = phi %"class.std::__1::__tree_end_node"* [ %116, %115 ], [ %106, %102 ], [ %122, %117 ]
  %128 = icmp eq %"class.std::__1::__tree_end_node"* %98, %24
  br i1 %128, label %130, label %29

129:                                              ; preds = %4
  br i1 %11, label %133, label %130

130:                                              ; preds = %126, %13, %21, %129
  %131 = add nuw nsw i64 %5, 1
  %132 = icmp eq i64 %131, 32
  br i1 %132, label %133, label %4

133:                                              ; preds = %15, %129, %12, %130, %63, %29, %55, %47, %39
  %134 = phi i1 [ false, %39 ], [ false, %47 ], [ false, %55 ], [ false, %29 ], [ false, %63 ], [ false, %15 ], [ true, %130 ], [ false, %129 ], [ false, %12 ]
  ret i1 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %4, null
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %6, align 8
  %8 = icmp ne %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %7, null
  br i1 %5, label %12, label %9

9:                                                ; preds = %2
  br i1 %8, label %10, label %46

10:                                               ; preds = %9
  %11 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination16AbstractElements6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %7, %"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %4)
  br i1 %11, label %13, label %46

12:                                               ; preds = %2
  br i1 %8, label %46, label %13

13:                                               ; preds = %12, %10
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1, i64 0, i32 1
  %16 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState12FieldsEqualsERKNSt3__15arrayIPKNS2_13AbstractFieldELm32EEESB_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* undef, %"struct.std::__1::array"* dereferenceable(256) %14, %"struct.std::__1::array"* dereferenceable(256) %15)
  br i1 %16, label %17, label %46

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1, i64 0, i32 2
  %20 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState12FieldsEqualsERKNSt3__15arrayIPKNS2_13AbstractFieldELm32EEESB_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* undef, %"struct.std::__1::array"* dereferenceable(256) %18, %"struct.std::__1::array"* dereferenceable(256) %19)
  br i1 %20, label %21, label %46

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 3
  %23 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %23, null
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1, i64 0, i32 3
  %26 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %25, align 8
  %27 = icmp ne %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %26, null
  br i1 %24, label %44, label %28

28:                                               ; preds = %21
  br i1 %27, label %29, label %46

29:                                               ; preds = %28
  %30 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %26, %23
  br i1 %30, label %45, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %26, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %23, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %33, %35
  br i1 %36, label %37, label %46

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = tail call zeroext i1 @_ZNSt3__15equalINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIPN2v88internal8compiler4NodeENS5_13ZoneHandleSetINS5_3MapEEEEEPNS_11__tree_nodeISC_PvEElEEEESI_NS_10__equal_toINS_4pairIKS8_SB_EESM_EEEEbT_SO_T0_T1_(%"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"* %42) #14
  br i1 %43, label %45, label %46

44:                                               ; preds = %21
  br i1 %27, label %46, label %45

45:                                               ; preds = %29, %44, %37
  br label %46

46:                                               ; preds = %31, %44, %28, %37, %13, %17, %12, %9, %10, %45
  %47 = phi i1 [ true, %45 ], [ false, %10 ], [ false, %9 ], [ false, %12 ], [ false, %17 ], [ false, %13 ], [ false, %37 ], [ false, %28 ], [ false, %44 ], [ false, %31 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15LoadElimination13AbstractState11FieldsMergeEPNSt3__15arrayIPKNS2_13AbstractFieldELm32EEERKS9_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readnone, %"struct.std::__1::array"* nocapture, %"struct.std::__1::array"* nocapture readonly dereferenceable(256), %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  br label %6

5:                                                ; preds = %19
  ret void

6:                                                ; preds = %19, %4
  %7 = phi i64 [ 0, %4 ], [ %20, %19 ]
  %8 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 %7
  %9 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 0, i32 0, i64 %7
  %13 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %12, align 8
  %14 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %9, %"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %13, %"class.v8::internal::Zone"* %3)
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi %"class.v8::internal::compiler::LoadElimination::AbstractField"* [ %16, %15 ], [ null, %11 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %18, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %8, align 8
  br label %19

19:                                               ; preds = %17, %6
  %20 = add nuw nsw i64 %7, 1
  %21 = icmp eq i64 %20, 32
  br i1 %21, label %5, label %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %5 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %6 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %7 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, %1
  br i1 %7, label %337, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %122

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %16, %17
  br i1 %18, label %337, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  br label %22

22:                                               ; preds = %119, %19
  %23 = phi %"class.std::__1::__tree_end_node"* [ %120, %119 ], [ %21, %19 ]
  %24 = phi %"class.std::__1::__tree_end_node"* [ %91, %119 ], [ %16, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 4
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.v8::internal::compiler::Node"**
  %28 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  %29 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.v8::internal::compiler::Node"**
  %30 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, align 8
  %31 = icmp eq %"class.v8::internal::compiler::Node"* %28, %30
  br i1 %31, label %32, label %122

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 5
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.v8::internal::compiler::Node"**
  %35 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 5
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.v8::internal::compiler::Node"**
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = icmp eq %"class.v8::internal::compiler::Node"* %35, %38
  br i1 %39, label %40, label %122

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 6
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to i8*
  %43 = load i8, i8* %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 6
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to i8*
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %43, %46
  br i1 %47, label %48, label %122

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 7
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 7
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %51, %54
  br i1 %55, label %56, label %122

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 8
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"struct.v8::internal::compiler::ConstFieldInfo"*
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 8
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"struct.v8::internal::compiler::ConstFieldInfo"*
  %61 = tail call zeroext i1 @_ZN2v88internal8compilereqERKNS1_14ConstFieldInfoES4_(%"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %58, %"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %60) #14
  br i1 %61, label %62, label %122

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 2
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_end_node"**
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, %67
  br i1 %73, label %90, label %81

74:                                               ; preds = %62, %74
  %75 = phi %"class.std::__1::__tree_node_base"* [ %77, %74 ], [ %64, %62 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %79, label %74

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 0
  br label %90

81:                                               ; preds = %66, %81
  %82 = phi %"class.std::__1::__tree_end_node"** [ %85, %81 ], [ %69, %66 ]
  %83 = bitcast %"class.std::__1::__tree_end_node"** %82 to %"class.std::__1::__tree_node_base"**
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %84, i64 0, i32 2
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, %84
  br i1 %89, label %90, label %81

90:                                               ; preds = %81, %79, %66
  %91 = phi %"class.std::__1::__tree_end_node"* [ %80, %79 ], [ %70, %66 ], [ %86, %81 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 1, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %95, label %103

95:                                               ; preds = %90
  %96 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node_base"*
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 2
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to %"class.std::__1::__tree_end_node"**
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %99, i64 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, %96
  br i1 %102, label %119, label %110

103:                                              ; preds = %90, %103
  %104 = phi %"class.std::__1::__tree_node_base"* [ %106, %103 ], [ %93, %90 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %108, label %103

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 0
  br label %119

110:                                              ; preds = %95, %110
  %111 = phi %"class.std::__1::__tree_end_node"** [ %114, %110 ], [ %98, %95 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %111 to %"class.std::__1::__tree_node_base"**
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %115, i64 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, %113
  br i1 %118, label %119, label %110

119:                                              ; preds = %110, %108, %95
  %120 = phi %"class.std::__1::__tree_end_node"* [ %109, %108 ], [ %99, %95 ], [ %115, %110 ]
  %121 = icmp eq %"class.std::__1::__tree_end_node"* %91, %17
  br i1 %121, label %337, label %22

122:                                              ; preds = %32, %40, %48, %22, %56, %8
  %123 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %126, %124
  %128 = icmp ult i64 %127, 32
  br i1 %128, label %129, label %131, !prof !4

129:                                              ; preds = %122
  %130 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #14
  br label %133

131:                                              ; preds = %122
  %132 = add i64 %124, 32
  store i64 %132, i64* %123, align 8
  br label %133

133:                                              ; preds = %129, %131
  %134 = phi i64 [ %130, %129 ], [ %124, %131 ]
  %135 = inttoptr i64 %134 to %"class.v8::internal::compiler::LoadElimination::AbstractField"*
  %136 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %135, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %138 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %137 to i64*
  %139 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %135, i64 0, i32 0, i32 0, i32 0, i32 1
  %140 = bitcast %"class.std::__1::__compressed_pair"* %139 to i64*
  store i64 0, i64* %140, align 8
  store i64 %6, i64* %138, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %135, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %135, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %142, %"class.std::__1::__tree_end_node"** %136, align 8
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %146 = icmp eq %"class.std::__1::__tree_end_node"* %144, %145
  br i1 %146, label %337, label %147

147:                                              ; preds = %133
  %148 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %4 to i8*
  %149 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5 to i8*
  %150 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"class.std::__1::__tree_node.1320"**
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5, i64 0, i32 0
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5, i64 0, i32 1
  %154 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5, i64 0, i32 2
  %155 = bitcast %"class.v8::internal::MaybeHandle"* %154 to i64*
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5, i64 0, i32 3
  %157 = bitcast %"class.std::__1::__tree_end_node"* %142 to %"class.std::__1::__tree_node.1320"**
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %135, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %160 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %135, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %161 = inttoptr i64 %134 to i64*
  br label %162

162:                                              ; preds = %147, %334
  %163 = phi %"class.std::__1::__tree_end_node"* [ %144, %147 ], [ %335, %334 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %148)
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 4
  %165 = bitcast %"class.std::__1::__tree_end_node"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 5
  %168 = bitcast %"class.std::__1::__tree_end_node"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* align 8 %168, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %149) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %149, i8* align 8 %168, i64 32, i1 false)
  %169 = inttoptr i64 %166 to %"class.v8::internal::compiler::Node"*
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %169, i64 0, i32 3
  %171 = load i32, i32* %170, align 4
  %172 = lshr i32 %171, 24
  %173 = and i32 %172, 15
  %174 = icmp eq i32 %173, 15
  %175 = add i64 %166, 32
  br i1 %174, label %176, label %183

176:                                              ; preds = %162
  %177 = inttoptr i64 %175 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %178 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %177, align 8
  %179 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %178 to i64
  %180 = add i64 %179, 16
  %181 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %178, i64 0, i32 1
  %182 = load i32, i32* %181, align 8
  br label %183

183:                                              ; preds = %176, %162
  %184 = phi i32 [ %182, %176 ], [ %173, %162 ]
  %185 = phi i64 [ %180, %176 ], [ %175, %162 ]
  %186 = icmp sgt i32 %184, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = inttoptr i64 %185 to %"class.v8::internal::compiler::Node"**
  %189 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %188, align 8
  %190 = icmp eq %"class.v8::internal::compiler::Node"* %189, null
  br i1 %190, label %306, label %191

191:                                              ; preds = %183, %187
  %192 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %151, align 8
  %193 = icmp eq %"class.std::__1::__tree_node.1320"* %192, null
  br i1 %193, label %306, label %194

194:                                              ; preds = %191, %194
  %195 = phi %"class.std::__1::__tree_end_node"* [ %205, %194 ], [ %150, %191 ]
  %196 = phi %"class.std::__1::__tree_node.1320"* [ %206, %194 ], [ %192, %191 ]
  %197 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %196, i64 0, i32 1, i32 0, i32 0
  %198 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, align 8
  %199 = icmp ult %"class.v8::internal::compiler::Node"* %198, %169
  %200 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %196, i64 0, i32 0, i32 1
  %201 = bitcast %"class.std::__1::__tree_node_base"** %200 to %"class.std::__1::__tree_node.1320"**
  %202 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %196, i64 0, i32 0, i32 0
  %203 = bitcast %"class.std::__1::__tree_node.1320"* %196 to %"class.std::__1::__tree_node.1320"**
  %204 = select i1 %199, %"class.std::__1::__tree_node.1320"** %201, %"class.std::__1::__tree_node.1320"** %203
  %205 = select i1 %199, %"class.std::__1::__tree_end_node"* %195, %"class.std::__1::__tree_end_node"* %202
  %206 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %204, align 8
  %207 = icmp eq %"class.std::__1::__tree_node.1320"* %206, null
  br i1 %207, label %208, label %194

208:                                              ; preds = %194
  %209 = icmp eq %"class.std::__1::__tree_end_node"* %205, %150
  br i1 %209, label %306, label %210

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 4
  %212 = bitcast %"class.std::__1::__tree_end_node"* %211 to %"class.v8::internal::compiler::Node"**
  %213 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, align 8
  %214 = icmp ugt %"class.v8::internal::compiler::Node"* %213, %169
  br i1 %214, label %306, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 5
  %217 = bitcast %"class.std::__1::__tree_end_node"* %216 to %"class.v8::internal::compiler::Node"**
  %218 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, align 8
  %219 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, align 8
  %220 = icmp eq %"class.v8::internal::compiler::Node"* %218, %219
  br i1 %220, label %221, label %306

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 6
  %223 = bitcast %"class.std::__1::__tree_end_node"* %222 to i8*
  %224 = load i8, i8* %223, align 8
  %225 = load i8, i8* %153, align 8
  %226 = icmp eq i8 %224, %225
  br i1 %226, label %227, label %306

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 7
  %229 = bitcast %"class.std::__1::__tree_end_node"* %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = load i64, i64* %155, align 8
  %232 = icmp eq i64 %230, %231
  br i1 %232, label %233, label %306

233:                                              ; preds = %227
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 8
  %235 = bitcast %"class.std::__1::__tree_end_node"* %234 to %"struct.v8::internal::compiler::ConstFieldInfo"*
  %236 = call zeroext i1 @_ZN2v88internal8compilereqERKNS1_14ConstFieldInfoES4_(%"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %235, %"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %156) #14
  br i1 %236, label %237, label %306

237:                                              ; preds = %233
  %238 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %157, align 8
  %239 = icmp eq %"class.std::__1::__tree_node.1320"* %238, null
  br i1 %239, label %266, label %240

240:                                              ; preds = %237, %262
  %241 = phi %"class.std::__1::__tree_node.1320"* [ %265, %262 ], [ %238, %237 ]
  %242 = phi %"class.std::__1::__tree_node_base"** [ %264, %262 ], [ %158, %237 ]
  %243 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %241, i64 0, i32 1, i32 0, i32 0
  %244 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %243, align 8
  %245 = icmp ugt %"class.v8::internal::compiler::Node"* %244, %169
  br i1 %245, label %246, label %252

246:                                              ; preds = %240
  %247 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %241, i64 0, i32 0, i32 0, i32 0
  %248 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %247, align 8
  %249 = icmp eq %"class.std::__1::__tree_node_base"* %248, null
  br i1 %249, label %250, label %262

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %241, i64 0, i32 0, i32 0
  br label %266

252:                                              ; preds = %240
  %253 = icmp ult %"class.v8::internal::compiler::Node"* %244, %169
  br i1 %253, label %254, label %260

254:                                              ; preds = %252
  %255 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %241, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  %257 = icmp eq %"class.std::__1::__tree_node_base"* %256, null
  br i1 %257, label %258, label %262

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %241, i64 0, i32 0, i32 0
  br label %266

260:                                              ; preds = %252
  %261 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %241, i64 0, i32 0, i32 0
  br label %266

262:                                              ; preds = %254, %246
  %263 = phi %"class.std::__1::__tree_node_base"* [ %248, %246 ], [ %256, %254 ]
  %264 = phi %"class.std::__1::__tree_node_base"** [ %247, %246 ], [ %255, %254 ]
  %265 = bitcast %"class.std::__1::__tree_node_base"* %263 to %"class.std::__1::__tree_node.1320"*
  br label %240

266:                                              ; preds = %237, %260, %258, %250
  %267 = phi %"class.std::__1::__tree_end_node"* [ %251, %250 ], [ %259, %258 ], [ %261, %260 ], [ %142, %237 ]
  %268 = phi %"class.std::__1::__tree_node_base"** [ %247, %250 ], [ %255, %258 ], [ %242, %260 ], [ %159, %237 ]
  %269 = bitcast %"class.std::__1::__tree_node_base"** %268 to %"class.std::__1::__tree_node.1320"**
  %270 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node.1320"* %270, null
  br i1 %271, label %272, label %306

272:                                              ; preds = %266
  %273 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %160, align 8, !noalias !23
  %274 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %273, i64 0, i32 2
  %275 = load i64, i64* %274, align 8, !noalias !23
  %276 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %273, i64 0, i32 3
  %277 = load i64, i64* %276, align 8, !noalias !23
  %278 = sub i64 %277, %275
  %279 = icmp ult i64 %278, 72
  br i1 %279, label %280, label %282, !prof !4

280:                                              ; preds = %272
  %281 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %273, i64 72) #14, !noalias !23
  br label %284

282:                                              ; preds = %272
  %283 = add i64 %275, 72
  store i64 %283, i64* %274, align 8, !noalias !23
  br label %284

284:                                              ; preds = %282, %280
  %285 = phi i64 [ %281, %280 ], [ %275, %282 ]
  %286 = inttoptr i64 %285 to %"class.std::__1::__tree_node.1320"*
  %287 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %286, i64 0, i32 1
  %288 = bitcast %"struct.std::__1::__value_type.1321"* %287 to i64*
  store i64 %166, i64* %288, align 8, !noalias !23
  %289 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %286, i64 0, i32 1, i32 0, i32 1
  %290 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* nonnull align 8 %148, i64 32, i1 false), !noalias !23
  %291 = inttoptr i64 %285 to %"class.std::__1::__tree_node_base"*
  %292 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %291, i64 0, i32 2
  %293 = inttoptr i64 %285 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %293, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %267, %"class.std::__1::__tree_end_node"** %292, align 8
  store %"class.std::__1::__tree_node_base"* %291, %"class.std::__1::__tree_node_base"** %268, align 8
  %294 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %136, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %294, i64 0, i32 0
  %296 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %295, align 8
  %297 = icmp eq %"class.std::__1::__tree_node_base"* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %284
  %299 = ptrtoint %"class.std::__1::__tree_node_base"* %296 to i64
  store i64 %299, i64* %161, align 8
  %300 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %268, align 8
  br label %301

301:                                              ; preds = %298, %284
  %302 = phi %"class.std::__1::__tree_node_base"* [ %291, %284 ], [ %300, %298 ]
  %303 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %303, %"class.std::__1::__tree_node_base"* %302) #14
  %304 = load i64, i64* %141, align 8
  %305 = add i64 %304, 1
  store i64 %305, i64* %141, align 8
  br label %306

306:                                              ; preds = %187, %233, %191, %208, %227, %221, %215, %210, %266, %301
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %149) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %148)
  %307 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 1, i32 0
  %308 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %307, align 8
  %309 = icmp eq %"class.std::__1::__tree_node_base"* %308, null
  br i1 %309, label %310, label %318

310:                                              ; preds = %306
  %311 = bitcast %"class.std::__1::__tree_end_node"* %163 to %"class.std::__1::__tree_node_base"*
  %312 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 2
  %313 = bitcast %"class.std::__1::__tree_end_node"* %312 to %"class.std::__1::__tree_end_node"**
  %314 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %313, align 8
  %315 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %314, i64 0, i32 0
  %316 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %317 = icmp eq %"class.std::__1::__tree_node_base"* %316, %311
  br i1 %317, label %334, label %325

318:                                              ; preds = %306, %318
  %319 = phi %"class.std::__1::__tree_node_base"* [ %321, %318 ], [ %308, %306 ]
  %320 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %319, i64 0, i32 0, i32 0
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %320, align 8
  %322 = icmp eq %"class.std::__1::__tree_node_base"* %321, null
  br i1 %322, label %323, label %318

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %319, i64 0, i32 0
  br label %334

325:                                              ; preds = %310, %325
  %326 = phi %"class.std::__1::__tree_end_node"** [ %329, %325 ], [ %313, %310 ]
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to %"class.std::__1::__tree_node_base"**
  %328 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %328, i64 0, i32 2
  %330 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %329, align 8
  %331 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %330, i64 0, i32 0
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = icmp eq %"class.std::__1::__tree_node_base"* %332, %328
  br i1 %333, label %334, label %325

334:                                              ; preds = %325, %310, %323
  %335 = phi %"class.std::__1::__tree_end_node"* [ %324, %323 ], [ %314, %310 ], [ %330, %325 ]
  %336 = icmp eq %"class.std::__1::__tree_end_node"* %335, %145
  br i1 %336, label %337, label %162

337:                                              ; preds = %119, %334, %133, %3, %14
  %338 = phi %"class.v8::internal::compiler::LoadElimination::AbstractField"* [ %0, %14 ], [ %0, %3 ], [ %135, %133 ], [ %135, %334 ], [ %0, %119 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractField"* %338
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15LoadElimination13AbstractState5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractElements"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %9, %"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %5, %"class.v8::internal::Zone"* %2)
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.v8::internal::compiler::LoadElimination::AbstractElements"* [ %12, %11 ], [ null, %7 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %14, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %4, align 8
  br label %15

15:                                               ; preds = %3, %13
  br label %16

16:                                               ; preds = %15, %29
  %17 = phi i64 [ %30, %29 ], [ 0, %15 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 1, i32 0, i64 %17
  %19 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %18, align 8
  %20 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1, i64 0, i32 1, i32 0, i64 %17
  %23 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %19, %"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %23, %"class.v8::internal::Zone"* %2) #14
  br label %27

27:                                               ; preds = %21, %25
  %28 = phi %"class.v8::internal::compiler::LoadElimination::AbstractField"* [ %26, %25 ], [ null, %21 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %28, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %18, align 8
  br label %29

29:                                               ; preds = %27, %16
  %30 = add nuw nsw i64 %17, 1
  %31 = icmp eq i64 %30, 32
  br i1 %31, label %32, label %16

32:                                               ; preds = %29, %45
  %33 = phi i64 [ %46, %45 ], [ 0, %29 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 %33
  %35 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1, i64 0, i32 2, i32 0, i64 %33
  %39 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %38, align 8
  %40 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %35, %"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %39, %"class.v8::internal::Zone"* %2) #14
  br label %43

43:                                               ; preds = %37, %41
  %44 = phi %"class.v8::internal::compiler::LoadElimination::AbstractField"* [ %42, %41 ], [ null, %37 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %44, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %34, align 8
  br label %45

45:                                               ; preds = %43, %32
  %46 = add nuw nsw i64 %33, 1
  %47 = icmp eq i64 %46, 32
  br i1 %47, label %48, label %32

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 3
  %50 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %49, align 8
  %51 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %50, null
  br i1 %51, label %60, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1, i64 0, i32 3
  %54 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %53, align 8
  %55 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps5MergeEPKS3_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %54, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %50, %"class.v8::internal::Zone"* %2)
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %57, %56 ], [ null, %52 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %59, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %49, align 8
  br label %60

60:                                               ; preds = %48, %58
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState10LookupMapsEPNS1_4NodeEPNS0_13ZoneHandleSetINS0_3MapEEE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneHandleSet"* nocapture) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %5, null
  br i1 %6, label %78, label %7

7:                                                ; preds = %3, %43
  %8 = phi %"class.v8::internal::compiler::Node"* [ %46, %43 ], [ %1, %3 ]
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %8, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %10, i64 0, i32 2
  %12 = load i16, i16* %11, align 8
  switch i16 %12, label %47 [
    i16 207, label %13
    i16 40, label %13
    i16 59, label %13
  ]

13:                                               ; preds = %7, %7, %7
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %8, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 24
  %17 = and i32 %16, 15
  %18 = icmp eq i32 %17, 15
  %19 = ptrtoint %"class.v8::internal::compiler::Node"* %8 to i64
  %20 = add i64 %19, 32
  br i1 %18, label %21, label %28

21:                                               ; preds = %13
  %22 = inttoptr i64 %20 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %23 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %22, align 8
  %24 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %23 to i64
  %25 = add i64 %24, 16
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  br label %28

28:                                               ; preds = %21, %13
  %29 = phi i32 [ %27, %21 ], [ %17, %13 ]
  %30 = phi i64 [ %25, %21 ], [ %20, %13 ]
  %31 = icmp sgt i32 %29, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %30 to %"class.v8::internal::compiler::Node"**
  %34 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %33, align 8
  %35 = icmp eq %"class.v8::internal::compiler::Node"* %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %32, %28
  %37 = and i32 %15, 251658240
  %38 = icmp eq i32 %37, 251658240
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = inttoptr i64 %20 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 16
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi i64 [ %42, %39 ], [ %20, %36 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::compiler::Node"**
  %46 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, align 8
  br label %7

47:                                               ; preds = %32, %7
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_node"**
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node"* %50, null
  br i1 %51, label %78, label %52

52:                                               ; preds = %47, %52
  %53 = phi %"class.std::__1::__tree_end_node"* [ %63, %52 ], [ %48, %47 ]
  %54 = phi %"class.std::__1::__tree_node"* [ %64, %52 ], [ %50, %47 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, align 8
  %57 = icmp ult %"class.v8::internal::compiler::Node"* %56, %8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::__tree_node_base"** %58 to %"class.std::__1::__tree_node"**
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::__tree_node"* %54 to %"class.std::__1::__tree_node"**
  %62 = select i1 %57, %"class.std::__1::__tree_node"** %59, %"class.std::__1::__tree_node"** %61
  %63 = select i1 %57, %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"* %60
  %64 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %65 = icmp eq %"class.std::__1::__tree_node"* %64, null
  br i1 %65, label %66, label %52

66:                                               ; preds = %52
  %67 = icmp eq %"class.std::__1::__tree_end_node"* %63, %48
  br i1 %67, label %78, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 4
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.v8::internal::compiler::Node"**
  %71 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %72 = icmp ult %"class.v8::internal::compiler::Node"* %8, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 5
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to i64*
  %76 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %2, i64 0, i32 0
  %77 = load i64, i64* %75, align 8
  store i64 %77, i64* %76, align 8
  br label %78

78:                                               ; preds = %73, %68, %66, %47, %3
  %79 = phi i1 [ false, %3 ], [ true, %73 ], [ false, %47 ], [ false, %66 ], [ false, %68 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState7SetMapsEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::compiler::Node"*, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %6
  %10 = icmp ult i64 %9, 528
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %4
  %12 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 528) #14
  br label %15

13:                                               ; preds = %4
  %14 = add i64 %6, 528
  store i64 %14, i64* %5, align 8
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64 [ %12, %11 ], [ %6, %13 ]
  %17 = inttoptr i64 %16 to i8*
  %18 = inttoptr i64 %16 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %19 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 528, i1 false) #14
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %18, i64 0, i32 3
  %21 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %20, align 8
  %22 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %15
  %24 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %21, %"class.v8::internal::compiler::Node"* %1, i64 %2, %"class.v8::internal::Zone"* %3)
  br label %37

25:                                               ; preds = %15
  %26 = load i64, i64* %5, align 8
  %27 = load i64, i64* %7, align 8
  %28 = sub i64 %27, %26
  %29 = icmp ult i64 %28, 32
  br i1 %29, label %30, label %32, !prof !4

30:                                               ; preds = %25
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 32) #14
  br label %34

32:                                               ; preds = %25
  %33 = add i64 %26, 32
  store i64 %33, i64* %5, align 8
  br label %34

34:                                               ; preds = %30, %32
  %35 = phi i64 [ %31, %30 ], [ %26, %32 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  tail call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %36, %"class.v8::internal::compiler::Node"* %1, i64 %2, %"class.v8::internal::Zone"* %3) #14
  br label %37

37:                                               ; preds = %34, %23
  %38 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %36, %34 ], [ %24, %23 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %38, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %20, align 8
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState8KillMapsERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* readonly, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nocapture readonly dereferenceable(24), %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %5, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* dereferenceable(24) %1, %"class.v8::internal::Zone"* %2)
  %9 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %4, align 8
  %10 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %9, %8
  br i1 %10, label %28, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ult i64 %16, 528
  br i1 %17, label %18, label %20, !prof !4

18:                                               ; preds = %11
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 528) #14
  br label %22

20:                                               ; preds = %11
  %21 = add i64 %13, 528
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to i8*
  %25 = inttoptr i64 %23 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %26 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %26, i64 528, i1 false) #14
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %25, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %8, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %27, align 8
  br label %28

28:                                               ; preds = %7, %3, %22
  %29 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %25, %22 ], [ %0, %3 ], [ %0, %7 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState8KillMapsEPNS1_4NodeEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %5 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 2, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 3
  %10 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %3
  %13 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %10, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %4, %"class.v8::internal::Zone"* %2) #14
  %14 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %9, align 8
  %15 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %14, %13
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %18
  %22 = icmp ult i64 %21, 528
  br i1 %22, label %23, label %25, !prof !4

23:                                               ; preds = %16
  %24 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 528) #14
  br label %27

25:                                               ; preds = %16
  %26 = add i64 %18, 528
  store i64 %26, i64* %17, align 8
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi i64 [ %24, %23 ], [ %18, %25 ]
  %29 = inttoptr i64 %28 to i8*
  %30 = inttoptr i64 %28 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %31 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %31, i64 528, i1 false) #14
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %30, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %13, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %32, align 8
  br label %33

33:                                               ; preds = %3, %12, %27
  %34 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %30, %27 ], [ %0, %3 ], [ %0, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState13LookupElementEPNS1_4NodeES5_NS0_21MachineRepresentationE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::compiler::Node"* readonly, %"class.v8::internal::compiler::Node"* readonly, i8 zeroext) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.v8::internal::compiler::Node"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements6LookupEPNS1_4NodeES5_NS0_21MachineRepresentationE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %6, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2, i8 zeroext %3)
  br label %10

10:                                               ; preds = %4, %8
  %11 = phi %"class.v8::internal::compiler::Node"* [ %9, %8 ], [ null, %4 ]
  ret %"class.v8::internal::compiler::Node"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState10AddElementEPNS1_4NodeES5_S5_NS0_21MachineRepresentationEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i8 zeroext, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %8 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"* %3 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  %15 = icmp ult i64 %14, 528
  br i1 %15, label %16, label %18, !prof !4

16:                                               ; preds = %6
  %17 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 528) #14
  br label %20

18:                                               ; preds = %6
  %19 = add i64 %11, 528
  store i64 %19, i64* %10, align 8
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i64 [ %17, %16 ], [ %11, %18 ]
  %22 = inttoptr i64 %21 to i8*
  %23 = inttoptr i64 %21 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %24 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %24, i64 528, i1 false) #14
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %23, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %26, null
  %28 = load i64, i64* %10, align 8
  %29 = load i64, i64* %12, align 8
  %30 = sub i64 %29, %28
  %31 = icmp ult i64 %30, 264
  br i1 %27, label %51, label %32

32:                                               ; preds = %20
  br i1 %31, label %33, label %35, !prof !4

33:                                               ; preds = %32
  %34 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 264) #14
  br label %37

35:                                               ; preds = %32
  %36 = add i64 %28, 264
  store i64 %36, i64* %10, align 8
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi i64 [ %34, %33 ], [ %28, %35 ]
  %39 = inttoptr i64 %38 to i8*
  %40 = inttoptr i64 %38 to %"class.v8::internal::compiler::LoadElimination::AbstractElements"*
  %41 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %41, i64 264, i1 false) #14
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %40, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %40, i64 0, i32 0, i64 %43, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %40, i64 0, i32 0, i64 %43, i32 1
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %40, i64 0, i32 0, i64 %43, i32 2
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %40, i64 0, i32 0, i64 %43, i32 3
  store i8 %4, i8* %47, align 8
  %48 = load i64, i64* %42, align 8
  %49 = add i64 %48, 1
  %50 = and i64 %49, 7
  store i64 %50, i64* %42, align 8
  br label %80

51:                                               ; preds = %20
  br i1 %31, label %52, label %54, !prof !4

52:                                               ; preds = %51
  %53 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 264) #14
  br label %56

54:                                               ; preds = %51
  %55 = add i64 %28, 264
  store i64 %55, i64* %10, align 8
  br label %56

56:                                               ; preds = %52, %54
  %57 = phi i64 [ %53, %52 ], [ %28, %54 ]
  %58 = inttoptr i64 %57 to %"class.v8::internal::compiler::LoadElimination::AbstractElements"*
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 1
  %61 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 25, i1 false) #14
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 2
  %63 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 25, i1 false) #14
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 3
  %65 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 25, i1 false) #14
  %66 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 4
  %67 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 25, i1 false) #14
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 5
  %69 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 25, i1 false) #14
  %70 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 6
  %71 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 25, i1 false) #14
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 7
  %73 = bitcast %"struct.v8::internal::compiler::LoadElimination::AbstractElements::Element"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 25, i1 false) #14
  store i64 1, i64* %59, align 8
  %74 = inttoptr i64 %57 to i64*
  store i64 %7, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 0, i32 1
  %76 = bitcast %"class.v8::internal::compiler::Node"** %75 to i64*
  store i64 %8, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 0, i32 2
  %78 = bitcast %"class.v8::internal::compiler::Node"** %77 to i64*
  store i64 %9, i64* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractElements", %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %58, i64 0, i32 0, i64 0, i32 3
  store i8 %4, i8* %79, align 8
  br label %80

80:                                               ; preds = %56, %37
  %81 = phi %"class.v8::internal::compiler::LoadElimination::AbstractElements"* [ %58, %56 ], [ %40, %37 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %81, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %25, align 8
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState11KillElementEPNS1_4NodeES5_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractElements"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements4KillEPNS1_4NodeES5_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %6, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::Zone"* %3)
  %10 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %5, align 8
  %11 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %10, %9
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ult i64 %17, 528
  br i1 %18, label %19, label %21, !prof !4

19:                                               ; preds = %12
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 528) #14
  br label %23

21:                                               ; preds = %12
  %22 = add i64 %14, 528
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to i8*
  %26 = inttoptr i64 %24 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %27 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 528, i1 false) #14
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %26, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %9, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %28, align 8
  br label %29

29:                                               ; preds = %8, %4, %23
  %30 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %26, %23 ], [ %0, %4 ], [ %0, %8 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState8AddFieldEPNS1_4NodeENS2_10IndexRangeENS2_9FieldInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::compiler::Node"*, i64, %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* byval(%"struct.v8::internal::compiler::LoadElimination::FieldInfo") align 8, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %7 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %8 = alloca %"class.v8::internal::Zone"*, align 8
  %9 = trunc i64 %2 to i32
  %10 = lshr i64 %2, 32
  %11 = trunc i64 %10 to i32
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %7, align 8
  store %"class.v8::internal::Zone"* %4, %"class.v8::internal::Zone"** %8, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ult i64 %16, 528
  br i1 %17, label %18, label %20, !prof !4

18:                                               ; preds = %5
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 528) #14
  br label %22

20:                                               ; preds = %5
  %21 = add i64 %13, 528
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to i8*
  %25 = inttoptr i64 %23 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %26 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %26, i64 528, i1 false) #14
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %3, i64 0, i32 3, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %28, null
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %25, i64 0, i32 2
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %25, i64 0, i32 1
  %32 = select i1 %29, %"struct.std::__1::array"* %31, %"struct.std::__1::array"* %30
  %33 = icmp eq i32 %9, %11
  br i1 %33, label %39, label %34

34:                                               ; preds = %22
  %35 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %3 to i8*
  %36 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %6 to i8*
  %37 = shl i64 %2, 32
  %38 = ashr exact i64 %37, 32
  br label %40

39:                                               ; preds = %159, %22
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %25

40:                                               ; preds = %34, %159
  %41 = phi i64 [ %38, %34 ], [ %161, %159 ]
  %42 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %32, i64 0, i32 0, i64 %41
  %43 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %42, align 8
  %44 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %43, null
  br i1 %44, label %156, label %45

45:                                               ; preds = %40
  %46 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %7, align 8
  %47 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %35, i64 32, i1 false)
  %48 = ptrtoint %"class.v8::internal::compiler::Node"* %46 to i64
  %49 = ptrtoint %"class.v8::internal::Zone"* %47 to i64
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 3
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %53, %51
  %55 = icmp ult i64 %54, 32
  br i1 %55, label %56, label %58, !prof !4

56:                                               ; preds = %45
  %57 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %47, i64 32) #14
  br label %60

58:                                               ; preds = %45
  %59 = add i64 %51, 32
  store i64 %59, i64* %50, align 8
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi i64 [ %57, %56 ], [ %51, %58 ]
  %62 = inttoptr i64 %61 to %"class.v8::internal::compiler::LoadElimination::AbstractField"*
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %65 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %64 to i64*
  %66 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::__compressed_pair"* %66 to i64*
  store i64 0, i64* %67, align 8
  store i64 %49, i64* %65, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %63, align 8
  %70 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %43, %62
  br i1 %70, label %107, label %71

71:                                               ; preds = %60
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE14__assign_multiINS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEEEEvT_SO_(%"class.std::__1::__tree"* %72, %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"* %75) #14
  %76 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node.1320"**
  %77 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node.1320"* %77, null
  br i1 %78, label %107, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %103, %79
  %82 = phi %"class.std::__1::__tree_node.1320"* [ %106, %103 ], [ %77, %79 ]
  %83 = phi %"class.std::__1::__tree_node_base"** [ %105, %103 ], [ %80, %79 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %82, i64 0, i32 1, i32 0, i32 0
  %85 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, align 8
  %86 = icmp ult %"class.v8::internal::compiler::Node"* %46, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %82, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %103

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %82, i64 0, i32 0, i32 0
  br label %109

93:                                               ; preds = %81
  %94 = icmp ult %"class.v8::internal::compiler::Node"* %85, %46
  br i1 %94, label %95, label %101

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %82, i64 0, i32 0, i32 1
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %82, i64 0, i32 0, i32 0
  br label %109

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %82, i64 0, i32 0, i32 0
  br label %109

103:                                              ; preds = %95, %87
  %104 = phi %"class.std::__1::__tree_node_base"* [ %89, %87 ], [ %97, %95 ]
  %105 = phi %"class.std::__1::__tree_node_base"** [ %88, %87 ], [ %96, %95 ]
  %106 = bitcast %"class.std::__1::__tree_node_base"* %104 to %"class.std::__1::__tree_node.1320"*
  br label %81

107:                                              ; preds = %60, %71
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  br label %109

109:                                              ; preds = %107, %101, %99, %91
  %110 = phi %"class.std::__1::__tree_end_node"* [ %69, %107 ], [ %92, %91 ], [ %100, %99 ], [ %102, %101 ]
  %111 = phi %"class.std::__1::__tree_node_base"** [ %108, %107 ], [ %88, %91 ], [ %96, %99 ], [ %83, %101 ]
  %112 = bitcast %"class.std::__1::__tree_node_base"** %111 to %"class.std::__1::__tree_node.1320"**
  %113 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node.1320"* %113, null
  br i1 %114, label %115, label %152

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %117 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %116, align 8, !noalias !26
  %118 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %117, i64 0, i32 2
  %119 = load i64, i64* %118, align 8, !noalias !26
  %120 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %117, i64 0, i32 3
  %121 = load i64, i64* %120, align 8, !noalias !26
  %122 = sub i64 %121, %119
  %123 = icmp ult i64 %122, 72
  br i1 %123, label %124, label %126, !prof !4

124:                                              ; preds = %115
  %125 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %117, i64 72) #14, !noalias !26
  br label %128

126:                                              ; preds = %115
  %127 = add i64 %119, 72
  store i64 %127, i64* %118, align 8, !noalias !26
  br label %128

128:                                              ; preds = %126, %124
  %129 = phi i64 [ %125, %124 ], [ %119, %126 ]
  %130 = inttoptr i64 %129 to %"class.std::__1::__tree_node.1320"*
  %131 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %130, i64 0, i32 1, i32 0
  %132 = bitcast %"struct.std::__1::pair.1262"* %131 to i64*
  store i64 %48, i64* %132, align 8, !noalias !26
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %130, i64 0, i32 1, i32 0, i32 1, i32 0
  %134 = bitcast %"class.v8::internal::compiler::Node"** %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 32, i1 false) #14, !noalias !26
  %135 = inttoptr i64 %129 to %"class.std::__1::__tree_node_base"*
  %136 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %135, i64 0, i32 2
  %137 = inttoptr i64 %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %110, %"class.std::__1::__tree_end_node"** %136, align 8
  store %"class.std::__1::__tree_node_base"* %135, %"class.std::__1::__tree_node_base"** %111, align 8
  %138 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %138, i64 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %128
  %143 = ptrtoint %"class.std::__1::__tree_node_base"* %140 to i64
  %144 = inttoptr i64 %61 to i64*
  store i64 %143, i64* %144, align 8
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  br label %146

146:                                              ; preds = %142, %128
  %147 = phi %"class.std::__1::__tree_node_base"* [ %135, %128 ], [ %145, %142 ]
  %148 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %149, %"class.std::__1::__tree_node_base"* %147) #14
  %150 = load i64, i64* %68, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %68, align 8
  br label %152

152:                                              ; preds = %109, %146
  %153 = phi %"class.std::__1::__tree_node.1320"* [ %130, %146 ], [ %113, %109 ]
  %154 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %153, i64 0, i32 1, i32 0, i32 1
  %155 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* nonnull align 8 %36, i64 32, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36)
  br label %159

156:                                              ; preds = %40
  %157 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %158 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZN2v88internal4Zone3NewINS0_8compiler15LoadElimination13AbstractFieldEJRPNS3_4NodeERNS4_9FieldInfoERPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %157, %"class.v8::internal::compiler::Node"** nonnull dereferenceable(8) %7, %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* nonnull dereferenceable(32) %3, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %8)
  br label %159

159:                                              ; preds = %156, %152
  %160 = phi %"class.v8::internal::compiler::LoadElimination::AbstractField"* [ %62, %152 ], [ %158, %156 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %160, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %42, align 8
  %161 = add nsw i64 %41, 1
  %162 = trunc i64 %161 to i32
  %163 = icmp eq i32 %162, %11
  br i1 %163, label %39, label %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZN2v88internal4Zone3NewINS0_8compiler15LoadElimination13AbstractFieldEJRPNS3_4NodeERNS4_9FieldInfoERPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"** dereferenceable(8), %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* dereferenceable(32), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %6 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %7 = alloca %"struct.v8::internal::compiler::LoadElimination::FieldInfo", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 32
  br i1 %13, label %14, label %16, !prof !4

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 32) #14
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, 32
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"class.v8::internal::compiler::LoadElimination::AbstractField"*
  %21 = bitcast %"class.v8::internal::compiler::Node"** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %7 to i8*
  %24 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %24, i64 32, i1 false)
  %25 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %3, align 8
  %26 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %23, i64 32, i1 false) #14
  %27 = ptrtoint %"class.v8::internal::Zone"* %25 to i64
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %30 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %29 to i64*
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::__compressed_pair"* %31 to i64*
  store i64 0, i64* %32, align 8
  store i64 %27, i64* %30, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"** %28, align 8
  %35 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %26, i64 32, i1 false) #14
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node.1320"**
  %38 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node.1320"* %38, null
  br i1 %39, label %40, label %74

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 2
  %42 = load i64, i64* %41, align 8, !noalias !29
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 3
  %44 = load i64, i64* %43, align 8, !noalias !29
  %45 = sub i64 %44, %42
  %46 = icmp ult i64 %45, 72
  br i1 %46, label %47, label %49, !prof !4

47:                                               ; preds = %40
  %48 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %25, i64 72) #14, !noalias !29
  br label %51

49:                                               ; preds = %40
  %50 = add i64 %42, 72
  store i64 %50, i64* %41, align 8, !noalias !29
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi i64 [ %48, %47 ], [ %42, %49 ]
  %53 = inttoptr i64 %52 to %"class.std::__1::__tree_node.1320"*
  %54 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %53, i64 0, i32 1, i32 0
  %55 = bitcast %"struct.std::__1::pair.1262"* %54 to i64*
  store i64 %22, i64* %55, align 8, !noalias !29
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %53, i64 0, i32 1, i32 0, i32 1
  %57 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %35, i64 32, i1 false) #14, !noalias !29
  %58 = inttoptr i64 %52 to %"class.std::__1::__tree_node_base"*
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 2
  %60 = inttoptr i64 %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"** %59, align 8
  store %"class.std::__1::__tree_node_base"* %58, %"class.std::__1::__tree_node_base"** %36, align 8
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %51
  %66 = ptrtoint %"class.std::__1::__tree_node_base"* %63 to i64
  %67 = inttoptr i64 %19 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  br label %70

70:                                               ; preds = %65, %51
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %65 ], [ %58, %51 ]
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %58) #14
  %72 = load i64, i64* %33, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %33, align 8
  br label %74

74:                                               ; preds = %18, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26)
  ret %"class.v8::internal::compiler::LoadElimination::AbstractField"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState14KillConstFieldEPNS1_4NodeENS2_10IndexRangeEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::Node"*, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = trunc i64 %2 to i32
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %12 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  %13 = shl i64 %2, 32
  %14 = ashr exact i64 %13, 32
  br label %19

15:                                               ; preds = %47, %4
  %16 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %4 ], [ %48, %47 ]
  %17 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %16, null
  %18 = select i1 %17, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %16
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %18

19:                                               ; preds = %9, %47
  %20 = phi i64 [ %14, %9 ], [ %49, %47 ]
  %21 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %9 ], [ %48, %47 ]
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 %20
  %23 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %23, null
  br i1 %24, label %47, label %25

25:                                               ; preds = %19
  %26 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField9KillConstEPNS1_4NodeEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %23, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::Zone"* %3)
  %27 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %22, align 8
  %28 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %27, %26
  br i1 %28, label %47, label %29

29:                                               ; preds = %25
  %30 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %21, null
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = load i64, i64* %10, align 8
  %33 = load i64, i64* %11, align 8
  %34 = sub i64 %33, %32
  %35 = icmp ult i64 %34, 528
  br i1 %35, label %36, label %38, !prof !4

36:                                               ; preds = %31
  %37 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 528) #14
  br label %40

38:                                               ; preds = %31
  %39 = add i64 %32, 528
  store i64 %39, i64* %10, align 8
  br label %40

40:                                               ; preds = %36, %38
  %41 = phi i64 [ %37, %36 ], [ %32, %38 ]
  %42 = inttoptr i64 %41 to i8*
  %43 = inttoptr i64 %41 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %12, i64 528, i1 false) #14
  br label %44

44:                                               ; preds = %29, %40
  %45 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %21, %29 ], [ %43, %40 ]
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %45, i64 0, i32 2, i32 0, i64 %20
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %26, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %46, align 8
  br label %47

47:                                               ; preds = %25, %19, %44
  %48 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %45, %44 ], [ %21, %25 ], [ %21, %19 ]
  %49 = add nsw i64 %20, 1
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %50, %7
  br i1 %51, label %15, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState9KillFieldEPNS1_4NodeENS2_10IndexRangeENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::Node"*, i64, i64*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %7 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 2, i32 0
  store i64* null, i64** %10, align 8
  %11 = trunc i64 %2 to i32
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %54, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %18 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  %19 = shl i64 %2, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %49, %15
  %22 = phi i64 [ %20, %15 ], [ %51, %49 ]
  %23 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %15 ], [ %50, %49 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 1, i32 0, i64 %22
  %25 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %25, null
  br i1 %26, label %49, label %27

27:                                               ; preds = %21
  %28 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %25, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %6, i64* %3, %"class.v8::internal::Zone"* %4) #14
  %29 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %24, align 8
  %30 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %29, %28
  br i1 %30, label %49, label %31

31:                                               ; preds = %27
  %32 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %23, null
  br i1 %32, label %33, label %46

33:                                               ; preds = %31
  %34 = load i64, i64* %16, align 8
  %35 = load i64, i64* %17, align 8
  %36 = sub i64 %35, %34
  %37 = icmp ult i64 %36, 528
  br i1 %37, label %38, label %40, !prof !4

38:                                               ; preds = %33
  %39 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 528) #14
  br label %42

40:                                               ; preds = %33
  %41 = add i64 %34, 528
  store i64 %41, i64* %16, align 8
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %39, %38 ], [ %34, %40 ]
  %44 = inttoptr i64 %43 to i8*
  %45 = inttoptr i64 %43 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %18, i64 528, i1 false) #14
  br label %46

46:                                               ; preds = %42, %31
  %47 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %23, %31 ], [ %45, %42 ]
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %47, i64 0, i32 1, i32 0, i64 %22
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %28, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %48, align 8
  br label %49

49:                                               ; preds = %46, %27, %21
  %50 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %47, %46 ], [ %23, %27 ], [ %23, %21 ]
  %51 = add nsw i64 %22, 1
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, %13
  br i1 %53, label %54, label %21

54:                                               ; preds = %49, %5
  %55 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %5 ], [ %50, %49 ]
  %56 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %55, null
  %57 = select i1 %56, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %57
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState9KillFieldERKNS2_14AliasStateInfoENS2_10IndexRangeENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* readonly, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nocapture readonly dereferenceable(24), i64, i64*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %6 = trunc i64 %2 to i32
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %13 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  %14 = shl i64 %2, 32
  %15 = ashr exact i64 %14, 32
  br label %20

16:                                               ; preds = %48, %5
  %17 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %5 ], [ %49, %48 ]
  %18 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %17, null
  %19 = select i1 %18, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %17
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %19

20:                                               ; preds = %10, %48
  %21 = phi i64 [ %15, %10 ], [ %50, %48 ]
  %22 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %10 ], [ %49, %48 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 1, i32 0, i64 %21
  %24 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %23, align 8
  %25 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %24, null
  br i1 %25, label %48, label %26

26:                                               ; preds = %20
  %27 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %24, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* dereferenceable(24) %1, i64* %3, %"class.v8::internal::Zone"* %4)
  %28 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %23, align 8
  %29 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %28, %27
  br i1 %29, label %48, label %30

30:                                               ; preds = %26
  %31 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %22, null
  br i1 %31, label %32, label %45

32:                                               ; preds = %30
  %33 = load i64, i64* %11, align 8
  %34 = load i64, i64* %12, align 8
  %35 = sub i64 %34, %33
  %36 = icmp ult i64 %35, 528
  br i1 %36, label %37, label %39, !prof !4

37:                                               ; preds = %32
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 528) #14
  br label %41

39:                                               ; preds = %32
  %40 = add i64 %33, 528
  store i64 %40, i64* %11, align 8
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi i64 [ %38, %37 ], [ %33, %39 ]
  %43 = inttoptr i64 %42 to i8*
  %44 = inttoptr i64 %42 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %13, i64 528, i1 false) #14
  br label %45

45:                                               ; preds = %30, %41
  %46 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %22, %30 ], [ %44, %41 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %46, i64 0, i32 1, i32 0, i64 %21
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %27, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %47, align 8
  br label %48

48:                                               ; preds = %26, %20, %45
  %49 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %46, %45 ], [ %22, %26 ], [ %22, %20 ]
  %50 = add nsw i64 %21, 1
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %51, %8
  br i1 %52, label %16, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState10KillFieldsEPNS1_4NodeENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::Node"*, i64*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %6 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 2, i32 0
  store i64* null, i64** %9, align 8
  br label %10

10:                                               ; preds = %4, %48
  %11 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %12, align 8
  %14 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %13, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %10
  %16 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %13, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %5, i64* %2, %"class.v8::internal::Zone"* %3)
  %17 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %16, %13
  br i1 %17, label %48, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %20
  %24 = icmp ult i64 %23, 528
  br i1 %24, label %25, label %27, !prof !4

25:                                               ; preds = %18
  %26 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 528) #14
  br label %29

27:                                               ; preds = %18
  %28 = add i64 %20, 528
  store i64 %28, i64* %19, align 8
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi i64 [ %26, %25 ], [ %20, %27 ]
  %31 = inttoptr i64 %30 to i8*
  %32 = inttoptr i64 %30 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %33 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %33, i64 528, i1 false) #14
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %32, i64 0, i32 1, i32 0, i64 %11
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %16, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %34, align 8
  %35 = add nuw i64 %11, 1
  %36 = icmp ult i64 %35, 32
  br i1 %36, label %37, label %51

37:                                               ; preds = %29, %45
  %38 = phi i64 [ %46, %45 ], [ %35, %29 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 1, i32 0, i64 %38
  %40 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %39, align 8
  %41 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %40, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %5, i64* %2, %"class.v8::internal::Zone"* %3)
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %32, i64 0, i32 1, i32 0, i64 %38
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %43, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %44, align 8
  br label %45

45:                                               ; preds = %37, %42
  %46 = add i64 %38, 1
  %47 = icmp eq i64 %46, 32
  br i1 %47, label %51, label %37

48:                                               ; preds = %15, %10
  %49 = add nuw nsw i64 %11, 1
  %50 = icmp eq i64 %49, 32
  br i1 %50, label %51, label %10

51:                                               ; preds = %48, %45, %29
  %52 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %32, %29 ], [ %32, %45 ], [ %0, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState7KillAllEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 0
  %5 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 1
  %9 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %9, null
  br i1 %10, label %31, label %11

11:                                               ; preds = %147, %143, %139, %135, %131, %127, %123, %119, %115, %111, %107, %103, %99, %95, %91, %87, %83, %79, %75, %71, %67, %63, %59, %55, %51, %47, %43, %39, %35, %31, %7, %2
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ult i64 %16, 528
  br i1 %17, label %18, label %20, !prof !4

18:                                               ; preds = %11
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 528) #14
  br label %22

20:                                               ; preds = %11
  %21 = add i64 %13, 528
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to i8*
  %25 = inttoptr i64 %23 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 528, i1 false) #14
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %25, i64 0, i32 2
  %27 = bitcast %"struct.std::__1::array"* %26 to i8*
  %28 = bitcast %"struct.std::__1::array"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 256, i1 false)
  br label %29

29:                                               ; preds = %147, %22
  %30 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %25, %22 ], [ @_ZN2v88internal8compiler15LoadElimination13AbstractState12empty_state_E, %147 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %30

31:                                               ; preds = %7
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 2
  %33 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %32, align 8
  %34 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %33, null
  br i1 %34, label %35, label %11

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 3
  %37 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %36, align 8
  %38 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %37, null
  br i1 %38, label %39, label %11

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 4
  %41 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %40, align 8
  %42 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %41, null
  br i1 %42, label %43, label %11

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 5
  %45 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %44, align 8
  %46 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %45, null
  br i1 %46, label %47, label %11

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 6
  %49 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %48, align 8
  %50 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %49, null
  br i1 %50, label %51, label %11

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 7
  %53 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %52, align 8
  %54 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %53, null
  br i1 %54, label %55, label %11

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 8
  %57 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %56, align 8
  %58 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %57, null
  br i1 %58, label %59, label %11

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 9
  %61 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %60, align 8
  %62 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %61, null
  br i1 %62, label %63, label %11

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 10
  %65 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %64, align 8
  %66 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %65, null
  br i1 %66, label %67, label %11

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 11
  %69 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %68, align 8
  %70 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %69, null
  br i1 %70, label %71, label %11

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 12
  %73 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %72, align 8
  %74 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %73, null
  br i1 %74, label %75, label %11

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 13
  %77 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %77, null
  br i1 %78, label %79, label %11

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 14
  %81 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %80, align 8
  %82 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %81, null
  br i1 %82, label %83, label %11

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 15
  %85 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %85, null
  br i1 %86, label %87, label %11

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 16
  %89 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %88, align 8
  %90 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %89, null
  br i1 %90, label %91, label %11

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 17
  %93 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %92, align 8
  %94 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %93, null
  br i1 %94, label %95, label %11

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 18
  %97 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %96, align 8
  %98 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %97, null
  br i1 %98, label %99, label %11

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 19
  %101 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %100, align 8
  %102 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %101, null
  br i1 %102, label %103, label %11

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 20
  %105 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %104, align 8
  %106 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %105, null
  br i1 %106, label %107, label %11

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 21
  %109 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %108, align 8
  %110 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %109, null
  br i1 %110, label %111, label %11

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 22
  %113 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %112, align 8
  %114 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %113, null
  br i1 %114, label %115, label %11

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 23
  %117 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %116, align 8
  %118 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %117, null
  br i1 %118, label %119, label %11

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 24
  %121 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %120, align 8
  %122 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %121, null
  br i1 %122, label %123, label %11

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 25
  %125 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %124, align 8
  %126 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %125, null
  br i1 %126, label %127, label %11

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 26
  %129 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %128, align 8
  %130 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %129, null
  br i1 %130, label %131, label %11

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 27
  %133 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %132, align 8
  %134 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %133, null
  br i1 %134, label %135, label %11

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 28
  %137 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %136, align 8
  %138 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %137, null
  br i1 %138, label %139, label %11

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 29
  %141 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %140, align 8
  %142 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %141, null
  br i1 %142, label %143, label %11

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 30
  %145 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %144, align 8
  %146 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %145, null
  br i1 %146, label %147, label %11

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 31
  %149 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %148, align 8
  %150 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %149, null
  br i1 %150, label %29, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState11LookupFieldEPNS1_4NodeENS2_10IndexRangeENS1_14ConstFieldInfoE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* nocapture readonly, %"class.v8::internal::compiler::Node"*, i64, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.v8::internal::compiler::ConstFieldInfo", align 8
  %6 = trunc i64 %2 to i32
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::ConstFieldInfo", %"struct.v8::internal::compiler::ConstFieldInfo"* %5, i64 0, i32 0, i32 0
  store i64* %3, i64** %9, align 8
  %10 = icmp eq i32 %6, %8
  br i1 %10, label %207, label %11

11:                                               ; preds = %4
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  br label %14

14:                                               ; preds = %205, %11
  %15 = phi i64* [ %3, %11 ], [ %206, %205 ]
  %16 = phi i64 [ %13, %11 ], [ %202, %205 ]
  %17 = phi i64 [ 0, %11 ], [ %201, %205 ]
  %18 = phi i8 [ 0, %11 ], [ %200, %205 ]
  %19 = icmp eq i64* %15, null
  br i1 %19, label %96, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 2, i32 0, i64 %16
  %22 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %21, align 8
  %23 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %22, null
  br i1 %23, label %210, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %26, %27
  br i1 %28, label %210, label %29

29:                                               ; preds = %24, %86
  %30 = phi %"class.std::__1::__tree_end_node"* [ %87, %86 ], [ %26, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 4
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.v8::internal::compiler::Node"**
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = lshr i32 %35, 24
  %37 = and i32 %36, 15
  %38 = icmp eq i32 %37, 15
  %39 = ptrtoint %"class.v8::internal::compiler::Node"* %33 to i64
  %40 = add i64 %39, 32
  br i1 %38, label %41, label %48

41:                                               ; preds = %29
  %42 = inttoptr i64 %40 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %43 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %42, align 8
  %44 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %43 to i64
  %45 = add i64 %44, 16
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  br label %48

48:                                               ; preds = %41, %29
  %49 = phi i32 [ %47, %41 ], [ %37, %29 ]
  %50 = phi i64 [ %45, %41 ], [ %40, %29 ]
  %51 = icmp sgt i32 %49, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = inttoptr i64 %50 to %"class.v8::internal::compiler::Node"**
  %54 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, align 8
  %55 = icmp eq %"class.v8::internal::compiler::Node"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52, %48
  %57 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %33) #14
  br i1 %57, label %89, label %58

58:                                               ; preds = %56, %52
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 1, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %70

62:                                               ; preds = %58
  %63 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node_base"*
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 2
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_end_node"**
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, %63
  br i1 %69, label %86, label %77

70:                                               ; preds = %58, %70
  %71 = phi %"class.std::__1::__tree_node_base"* [ %73, %70 ], [ %60, %58 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %70

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 0
  br label %86

77:                                               ; preds = %62, %77
  %78 = phi %"class.std::__1::__tree_end_node"** [ %81, %77 ], [ %65, %62 ]
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to %"class.std::__1::__tree_node_base"**
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  %82 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, %80
  br i1 %85, label %86, label %77

86:                                               ; preds = %77, %75, %62
  %87 = phi %"class.std::__1::__tree_end_node"* [ %76, %75 ], [ %66, %62 ], [ %82, %77 ]
  %88 = icmp eq %"class.std::__1::__tree_end_node"* %87, %27
  br i1 %88, label %210, label %29

89:                                               ; preds = %56
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 5
  %91 = icmp eq %"class.std::__1::__tree_end_node"* %90, null
  br i1 %91, label %210, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 8
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"struct.v8::internal::compiler::ConstFieldInfo"*
  %95 = call zeroext i1 @_ZN2v88internal8compilereqERKNS1_14ConstFieldInfoES4_(%"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %94, %"struct.v8::internal::compiler::ConstFieldInfo"* nonnull dereferenceable(8) %5) #14
  br i1 %95, label %168, label %210

96:                                               ; preds = %14
  %97 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %0, i64 0, i32 1, i32 0, i64 %16
  %98 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %97, align 8
  %99 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %98, null
  br i1 %99, label %210, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractField", %"class.v8::internal::compiler::LoadElimination::AbstractField"* %98, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %104 = icmp eq %"class.std::__1::__tree_end_node"* %102, %103
  br i1 %104, label %210, label %105

105:                                              ; preds = %100, %162
  %106 = phi %"class.std::__1::__tree_end_node"* [ %163, %162 ], [ %102, %100 ]
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 4
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"class.v8::internal::compiler::Node"**
  %109 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %109, i64 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = lshr i32 %111, 24
  %113 = and i32 %112, 15
  %114 = icmp eq i32 %113, 15
  %115 = ptrtoint %"class.v8::internal::compiler::Node"* %109 to i64
  %116 = add i64 %115, 32
  br i1 %114, label %117, label %124

117:                                              ; preds = %105
  %118 = inttoptr i64 %116 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %119 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %118, align 8
  %120 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %119 to i64
  %121 = add i64 %120, 16
  %122 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %119, i64 0, i32 1
  %123 = load i32, i32* %122, align 8
  br label %124

124:                                              ; preds = %117, %105
  %125 = phi i32 [ %123, %117 ], [ %113, %105 ]
  %126 = phi i64 [ %121, %117 ], [ %116, %105 ]
  %127 = icmp sgt i32 %125, 0
  br i1 %127, label %128, label %132

128:                                              ; preds = %124
  %129 = inttoptr i64 %126 to %"class.v8::internal::compiler::Node"**
  %130 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, align 8
  %131 = icmp eq %"class.v8::internal::compiler::Node"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128, %124
  %133 = call fastcc zeroext i1 @_ZN2v88internal8compiler12_GLOBAL__N_19MustAliasEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %109) #14
  br i1 %133, label %165, label %134

134:                                              ; preds = %132, %128
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 1, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %136, null
  br i1 %137, label %138, label %146

138:                                              ; preds = %134
  %139 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"class.std::__1::__tree_node_base"*
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 2
  %141 = bitcast %"class.std::__1::__tree_end_node"* %140 to %"class.std::__1::__tree_end_node"**
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %139
  br i1 %145, label %162, label %153

146:                                              ; preds = %134, %146
  %147 = phi %"class.std::__1::__tree_node_base"* [ %149, %146 ], [ %136, %134 ]
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node_base"* %149, null
  br i1 %150, label %151, label %146

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %147, i64 0, i32 0
  br label %162

153:                                              ; preds = %138, %153
  %154 = phi %"class.std::__1::__tree_end_node"** [ %157, %153 ], [ %141, %138 ]
  %155 = bitcast %"class.std::__1::__tree_end_node"** %154 to %"class.std::__1::__tree_node_base"**
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 2
  %158 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, %156
  br i1 %161, label %162, label %153

162:                                              ; preds = %153, %151, %138
  %163 = phi %"class.std::__1::__tree_end_node"* [ %152, %151 ], [ %142, %138 ], [ %158, %153 ]
  %164 = icmp eq %"class.std::__1::__tree_end_node"* %163, %103
  br i1 %164, label %210, label %105

165:                                              ; preds = %132
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 5
  %167 = icmp eq %"class.std::__1::__tree_end_node"* %166, null
  br i1 %167, label %210, label %168

168:                                              ; preds = %165, %92
  %169 = phi %"class.std::__1::__tree_end_node"* [ %90, %92 ], [ %166, %165 ]
  %170 = ptrtoint %"class.std::__1::__tree_end_node"* %169 to i64
  %171 = icmp eq i8 %18, 0
  br i1 %171, label %199, label %172

172:                                              ; preds = %168
  %173 = inttoptr i64 %17 to %"struct.v8::internal::compiler::LoadElimination::FieldInfo"*
  %174 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %173, i64 0, i32 0
  %175 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, align 8
  %176 = bitcast %"class.std::__1::__tree_end_node"* %169 to %"class.v8::internal::compiler::Node"**
  %177 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, align 8
  %178 = icmp eq %"class.v8::internal::compiler::Node"* %175, %177
  br i1 %178, label %179, label %210

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %173, i64 0, i32 1
  %181 = load i8, i8* %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 1
  %183 = bitcast %"class.std::__1::__tree_end_node"* %182 to i8*
  %184 = load i8, i8* %183, align 8
  %185 = icmp eq i8 %181, %184
  br i1 %185, label %186, label %210

186:                                              ; preds = %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %173, i64 0, i32 2
  %188 = bitcast %"class.v8::internal::MaybeHandle"* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 2
  %191 = bitcast %"class.std::__1::__tree_end_node"* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = icmp eq i64 %189, %192
  br i1 %193, label %194, label %210

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"struct.v8::internal::compiler::LoadElimination::FieldInfo", %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %173, i64 0, i32 3
  %196 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 3
  %197 = bitcast %"class.std::__1::__tree_end_node"* %196 to %"struct.v8::internal::compiler::ConstFieldInfo"*
  %198 = call zeroext i1 @_ZN2v88internal8compilereqERKNS1_14ConstFieldInfoES4_(%"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %195, %"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8) %197) #14
  br i1 %198, label %199, label %210

199:                                              ; preds = %194, %168
  %200 = phi i8 [ %18, %194 ], [ 1, %168 ]
  %201 = phi i64 [ %17, %194 ], [ %170, %168 ]
  %202 = add nsw i64 %16, 1
  %203 = trunc i64 %202 to i32
  %204 = icmp eq i32 %203, %8
  br i1 %204, label %207, label %205

205:                                              ; preds = %199
  %206 = load i64*, i64** %9, align 8
  br label %14

207:                                              ; preds = %199, %4
  %208 = phi i64 [ 0, %4 ], [ %201, %199 ]
  %209 = inttoptr i64 %208 to %"struct.v8::internal::compiler::LoadElimination::FieldInfo"*
  br label %210

210:                                              ; preds = %100, %24, %194, %172, %179, %186, %96, %20, %165, %92, %89, %86, %162, %207
  %211 = phi %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* [ %209, %207 ], [ null, %162 ], [ null, %86 ], [ null, %89 ], [ null, %92 ], [ null, %165 ], [ null, %20 ], [ null, %96 ], [ null, %186 ], [ null, %179 ], [ null, %172 ], [ null, %194 ], [ null, %24 ], [ null, %100 ]
  ret %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %211
}

declare zeroext i1 @_ZN2v88internal8compilereqERKNS1_14ConstFieldInfoES4_(%"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8), %"struct.v8::internal::compiler::ConstFieldInfo"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15LoadElimination27AbstractStateForEffectNodes3SetEPNS1_4NodeEPKNS2_13AbstractStateE(%"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"*, %"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::compiler::LoadElimination::AbstractState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %15, %8
  %17 = inttoptr i64 %13 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %16, label %25, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4, align 8
  %21 = add nuw nsw i64 %8, 1
  %22 = sub nsw i64 %21, %15
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %19, i64 %22, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %23, align 8
  br label %25

25:                                               ; preds = %3, %18
  %26 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %17, %3 ], [ %24, %18 ]
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %26, i64 %8
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %27, align 8
  ret void
}

declare dereferenceable(8) %"class.v8::internal::ZoneHandleSet"* @_ZN2v88internal8compiler14MapGuardMapsOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler15LoadElimination11UpdateStateEPNS1_4NodeEPKNS2_13AbstractStateE(%"class.v8::internal::compiler::LoadElimination"*, %"class.v8::internal::compiler::Node"* readonly, %"class.v8::internal::compiler::LoadElimination::AbstractState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AbstractState"*, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 16777215
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %5 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ugt i64 %16, %9
  br i1 %17, label %18, label %22

18:                                               ; preds = %3
  %19 = inttoptr i64 %14 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %19, i64 %9
  %21 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %20, align 8
  br label %22

22:                                               ; preds = %3, %18
  %23 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %21, %18 ], [ null, %3 ]
  %24 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %23, %2
  br i1 %24, label %53, label %25

25:                                               ; preds = %22
  %26 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %23, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %25
  %28 = tail call zeroext i1 @_ZNK2v88internal8compiler15LoadElimination13AbstractState6EqualsEPKS3_(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, %"class.v8::internal::compiler::LoadElimination::AbstractState"* nonnull %23)
  br i1 %28, label %53, label %29

29:                                               ; preds = %27
  %30 = load i32, i32* %6, align 4
  %31 = load i64, i64* %11, align 8
  %32 = load i64, i64* %13, align 8
  %33 = and i32 %30, 16777215
  %34 = zext i32 %33 to i64
  %35 = sub i64 %31, %32
  %36 = ashr exact i64 %35, 3
  br label %37

37:                                               ; preds = %29, %25
  %38 = phi i64 [ %36, %29 ], [ %16, %25 ]
  %39 = phi i64 [ %34, %29 ], [ %9, %25 ]
  %40 = phi i64 [ %32, %29 ], [ %14, %25 ]
  %41 = icmp ugt i64 %38, %39
  %42 = inttoptr i64 %40 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br i1 %41, label %50, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %5, i64 0, i32 0, i32 0
  %45 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* null, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4, align 8
  %46 = add nuw nsw i64 %39, 1
  %47 = sub nsw i64 %46, %38
  call void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"* %44, i64 %47, %"class.v8::internal::compiler::LoadElimination::AbstractState"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes", %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %48, align 8
  br label %50

50:                                               ; preds = %37, %43
  %51 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %42, %37 ], [ %49, %43 ]
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %51, i64 %39
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %52, align 8
  br label %53

53:                                               ; preds = %27, %22, %50
  %54 = phi %"class.v8::internal::compiler::Node"* [ %1, %50 ], [ null, %22 ], [ null, %27 ]
  ret %"class.v8::internal::compiler::Node"* %54
}

declare dereferenceable(32) %"class.v8::internal::compiler::CheckMapsParameters"* @_ZN2v88internal8compiler21CheckMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.v8::internal::ZoneHandleSet"* @_ZN2v88internal8compiler23CompareMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12TrueConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Factory"* @_ZNK2v88internal8compiler15LoadElimination7factoryEv(%"class.v8::internal::compiler::LoadElimination"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 1
  %5 = bitcast %"class.v8::internal::Isolate"** %4 to %"class.v8::internal::Factory"**
  %6 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %5, align 8
  ret %"class.v8::internal::Factory"* %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal8compiler15LoadElimination12FieldIndexOfEii(i32, i32) local_unnamed_addr #8 align 2 {
  %3 = sdiv i32 %0, 4
  %4 = add nsw i32 %3, -1
  %5 = sdiv i32 %1, 4
  %6 = add nsw i32 %5, %4
  %7 = icmp sgt i32 %6, 32
  %8 = select i1 %7, i32 -1, i32 %6
  %9 = select i1 %7, i32 -1, i32 %4
  %10 = zext i32 %8 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %9 to i64
  %13 = or i64 %11, %12
  ret i64 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(24) %"class.v8::internal::compiler::GrowFastElementsParameters"* @_ZN2v88internal8compiler28GrowFastElementsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ZoneHandleSetINS0_3MapEE6insertENS0_6HandleIS2_EEPNS0_4ZoneE(%"class.v8::internal::ZoneHandleSet"*, i64*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %1 to i64
  %5 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  switch i64 %8, label %974 [
    i64 1, label %9
    i64 0, label %10
  ]

9:                                                ; preds = %3
  store i64 %4, i64* %6, align 8
  br label %1980

10:                                               ; preds = %3
  %11 = inttoptr i64 %7 to i64*
  %12 = bitcast %"class.v8::internal::ZoneHandleSet"* %0 to i64**
  %13 = icmp eq i64* %11, %1
  br i1 %13, label %1980, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %16
  %20 = icmp ult i64 %19, 32
  br i1 %20, label %21, label %23, !prof !4

21:                                               ; preds = %14
  %22 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #14
  br label %25

23:                                               ; preds = %14
  %24 = add i64 %16, 32
  store i64 %24, i64* %15, align 8
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi i64 [ %22, %21 ], [ %16, %23 ]
  %27 = inttoptr i64 %26 to i8*
  %28 = inttoptr i64 %26 to %"class.v8::internal::ZoneVector.1336"*
  %29 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 2, i32 1
  %30 = bitcast %"struct.std::__1::__compressed_pair_elem.1340"* %29 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #14
  store i64 %5, i64* %30, align 8
  %31 = load i64*, i64** %12, align 8
  %32 = icmp ult i64* %31, %1
  br i1 %32, label %33, label %501

33:                                               ; preds = %25
  %34 = ptrtoint i64* %31 to i64
  %35 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 1
  %36 = load i64**, i64*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = load i64**, i64*** %37, align 8
  %39 = icmp ult i64** %36, %38
  %40 = ptrtoint i64** %38 to i64
  br i1 %39, label %41, label %48

41:                                               ; preds = %33
  %42 = bitcast i64** %36 to i64*
  store i64 %34, i64* %42, align 8
  %43 = getelementptr inbounds i64*, i64** %36, i64 1
  %44 = ptrtoint i64** %43 to i64
  %45 = bitcast i64*** %35 to i64*
  store i64 %44, i64* %45, align 8
  %46 = load i64**, i64*** %37, align 8
  %47 = ptrtoint i64** %46 to i64
  br label %269

48:                                               ; preds = %33
  %49 = ptrtoint i64** %36 to i64
  %50 = bitcast i64*** %35 to i64*
  %51 = inttoptr i64 %26 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %49, %52
  %54 = ashr exact i64 %53, 3
  %55 = add nsw i64 %54, 1
  %56 = icmp ugt i64 %55, 268435455
  br i1 %56, label %57, label %59

57:                                               ; preds = %48
  %58 = inttoptr i64 %26 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #15
  unreachable

59:                                               ; preds = %48
  %60 = bitcast i64*** %37 to i64*
  %61 = sub i64 %40, %52
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 134217727
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = ashr exact i64 %61, 2
  %66 = icmp ult i64 %65, %55
  %67 = select i1 %66, i64 %55, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %64, %59
  %70 = phi i64 [ %67, %64 ], [ 268435455, %59 ]
  %71 = shl i64 %70, 3
  %72 = load i64, i64* %15, align 8
  %73 = load i64, i64* %17, align 8
  %74 = sub i64 %73, %72
  %75 = icmp ugt i64 %71, %74
  br i1 %75, label %76, label %78, !prof !4

76:                                               ; preds = %69
  %77 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %71) #14
  br label %80

78:                                               ; preds = %69
  %79 = add i64 %72, %71
  store i64 %79, i64* %15, align 8
  br label %80

80:                                               ; preds = %78, %76
  %81 = phi i64 [ %77, %76 ], [ %72, %78 ]
  %82 = inttoptr i64 %81 to i64**
  br label %83

83:                                               ; preds = %80, %64
  %84 = phi i64 [ %70, %80 ], [ 0, %64 ]
  %85 = phi i64** [ %82, %80 ], [ null, %64 ]
  %86 = getelementptr inbounds i64*, i64** %85, i64 %54
  %87 = getelementptr inbounds i64*, i64** %85, i64 %84
  %88 = ptrtoint i64** %87 to i64
  %89 = bitcast i64** %86 to i64*
  store i64 %34, i64* %89, align 8
  %90 = getelementptr inbounds i64*, i64** %86, i64 1
  %91 = ptrtoint i64** %90 to i64
  %92 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 0
  %93 = load i64**, i64*** %92, align 8
  %94 = ptrtoint i64** %93 to i64
  %95 = load i64**, i64*** %35, align 8
  %96 = icmp eq i64** %95, %93
  br i1 %96, label %266, label %97

97:                                               ; preds = %83
  %98 = getelementptr i64*, i64** %95, i64 -1
  %99 = ptrtoint i64** %98 to i64
  %100 = sub i64 %99, %94
  %101 = lshr i64 %100, 3
  %102 = add nuw nsw i64 %101, 1
  %103 = icmp ult i64 %102, 4
  br i1 %103, label %196, label %104

104:                                              ; preds = %97
  %105 = getelementptr i64*, i64** %95, i64 -1
  %106 = ptrtoint i64** %105 to i64
  %107 = sub i64 %106, %94
  %108 = lshr i64 %107, 3
  %109 = xor i64 %108, -1
  %110 = add nsw i64 %54, %109
  %111 = getelementptr i64*, i64** %85, i64 %110
  %112 = xor i64 %108, -1
  %113 = getelementptr i64*, i64** %95, i64 %112
  %114 = icmp ult i64** %111, %95
  %115 = icmp ult i64** %113, %86
  %116 = and i1 %114, %115
  br i1 %116, label %196, label %117

117:                                              ; preds = %104
  %118 = and i64 %102, 4611686018427387900
  %119 = sub nsw i64 0, %118
  %120 = getelementptr i64*, i64** %86, i64 %119
  %121 = sub nsw i64 0, %118
  %122 = getelementptr i64*, i64** %95, i64 %121
  %123 = add nsw i64 %118, -4
  %124 = lshr exact i64 %123, 2
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 1
  %127 = icmp eq i64 %123, 0
  br i1 %127, label %172, label %128

128:                                              ; preds = %117
  %129 = sub nuw nsw i64 %125, %126
  %130 = getelementptr i64*, i64** %86, i64 -1
  %131 = getelementptr i64*, i64** %95, i64 -1
  %132 = getelementptr i64*, i64** %86, i64 -1
  %133 = getelementptr i64*, i64** %95, i64 -1
  br label %134

134:                                              ; preds = %134, %128
  %135 = phi i64 [ 0, %128 ], [ %169, %134 ]
  %136 = phi i64 [ %129, %128 ], [ %170, %134 ]
  %137 = sub i64 0, %135
  %138 = sub i64 0, %135
  %139 = getelementptr inbounds i64*, i64** %130, i64 %137
  %140 = getelementptr inbounds i64*, i64** %131, i64 %138
  %141 = getelementptr inbounds i64*, i64** %140, i64 -1
  %142 = bitcast i64** %141 to <2 x i64>*
  %143 = load <2 x i64>, <2 x i64>* %142, align 8, !alias.scope !32
  %144 = getelementptr inbounds i64*, i64** %140, i64 -2
  %145 = getelementptr inbounds i64*, i64** %144, i64 -1
  %146 = bitcast i64** %145 to <2 x i64>*
  %147 = load <2 x i64>, <2 x i64>* %146, align 8, !alias.scope !32
  %148 = getelementptr inbounds i64*, i64** %139, i64 -1
  %149 = bitcast i64** %148 to <2 x i64>*
  store <2 x i64> %143, <2 x i64>* %149, align 8, !alias.scope !35, !noalias !32
  %150 = getelementptr inbounds i64*, i64** %139, i64 -2
  %151 = getelementptr inbounds i64*, i64** %150, i64 -1
  %152 = bitcast i64** %151 to <2 x i64>*
  store <2 x i64> %147, <2 x i64>* %152, align 8, !alias.scope !35, !noalias !32
  %153 = sub nuw nsw i64 -4, %135
  %154 = sub nuw nsw i64 -4, %135
  %155 = getelementptr inbounds i64*, i64** %132, i64 %153
  %156 = getelementptr inbounds i64*, i64** %133, i64 %154
  %157 = getelementptr inbounds i64*, i64** %156, i64 -1
  %158 = bitcast i64** %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8, !alias.scope !32
  %160 = getelementptr inbounds i64*, i64** %156, i64 -2
  %161 = getelementptr inbounds i64*, i64** %160, i64 -1
  %162 = bitcast i64** %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !32
  %164 = getelementptr inbounds i64*, i64** %155, i64 -1
  %165 = bitcast i64** %164 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %165, align 8, !alias.scope !35, !noalias !32
  %166 = getelementptr inbounds i64*, i64** %155, i64 -2
  %167 = getelementptr inbounds i64*, i64** %166, i64 -1
  %168 = bitcast i64** %167 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %168, align 8, !alias.scope !35, !noalias !32
  %169 = add i64 %135, 8
  %170 = add i64 %136, -2
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %134, !llvm.loop !37

172:                                              ; preds = %134, %117
  %173 = phi i64 [ 0, %117 ], [ %169, %134 ]
  %174 = icmp eq i64 %126, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %172
  %176 = sub i64 0, %173
  %177 = getelementptr i64*, i64** %86, i64 -1
  %178 = sub i64 0, %173
  %179 = getelementptr i64*, i64** %95, i64 -1
  %180 = getelementptr inbounds i64*, i64** %177, i64 %176
  %181 = getelementptr inbounds i64*, i64** %179, i64 %178
  %182 = getelementptr inbounds i64*, i64** %181, i64 -1
  %183 = bitcast i64** %182 to <2 x i64>*
  %184 = load <2 x i64>, <2 x i64>* %183, align 8, !alias.scope !32
  %185 = getelementptr inbounds i64*, i64** %181, i64 -2
  %186 = getelementptr inbounds i64*, i64** %185, i64 -1
  %187 = bitcast i64** %186 to <2 x i64>*
  %188 = load <2 x i64>, <2 x i64>* %187, align 8, !alias.scope !32
  %189 = getelementptr inbounds i64*, i64** %180, i64 -1
  %190 = bitcast i64** %189 to <2 x i64>*
  store <2 x i64> %184, <2 x i64>* %190, align 8, !alias.scope !35, !noalias !32
  %191 = getelementptr inbounds i64*, i64** %180, i64 -2
  %192 = getelementptr inbounds i64*, i64** %191, i64 -1
  %193 = bitcast i64** %192 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %193, align 8, !alias.scope !35, !noalias !32
  br label %194

194:                                              ; preds = %172, %175
  %195 = icmp eq i64 %102, %118
  br i1 %195, label %266, label %196

196:                                              ; preds = %194, %104, %97
  %197 = phi i64** [ %86, %104 ], [ %86, %97 ], [ %120, %194 ]
  %198 = phi i64** [ %95, %104 ], [ %95, %97 ], [ %122, %194 ]
  %199 = getelementptr i64*, i64** %198, i64 -1
  %200 = ptrtoint i64** %199 to i64
  %201 = sub i64 %200, %94
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 7
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %217, label %206

206:                                              ; preds = %196, %206
  %207 = phi i64** [ %210, %206 ], [ %197, %196 ]
  %208 = phi i64** [ %211, %206 ], [ %198, %196 ]
  %209 = phi i64 [ %215, %206 ], [ %204, %196 ]
  %210 = getelementptr inbounds i64*, i64** %207, i64 -1
  %211 = getelementptr inbounds i64*, i64** %208, i64 -1
  %212 = bitcast i64** %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast i64** %210 to i64*
  store i64 %213, i64* %214, align 8
  %215 = add i64 %209, -1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %206, !llvm.loop !39

217:                                              ; preds = %206, %196
  %218 = phi i64** [ undef, %196 ], [ %210, %206 ]
  %219 = phi i64** [ %197, %196 ], [ %210, %206 ]
  %220 = phi i64** [ %198, %196 ], [ %211, %206 ]
  %221 = icmp ult i64 %201, 56
  br i1 %221, label %266, label %222

222:                                              ; preds = %217, %222
  %223 = phi i64** [ %260, %222 ], [ %219, %217 ]
  %224 = phi i64** [ %261, %222 ], [ %220, %217 ]
  %225 = getelementptr inbounds i64*, i64** %223, i64 -1
  %226 = getelementptr inbounds i64*, i64** %224, i64 -1
  %227 = bitcast i64** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast i64** %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds i64*, i64** %223, i64 -2
  %231 = getelementptr inbounds i64*, i64** %224, i64 -2
  %232 = bitcast i64** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast i64** %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds i64*, i64** %223, i64 -3
  %236 = getelementptr inbounds i64*, i64** %224, i64 -3
  %237 = bitcast i64** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast i64** %235 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds i64*, i64** %223, i64 -4
  %241 = getelementptr inbounds i64*, i64** %224, i64 -4
  %242 = bitcast i64** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast i64** %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds i64*, i64** %223, i64 -5
  %246 = getelementptr inbounds i64*, i64** %224, i64 -5
  %247 = bitcast i64** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast i64** %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds i64*, i64** %223, i64 -6
  %251 = getelementptr inbounds i64*, i64** %224, i64 -6
  %252 = bitcast i64** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast i64** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds i64*, i64** %223, i64 -7
  %256 = getelementptr inbounds i64*, i64** %224, i64 -7
  %257 = bitcast i64** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast i64** %255 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds i64*, i64** %223, i64 -8
  %261 = getelementptr inbounds i64*, i64** %224, i64 -8
  %262 = bitcast i64** %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast i64** %260 to i64*
  store i64 %263, i64* %264, align 8
  %265 = icmp eq i64** %261, %93
  br i1 %265, label %266, label %222, !llvm.loop !41

266:                                              ; preds = %217, %222, %194, %83
  %267 = phi i64** [ %86, %83 ], [ %120, %194 ], [ %218, %217 ], [ %260, %222 ]
  %268 = ptrtoint i64** %267 to i64
  store i64 %268, i64* %51, align 8
  store i64 %91, i64* %50, align 8
  store i64 %88, i64* %60, align 8
  br label %269

269:                                              ; preds = %41, %266
  %270 = phi i64 [ %47, %41 ], [ %88, %266 ]
  %271 = phi i64** [ %46, %41 ], [ %87, %266 ]
  %272 = phi i64** [ %43, %41 ], [ %90, %266 ]
  %273 = icmp eq i64** %272, %271
  br i1 %273, label %279, label %274

274:                                              ; preds = %269
  %275 = bitcast i64** %272 to i64*
  store i64 %4, i64* %275, align 8
  %276 = getelementptr inbounds i64*, i64** %272, i64 1
  %277 = ptrtoint i64** %276 to i64
  %278 = bitcast i64*** %35 to i64*
  store i64 %277, i64* %278, align 8
  br label %972

279:                                              ; preds = %269
  %280 = bitcast i64*** %35 to i64*
  %281 = inttoptr i64 %26 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = sub i64 %270, %282
  %284 = ashr exact i64 %283, 3
  %285 = add nsw i64 %284, 1
  %286 = icmp ugt i64 %285, 268435455
  br i1 %286, label %287, label %289

287:                                              ; preds = %279
  %288 = inttoptr i64 %26 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %288) #15
  unreachable

289:                                              ; preds = %279
  %290 = bitcast i64*** %37 to i64*
  %291 = icmp ult i64 %284, 134217727
  br i1 %291, label %292, label %297

292:                                              ; preds = %289
  %293 = ashr exact i64 %283, 2
  %294 = icmp ult i64 %293, %285
  %295 = select i1 %294, i64 %285, i64 %293
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %315, label %297

297:                                              ; preds = %292, %289
  %298 = phi i64 [ %295, %292 ], [ 268435455, %289 ]
  %299 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %300 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %299, align 8
  %301 = shl i64 %298, 3
  %302 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %300, i64 0, i32 2
  %303 = load i64, i64* %302, align 8
  %304 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %300, i64 0, i32 3
  %305 = load i64, i64* %304, align 8
  %306 = sub i64 %305, %303
  %307 = icmp ugt i64 %301, %306
  br i1 %307, label %308, label %310, !prof !4

308:                                              ; preds = %297
  %309 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %300, i64 %301) #14
  br label %312

310:                                              ; preds = %297
  %311 = add i64 %303, %301
  store i64 %311, i64* %302, align 8
  br label %312

312:                                              ; preds = %310, %308
  %313 = phi i64 [ %309, %308 ], [ %303, %310 ]
  %314 = inttoptr i64 %313 to i64**
  br label %315

315:                                              ; preds = %312, %292
  %316 = phi i64 [ %298, %312 ], [ 0, %292 ]
  %317 = phi i64** [ %314, %312 ], [ null, %292 ]
  %318 = getelementptr inbounds i64*, i64** %317, i64 %284
  %319 = getelementptr inbounds i64*, i64** %317, i64 %316
  %320 = ptrtoint i64** %319 to i64
  %321 = bitcast i64** %318 to i64*
  store i64 %4, i64* %321, align 8
  %322 = getelementptr inbounds i64*, i64** %318, i64 1
  %323 = ptrtoint i64** %322 to i64
  %324 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 0
  %325 = load i64**, i64*** %324, align 8
  %326 = ptrtoint i64** %325 to i64
  %327 = load i64**, i64*** %35, align 8
  %328 = icmp eq i64** %327, %325
  br i1 %328, label %498, label %329

329:                                              ; preds = %315
  %330 = getelementptr i64*, i64** %327, i64 -1
  %331 = ptrtoint i64** %330 to i64
  %332 = sub i64 %331, %326
  %333 = lshr i64 %332, 3
  %334 = add nuw nsw i64 %333, 1
  %335 = icmp ult i64 %334, 4
  br i1 %335, label %428, label %336

336:                                              ; preds = %329
  %337 = getelementptr i64*, i64** %327, i64 -1
  %338 = ptrtoint i64** %337 to i64
  %339 = sub i64 %338, %326
  %340 = lshr i64 %339, 3
  %341 = xor i64 %340, -1
  %342 = add nsw i64 %284, %341
  %343 = getelementptr i64*, i64** %317, i64 %342
  %344 = xor i64 %340, -1
  %345 = getelementptr i64*, i64** %327, i64 %344
  %346 = icmp ult i64** %343, %327
  %347 = icmp ult i64** %345, %318
  %348 = and i1 %346, %347
  br i1 %348, label %428, label %349

349:                                              ; preds = %336
  %350 = and i64 %334, 4611686018427387900
  %351 = sub nsw i64 0, %350
  %352 = getelementptr i64*, i64** %318, i64 %351
  %353 = sub nsw i64 0, %350
  %354 = getelementptr i64*, i64** %327, i64 %353
  %355 = add nsw i64 %350, -4
  %356 = lshr exact i64 %355, 2
  %357 = add nuw nsw i64 %356, 1
  %358 = and i64 %357, 1
  %359 = icmp eq i64 %355, 0
  br i1 %359, label %406, label %360

360:                                              ; preds = %349
  %361 = sub nuw nsw i64 %357, %358
  %362 = getelementptr i64*, i64** %318, i64 -1
  %363 = getelementptr i64*, i64** %327, i64 -1
  %364 = getelementptr i64*, i64** %318, i64 -1
  %365 = getelementptr i64*, i64** %327, i64 -1
  br label %366

366:                                              ; preds = %366, %360
  %367 = phi i64 [ 0, %360 ], [ %401, %366 ]
  %368 = phi i64 [ %361, %360 ], [ %402, %366 ]
  %369 = sub i64 0, %367
  %370 = sub i64 0, %367
  %371 = getelementptr inbounds i64*, i64** %362, i64 %369
  %372 = getelementptr inbounds i64*, i64** %363, i64 %370
  %373 = getelementptr inbounds i64*, i64** %372, i64 -1
  %374 = bitcast i64** %373 to <2 x i64>*
  %375 = load <2 x i64>, <2 x i64>* %374, align 8, !alias.scope !42
  %376 = getelementptr inbounds i64*, i64** %372, i64 -2
  %377 = getelementptr inbounds i64*, i64** %376, i64 -1
  %378 = bitcast i64** %377 to <2 x i64>*
  %379 = load <2 x i64>, <2 x i64>* %378, align 8, !alias.scope !42
  %380 = getelementptr inbounds i64*, i64** %371, i64 -1
  %381 = bitcast i64** %380 to <2 x i64>*
  store <2 x i64> %375, <2 x i64>* %381, align 8, !alias.scope !45, !noalias !42
  %382 = getelementptr inbounds i64*, i64** %371, i64 -2
  %383 = getelementptr inbounds i64*, i64** %382, i64 -1
  %384 = bitcast i64** %383 to <2 x i64>*
  store <2 x i64> %379, <2 x i64>* %384, align 8, !alias.scope !45, !noalias !42
  %385 = sub nuw nsw i64 -4, %367
  %386 = sub nuw nsw i64 -4, %367
  %387 = getelementptr inbounds i64*, i64** %364, i64 %385
  %388 = getelementptr inbounds i64*, i64** %365, i64 %386
  %389 = getelementptr inbounds i64*, i64** %388, i64 -1
  %390 = bitcast i64** %389 to <2 x i64>*
  %391 = load <2 x i64>, <2 x i64>* %390, align 8, !alias.scope !42
  %392 = getelementptr inbounds i64*, i64** %388, i64 -2
  %393 = getelementptr inbounds i64*, i64** %392, i64 -1
  %394 = bitcast i64** %393 to <2 x i64>*
  %395 = load <2 x i64>, <2 x i64>* %394, align 8, !alias.scope !42
  %396 = getelementptr inbounds i64*, i64** %387, i64 -1
  %397 = bitcast i64** %396 to <2 x i64>*
  store <2 x i64> %391, <2 x i64>* %397, align 8, !alias.scope !45, !noalias !42
  %398 = getelementptr inbounds i64*, i64** %387, i64 -2
  %399 = getelementptr inbounds i64*, i64** %398, i64 -1
  %400 = bitcast i64** %399 to <2 x i64>*
  store <2 x i64> %395, <2 x i64>* %400, align 8, !alias.scope !45, !noalias !42
  %401 = add i64 %367, 8
  %402 = add i64 %368, -2
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %366, !llvm.loop !47

404:                                              ; preds = %366
  %405 = sub nuw nsw i64 -8, %367
  br label %406

406:                                              ; preds = %404, %349
  %407 = phi i64 [ 0, %349 ], [ %405, %404 ]
  %408 = icmp eq i64 %358, 0
  br i1 %408, label %426, label %409

409:                                              ; preds = %406
  %410 = getelementptr i64*, i64** %318, i64 -1
  %411 = getelementptr i64*, i64** %327, i64 -1
  %412 = getelementptr inbounds i64*, i64** %410, i64 %407
  %413 = getelementptr inbounds i64*, i64** %411, i64 %407
  %414 = getelementptr inbounds i64*, i64** %413, i64 -1
  %415 = bitcast i64** %414 to <2 x i64>*
  %416 = load <2 x i64>, <2 x i64>* %415, align 8, !alias.scope !42
  %417 = getelementptr inbounds i64*, i64** %413, i64 -2
  %418 = getelementptr inbounds i64*, i64** %417, i64 -1
  %419 = bitcast i64** %418 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8, !alias.scope !42
  %421 = getelementptr inbounds i64*, i64** %412, i64 -1
  %422 = bitcast i64** %421 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %422, align 8, !alias.scope !45, !noalias !42
  %423 = getelementptr inbounds i64*, i64** %412, i64 -2
  %424 = getelementptr inbounds i64*, i64** %423, i64 -1
  %425 = bitcast i64** %424 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %425, align 8, !alias.scope !45, !noalias !42
  br label %426

426:                                              ; preds = %406, %409
  %427 = icmp eq i64 %334, %350
  br i1 %427, label %498, label %428

428:                                              ; preds = %426, %336, %329
  %429 = phi i64** [ %318, %336 ], [ %318, %329 ], [ %352, %426 ]
  %430 = phi i64** [ %327, %336 ], [ %327, %329 ], [ %354, %426 ]
  %431 = getelementptr i64*, i64** %430, i64 -1
  %432 = ptrtoint i64** %431 to i64
  %433 = sub i64 %432, %326
  %434 = lshr i64 %433, 3
  %435 = add nuw nsw i64 %434, 1
  %436 = and i64 %435, 7
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %449, label %438

438:                                              ; preds = %428, %438
  %439 = phi i64** [ %442, %438 ], [ %429, %428 ]
  %440 = phi i64** [ %443, %438 ], [ %430, %428 ]
  %441 = phi i64 [ %447, %438 ], [ %436, %428 ]
  %442 = getelementptr inbounds i64*, i64** %439, i64 -1
  %443 = getelementptr inbounds i64*, i64** %440, i64 -1
  %444 = bitcast i64** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast i64** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = add i64 %441, -1
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %449, label %438, !llvm.loop !48

449:                                              ; preds = %438, %428
  %450 = phi i64** [ undef, %428 ], [ %442, %438 ]
  %451 = phi i64** [ %429, %428 ], [ %442, %438 ]
  %452 = phi i64** [ %430, %428 ], [ %443, %438 ]
  %453 = icmp ult i64 %433, 56
  br i1 %453, label %498, label %454

454:                                              ; preds = %449, %454
  %455 = phi i64** [ %492, %454 ], [ %451, %449 ]
  %456 = phi i64** [ %493, %454 ], [ %452, %449 ]
  %457 = getelementptr inbounds i64*, i64** %455, i64 -1
  %458 = getelementptr inbounds i64*, i64** %456, i64 -1
  %459 = bitcast i64** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast i64** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds i64*, i64** %455, i64 -2
  %463 = getelementptr inbounds i64*, i64** %456, i64 -2
  %464 = bitcast i64** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast i64** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds i64*, i64** %455, i64 -3
  %468 = getelementptr inbounds i64*, i64** %456, i64 -3
  %469 = bitcast i64** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast i64** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds i64*, i64** %455, i64 -4
  %473 = getelementptr inbounds i64*, i64** %456, i64 -4
  %474 = bitcast i64** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast i64** %472 to i64*
  store i64 %475, i64* %476, align 8
  %477 = getelementptr inbounds i64*, i64** %455, i64 -5
  %478 = getelementptr inbounds i64*, i64** %456, i64 -5
  %479 = bitcast i64** %478 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = bitcast i64** %477 to i64*
  store i64 %480, i64* %481, align 8
  %482 = getelementptr inbounds i64*, i64** %455, i64 -6
  %483 = getelementptr inbounds i64*, i64** %456, i64 -6
  %484 = bitcast i64** %483 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = bitcast i64** %482 to i64*
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds i64*, i64** %455, i64 -7
  %488 = getelementptr inbounds i64*, i64** %456, i64 -7
  %489 = bitcast i64** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = bitcast i64** %487 to i64*
  store i64 %490, i64* %491, align 8
  %492 = getelementptr inbounds i64*, i64** %455, i64 -8
  %493 = getelementptr inbounds i64*, i64** %456, i64 -8
  %494 = bitcast i64** %493 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = bitcast i64** %492 to i64*
  store i64 %495, i64* %496, align 8
  %497 = icmp eq i64** %493, %325
  br i1 %497, label %498, label %454, !llvm.loop !49

498:                                              ; preds = %449, %454, %426, %315
  %499 = phi i64** [ %318, %315 ], [ %352, %426 ], [ %450, %449 ], [ %492, %454 ]
  %500 = ptrtoint i64** %499 to i64
  store i64 %500, i64* %281, align 8
  store i64 %323, i64* %280, align 8
  store i64 %320, i64* %290, align 8
  br label %972

501:                                              ; preds = %25
  %502 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 1
  %503 = load i64**, i64*** %502, align 8
  %504 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %505 = load i64**, i64*** %504, align 8
  %506 = icmp eq i64** %503, %505
  %507 = ptrtoint i64** %505 to i64
  br i1 %506, label %515, label %508

508:                                              ; preds = %501
  %509 = bitcast i64** %503 to i64*
  store i64 %4, i64* %509, align 8
  %510 = getelementptr inbounds i64*, i64** %503, i64 1
  %511 = ptrtoint i64** %510 to i64
  %512 = bitcast i64*** %502 to i64*
  store i64 %511, i64* %512, align 8
  %513 = load i64**, i64*** %504, align 8
  %514 = ptrtoint i64** %513 to i64
  br label %736

515:                                              ; preds = %501
  %516 = ptrtoint i64** %503 to i64
  %517 = bitcast i64*** %502 to i64*
  %518 = inttoptr i64 %26 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = sub i64 %516, %519
  %521 = ashr exact i64 %520, 3
  %522 = add nsw i64 %521, 1
  %523 = icmp ugt i64 %522, 268435455
  br i1 %523, label %524, label %526

524:                                              ; preds = %515
  %525 = inttoptr i64 %26 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %525) #15
  unreachable

526:                                              ; preds = %515
  %527 = bitcast i64*** %504 to i64*
  %528 = sub i64 %507, %519
  %529 = ashr exact i64 %528, 3
  %530 = icmp ult i64 %529, 134217727
  br i1 %530, label %531, label %536

531:                                              ; preds = %526
  %532 = ashr exact i64 %528, 2
  %533 = icmp ult i64 %532, %522
  %534 = select i1 %533, i64 %522, i64 %532
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %550, label %536

536:                                              ; preds = %531, %526
  %537 = phi i64 [ %534, %531 ], [ 268435455, %526 ]
  %538 = shl i64 %537, 3
  %539 = load i64, i64* %15, align 8
  %540 = load i64, i64* %17, align 8
  %541 = sub i64 %540, %539
  %542 = icmp ugt i64 %538, %541
  br i1 %542, label %543, label %545, !prof !4

543:                                              ; preds = %536
  %544 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %538) #14
  br label %547

545:                                              ; preds = %536
  %546 = add i64 %539, %538
  store i64 %546, i64* %15, align 8
  br label %547

547:                                              ; preds = %545, %543
  %548 = phi i64 [ %544, %543 ], [ %539, %545 ]
  %549 = inttoptr i64 %548 to i64**
  br label %550

550:                                              ; preds = %547, %531
  %551 = phi i64 [ %537, %547 ], [ 0, %531 ]
  %552 = phi i64** [ %549, %547 ], [ null, %531 ]
  %553 = getelementptr inbounds i64*, i64** %552, i64 %521
  %554 = getelementptr inbounds i64*, i64** %552, i64 %551
  %555 = ptrtoint i64** %554 to i64
  %556 = bitcast i64** %553 to i64*
  store i64 %4, i64* %556, align 8
  %557 = getelementptr inbounds i64*, i64** %553, i64 1
  %558 = ptrtoint i64** %557 to i64
  %559 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 0
  %560 = load i64**, i64*** %559, align 8
  %561 = ptrtoint i64** %560 to i64
  %562 = load i64**, i64*** %502, align 8
  %563 = icmp eq i64** %562, %560
  br i1 %563, label %733, label %564

564:                                              ; preds = %550
  %565 = getelementptr i64*, i64** %562, i64 -1
  %566 = ptrtoint i64** %565 to i64
  %567 = sub i64 %566, %561
  %568 = lshr i64 %567, 3
  %569 = add nuw nsw i64 %568, 1
  %570 = icmp ult i64 %569, 4
  br i1 %570, label %663, label %571

571:                                              ; preds = %564
  %572 = getelementptr i64*, i64** %562, i64 -1
  %573 = ptrtoint i64** %572 to i64
  %574 = sub i64 %573, %561
  %575 = lshr i64 %574, 3
  %576 = xor i64 %575, -1
  %577 = add nsw i64 %521, %576
  %578 = getelementptr i64*, i64** %552, i64 %577
  %579 = xor i64 %575, -1
  %580 = getelementptr i64*, i64** %562, i64 %579
  %581 = icmp ult i64** %578, %562
  %582 = icmp ult i64** %580, %553
  %583 = and i1 %581, %582
  br i1 %583, label %663, label %584

584:                                              ; preds = %571
  %585 = and i64 %569, 4611686018427387900
  %586 = sub nsw i64 0, %585
  %587 = getelementptr i64*, i64** %553, i64 %586
  %588 = sub nsw i64 0, %585
  %589 = getelementptr i64*, i64** %562, i64 %588
  %590 = add nsw i64 %585, -4
  %591 = lshr exact i64 %590, 2
  %592 = add nuw nsw i64 %591, 1
  %593 = and i64 %592, 1
  %594 = icmp eq i64 %590, 0
  br i1 %594, label %639, label %595

595:                                              ; preds = %584
  %596 = sub nuw nsw i64 %592, %593
  %597 = getelementptr i64*, i64** %553, i64 -1
  %598 = getelementptr i64*, i64** %562, i64 -1
  %599 = getelementptr i64*, i64** %553, i64 -1
  %600 = getelementptr i64*, i64** %562, i64 -1
  br label %601

601:                                              ; preds = %601, %595
  %602 = phi i64 [ 0, %595 ], [ %636, %601 ]
  %603 = phi i64 [ %596, %595 ], [ %637, %601 ]
  %604 = sub i64 0, %602
  %605 = sub i64 0, %602
  %606 = getelementptr inbounds i64*, i64** %597, i64 %604
  %607 = getelementptr inbounds i64*, i64** %598, i64 %605
  %608 = getelementptr inbounds i64*, i64** %607, i64 -1
  %609 = bitcast i64** %608 to <2 x i64>*
  %610 = load <2 x i64>, <2 x i64>* %609, align 8, !alias.scope !50
  %611 = getelementptr inbounds i64*, i64** %607, i64 -2
  %612 = getelementptr inbounds i64*, i64** %611, i64 -1
  %613 = bitcast i64** %612 to <2 x i64>*
  %614 = load <2 x i64>, <2 x i64>* %613, align 8, !alias.scope !50
  %615 = getelementptr inbounds i64*, i64** %606, i64 -1
  %616 = bitcast i64** %615 to <2 x i64>*
  store <2 x i64> %610, <2 x i64>* %616, align 8, !alias.scope !53, !noalias !50
  %617 = getelementptr inbounds i64*, i64** %606, i64 -2
  %618 = getelementptr inbounds i64*, i64** %617, i64 -1
  %619 = bitcast i64** %618 to <2 x i64>*
  store <2 x i64> %614, <2 x i64>* %619, align 8, !alias.scope !53, !noalias !50
  %620 = sub nuw nsw i64 -4, %602
  %621 = sub nuw nsw i64 -4, %602
  %622 = getelementptr inbounds i64*, i64** %599, i64 %620
  %623 = getelementptr inbounds i64*, i64** %600, i64 %621
  %624 = getelementptr inbounds i64*, i64** %623, i64 -1
  %625 = bitcast i64** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !50
  %627 = getelementptr inbounds i64*, i64** %623, i64 -2
  %628 = getelementptr inbounds i64*, i64** %627, i64 -1
  %629 = bitcast i64** %628 to <2 x i64>*
  %630 = load <2 x i64>, <2 x i64>* %629, align 8, !alias.scope !50
  %631 = getelementptr inbounds i64*, i64** %622, i64 -1
  %632 = bitcast i64** %631 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %632, align 8, !alias.scope !53, !noalias !50
  %633 = getelementptr inbounds i64*, i64** %622, i64 -2
  %634 = getelementptr inbounds i64*, i64** %633, i64 -1
  %635 = bitcast i64** %634 to <2 x i64>*
  store <2 x i64> %630, <2 x i64>* %635, align 8, !alias.scope !53, !noalias !50
  %636 = add i64 %602, 8
  %637 = add i64 %603, -2
  %638 = icmp eq i64 %637, 0
  br i1 %638, label %639, label %601, !llvm.loop !55

639:                                              ; preds = %601, %584
  %640 = phi i64 [ 0, %584 ], [ %636, %601 ]
  %641 = icmp eq i64 %593, 0
  br i1 %641, label %661, label %642

642:                                              ; preds = %639
  %643 = sub i64 0, %640
  %644 = getelementptr i64*, i64** %553, i64 -1
  %645 = sub i64 0, %640
  %646 = getelementptr i64*, i64** %562, i64 -1
  %647 = getelementptr inbounds i64*, i64** %644, i64 %643
  %648 = getelementptr inbounds i64*, i64** %646, i64 %645
  %649 = getelementptr inbounds i64*, i64** %648, i64 -1
  %650 = bitcast i64** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !50
  %652 = getelementptr inbounds i64*, i64** %648, i64 -2
  %653 = getelementptr inbounds i64*, i64** %652, i64 -1
  %654 = bitcast i64** %653 to <2 x i64>*
  %655 = load <2 x i64>, <2 x i64>* %654, align 8, !alias.scope !50
  %656 = getelementptr inbounds i64*, i64** %647, i64 -1
  %657 = bitcast i64** %656 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %657, align 8, !alias.scope !53, !noalias !50
  %658 = getelementptr inbounds i64*, i64** %647, i64 -2
  %659 = getelementptr inbounds i64*, i64** %658, i64 -1
  %660 = bitcast i64** %659 to <2 x i64>*
  store <2 x i64> %655, <2 x i64>* %660, align 8, !alias.scope !53, !noalias !50
  br label %661

661:                                              ; preds = %639, %642
  %662 = icmp eq i64 %569, %585
  br i1 %662, label %733, label %663

663:                                              ; preds = %661, %571, %564
  %664 = phi i64** [ %553, %571 ], [ %553, %564 ], [ %587, %661 ]
  %665 = phi i64** [ %562, %571 ], [ %562, %564 ], [ %589, %661 ]
  %666 = getelementptr i64*, i64** %665, i64 -1
  %667 = ptrtoint i64** %666 to i64
  %668 = sub i64 %667, %561
  %669 = lshr i64 %668, 3
  %670 = add nuw nsw i64 %669, 1
  %671 = and i64 %670, 7
  %672 = icmp eq i64 %671, 0
  br i1 %672, label %684, label %673

673:                                              ; preds = %663, %673
  %674 = phi i64** [ %677, %673 ], [ %664, %663 ]
  %675 = phi i64** [ %678, %673 ], [ %665, %663 ]
  %676 = phi i64 [ %682, %673 ], [ %671, %663 ]
  %677 = getelementptr inbounds i64*, i64** %674, i64 -1
  %678 = getelementptr inbounds i64*, i64** %675, i64 -1
  %679 = bitcast i64** %678 to i64*
  %680 = load i64, i64* %679, align 8
  %681 = bitcast i64** %677 to i64*
  store i64 %680, i64* %681, align 8
  %682 = add i64 %676, -1
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %684, label %673, !llvm.loop !56

684:                                              ; preds = %673, %663
  %685 = phi i64** [ undef, %663 ], [ %677, %673 ]
  %686 = phi i64** [ %664, %663 ], [ %677, %673 ]
  %687 = phi i64** [ %665, %663 ], [ %678, %673 ]
  %688 = icmp ult i64 %668, 56
  br i1 %688, label %733, label %689

689:                                              ; preds = %684, %689
  %690 = phi i64** [ %727, %689 ], [ %686, %684 ]
  %691 = phi i64** [ %728, %689 ], [ %687, %684 ]
  %692 = getelementptr inbounds i64*, i64** %690, i64 -1
  %693 = getelementptr inbounds i64*, i64** %691, i64 -1
  %694 = bitcast i64** %693 to i64*
  %695 = load i64, i64* %694, align 8
  %696 = bitcast i64** %692 to i64*
  store i64 %695, i64* %696, align 8
  %697 = getelementptr inbounds i64*, i64** %690, i64 -2
  %698 = getelementptr inbounds i64*, i64** %691, i64 -2
  %699 = bitcast i64** %698 to i64*
  %700 = load i64, i64* %699, align 8
  %701 = bitcast i64** %697 to i64*
  store i64 %700, i64* %701, align 8
  %702 = getelementptr inbounds i64*, i64** %690, i64 -3
  %703 = getelementptr inbounds i64*, i64** %691, i64 -3
  %704 = bitcast i64** %703 to i64*
  %705 = load i64, i64* %704, align 8
  %706 = bitcast i64** %702 to i64*
  store i64 %705, i64* %706, align 8
  %707 = getelementptr inbounds i64*, i64** %690, i64 -4
  %708 = getelementptr inbounds i64*, i64** %691, i64 -4
  %709 = bitcast i64** %708 to i64*
  %710 = load i64, i64* %709, align 8
  %711 = bitcast i64** %707 to i64*
  store i64 %710, i64* %711, align 8
  %712 = getelementptr inbounds i64*, i64** %690, i64 -5
  %713 = getelementptr inbounds i64*, i64** %691, i64 -5
  %714 = bitcast i64** %713 to i64*
  %715 = load i64, i64* %714, align 8
  %716 = bitcast i64** %712 to i64*
  store i64 %715, i64* %716, align 8
  %717 = getelementptr inbounds i64*, i64** %690, i64 -6
  %718 = getelementptr inbounds i64*, i64** %691, i64 -6
  %719 = bitcast i64** %718 to i64*
  %720 = load i64, i64* %719, align 8
  %721 = bitcast i64** %717 to i64*
  store i64 %720, i64* %721, align 8
  %722 = getelementptr inbounds i64*, i64** %690, i64 -7
  %723 = getelementptr inbounds i64*, i64** %691, i64 -7
  %724 = bitcast i64** %723 to i64*
  %725 = load i64, i64* %724, align 8
  %726 = bitcast i64** %722 to i64*
  store i64 %725, i64* %726, align 8
  %727 = getelementptr inbounds i64*, i64** %690, i64 -8
  %728 = getelementptr inbounds i64*, i64** %691, i64 -8
  %729 = bitcast i64** %728 to i64*
  %730 = load i64, i64* %729, align 8
  %731 = bitcast i64** %727 to i64*
  store i64 %730, i64* %731, align 8
  %732 = icmp eq i64** %728, %560
  br i1 %732, label %733, label %689, !llvm.loop !57

733:                                              ; preds = %684, %689, %661, %550
  %734 = phi i64** [ %553, %550 ], [ %587, %661 ], [ %685, %684 ], [ %727, %689 ]
  %735 = ptrtoint i64** %734 to i64
  store i64 %735, i64* %518, align 8
  store i64 %558, i64* %517, align 8
  store i64 %555, i64* %527, align 8
  br label %736

736:                                              ; preds = %508, %733
  %737 = phi i64 [ %514, %508 ], [ %555, %733 ]
  %738 = phi i64** [ %513, %508 ], [ %554, %733 ]
  %739 = phi i64** [ %510, %508 ], [ %557, %733 ]
  %740 = load i64, i64* %6, align 8
  %741 = icmp ult i64** %739, %738
  br i1 %741, label %742, label %747

742:                                              ; preds = %736
  %743 = bitcast i64** %739 to i64*
  store i64 %740, i64* %743, align 8
  %744 = getelementptr inbounds i64*, i64** %739, i64 1
  %745 = ptrtoint i64** %744 to i64
  %746 = bitcast i64*** %502 to i64*
  store i64 %745, i64* %746, align 8
  br label %972

747:                                              ; preds = %736
  %748 = ptrtoint i64** %739 to i64
  %749 = bitcast i64*** %502 to i64*
  %750 = inttoptr i64 %26 to i64*
  %751 = load i64, i64* %750, align 8
  %752 = sub i64 %748, %751
  %753 = ashr exact i64 %752, 3
  %754 = add nsw i64 %753, 1
  %755 = icmp ugt i64 %754, 268435455
  br i1 %755, label %756, label %758

756:                                              ; preds = %747
  %757 = inttoptr i64 %26 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %757) #15
  unreachable

758:                                              ; preds = %747
  %759 = bitcast i64*** %504 to i64*
  %760 = sub i64 %737, %751
  %761 = ashr exact i64 %760, 3
  %762 = icmp ult i64 %761, 134217727
  br i1 %762, label %763, label %768

763:                                              ; preds = %758
  %764 = ashr exact i64 %760, 2
  %765 = icmp ult i64 %764, %754
  %766 = select i1 %765, i64 %754, i64 %764
  %767 = icmp eq i64 %766, 0
  br i1 %767, label %786, label %768

768:                                              ; preds = %763, %758
  %769 = phi i64 [ %766, %763 ], [ 268435455, %758 ]
  %770 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %771 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %770, align 8
  %772 = shl i64 %769, 3
  %773 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %771, i64 0, i32 2
  %774 = load i64, i64* %773, align 8
  %775 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %771, i64 0, i32 3
  %776 = load i64, i64* %775, align 8
  %777 = sub i64 %776, %774
  %778 = icmp ugt i64 %772, %777
  br i1 %778, label %779, label %781, !prof !4

779:                                              ; preds = %768
  %780 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %771, i64 %772) #14
  br label %783

781:                                              ; preds = %768
  %782 = add i64 %774, %772
  store i64 %782, i64* %773, align 8
  br label %783

783:                                              ; preds = %781, %779
  %784 = phi i64 [ %780, %779 ], [ %774, %781 ]
  %785 = inttoptr i64 %784 to i64**
  br label %786

786:                                              ; preds = %783, %763
  %787 = phi i64 [ %769, %783 ], [ 0, %763 ]
  %788 = phi i64** [ %785, %783 ], [ null, %763 ]
  %789 = getelementptr inbounds i64*, i64** %788, i64 %753
  %790 = getelementptr inbounds i64*, i64** %788, i64 %787
  %791 = ptrtoint i64** %790 to i64
  %792 = bitcast i64** %789 to i64*
  store i64 %740, i64* %792, align 8
  %793 = getelementptr inbounds i64*, i64** %789, i64 1
  %794 = ptrtoint i64** %793 to i64
  %795 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %28, i64 0, i32 0, i32 0, i32 0
  %796 = load i64**, i64*** %795, align 8
  %797 = ptrtoint i64** %796 to i64
  %798 = load i64**, i64*** %502, align 8
  %799 = icmp eq i64** %798, %796
  br i1 %799, label %969, label %800

800:                                              ; preds = %786
  %801 = getelementptr i64*, i64** %798, i64 -1
  %802 = ptrtoint i64** %801 to i64
  %803 = sub i64 %802, %797
  %804 = lshr i64 %803, 3
  %805 = add nuw nsw i64 %804, 1
  %806 = icmp ult i64 %805, 4
  br i1 %806, label %899, label %807

807:                                              ; preds = %800
  %808 = getelementptr i64*, i64** %798, i64 -1
  %809 = ptrtoint i64** %808 to i64
  %810 = sub i64 %809, %797
  %811 = lshr i64 %810, 3
  %812 = xor i64 %811, -1
  %813 = add nsw i64 %753, %812
  %814 = getelementptr i64*, i64** %788, i64 %813
  %815 = xor i64 %811, -1
  %816 = getelementptr i64*, i64** %798, i64 %815
  %817 = icmp ult i64** %814, %798
  %818 = icmp ult i64** %816, %789
  %819 = and i1 %817, %818
  br i1 %819, label %899, label %820

820:                                              ; preds = %807
  %821 = and i64 %805, 4611686018427387900
  %822 = sub nsw i64 0, %821
  %823 = getelementptr i64*, i64** %789, i64 %822
  %824 = sub nsw i64 0, %821
  %825 = getelementptr i64*, i64** %798, i64 %824
  %826 = add nsw i64 %821, -4
  %827 = lshr exact i64 %826, 2
  %828 = add nuw nsw i64 %827, 1
  %829 = and i64 %828, 1
  %830 = icmp eq i64 %826, 0
  br i1 %830, label %877, label %831

831:                                              ; preds = %820
  %832 = sub nuw nsw i64 %828, %829
  %833 = getelementptr i64*, i64** %789, i64 -1
  %834 = getelementptr i64*, i64** %798, i64 -1
  %835 = getelementptr i64*, i64** %789, i64 -1
  %836 = getelementptr i64*, i64** %798, i64 -1
  br label %837

837:                                              ; preds = %837, %831
  %838 = phi i64 [ 0, %831 ], [ %872, %837 ]
  %839 = phi i64 [ %832, %831 ], [ %873, %837 ]
  %840 = sub i64 0, %838
  %841 = sub i64 0, %838
  %842 = getelementptr inbounds i64*, i64** %833, i64 %840
  %843 = getelementptr inbounds i64*, i64** %834, i64 %841
  %844 = getelementptr inbounds i64*, i64** %843, i64 -1
  %845 = bitcast i64** %844 to <2 x i64>*
  %846 = load <2 x i64>, <2 x i64>* %845, align 8, !alias.scope !58
  %847 = getelementptr inbounds i64*, i64** %843, i64 -2
  %848 = getelementptr inbounds i64*, i64** %847, i64 -1
  %849 = bitcast i64** %848 to <2 x i64>*
  %850 = load <2 x i64>, <2 x i64>* %849, align 8, !alias.scope !58
  %851 = getelementptr inbounds i64*, i64** %842, i64 -1
  %852 = bitcast i64** %851 to <2 x i64>*
  store <2 x i64> %846, <2 x i64>* %852, align 8, !alias.scope !61, !noalias !58
  %853 = getelementptr inbounds i64*, i64** %842, i64 -2
  %854 = getelementptr inbounds i64*, i64** %853, i64 -1
  %855 = bitcast i64** %854 to <2 x i64>*
  store <2 x i64> %850, <2 x i64>* %855, align 8, !alias.scope !61, !noalias !58
  %856 = sub nuw nsw i64 -4, %838
  %857 = sub nuw nsw i64 -4, %838
  %858 = getelementptr inbounds i64*, i64** %835, i64 %856
  %859 = getelementptr inbounds i64*, i64** %836, i64 %857
  %860 = getelementptr inbounds i64*, i64** %859, i64 -1
  %861 = bitcast i64** %860 to <2 x i64>*
  %862 = load <2 x i64>, <2 x i64>* %861, align 8, !alias.scope !58
  %863 = getelementptr inbounds i64*, i64** %859, i64 -2
  %864 = getelementptr inbounds i64*, i64** %863, i64 -1
  %865 = bitcast i64** %864 to <2 x i64>*
  %866 = load <2 x i64>, <2 x i64>* %865, align 8, !alias.scope !58
  %867 = getelementptr inbounds i64*, i64** %858, i64 -1
  %868 = bitcast i64** %867 to <2 x i64>*
  store <2 x i64> %862, <2 x i64>* %868, align 8, !alias.scope !61, !noalias !58
  %869 = getelementptr inbounds i64*, i64** %858, i64 -2
  %870 = getelementptr inbounds i64*, i64** %869, i64 -1
  %871 = bitcast i64** %870 to <2 x i64>*
  store <2 x i64> %866, <2 x i64>* %871, align 8, !alias.scope !61, !noalias !58
  %872 = add i64 %838, 8
  %873 = add i64 %839, -2
  %874 = icmp eq i64 %873, 0
  br i1 %874, label %875, label %837, !llvm.loop !63

875:                                              ; preds = %837
  %876 = sub nuw nsw i64 -8, %838
  br label %877

877:                                              ; preds = %875, %820
  %878 = phi i64 [ 0, %820 ], [ %876, %875 ]
  %879 = icmp eq i64 %829, 0
  br i1 %879, label %897, label %880

880:                                              ; preds = %877
  %881 = getelementptr i64*, i64** %789, i64 -1
  %882 = getelementptr i64*, i64** %798, i64 -1
  %883 = getelementptr inbounds i64*, i64** %881, i64 %878
  %884 = getelementptr inbounds i64*, i64** %882, i64 %878
  %885 = getelementptr inbounds i64*, i64** %884, i64 -1
  %886 = bitcast i64** %885 to <2 x i64>*
  %887 = load <2 x i64>, <2 x i64>* %886, align 8, !alias.scope !58
  %888 = getelementptr inbounds i64*, i64** %884, i64 -2
  %889 = getelementptr inbounds i64*, i64** %888, i64 -1
  %890 = bitcast i64** %889 to <2 x i64>*
  %891 = load <2 x i64>, <2 x i64>* %890, align 8, !alias.scope !58
  %892 = getelementptr inbounds i64*, i64** %883, i64 -1
  %893 = bitcast i64** %892 to <2 x i64>*
  store <2 x i64> %887, <2 x i64>* %893, align 8, !alias.scope !61, !noalias !58
  %894 = getelementptr inbounds i64*, i64** %883, i64 -2
  %895 = getelementptr inbounds i64*, i64** %894, i64 -1
  %896 = bitcast i64** %895 to <2 x i64>*
  store <2 x i64> %891, <2 x i64>* %896, align 8, !alias.scope !61, !noalias !58
  br label %897

897:                                              ; preds = %877, %880
  %898 = icmp eq i64 %805, %821
  br i1 %898, label %969, label %899

899:                                              ; preds = %897, %807, %800
  %900 = phi i64** [ %789, %807 ], [ %789, %800 ], [ %823, %897 ]
  %901 = phi i64** [ %798, %807 ], [ %798, %800 ], [ %825, %897 ]
  %902 = getelementptr i64*, i64** %901, i64 -1
  %903 = ptrtoint i64** %902 to i64
  %904 = sub i64 %903, %797
  %905 = lshr i64 %904, 3
  %906 = add nuw nsw i64 %905, 1
  %907 = and i64 %906, 7
  %908 = icmp eq i64 %907, 0
  br i1 %908, label %920, label %909

909:                                              ; preds = %899, %909
  %910 = phi i64** [ %913, %909 ], [ %900, %899 ]
  %911 = phi i64** [ %914, %909 ], [ %901, %899 ]
  %912 = phi i64 [ %918, %909 ], [ %907, %899 ]
  %913 = getelementptr inbounds i64*, i64** %910, i64 -1
  %914 = getelementptr inbounds i64*, i64** %911, i64 -1
  %915 = bitcast i64** %914 to i64*
  %916 = load i64, i64* %915, align 8
  %917 = bitcast i64** %913 to i64*
  store i64 %916, i64* %917, align 8
  %918 = add i64 %912, -1
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %909, !llvm.loop !64

920:                                              ; preds = %909, %899
  %921 = phi i64** [ undef, %899 ], [ %913, %909 ]
  %922 = phi i64** [ %900, %899 ], [ %913, %909 ]
  %923 = phi i64** [ %901, %899 ], [ %914, %909 ]
  %924 = icmp ult i64 %904, 56
  br i1 %924, label %969, label %925

925:                                              ; preds = %920, %925
  %926 = phi i64** [ %963, %925 ], [ %922, %920 ]
  %927 = phi i64** [ %964, %925 ], [ %923, %920 ]
  %928 = getelementptr inbounds i64*, i64** %926, i64 -1
  %929 = getelementptr inbounds i64*, i64** %927, i64 -1
  %930 = bitcast i64** %929 to i64*
  %931 = load i64, i64* %930, align 8
  %932 = bitcast i64** %928 to i64*
  store i64 %931, i64* %932, align 8
  %933 = getelementptr inbounds i64*, i64** %926, i64 -2
  %934 = getelementptr inbounds i64*, i64** %927, i64 -2
  %935 = bitcast i64** %934 to i64*
  %936 = load i64, i64* %935, align 8
  %937 = bitcast i64** %933 to i64*
  store i64 %936, i64* %937, align 8
  %938 = getelementptr inbounds i64*, i64** %926, i64 -3
  %939 = getelementptr inbounds i64*, i64** %927, i64 -3
  %940 = bitcast i64** %939 to i64*
  %941 = load i64, i64* %940, align 8
  %942 = bitcast i64** %938 to i64*
  store i64 %941, i64* %942, align 8
  %943 = getelementptr inbounds i64*, i64** %926, i64 -4
  %944 = getelementptr inbounds i64*, i64** %927, i64 -4
  %945 = bitcast i64** %944 to i64*
  %946 = load i64, i64* %945, align 8
  %947 = bitcast i64** %943 to i64*
  store i64 %946, i64* %947, align 8
  %948 = getelementptr inbounds i64*, i64** %926, i64 -5
  %949 = getelementptr inbounds i64*, i64** %927, i64 -5
  %950 = bitcast i64** %949 to i64*
  %951 = load i64, i64* %950, align 8
  %952 = bitcast i64** %948 to i64*
  store i64 %951, i64* %952, align 8
  %953 = getelementptr inbounds i64*, i64** %926, i64 -6
  %954 = getelementptr inbounds i64*, i64** %927, i64 -6
  %955 = bitcast i64** %954 to i64*
  %956 = load i64, i64* %955, align 8
  %957 = bitcast i64** %953 to i64*
  store i64 %956, i64* %957, align 8
  %958 = getelementptr inbounds i64*, i64** %926, i64 -7
  %959 = getelementptr inbounds i64*, i64** %927, i64 -7
  %960 = bitcast i64** %959 to i64*
  %961 = load i64, i64* %960, align 8
  %962 = bitcast i64** %958 to i64*
  store i64 %961, i64* %962, align 8
  %963 = getelementptr inbounds i64*, i64** %926, i64 -8
  %964 = getelementptr inbounds i64*, i64** %927, i64 -8
  %965 = bitcast i64** %964 to i64*
  %966 = load i64, i64* %965, align 8
  %967 = bitcast i64** %963 to i64*
  store i64 %966, i64* %967, align 8
  %968 = icmp eq i64** %964, %796
  br i1 %968, label %969, label %925, !llvm.loop !65

969:                                              ; preds = %920, %925, %897, %786
  %970 = phi i64** [ %789, %786 ], [ %823, %897 ], [ %921, %920 ], [ %963, %925 ]
  %971 = ptrtoint i64** %970 to i64
  store i64 %971, i64* %750, align 8
  store i64 %794, i64* %749, align 8
  store i64 %791, i64* %759, align 8
  br label %972

972:                                              ; preds = %969, %742, %498, %274
  %973 = or i64 %26, 2
  store i64 %973, i64* %6, align 8
  br label %1980

974:                                              ; preds = %3
  %975 = add i64 %7, -2
  %976 = inttoptr i64 %975 to %"class.v8::internal::ZoneVector.1336"*
  %977 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %976, i64 0, i32 0, i32 0, i32 1
  %978 = bitcast i64*** %977 to i64*
  %979 = load i64, i64* %978, align 8
  %980 = inttoptr i64 %975 to i64*
  %981 = load i64, i64* %980, align 8
  %982 = icmp eq i64 %979, %981
  br i1 %982, label %997, label %983

983:                                              ; preds = %974
  %984 = inttoptr i64 %981 to i64**
  %985 = sub i64 %979, %981
  %986 = ashr exact i64 %985, 3
  br label %987

987:                                              ; preds = %992, %983
  %988 = phi i64 [ 0, %983 ], [ %994, %992 ]
  %989 = getelementptr inbounds i64*, i64** %984, i64 %988
  %990 = load i64*, i64** %989, align 8
  %991 = icmp eq i64* %990, %1
  br i1 %991, label %1980, label %992

992:                                              ; preds = %987
  %993 = icmp ule i64* %990, %1
  %994 = add nuw i64 %988, 1
  %995 = icmp ult i64 %994, %986
  %996 = and i1 %993, %995
  br i1 %996, label %987, label %997

997:                                              ; preds = %992, %974
  %998 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %999 = load i64, i64* %998, align 8
  %1000 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %1001 = load i64, i64* %1000, align 8
  %1002 = sub i64 %1001, %999
  %1003 = icmp ult i64 %1002, 32
  br i1 %1003, label %1004, label %1006, !prof !4

1004:                                             ; preds = %997
  %1005 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 32) #14
  br label %1008

1006:                                             ; preds = %997
  %1007 = add i64 %999, 32
  store i64 %1007, i64* %998, align 8
  br label %1008

1008:                                             ; preds = %1004, %1006
  %1009 = phi i64 [ %1005, %1004 ], [ %999, %1006 ]
  %1010 = inttoptr i64 %1009 to i8*
  %1011 = inttoptr i64 %1009 to %"class.v8::internal::ZoneVector.1336"*
  %1012 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 2, i32 1
  %1013 = bitcast %"struct.std::__1::__compressed_pair_elem.1340"* %1012 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1010, i8 0, i64 24, i1 false) #14
  store i64 %5, i64* %1013, align 8
  %1014 = load i64, i64* %978, align 8
  %1015 = load i64, i64* %980, align 8
  %1016 = sub i64 %1014, %1015
  %1017 = ashr exact i64 %1016, 3
  %1018 = add nsw i64 %1017, 1
  %1019 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1020 = bitcast i64*** %1019 to i64*
  %1021 = load i64, i64* %1020, align 8
  %1022 = inttoptr i64 %1009 to i64*
  %1023 = load i64, i64* %1022, align 8
  %1024 = sub i64 %1021, %1023
  %1025 = ashr exact i64 %1024, 3
  %1026 = icmp ult i64 %1025, %1018
  %1027 = inttoptr i64 %1021 to i64**
  br i1 %1026, label %1028, label %1231

1028:                                             ; preds = %1008
  %1029 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 1
  %1030 = bitcast i64*** %1029 to i64*
  %1031 = load i64, i64* %1030, align 8
  %1032 = sub i64 %1031, %1023
  %1033 = ashr exact i64 %1032, 3
  %1034 = shl i64 %1018, 3
  %1035 = load i64, i64* %998, align 8
  %1036 = load i64, i64* %1000, align 8
  %1037 = sub i64 %1036, %1035
  %1038 = icmp ugt i64 %1034, %1037
  br i1 %1038, label %1039, label %1041, !prof !4

1039:                                             ; preds = %1028
  %1040 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %1034) #14
  br label %1043

1041:                                             ; preds = %1028
  %1042 = add i64 %1035, %1034
  store i64 %1042, i64* %998, align 8
  br label %1043

1043:                                             ; preds = %1041, %1039
  %1044 = phi i64 [ %1040, %1039 ], [ %1035, %1041 ]
  %1045 = inttoptr i64 %1044 to i64**
  %1046 = getelementptr inbounds i64*, i64** %1045, i64 %1033
  %1047 = ptrtoint i64** %1046 to i64
  %1048 = getelementptr inbounds i64*, i64** %1045, i64 %1018
  %1049 = ptrtoint i64** %1048 to i64
  %1050 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 0
  %1051 = load i64**, i64*** %1050, align 8
  %1052 = ptrtoint i64** %1051 to i64
  %1053 = load i64**, i64*** %1029, align 8
  %1054 = icmp eq i64** %1053, %1051
  br i1 %1054, label %1227, label %1055

1055:                                             ; preds = %1043
  %1056 = getelementptr i64*, i64** %1053, i64 -1
  %1057 = ptrtoint i64** %1056 to i64
  %1058 = sub i64 %1057, %1052
  %1059 = lshr i64 %1058, 3
  %1060 = add nuw nsw i64 %1059, 1
  %1061 = icmp ult i64 %1060, 4
  br i1 %1061, label %1154, label %1062

1062:                                             ; preds = %1055
  %1063 = getelementptr i64*, i64** %1053, i64 -1
  %1064 = ptrtoint i64** %1063 to i64
  %1065 = sub i64 %1064, %1052
  %1066 = lshr i64 %1065, 3
  %1067 = xor i64 %1066, -1
  %1068 = add nsw i64 %1033, %1067
  %1069 = getelementptr i64*, i64** %1045, i64 %1068
  %1070 = xor i64 %1066, -1
  %1071 = getelementptr i64*, i64** %1053, i64 %1070
  %1072 = icmp ult i64** %1069, %1053
  %1073 = icmp ult i64** %1071, %1046
  %1074 = and i1 %1072, %1073
  br i1 %1074, label %1154, label %1075

1075:                                             ; preds = %1062
  %1076 = and i64 %1060, 4611686018427387900
  %1077 = sub nsw i64 0, %1076
  %1078 = getelementptr i64*, i64** %1046, i64 %1077
  %1079 = sub nsw i64 0, %1076
  %1080 = getelementptr i64*, i64** %1053, i64 %1079
  %1081 = add nsw i64 %1076, -4
  %1082 = lshr exact i64 %1081, 2
  %1083 = add nuw nsw i64 %1082, 1
  %1084 = and i64 %1083, 1
  %1085 = icmp eq i64 %1081, 0
  br i1 %1085, label %1130, label %1086

1086:                                             ; preds = %1075
  %1087 = sub nuw nsw i64 %1083, %1084
  %1088 = getelementptr i64*, i64** %1046, i64 -1
  %1089 = getelementptr i64*, i64** %1053, i64 -1
  %1090 = getelementptr i64*, i64** %1046, i64 -1
  %1091 = getelementptr i64*, i64** %1053, i64 -1
  br label %1092

1092:                                             ; preds = %1092, %1086
  %1093 = phi i64 [ 0, %1086 ], [ %1127, %1092 ]
  %1094 = phi i64 [ %1087, %1086 ], [ %1128, %1092 ]
  %1095 = sub i64 0, %1093
  %1096 = sub i64 0, %1093
  %1097 = getelementptr inbounds i64*, i64** %1088, i64 %1095
  %1098 = getelementptr inbounds i64*, i64** %1089, i64 %1096
  %1099 = getelementptr inbounds i64*, i64** %1098, i64 -1
  %1100 = bitcast i64** %1099 to <2 x i64>*
  %1101 = load <2 x i64>, <2 x i64>* %1100, align 8, !alias.scope !66
  %1102 = getelementptr inbounds i64*, i64** %1098, i64 -2
  %1103 = getelementptr inbounds i64*, i64** %1102, i64 -1
  %1104 = bitcast i64** %1103 to <2 x i64>*
  %1105 = load <2 x i64>, <2 x i64>* %1104, align 8, !alias.scope !66
  %1106 = getelementptr inbounds i64*, i64** %1097, i64 -1
  %1107 = bitcast i64** %1106 to <2 x i64>*
  store <2 x i64> %1101, <2 x i64>* %1107, align 8, !alias.scope !69, !noalias !66
  %1108 = getelementptr inbounds i64*, i64** %1097, i64 -2
  %1109 = getelementptr inbounds i64*, i64** %1108, i64 -1
  %1110 = bitcast i64** %1109 to <2 x i64>*
  store <2 x i64> %1105, <2 x i64>* %1110, align 8, !alias.scope !69, !noalias !66
  %1111 = sub nuw nsw i64 -4, %1093
  %1112 = sub nuw nsw i64 -4, %1093
  %1113 = getelementptr inbounds i64*, i64** %1090, i64 %1111
  %1114 = getelementptr inbounds i64*, i64** %1091, i64 %1112
  %1115 = getelementptr inbounds i64*, i64** %1114, i64 -1
  %1116 = bitcast i64** %1115 to <2 x i64>*
  %1117 = load <2 x i64>, <2 x i64>* %1116, align 8, !alias.scope !66
  %1118 = getelementptr inbounds i64*, i64** %1114, i64 -2
  %1119 = getelementptr inbounds i64*, i64** %1118, i64 -1
  %1120 = bitcast i64** %1119 to <2 x i64>*
  %1121 = load <2 x i64>, <2 x i64>* %1120, align 8, !alias.scope !66
  %1122 = getelementptr inbounds i64*, i64** %1113, i64 -1
  %1123 = bitcast i64** %1122 to <2 x i64>*
  store <2 x i64> %1117, <2 x i64>* %1123, align 8, !alias.scope !69, !noalias !66
  %1124 = getelementptr inbounds i64*, i64** %1113, i64 -2
  %1125 = getelementptr inbounds i64*, i64** %1124, i64 -1
  %1126 = bitcast i64** %1125 to <2 x i64>*
  store <2 x i64> %1121, <2 x i64>* %1126, align 8, !alias.scope !69, !noalias !66
  %1127 = add i64 %1093, 8
  %1128 = add i64 %1094, -2
  %1129 = icmp eq i64 %1128, 0
  br i1 %1129, label %1130, label %1092, !llvm.loop !71

1130:                                             ; preds = %1092, %1075
  %1131 = phi i64 [ 0, %1075 ], [ %1127, %1092 ]
  %1132 = icmp eq i64 %1084, 0
  br i1 %1132, label %1152, label %1133

1133:                                             ; preds = %1130
  %1134 = sub i64 0, %1131
  %1135 = getelementptr i64*, i64** %1046, i64 -1
  %1136 = sub i64 0, %1131
  %1137 = getelementptr i64*, i64** %1053, i64 -1
  %1138 = getelementptr inbounds i64*, i64** %1135, i64 %1134
  %1139 = getelementptr inbounds i64*, i64** %1137, i64 %1136
  %1140 = getelementptr inbounds i64*, i64** %1139, i64 -1
  %1141 = bitcast i64** %1140 to <2 x i64>*
  %1142 = load <2 x i64>, <2 x i64>* %1141, align 8, !alias.scope !66
  %1143 = getelementptr inbounds i64*, i64** %1139, i64 -2
  %1144 = getelementptr inbounds i64*, i64** %1143, i64 -1
  %1145 = bitcast i64** %1144 to <2 x i64>*
  %1146 = load <2 x i64>, <2 x i64>* %1145, align 8, !alias.scope !66
  %1147 = getelementptr inbounds i64*, i64** %1138, i64 -1
  %1148 = bitcast i64** %1147 to <2 x i64>*
  store <2 x i64> %1142, <2 x i64>* %1148, align 8, !alias.scope !69, !noalias !66
  %1149 = getelementptr inbounds i64*, i64** %1138, i64 -2
  %1150 = getelementptr inbounds i64*, i64** %1149, i64 -1
  %1151 = bitcast i64** %1150 to <2 x i64>*
  store <2 x i64> %1146, <2 x i64>* %1151, align 8, !alias.scope !69, !noalias !66
  br label %1152

1152:                                             ; preds = %1130, %1133
  %1153 = icmp eq i64 %1060, %1076
  br i1 %1153, label %1224, label %1154

1154:                                             ; preds = %1152, %1062, %1055
  %1155 = phi i64** [ %1046, %1062 ], [ %1046, %1055 ], [ %1078, %1152 ]
  %1156 = phi i64** [ %1053, %1062 ], [ %1053, %1055 ], [ %1080, %1152 ]
  %1157 = getelementptr i64*, i64** %1156, i64 -1
  %1158 = ptrtoint i64** %1157 to i64
  %1159 = sub i64 %1158, %1052
  %1160 = lshr i64 %1159, 3
  %1161 = add nuw nsw i64 %1160, 1
  %1162 = and i64 %1161, 7
  %1163 = icmp eq i64 %1162, 0
  br i1 %1163, label %1175, label %1164

1164:                                             ; preds = %1154, %1164
  %1165 = phi i64** [ %1168, %1164 ], [ %1155, %1154 ]
  %1166 = phi i64** [ %1169, %1164 ], [ %1156, %1154 ]
  %1167 = phi i64 [ %1173, %1164 ], [ %1162, %1154 ]
  %1168 = getelementptr inbounds i64*, i64** %1165, i64 -1
  %1169 = getelementptr inbounds i64*, i64** %1166, i64 -1
  %1170 = bitcast i64** %1169 to i64*
  %1171 = load i64, i64* %1170, align 8
  %1172 = bitcast i64** %1168 to i64*
  store i64 %1171, i64* %1172, align 8
  %1173 = add i64 %1167, -1
  %1174 = icmp eq i64 %1173, 0
  br i1 %1174, label %1175, label %1164, !llvm.loop !72

1175:                                             ; preds = %1164, %1154
  %1176 = phi i64** [ undef, %1154 ], [ %1168, %1164 ]
  %1177 = phi i64** [ %1155, %1154 ], [ %1168, %1164 ]
  %1178 = phi i64** [ %1156, %1154 ], [ %1169, %1164 ]
  %1179 = icmp ult i64 %1159, 56
  br i1 %1179, label %1224, label %1180

1180:                                             ; preds = %1175, %1180
  %1181 = phi i64** [ %1218, %1180 ], [ %1177, %1175 ]
  %1182 = phi i64** [ %1219, %1180 ], [ %1178, %1175 ]
  %1183 = getelementptr inbounds i64*, i64** %1181, i64 -1
  %1184 = getelementptr inbounds i64*, i64** %1182, i64 -1
  %1185 = bitcast i64** %1184 to i64*
  %1186 = load i64, i64* %1185, align 8
  %1187 = bitcast i64** %1183 to i64*
  store i64 %1186, i64* %1187, align 8
  %1188 = getelementptr inbounds i64*, i64** %1181, i64 -2
  %1189 = getelementptr inbounds i64*, i64** %1182, i64 -2
  %1190 = bitcast i64** %1189 to i64*
  %1191 = load i64, i64* %1190, align 8
  %1192 = bitcast i64** %1188 to i64*
  store i64 %1191, i64* %1192, align 8
  %1193 = getelementptr inbounds i64*, i64** %1181, i64 -3
  %1194 = getelementptr inbounds i64*, i64** %1182, i64 -3
  %1195 = bitcast i64** %1194 to i64*
  %1196 = load i64, i64* %1195, align 8
  %1197 = bitcast i64** %1193 to i64*
  store i64 %1196, i64* %1197, align 8
  %1198 = getelementptr inbounds i64*, i64** %1181, i64 -4
  %1199 = getelementptr inbounds i64*, i64** %1182, i64 -4
  %1200 = bitcast i64** %1199 to i64*
  %1201 = load i64, i64* %1200, align 8
  %1202 = bitcast i64** %1198 to i64*
  store i64 %1201, i64* %1202, align 8
  %1203 = getelementptr inbounds i64*, i64** %1181, i64 -5
  %1204 = getelementptr inbounds i64*, i64** %1182, i64 -5
  %1205 = bitcast i64** %1204 to i64*
  %1206 = load i64, i64* %1205, align 8
  %1207 = bitcast i64** %1203 to i64*
  store i64 %1206, i64* %1207, align 8
  %1208 = getelementptr inbounds i64*, i64** %1181, i64 -6
  %1209 = getelementptr inbounds i64*, i64** %1182, i64 -6
  %1210 = bitcast i64** %1209 to i64*
  %1211 = load i64, i64* %1210, align 8
  %1212 = bitcast i64** %1208 to i64*
  store i64 %1211, i64* %1212, align 8
  %1213 = getelementptr inbounds i64*, i64** %1181, i64 -7
  %1214 = getelementptr inbounds i64*, i64** %1182, i64 -7
  %1215 = bitcast i64** %1214 to i64*
  %1216 = load i64, i64* %1215, align 8
  %1217 = bitcast i64** %1213 to i64*
  store i64 %1216, i64* %1217, align 8
  %1218 = getelementptr inbounds i64*, i64** %1181, i64 -8
  %1219 = getelementptr inbounds i64*, i64** %1182, i64 -8
  %1220 = bitcast i64** %1219 to i64*
  %1221 = load i64, i64* %1220, align 8
  %1222 = bitcast i64** %1218 to i64*
  store i64 %1221, i64* %1222, align 8
  %1223 = icmp eq i64** %1219, %1051
  br i1 %1223, label %1224, label %1180, !llvm.loop !73

1224:                                             ; preds = %1175, %1180, %1152
  %1225 = phi i64** [ %1078, %1152 ], [ %1176, %1175 ], [ %1218, %1180 ]
  %1226 = ptrtoint i64** %1225 to i64
  br label %1227

1227:                                             ; preds = %1224, %1043
  %1228 = phi i64 [ %1226, %1224 ], [ %1047, %1043 ]
  store i64 %1228, i64* %1022, align 8
  store i64 %1047, i64* %1030, align 8
  store i64 %1049, i64* %1020, align 8
  %1229 = load i64, i64* %978, align 8
  %1230 = load i64, i64* %980, align 8
  br label %1231

1231:                                             ; preds = %1008, %1227
  %1232 = phi i64** [ %1027, %1008 ], [ %1048, %1227 ]
  %1233 = phi i64 [ %1015, %1008 ], [ %1230, %1227 ]
  %1234 = phi i64 [ %1014, %1008 ], [ %1229, %1227 ]
  %1235 = icmp eq i64 %1234, %1233
  br i1 %1235, label %1492, label %1236

1236:                                             ; preds = %1231
  %1237 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 1
  %1238 = bitcast i64*** %1237 to i64*
  %1239 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1240 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 0
  br label %1241

1241:                                             ; preds = %1236, %1482
  %1242 = phi i64 [ %1233, %1236 ], [ %1485, %1482 ]
  %1243 = phi i64 [ 0, %1236 ], [ %1483, %1482 ]
  %1244 = inttoptr i64 %1242 to i64**
  %1245 = getelementptr inbounds i64*, i64** %1244, i64 %1243
  %1246 = load i64*, i64** %1245, align 8
  %1247 = icmp ugt i64* %1246, %1
  %1248 = ptrtoint i64* %1246 to i64
  br i1 %1247, label %1489, label %1249

1249:                                             ; preds = %1241
  %1250 = load i64**, i64*** %1237, align 8
  %1251 = load i64**, i64*** %1019, align 8
  %1252 = icmp eq i64** %1250, %1251
  %1253 = ptrtoint i64** %1251 to i64
  br i1 %1252, label %1258, label %1254

1254:                                             ; preds = %1249
  %1255 = bitcast i64** %1250 to i64*
  store i64 %1248, i64* %1255, align 8
  %1256 = getelementptr inbounds i64*, i64** %1250, i64 1
  %1257 = ptrtoint i64** %1256 to i64
  store i64 %1257, i64* %1238, align 8
  br label %1482

1258:                                             ; preds = %1249
  %1259 = ptrtoint i64** %1250 to i64
  %1260 = load i64, i64* %1022, align 8
  %1261 = sub i64 %1259, %1260
  %1262 = ashr exact i64 %1261, 3
  %1263 = add nsw i64 %1262, 1
  %1264 = icmp ugt i64 %1263, 268435455
  br i1 %1264, label %1265, label %1267

1265:                                             ; preds = %1258
  %1266 = inttoptr i64 %1009 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1266) #15
  unreachable

1267:                                             ; preds = %1258
  %1268 = sub i64 %1253, %1260
  %1269 = ashr exact i64 %1268, 3
  %1270 = icmp ult i64 %1269, 134217727
  br i1 %1270, label %1271, label %1276

1271:                                             ; preds = %1267
  %1272 = ashr exact i64 %1268, 2
  %1273 = icmp ult i64 %1272, %1263
  %1274 = select i1 %1273, i64 %1263, i64 %1272
  %1275 = icmp eq i64 %1274, 0
  br i1 %1275, label %1295, label %1276

1276:                                             ; preds = %1271, %1267
  %1277 = phi i64 [ %1274, %1271 ], [ 268435455, %1267 ]
  %1278 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1239, align 8
  %1279 = shl i64 %1277, 3
  %1280 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1278, i64 0, i32 2
  %1281 = load i64, i64* %1280, align 8
  %1282 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1278, i64 0, i32 3
  %1283 = load i64, i64* %1282, align 8
  %1284 = sub i64 %1283, %1281
  %1285 = icmp ugt i64 %1279, %1284
  br i1 %1285, label %1286, label %1288, !prof !4

1286:                                             ; preds = %1276
  %1287 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1278, i64 %1279) #14
  br label %1290

1288:                                             ; preds = %1276
  %1289 = add i64 %1281, %1279
  store i64 %1289, i64* %1280, align 8
  br label %1290

1290:                                             ; preds = %1288, %1286
  %1291 = phi i64 [ %1287, %1286 ], [ %1281, %1288 ]
  %1292 = inttoptr i64 %1291 to i64**
  %1293 = bitcast i64** %1245 to i64*
  %1294 = load i64, i64* %1293, align 8
  br label %1295

1295:                                             ; preds = %1271, %1290
  %1296 = phi i64 [ %1294, %1290 ], [ %1248, %1271 ]
  %1297 = phi i64 [ %1277, %1290 ], [ 0, %1271 ]
  %1298 = phi i64** [ %1292, %1290 ], [ null, %1271 ]
  %1299 = getelementptr inbounds i64*, i64** %1298, i64 %1262
  %1300 = getelementptr inbounds i64*, i64** %1298, i64 %1297
  %1301 = ptrtoint i64** %1300 to i64
  %1302 = bitcast i64** %1299 to i64*
  store i64 %1296, i64* %1302, align 8
  %1303 = getelementptr inbounds i64*, i64** %1299, i64 1
  %1304 = ptrtoint i64** %1303 to i64
  %1305 = load i64**, i64*** %1240, align 8
  %1306 = ptrtoint i64** %1305 to i64
  %1307 = load i64**, i64*** %1237, align 8
  %1308 = icmp eq i64** %1307, %1305
  br i1 %1308, label %1479, label %1309

1309:                                             ; preds = %1295
  %1310 = getelementptr i64*, i64** %1307, i64 -1
  %1311 = ptrtoint i64** %1310 to i64
  %1312 = sub i64 %1311, %1306
  %1313 = lshr i64 %1312, 3
  %1314 = add nuw nsw i64 %1313, 1
  %1315 = icmp ult i64 %1314, 4
  br i1 %1315, label %1409, label %1316

1316:                                             ; preds = %1309
  %1317 = getelementptr i64*, i64** %1298, i64 -1
  %1318 = getelementptr i64*, i64** %1307, i64 -1
  %1319 = ptrtoint i64** %1318 to i64
  %1320 = sub i64 %1319, %1306
  %1321 = lshr i64 %1320, 3
  %1322 = sub nsw i64 %1262, %1321
  %1323 = getelementptr i64*, i64** %1317, i64 %1322
  %1324 = getelementptr i64*, i64** %1307, i64 -1
  %1325 = sub nsw i64 0, %1321
  %1326 = getelementptr i64*, i64** %1324, i64 %1325
  %1327 = icmp ult i64** %1323, %1307
  %1328 = icmp ult i64** %1326, %1299
  %1329 = and i1 %1327, %1328
  br i1 %1329, label %1409, label %1330

1330:                                             ; preds = %1316
  %1331 = and i64 %1314, 4611686018427387900
  %1332 = sub nsw i64 0, %1331
  %1333 = getelementptr i64*, i64** %1299, i64 %1332
  %1334 = sub nsw i64 0, %1331
  %1335 = getelementptr i64*, i64** %1307, i64 %1334
  %1336 = add nsw i64 %1331, -4
  %1337 = lshr exact i64 %1336, 2
  %1338 = add nuw nsw i64 %1337, 1
  %1339 = and i64 %1338, 1
  %1340 = icmp eq i64 %1336, 0
  br i1 %1340, label %1385, label %1341

1341:                                             ; preds = %1330
  %1342 = sub nuw nsw i64 %1338, %1339
  %1343 = getelementptr i64*, i64** %1299, i64 -1
  %1344 = getelementptr i64*, i64** %1307, i64 -1
  %1345 = getelementptr i64*, i64** %1299, i64 -1
  %1346 = getelementptr i64*, i64** %1307, i64 -1
  br label %1347

1347:                                             ; preds = %1347, %1341
  %1348 = phi i64 [ 0, %1341 ], [ %1382, %1347 ]
  %1349 = phi i64 [ %1342, %1341 ], [ %1383, %1347 ]
  %1350 = sub i64 0, %1348
  %1351 = sub i64 0, %1348
  %1352 = getelementptr inbounds i64*, i64** %1343, i64 %1350
  %1353 = getelementptr inbounds i64*, i64** %1344, i64 %1351
  %1354 = getelementptr inbounds i64*, i64** %1353, i64 -1
  %1355 = bitcast i64** %1354 to <2 x i64>*
  %1356 = load <2 x i64>, <2 x i64>* %1355, align 8, !alias.scope !74
  %1357 = getelementptr inbounds i64*, i64** %1353, i64 -2
  %1358 = getelementptr inbounds i64*, i64** %1357, i64 -1
  %1359 = bitcast i64** %1358 to <2 x i64>*
  %1360 = load <2 x i64>, <2 x i64>* %1359, align 8, !alias.scope !74
  %1361 = getelementptr inbounds i64*, i64** %1352, i64 -1
  %1362 = bitcast i64** %1361 to <2 x i64>*
  store <2 x i64> %1356, <2 x i64>* %1362, align 8, !alias.scope !77, !noalias !74
  %1363 = getelementptr inbounds i64*, i64** %1352, i64 -2
  %1364 = getelementptr inbounds i64*, i64** %1363, i64 -1
  %1365 = bitcast i64** %1364 to <2 x i64>*
  store <2 x i64> %1360, <2 x i64>* %1365, align 8, !alias.scope !77, !noalias !74
  %1366 = sub nuw nsw i64 -4, %1348
  %1367 = sub nuw nsw i64 -4, %1348
  %1368 = getelementptr inbounds i64*, i64** %1345, i64 %1366
  %1369 = getelementptr inbounds i64*, i64** %1346, i64 %1367
  %1370 = getelementptr inbounds i64*, i64** %1369, i64 -1
  %1371 = bitcast i64** %1370 to <2 x i64>*
  %1372 = load <2 x i64>, <2 x i64>* %1371, align 8, !alias.scope !74
  %1373 = getelementptr inbounds i64*, i64** %1369, i64 -2
  %1374 = getelementptr inbounds i64*, i64** %1373, i64 -1
  %1375 = bitcast i64** %1374 to <2 x i64>*
  %1376 = load <2 x i64>, <2 x i64>* %1375, align 8, !alias.scope !74
  %1377 = getelementptr inbounds i64*, i64** %1368, i64 -1
  %1378 = bitcast i64** %1377 to <2 x i64>*
  store <2 x i64> %1372, <2 x i64>* %1378, align 8, !alias.scope !77, !noalias !74
  %1379 = getelementptr inbounds i64*, i64** %1368, i64 -2
  %1380 = getelementptr inbounds i64*, i64** %1379, i64 -1
  %1381 = bitcast i64** %1380 to <2 x i64>*
  store <2 x i64> %1376, <2 x i64>* %1381, align 8, !alias.scope !77, !noalias !74
  %1382 = add i64 %1348, 8
  %1383 = add i64 %1349, -2
  %1384 = icmp eq i64 %1383, 0
  br i1 %1384, label %1385, label %1347, !llvm.loop !79

1385:                                             ; preds = %1347, %1330
  %1386 = phi i64 [ 0, %1330 ], [ %1382, %1347 ]
  %1387 = icmp eq i64 %1339, 0
  br i1 %1387, label %1407, label %1388

1388:                                             ; preds = %1385
  %1389 = sub i64 0, %1386
  %1390 = getelementptr i64*, i64** %1299, i64 -1
  %1391 = sub i64 0, %1386
  %1392 = getelementptr i64*, i64** %1307, i64 -1
  %1393 = getelementptr inbounds i64*, i64** %1390, i64 %1389
  %1394 = getelementptr inbounds i64*, i64** %1392, i64 %1391
  %1395 = getelementptr inbounds i64*, i64** %1394, i64 -1
  %1396 = bitcast i64** %1395 to <2 x i64>*
  %1397 = load <2 x i64>, <2 x i64>* %1396, align 8, !alias.scope !74
  %1398 = getelementptr inbounds i64*, i64** %1394, i64 -2
  %1399 = getelementptr inbounds i64*, i64** %1398, i64 -1
  %1400 = bitcast i64** %1399 to <2 x i64>*
  %1401 = load <2 x i64>, <2 x i64>* %1400, align 8, !alias.scope !74
  %1402 = getelementptr inbounds i64*, i64** %1393, i64 -1
  %1403 = bitcast i64** %1402 to <2 x i64>*
  store <2 x i64> %1397, <2 x i64>* %1403, align 8, !alias.scope !77, !noalias !74
  %1404 = getelementptr inbounds i64*, i64** %1393, i64 -2
  %1405 = getelementptr inbounds i64*, i64** %1404, i64 -1
  %1406 = bitcast i64** %1405 to <2 x i64>*
  store <2 x i64> %1401, <2 x i64>* %1406, align 8, !alias.scope !77, !noalias !74
  br label %1407

1407:                                             ; preds = %1385, %1388
  %1408 = icmp eq i64 %1314, %1331
  br i1 %1408, label %1479, label %1409

1409:                                             ; preds = %1407, %1316, %1309
  %1410 = phi i64** [ %1299, %1316 ], [ %1299, %1309 ], [ %1333, %1407 ]
  %1411 = phi i64** [ %1307, %1316 ], [ %1307, %1309 ], [ %1335, %1407 ]
  %1412 = getelementptr i64*, i64** %1411, i64 -1
  %1413 = ptrtoint i64** %1412 to i64
  %1414 = sub i64 %1413, %1306
  %1415 = lshr i64 %1414, 3
  %1416 = add nuw nsw i64 %1415, 1
  %1417 = and i64 %1416, 7
  %1418 = icmp eq i64 %1417, 0
  br i1 %1418, label %1430, label %1419

1419:                                             ; preds = %1409, %1419
  %1420 = phi i64** [ %1423, %1419 ], [ %1410, %1409 ]
  %1421 = phi i64** [ %1424, %1419 ], [ %1411, %1409 ]
  %1422 = phi i64 [ %1428, %1419 ], [ %1417, %1409 ]
  %1423 = getelementptr inbounds i64*, i64** %1420, i64 -1
  %1424 = getelementptr inbounds i64*, i64** %1421, i64 -1
  %1425 = bitcast i64** %1424 to i64*
  %1426 = load i64, i64* %1425, align 8
  %1427 = bitcast i64** %1423 to i64*
  store i64 %1426, i64* %1427, align 8
  %1428 = add i64 %1422, -1
  %1429 = icmp eq i64 %1428, 0
  br i1 %1429, label %1430, label %1419, !llvm.loop !80

1430:                                             ; preds = %1419, %1409
  %1431 = phi i64** [ undef, %1409 ], [ %1423, %1419 ]
  %1432 = phi i64** [ %1410, %1409 ], [ %1423, %1419 ]
  %1433 = phi i64** [ %1411, %1409 ], [ %1424, %1419 ]
  %1434 = icmp ult i64 %1414, 56
  br i1 %1434, label %1479, label %1435

1435:                                             ; preds = %1430, %1435
  %1436 = phi i64** [ %1473, %1435 ], [ %1432, %1430 ]
  %1437 = phi i64** [ %1474, %1435 ], [ %1433, %1430 ]
  %1438 = getelementptr inbounds i64*, i64** %1436, i64 -1
  %1439 = getelementptr inbounds i64*, i64** %1437, i64 -1
  %1440 = bitcast i64** %1439 to i64*
  %1441 = load i64, i64* %1440, align 8
  %1442 = bitcast i64** %1438 to i64*
  store i64 %1441, i64* %1442, align 8
  %1443 = getelementptr inbounds i64*, i64** %1436, i64 -2
  %1444 = getelementptr inbounds i64*, i64** %1437, i64 -2
  %1445 = bitcast i64** %1444 to i64*
  %1446 = load i64, i64* %1445, align 8
  %1447 = bitcast i64** %1443 to i64*
  store i64 %1446, i64* %1447, align 8
  %1448 = getelementptr inbounds i64*, i64** %1436, i64 -3
  %1449 = getelementptr inbounds i64*, i64** %1437, i64 -3
  %1450 = bitcast i64** %1449 to i64*
  %1451 = load i64, i64* %1450, align 8
  %1452 = bitcast i64** %1448 to i64*
  store i64 %1451, i64* %1452, align 8
  %1453 = getelementptr inbounds i64*, i64** %1436, i64 -4
  %1454 = getelementptr inbounds i64*, i64** %1437, i64 -4
  %1455 = bitcast i64** %1454 to i64*
  %1456 = load i64, i64* %1455, align 8
  %1457 = bitcast i64** %1453 to i64*
  store i64 %1456, i64* %1457, align 8
  %1458 = getelementptr inbounds i64*, i64** %1436, i64 -5
  %1459 = getelementptr inbounds i64*, i64** %1437, i64 -5
  %1460 = bitcast i64** %1459 to i64*
  %1461 = load i64, i64* %1460, align 8
  %1462 = bitcast i64** %1458 to i64*
  store i64 %1461, i64* %1462, align 8
  %1463 = getelementptr inbounds i64*, i64** %1436, i64 -6
  %1464 = getelementptr inbounds i64*, i64** %1437, i64 -6
  %1465 = bitcast i64** %1464 to i64*
  %1466 = load i64, i64* %1465, align 8
  %1467 = bitcast i64** %1463 to i64*
  store i64 %1466, i64* %1467, align 8
  %1468 = getelementptr inbounds i64*, i64** %1436, i64 -7
  %1469 = getelementptr inbounds i64*, i64** %1437, i64 -7
  %1470 = bitcast i64** %1469 to i64*
  %1471 = load i64, i64* %1470, align 8
  %1472 = bitcast i64** %1468 to i64*
  store i64 %1471, i64* %1472, align 8
  %1473 = getelementptr inbounds i64*, i64** %1436, i64 -8
  %1474 = getelementptr inbounds i64*, i64** %1437, i64 -8
  %1475 = bitcast i64** %1474 to i64*
  %1476 = load i64, i64* %1475, align 8
  %1477 = bitcast i64** %1473 to i64*
  store i64 %1476, i64* %1477, align 8
  %1478 = icmp eq i64** %1474, %1305
  br i1 %1478, label %1479, label %1435, !llvm.loop !81

1479:                                             ; preds = %1430, %1435, %1407, %1295
  %1480 = phi i64** [ %1299, %1295 ], [ %1333, %1407 ], [ %1431, %1430 ], [ %1473, %1435 ]
  %1481 = ptrtoint i64** %1480 to i64
  store i64 %1481, i64* %1022, align 8
  store i64 %1304, i64* %1238, align 8
  store i64 %1301, i64* %1020, align 8
  br label %1482

1482:                                             ; preds = %1254, %1479
  %1483 = add nuw i64 %1243, 1
  %1484 = load i64, i64* %978, align 8
  %1485 = load i64, i64* %980, align 8
  %1486 = sub i64 %1484, %1485
  %1487 = ashr exact i64 %1486, 3
  %1488 = icmp ult i64 %1483, %1487
  br i1 %1488, label %1241, label %1489

1489:                                             ; preds = %1241, %1482
  %1490 = phi i64 [ %1483, %1482 ], [ %1243, %1241 ]
  %1491 = load i64**, i64*** %1019, align 8
  br label %1492

1492:                                             ; preds = %1489, %1231
  %1493 = phi i64** [ %1232, %1231 ], [ %1491, %1489 ]
  %1494 = phi i64 [ 0, %1231 ], [ %1490, %1489 ]
  %1495 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 1
  %1496 = load i64**, i64*** %1495, align 8
  %1497 = icmp eq i64** %1496, %1493
  br i1 %1497, label %1503, label %1498

1498:                                             ; preds = %1492
  %1499 = bitcast i64** %1496 to i64*
  store i64 %4, i64* %1499, align 8
  %1500 = getelementptr inbounds i64*, i64** %1496, i64 1
  %1501 = ptrtoint i64** %1500 to i64
  %1502 = bitcast i64*** %1495 to i64*
  store i64 %1501, i64* %1502, align 8
  br label %1724

1503:                                             ; preds = %1492
  %1504 = ptrtoint i64** %1493 to i64
  %1505 = bitcast i64*** %1495 to i64*
  %1506 = load i64, i64* %1022, align 8
  %1507 = sub i64 %1504, %1506
  %1508 = ashr exact i64 %1507, 3
  %1509 = add nsw i64 %1508, 1
  %1510 = icmp ugt i64 %1509, 268435455
  br i1 %1510, label %1511, label %1513

1511:                                             ; preds = %1503
  %1512 = inttoptr i64 %1009 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1512) #15
  unreachable

1513:                                             ; preds = %1503
  %1514 = icmp ult i64 %1508, 134217727
  br i1 %1514, label %1515, label %1520

1515:                                             ; preds = %1513
  %1516 = ashr exact i64 %1507, 2
  %1517 = icmp ult i64 %1516, %1509
  %1518 = select i1 %1517, i64 %1509, i64 %1516
  %1519 = icmp eq i64 %1518, 0
  br i1 %1519, label %1538, label %1520

1520:                                             ; preds = %1515, %1513
  %1521 = phi i64 [ %1518, %1515 ], [ 268435455, %1513 ]
  %1522 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1523 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1522, align 8
  %1524 = shl i64 %1521, 3
  %1525 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1523, i64 0, i32 2
  %1526 = load i64, i64* %1525, align 8
  %1527 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1523, i64 0, i32 3
  %1528 = load i64, i64* %1527, align 8
  %1529 = sub i64 %1528, %1526
  %1530 = icmp ugt i64 %1524, %1529
  br i1 %1530, label %1531, label %1533, !prof !4

1531:                                             ; preds = %1520
  %1532 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1523, i64 %1524) #14
  br label %1535

1533:                                             ; preds = %1520
  %1534 = add i64 %1526, %1524
  store i64 %1534, i64* %1525, align 8
  br label %1535

1535:                                             ; preds = %1533, %1531
  %1536 = phi i64 [ %1532, %1531 ], [ %1526, %1533 ]
  %1537 = inttoptr i64 %1536 to i64**
  br label %1538

1538:                                             ; preds = %1535, %1515
  %1539 = phi i64 [ %1521, %1535 ], [ 0, %1515 ]
  %1540 = phi i64** [ %1537, %1535 ], [ null, %1515 ]
  %1541 = getelementptr inbounds i64*, i64** %1540, i64 %1508
  %1542 = getelementptr inbounds i64*, i64** %1540, i64 %1539
  %1543 = ptrtoint i64** %1542 to i64
  %1544 = bitcast i64** %1541 to i64*
  store i64 %4, i64* %1544, align 8
  %1545 = getelementptr inbounds i64*, i64** %1541, i64 1
  %1546 = ptrtoint i64** %1545 to i64
  %1547 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 0
  %1548 = load i64**, i64*** %1547, align 8
  %1549 = ptrtoint i64** %1548 to i64
  %1550 = load i64**, i64*** %1495, align 8
  %1551 = icmp eq i64** %1550, %1548
  br i1 %1551, label %1721, label %1552

1552:                                             ; preds = %1538
  %1553 = getelementptr i64*, i64** %1550, i64 -1
  %1554 = ptrtoint i64** %1553 to i64
  %1555 = sub i64 %1554, %1549
  %1556 = lshr i64 %1555, 3
  %1557 = add nuw nsw i64 %1556, 1
  %1558 = icmp ult i64 %1557, 4
  br i1 %1558, label %1651, label %1559

1559:                                             ; preds = %1552
  %1560 = getelementptr i64*, i64** %1550, i64 -1
  %1561 = ptrtoint i64** %1560 to i64
  %1562 = sub i64 %1561, %1549
  %1563 = lshr i64 %1562, 3
  %1564 = xor i64 %1563, -1
  %1565 = add nsw i64 %1508, %1564
  %1566 = getelementptr i64*, i64** %1540, i64 %1565
  %1567 = xor i64 %1563, -1
  %1568 = getelementptr i64*, i64** %1550, i64 %1567
  %1569 = icmp ult i64** %1566, %1550
  %1570 = icmp ult i64** %1568, %1541
  %1571 = and i1 %1569, %1570
  br i1 %1571, label %1651, label %1572

1572:                                             ; preds = %1559
  %1573 = and i64 %1557, 4611686018427387900
  %1574 = sub nsw i64 0, %1573
  %1575 = getelementptr i64*, i64** %1541, i64 %1574
  %1576 = sub nsw i64 0, %1573
  %1577 = getelementptr i64*, i64** %1550, i64 %1576
  %1578 = add nsw i64 %1573, -4
  %1579 = lshr exact i64 %1578, 2
  %1580 = add nuw nsw i64 %1579, 1
  %1581 = and i64 %1580, 1
  %1582 = icmp eq i64 %1578, 0
  br i1 %1582, label %1629, label %1583

1583:                                             ; preds = %1572
  %1584 = sub nuw nsw i64 %1580, %1581
  %1585 = getelementptr i64*, i64** %1541, i64 -1
  %1586 = getelementptr i64*, i64** %1550, i64 -1
  %1587 = getelementptr i64*, i64** %1541, i64 -1
  %1588 = getelementptr i64*, i64** %1550, i64 -1
  br label %1589

1589:                                             ; preds = %1589, %1583
  %1590 = phi i64 [ 0, %1583 ], [ %1624, %1589 ]
  %1591 = phi i64 [ %1584, %1583 ], [ %1625, %1589 ]
  %1592 = sub i64 0, %1590
  %1593 = sub i64 0, %1590
  %1594 = getelementptr inbounds i64*, i64** %1585, i64 %1592
  %1595 = getelementptr inbounds i64*, i64** %1586, i64 %1593
  %1596 = getelementptr inbounds i64*, i64** %1595, i64 -1
  %1597 = bitcast i64** %1596 to <2 x i64>*
  %1598 = load <2 x i64>, <2 x i64>* %1597, align 8, !alias.scope !82
  %1599 = getelementptr inbounds i64*, i64** %1595, i64 -2
  %1600 = getelementptr inbounds i64*, i64** %1599, i64 -1
  %1601 = bitcast i64** %1600 to <2 x i64>*
  %1602 = load <2 x i64>, <2 x i64>* %1601, align 8, !alias.scope !82
  %1603 = getelementptr inbounds i64*, i64** %1594, i64 -1
  %1604 = bitcast i64** %1603 to <2 x i64>*
  store <2 x i64> %1598, <2 x i64>* %1604, align 8, !alias.scope !85, !noalias !82
  %1605 = getelementptr inbounds i64*, i64** %1594, i64 -2
  %1606 = getelementptr inbounds i64*, i64** %1605, i64 -1
  %1607 = bitcast i64** %1606 to <2 x i64>*
  store <2 x i64> %1602, <2 x i64>* %1607, align 8, !alias.scope !85, !noalias !82
  %1608 = sub nuw nsw i64 -4, %1590
  %1609 = sub nuw nsw i64 -4, %1590
  %1610 = getelementptr inbounds i64*, i64** %1587, i64 %1608
  %1611 = getelementptr inbounds i64*, i64** %1588, i64 %1609
  %1612 = getelementptr inbounds i64*, i64** %1611, i64 -1
  %1613 = bitcast i64** %1612 to <2 x i64>*
  %1614 = load <2 x i64>, <2 x i64>* %1613, align 8, !alias.scope !82
  %1615 = getelementptr inbounds i64*, i64** %1611, i64 -2
  %1616 = getelementptr inbounds i64*, i64** %1615, i64 -1
  %1617 = bitcast i64** %1616 to <2 x i64>*
  %1618 = load <2 x i64>, <2 x i64>* %1617, align 8, !alias.scope !82
  %1619 = getelementptr inbounds i64*, i64** %1610, i64 -1
  %1620 = bitcast i64** %1619 to <2 x i64>*
  store <2 x i64> %1614, <2 x i64>* %1620, align 8, !alias.scope !85, !noalias !82
  %1621 = getelementptr inbounds i64*, i64** %1610, i64 -2
  %1622 = getelementptr inbounds i64*, i64** %1621, i64 -1
  %1623 = bitcast i64** %1622 to <2 x i64>*
  store <2 x i64> %1618, <2 x i64>* %1623, align 8, !alias.scope !85, !noalias !82
  %1624 = add i64 %1590, 8
  %1625 = add i64 %1591, -2
  %1626 = icmp eq i64 %1625, 0
  br i1 %1626, label %1627, label %1589, !llvm.loop !87

1627:                                             ; preds = %1589
  %1628 = sub nuw nsw i64 -8, %1590
  br label %1629

1629:                                             ; preds = %1627, %1572
  %1630 = phi i64 [ 0, %1572 ], [ %1628, %1627 ]
  %1631 = icmp eq i64 %1581, 0
  br i1 %1631, label %1649, label %1632

1632:                                             ; preds = %1629
  %1633 = getelementptr i64*, i64** %1541, i64 -1
  %1634 = getelementptr i64*, i64** %1550, i64 -1
  %1635 = getelementptr inbounds i64*, i64** %1633, i64 %1630
  %1636 = getelementptr inbounds i64*, i64** %1634, i64 %1630
  %1637 = getelementptr inbounds i64*, i64** %1636, i64 -1
  %1638 = bitcast i64** %1637 to <2 x i64>*
  %1639 = load <2 x i64>, <2 x i64>* %1638, align 8, !alias.scope !82
  %1640 = getelementptr inbounds i64*, i64** %1636, i64 -2
  %1641 = getelementptr inbounds i64*, i64** %1640, i64 -1
  %1642 = bitcast i64** %1641 to <2 x i64>*
  %1643 = load <2 x i64>, <2 x i64>* %1642, align 8, !alias.scope !82
  %1644 = getelementptr inbounds i64*, i64** %1635, i64 -1
  %1645 = bitcast i64** %1644 to <2 x i64>*
  store <2 x i64> %1639, <2 x i64>* %1645, align 8, !alias.scope !85, !noalias !82
  %1646 = getelementptr inbounds i64*, i64** %1635, i64 -2
  %1647 = getelementptr inbounds i64*, i64** %1646, i64 -1
  %1648 = bitcast i64** %1647 to <2 x i64>*
  store <2 x i64> %1643, <2 x i64>* %1648, align 8, !alias.scope !85, !noalias !82
  br label %1649

1649:                                             ; preds = %1629, %1632
  %1650 = icmp eq i64 %1557, %1573
  br i1 %1650, label %1721, label %1651

1651:                                             ; preds = %1649, %1559, %1552
  %1652 = phi i64** [ %1541, %1559 ], [ %1541, %1552 ], [ %1575, %1649 ]
  %1653 = phi i64** [ %1550, %1559 ], [ %1550, %1552 ], [ %1577, %1649 ]
  %1654 = getelementptr i64*, i64** %1653, i64 -1
  %1655 = ptrtoint i64** %1654 to i64
  %1656 = sub i64 %1655, %1549
  %1657 = lshr i64 %1656, 3
  %1658 = add nuw nsw i64 %1657, 1
  %1659 = and i64 %1658, 7
  %1660 = icmp eq i64 %1659, 0
  br i1 %1660, label %1672, label %1661

1661:                                             ; preds = %1651, %1661
  %1662 = phi i64** [ %1665, %1661 ], [ %1652, %1651 ]
  %1663 = phi i64** [ %1666, %1661 ], [ %1653, %1651 ]
  %1664 = phi i64 [ %1670, %1661 ], [ %1659, %1651 ]
  %1665 = getelementptr inbounds i64*, i64** %1662, i64 -1
  %1666 = getelementptr inbounds i64*, i64** %1663, i64 -1
  %1667 = bitcast i64** %1666 to i64*
  %1668 = load i64, i64* %1667, align 8
  %1669 = bitcast i64** %1665 to i64*
  store i64 %1668, i64* %1669, align 8
  %1670 = add i64 %1664, -1
  %1671 = icmp eq i64 %1670, 0
  br i1 %1671, label %1672, label %1661, !llvm.loop !88

1672:                                             ; preds = %1661, %1651
  %1673 = phi i64** [ undef, %1651 ], [ %1665, %1661 ]
  %1674 = phi i64** [ %1652, %1651 ], [ %1665, %1661 ]
  %1675 = phi i64** [ %1653, %1651 ], [ %1666, %1661 ]
  %1676 = icmp ult i64 %1656, 56
  br i1 %1676, label %1721, label %1677

1677:                                             ; preds = %1672, %1677
  %1678 = phi i64** [ %1715, %1677 ], [ %1674, %1672 ]
  %1679 = phi i64** [ %1716, %1677 ], [ %1675, %1672 ]
  %1680 = getelementptr inbounds i64*, i64** %1678, i64 -1
  %1681 = getelementptr inbounds i64*, i64** %1679, i64 -1
  %1682 = bitcast i64** %1681 to i64*
  %1683 = load i64, i64* %1682, align 8
  %1684 = bitcast i64** %1680 to i64*
  store i64 %1683, i64* %1684, align 8
  %1685 = getelementptr inbounds i64*, i64** %1678, i64 -2
  %1686 = getelementptr inbounds i64*, i64** %1679, i64 -2
  %1687 = bitcast i64** %1686 to i64*
  %1688 = load i64, i64* %1687, align 8
  %1689 = bitcast i64** %1685 to i64*
  store i64 %1688, i64* %1689, align 8
  %1690 = getelementptr inbounds i64*, i64** %1678, i64 -3
  %1691 = getelementptr inbounds i64*, i64** %1679, i64 -3
  %1692 = bitcast i64** %1691 to i64*
  %1693 = load i64, i64* %1692, align 8
  %1694 = bitcast i64** %1690 to i64*
  store i64 %1693, i64* %1694, align 8
  %1695 = getelementptr inbounds i64*, i64** %1678, i64 -4
  %1696 = getelementptr inbounds i64*, i64** %1679, i64 -4
  %1697 = bitcast i64** %1696 to i64*
  %1698 = load i64, i64* %1697, align 8
  %1699 = bitcast i64** %1695 to i64*
  store i64 %1698, i64* %1699, align 8
  %1700 = getelementptr inbounds i64*, i64** %1678, i64 -5
  %1701 = getelementptr inbounds i64*, i64** %1679, i64 -5
  %1702 = bitcast i64** %1701 to i64*
  %1703 = load i64, i64* %1702, align 8
  %1704 = bitcast i64** %1700 to i64*
  store i64 %1703, i64* %1704, align 8
  %1705 = getelementptr inbounds i64*, i64** %1678, i64 -6
  %1706 = getelementptr inbounds i64*, i64** %1679, i64 -6
  %1707 = bitcast i64** %1706 to i64*
  %1708 = load i64, i64* %1707, align 8
  %1709 = bitcast i64** %1705 to i64*
  store i64 %1708, i64* %1709, align 8
  %1710 = getelementptr inbounds i64*, i64** %1678, i64 -7
  %1711 = getelementptr inbounds i64*, i64** %1679, i64 -7
  %1712 = bitcast i64** %1711 to i64*
  %1713 = load i64, i64* %1712, align 8
  %1714 = bitcast i64** %1710 to i64*
  store i64 %1713, i64* %1714, align 8
  %1715 = getelementptr inbounds i64*, i64** %1678, i64 -8
  %1716 = getelementptr inbounds i64*, i64** %1679, i64 -8
  %1717 = bitcast i64** %1716 to i64*
  %1718 = load i64, i64* %1717, align 8
  %1719 = bitcast i64** %1715 to i64*
  store i64 %1718, i64* %1719, align 8
  %1720 = icmp eq i64** %1716, %1548
  br i1 %1720, label %1721, label %1677, !llvm.loop !89

1721:                                             ; preds = %1672, %1677, %1649, %1538
  %1722 = phi i64** [ %1541, %1538 ], [ %1575, %1649 ], [ %1673, %1672 ], [ %1715, %1677 ]
  %1723 = ptrtoint i64** %1722 to i64
  store i64 %1723, i64* %1022, align 8
  store i64 %1546, i64* %1505, align 8
  store i64 %1543, i64* %1020, align 8
  br label %1724

1724:                                             ; preds = %1498, %1721
  %1725 = phi i64** [ %1500, %1498 ], [ %1545, %1721 ]
  %1726 = load i64, i64* %978, align 8
  %1727 = load i64, i64* %980, align 8
  %1728 = sub i64 %1726, %1727
  %1729 = ashr exact i64 %1728, 3
  %1730 = icmp ult i64 %1494, %1729
  br i1 %1730, label %1731, label %1978

1731:                                             ; preds = %1724
  %1732 = bitcast i64*** %1495 to i64*
  %1733 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1734 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %1011, i64 0, i32 0, i32 0, i32 0
  br label %1735

1735:                                             ; preds = %1731, %1970
  %1736 = phi i64** [ %1725, %1731 ], [ %1971, %1970 ]
  %1737 = phi i64 [ %1727, %1731 ], [ %1974, %1970 ]
  %1738 = phi i64 [ %1494, %1731 ], [ %1972, %1970 ]
  %1739 = inttoptr i64 %1737 to i64**
  %1740 = getelementptr inbounds i64*, i64** %1739, i64 %1738
  %1741 = load i64**, i64*** %1019, align 8
  %1742 = icmp eq i64** %1736, %1741
  br i1 %1742, label %1749, label %1743

1743:                                             ; preds = %1735
  %1744 = bitcast i64** %1740 to i64*
  %1745 = load i64, i64* %1744, align 8
  %1746 = bitcast i64** %1736 to i64*
  store i64 %1745, i64* %1746, align 8
  %1747 = getelementptr inbounds i64*, i64** %1736, i64 1
  %1748 = ptrtoint i64** %1747 to i64
  store i64 %1748, i64* %1732, align 8
  br label %1970

1749:                                             ; preds = %1735
  %1750 = ptrtoint i64** %1741 to i64
  %1751 = load i64, i64* %1022, align 8
  %1752 = sub i64 %1750, %1751
  %1753 = ashr exact i64 %1752, 3
  %1754 = add nsw i64 %1753, 1
  %1755 = icmp ugt i64 %1754, 268435455
  br i1 %1755, label %1756, label %1758

1756:                                             ; preds = %1749
  %1757 = inttoptr i64 %1009 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1757) #15
  unreachable

1758:                                             ; preds = %1749
  %1759 = icmp ult i64 %1753, 134217727
  br i1 %1759, label %1760, label %1765

1760:                                             ; preds = %1758
  %1761 = ashr exact i64 %1752, 2
  %1762 = icmp ult i64 %1761, %1754
  %1763 = select i1 %1762, i64 %1754, i64 %1761
  %1764 = icmp eq i64 %1763, 0
  br i1 %1764, label %1782, label %1765

1765:                                             ; preds = %1760, %1758
  %1766 = phi i64 [ %1763, %1760 ], [ 268435455, %1758 ]
  %1767 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1733, align 8
  %1768 = shl i64 %1766, 3
  %1769 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1767, i64 0, i32 2
  %1770 = load i64, i64* %1769, align 8
  %1771 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1767, i64 0, i32 3
  %1772 = load i64, i64* %1771, align 8
  %1773 = sub i64 %1772, %1770
  %1774 = icmp ugt i64 %1768, %1773
  br i1 %1774, label %1775, label %1777, !prof !4

1775:                                             ; preds = %1765
  %1776 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1767, i64 %1768) #14
  br label %1779

1777:                                             ; preds = %1765
  %1778 = add i64 %1770, %1768
  store i64 %1778, i64* %1769, align 8
  br label %1779

1779:                                             ; preds = %1777, %1775
  %1780 = phi i64 [ %1776, %1775 ], [ %1770, %1777 ]
  %1781 = inttoptr i64 %1780 to i64**
  br label %1782

1782:                                             ; preds = %1779, %1760
  %1783 = phi i64 [ %1766, %1779 ], [ 0, %1760 ]
  %1784 = phi i64** [ %1781, %1779 ], [ null, %1760 ]
  %1785 = getelementptr inbounds i64*, i64** %1784, i64 %1753
  %1786 = getelementptr inbounds i64*, i64** %1784, i64 %1783
  %1787 = ptrtoint i64** %1786 to i64
  %1788 = bitcast i64** %1740 to i64*
  %1789 = load i64, i64* %1788, align 8
  %1790 = bitcast i64** %1785 to i64*
  store i64 %1789, i64* %1790, align 8
  %1791 = getelementptr inbounds i64*, i64** %1785, i64 1
  %1792 = ptrtoint i64** %1791 to i64
  %1793 = load i64**, i64*** %1734, align 8
  %1794 = ptrtoint i64** %1793 to i64
  %1795 = load i64**, i64*** %1495, align 8
  %1796 = icmp eq i64** %1795, %1793
  br i1 %1796, label %1967, label %1797

1797:                                             ; preds = %1782
  %1798 = getelementptr i64*, i64** %1795, i64 -1
  %1799 = ptrtoint i64** %1798 to i64
  %1800 = sub i64 %1799, %1794
  %1801 = lshr i64 %1800, 3
  %1802 = add nuw nsw i64 %1801, 1
  %1803 = icmp ult i64 %1802, 4
  br i1 %1803, label %1897, label %1804

1804:                                             ; preds = %1797
  %1805 = getelementptr i64*, i64** %1784, i64 -1
  %1806 = getelementptr i64*, i64** %1795, i64 -1
  %1807 = ptrtoint i64** %1806 to i64
  %1808 = sub i64 %1807, %1794
  %1809 = lshr i64 %1808, 3
  %1810 = sub nsw i64 %1753, %1809
  %1811 = getelementptr i64*, i64** %1805, i64 %1810
  %1812 = getelementptr i64*, i64** %1795, i64 -1
  %1813 = sub nsw i64 0, %1809
  %1814 = getelementptr i64*, i64** %1812, i64 %1813
  %1815 = icmp ult i64** %1811, %1795
  %1816 = icmp ult i64** %1814, %1785
  %1817 = and i1 %1815, %1816
  br i1 %1817, label %1897, label %1818

1818:                                             ; preds = %1804
  %1819 = and i64 %1802, 4611686018427387900
  %1820 = sub nsw i64 0, %1819
  %1821 = getelementptr i64*, i64** %1785, i64 %1820
  %1822 = sub nsw i64 0, %1819
  %1823 = getelementptr i64*, i64** %1795, i64 %1822
  %1824 = add nsw i64 %1819, -4
  %1825 = lshr exact i64 %1824, 2
  %1826 = add nuw nsw i64 %1825, 1
  %1827 = and i64 %1826, 1
  %1828 = icmp eq i64 %1824, 0
  br i1 %1828, label %1873, label %1829

1829:                                             ; preds = %1818
  %1830 = sub nuw nsw i64 %1826, %1827
  %1831 = getelementptr i64*, i64** %1785, i64 -1
  %1832 = getelementptr i64*, i64** %1795, i64 -1
  %1833 = getelementptr i64*, i64** %1785, i64 -1
  %1834 = getelementptr i64*, i64** %1795, i64 -1
  br label %1835

1835:                                             ; preds = %1835, %1829
  %1836 = phi i64 [ 0, %1829 ], [ %1870, %1835 ]
  %1837 = phi i64 [ %1830, %1829 ], [ %1871, %1835 ]
  %1838 = sub i64 0, %1836
  %1839 = sub i64 0, %1836
  %1840 = getelementptr inbounds i64*, i64** %1831, i64 %1838
  %1841 = getelementptr inbounds i64*, i64** %1832, i64 %1839
  %1842 = getelementptr inbounds i64*, i64** %1841, i64 -1
  %1843 = bitcast i64** %1842 to <2 x i64>*
  %1844 = load <2 x i64>, <2 x i64>* %1843, align 8, !alias.scope !90
  %1845 = getelementptr inbounds i64*, i64** %1841, i64 -2
  %1846 = getelementptr inbounds i64*, i64** %1845, i64 -1
  %1847 = bitcast i64** %1846 to <2 x i64>*
  %1848 = load <2 x i64>, <2 x i64>* %1847, align 8, !alias.scope !90
  %1849 = getelementptr inbounds i64*, i64** %1840, i64 -1
  %1850 = bitcast i64** %1849 to <2 x i64>*
  store <2 x i64> %1844, <2 x i64>* %1850, align 8, !alias.scope !93, !noalias !90
  %1851 = getelementptr inbounds i64*, i64** %1840, i64 -2
  %1852 = getelementptr inbounds i64*, i64** %1851, i64 -1
  %1853 = bitcast i64** %1852 to <2 x i64>*
  store <2 x i64> %1848, <2 x i64>* %1853, align 8, !alias.scope !93, !noalias !90
  %1854 = sub nuw nsw i64 -4, %1836
  %1855 = sub nuw nsw i64 -4, %1836
  %1856 = getelementptr inbounds i64*, i64** %1833, i64 %1854
  %1857 = getelementptr inbounds i64*, i64** %1834, i64 %1855
  %1858 = getelementptr inbounds i64*, i64** %1857, i64 -1
  %1859 = bitcast i64** %1858 to <2 x i64>*
  %1860 = load <2 x i64>, <2 x i64>* %1859, align 8, !alias.scope !90
  %1861 = getelementptr inbounds i64*, i64** %1857, i64 -2
  %1862 = getelementptr inbounds i64*, i64** %1861, i64 -1
  %1863 = bitcast i64** %1862 to <2 x i64>*
  %1864 = load <2 x i64>, <2 x i64>* %1863, align 8, !alias.scope !90
  %1865 = getelementptr inbounds i64*, i64** %1856, i64 -1
  %1866 = bitcast i64** %1865 to <2 x i64>*
  store <2 x i64> %1860, <2 x i64>* %1866, align 8, !alias.scope !93, !noalias !90
  %1867 = getelementptr inbounds i64*, i64** %1856, i64 -2
  %1868 = getelementptr inbounds i64*, i64** %1867, i64 -1
  %1869 = bitcast i64** %1868 to <2 x i64>*
  store <2 x i64> %1864, <2 x i64>* %1869, align 8, !alias.scope !93, !noalias !90
  %1870 = add i64 %1836, 8
  %1871 = add i64 %1837, -2
  %1872 = icmp eq i64 %1871, 0
  br i1 %1872, label %1873, label %1835, !llvm.loop !95

1873:                                             ; preds = %1835, %1818
  %1874 = phi i64 [ 0, %1818 ], [ %1870, %1835 ]
  %1875 = icmp eq i64 %1827, 0
  br i1 %1875, label %1895, label %1876

1876:                                             ; preds = %1873
  %1877 = sub i64 0, %1874
  %1878 = getelementptr i64*, i64** %1785, i64 -1
  %1879 = sub i64 0, %1874
  %1880 = getelementptr i64*, i64** %1795, i64 -1
  %1881 = getelementptr inbounds i64*, i64** %1878, i64 %1877
  %1882 = getelementptr inbounds i64*, i64** %1880, i64 %1879
  %1883 = getelementptr inbounds i64*, i64** %1882, i64 -1
  %1884 = bitcast i64** %1883 to <2 x i64>*
  %1885 = load <2 x i64>, <2 x i64>* %1884, align 8, !alias.scope !90
  %1886 = getelementptr inbounds i64*, i64** %1882, i64 -2
  %1887 = getelementptr inbounds i64*, i64** %1886, i64 -1
  %1888 = bitcast i64** %1887 to <2 x i64>*
  %1889 = load <2 x i64>, <2 x i64>* %1888, align 8, !alias.scope !90
  %1890 = getelementptr inbounds i64*, i64** %1881, i64 -1
  %1891 = bitcast i64** %1890 to <2 x i64>*
  store <2 x i64> %1885, <2 x i64>* %1891, align 8, !alias.scope !93, !noalias !90
  %1892 = getelementptr inbounds i64*, i64** %1881, i64 -2
  %1893 = getelementptr inbounds i64*, i64** %1892, i64 -1
  %1894 = bitcast i64** %1893 to <2 x i64>*
  store <2 x i64> %1889, <2 x i64>* %1894, align 8, !alias.scope !93, !noalias !90
  br label %1895

1895:                                             ; preds = %1873, %1876
  %1896 = icmp eq i64 %1802, %1819
  br i1 %1896, label %1967, label %1897

1897:                                             ; preds = %1895, %1804, %1797
  %1898 = phi i64** [ %1785, %1804 ], [ %1785, %1797 ], [ %1821, %1895 ]
  %1899 = phi i64** [ %1795, %1804 ], [ %1795, %1797 ], [ %1823, %1895 ]
  %1900 = getelementptr i64*, i64** %1899, i64 -1
  %1901 = ptrtoint i64** %1900 to i64
  %1902 = sub i64 %1901, %1794
  %1903 = lshr i64 %1902, 3
  %1904 = add nuw nsw i64 %1903, 1
  %1905 = and i64 %1904, 7
  %1906 = icmp eq i64 %1905, 0
  br i1 %1906, label %1918, label %1907

1907:                                             ; preds = %1897, %1907
  %1908 = phi i64** [ %1911, %1907 ], [ %1898, %1897 ]
  %1909 = phi i64** [ %1912, %1907 ], [ %1899, %1897 ]
  %1910 = phi i64 [ %1916, %1907 ], [ %1905, %1897 ]
  %1911 = getelementptr inbounds i64*, i64** %1908, i64 -1
  %1912 = getelementptr inbounds i64*, i64** %1909, i64 -1
  %1913 = bitcast i64** %1912 to i64*
  %1914 = load i64, i64* %1913, align 8
  %1915 = bitcast i64** %1911 to i64*
  store i64 %1914, i64* %1915, align 8
  %1916 = add i64 %1910, -1
  %1917 = icmp eq i64 %1916, 0
  br i1 %1917, label %1918, label %1907, !llvm.loop !96

1918:                                             ; preds = %1907, %1897
  %1919 = phi i64** [ undef, %1897 ], [ %1911, %1907 ]
  %1920 = phi i64** [ %1898, %1897 ], [ %1911, %1907 ]
  %1921 = phi i64** [ %1899, %1897 ], [ %1912, %1907 ]
  %1922 = icmp ult i64 %1902, 56
  br i1 %1922, label %1967, label %1923

1923:                                             ; preds = %1918, %1923
  %1924 = phi i64** [ %1961, %1923 ], [ %1920, %1918 ]
  %1925 = phi i64** [ %1962, %1923 ], [ %1921, %1918 ]
  %1926 = getelementptr inbounds i64*, i64** %1924, i64 -1
  %1927 = getelementptr inbounds i64*, i64** %1925, i64 -1
  %1928 = bitcast i64** %1927 to i64*
  %1929 = load i64, i64* %1928, align 8
  %1930 = bitcast i64** %1926 to i64*
  store i64 %1929, i64* %1930, align 8
  %1931 = getelementptr inbounds i64*, i64** %1924, i64 -2
  %1932 = getelementptr inbounds i64*, i64** %1925, i64 -2
  %1933 = bitcast i64** %1932 to i64*
  %1934 = load i64, i64* %1933, align 8
  %1935 = bitcast i64** %1931 to i64*
  store i64 %1934, i64* %1935, align 8
  %1936 = getelementptr inbounds i64*, i64** %1924, i64 -3
  %1937 = getelementptr inbounds i64*, i64** %1925, i64 -3
  %1938 = bitcast i64** %1937 to i64*
  %1939 = load i64, i64* %1938, align 8
  %1940 = bitcast i64** %1936 to i64*
  store i64 %1939, i64* %1940, align 8
  %1941 = getelementptr inbounds i64*, i64** %1924, i64 -4
  %1942 = getelementptr inbounds i64*, i64** %1925, i64 -4
  %1943 = bitcast i64** %1942 to i64*
  %1944 = load i64, i64* %1943, align 8
  %1945 = bitcast i64** %1941 to i64*
  store i64 %1944, i64* %1945, align 8
  %1946 = getelementptr inbounds i64*, i64** %1924, i64 -5
  %1947 = getelementptr inbounds i64*, i64** %1925, i64 -5
  %1948 = bitcast i64** %1947 to i64*
  %1949 = load i64, i64* %1948, align 8
  %1950 = bitcast i64** %1946 to i64*
  store i64 %1949, i64* %1950, align 8
  %1951 = getelementptr inbounds i64*, i64** %1924, i64 -6
  %1952 = getelementptr inbounds i64*, i64** %1925, i64 -6
  %1953 = bitcast i64** %1952 to i64*
  %1954 = load i64, i64* %1953, align 8
  %1955 = bitcast i64** %1951 to i64*
  store i64 %1954, i64* %1955, align 8
  %1956 = getelementptr inbounds i64*, i64** %1924, i64 -7
  %1957 = getelementptr inbounds i64*, i64** %1925, i64 -7
  %1958 = bitcast i64** %1957 to i64*
  %1959 = load i64, i64* %1958, align 8
  %1960 = bitcast i64** %1956 to i64*
  store i64 %1959, i64* %1960, align 8
  %1961 = getelementptr inbounds i64*, i64** %1924, i64 -8
  %1962 = getelementptr inbounds i64*, i64** %1925, i64 -8
  %1963 = bitcast i64** %1962 to i64*
  %1964 = load i64, i64* %1963, align 8
  %1965 = bitcast i64** %1961 to i64*
  store i64 %1964, i64* %1965, align 8
  %1966 = icmp eq i64** %1962, %1793
  br i1 %1966, label %1967, label %1923, !llvm.loop !97

1967:                                             ; preds = %1918, %1923, %1895, %1782
  %1968 = phi i64** [ %1785, %1782 ], [ %1821, %1895 ], [ %1919, %1918 ], [ %1961, %1923 ]
  %1969 = ptrtoint i64** %1968 to i64
  store i64 %1969, i64* %1022, align 8
  store i64 %1792, i64* %1732, align 8
  store i64 %1787, i64* %1020, align 8
  br label %1970

1970:                                             ; preds = %1743, %1967
  %1971 = phi i64** [ %1747, %1743 ], [ %1791, %1967 ]
  %1972 = add nuw i64 %1738, 1
  %1973 = load i64, i64* %978, align 8
  %1974 = load i64, i64* %980, align 8
  %1975 = sub i64 %1973, %1974
  %1976 = ashr exact i64 %1975, 3
  %1977 = icmp ult i64 %1972, %1976
  br i1 %1977, label %1735, label %1978

1978:                                             ; preds = %1970, %1724
  %1979 = or i64 %1009, 2
  store i64 %1979, i64* %6, align 8
  br label %1980

1980:                                             ; preds = %987, %9, %972, %1978, %10
  ret void
}

declare dereferenceable(24) %"class.v8::internal::compiler::ElementsTransition"* @_ZN2v88internal8compiler20ElementsTransitionOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal8compiler20DoubleMapParameterOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal8compiler18FastMapParameterOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph12HeapConstantENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::JSGraph"*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8compiler15LoadElimination12FieldIndexOfERKNS1_11FieldAccessE(%"struct.v8::internal::compiler::FieldAccess"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %0, i64 0, i32 6, i32 0
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %6 [
    i8 0, label %4
    i8 1, label %4
    i8 14, label %4
    i8 2, label %29
    i8 3, label %29
    i8 12, label %29
    i8 11, label %7
    i8 10, label %7
    i8 6, label %7
    i8 4, label %7
    i8 8, label %7
    i8 5, label %5
    i8 13, label %5
    i8 9, label %7
    i8 7, label %7
  ]

4:                                                ; preds = %1, %1, %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #15
  unreachable

5:                                                ; preds = %1, %1
  br label %7

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #15
  unreachable

7:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %5
  %8 = phi i32 [ 3, %5 ], [ 2, %1 ], [ 2, %1 ], [ 2, %1 ], [ 2, %1 ], [ 2, %1 ], [ 2, %1 ], [ 2, %1 ]
  %9 = shl i32 1, %8
  %10 = icmp slt i32 %9, 4
  br i1 %10, label %29, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %0, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %29

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sdiv i32 %17, 4
  %19 = add nsw i32 %18, -1
  %20 = lshr exact i32 %9, 2
  %21 = add nsw i32 %19, %20
  %22 = icmp sgt i32 %21, 32
  %23 = select i1 %22, i32 -1, i32 %21
  %24 = select i1 %22, i32 -1, i32 %19
  %25 = zext i32 %23 to i64
  %26 = shl nuw i64 %25, 32
  %27 = zext i32 %24 to i64
  %28 = or i64 %26, %27
  br label %29

29:                                               ; preds = %1, %1, %1, %11, %7, %15
  %30 = phi i64 [ %28, %15 ], [ -1, %1 ], [ -1, %1 ], [ -1, %1 ], [ -1, %7 ], [ -1, %11 ]
  ret i64 %30
}

declare i64 @_ZN2v88internal8compiler4Type9IntersectES2_S2_PNS0_4ZoneE(i64, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Graph"* @_ZNK2v88internal8compiler15LoadElimination5graphEv(%"class.v8::internal::compiler::LoadElimination"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %4, align 8
  ret %"class.v8::internal::compiler::Graph"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::CommonOperatorBuilder"* @_ZNK2v88internal8compiler15LoadElimination6commonEv(%"class.v8::internal::compiler::LoadElimination"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %4, align 8
  ret %"class.v8::internal::compiler::CommonOperatorBuilder"* %5
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9TypeGuardENS1_4TypeE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64) local_unnamed_addr #1

declare %"class.v8::internal::compiler::HeapConstantType"* @_ZNK2v88internal8compiler4Type14AsHeapConstantEv(%"class.v8::internal::compiler::Type"*) local_unnamed_addr #1

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef5AsMapEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #1

declare i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #1

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11UnreachableEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #1

declare dereferenceable(24) %"struct.v8::internal::compiler::ElementAccess"* @_ZN2v88internal8compiler15ElementAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZN2v88internal8compiler15LoadElimination17UpdateStateForPhiEPKNS2_13AbstractStateEPNS1_4NodeES7_(%"class.v8::internal::compiler::LoadElimination"* nocapture readonly, %"class.v8::internal::compiler::LoadElimination::AbstractState"* readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 251658240
  %8 = icmp eq i32 %7, 251658240
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = lshr i32 %6, 24
  %11 = and i32 %10, 15
  br label %19

12:                                               ; preds = %4
  %13 = ptrtoint %"class.v8::internal::compiler::Node"* %3 to i64
  %14 = add i64 %13, 32
  %15 = inttoptr i64 %14 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %16 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %15, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  br label %19

19:                                               ; preds = %9, %12
  %20 = phi i32 [ %11, %9 ], [ %18, %12 ]
  %21 = add i32 %20, -1
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %24 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %24, i64 0, i32 6
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %24, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %24) #14
  %33 = zext i1 %32 to i32
  %34 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %23, align 8
  %35 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %34) #14
  %36 = zext i1 %35 to i32
  %37 = add i32 %31, %33
  %38 = add i32 %37, %36
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 251658240
  %42 = icmp eq i32 %41, 251658240
  %43 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %44 = add i64 %43, 32
  br i1 %42, label %45, label %49

45:                                               ; preds = %29
  %46 = inttoptr i64 %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 16
  br label %49

49:                                               ; preds = %29, %45
  %50 = phi i64 [ %48, %45 ], [ %44, %29 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::Node"**
  %52 = sext i32 %38 to i64
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, i64 %52
  %54 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %54, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 16777215
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractStateForEffectNodes"* %22 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = ashr exact i64 %64, 3
  %66 = icmp ugt i64 %65, %58
  br i1 %66, label %67, label %71

67:                                               ; preds = %49
  %68 = inttoptr i64 %63 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %68, i64 %58
  %70 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %69, align 8
  br label %71

71:                                               ; preds = %49, %67
  %72 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %70, %67 ], [ null, %49 ]
  %73 = load i32, i32* %5, align 4
  %74 = and i32 %73, 251658240
  %75 = icmp eq i32 %74, 251658240
  %76 = ptrtoint %"class.v8::internal::compiler::Node"* %3 to i64
  %77 = add i64 %76, 32
  br i1 %75, label %78, label %82

78:                                               ; preds = %71
  %79 = inttoptr i64 %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 16
  br label %82

82:                                               ; preds = %71, %78
  %83 = phi i64 [ %81, %78 ], [ %77, %71 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %72, i64 0, i32 3
  %85 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %85, null
  br i1 %86, label %379, label %87

87:                                               ; preds = %82, %125
  %88 = phi i64 [ %126, %125 ], [ %83, %82 ]
  %89 = inttoptr i64 %88 to %"class.v8::internal::compiler::Node"**
  %90 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %90, i64 0, i32 0
  %92 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %92, i64 0, i32 2
  %94 = load i16, i16* %93, align 8
  switch i16 %94, label %127 [
    i16 207, label %95
    i16 40, label %95
    i16 59, label %95
  ]

95:                                               ; preds = %87, %87, %87
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %90, i64 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = lshr i32 %97, 24
  %99 = and i32 %98, 15
  %100 = icmp eq i32 %99, 15
  %101 = ptrtoint %"class.v8::internal::compiler::Node"* %90 to i64
  %102 = add i64 %101, 32
  br i1 %100, label %103, label %110

103:                                              ; preds = %95
  %104 = inttoptr i64 %102 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %105 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %104, align 8
  %106 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %105 to i64
  %107 = add i64 %106, 16
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %105, i64 0, i32 1
  %109 = load i32, i32* %108, align 8
  br label %110

110:                                              ; preds = %103, %95
  %111 = phi i32 [ %109, %103 ], [ %99, %95 ]
  %112 = phi i64 [ %107, %103 ], [ %102, %95 ]
  %113 = icmp sgt i32 %111, 0
  br i1 %113, label %114, label %118

114:                                              ; preds = %110
  %115 = inttoptr i64 %112 to %"class.v8::internal::compiler::Node"**
  %116 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, align 8
  %117 = icmp eq %"class.v8::internal::compiler::Node"* %116, null
  br i1 %117, label %127, label %118

118:                                              ; preds = %114, %110
  %119 = and i32 %97, 251658240
  %120 = icmp eq i32 %119, 251658240
  br i1 %120, label %121, label %125

121:                                              ; preds = %118
  %122 = inttoptr i64 %102 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 16
  br label %125

125:                                              ; preds = %121, %118
  %126 = phi i64 [ %124, %121 ], [ %102, %118 ]
  br label %87

127:                                              ; preds = %114, %87
  %128 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::__tree_node"**
  %130 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node"* %130, null
  br i1 %131, label %379, label %132

132:                                              ; preds = %127, %132
  %133 = phi %"class.std::__1::__tree_end_node"* [ %143, %132 ], [ %128, %127 ]
  %134 = phi %"class.std::__1::__tree_node"* [ %144, %132 ], [ %130, %127 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %134, i64 0, i32 1, i32 0, i32 0
  %136 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, align 8
  %137 = icmp ult %"class.v8::internal::compiler::Node"* %136, %90
  %138 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %134, i64 0, i32 0, i32 1
  %139 = bitcast %"class.std::__1::__tree_node_base"** %138 to %"class.std::__1::__tree_node"**
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %134, i64 0, i32 0, i32 0
  %141 = bitcast %"class.std::__1::__tree_node"* %134 to %"class.std::__1::__tree_node"**
  %142 = select i1 %137, %"class.std::__1::__tree_node"** %139, %"class.std::__1::__tree_node"** %141
  %143 = select i1 %137, %"class.std::__1::__tree_end_node"* %133, %"class.std::__1::__tree_end_node"* %140
  %144 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %142, align 8
  %145 = icmp eq %"class.std::__1::__tree_node"* %144, null
  br i1 %145, label %146, label %132

146:                                              ; preds = %132
  %147 = icmp eq %"class.std::__1::__tree_end_node"* %143, %128
  br i1 %147, label %379, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %143, i64 4
  %150 = bitcast %"class.std::__1::__tree_end_node"* %149 to %"class.v8::internal::compiler::Node"**
  %151 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, align 8
  %152 = icmp ult %"class.v8::internal::compiler::Node"* %90, %151
  br i1 %152, label %379, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %143, i64 5
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = icmp sgt i32 %21, 1
  br i1 %157, label %158, label %342

158:                                              ; preds = %153
  %159 = inttoptr i64 %44 to i64*
  %160 = inttoptr i64 %77 to i64*
  %161 = and i64 %156, 3
  %162 = icmp eq i64 %161, 2
  %163 = add i64 %156, -2
  %164 = inttoptr i64 %163 to %"class.v8::internal::ZoneVector.1336"*
  %165 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %164, i64 0, i32 0, i32 0, i32 1
  %166 = bitcast i64*** %165 to i64*
  %167 = inttoptr i64 %163 to i64*
  %168 = zext i32 %21 to i64
  br label %169

169:                                              ; preds = %339, %158
  %170 = phi i64 [ 1, %158 ], [ %340, %339 ]
  %171 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %23, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %171, i64 0, i32 6
  %173 = load i32, i32* %172, align 8
  %174 = sext i32 %173 to i64
  %175 = icmp slt i64 %170, %174
  br i1 %175, label %177, label %176, !prof !3

176:                                              ; preds = %169
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0)) #15
  unreachable

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %171, i64 0, i32 5
  %179 = load i32, i32* %178, align 4
  %180 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %171) #14
  %181 = zext i1 %180 to i32
  %182 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %23, align 8
  %183 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %182) #14
  %184 = zext i1 %183 to i32
  %185 = trunc i64 %170 to i32
  %186 = add i32 %179, %185
  %187 = add i32 %186, %181
  %188 = add i32 %187, %184
  %189 = load i32, i32* %39, align 4
  %190 = and i32 %189, 251658240
  %191 = icmp eq i32 %190, 251658240
  br i1 %191, label %192, label %195

192:                                              ; preds = %177
  %193 = load i64, i64* %159, align 8
  %194 = add i64 %193, 16
  br label %195

195:                                              ; preds = %177, %192
  %196 = phi i64 [ %194, %192 ], [ %44, %177 ]
  %197 = inttoptr i64 %196 to %"class.v8::internal::compiler::Node"**
  %198 = sext i32 %188 to i64
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 %198
  %200 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %199, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %200, i64 0, i32 3
  %202 = load i32, i32* %201, align 4
  %203 = and i32 %202, 16777215
  %204 = zext i32 %203 to i64
  %205 = load i64, i64* %60, align 8
  %206 = load i64, i64* %62, align 8
  %207 = sub i64 %205, %206
  %208 = ashr exact i64 %207, 3
  %209 = icmp ugt i64 %208, %204
  br i1 %209, label %210, label %214

210:                                              ; preds = %195
  %211 = inttoptr i64 %206 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %211, i64 %204
  %213 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %212, align 8
  br label %214

214:                                              ; preds = %195, %210
  %215 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %213, %210 ], [ null, %195 ]
  %216 = load i32, i32* %5, align 4
  %217 = and i32 %216, 251658240
  %218 = icmp eq i32 %217, 251658240
  br i1 %218, label %219, label %222

219:                                              ; preds = %214
  %220 = load i64, i64* %160, align 8
  %221 = add i64 %220, 16
  br label %222

222:                                              ; preds = %214, %219
  %223 = phi i64 [ %221, %219 ], [ %77, %214 ]
  %224 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %215, i64 0, i32 3
  %225 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %224, align 8
  %226 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %225, null
  br i1 %226, label %379, label %227

227:                                              ; preds = %222
  %228 = inttoptr i64 %223 to %"class.v8::internal::compiler::Node"**
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %228, i64 %170
  br label %230

230:                                              ; preds = %227, %267
  %231 = phi %"class.v8::internal::compiler::Node"** [ %269, %267 ], [ %229, %227 ]
  %232 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %231, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %232, i64 0, i32 0
  %234 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %233, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %234, i64 0, i32 2
  %236 = load i16, i16* %235, align 8
  switch i16 %236, label %270 [
    i16 207, label %237
    i16 40, label %237
    i16 59, label %237
  ]

237:                                              ; preds = %230, %230, %230
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %232, i64 0, i32 3
  %239 = load i32, i32* %238, align 4
  %240 = lshr i32 %239, 24
  %241 = and i32 %240, 15
  %242 = icmp eq i32 %241, 15
  %243 = ptrtoint %"class.v8::internal::compiler::Node"* %232 to i64
  %244 = add i64 %243, 32
  br i1 %242, label %245, label %252

245:                                              ; preds = %237
  %246 = inttoptr i64 %244 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %247 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %246, align 8
  %248 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %247 to i64
  %249 = add i64 %248, 16
  %250 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %247, i64 0, i32 1
  %251 = load i32, i32* %250, align 8
  br label %252

252:                                              ; preds = %245, %237
  %253 = phi i32 [ %251, %245 ], [ %241, %237 ]
  %254 = phi i64 [ %249, %245 ], [ %244, %237 ]
  %255 = icmp sgt i32 %253, 0
  br i1 %255, label %256, label %260

256:                                              ; preds = %252
  %257 = inttoptr i64 %254 to %"class.v8::internal::compiler::Node"**
  %258 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %257, align 8
  %259 = icmp eq %"class.v8::internal::compiler::Node"* %258, null
  br i1 %259, label %270, label %260

260:                                              ; preds = %256, %252
  %261 = and i32 %239, 251658240
  %262 = icmp eq i32 %261, 251658240
  br i1 %262, label %263, label %267

263:                                              ; preds = %260
  %264 = inttoptr i64 %244 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, 16
  br label %267

267:                                              ; preds = %263, %260
  %268 = phi i64 [ %266, %263 ], [ %244, %260 ]
  %269 = inttoptr i64 %268 to %"class.v8::internal::compiler::Node"**
  br label %230

270:                                              ; preds = %256, %230
  %271 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %225, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %272 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"class.std::__1::__tree_node"**
  %273 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %272, align 8
  %274 = icmp eq %"class.std::__1::__tree_node"* %273, null
  br i1 %274, label %379, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.std::__1::__tree_end_node"* [ %286, %275 ], [ %271, %270 ]
  %277 = phi %"class.std::__1::__tree_node"* [ %287, %275 ], [ %273, %270 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %277, i64 0, i32 1, i32 0, i32 0
  %279 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, align 8
  %280 = icmp ult %"class.v8::internal::compiler::Node"* %279, %232
  %281 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %277, i64 0, i32 0, i32 1
  %282 = bitcast %"class.std::__1::__tree_node_base"** %281 to %"class.std::__1::__tree_node"**
  %283 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %277, i64 0, i32 0, i32 0
  %284 = bitcast %"class.std::__1::__tree_node"* %277 to %"class.std::__1::__tree_node"**
  %285 = select i1 %280, %"class.std::__1::__tree_node"** %282, %"class.std::__1::__tree_node"** %284
  %286 = select i1 %280, %"class.std::__1::__tree_end_node"* %276, %"class.std::__1::__tree_end_node"* %283
  %287 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %285, align 8
  %288 = icmp eq %"class.std::__1::__tree_node"* %287, null
  br i1 %288, label %289, label %275

289:                                              ; preds = %275
  %290 = icmp eq %"class.std::__1::__tree_end_node"* %286, %271
  br i1 %290, label %379, label %291

291:                                              ; preds = %289
  %292 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %286, i64 4
  %293 = bitcast %"class.std::__1::__tree_end_node"* %292 to %"class.v8::internal::compiler::Node"**
  %294 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %293, align 8
  %295 = icmp ult %"class.v8::internal::compiler::Node"* %232, %294
  br i1 %295, label %379, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %286, i64 5
  %298 = bitcast %"class.std::__1::__tree_end_node"* %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = icmp eq i64 %299, %156
  br i1 %300, label %339, label %301

301:                                              ; preds = %296
  %302 = and i64 %299, 3
  %303 = icmp eq i64 %302, 2
  %304 = and i1 %162, %303
  br i1 %304, label %305, label %379

305:                                              ; preds = %301
  %306 = add i64 %299, -2
  %307 = inttoptr i64 %306 to %"class.v8::internal::ZoneVector.1336"*
  %308 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %307, i64 0, i32 0, i32 0, i32 1
  %309 = bitcast i64*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = inttoptr i64 %306 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = sub i64 %310, %312
  %314 = ashr exact i64 %313, 3
  %315 = load i64, i64* %166, align 8
  %316 = load i64, i64* %167, align 8
  %317 = sub i64 %315, %316
  %318 = ashr exact i64 %317, 3
  %319 = icmp eq i64 %314, %318
  br i1 %319, label %320, label %379

320:                                              ; preds = %305
  %321 = icmp eq i64 %313, 0
  br i1 %321, label %339, label %322

322:                                              ; preds = %320
  %323 = inttoptr i64 %312 to i64**
  %324 = inttoptr i64 %316 to i64**
  br label %327

325:                                              ; preds = %332
  %326 = icmp ult i64 %338, %314
  br i1 %326, label %327, label %339

327:                                              ; preds = %325, %322
  %328 = phi i64 [ 0, %322 ], [ %338, %325 ]
  %329 = icmp eq i64 %328, %314
  br i1 %329, label %330, label %332

330:                                              ; preds = %327
  %331 = inttoptr i64 %163 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %331) #15
  unreachable

332:                                              ; preds = %327
  %333 = getelementptr inbounds i64*, i64** %323, i64 %328
  %334 = load i64*, i64** %333, align 8
  %335 = getelementptr inbounds i64*, i64** %324, i64 %328
  %336 = load i64*, i64** %335, align 8
  %337 = icmp eq i64* %334, %336
  %338 = add nuw i64 %328, 1
  br i1 %337, label %325, label %379

339:                                              ; preds = %325, %296, %320
  %340 = add nuw nsw i64 %170, 1
  %341 = icmp eq i64 %340, %168
  br i1 %341, label %342, label %169

342:                                              ; preds = %339, %153
  %343 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %344 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %343, align 8
  %345 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %344, i64 0, i32 2
  %346 = load i64, i64* %345, align 8
  %347 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %344, i64 0, i32 3
  %348 = load i64, i64* %347, align 8
  %349 = sub i64 %348, %346
  %350 = icmp ult i64 %349, 528
  br i1 %350, label %351, label %353, !prof !4

351:                                              ; preds = %342
  %352 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %344, i64 528) #14
  br label %355

353:                                              ; preds = %342
  %354 = add i64 %346, 528
  store i64 %354, i64* %345, align 8
  br label %355

355:                                              ; preds = %353, %351
  %356 = phi i64 [ %352, %351 ], [ %346, %353 ]
  %357 = inttoptr i64 %356 to i8*
  %358 = inttoptr i64 %356 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %359 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %357, i8* align 8 %359, i64 528, i1 false) #14
  %360 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %358, i64 0, i32 3
  %361 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %360, align 8
  %362 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %361, null
  br i1 %362, label %365, label %363

363:                                              ; preds = %355
  %364 = tail call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps6ExtendEPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %361, %"class.v8::internal::compiler::Node"* %3, i64 %156, %"class.v8::internal::Zone"* %344) #14
  br label %377

365:                                              ; preds = %355
  %366 = load i64, i64* %345, align 8
  %367 = load i64, i64* %347, align 8
  %368 = sub i64 %367, %366
  %369 = icmp ult i64 %368, 32
  br i1 %369, label %370, label %372, !prof !4

370:                                              ; preds = %365
  %371 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %344, i64 32) #14
  br label %374

372:                                              ; preds = %365
  %373 = add i64 %366, 32
  store i64 %373, i64* %345, align 8
  br label %374

374:                                              ; preds = %372, %370
  %375 = phi i64 [ %371, %370 ], [ %366, %372 ]
  %376 = inttoptr i64 %375 to %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*
  tail call void @_ZN2v88internal8compiler15LoadElimination12AbstractMapsC2EPNS1_4NodeENS0_13ZoneHandleSetINS0_3MapEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %376, %"class.v8::internal::compiler::Node"* %3, i64 %156, %"class.v8::internal::Zone"* %344) #14
  br label %377

377:                                              ; preds = %363, %374
  %378 = phi %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* [ %376, %374 ], [ %364, %363 ]
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %378, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %360, align 8
  br label %379

379:                                              ; preds = %291, %289, %270, %222, %301, %305, %332, %148, %146, %127, %82, %377
  %380 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %358, %377 ], [ %1, %82 ], [ %1, %127 ], [ %1, %146 ], [ %1, %148 ], [ %1, %332 ], [ %1, %305 ], [ %1, %301 ], [ %1, %222 ], [ %1, %270 ], [ %1, %289 ], [ %1, %291 ]
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %380
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination16ComputeLoopStateEPNS1_4NodeEPKNS2_13AbstractStateE(%"class.v8::internal::compiler::LoadElimination"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %5 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %6 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %7 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %8 = alloca %"class.v8::internal::ZoneDeque", align 8
  %9 = alloca %"class.v8::internal::Zone", align 8
  %10 = alloca %"class.v8::internal::ZoneVector.1280", align 8
  %11 = alloca %"class.v8::internal::ZoneQueue", align 8
  %12 = alloca %"class.v8::internal::ZoneSet", align 8
  %13 = alloca { i8, %"class.v8::internal::Handle.1272" }, align 8
  %14 = alloca { i8, %"class.v8::internal::Handle.1272" }, align 8
  %15 = alloca %"struct.v8::internal::compiler::FieldAccess", align 8
  %16 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %17 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %20 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %25, label %24, !prof !3

24:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #15
  unreachable

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 5
  %27 = load i32, i32* %26, align 4
  %28 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %20) #14
  %29 = zext i1 %28 to i32
  %30 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %31 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %30) #14
  %32 = zext i1 %31 to i32
  %33 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 0, i32 6
  %35 = load i32, i32* %34, align 8
  %36 = add i32 %27, %29
  %37 = add i32 %36, %32
  %38 = add i32 %37, %35
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 251658240
  %42 = icmp eq i32 %41, 251658240
  %43 = add i64 %18, 32
  br i1 %42, label %44, label %48

44:                                               ; preds = %25
  %45 = inttoptr i64 %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 16
  br label %48

48:                                               ; preds = %25, %44
  %49 = phi i64 [ %47, %44 ], [ %43, %25 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::Node"**
  %51 = sext i32 %38 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, i64 %51
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = bitcast %"class.v8::internal::Zone"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %54) #14
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %56 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %56, i64 0, i32 4
  %58 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %57, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %9, %"class.v8::internal::AccountingAllocator"* %58, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i1 zeroext false) #14
  %59 = bitcast %"class.v8::internal::ZoneVector.1280"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #14
  %60 = ptrtoint %"class.v8::internal::Zone"* %9 to i64
  %61 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 2, i32 1
  %62 = bitcast %"struct.std::__1::__compressed_pair_elem.1285"* %61 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #14
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.v8::internal::ZoneQueue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %63) #14
  %64 = bitcast %"class.v8::internal::ZoneDeque"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %64) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 32, i1 false) #14
  %65 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %8, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %66 = bitcast %"struct.std::__1::__compressed_pair_elem.1293"* %65 to i64*
  store i64 %60, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %8, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %68 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #14
  %69 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %8, i64 0, i32 0, i32 0, i32 2, i32 1
  %70 = bitcast %"struct.std::__1::__compressed_pair_elem.1296"* %69 to i64*
  store i64 %60, i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %8, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %73 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %8, i64 0, i32 0, i32 0, i32 0, i32 3
  %74 = bitcast %"class.std::__1::__compressed_pair.1291"* %72 to i8*
  %75 = bitcast %"class.std::__1::__compressed_pair.1291"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 32, i1 false) #14
  %76 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %8, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %79 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %8, i64 0, i32 0, i32 0, i32 2
  %80 = bitcast %"class.std::__1::__compressed_pair.1295"* %78 to i8*
  %81 = bitcast %"class.std::__1::__compressed_pair.1295"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #14
  %82 = bitcast i64* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #14
  %83 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %8, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.1289"* nonnull %83) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %64) #14
  %84 = bitcast %"class.v8::internal::ZoneSet"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #14
  %85 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0, i32 1, i32 1
  %87 = bitcast %"struct.std::__1::__compressed_pair_elem.1302"* %86 to i64*
  %88 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0, i32 1
  %89 = bitcast %"class.std::__1::__compressed_pair.1301"* %88 to i64*
  store i64 0, i64* %89, align 8
  store i64 %60, i64* %87, align 8
  %90 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %85, align 8
  %92 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::__tree_node.1334"**
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 0, i32 0
  %95 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::__tree_node.1334"**
  %96 = load %"class.std::__1::__tree_node.1334"*, %"class.std::__1::__tree_node.1334"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node.1334"* %96, null
  br i1 %97, label %98, label %129

98:                                               ; preds = %48
  %99 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 2
  %100 = load i64, i64* %99, align 8, !noalias !98
  %101 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 3
  %102 = load i64, i64* %101, align 8, !noalias !98
  %103 = sub i64 %102, %100
  %104 = icmp ult i64 %103, 40
  br i1 %104, label %105, label %107, !prof !4

105:                                              ; preds = %98
  %106 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* nonnull %9, i64 40) #14, !noalias !98
  br label %109

107:                                              ; preds = %98
  %108 = add i64 %100, 40
  store i64 %108, i64* %99, align 8, !noalias !98
  br label %109

109:                                              ; preds = %107, %105
  %110 = phi i64 [ %106, %105 ], [ %100, %107 ]
  %111 = inttoptr i64 %110 to %"class.std::__1::__tree_node.1334"*
  %112 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %111, i64 0, i32 1
  %113 = bitcast %"class.v8::internal::compiler::Node"** %112 to i64*
  store i64 %18, i64* %113, align 8, !noalias !98
  %114 = inttoptr i64 %110 to %"class.std::__1::__tree_node_base"*
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = inttoptr i64 %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %115, align 8
  store %"class.std::__1::__tree_node_base"* %114, %"class.std::__1::__tree_node_base"** %94, align 8
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %109
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  %123 = bitcast %"class.v8::internal::ZoneSet"* %12 to i64*
  store i64 %122, i64* %123, align 8
  br label %124

124:                                              ; preds = %121, %109
  %125 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %126, %"class.std::__1::__tree_node_base"* %114) #14
  %127 = load i64, i64* %90, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %90, align 8
  br label %129

129:                                              ; preds = %48, %124
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 3
  %131 = ptrtoint %"class.v8::internal::compiler::Node"* %53 to i64
  %132 = add i64 %131, 32
  %133 = inttoptr i64 %132 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %134 = inttoptr i64 %43 to i64*
  %135 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %136 = bitcast %"class.v8::internal::compiler::Node"**** %135 to i64*
  %137 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = bitcast %"class.v8::internal::compiler::Node"**** %137 to i64*
  %139 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %140 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0
  br label %141

141:                                              ; preds = %242, %129
  %142 = phi i64 [ %246, %242 ], [ 1, %129 ]
  %143 = load i32, i32* %130, align 4
  %144 = and i32 %143, 251658240
  %145 = icmp eq i32 %144, 251658240
  br i1 %145, label %149, label %146

146:                                              ; preds = %141
  %147 = lshr i32 %143, 24
  %148 = and i32 %147, 15
  br label %153

149:                                              ; preds = %141
  %150 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %133, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %150, i64 0, i32 1
  %152 = load i32, i32* %151, align 8
  br label %153

153:                                              ; preds = %146, %149
  %154 = phi i32 [ %148, %146 ], [ %152, %149 ]
  %155 = sext i32 %154 to i64
  %156 = icmp slt i64 %142, %155
  br i1 %156, label %198, label %157

157:                                              ; preds = %153
  %158 = load i64, i64* %139, align 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %966, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %162 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %161 to i64*
  %163 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %161 to %"class.v8::internal::compiler::Node"***
  %164 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 0, i32 0
  %166 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %12, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %167 = bitcast %"class.v8::internal::ZoneSet"* %12 to i64*
  %168 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %15, i64 0, i32 0
  %169 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4 to i8*
  %170 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 0
  %171 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 1
  %172 = bitcast %"class.v8::internal::compiler::Node"** %171 to i64*
  %173 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %4, i64 0, i32 2, i32 0
  %174 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5 to i8*
  %175 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 0
  %176 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 1
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to i64*
  %178 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 2, i32 0
  %179 = getelementptr inbounds { i8, %"class.v8::internal::Handle.1272" }, { i8, %"class.v8::internal::Handle.1272" }* %13, i64 0, i32 0
  %180 = getelementptr inbounds { i8, %"class.v8::internal::Handle.1272" }, { i8, %"class.v8::internal::Handle.1272" }* %14, i64 0, i32 0
  %181 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 1
  %182 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %183 = bitcast %struct.TransitionElementsKindInfo** %181 to i64*
  %184 = bitcast %"class.v8::internal::ZoneVector.1280"* %10 to i64*
  %185 = bitcast %struct.TransitionElementsKindInfo** %182 to i64*
  %186 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %187 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 0
  %188 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6 to i8*
  %189 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 0
  %190 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 1
  %191 = bitcast %"class.v8::internal::compiler::Node"** %190 to i64*
  %192 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 2, i32 0
  %193 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7 to i8*
  %194 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 0
  %195 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 1
  %196 = bitcast %"class.v8::internal::compiler::Node"** %195 to i64*
  %197 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 2, i32 0
  br label %247

198:                                              ; preds = %153
  %199 = load i32, i32* %39, align 4
  %200 = and i32 %199, 251658240
  %201 = icmp eq i32 %200, 251658240
  br i1 %201, label %202, label %205

202:                                              ; preds = %198
  %203 = load i64, i64* %134, align 8
  %204 = add i64 %203, 16
  br label %205

205:                                              ; preds = %198, %202
  %206 = phi i64 [ %204, %202 ], [ %43, %198 ]
  %207 = inttoptr i64 %206 to %"class.v8::internal::compiler::Node"**
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 %142
  %209 = bitcast %"class.v8::internal::compiler::Node"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = load i64, i64* %136, align 8
  %212 = load i64, i64* %138, align 8
  %213 = sub i64 %211, %212
  %214 = icmp eq i64 %213, 0
  %215 = shl i64 %213, 6
  %216 = add i64 %215, -1
  %217 = select i1 %214, i64 0, i64 %216
  %218 = load i64, i64* %76, align 8
  %219 = load i64, i64* %139, align 8
  %220 = add i64 %219, %218
  %221 = icmp eq i64 %217, %220
  %222 = inttoptr i64 %212 to %"class.v8::internal::compiler::Node"***
  %223 = inttoptr i64 %211 to %"class.v8::internal::compiler::Node"***
  br i1 %221, label %224, label %230

224:                                              ; preds = %205
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.1288"* nonnull %140) #14
  %225 = load i64, i64* %139, align 8
  %226 = load i64, i64* %76, align 8
  %227 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %137, align 8
  %228 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %135, align 8
  %229 = add i64 %226, %225
  br label %230

230:                                              ; preds = %224, %205
  %231 = phi i64 [ %229, %224 ], [ %220, %205 ]
  %232 = phi %"class.v8::internal::compiler::Node"*** [ %228, %224 ], [ %223, %205 ]
  %233 = phi %"class.v8::internal::compiler::Node"*** [ %227, %224 ], [ %222, %205 ]
  %234 = icmp eq %"class.v8::internal::compiler::Node"*** %232, %233
  br i1 %234, label %242, label %235

235:                                              ; preds = %230
  %236 = lshr i64 %231, 9
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %233, i64 %236
  %238 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %237, align 8
  %239 = and i64 %231, 511
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %238, i64 %239
  %241 = bitcast %"class.v8::internal::compiler::Node"** %240 to i64*
  br label %242

242:                                              ; preds = %230, %235
  %243 = phi i64* [ %241, %235 ], [ null, %230 ]
  store i64 %210, i64* %243, align 8
  %244 = load i64, i64* %139, align 8
  %245 = add i64 %244, 1
  store i64 %245, i64* %139, align 8
  %246 = add nuw nsw i64 %142, 1
  br label %141

247:                                              ; preds = %160, %962
  %248 = phi i64 [ %158, %160 ], [ %964, %962 ]
  %249 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %2, %160 ], [ %963, %962 ]
  %250 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %137, align 8
  %251 = load i64, i64* %76, align 8
  %252 = lshr i64 %251, 9
  %253 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %250, i64 %252
  %254 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %253, align 8
  %255 = and i64 %251, 511
  %256 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %254, i64 %255
  %257 = bitcast %"class.v8::internal::compiler::Node"** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = add i64 %248, -1
  store i64 %259, i64* %139, align 8
  %260 = add i64 %251, 1
  store i64 %260, i64* %76, align 8
  %261 = icmp ult i64 %260, 1024
  br i1 %261, label %282, label %262

262:                                              ; preds = %247
  %263 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %250, align 8
  %264 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %161, align 8
  %265 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %264, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %264, i64 0, i32 1
  %268 = load i64, i64* %267, align 8
  %269 = icmp ugt i64 %268, 512
  br i1 %269, label %277, label %270

270:                                              ; preds = %266, %262
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %263, i64 1
  %272 = bitcast %"class.v8::internal::compiler::Node"** %271 to i64*
  store i64 512, i64* %272, align 8
  %273 = load i64, i64* %162, align 8
  %274 = bitcast %"class.v8::internal::compiler::Node"** %263 to i64*
  store i64 %273, i64* %274, align 8
  store %"class.v8::internal::compiler::Node"** %263, %"class.v8::internal::compiler::Node"*** %163, align 8
  %275 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %137, align 8
  %276 = load i64, i64* %76, align 8
  br label %277

277:                                              ; preds = %270, %266
  %278 = phi i64 [ %260, %266 ], [ %276, %270 ]
  %279 = phi %"class.v8::internal::compiler::Node"*** [ %250, %266 ], [ %275, %270 ]
  %280 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %279, i64 1
  store %"class.v8::internal::compiler::Node"*** %280, %"class.v8::internal::compiler::Node"**** %137, align 8
  %281 = add i64 %278, -512
  store i64 %281, i64* %76, align 8
  br label %282

282:                                              ; preds = %247, %277
  %283 = load %"class.std::__1::__tree_node.1334"*, %"class.std::__1::__tree_node.1334"** %93, align 8
  %284 = icmp eq %"class.std::__1::__tree_node.1334"* %283, null
  br i1 %284, label %337, label %285

285:                                              ; preds = %282
  %286 = inttoptr i64 %258 to %"class.v8::internal::compiler::Node"*
  br label %287

287:                                              ; preds = %287, %285
  %288 = phi %"class.std::__1::__tree_end_node"* [ %91, %285 ], [ %298, %287 ]
  %289 = phi %"class.std::__1::__tree_node.1334"* [ %283, %285 ], [ %299, %287 ]
  %290 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %289, i64 0, i32 1
  %291 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %290, align 8
  %292 = icmp ult %"class.v8::internal::compiler::Node"* %291, %286
  %293 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %289, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::__tree_node_base"** %293 to %"class.std::__1::__tree_node.1334"**
  %295 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %289, i64 0, i32 0, i32 0
  %296 = bitcast %"class.std::__1::__tree_node.1334"* %289 to %"class.std::__1::__tree_node.1334"**
  %297 = select i1 %292, %"class.std::__1::__tree_node.1334"** %294, %"class.std::__1::__tree_node.1334"** %296
  %298 = select i1 %292, %"class.std::__1::__tree_end_node"* %288, %"class.std::__1::__tree_end_node"* %295
  %299 = load %"class.std::__1::__tree_node.1334"*, %"class.std::__1::__tree_node.1334"** %297, align 8
  %300 = icmp eq %"class.std::__1::__tree_node.1334"* %299, null
  br i1 %300, label %301, label %287

301:                                              ; preds = %287
  %302 = icmp eq %"class.std::__1::__tree_end_node"* %298, %91
  br i1 %302, label %308, label %303

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %298, i64 4
  %305 = bitcast %"class.std::__1::__tree_end_node"* %304 to %"class.v8::internal::compiler::Node"**
  %306 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %305, align 8
  %307 = icmp ugt %"class.v8::internal::compiler::Node"* %306, %286
  br i1 %307, label %308, label %962

308:                                              ; preds = %303, %301
  br i1 %284, label %337, label %309

309:                                              ; preds = %308
  %310 = inttoptr i64 %258 to %"class.v8::internal::compiler::Node"*
  br label %311

311:                                              ; preds = %333, %309
  %312 = phi %"class.std::__1::__tree_node.1334"* [ %336, %333 ], [ %283, %309 ]
  %313 = phi %"class.std::__1::__tree_node_base"** [ %335, %333 ], [ %164, %309 ]
  %314 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %312, i64 0, i32 1
  %315 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %314, align 8
  %316 = icmp ugt %"class.v8::internal::compiler::Node"* %315, %310
  br i1 %316, label %317, label %323

317:                                              ; preds = %311
  %318 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %312, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %318, align 8
  %320 = icmp eq %"class.std::__1::__tree_node_base"* %319, null
  br i1 %320, label %321, label %333

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %312, i64 0, i32 0, i32 0
  br label %337

323:                                              ; preds = %311
  %324 = icmp ult %"class.v8::internal::compiler::Node"* %315, %310
  br i1 %324, label %325, label %331

325:                                              ; preds = %323
  %326 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %312, i64 0, i32 0, i32 1
  %327 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %326, align 8
  %328 = icmp eq %"class.std::__1::__tree_node_base"* %327, null
  br i1 %328, label %329, label %333

329:                                              ; preds = %325
  %330 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %312, i64 0, i32 0, i32 0
  br label %337

331:                                              ; preds = %323
  %332 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %312, i64 0, i32 0, i32 0
  br label %337

333:                                              ; preds = %325, %317
  %334 = phi %"class.std::__1::__tree_node_base"* [ %319, %317 ], [ %327, %325 ]
  %335 = phi %"class.std::__1::__tree_node_base"** [ %318, %317 ], [ %326, %325 ]
  %336 = bitcast %"class.std::__1::__tree_node_base"* %334 to %"class.std::__1::__tree_node.1334"*
  br label %311

337:                                              ; preds = %282, %308, %331, %329, %321
  %338 = phi %"class.std::__1::__tree_end_node"* [ %322, %321 ], [ %330, %329 ], [ %332, %331 ], [ %91, %308 ], [ %91, %282 ]
  %339 = phi %"class.std::__1::__tree_node_base"** [ %318, %321 ], [ %326, %329 ], [ %313, %331 ], [ %165, %308 ], [ %165, %282 ]
  %340 = bitcast %"class.std::__1::__tree_node_base"** %339 to %"class.std::__1::__tree_node.1334"**
  %341 = load %"class.std::__1::__tree_node.1334"*, %"class.std::__1::__tree_node.1334"** %340, align 8
  %342 = icmp eq %"class.std::__1::__tree_node.1334"* %341, null
  br i1 %342, label %343, label %375

343:                                              ; preds = %337
  %344 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %166, align 8, !noalias !101
  %345 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %344, i64 0, i32 2
  %346 = load i64, i64* %345, align 8, !noalias !101
  %347 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %344, i64 0, i32 3
  %348 = load i64, i64* %347, align 8, !noalias !101
  %349 = sub i64 %348, %346
  %350 = icmp ult i64 %349, 40
  br i1 %350, label %351, label %353, !prof !4

351:                                              ; preds = %343
  %352 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %344, i64 40) #14, !noalias !101
  br label %355

353:                                              ; preds = %343
  %354 = add i64 %346, 40
  store i64 %354, i64* %345, align 8, !noalias !101
  br label %355

355:                                              ; preds = %353, %351
  %356 = phi i64 [ %352, %351 ], [ %346, %353 ]
  %357 = inttoptr i64 %356 to %"class.std::__1::__tree_node.1334"*
  %358 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %357, i64 0, i32 1
  %359 = bitcast %"class.v8::internal::compiler::Node"** %358 to i64*
  store i64 %258, i64* %359, align 8, !noalias !101
  %360 = inttoptr i64 %356 to %"class.std::__1::__tree_node_base"*
  %361 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %360, i64 0, i32 2
  %362 = inttoptr i64 %356 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %362, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %338, %"class.std::__1::__tree_end_node"** %361, align 8
  store %"class.std::__1::__tree_node_base"* %360, %"class.std::__1::__tree_node_base"** %339, align 8
  %363 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %364 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %363, i64 0, i32 0
  %365 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %364, align 8
  %366 = icmp eq %"class.std::__1::__tree_node_base"* %365, null
  br i1 %366, label %370, label %367

367:                                              ; preds = %355
  %368 = ptrtoint %"class.std::__1::__tree_node_base"* %365 to i64
  store i64 %368, i64* %167, align 8
  %369 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %339, align 8
  br label %370

370:                                              ; preds = %367, %355
  %371 = phi %"class.std::__1::__tree_node_base"* [ %360, %355 ], [ %369, %367 ]
  %372 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %372, %"class.std::__1::__tree_node_base"* %371) #14
  %373 = load i64, i64* %90, align 8
  %374 = add i64 %373, 1
  store i64 %374, i64* %90, align 8
  br label %375

375:                                              ; preds = %337, %370
  %376 = inttoptr i64 %258 to %"class.v8::internal::compiler::Node"*
  %377 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %376, i64 0, i32 0
  %378 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %377, align 8
  %379 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %378, i64 0, i32 3, i32 0
  %380 = load i8, i8* %379, align 2
  %381 = and i8 %380, 16
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %383, label %886

383:                                              ; preds = %375
  %384 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %378, i64 0, i32 2
  %385 = load i16, i16* %384, align 8
  switch i16 %385, label %883 [
    i16 224, label %386
    i16 236, label %434
    i16 294, label %482
    i16 291, label %748
    i16 272, label %823
    i16 271, label %827
    i16 276, label %886
  ]

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %378, i64 0, i32 5
  %388 = load i32, i32* %387, align 4
  %389 = icmp sgt i32 %388, 0
  br i1 %389, label %391, label %390, !prof !3

390:                                              ; preds = %386
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %376, i64 0, i32 3
  %393 = load i32, i32* %392, align 4
  %394 = and i32 %393, 251658240
  %395 = icmp eq i32 %394, 251658240
  %396 = add i64 %258, 32
  br i1 %395, label %397, label %401

397:                                              ; preds = %391
  %398 = inttoptr i64 %396 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = add i64 %399, 16
  br label %401

401:                                              ; preds = %391, %397
  %402 = phi i64 [ %400, %397 ], [ %396, %391 ]
  %403 = inttoptr i64 %402 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %194, align 8
  store i64 %404, i64* %196, align 8
  store i64* null, i64** %197, align 8
  %406 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %405, i64 0, i32 2
  %407 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %405, i64 0, i32 3
  %408 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249 to i8*
  %409 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, i64 0, i32 1, i32 0, i64 1
  %410 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %409, align 8
  %411 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %410, null
  br i1 %411, label %430, label %412

412:                                              ; preds = %401
  %413 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %410, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %7, i64* null, %"class.v8::internal::Zone"* %405) #14
  %414 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %409, align 8
  %415 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %414, %413
  br i1 %415, label %430, label %416

416:                                              ; preds = %412
  %417 = load i64, i64* %406, align 8
  %418 = load i64, i64* %407, align 8
  %419 = sub i64 %418, %417
  %420 = icmp ult i64 %419, 528
  br i1 %420, label %421, label %423, !prof !4

421:                                              ; preds = %416
  %422 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %405, i64 528) #14
  br label %425

423:                                              ; preds = %416
  %424 = add i64 %417, 528
  store i64 %424, i64* %406, align 8
  br label %425

425:                                              ; preds = %421, %423
  %426 = phi i64 [ %422, %421 ], [ %417, %423 ]
  %427 = inttoptr i64 %426 to i8*
  %428 = inttoptr i64 %426 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %427, i8* align 8 %408, i64 528, i1 false) #14
  %429 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %428, i64 0, i32 1, i32 0, i64 1
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %413, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %429, align 8
  br label %430

430:                                              ; preds = %425, %412, %401
  %431 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %428, %425 ], [ null, %412 ], [ null, %401 ]
  %432 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %431, null
  %433 = select i1 %432, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %431
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #14
  br label %886

434:                                              ; preds = %383
  %435 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %378, i64 0, i32 5
  %436 = load i32, i32* %435, align 4
  %437 = icmp sgt i32 %436, 0
  br i1 %437, label %439, label %438, !prof !3

438:                                              ; preds = %434
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

439:                                              ; preds = %434
  %440 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %376, i64 0, i32 3
  %441 = load i32, i32* %440, align 4
  %442 = and i32 %441, 251658240
  %443 = icmp eq i32 %442, 251658240
  %444 = add i64 %258, 32
  br i1 %443, label %445, label %449

445:                                              ; preds = %439
  %446 = inttoptr i64 %444 to i64*
  %447 = load i64, i64* %446, align 8
  %448 = add i64 %447, 16
  br label %449

449:                                              ; preds = %439, %445
  %450 = phi i64 [ %448, %445 ], [ %444, %439 ]
  %451 = inttoptr i64 %450 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %189, align 8
  store i64 %452, i64* %191, align 8
  store i64* null, i64** %192, align 8
  %454 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %453, i64 0, i32 2
  %455 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %453, i64 0, i32 3
  %456 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249 to i8*
  %457 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, i64 0, i32 1, i32 0, i64 1
  %458 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %457, align 8
  %459 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %458, null
  br i1 %459, label %478, label %460

460:                                              ; preds = %449
  %461 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %458, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %6, i64* null, %"class.v8::internal::Zone"* %453) #14
  %462 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %457, align 8
  %463 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %462, %461
  br i1 %463, label %478, label %464

464:                                              ; preds = %460
  %465 = load i64, i64* %454, align 8
  %466 = load i64, i64* %455, align 8
  %467 = sub i64 %466, %465
  %468 = icmp ult i64 %467, 528
  br i1 %468, label %469, label %471, !prof !4

469:                                              ; preds = %464
  %470 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %453, i64 528) #14
  br label %473

471:                                              ; preds = %464
  %472 = add i64 %465, 528
  store i64 %472, i64* %454, align 8
  br label %473

473:                                              ; preds = %469, %471
  %474 = phi i64 [ %470, %469 ], [ %465, %471 ]
  %475 = inttoptr i64 %474 to i8*
  %476 = inttoptr i64 %474 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %475, i8* align 8 %456, i64 528, i1 false) #14
  %477 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %476, i64 0, i32 1, i32 0, i64 1
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %461, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %477, align 8
  br label %478

478:                                              ; preds = %473, %460, %449
  %479 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %476, %473 ], [ null, %460 ], [ null, %449 ]
  %480 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %479, null
  %481 = select i1 %480, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %479
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #14
  br label %886

482:                                              ; preds = %383
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179)
  %483 = call dereferenceable(24) %"class.v8::internal::compiler::ElementsTransition"* @_ZN2v88internal8compiler20ElementsTransitionOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %378) #14
  %484 = getelementptr inbounds %"class.v8::internal::compiler::ElementsTransition", %"class.v8::internal::compiler::ElementsTransition"* %483, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %179, i8* align 8 %484, i64 16, i1 false)
  %485 = getelementptr inbounds %"class.v8::internal::compiler::ElementsTransition", %"class.v8::internal::compiler::ElementsTransition"* %483, i64 0, i32 2, i32 0, i32 0
  %486 = load i64*, i64** %485, align 8
  %487 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %377, align 8
  %488 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %487, i64 0, i32 5
  %489 = load i32, i32* %488, align 4
  %490 = icmp sgt i32 %489, 0
  br i1 %490, label %492, label %491, !prof !3

491:                                              ; preds = %482
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

492:                                              ; preds = %482
  %493 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %376, i64 0, i32 3
  %494 = load i32, i32* %493, align 4
  %495 = and i32 %494, 251658240
  %496 = icmp eq i32 %495, 251658240
  %497 = add i64 %258, 32
  br i1 %496, label %498, label %502

498:                                              ; preds = %492
  %499 = inttoptr i64 %497 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = add i64 %500, 16
  br label %502

502:                                              ; preds = %492, %498
  %503 = phi i64 [ %501, %498 ], [ %497, %492 ]
  %504 = inttoptr i64 %503 to %"class.v8::internal::compiler::Node"**
  %505 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %504, align 8
  %506 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, i64 0, i32 3
  %507 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %506, align 8
  %508 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %507, null
  br i1 %508, label %645, label %509

509:                                              ; preds = %502, %545
  %510 = phi %"class.v8::internal::compiler::Node"* [ %548, %545 ], [ %505, %502 ]
  %511 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %510, i64 0, i32 0
  %512 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %511, align 8
  %513 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %512, i64 0, i32 2
  %514 = load i16, i16* %513, align 8
  switch i16 %514, label %549 [
    i16 207, label %515
    i16 40, label %515
    i16 59, label %515
  ]

515:                                              ; preds = %509, %509, %509
  %516 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %510, i64 0, i32 3
  %517 = load i32, i32* %516, align 4
  %518 = lshr i32 %517, 24
  %519 = and i32 %518, 15
  %520 = icmp eq i32 %519, 15
  %521 = ptrtoint %"class.v8::internal::compiler::Node"* %510 to i64
  %522 = add i64 %521, 32
  br i1 %520, label %523, label %530

523:                                              ; preds = %515
  %524 = inttoptr i64 %522 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %525 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %524, align 8
  %526 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %525 to i64
  %527 = add i64 %526, 16
  %528 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %525, i64 0, i32 1
  %529 = load i32, i32* %528, align 8
  br label %530

530:                                              ; preds = %523, %515
  %531 = phi i32 [ %529, %523 ], [ %519, %515 ]
  %532 = phi i64 [ %527, %523 ], [ %522, %515 ]
  %533 = icmp sgt i32 %531, 0
  br i1 %533, label %534, label %538

534:                                              ; preds = %530
  %535 = inttoptr i64 %532 to %"class.v8::internal::compiler::Node"**
  %536 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %535, align 8
  %537 = icmp eq %"class.v8::internal::compiler::Node"* %536, null
  br i1 %537, label %549, label %538

538:                                              ; preds = %534, %530
  %539 = and i32 %517, 251658240
  %540 = icmp eq i32 %539, 251658240
  br i1 %540, label %541, label %545

541:                                              ; preds = %538
  %542 = inttoptr i64 %522 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = add i64 %543, 16
  br label %545

545:                                              ; preds = %541, %538
  %546 = phi i64 [ %544, %541 ], [ %522, %538 ]
  %547 = inttoptr i64 %546 to %"class.v8::internal::compiler::Node"**
  %548 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %547, align 8
  br label %509

549:                                              ; preds = %534, %509
  %550 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractMaps", %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %507, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %551 = bitcast %"class.std::__1::__tree_end_node"* %550 to %"class.std::__1::__tree_node"**
  %552 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %551, align 8
  %553 = icmp eq %"class.std::__1::__tree_node"* %552, null
  br i1 %553, label %645, label %554

554:                                              ; preds = %549, %554
  %555 = phi %"class.std::__1::__tree_end_node"* [ %565, %554 ], [ %550, %549 ]
  %556 = phi %"class.std::__1::__tree_node"* [ %566, %554 ], [ %552, %549 ]
  %557 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %556, i64 0, i32 1, i32 0, i32 0
  %558 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %557, align 8
  %559 = icmp ult %"class.v8::internal::compiler::Node"* %558, %510
  %560 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %556, i64 0, i32 0, i32 1
  %561 = bitcast %"class.std::__1::__tree_node_base"** %560 to %"class.std::__1::__tree_node"**
  %562 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %556, i64 0, i32 0, i32 0
  %563 = bitcast %"class.std::__1::__tree_node"* %556 to %"class.std::__1::__tree_node"**
  %564 = select i1 %559, %"class.std::__1::__tree_node"** %561, %"class.std::__1::__tree_node"** %563
  %565 = select i1 %559, %"class.std::__1::__tree_end_node"* %555, %"class.std::__1::__tree_end_node"* %562
  %566 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %564, align 8
  %567 = icmp eq %"class.std::__1::__tree_node"* %566, null
  br i1 %567, label %568, label %554

568:                                              ; preds = %554
  %569 = icmp eq %"class.std::__1::__tree_end_node"* %565, %550
  br i1 %569, label %645, label %570

570:                                              ; preds = %568
  %571 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %565, i64 4
  %572 = bitcast %"class.std::__1::__tree_end_node"* %571 to %"class.v8::internal::compiler::Node"**
  %573 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %572, align 8
  %574 = icmp ult %"class.v8::internal::compiler::Node"* %510, %573
  br i1 %574, label %645, label %575

575:                                              ; preds = %570
  %576 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %565, i64 5
  %577 = bitcast %"class.std::__1::__tree_end_node"* %576 to i64*
  %578 = load i64, i64* %577, align 8
  %579 = ptrtoint i64* %486 to i64
  %580 = icmp eq i64 %578, %579
  %581 = inttoptr i64 %578 to i64*
  br i1 %580, label %747, label %582

582:                                              ; preds = %575
  %583 = icmp eq i64* %486, inttoptr (i64 1 to i64*)
  br i1 %583, label %645, label %584

584:                                              ; preds = %582
  %585 = icmp eq i64 %578, 1
  br i1 %585, label %747, label %586

586:                                              ; preds = %584
  %587 = and i64 %579, 3
  %588 = icmp eq i64 %587, 0
  br i1 %588, label %645, label %589

589:                                              ; preds = %586
  %590 = add i64 %579, -2
  %591 = inttoptr i64 %590 to %"class.v8::internal::ZoneVector.1336"*
  %592 = and i64 %578, 3
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %613, label %594

594:                                              ; preds = %589
  %595 = add i64 %578, -2
  %596 = inttoptr i64 %595 to %"class.v8::internal::ZoneVector.1336"*
  %597 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %596, i64 0, i32 0, i32 0, i32 1
  %598 = bitcast i64*** %597 to i64*
  %599 = load i64, i64* %598, align 8
  %600 = inttoptr i64 %595 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = icmp eq i64 %599, %601
  br i1 %602, label %747, label %603

603:                                              ; preds = %594
  %604 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %591, i64 0, i32 0, i32 0, i32 0
  %605 = load i64**, i64*** %604, align 8
  %606 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %591, i64 0, i32 0, i32 0, i32 1
  %607 = load i64**, i64*** %606, align 8
  %608 = icmp eq i64** %605, %607
  br i1 %608, label %645, label %609

609:                                              ; preds = %603
  %610 = inttoptr i64 %601 to i64**
  %611 = sub i64 %599, %601
  %612 = ashr exact i64 %611, 3
  br label %628

613:                                              ; preds = %589
  %614 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %591, i64 0, i32 0, i32 0, i32 0
  %615 = load i64**, i64*** %614, align 8
  %616 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %591, i64 0, i32 0, i32 0, i32 1
  %617 = load i64**, i64*** %616, align 8
  %618 = icmp eq i64** %615, %617
  br i1 %618, label %642, label %619

619:                                              ; preds = %613, %623
  %620 = phi i64** [ %624, %623 ], [ %615, %613 ]
  %621 = load i64*, i64** %620, align 8
  %622 = icmp eq i64* %621, %581
  br i1 %622, label %642, label %623

623:                                              ; preds = %619
  %624 = getelementptr inbounds i64*, i64** %620, i64 1
  %625 = icmp eq i64** %624, %617
  br i1 %625, label %645, label %619

626:                                              ; preds = %639
  %627 = icmp ult i64 %641, %612
  br i1 %627, label %628, label %747

628:                                              ; preds = %626, %609
  %629 = phi i64 [ %641, %626 ], [ 0, %609 ]
  %630 = getelementptr inbounds i64*, i64** %610, i64 %629
  %631 = load i64*, i64** %630, align 8
  br label %632

632:                                              ; preds = %636, %628
  %633 = phi i64** [ %605, %628 ], [ %637, %636 ]
  %634 = load i64*, i64** %633, align 8
  %635 = icmp eq i64* %634, %631
  br i1 %635, label %639, label %636

636:                                              ; preds = %632
  %637 = getelementptr inbounds i64*, i64** %633, i64 1
  %638 = icmp eq i64** %637, %607
  br i1 %638, label %645, label %632

639:                                              ; preds = %632
  %640 = icmp eq i64** %633, %607
  %641 = add nuw i64 %629, 1
  br i1 %640, label %645, label %626

642:                                              ; preds = %619, %613
  %643 = phi i64** [ %615, %613 ], [ %620, %619 ]
  %644 = icmp eq i64** %643, %617
  br i1 %644, label %645, label %747

645:                                              ; preds = %639, %623, %636, %642, %603, %586, %582, %570, %568, %549, %502
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %180, i8* nonnull align 8 %179, i64 16, i1 false)
  %646 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %181, align 8
  %647 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %182, align 8
  %648 = icmp ult %struct.TransitionElementsKindInfo* %646, %647
  %649 = ptrtoint %struct.TransitionElementsKindInfo* %647 to i64
  br i1 %648, label %650, label %656

650:                                              ; preds = %645
  %651 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %646, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %651, i8* nonnull align 8 %180, i64 16, i1 false)
  %652 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %646, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %486, i64** %652, align 8
  %653 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %646, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"* %505, %"class.v8::internal::compiler::Node"** %653, align 8
  %654 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %646, i64 1
  %655 = ptrtoint %struct.TransitionElementsKindInfo* %654 to i64
  store i64 %655, i64* %183, align 8
  br label %746

656:                                              ; preds = %645
  %657 = ptrtoint %struct.TransitionElementsKindInfo* %646 to i64
  %658 = load i64, i64* %184, align 8
  %659 = sub i64 %657, %658
  %660 = ashr exact i64 %659, 5
  %661 = add nsw i64 %660, 1
  %662 = icmp ugt i64 %661, 67108863
  br i1 %662, label %663, label %665

663:                                              ; preds = %656
  %664 = bitcast %"class.v8::internal::ZoneVector.1280"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %664) #15
  unreachable

665:                                              ; preds = %656
  %666 = sub i64 %649, %658
  %667 = ashr exact i64 %666, 5
  %668 = icmp ult i64 %667, 33554431
  br i1 %668, label %669, label %674

669:                                              ; preds = %665
  %670 = ashr exact i64 %666, 4
  %671 = icmp ult i64 %670, %661
  %672 = select i1 %671, i64 %661, i64 %670
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %691, label %674

674:                                              ; preds = %669, %665
  %675 = phi i64 [ %672, %669 ], [ 67108863, %665 ]
  %676 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %186, align 8
  %677 = shl i64 %675, 5
  %678 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %676, i64 0, i32 2
  %679 = load i64, i64* %678, align 8
  %680 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %676, i64 0, i32 3
  %681 = load i64, i64* %680, align 8
  %682 = sub i64 %681, %679
  %683 = icmp ugt i64 %677, %682
  br i1 %683, label %684, label %686, !prof !4

684:                                              ; preds = %674
  %685 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %676, i64 %677) #14
  br label %688

686:                                              ; preds = %674
  %687 = add i64 %679, %677
  store i64 %687, i64* %678, align 8
  br label %688

688:                                              ; preds = %686, %684
  %689 = phi i64 [ %685, %684 ], [ %679, %686 ]
  %690 = inttoptr i64 %689 to %struct.TransitionElementsKindInfo*
  br label %691

691:                                              ; preds = %688, %669
  %692 = phi i64 [ %675, %688 ], [ 0, %669 ]
  %693 = phi %struct.TransitionElementsKindInfo* [ %690, %688 ], [ null, %669 ]
  %694 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %693, i64 %660
  %695 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %693, i64 %692
  %696 = ptrtoint %struct.TransitionElementsKindInfo* %695 to i64
  %697 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %694, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %697, i8* nonnull align 8 %180, i64 16, i1 false)
  %698 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %693, i64 %660, i32 0, i32 2, i32 0, i32 0
  store i64* %486, i64** %698, align 8
  %699 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %693, i64 %660, i32 1
  store %"class.v8::internal::compiler::Node"* %505, %"class.v8::internal::compiler::Node"** %699, align 8
  %700 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %694, i64 1
  %701 = ptrtoint %struct.TransitionElementsKindInfo* %700 to i64
  %702 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %187, align 8
  %703 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %181, align 8
  %704 = icmp eq %struct.TransitionElementsKindInfo* %703, %702
  br i1 %704, label %743, label %705

705:                                              ; preds = %691
  %706 = ptrtoint %struct.TransitionElementsKindInfo* %702 to i64
  %707 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %703, i64 -1, i32 0, i32 0
  %708 = ptrtoint i8* %707 to i64
  %709 = sub i64 %708, %706
  %710 = lshr i64 %709, 5
  %711 = add nuw nsw i64 %710, 1
  %712 = and i64 %711, 3
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %724, label %714

714:                                              ; preds = %705, %714
  %715 = phi %struct.TransitionElementsKindInfo* [ %721, %714 ], [ %694, %705 ]
  %716 = phi %struct.TransitionElementsKindInfo* [ %718, %714 ], [ %703, %705 ]
  %717 = phi i64 [ %722, %714 ], [ %712, %705 ]
  %718 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %716, i64 -1
  %719 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %715, i64 -1, i32 0, i32 0
  %720 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %718, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %719, i8* align 8 %720, i64 32, i1 false) #14
  %721 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %715, i64 -1
  %722 = add i64 %717, -1
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %724, label %714, !llvm.loop !104

724:                                              ; preds = %714, %705
  %725 = phi %struct.TransitionElementsKindInfo* [ undef, %705 ], [ %721, %714 ]
  %726 = phi %struct.TransitionElementsKindInfo* [ %694, %705 ], [ %721, %714 ]
  %727 = phi %struct.TransitionElementsKindInfo* [ %703, %705 ], [ %718, %714 ]
  %728 = icmp ult i64 %709, 96
  br i1 %728, label %743, label %729

729:                                              ; preds = %724, %729
  %730 = phi %struct.TransitionElementsKindInfo* [ %741, %729 ], [ %726, %724 ]
  %731 = phi %struct.TransitionElementsKindInfo* [ %738, %729 ], [ %727, %724 ]
  %732 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %730, i64 -1, i32 0, i32 0
  %733 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %731, i64 -1, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %732, i8* align 8 %733, i64 32, i1 false) #14
  %734 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %730, i64 -2, i32 0, i32 0
  %735 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %731, i64 -2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %734, i8* align 8 %735, i64 32, i1 false) #14
  %736 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %730, i64 -3, i32 0, i32 0
  %737 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %731, i64 -3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %736, i8* align 8 %737, i64 32, i1 false) #14
  %738 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %731, i64 -4
  %739 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %730, i64 -4, i32 0, i32 0
  %740 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %738, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %739, i8* align 8 %740, i64 32, i1 false) #14
  %741 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %730, i64 -4
  %742 = icmp eq %struct.TransitionElementsKindInfo* %738, %702
  br i1 %742, label %743, label %729

743:                                              ; preds = %724, %729, %691
  %744 = phi %struct.TransitionElementsKindInfo* [ %694, %691 ], [ %725, %724 ], [ %741, %729 ]
  %745 = ptrtoint %struct.TransitionElementsKindInfo* %744 to i64
  store i64 %745, i64* %184, align 8
  store i64 %701, i64* %183, align 8
  store i64 %696, i64* %185, align 8
  br label %746

746:                                              ; preds = %650, %743
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180)
  br label %747

747:                                              ; preds = %626, %642, %594, %584, %575, %746
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179)
  br label %886

748:                                              ; preds = %383
  %749 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %378, i64 0, i32 5
  %750 = load i32, i32* %749, align 4
  %751 = icmp sgt i32 %750, 0
  br i1 %751, label %753, label %752, !prof !3

752:                                              ; preds = %748
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %376, i64 0, i32 3
  %755 = load i32, i32* %754, align 4
  %756 = and i32 %755, 251658240
  %757 = icmp eq i32 %756, 251658240
  %758 = add i64 %258, 32
  br i1 %757, label %759, label %763

759:                                              ; preds = %753
  %760 = inttoptr i64 %758 to i64*
  %761 = load i64, i64* %760, align 8
  %762 = add i64 %761, 16
  br label %763

763:                                              ; preds = %753, %759
  %764 = phi i64 [ %762, %759 ], [ %758, %753 ]
  %765 = inttoptr i64 %764 to i64*
  %766 = load i64, i64* %765, align 8
  %767 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %170, align 8
  store i64 %766, i64* %172, align 8
  store i64* null, i64** %173, align 8
  %768 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, i64 0, i32 3
  %769 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %768, align 8
  %770 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %769, null
  br i1 %770, label %792, label %771

771:                                              ; preds = %763
  %772 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %769, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %4, %"class.v8::internal::Zone"* %767) #14
  %773 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %768, align 8
  %774 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %773, %772
  br i1 %774, label %792, label %775

775:                                              ; preds = %771
  %776 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %767, i64 0, i32 2
  %777 = load i64, i64* %776, align 8
  %778 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %767, i64 0, i32 3
  %779 = load i64, i64* %778, align 8
  %780 = sub i64 %779, %777
  %781 = icmp ult i64 %780, 528
  br i1 %781, label %782, label %784, !prof !4

782:                                              ; preds = %775
  %783 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %767, i64 528) #14
  br label %786

784:                                              ; preds = %775
  %785 = add i64 %777, 528
  store i64 %785, i64* %776, align 8
  br label %786

786:                                              ; preds = %784, %782
  %787 = phi i64 [ %783, %782 ], [ %777, %784 ]
  %788 = inttoptr i64 %787 to i8*
  %789 = inttoptr i64 %787 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %790 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %788, i8* align 8 %790, i64 528, i1 false) #14
  %791 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %789, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %772, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %791, align 8
  br label %792

792:                                              ; preds = %786, %771, %763
  %793 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %789, %786 ], [ %249, %763 ], [ %249, %771 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #14
  %794 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #14
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %793, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %175, align 8
  store i64 %766, i64* %177, align 8
  store i64* null, i64** %178, align 8
  %795 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %794, i64 0, i32 2
  %796 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %794, i64 0, i32 3
  %797 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %793 to i8*
  %798 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %793, i64 0, i32 1, i32 0, i64 1
  %799 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %798, align 8
  %800 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %799, null
  br i1 %800, label %819, label %801

801:                                              ; preds = %792
  %802 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %799, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %5, i64* null, %"class.v8::internal::Zone"* %794) #14
  %803 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %798, align 8
  %804 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %803, %802
  br i1 %804, label %819, label %805

805:                                              ; preds = %801
  %806 = load i64, i64* %795, align 8
  %807 = load i64, i64* %796, align 8
  %808 = sub i64 %807, %806
  %809 = icmp ult i64 %808, 528
  br i1 %809, label %810, label %812, !prof !4

810:                                              ; preds = %805
  %811 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %794, i64 528) #14
  br label %814

812:                                              ; preds = %805
  %813 = add i64 %806, 528
  store i64 %813, i64* %795, align 8
  br label %814

814:                                              ; preds = %810, %812
  %815 = phi i64 [ %811, %810 ], [ %806, %812 ]
  %816 = inttoptr i64 %815 to i8*
  %817 = inttoptr i64 %815 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %816, i8* align 8 %797, i64 528, i1 false) #14
  %818 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %817, i64 0, i32 1, i32 0, i64 1
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %802, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %818, align 8
  br label %819

819:                                              ; preds = %814, %801, %792
  %820 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %817, %814 ], [ null, %801 ], [ null, %792 ]
  %821 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %820, null
  %822 = select i1 %821, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %793, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %820
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #14
  br label %886

823:                                              ; preds = %383
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %168) #14
  %824 = call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %378) #14
  %825 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %824, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %168, i8* align 8 %825, i64 56, i1 false)
  %826 = call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination29ComputeLoopStateForStoreFieldEPNS1_4NodeEPKNS2_13AbstractStateERKNS1_11FieldAccessE(%"class.v8::internal::compiler::LoadElimination"* %0, %"class.v8::internal::compiler::Node"* %376, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, %"struct.v8::internal::compiler::FieldAccess"* nonnull dereferenceable(56) %15)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %168) #14
  br label %886

827:                                              ; preds = %383
  %828 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %378, i64 0, i32 5
  %829 = load i32, i32* %828, align 4
  %830 = icmp sgt i32 %829, 0
  br i1 %830, label %832, label %831, !prof !3

831:                                              ; preds = %827
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

832:                                              ; preds = %827
  %833 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %376, i64 0, i32 3
  %834 = load i32, i32* %833, align 4
  %835 = and i32 %834, 251658240
  %836 = icmp eq i32 %835, 251658240
  %837 = add i64 %258, 32
  br i1 %836, label %838, label %842

838:                                              ; preds = %832
  %839 = inttoptr i64 %837 to i64*
  %840 = load i64, i64* %839, align 8
  %841 = add i64 %840, 16
  br label %842

842:                                              ; preds = %832, %838
  %843 = phi i64 [ %841, %838 ], [ %837, %832 ]
  %844 = inttoptr i64 %843 to %"class.v8::internal::compiler::Node"**
  %845 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %844, align 8
  %846 = icmp sgt i32 %829, 1
  br i1 %846, label %848, label %847, !prof !3

847:                                              ; preds = %842
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

848:                                              ; preds = %842
  br i1 %836, label %849, label %853

849:                                              ; preds = %848
  %850 = inttoptr i64 %837 to i64*
  %851 = load i64, i64* %850, align 8
  %852 = add i64 %851, 16
  br label %853

853:                                              ; preds = %848, %849
  %854 = phi i64 [ %852, %849 ], [ %837, %848 ]
  %855 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  %856 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, i64 0, i32 0
  %857 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %856, align 8
  %858 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %857, null
  br i1 %858, label %886, label %859

859:                                              ; preds = %853
  %860 = inttoptr i64 %854 to %"class.v8::internal::compiler::Node"**
  %861 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %860, i64 1
  %862 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %861, align 8
  %863 = call %"class.v8::internal::compiler::LoadElimination::AbstractElements"* @_ZNK2v88internal8compiler15LoadElimination16AbstractElements4KillEPNS1_4NodeES5_PNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractElements"* nonnull %857, %"class.v8::internal::compiler::Node"* %845, %"class.v8::internal::compiler::Node"* %862, %"class.v8::internal::Zone"* %855) #14
  %864 = load %"class.v8::internal::compiler::LoadElimination::AbstractElements"*, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %856, align 8
  %865 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %864, %863
  br i1 %865, label %886, label %866

866:                                              ; preds = %859
  %867 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %855, i64 0, i32 2
  %868 = load i64, i64* %867, align 8
  %869 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %855, i64 0, i32 3
  %870 = load i64, i64* %869, align 8
  %871 = sub i64 %870, %868
  %872 = icmp ult i64 %871, 528
  br i1 %872, label %873, label %875, !prof !4

873:                                              ; preds = %866
  %874 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %855, i64 528) #14
  br label %877

875:                                              ; preds = %866
  %876 = add i64 %868, 528
  store i64 %876, i64* %867, align 8
  br label %877

877:                                              ; preds = %875, %873
  %878 = phi i64 [ %874, %873 ], [ %868, %875 ]
  %879 = inttoptr i64 %878 to i8*
  %880 = inttoptr i64 %878 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %881 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %879, i8* align 8 %881, i64 528, i1 false) #14
  %882 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %880, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractElements"* %863, %"class.v8::internal::compiler::LoadElimination::AbstractElements"** %882, align 8
  br label %886

883:                                              ; preds = %383
  %884 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  %885 = call %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination13AbstractState7KillAllEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractState"* %249, %"class.v8::internal::Zone"* %884)
  br label %1075

886:                                              ; preds = %375, %877, %859, %853, %430, %478, %747, %819, %823, %383
  %887 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %249, %375 ], [ %249, %383 ], [ %826, %823 ], [ %822, %819 ], [ %249, %747 ], [ %481, %478 ], [ %433, %430 ], [ %880, %877 ], [ %249, %853 ], [ %249, %859 ]
  %888 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %377, align 8
  %889 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %888, i64 0, i32 6
  %890 = load i32, i32* %889, align 8
  %891 = icmp sgt i32 %890, 0
  br i1 %891, label %892, label %962

892:                                              ; preds = %886
  %893 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %376, i64 0, i32 3
  %894 = add i64 %258, 32
  %895 = inttoptr i64 %894 to i64*
  br label %896

896:                                              ; preds = %892, %953
  %897 = phi %"class.v8::internal::compiler::Operator"* [ %888, %892 ], [ %958, %953 ]
  %898 = phi i32 [ 0, %892 ], [ %957, %953 ]
  %899 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %897, i64 0, i32 5
  %900 = load i32, i32* %899, align 4
  %901 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %897) #14
  %902 = zext i1 %901 to i32
  %903 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %377, align 8
  %904 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %903) #14
  %905 = zext i1 %904 to i32
  %906 = add i32 %900, %898
  %907 = add i32 %906, %902
  %908 = add i32 %907, %905
  %909 = load i32, i32* %893, align 4
  %910 = and i32 %909, 251658240
  %911 = icmp eq i32 %910, 251658240
  br i1 %911, label %912, label %915

912:                                              ; preds = %896
  %913 = load i64, i64* %895, align 8
  %914 = add i64 %913, 16
  br label %915

915:                                              ; preds = %896, %912
  %916 = phi i64 [ %914, %912 ], [ %894, %896 ]
  %917 = inttoptr i64 %916 to %"class.v8::internal::compiler::Node"**
  %918 = sext i32 %908 to i64
  %919 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %917, i64 %918
  %920 = bitcast %"class.v8::internal::compiler::Node"** %919 to i64*
  %921 = load i64, i64* %920, align 8
  %922 = load i64, i64* %136, align 8
  %923 = load i64, i64* %138, align 8
  %924 = sub i64 %922, %923
  %925 = icmp eq i64 %924, 0
  %926 = shl i64 %924, 6
  %927 = add i64 %926, -1
  %928 = select i1 %925, i64 0, i64 %927
  %929 = load i64, i64* %76, align 8
  %930 = load i64, i64* %139, align 8
  %931 = add i64 %930, %929
  %932 = icmp eq i64 %928, %931
  %933 = inttoptr i64 %923 to %"class.v8::internal::compiler::Node"***
  %934 = inttoptr i64 %922 to %"class.v8::internal::compiler::Node"***
  br i1 %932, label %935, label %941

935:                                              ; preds = %915
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.1288"* nonnull %140) #14
  %936 = load i64, i64* %139, align 8
  %937 = load i64, i64* %76, align 8
  %938 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %137, align 8
  %939 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %135, align 8
  %940 = add i64 %937, %936
  br label %941

941:                                              ; preds = %935, %915
  %942 = phi i64 [ %940, %935 ], [ %931, %915 ]
  %943 = phi %"class.v8::internal::compiler::Node"*** [ %939, %935 ], [ %934, %915 ]
  %944 = phi %"class.v8::internal::compiler::Node"*** [ %938, %935 ], [ %933, %915 ]
  %945 = icmp eq %"class.v8::internal::compiler::Node"*** %943, %944
  br i1 %945, label %953, label %946

946:                                              ; preds = %941
  %947 = lshr i64 %942, 9
  %948 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %944, i64 %947
  %949 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %948, align 8
  %950 = and i64 %942, 511
  %951 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %949, i64 %950
  %952 = bitcast %"class.v8::internal::compiler::Node"** %951 to i64*
  br label %953

953:                                              ; preds = %941, %946
  %954 = phi i64* [ %952, %946 ], [ null, %941 ]
  store i64 %921, i64* %954, align 8
  %955 = load i64, i64* %139, align 8
  %956 = add i64 %955, 1
  store i64 %956, i64* %139, align 8
  %957 = add nuw nsw i32 %898, 1
  %958 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %377, align 8
  %959 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %958, i64 0, i32 6
  %960 = load i32, i32* %959, align 8
  %961 = icmp slt i32 %957, %960
  br i1 %961, label %896, label %962

962:                                              ; preds = %953, %886, %303
  %963 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %249, %303 ], [ %887, %886 ], [ %887, %953 ]
  %964 = load i64, i64* %139, align 8
  %965 = icmp eq i64 %964, 0
  br i1 %965, label %966, label %247

966:                                              ; preds = %962, %157
  %967 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %2, %157 ], [ %963, %962 ]
  %968 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 0
  %969 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %968, align 8
  %970 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 1
  %971 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %970, align 8
  %972 = icmp eq %struct.TransitionElementsKindInfo* %969, %971
  br i1 %972, label %1075, label %973

973:                                              ; preds = %966
  %974 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %16 to i8*
  %975 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %16, i64 0, i32 0
  %976 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %16, i64 0, i32 1
  %977 = bitcast %"class.v8::internal::compiler::Node"** %976 to i64*
  %978 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %16, i64 0, i32 2, i32 0
  %979 = bitcast i64** %978 to i64*
  br label %991

980:                                              ; preds = %1025
  %981 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %968, align 8
  %982 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %970, align 8
  %983 = icmp eq %struct.TransitionElementsKindInfo* %981, %982
  br i1 %983, label %1075, label %984

984:                                              ; preds = %980
  %985 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %17 to i8*
  %986 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %17, i64 0, i32 0
  %987 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %17, i64 0, i32 1
  %988 = bitcast %"class.v8::internal::compiler::Node"** %987 to i64*
  %989 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %17, i64 0, i32 2, i32 0
  %990 = bitcast i64** %989 to i64*
  br label %1029

991:                                              ; preds = %973, %1025
  %992 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %967, %973 ], [ %1026, %1025 ]
  %993 = phi %struct.TransitionElementsKindInfo* [ %969, %973 ], [ %1027, %1025 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %974) #14
  %994 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %993, i64 0, i32 1
  %995 = bitcast %"class.v8::internal::compiler::Node"** %994 to i64*
  %996 = load i64, i64* %995, align 8
  %997 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %993, i64 0, i32 0, i32 1, i32 0, i32 0
  %998 = bitcast i64** %997 to i64*
  %999 = load i64, i64* %998, align 8
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %992, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %975, align 8
  store i64 %996, i64* %977, align 8
  store i64 %999, i64* %979, align 8
  %1000 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  %1001 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %992, i64 0, i32 3
  %1002 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %1001, align 8
  %1003 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %1002, null
  br i1 %1003, label %1025, label %1004

1004:                                             ; preds = %991
  %1005 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %1002, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %16, %"class.v8::internal::Zone"* %1000) #14
  %1006 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %1001, align 8
  %1007 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %1006, %1005
  br i1 %1007, label %1025, label %1008

1008:                                             ; preds = %1004
  %1009 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1000, i64 0, i32 2
  %1010 = load i64, i64* %1009, align 8
  %1011 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1000, i64 0, i32 3
  %1012 = load i64, i64* %1011, align 8
  %1013 = sub i64 %1012, %1010
  %1014 = icmp ult i64 %1013, 528
  br i1 %1014, label %1015, label %1017, !prof !4

1015:                                             ; preds = %1008
  %1016 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1000, i64 528) #14
  br label %1019

1017:                                             ; preds = %1008
  %1018 = add i64 %1010, 528
  store i64 %1018, i64* %1009, align 8
  br label %1019

1019:                                             ; preds = %1017, %1015
  %1020 = phi i64 [ %1016, %1015 ], [ %1010, %1017 ]
  %1021 = inttoptr i64 %1020 to i8*
  %1022 = inttoptr i64 %1020 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %1023 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %992 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1021, i8* align 8 %1023, i64 528, i1 false) #14
  %1024 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1022, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %1005, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %1024, align 8
  br label %1025

1025:                                             ; preds = %991, %1004, %1019
  %1026 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %1022, %1019 ], [ %992, %991 ], [ %992, %1004 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %974) #14
  %1027 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %993, i64 1
  %1028 = icmp eq %struct.TransitionElementsKindInfo* %1027, %971
  br i1 %1028, label %980, label %991

1029:                                             ; preds = %984, %1071
  %1030 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %1026, %984 ], [ %1072, %1071 ]
  %1031 = phi %struct.TransitionElementsKindInfo* [ %981, %984 ], [ %1073, %1071 ]
  %1032 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %1031, i64 0, i32 0, i32 0
  %1033 = load i8, i8* %1032, align 8
  %1034 = icmp eq i8 %1033, 1
  br i1 %1034, label %1035, label %1071

1035:                                             ; preds = %1029
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %985) #14
  %1036 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %1031, i64 0, i32 1
  %1037 = bitcast %"class.v8::internal::compiler::Node"** %1036 to i64*
  %1038 = load i64, i64* %1037, align 8
  %1039 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %1031, i64 0, i32 0, i32 1, i32 0, i32 0
  %1040 = bitcast i64** %1039 to i64*
  %1041 = load i64, i64* %1040, align 8
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1030, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %986, align 8
  store i64 %1038, i64* %988, align 8
  store i64 %1041, i64* %990, align 8
  %1042 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %55, align 8
  %1043 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1042, i64 0, i32 2
  %1044 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1042, i64 0, i32 3
  %1045 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1030 to i8*
  %1046 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1030, i64 0, i32 1, i32 0, i64 1
  %1047 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %1046, align 8
  %1048 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %1047, null
  br i1 %1048, label %1067, label %1049

1049:                                             ; preds = %1035
  %1050 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %1047, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %17, i64* null, %"class.v8::internal::Zone"* %1042) #14
  %1051 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %1046, align 8
  %1052 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %1051, %1050
  br i1 %1052, label %1067, label %1053

1053:                                             ; preds = %1049
  %1054 = load i64, i64* %1043, align 8
  %1055 = load i64, i64* %1044, align 8
  %1056 = sub i64 %1055, %1054
  %1057 = icmp ult i64 %1056, 528
  br i1 %1057, label %1058, label %1060, !prof !4

1058:                                             ; preds = %1053
  %1059 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1042, i64 528) #14
  br label %1062

1060:                                             ; preds = %1053
  %1061 = add i64 %1054, 528
  store i64 %1061, i64* %1043, align 8
  br label %1062

1062:                                             ; preds = %1058, %1060
  %1063 = phi i64 [ %1059, %1058 ], [ %1054, %1060 ]
  %1064 = inttoptr i64 %1063 to i8*
  %1065 = inttoptr i64 %1063 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1064, i8* align 8 %1045, i64 528, i1 false) #14
  %1066 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1065, i64 0, i32 1, i32 0, i64 1
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %1050, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %1066, align 8
  br label %1067

1067:                                             ; preds = %1062, %1049, %1035
  %1068 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %1065, %1062 ], [ null, %1049 ], [ null, %1035 ]
  %1069 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1068, null
  %1070 = select i1 %1069, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1030, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1068
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %985) #14
  br label %1071

1071:                                             ; preds = %1029, %1067
  %1072 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %1070, %1067 ], [ %1030, %1029 ]
  %1073 = getelementptr inbounds %struct.TransitionElementsKindInfo, %struct.TransitionElementsKindInfo* %1031, i64 1
  %1074 = icmp eq %struct.TransitionElementsKindInfo* %1073, %982
  br i1 %1074, label %1075, label %1029

1075:                                             ; preds = %1071, %966, %980, %883
  %1076 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %885, %883 ], [ %1026, %980 ], [ %967, %966 ], [ %1072, %1071 ]
  %1077 = load %"class.std::__1::__tree_node.1334"*, %"class.std::__1::__tree_node.1334"** %93, align 8
  call void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1300"* nonnull %92, %"class.std::__1::__tree_node.1334"* %1077) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #14
  %1078 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.1289"* nonnull %1078) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %63) #14
  %1079 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 0
  %1080 = load %struct.TransitionElementsKindInfo*, %struct.TransitionElementsKindInfo** %1079, align 8
  %1081 = icmp eq %struct.TransitionElementsKindInfo* %1080, null
  br i1 %1081, label %1086, label %1082

1082:                                             ; preds = %1075
  %1083 = ptrtoint %struct.TransitionElementsKindInfo* %1080 to i64
  %1084 = getelementptr inbounds %"class.v8::internal::ZoneVector.1280", %"class.v8::internal::ZoneVector.1280"* %10, i64 0, i32 0, i32 0, i32 1
  %1085 = bitcast %struct.TransitionElementsKindInfo** %1084 to i64*
  store i64 %1083, i64* %1085, align 8
  br label %1086

1086:                                             ; preds = %1075, %1082
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #14
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %54) #14
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %1076
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoadElimination::AbstractState"* @_ZNK2v88internal8compiler15LoadElimination29ComputeLoopStateForStoreFieldEPNS1_4NodeEPKNS2_13AbstractStateERKNS1_11FieldAccessE(%"class.v8::internal::compiler::LoadElimination"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"struct.v8::internal::compiler::FieldAccess"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %6 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %7 = alloca %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %9, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0)) #15
  unreachable

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 251658240
  %18 = icmp eq i32 %17, 251658240
  %19 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %20 = add i64 %19, 32
  br i1 %18, label %21, label %25

21:                                               ; preds = %14
  %22 = inttoptr i64 %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 16
  br label %25

25:                                               ; preds = %14, %21
  %26 = phi i64 [ %24, %21 ], [ %20, %14 ]
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %3, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %64

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %34 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %33, align 8
  %35 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #14
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 1
  %38 = bitcast %"class.v8::internal::compiler::Node"** %37 to i64*
  store i64 %28, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %6, i64 0, i32 2, i32 0
  store i64* null, i64** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, i64 0, i32 3
  %41 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %40, align 8
  %42 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %41, null
  br i1 %42, label %192, label %43

43:                                               ; preds = %32
  %44 = call %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* @_ZNK2v88internal8compiler15LoadElimination12AbstractMaps4KillERKNS2_14AliasStateInfoEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractMaps"* nonnull %41, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %6, %"class.v8::internal::Zone"* %34) #14
  %45 = load %"class.v8::internal::compiler::LoadElimination::AbstractMaps"*, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %40, align 8
  %46 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %45, %44
  br i1 %46, label %192, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %34, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %34, i64 0, i32 3
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %51, %49
  %53 = icmp ult i64 %52, 528
  br i1 %53, label %54, label %56, !prof !4

54:                                               ; preds = %47
  %55 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %34, i64 528) #14
  br label %58

56:                                               ; preds = %47
  %57 = add i64 %49, 528
  store i64 %57, i64* %48, align 8
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i64 [ %55, %54 ], [ %49, %56 ]
  %60 = inttoptr i64 %59 to i8*
  %61 = inttoptr i64 %59 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %62 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %62, i64 528, i1 false) #14
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %61, i64 0, i32 3
  store %"class.v8::internal::compiler::LoadElimination::AbstractMaps"* %44, %"class.v8::internal::compiler::LoadElimination::AbstractMaps"** %63, align 8
  br label %192

64:                                               ; preds = %25
  %65 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %3, i64 0, i32 6, i32 0
  %66 = load i8, i8* %65, align 1
  switch i8 %66, label %69 [
    i8 0, label %67
    i8 1, label %67
    i8 14, label %67
    i8 2, label %88
    i8 3, label %88
    i8 12, label %88
    i8 11, label %70
    i8 10, label %70
    i8 6, label %70
    i8 4, label %70
    i8 8, label %70
    i8 5, label %68
    i8 13, label %68
    i8 9, label %70
    i8 7, label %70
  ]

67:                                               ; preds = %64, %64, %64
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #15
  unreachable

68:                                               ; preds = %64, %64
  br label %70

69:                                               ; preds = %64
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #15
  unreachable

70:                                               ; preds = %68, %64, %64, %64, %64, %64, %64, %64
  %71 = phi i32 [ 3, %68 ], [ 2, %64 ], [ 2, %64 ], [ 2, %64 ], [ 2, %64 ], [ 2, %64 ], [ 2, %64 ], [ 2, %64 ]
  %72 = shl i32 1, %71
  %73 = icmp slt i32 %72, 4
  br i1 %73, label %88, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %3, i64 0, i32 0
  %76 = load i8, i8* %75, align 8
  %77 = icmp eq i8 %76, 1
  br i1 %77, label %78, label %88

78:                                               ; preds = %74
  %79 = sdiv i32 %30, 4
  %80 = add nsw i32 %79, -1
  %81 = lshr exact i32 %72, 2
  %82 = add nsw i32 %81, %80
  %83 = icmp sgt i32 %82, 32
  %84 = select i1 %83, i32 -1, i32 %82
  %85 = select i1 %83, i32 -1, i32 %80
  %86 = and i32 %85, %84
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %88, label %139

88:                                               ; preds = %78, %64, %64, %64, %70, %74
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %3, i64 0, i32 3, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %92 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %91, align 8
  %93 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #14
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 1
  %96 = bitcast %"class.v8::internal::compiler::Node"** %95 to i64*
  store i64 %28, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %5, i64 0, i32 2, i32 0
  store i64* null, i64** %97, align 8
  br label %98

98:                                               ; preds = %136, %88
  %99 = phi i64 [ 0, %88 ], [ %137, %136 ]
  %100 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, i64 0, i32 1, i32 0, i64 %99
  %101 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %100, align 8
  %102 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %101, null
  br i1 %102, label %136, label %103

103:                                              ; preds = %98
  %104 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %101, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %5, i64* %90, %"class.v8::internal::Zone"* %92) #14
  %105 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %104, %101
  br i1 %105, label %136, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %92, i64 0, i32 2
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %92, i64 0, i32 3
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %110, %108
  %112 = icmp ult i64 %111, 528
  br i1 %112, label %113, label %115, !prof !4

113:                                              ; preds = %106
  %114 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %92, i64 528) #14
  br label %117

115:                                              ; preds = %106
  %116 = add i64 %108, 528
  store i64 %116, i64* %107, align 8
  br label %117

117:                                              ; preds = %115, %113
  %118 = phi i64 [ %114, %113 ], [ %108, %115 ]
  %119 = inttoptr i64 %118 to i8*
  %120 = inttoptr i64 %118 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  %121 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %121, i64 528, i1 false) #14
  %122 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %120, i64 0, i32 1, i32 0, i64 %99
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %104, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %122, align 8
  %123 = add nuw i64 %99, 1
  %124 = icmp ult i64 %123, 32
  br i1 %124, label %125, label %192

125:                                              ; preds = %117, %133
  %126 = phi i64 [ %134, %133 ], [ %123, %117 ]
  %127 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, i64 0, i32 1, i32 0, i64 %126
  %128 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %127, align 8
  %129 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %128, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %5, i64* %90, %"class.v8::internal::Zone"* %92) #14
  %132 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %120, i64 0, i32 1, i32 0, i64 %126
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %131, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %132, align 8
  br label %133

133:                                              ; preds = %130, %125
  %134 = add i64 %126, 1
  %135 = icmp eq i64 %134, 32
  br i1 %135, label %192, label %125

136:                                              ; preds = %103, %98
  %137 = add nuw nsw i64 %99, 1
  %138 = icmp eq i64 %137, 32
  br i1 %138, label %192, label %98

139:                                              ; preds = %78
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %3, i64 0, i32 3, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %143 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #14
  %145 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 0
  store %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 1
  %147 = bitcast %"class.v8::internal::compiler::Node"** %146 to i64*
  store i64 %28, i64* %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AliasStateInfo", %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* %7, i64 0, i32 2, i32 0
  store i64* null, i64** %148, align 8
  %149 = icmp eq i32 %85, %84
  br i1 %149, label %188, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %143, i64 0, i32 2
  %152 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %143, i64 0, i32 3
  %153 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2 to i8*
  %154 = sext i32 %85 to i64
  br label %155

155:                                              ; preds = %183, %150
  %156 = phi i64 [ %154, %150 ], [ %185, %183 ]
  %157 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %150 ], [ %184, %183 ]
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, i64 0, i32 1, i32 0, i64 %156
  %159 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %158, align 8
  %160 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %159, null
  br i1 %160, label %183, label %161

161:                                              ; preds = %155
  %162 = call %"class.v8::internal::compiler::LoadElimination::AbstractField"* @_ZNK2v88internal8compiler15LoadElimination13AbstractField4KillERKNS2_14AliasStateInfoENS0_11MaybeHandleINS0_4NameEEEPNS0_4ZoneE(%"class.v8::internal::compiler::LoadElimination::AbstractField"* nonnull %159, %"class.v8::internal::compiler::LoadElimination::AliasStateInfo"* nonnull dereferenceable(24) %7, i64* %141, %"class.v8::internal::Zone"* %143) #14
  %163 = load %"class.v8::internal::compiler::LoadElimination::AbstractField"*, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %158, align 8
  %164 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractField"* %163, %162
  br i1 %164, label %183, label %165

165:                                              ; preds = %161
  %166 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %157, null
  br i1 %166, label %167, label %180

167:                                              ; preds = %165
  %168 = load i64, i64* %151, align 8
  %169 = load i64, i64* %152, align 8
  %170 = sub i64 %169, %168
  %171 = icmp ult i64 %170, 528
  br i1 %171, label %172, label %174, !prof !4

172:                                              ; preds = %167
  %173 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %143, i64 528) #14
  br label %176

174:                                              ; preds = %167
  %175 = add i64 %168, 528
  store i64 %175, i64* %151, align 8
  br label %176

176:                                              ; preds = %174, %172
  %177 = phi i64 [ %173, %172 ], [ %168, %174 ]
  %178 = inttoptr i64 %177 to i8*
  %179 = inttoptr i64 %177 to %"class.v8::internal::compiler::LoadElimination::AbstractState"*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %153, i64 528, i1 false) #14
  br label %180

180:                                              ; preds = %176, %165
  %181 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %157, %165 ], [ %179, %176 ]
  %182 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState", %"class.v8::internal::compiler::LoadElimination::AbstractState"* %181, i64 0, i32 1, i32 0, i64 %156
  store %"class.v8::internal::compiler::LoadElimination::AbstractField"* %162, %"class.v8::internal::compiler::LoadElimination::AbstractField"** %182, align 8
  br label %183

183:                                              ; preds = %180, %161, %155
  %184 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %181, %180 ], [ %157, %161 ], [ %157, %155 ]
  %185 = add nsw i64 %156, 1
  %186 = trunc i64 %185 to i32
  %187 = icmp eq i32 %84, %186
  br i1 %187, label %188, label %155

188:                                              ; preds = %183, %139
  %189 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ null, %139 ], [ %184, %183 ]
  %190 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"* %189, null
  %191 = select i1 %190, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %2, %"class.v8::internal::compiler::LoadElimination::AbstractState"* %189
  br label %192

192:                                              ; preds = %136, %133, %117, %58, %43, %32, %188
  %193 = phi i8* [ %144, %188 ], [ %35, %32 ], [ %35, %43 ], [ %35, %58 ], [ %93, %117 ], [ %93, %133 ], [ %93, %136 ]
  %194 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"* [ %191, %188 ], [ %2, %32 ], [ %2, %43 ], [ %61, %58 ], [ %120, %117 ], [ %120, %133 ], [ %2, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #14
  ret %"class.v8::internal::compiler::LoadElimination::AbstractState"* %194
}

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #9

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #10

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Isolate"* @_ZNK2v88internal8compiler15LoadElimination7isolateEv(%"class.v8::internal::compiler::LoadElimination"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 1
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  ret %"class.v8::internal::Isolate"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler15LoadEliminationD2Ev(%"class.v8::internal::compiler::LoadElimination"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler15LoadEliminationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler15LoadEliminationD0Ev(%"class.v8::internal::compiler::LoadElimination"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination", %"class.v8::internal::compiler::LoadElimination"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler15LoadEliminationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::compiler::LoadElimination"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal8compiler15LoadElimination12reducer_nameEv(%"class.v8::internal::compiler::LoadElimination"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0)
}

declare void @_ZN2v88internal8compiler7Reducer8FinalizeEv(%"class.v8::internal::compiler::Reducer"*) unnamed_addr #1

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__15equalINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIPN2v88internal8compiler4NodeENS5_13ZoneHandleSetINS5_3MapEEEEEPNS_11__tree_nodeISC_PvEElEEEESI_NS_10__equal_toINS_4pairIKS8_SB_EESM_EEEEbT_SO_T0_T1_(%"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #6 comdat {
  %4 = icmp eq %"class.std::__1::__tree_end_node"* %0, %1
  br i1 %4, label %128, label %5

5:                                                ; preds = %3, %125
  %6 = phi %"class.std::__1::__tree_end_node"* [ %126, %125 ], [ %2, %3 ]
  %7 = phi %"class.std::__1::__tree_end_node"* [ %97, %125 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 4
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 4
  %10 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.v8::internal::compiler::Node"**
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.v8::internal::compiler::Node"**
  %13 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %12, align 8
  %14 = icmp eq %"class.v8::internal::compiler::Node"* %11, %13
  br i1 %14, label %15, label %128

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 5
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 5
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %18, %21
  br i1 %22, label %68, label %23

23:                                               ; preds = %15
  %24 = and i64 %18, 3
  %25 = icmp eq i64 %24, 2
  %26 = and i64 %21, 3
  %27 = icmp eq i64 %26, 2
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %128

29:                                               ; preds = %23
  %30 = add i64 %18, -2
  %31 = inttoptr i64 %30 to %"class.v8::internal::ZoneVector.1336"*
  %32 = add i64 %21, -2
  %33 = inttoptr i64 %32 to %"class.v8::internal::ZoneVector.1336"*
  %34 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %31, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast i64*** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %30 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = getelementptr inbounds %"class.v8::internal::ZoneVector.1336", %"class.v8::internal::ZoneVector.1336"* %33, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast i64*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = inttoptr i64 %32 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 3
  %48 = icmp eq i64 %40, %47
  br i1 %48, label %49, label %128

49:                                               ; preds = %29
  %50 = icmp eq i64 %39, 0
  br i1 %50, label %68, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %38 to i64**
  %53 = inttoptr i64 %45 to i64**
  br label %56

54:                                               ; preds = %61
  %55 = icmp ult i64 %67, %40
  br i1 %55, label %56, label %68

56:                                               ; preds = %54, %51
  %57 = phi i64 [ 0, %51 ], [ %67, %54 ]
  %58 = icmp eq i64 %57, %40
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = inttoptr i64 %32 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = getelementptr inbounds i64*, i64** %52, i64 %57
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds i64*, i64** %53, i64 %57
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  %67 = add nuw i64 %57, 1
  br i1 %66, label %54, label %128

68:                                               ; preds = %54, %49, %15
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 1, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %80

72:                                               ; preds = %68
  %73 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 2
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_end_node"**
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, %73
  br i1 %79, label %96, label %87

80:                                               ; preds = %68, %80
  %81 = phi %"class.std::__1::__tree_node_base"* [ %83, %80 ], [ %70, %68 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, null
  br i1 %84, label %85, label %80

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 0, i32 0
  br label %96

87:                                               ; preds = %72, %87
  %88 = phi %"class.std::__1::__tree_end_node"** [ %91, %87 ], [ %75, %72 ]
  %89 = bitcast %"class.std::__1::__tree_end_node"** %88 to %"class.std::__1::__tree_node_base"**
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 2
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, %90
  br i1 %95, label %96, label %87

96:                                               ; preds = %87, %72, %85
  %97 = phi %"class.std::__1::__tree_end_node"* [ %86, %85 ], [ %76, %72 ], [ %92, %87 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 1, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %109

101:                                              ; preds = %96
  %102 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node_base"*
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 2
  %104 = bitcast %"class.std::__1::__tree_end_node"* %103 to %"class.std::__1::__tree_end_node"**
  %105 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, %102
  br i1 %108, label %125, label %116

109:                                              ; preds = %96, %109
  %110 = phi %"class.std::__1::__tree_node_base"* [ %112, %109 ], [ %99, %96 ]
  %111 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %114, label %109

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 0
  br label %125

116:                                              ; preds = %101, %116
  %117 = phi %"class.std::__1::__tree_end_node"** [ %120, %116 ], [ %104, %101 ]
  %118 = bitcast %"class.std::__1::__tree_end_node"** %117 to %"class.std::__1::__tree_node_base"**
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %119, i64 0, i32 2
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, %119
  br i1 %124, label %125, label %116

125:                                              ; preds = %116, %101, %114
  %126 = phi %"class.std::__1::__tree_end_node"* [ %115, %114 ], [ %105, %101 ], [ %121, %116 ]
  %127 = icmp eq %"class.std::__1::__tree_end_node"* %97, %1
  br i1 %127, label %128, label %5

128:                                              ; preds = %5, %29, %23, %125, %61, %3
  %129 = phi i1 [ true, %3 ], [ false, %61 ], [ false, %5 ], [ false, %29 ], [ false, %23 ], [ true, %125 ]
  ret i1 %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE14__assign_multiINS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEEEEvT_SP_(%"class.std::__1::__tree.25"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %248, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.25"* %0 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %12, align 8
  store i64 0, i64* %4, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %16 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node_base"* %16, null
  %18 = bitcast %"class.std::__1::__tree_node_base"* %16 to %"class.std::__1::__tree_node"*
  %19 = select i1 %17, %"class.std::__1::__tree_node"* %10, %"class.std::__1::__tree_node"* %18
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node"* %19) #14
  br label %248

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 2
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %24, null
  br i1 %25, label %71, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::__tree_node"* %19 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %27
  br i1 %30, label %31, label %50

31:                                               ; preds = %26
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %28, align 8
  %32 = bitcast %"class.std::__1::__tree_end_node"** %23 to %"class.std::__1::__tree_node"**
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 1
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %71, label %37

37:                                               ; preds = %31, %46
  %38 = phi %"class.std::__1::__tree_node_base"* [ %47, %46 ], [ %35, %31 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42, %37
  %47 = phi %"class.std::__1::__tree_node_base"* [ %40, %37 ], [ %44, %42 ]
  br label %37

48:                                               ; preds = %42
  %49 = bitcast %"class.std::__1::__tree_node_base"* %38 to %"class.std::__1::__tree_node"*
  br label %71

50:                                               ; preds = %26
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %51, align 8
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node"*
  br label %71

58:                                               ; preds = %50, %67
  %59 = phi %"class.std::__1::__tree_node_base"* [ %68, %67 ], [ %54, %50 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %67

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 1
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63, %58
  %68 = phi %"class.std::__1::__tree_node_base"* [ %61, %58 ], [ %65, %63 ]
  br label %58

69:                                               ; preds = %63
  %70 = bitcast %"class.std::__1::__tree_node_base"* %59 to %"class.std::__1::__tree_node"*
  br label %71

71:                                               ; preds = %22, %31, %48, %56, %69
  %72 = phi %"class.std::__1::__tree_node"* [ %49, %48 ], [ %57, %56 ], [ %70, %69 ], [ null, %22 ], [ %33, %31 ]
  %73 = ptrtoint %"class.std::__1::__tree_node"* %72 to i64
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %74, label %228, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %77 = bitcast %"class.std::__1::__tree.25"* %0 to i64*
  %78 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %79

79:                                               ; preds = %75, %220
  %80 = phi %"class.std::__1::__tree_node"* [ %72, %75 ], [ %222, %220 ]
  %81 = phi %"class.std::__1::__tree_end_node"* [ %1, %75 ], [ %221, %220 ]
  %82 = phi i64 [ %73, %75 ], [ %192, %220 ]
  %83 = phi %"class.std::__1::__tree_node"* [ %19, %75 ], [ %80, %220 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 4
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 1
  %86 = bitcast %"class.std::__1::__tree_end_node"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"struct.std::__1::__value_type"* %85 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 1, i32 0, i32 1, i32 0
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 5
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %89, align 8
  %93 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %76, align 8
  %94 = icmp eq %"class.std::__1::__tree_node"* %93, null
  %95 = inttoptr i64 %87 to %"class.v8::internal::compiler::Node"*
  br i1 %94, label %118, label %96

96:                                               ; preds = %79, %115
  %97 = phi %"class.std::__1::__tree_node"* [ %117, %115 ], [ %93, %79 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 1, i32 0, i32 0
  %99 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, align 8
  %100 = icmp ugt %"class.v8::internal::compiler::Node"* %99, %95
  br i1 %100, label %101, label %108

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %115

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  br label %118

108:                                              ; preds = %96
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 1
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  br label %118

115:                                              ; preds = %108, %101
  %116 = phi %"class.std::__1::__tree_node_base"* [ %103, %101 ], [ %110, %108 ]
  %117 = bitcast %"class.std::__1::__tree_node_base"* %116 to %"class.std::__1::__tree_node"*
  br label %96

118:                                              ; preds = %79, %112, %105
  %119 = phi %"class.std::__1::__tree_end_node"* [ %107, %105 ], [ %114, %112 ], [ %11, %79 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %106, %105 ], [ %113, %112 ], [ %12, %79 ]
  %121 = bitcast %"class.std::__1::__tree_node"* %83 to %"class.std::__1::__tree_node_base"*
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 2
  %123 = bitcast %"class.std::__1::__tree_node"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %122, align 8
  %124 = bitcast %"class.std::__1::__tree_node_base"** %120 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %83, %"class.std::__1::__tree_node"** %124, align 8
  %125 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 0, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %118
  %130 = ptrtoint %"class.std::__1::__tree_node_base"* %127 to i64
  store i64 %130, i64* %77, align 8
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  br label %132

132:                                              ; preds = %118, %129
  %133 = phi %"class.std::__1::__tree_node_base"* [ %121, %118 ], [ %131, %129 ]
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %134, %"class.std::__1::__tree_node_base"* %133) #14
  %135 = load i64, i64* %4, align 8
  %136 = add i64 %135, 1
  store i64 %136, i64* %4, align 8
  %137 = icmp eq i64 %82, 0
  br i1 %137, label %191, label %138

138:                                              ; preds = %132
  %139 = inttoptr i64 %82 to %"class.std::__1::__tree_node"*
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %139, i64 0, i32 0, i32 2
  %141 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_end_node"* %141, null
  br i1 %142, label %188, label %143

143:                                              ; preds = %138
  %144 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %144
  br i1 %147, label %148, label %167

148:                                              ; preds = %143
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %145, align 8
  %149 = bitcast %"class.std::__1::__tree_end_node"** %140 to %"class.std::__1::__tree_node"**
  %150 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %150, i64 0, i32 0, i32 1
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %188, label %154

154:                                              ; preds = %148, %163
  %155 = phi %"class.std::__1::__tree_node_base"* [ %164, %163 ], [ %152, %148 ]
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, null
  br i1 %158, label %159, label %163

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 1
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node_base"* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %159, %154
  %164 = phi %"class.std::__1::__tree_node_base"* [ %157, %154 ], [ %161, %159 ]
  br label %154

165:                                              ; preds = %159
  %166 = bitcast %"class.std::__1::__tree_node_base"* %155 to %"class.std::__1::__tree_node"*
  br label %188

167:                                              ; preds = %143
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %168, align 8
  %169 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %140, align 8
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 0, i32 0
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, null
  br i1 %172, label %173, label %175

173:                                              ; preds = %167
  %174 = bitcast %"class.std::__1::__tree_end_node"* %169 to %"class.std::__1::__tree_node"*
  br label %188

175:                                              ; preds = %167, %184
  %176 = phi %"class.std::__1::__tree_node_base"* [ %185, %184 ], [ %171, %167 ]
  %177 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %176, i64 0, i32 0, i32 0
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  %179 = icmp eq %"class.std::__1::__tree_node_base"* %178, null
  br i1 %179, label %180, label %184

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %176, i64 0, i32 1
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %180, %175
  %185 = phi %"class.std::__1::__tree_node_base"* [ %178, %175 ], [ %182, %180 ]
  br label %175

186:                                              ; preds = %180
  %187 = bitcast %"class.std::__1::__tree_node_base"* %176 to %"class.std::__1::__tree_node"*
  br label %188

188:                                              ; preds = %186, %173, %165, %148, %138
  %189 = phi %"class.std::__1::__tree_node"* [ %166, %165 ], [ %174, %173 ], [ %187, %186 ], [ null, %138 ], [ %150, %148 ]
  %190 = ptrtoint %"class.std::__1::__tree_node"* %189 to i64
  br label %191

191:                                              ; preds = %132, %188
  %192 = phi i64 [ 0, %132 ], [ %190, %188 ]
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 1, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node_base"* %194, null
  br i1 %195, label %196, label %204

196:                                              ; preds = %191
  %197 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node_base"*
  %198 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 2
  %199 = bitcast %"class.std::__1::__tree_end_node"* %198 to %"class.std::__1::__tree_end_node"**
  %200 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 0, i32 0
  %202 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %201, align 8
  %203 = icmp eq %"class.std::__1::__tree_node_base"* %202, %197
  br i1 %203, label %220, label %211

204:                                              ; preds = %191, %204
  %205 = phi %"class.std::__1::__tree_node_base"* [ %207, %204 ], [ %194, %191 ]
  %206 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %205, i64 0, i32 0, i32 0
  %207 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %206, align 8
  %208 = icmp eq %"class.std::__1::__tree_node_base"* %207, null
  br i1 %208, label %209, label %204

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %205, i64 0, i32 0
  br label %220

211:                                              ; preds = %196, %211
  %212 = phi %"class.std::__1::__tree_end_node"** [ %215, %211 ], [ %199, %196 ]
  %213 = bitcast %"class.std::__1::__tree_end_node"** %212 to %"class.std::__1::__tree_node_base"**
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  %215 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %214, i64 0, i32 2
  %216 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %215, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %216, i64 0, i32 0
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = icmp eq %"class.std::__1::__tree_node_base"* %218, %214
  br i1 %219, label %220, label %211

220:                                              ; preds = %211, %196, %209
  %221 = phi %"class.std::__1::__tree_end_node"* [ %210, %209 ], [ %200, %196 ], [ %216, %211 ]
  %222 = inttoptr i64 %192 to %"class.std::__1::__tree_node"*
  %223 = icmp ne %"class.std::__1::__tree_node"* %80, null
  %224 = icmp ne %"class.std::__1::__tree_end_node"* %221, %2
  %225 = and i1 %223, %224
  br i1 %225, label %79, label %226

226:                                              ; preds = %220
  %227 = inttoptr i64 %192 to %"class.std::__1::__tree_node"*
  br label %228

228:                                              ; preds = %71, %226
  %229 = phi %"class.std::__1::__tree_node"* [ %72, %71 ], [ %227, %226 ]
  %230 = phi %"class.std::__1::__tree_node"* [ %19, %71 ], [ %80, %226 ]
  %231 = phi i64 [ %73, %71 ], [ %192, %226 ]
  %232 = phi %"class.std::__1::__tree_end_node"* [ %1, %71 ], [ %221, %226 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node"* %230) #14
  %233 = icmp eq i64 %231, 0
  br i1 %233, label %248, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %229, i64 0, i32 0, i32 2
  %236 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %235, align 8
  %237 = icmp eq %"class.std::__1::__tree_end_node"* %236, null
  br i1 %237, label %246, label %238

238:                                              ; preds = %234, %238
  %239 = phi %"class.std::__1::__tree_end_node"* [ %242, %238 ], [ %236, %234 ]
  %240 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 2
  %241 = bitcast %"class.std::__1::__tree_end_node"* %240 to %"class.std::__1::__tree_end_node"**
  %242 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %241, align 8
  %243 = icmp eq %"class.std::__1::__tree_end_node"* %242, null
  br i1 %243, label %244, label %238

244:                                              ; preds = %238
  %245 = bitcast %"class.std::__1::__tree_end_node"* %239 to %"class.std::__1::__tree_node"*
  br label %246

246:                                              ; preds = %244, %234
  %247 = phi %"class.std::__1::__tree_node"* [ %229, %234 ], [ %245, %244 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node"* %247) #14
  br label %248

248:                                              ; preds = %21, %246, %228, %3
  %249 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %232, %228 ], [ %232, %246 ], [ %1, %21 ]
  %250 = icmp eq %"class.std::__1::__tree_end_node"* %249, %2
  br i1 %250, label %354, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %253 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0
  %254 = bitcast %"class.std::__1::__tree_end_node"* %253 to %"class.std::__1::__tree_node"**
  %255 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 0, i32 0
  %256 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 0
  %257 = bitcast %"class.std::__1::__tree.25"* %0 to i64*
  %258 = getelementptr inbounds %"class.std::__1::__tree.25", %"class.std::__1::__tree.25"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %259

259:                                              ; preds = %251, %351
  %260 = phi %"class.std::__1::__tree_end_node"* [ %249, %251 ], [ %352, %351 ]
  %261 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 4
  %262 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %252, align 8, !noalias !105
  %263 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %262, i64 0, i32 2
  %264 = load i64, i64* %263, align 8, !noalias !105
  %265 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %262, i64 0, i32 3
  %266 = load i64, i64* %265, align 8, !noalias !105
  %267 = sub i64 %266, %264
  %268 = icmp ult i64 %267, 48
  br i1 %268, label %269, label %271, !prof !4

269:                                              ; preds = %259
  %270 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %262, i64 48) #14, !noalias !105
  br label %273

271:                                              ; preds = %259
  %272 = add i64 %264, 48
  store i64 %272, i64* %263, align 8, !noalias !105
  br label %273

273:                                              ; preds = %271, %269
  %274 = phi i64 [ %270, %269 ], [ %264, %271 ]
  %275 = inttoptr i64 %274 to %"class.std::__1::__tree_node"*
  %276 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %275, i64 0, i32 1, i32 0
  %277 = bitcast %"struct.std::__1::pair.1271"* %276 to i8*
  %278 = bitcast %"class.std::__1::__tree_end_node"* %261 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 8 %278, i64 16, i1 false) #14, !noalias !105
  %279 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %254, align 8
  %280 = icmp eq %"class.std::__1::__tree_node"* %279, null
  br i1 %280, label %306, label %281

281:                                              ; preds = %273
  %282 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %275, i64 0, i32 1, i32 0, i32 0
  %283 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %282, align 8
  br label %284

284:                                              ; preds = %303, %281
  %285 = phi %"class.std::__1::__tree_node"* [ %305, %303 ], [ %279, %281 ]
  %286 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 1, i32 0, i32 0
  %287 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %286, align 8
  %288 = icmp ult %"class.v8::internal::compiler::Node"* %283, %287
  br i1 %288, label %289, label %296

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 0, i32 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, null
  br i1 %292, label %293, label %303

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 0, i32 0, i32 0
  %295 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 0, i32 0
  br label %306

296:                                              ; preds = %284
  %297 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 0, i32 1
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %297, align 8
  %299 = icmp eq %"class.std::__1::__tree_node_base"* %298, null
  br i1 %299, label %300, label %303

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 0, i32 1
  %302 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 0, i32 0
  br label %306

303:                                              ; preds = %296, %289
  %304 = phi %"class.std::__1::__tree_node_base"* [ %291, %289 ], [ %298, %296 ]
  %305 = bitcast %"class.std::__1::__tree_node_base"* %304 to %"class.std::__1::__tree_node"*
  br label %284

306:                                              ; preds = %273, %300, %293
  %307 = phi %"class.std::__1::__tree_end_node"* [ %295, %293 ], [ %302, %300 ], [ %253, %273 ]
  %308 = phi %"class.std::__1::__tree_node_base"** [ %294, %293 ], [ %301, %300 ], [ %255, %273 ]
  %309 = inttoptr i64 %274 to %"class.std::__1::__tree_node_base"*
  %310 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %309, i64 0, i32 2
  %311 = inttoptr i64 %274 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %311, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %307, %"class.std::__1::__tree_end_node"** %310, align 8
  store %"class.std::__1::__tree_node_base"* %309, %"class.std::__1::__tree_node_base"** %308, align 8
  %312 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %256, align 8
  %313 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %312, i64 0, i32 0
  %314 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %313, align 8
  %315 = icmp eq %"class.std::__1::__tree_node_base"* %314, null
  br i1 %315, label %319, label %316

316:                                              ; preds = %306
  %317 = ptrtoint %"class.std::__1::__tree_node_base"* %314 to i64
  store i64 %317, i64* %257, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %308, align 8
  br label %319

319:                                              ; preds = %306, %316
  %320 = phi %"class.std::__1::__tree_node_base"* [ %309, %306 ], [ %318, %316 ]
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %321, %"class.std::__1::__tree_node_base"* %320) #14
  %322 = load i64, i64* %4, align 8
  %323 = add i64 %322, 1
  store i64 %323, i64* %4, align 8
  %324 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 1, i32 0
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = icmp eq %"class.std::__1::__tree_node_base"* %325, null
  br i1 %326, label %327, label %335

327:                                              ; preds = %319
  %328 = bitcast %"class.std::__1::__tree_end_node"* %260 to %"class.std::__1::__tree_node_base"*
  %329 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 2
  %330 = bitcast %"class.std::__1::__tree_end_node"* %329 to %"class.std::__1::__tree_end_node"**
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %330, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %328
  br i1 %334, label %351, label %342

335:                                              ; preds = %319, %335
  %336 = phi %"class.std::__1::__tree_node_base"* [ %338, %335 ], [ %325, %319 ]
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %336, i64 0, i32 0, i32 0
  %338 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %337, align 8
  %339 = icmp eq %"class.std::__1::__tree_node_base"* %338, null
  br i1 %339, label %340, label %335

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %336, i64 0, i32 0
  br label %351

342:                                              ; preds = %327, %342
  %343 = phi %"class.std::__1::__tree_end_node"** [ %346, %342 ], [ %330, %327 ]
  %344 = bitcast %"class.std::__1::__tree_end_node"** %343 to %"class.std::__1::__tree_node_base"**
  %345 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %344, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %345, i64 0, i32 2
  %347 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 0, i32 0
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %348, align 8
  %350 = icmp eq %"class.std::__1::__tree_node_base"* %349, %345
  br i1 %350, label %351, label %342

351:                                              ; preds = %342, %327, %340
  %352 = phi %"class.std::__1::__tree_end_node"* [ %341, %340 ], [ %331, %327 ], [ %347, %342 ]
  %353 = icmp eq %"class.std::__1::__tree_end_node"* %352, %2
  br i1 %353, label %354, label %259

354:                                              ; preds = %351, %248
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.25"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.25"* %0, %"class.std::__1::__tree_node"* %7) #14
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #1

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #14
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #14
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #14
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #14
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #14
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #14
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #14
  tail call void @_ZdlPv(i8* %8) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #14
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #14
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #14
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #14
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #14
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #14
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #14
  tail call void @_ZdlPv(i8* %8) #16
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE14__assign_multiINS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEEEEvT_SO_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %248, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree"* %0 to %"class.std::__1::__tree_node.1320"**
  %10 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %12, align 8
  store i64 0, i64* %4, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %10, i64 0, i32 0, i32 1
  %16 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node_base"* %16, null
  %18 = bitcast %"class.std::__1::__tree_node_base"* %16 to %"class.std::__1::__tree_node.1320"*
  %19 = select i1 %17, %"class.std::__1::__tree_node.1320"* %10, %"class.std::__1::__tree_node.1320"* %18
  %20 = icmp eq %"class.std::__1::__tree_node.1320"* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1320"* %19) #14
  br label %248

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %19, i64 0, i32 0, i32 2
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %24, null
  br i1 %25, label %71, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::__tree_node.1320"* %19 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %27
  br i1 %30, label %31, label %50

31:                                               ; preds = %26
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %28, align 8
  %32 = bitcast %"class.std::__1::__tree_end_node"** %23 to %"class.std::__1::__tree_node.1320"**
  %33 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %33, i64 0, i32 0, i32 1
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %71, label %37

37:                                               ; preds = %31, %46
  %38 = phi %"class.std::__1::__tree_node_base"* [ %47, %46 ], [ %35, %31 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42, %37
  %47 = phi %"class.std::__1::__tree_node_base"* [ %40, %37 ], [ %44, %42 ]
  br label %37

48:                                               ; preds = %42
  %49 = bitcast %"class.std::__1::__tree_node_base"* %38 to %"class.std::__1::__tree_node.1320"*
  br label %71

50:                                               ; preds = %26
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %51, align 8
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node.1320"*
  br label %71

58:                                               ; preds = %50, %67
  %59 = phi %"class.std::__1::__tree_node_base"* [ %68, %67 ], [ %54, %50 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %67

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 1
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63, %58
  %68 = phi %"class.std::__1::__tree_node_base"* [ %61, %58 ], [ %65, %63 ]
  br label %58

69:                                               ; preds = %63
  %70 = bitcast %"class.std::__1::__tree_node_base"* %59 to %"class.std::__1::__tree_node.1320"*
  br label %71

71:                                               ; preds = %22, %31, %48, %56, %69
  %72 = phi %"class.std::__1::__tree_node.1320"* [ %49, %48 ], [ %57, %56 ], [ %70, %69 ], [ null, %22 ], [ %33, %31 ]
  %73 = ptrtoint %"class.std::__1::__tree_node.1320"* %72 to i64
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %74, label %228, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.1320"**
  %77 = bitcast %"class.std::__1::__tree"* %0 to i64*
  %78 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %79

79:                                               ; preds = %75, %220
  %80 = phi %"class.std::__1::__tree_node.1320"* [ %72, %75 ], [ %222, %220 ]
  %81 = phi %"class.std::__1::__tree_end_node"* [ %1, %75 ], [ %221, %220 ]
  %82 = phi i64 [ %73, %75 ], [ %192, %220 ]
  %83 = phi %"class.std::__1::__tree_node.1320"* [ %19, %75 ], [ %80, %220 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 4
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %83, i64 0, i32 1, i32 0, i32 1
  %87 = bitcast %"class.std::__1::__tree_end_node"* %84 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"struct.std::__1::__value_type.1321"* %85 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 5
  %91 = bitcast %"struct.v8::internal::compiler::LoadElimination::FieldInfo"* %86 to i8*
  %92 = bitcast %"class.std::__1::__tree_end_node"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 32, i1 false) #14
  %93 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %76, align 8
  %94 = icmp eq %"class.std::__1::__tree_node.1320"* %93, null
  %95 = inttoptr i64 %88 to %"class.v8::internal::compiler::Node"*
  br i1 %94, label %118, label %96

96:                                               ; preds = %79, %115
  %97 = phi %"class.std::__1::__tree_node.1320"* [ %117, %115 ], [ %93, %79 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %97, i64 0, i32 1, i32 0, i32 0
  %99 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, align 8
  %100 = icmp ugt %"class.v8::internal::compiler::Node"* %99, %95
  br i1 %100, label %101, label %108

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %97, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %115

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %97, i64 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %97, i64 0, i32 0, i32 0
  br label %118

108:                                              ; preds = %96
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %97, i64 0, i32 0, i32 1
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %97, i64 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %97, i64 0, i32 0, i32 0
  br label %118

115:                                              ; preds = %108, %101
  %116 = phi %"class.std::__1::__tree_node_base"* [ %103, %101 ], [ %110, %108 ]
  %117 = bitcast %"class.std::__1::__tree_node_base"* %116 to %"class.std::__1::__tree_node.1320"*
  br label %96

118:                                              ; preds = %79, %112, %105
  %119 = phi %"class.std::__1::__tree_end_node"* [ %107, %105 ], [ %114, %112 ], [ %11, %79 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %106, %105 ], [ %113, %112 ], [ %12, %79 ]
  %121 = bitcast %"class.std::__1::__tree_node.1320"* %83 to %"class.std::__1::__tree_node_base"*
  %122 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %83, i64 0, i32 0, i32 2
  %123 = bitcast %"class.std::__1::__tree_node.1320"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %122, align 8
  %124 = bitcast %"class.std::__1::__tree_node_base"** %120 to %"class.std::__1::__tree_node.1320"**
  store %"class.std::__1::__tree_node.1320"* %83, %"class.std::__1::__tree_node.1320"** %124, align 8
  %125 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 0, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %118
  %130 = ptrtoint %"class.std::__1::__tree_node_base"* %127 to i64
  store i64 %130, i64* %77, align 8
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  br label %132

132:                                              ; preds = %118, %129
  %133 = phi %"class.std::__1::__tree_node_base"* [ %121, %118 ], [ %131, %129 ]
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %134, %"class.std::__1::__tree_node_base"* %133) #14
  %135 = load i64, i64* %4, align 8
  %136 = add i64 %135, 1
  store i64 %136, i64* %4, align 8
  %137 = icmp eq i64 %82, 0
  br i1 %137, label %191, label %138

138:                                              ; preds = %132
  %139 = inttoptr i64 %82 to %"class.std::__1::__tree_node.1320"*
  %140 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %139, i64 0, i32 0, i32 2
  %141 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_end_node"* %141, null
  br i1 %142, label %188, label %143

143:                                              ; preds = %138
  %144 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %144
  br i1 %147, label %148, label %167

148:                                              ; preds = %143
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %145, align 8
  %149 = bitcast %"class.std::__1::__tree_end_node"** %140 to %"class.std::__1::__tree_node.1320"**
  %150 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %150, i64 0, i32 0, i32 1
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %188, label %154

154:                                              ; preds = %148, %163
  %155 = phi %"class.std::__1::__tree_node_base"* [ %164, %163 ], [ %152, %148 ]
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, null
  br i1 %158, label %159, label %163

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %155, i64 0, i32 1
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node_base"* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %159, %154
  %164 = phi %"class.std::__1::__tree_node_base"* [ %157, %154 ], [ %161, %159 ]
  br label %154

165:                                              ; preds = %159
  %166 = bitcast %"class.std::__1::__tree_node_base"* %155 to %"class.std::__1::__tree_node.1320"*
  br label %188

167:                                              ; preds = %143
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %168, align 8
  %169 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %140, align 8
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %169, i64 0, i32 0
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, null
  br i1 %172, label %173, label %175

173:                                              ; preds = %167
  %174 = bitcast %"class.std::__1::__tree_end_node"* %169 to %"class.std::__1::__tree_node.1320"*
  br label %188

175:                                              ; preds = %167, %184
  %176 = phi %"class.std::__1::__tree_node_base"* [ %185, %184 ], [ %171, %167 ]
  %177 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %176, i64 0, i32 0, i32 0
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  %179 = icmp eq %"class.std::__1::__tree_node_base"* %178, null
  br i1 %179, label %180, label %184

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %176, i64 0, i32 1
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %180, %175
  %185 = phi %"class.std::__1::__tree_node_base"* [ %178, %175 ], [ %182, %180 ]
  br label %175

186:                                              ; preds = %180
  %187 = bitcast %"class.std::__1::__tree_node_base"* %176 to %"class.std::__1::__tree_node.1320"*
  br label %188

188:                                              ; preds = %186, %173, %165, %148, %138
  %189 = phi %"class.std::__1::__tree_node.1320"* [ %166, %165 ], [ %174, %173 ], [ %187, %186 ], [ null, %138 ], [ %150, %148 ]
  %190 = ptrtoint %"class.std::__1::__tree_node.1320"* %189 to i64
  br label %191

191:                                              ; preds = %132, %188
  %192 = phi i64 [ 0, %132 ], [ %190, %188 ]
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 1, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node_base"* %194, null
  br i1 %195, label %196, label %204

196:                                              ; preds = %191
  %197 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node_base"*
  %198 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 2
  %199 = bitcast %"class.std::__1::__tree_end_node"* %198 to %"class.std::__1::__tree_end_node"**
  %200 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %199, align 8
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %200, i64 0, i32 0
  %202 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %201, align 8
  %203 = icmp eq %"class.std::__1::__tree_node_base"* %202, %197
  br i1 %203, label %220, label %211

204:                                              ; preds = %191, %204
  %205 = phi %"class.std::__1::__tree_node_base"* [ %207, %204 ], [ %194, %191 ]
  %206 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %205, i64 0, i32 0, i32 0
  %207 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %206, align 8
  %208 = icmp eq %"class.std::__1::__tree_node_base"* %207, null
  br i1 %208, label %209, label %204

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %205, i64 0, i32 0
  br label %220

211:                                              ; preds = %196, %211
  %212 = phi %"class.std::__1::__tree_end_node"** [ %215, %211 ], [ %199, %196 ]
  %213 = bitcast %"class.std::__1::__tree_end_node"** %212 to %"class.std::__1::__tree_node_base"**
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  %215 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %214, i64 0, i32 2
  %216 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %215, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %216, i64 0, i32 0
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = icmp eq %"class.std::__1::__tree_node_base"* %218, %214
  br i1 %219, label %220, label %211

220:                                              ; preds = %211, %196, %209
  %221 = phi %"class.std::__1::__tree_end_node"* [ %210, %209 ], [ %200, %196 ], [ %216, %211 ]
  %222 = inttoptr i64 %192 to %"class.std::__1::__tree_node.1320"*
  %223 = icmp ne %"class.std::__1::__tree_node.1320"* %80, null
  %224 = icmp ne %"class.std::__1::__tree_end_node"* %221, %2
  %225 = and i1 %223, %224
  br i1 %225, label %79, label %226

226:                                              ; preds = %220
  %227 = inttoptr i64 %192 to %"class.std::__1::__tree_node.1320"*
  br label %228

228:                                              ; preds = %71, %226
  %229 = phi %"class.std::__1::__tree_node.1320"* [ %72, %71 ], [ %227, %226 ]
  %230 = phi %"class.std::__1::__tree_node.1320"* [ %19, %71 ], [ %80, %226 ]
  %231 = phi i64 [ %73, %71 ], [ %192, %226 ]
  %232 = phi %"class.std::__1::__tree_end_node"* [ %1, %71 ], [ %221, %226 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1320"* %230) #14
  %233 = icmp eq i64 %231, 0
  br i1 %233, label %248, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %229, i64 0, i32 0, i32 2
  %236 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %235, align 8
  %237 = icmp eq %"class.std::__1::__tree_end_node"* %236, null
  br i1 %237, label %246, label %238

238:                                              ; preds = %234, %238
  %239 = phi %"class.std::__1::__tree_end_node"* [ %242, %238 ], [ %236, %234 ]
  %240 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 2
  %241 = bitcast %"class.std::__1::__tree_end_node"* %240 to %"class.std::__1::__tree_end_node"**
  %242 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %241, align 8
  %243 = icmp eq %"class.std::__1::__tree_end_node"* %242, null
  br i1 %243, label %244, label %238

244:                                              ; preds = %238
  %245 = bitcast %"class.std::__1::__tree_end_node"* %239 to %"class.std::__1::__tree_node.1320"*
  br label %246

246:                                              ; preds = %244, %234
  %247 = phi %"class.std::__1::__tree_node.1320"* [ %229, %234 ], [ %245, %244 ]
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1320"* %247) #14
  br label %248

248:                                              ; preds = %21, %246, %228, %3
  %249 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %232, %228 ], [ %232, %246 ], [ %1, %21 ]
  %250 = icmp eq %"class.std::__1::__tree_end_node"* %249, %2
  br i1 %250, label %354, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %253 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %254 = bitcast %"class.std::__1::__tree_end_node"* %253 to %"class.std::__1::__tree_node.1320"**
  %255 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 0, i32 0
  %256 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %257 = bitcast %"class.std::__1::__tree"* %0 to i64*
  %258 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %259

259:                                              ; preds = %251, %351
  %260 = phi %"class.std::__1::__tree_end_node"* [ %249, %251 ], [ %352, %351 ]
  %261 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 4
  %262 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %252, align 8, !noalias !108
  %263 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %262, i64 0, i32 2
  %264 = load i64, i64* %263, align 8, !noalias !108
  %265 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %262, i64 0, i32 3
  %266 = load i64, i64* %265, align 8, !noalias !108
  %267 = sub i64 %266, %264
  %268 = icmp ult i64 %267, 72
  br i1 %268, label %269, label %271, !prof !4

269:                                              ; preds = %259
  %270 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %262, i64 72) #14, !noalias !108
  br label %273

271:                                              ; preds = %259
  %272 = add i64 %264, 72
  store i64 %272, i64* %263, align 8, !noalias !108
  br label %273

273:                                              ; preds = %271, %269
  %274 = phi i64 [ %270, %269 ], [ %264, %271 ]
  %275 = inttoptr i64 %274 to %"class.std::__1::__tree_node.1320"*
  %276 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %275, i64 0, i32 1, i32 0
  %277 = bitcast %"struct.std::__1::pair.1262"* %276 to i8*
  %278 = bitcast %"class.std::__1::__tree_end_node"* %261 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %277, i8* align 8 %278, i64 40, i1 false) #14, !noalias !108
  %279 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %254, align 8
  %280 = icmp eq %"class.std::__1::__tree_node.1320"* %279, null
  br i1 %280, label %306, label %281

281:                                              ; preds = %273
  %282 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %275, i64 0, i32 1, i32 0, i32 0
  %283 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %282, align 8
  br label %284

284:                                              ; preds = %303, %281
  %285 = phi %"class.std::__1::__tree_node.1320"* [ %305, %303 ], [ %279, %281 ]
  %286 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %285, i64 0, i32 1, i32 0, i32 0
  %287 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %286, align 8
  %288 = icmp ult %"class.v8::internal::compiler::Node"* %283, %287
  br i1 %288, label %289, label %296

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %285, i64 0, i32 0, i32 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, null
  br i1 %292, label %293, label %303

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %285, i64 0, i32 0, i32 0, i32 0
  %295 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %285, i64 0, i32 0, i32 0
  br label %306

296:                                              ; preds = %284
  %297 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %285, i64 0, i32 0, i32 1
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %297, align 8
  %299 = icmp eq %"class.std::__1::__tree_node_base"* %298, null
  br i1 %299, label %300, label %303

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %285, i64 0, i32 0, i32 1
  %302 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %285, i64 0, i32 0, i32 0
  br label %306

303:                                              ; preds = %296, %289
  %304 = phi %"class.std::__1::__tree_node_base"* [ %291, %289 ], [ %298, %296 ]
  %305 = bitcast %"class.std::__1::__tree_node_base"* %304 to %"class.std::__1::__tree_node.1320"*
  br label %284

306:                                              ; preds = %273, %300, %293
  %307 = phi %"class.std::__1::__tree_end_node"* [ %295, %293 ], [ %302, %300 ], [ %253, %273 ]
  %308 = phi %"class.std::__1::__tree_node_base"** [ %294, %293 ], [ %301, %300 ], [ %255, %273 ]
  %309 = inttoptr i64 %274 to %"class.std::__1::__tree_node_base"*
  %310 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %309, i64 0, i32 2
  %311 = inttoptr i64 %274 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %311, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %307, %"class.std::__1::__tree_end_node"** %310, align 8
  store %"class.std::__1::__tree_node_base"* %309, %"class.std::__1::__tree_node_base"** %308, align 8
  %312 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %256, align 8
  %313 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %312, i64 0, i32 0
  %314 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %313, align 8
  %315 = icmp eq %"class.std::__1::__tree_node_base"* %314, null
  br i1 %315, label %319, label %316

316:                                              ; preds = %306
  %317 = ptrtoint %"class.std::__1::__tree_node_base"* %314 to i64
  store i64 %317, i64* %257, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %308, align 8
  br label %319

319:                                              ; preds = %306, %316
  %320 = phi %"class.std::__1::__tree_node_base"* [ %309, %306 ], [ %318, %316 ]
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %321, %"class.std::__1::__tree_node_base"* %320) #14
  %322 = load i64, i64* %4, align 8
  %323 = add i64 %322, 1
  store i64 %323, i64* %4, align 8
  %324 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 1, i32 0
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = icmp eq %"class.std::__1::__tree_node_base"* %325, null
  br i1 %326, label %327, label %335

327:                                              ; preds = %319
  %328 = bitcast %"class.std::__1::__tree_end_node"* %260 to %"class.std::__1::__tree_node_base"*
  %329 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %260, i64 2
  %330 = bitcast %"class.std::__1::__tree_end_node"* %329 to %"class.std::__1::__tree_end_node"**
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %330, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %328
  br i1 %334, label %351, label %342

335:                                              ; preds = %319, %335
  %336 = phi %"class.std::__1::__tree_node_base"* [ %338, %335 ], [ %325, %319 ]
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %336, i64 0, i32 0, i32 0
  %338 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %337, align 8
  %339 = icmp eq %"class.std::__1::__tree_node_base"* %338, null
  br i1 %339, label %340, label %335

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %336, i64 0, i32 0
  br label %351

342:                                              ; preds = %327, %342
  %343 = phi %"class.std::__1::__tree_end_node"** [ %346, %342 ], [ %330, %327 ]
  %344 = bitcast %"class.std::__1::__tree_end_node"** %343 to %"class.std::__1::__tree_node_base"**
  %345 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %344, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %345, i64 0, i32 2
  %347 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 0, i32 0
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %348, align 8
  %350 = icmp eq %"class.std::__1::__tree_node_base"* %349, %345
  br i1 %350, label %351, label %342

351:                                              ; preds = %342, %327, %340
  %352 = phi %"class.std::__1::__tree_end_node"* [ %341, %340 ], [ %331, %327 ], [ %347, %342 ]
  %353 = icmp eq %"class.std::__1::__tree_end_node"* %352, %2
  br i1 %353, label %354, label %259

354:                                              ; preds = %351, %248
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1320"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1320"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.1320"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.1320"* %5 to %"class.std::__1::__tree_node.1320"**
  %7 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1320"* %7) #14
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.1320", %"class.std::__1::__tree_node.1320"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.1320"**
  %10 = load %"class.std::__1::__tree_node.1320"*, %"class.std::__1::__tree_node.1320"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.1320"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

declare zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1300"*, %"class.std::__1::__tree_node.1334"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1334"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.1334"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.1334"* %5 to %"class.std::__1::__tree_node.1334"**
  %7 = load %"class.std::__1::__tree_node.1334"*, %"class.std::__1::__tree_node.1334"** %6, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1300"* %0, %"class.std::__1::__tree_node.1334"* %7) #14
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.1334", %"class.std::__1::__tree_node.1334"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.1334"**
  %10 = load %"class.std::__1::__tree_node.1334"*, %"class.std::__1::__tree_node.1334"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.1334"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base.1289"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::Node"*** %9, %3
  %11 = ptrtoint %"class.v8::internal::compiler::Node"*** %9 to i64
  %12 = ptrtoint %"class.v8::internal::compiler::Node"*** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %22
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::compiler::Node"**** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to %"class.v8::internal::compiler::Node"***
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::compiler::Node"** [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 1
  %43 = ptrtoint %"class.v8::internal::compiler::Node"** %42 to i64
  %44 = bitcast %"class.v8::internal::compiler::Node"*** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, i64 1
  %50 = bitcast %"class.v8::internal::compiler::Node"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::compiler::Node"*** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::Node"**
  %56 = icmp eq %"class.v8::internal::compiler::Node"** %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::compiler::Node"*** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 512
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, i64 1
  %71 = bitcast %"class.v8::internal::compiler::Node"** %70 to i64*
  store i64 512, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::compiler::Node"** %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::compiler::Node"** %63, %"class.v8::internal::compiler::Node"*** %37, align 8
  %74 = bitcast %"class.v8::internal::compiler::Node"** %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"***
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::compiler::Node"*** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::compiler::Node"*** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 1
  store %"class.v8::internal::compiler::Node"*** %84, %"class.v8::internal::compiler::Node"**** %2, align 8
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::compiler::Node"*** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 512, %95 ], [ 256, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to %"class.v8::internal::compiler::Node"***
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 512
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 1
  %119 = bitcast %"class.v8::internal::compiler::Node"** %118 to i64*
  store i64 512, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::compiler::Node"** %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::Node"** %111, %"class.v8::internal::compiler::Node"*** %103, align 8
  %122 = bitcast %"class.v8::internal::compiler::Node"** %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::compiler::Node"*** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::compiler::Node"*** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 512
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to i64*
  store i64 512, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"** %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::compiler::Node"** %133, %"class.v8::internal::compiler::Node"*** %103, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"** %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 1
  %148 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %152 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::compiler::Node"*** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::compiler::Node"*** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::compiler::Node"*** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::Node"*** %155 to i64
  %159 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 %163
  store %"class.v8::internal::compiler::Node"*** %164, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::Node"*** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::compiler::Node"*** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::Node"**** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base.1289", %"class.std::__1::__deque_base.1289"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %167, i64 1
  %187 = bitcast %"class.v8::internal::compiler::Node"*** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::Node"*** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %167, %"class.v8::internal::compiler::Node"**** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 512
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  store i64 512, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::compiler::Node"** %148, %"class.v8::internal::compiler::Node"*** %103, align 8
  %202 = bitcast %"class.v8::internal::compiler::Node"** %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 2
  %206 = icmp eq %"class.v8::internal::compiler::Node"*** %205, %91
  br i1 %206, label %150, label %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #16
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #14
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN2v88internal8compiler15LoadElimination13AbstractStateENS2_13ZoneAllocatorIS7_EEE8__appendEmRKS7_(%"class.std::__1::vector"*, i64, %"class.v8::internal::compiler::LoadElimination::AbstractState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %2 to i8*
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %139, label %14

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  %16 = inttoptr i64 %10 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %15, i64 %1
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %137, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %2 to i64*
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %48

26:                                               ; preds = %106, %48, %19
  %27 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %15, %48 ], [ %15, %19 ], [ %60, %106 ]
  %28 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %15, i64 %29
  %31 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %26, %37
  %38 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %42, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %43, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %20, align 8
  %41 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %38 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %38, i64 1
  %43 = add i64 %39, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37, !llvm.loop !111

45:                                               ; preds = %37, %26
  %46 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %27, %26 ], [ %42, %37 ]
  %47 = icmp ult i64 %32, 56
  br i1 %47, label %108, label %110

48:                                               ; preds = %19
  %49 = shl nsw i64 %1, 3
  %50 = add i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %15, i64 %52
  %54 = getelementptr i8, i8* %4, i64 1
  %55 = icmp ugt i8* %54, %16
  %56 = icmp ugt %"class.v8::internal::compiler::LoadElimination::AbstractState"** %53, %2
  %57 = and i1 %55, %56
  br i1 %57, label %26, label %58

58:                                               ; preds = %48
  %59 = and i64 %24, 4611686018427387900
  %60 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %15, i64 %59
  %61 = add nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i64, i64* %20, align 8, !alias.scope !112
  %69 = insertelement <2 x i64> undef, i64 %68, i32 0
  %70 = shufflevector <2 x i64> %69, <2 x i64> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x i64> undef, i64 %68, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = load i64, i64* %20, align 8, !alias.scope !112
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = shufflevector <2 x i64> %74, <2 x i64> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x i64> undef, i64 %73, i32 0
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %15, i64 %79
  %82 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8, !alias.scope !115, !noalias !112
  %83 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %81, i64 2
  %84 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %83 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %84, align 8, !alias.scope !115, !noalias !112
  %85 = or i64 %79, 4
  %86 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %15, i64 %85
  %87 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %86 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %87, align 8, !alias.scope !115, !noalias !112
  %88 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %86, i64 2
  %89 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %88 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %89, align 8, !alias.scope !115, !noalias !112
  %90 = add i64 %79, 8
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !117

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %15, i64 %94
  %98 = load i64, i64* %20, align 8, !alias.scope !112
  %99 = insertelement <2 x i64> undef, i64 %98, i32 0
  %100 = shufflevector <2 x i64> %99, <2 x i64> undef, <2 x i32> zeroinitializer
  %101 = insertelement <2 x i64> undef, i64 %98, i32 0
  %102 = shufflevector <2 x i64> %101, <2 x i64> undef, <2 x i32> zeroinitializer
  %103 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !115, !noalias !112
  %104 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %97, i64 2
  %105 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !115, !noalias !112
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %24, %59
  br i1 %107, label %108, label %26

108:                                              ; preds = %45, %110, %106
  %109 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %17 to i64
  br label %137

110:                                              ; preds = %45, %110
  %111 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %135, %110 ], [ %46, %45 ]
  %112 = load i64, i64* %20, align 8
  %113 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111, i64 1
  %115 = load i64, i64* %20, align 8
  %116 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %114 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111, i64 2
  %118 = load i64, i64* %20, align 8
  %119 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %117 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111, i64 3
  %121 = load i64, i64* %20, align 8
  %122 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %120 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111, i64 4
  %124 = load i64, i64* %20, align 8
  %125 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %123 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111, i64 5
  %127 = load i64, i64* %20, align 8
  %128 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %126 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111, i64 6
  %130 = load i64, i64* %20, align 8
  %131 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %129 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111, i64 7
  %133 = load i64, i64* %20, align 8
  %134 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %132 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %111, i64 8
  %136 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"** %135, %17
  br i1 %136, label %108, label %110, !llvm.loop !118

137:                                              ; preds = %14, %108
  %138 = phi i64 [ %109, %108 ], [ %10, %14 ]
  store i64 %138, i64* %9, align 8
  ret void

139:                                              ; preds = %3
  %140 = bitcast %"class.std::__1::vector"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %10, %141
  %143 = ashr exact i64 %142, 3
  %144 = add i64 %143, %1
  %145 = icmp ugt i64 %144, 268435455
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #15
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %7, %141
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 134217727
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %175, label %157

157:                                              ; preds = %148, %152
  %158 = phi i64 [ %155, %152 ], [ 268435455, %148 ]
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %160 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %159, align 8
  %161 = shl i64 %158, 3
  %162 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 3
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %165, %163
  %167 = icmp ugt i64 %161, %166
  br i1 %167, label %168, label %170, !prof !4

168:                                              ; preds = %157
  %169 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %160, i64 %161) #14
  br label %172

170:                                              ; preds = %157
  %171 = add i64 %163, %161
  store i64 %171, i64* %162, align 8
  br label %172

172:                                              ; preds = %170, %168
  %173 = phi i64 [ %169, %168 ], [ %163, %170 ]
  %174 = inttoptr i64 %173 to %"class.v8::internal::compiler::LoadElimination::AbstractState"**
  br label %175

175:                                              ; preds = %172, %152
  %176 = phi i64 [ %158, %172 ], [ 0, %152 ]
  %177 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %174, %172 ], [ null, %152 ]
  %178 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %177, i64 %143
  %179 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %178 to i64
  %180 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %177, i64 %176
  %181 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %178, i64 %1
  %182 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %2 to i64*
  %183 = shl nsw i64 %1, 3
  %184 = add i64 %183, -8
  %185 = lshr exact i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %201, label %189

189:                                              ; preds = %175, %189
  %190 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %195, %189 ], [ %178, %175 ]
  %191 = phi i64 [ %196, %189 ], [ %179, %175 ]
  %192 = phi i64 [ %197, %189 ], [ %187, %175 ]
  %193 = load i64, i64* %182, align 8
  %194 = inttoptr i64 %191 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %190, i64 1
  %196 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %195 to i64
  %197 = add i64 %192, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %189, !llvm.loop !119

199:                                              ; preds = %189
  %200 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %195 to i64
  br label %201

201:                                              ; preds = %175, %199
  %202 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %178, %175 ], [ %195, %199 ]
  %203 = phi i64 [ %179, %175 ], [ %200, %199 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %234, label %205

205:                                              ; preds = %201, %205
  %206 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %231, %205 ], [ %202, %201 ]
  %207 = phi i64 [ %232, %205 ], [ %203, %201 ]
  %208 = load i64, i64* %182, align 8
  %209 = inttoptr i64 %207 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %206, i64 1
  %211 = load i64, i64* %182, align 8
  %212 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %210 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %206, i64 2
  %214 = load i64, i64* %182, align 8
  %215 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %213 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %206, i64 3
  %217 = load i64, i64* %182, align 8
  %218 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %216 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %206, i64 4
  %220 = load i64, i64* %182, align 8
  %221 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %219 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %206, i64 5
  %223 = load i64, i64* %182, align 8
  %224 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %222 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %206, i64 6
  %226 = load i64, i64* %182, align 8
  %227 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %225 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %206, i64 7
  %229 = load i64, i64* %182, align 8
  %230 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %228 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %206, i64 8
  %232 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %231 to i64
  %233 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"** %181, %231
  br i1 %233, label %234, label %205

234:                                              ; preds = %205, %201
  %235 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %180 to i64
  %236 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %181 to i64
  %237 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %238 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %237, align 8
  %239 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %238 to i64
  %240 = load %"class.v8::internal::compiler::LoadElimination::AbstractState"**, %"class.v8::internal::compiler::LoadElimination::AbstractState"*** %8, align 8
  %241 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"** %240, %238
  br i1 %241, label %414, label %242

242:                                              ; preds = %234
  %243 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %240, i64 -1
  %244 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %243 to i64
  %245 = sub i64 %244, %239
  %246 = lshr i64 %245, 3
  %247 = add nuw nsw i64 %246, 1
  %248 = icmp ult i64 %247, 4
  br i1 %248, label %341, label %249

249:                                              ; preds = %242
  %250 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %240, i64 -1
  %251 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %250 to i64
  %252 = sub i64 %251, %239
  %253 = lshr i64 %252, 3
  %254 = xor i64 %253, -1
  %255 = add nsw i64 %143, %254
  %256 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %177, i64 %255
  %257 = xor i64 %253, -1
  %258 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %240, i64 %257
  %259 = icmp ult %"class.v8::internal::compiler::LoadElimination::AbstractState"** %256, %240
  %260 = icmp ult %"class.v8::internal::compiler::LoadElimination::AbstractState"** %258, %178
  %261 = and i1 %259, %260
  br i1 %261, label %341, label %262

262:                                              ; preds = %249
  %263 = and i64 %247, 4611686018427387900
  %264 = sub nsw i64 0, %263
  %265 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %178, i64 %264
  %266 = sub nsw i64 0, %263
  %267 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %240, i64 %266
  %268 = add nsw i64 %263, -4
  %269 = lshr exact i64 %268, 2
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 1
  %272 = icmp eq i64 %268, 0
  br i1 %272, label %319, label %273

273:                                              ; preds = %262
  %274 = sub nuw nsw i64 %270, %271
  %275 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %178, i64 -1
  %276 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %240, i64 -1
  %277 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %178, i64 -1
  %278 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %240, i64 -1
  br label %279

279:                                              ; preds = %279, %273
  %280 = phi i64 [ 0, %273 ], [ %314, %279 ]
  %281 = phi i64 [ %274, %273 ], [ %315, %279 ]
  %282 = sub i64 0, %280
  %283 = sub i64 0, %280
  %284 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %275, i64 %282
  %285 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %276, i64 %283
  %286 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %285, i64 -1
  %287 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !120
  %289 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %285, i64 -2
  %290 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %289, i64 -1
  %291 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !120
  %293 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %284, i64 -1
  %294 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %293 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %294, align 8, !alias.scope !123, !noalias !120
  %295 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %284, i64 -2
  %296 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %295, i64 -1
  %297 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %296 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %297, align 8, !alias.scope !123, !noalias !120
  %298 = sub nuw nsw i64 -4, %280
  %299 = sub nuw nsw i64 -4, %280
  %300 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %277, i64 %298
  %301 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %278, i64 %299
  %302 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %301, i64 -1
  %303 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 8, !alias.scope !120
  %305 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %301, i64 -2
  %306 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %305, i64 -1
  %307 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !120
  %309 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %300, i64 -1
  %310 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %309 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %310, align 8, !alias.scope !123, !noalias !120
  %311 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %300, i64 -2
  %312 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %311, i64 -1
  %313 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %312 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %313, align 8, !alias.scope !123, !noalias !120
  %314 = add i64 %280, 8
  %315 = add i64 %281, -2
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %279, !llvm.loop !125

317:                                              ; preds = %279
  %318 = sub nuw nsw i64 -8, %280
  br label %319

319:                                              ; preds = %317, %262
  %320 = phi i64 [ 0, %262 ], [ %318, %317 ]
  %321 = icmp eq i64 %271, 0
  br i1 %321, label %339, label %322

322:                                              ; preds = %319
  %323 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %178, i64 -1
  %324 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %240, i64 -1
  %325 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %323, i64 %320
  %326 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %324, i64 %320
  %327 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %326, i64 -1
  %328 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %327 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 8, !alias.scope !120
  %330 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %326, i64 -2
  %331 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %330, i64 -1
  %332 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 8, !alias.scope !120
  %334 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %325, i64 -1
  %335 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %334 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %335, align 8, !alias.scope !123, !noalias !120
  %336 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %325, i64 -2
  %337 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %336, i64 -1
  %338 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %337 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %338, align 8, !alias.scope !123, !noalias !120
  br label %339

339:                                              ; preds = %319, %322
  %340 = icmp eq i64 %247, %263
  br i1 %340, label %411, label %341

341:                                              ; preds = %339, %249, %242
  %342 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %178, %249 ], [ %178, %242 ], [ %265, %339 ]
  %343 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %240, %249 ], [ %240, %242 ], [ %267, %339 ]
  %344 = getelementptr %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %343, i64 -1
  %345 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %344 to i64
  %346 = sub i64 %345, %239
  %347 = lshr i64 %346, 3
  %348 = add nuw nsw i64 %347, 1
  %349 = and i64 %348, 7
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %362, label %351

351:                                              ; preds = %341, %351
  %352 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %355, %351 ], [ %342, %341 ]
  %353 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %356, %351 ], [ %343, %341 ]
  %354 = phi i64 [ %360, %351 ], [ %349, %341 ]
  %355 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %352, i64 -1
  %356 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %353, i64 -1
  %357 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = add i64 %354, -1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %351, !llvm.loop !126

362:                                              ; preds = %351, %341
  %363 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ undef, %341 ], [ %355, %351 ]
  %364 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %342, %341 ], [ %355, %351 ]
  %365 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %343, %341 ], [ %356, %351 ]
  %366 = icmp ult i64 %346, 56
  br i1 %366, label %411, label %367

367:                                              ; preds = %362, %367
  %368 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %405, %367 ], [ %364, %362 ]
  %369 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %406, %367 ], [ %365, %362 ]
  %370 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %368, i64 -1
  %371 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %369, i64 -1
  %372 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %371 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %370 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %368, i64 -2
  %376 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %369, i64 -2
  %377 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %375 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %368, i64 -3
  %381 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %369, i64 -3
  %382 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %380 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %368, i64 -4
  %386 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %369, i64 -4
  %387 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %386 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %385 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %368, i64 -5
  %391 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %369, i64 -5
  %392 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %391 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %390 to i64*
  store i64 %393, i64* %394, align 8
  %395 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %368, i64 -6
  %396 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %369, i64 -6
  %397 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %396 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %395 to i64*
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %368, i64 -7
  %401 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %369, i64 -7
  %402 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %400 to i64*
  store i64 %403, i64* %404, align 8
  %405 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %368, i64 -8
  %406 = getelementptr inbounds %"class.v8::internal::compiler::LoadElimination::AbstractState"*, %"class.v8::internal::compiler::LoadElimination::AbstractState"** %369, i64 -8
  %407 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = bitcast %"class.v8::internal::compiler::LoadElimination::AbstractState"** %405 to i64*
  store i64 %408, i64* %409, align 8
  %410 = icmp eq %"class.v8::internal::compiler::LoadElimination::AbstractState"** %406, %238
  br i1 %410, label %411, label %367, !llvm.loop !127

411:                                              ; preds = %362, %367, %339
  %412 = phi %"class.v8::internal::compiler::LoadElimination::AbstractState"** [ %265, %339 ], [ %363, %362 ], [ %405, %367 ]
  %413 = ptrtoint %"class.v8::internal::compiler::LoadElimination::AbstractState"** %412 to i64
  br label %414

414:                                              ; preds = %234, %411
  %415 = phi i64 [ %413, %411 ], [ %179, %234 ]
  store i64 %415, i64* %140, align 8
  store i64 %236, i64* %9, align 8
  store i64 %235, i64* %6, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.1288"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %5 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.1368", align 16
  %7 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, i64 1
  store %"class.v8::internal::compiler::Node"*** %21, %"class.v8::internal::compiler::Node"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.1290"* %15, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Node"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.1288"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  %44 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to %"class.v8::internal::compiler::Node"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1297", %"class.v8::internal::RecyclingZoneAllocator.1297"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !4

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #14
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::Node"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::Node"** %73, %"class.v8::internal::compiler::Node"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1290"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #14
  %76 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to %"class.v8::internal::compiler::Node"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1297", %"class.v8::internal::RecyclingZoneAllocator.1297"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !4

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #14
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::Node"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::Node"** %105, %"class.v8::internal::compiler::Node"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.1290"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #14
  %106 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #14
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::Node"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, i64 1
  store %"class.v8::internal::compiler::Node"*** %111, %"class.v8::internal::compiler::Node"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.1290"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #14
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.1368"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #14
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"*** null, %"class.v8::internal::compiler::Node"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to %"class.v8::internal::compiler::Node"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !4

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #14
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::Node"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"*** %150, %"class.v8::internal::compiler::Node"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %116
  store %"class.v8::internal::compiler::Node"*** %155, %"class.v8::internal::compiler::Node"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.1288", %"class.std::__1::deque.1288"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to %"class.v8::internal::compiler::Node"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1297", %"class.v8::internal::RecyclingZoneAllocator.1297"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !4

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #14
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::Node"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::Node"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #14
  store %"class.v8::internal::compiler::Node"** %185, %"class.v8::internal::compiler::Node"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1368"* nonnull %6, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #14
  %187 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::Node"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::Node"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::Node"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.1368"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::Node"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.1368"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.1288"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::Node"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::Node"***
  %210 = icmp eq %"class.v8::internal::compiler::Node"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::Node"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::Node"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 %217
  store %"class.v8::internal::compiler::Node"*** %218, %"class.v8::internal::compiler::Node"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::Node"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %211, %"class.v8::internal::compiler::Node"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #14
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::Node"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1368"* nonnull %6, %"class.v8::internal::compiler::Node"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::Node"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.1290"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #14
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1290"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !4

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #14
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !128

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1290"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #14
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1290"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !4

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #14
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !129

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.1290"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1290"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to %"class.v8::internal::compiler::Node"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.1290", %"struct.std::__1::__split_buffer.1290"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !4

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #14
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  %76 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::Node"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::Node"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !130

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::Node"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %173, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, i64 -1
  store %"class.v8::internal::compiler::Node"*** %201, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1368"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::Node"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #14
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %22
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1368"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to %"class.v8::internal::compiler::Node"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !4

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #14
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::Node"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::Node"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::Node"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !131

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::Node"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::Node"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %170, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1368"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1368"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1368", %"struct.std::__1::__split_buffer.1368"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to %"class.v8::internal::compiler::Node"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !4

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #14
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::Node"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::Node"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::Node"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !132

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::Node"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::Node"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::Node"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::Node"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %171, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::Node"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %198, i64 -1
  store %"class.v8::internal::compiler::Node"*** %199, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJNS_4pairIS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISO_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJNS_4pairIS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISO_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJRKNS_4pairIKS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISR_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJRKNS_4pairIKS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISR_EEEEEEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJRKNS_4pairIKS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISR_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJRKNS_4pairIKS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISR_EEEEEEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISU_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISU_EEEEEEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_IST_EEEEEEDpOT_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_IST_EEEEEEDpOT_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJNS_4pairIS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJNS_4pairIS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_"}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.isvectorized", i32 1}
!39 = distinct !{!39, !40}
!40 = !{!"llvm.loop.unroll.disable"}
!41 = distinct !{!41, !38}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !38}
!48 = distinct !{!48, !40}
!49 = distinct !{!49, !38}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !38}
!56 = distinct !{!56, !40}
!57 = distinct !{!57, !38}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !38}
!64 = distinct !{!64, !40}
!65 = distinct !{!65, !38}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !38}
!72 = distinct !{!72, !40}
!73 = distinct !{!73, !38}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !38}
!80 = distinct !{!80, !40}
!81 = distinct !{!81, !38}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !38}
!88 = distinct !{!88, !40}
!89 = distinct !{!89, !38}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !38}
!96 = distinct !{!96, !40}
!97 = distinct !{!97, !38}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__16__treeIPN2v88internal8compiler4NodeENS_4lessIS5_EENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!104 = distinct !{!104, !40}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJRKNS_4pairIKS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISR_EEEEEEDpOT_: argument 0"}
!107 = distinct !{!107, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS3_13ZoneHandleSetINS3_3MapEEEEENS_19__map_value_compareIS6_SA_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJRKNS_4pairIKS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISR_EEEEEEDpOT_"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_: argument 0"}
!110 = distinct !{!110, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler4NodeENS4_15LoadElimination9FieldInfoEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_"}
!111 = distinct !{!111, !40}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !38}
!118 = distinct !{!118, !38}
!119 = distinct !{!119, !40}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !38}
!126 = distinct !{!126, !40}
!127 = distinct !{!127, !38}
!128 = distinct !{!128, !40}
!129 = distinct !{!129, !40}
!130 = distinct !{!130, !40}
!131 = distinct !{!131, !40}
!132 = distinct !{!132, !40}
