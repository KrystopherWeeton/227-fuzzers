; ModuleID = '../../third_party/blink/renderer/platform/graphics/parkable_image_manager.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/parkable_image_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::NoDestructor" = type { [128 x i8] }
%"class.blink::ParkableImageManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.WTF::Mutex", %"class.WTF::HashSet", %"class.WTF::HashSet", i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.std::__1::unique_ptr.8" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::ParkableImage"**, i32, i32, i32, [4 x i8] }>
%"class.blink::ParkableImage" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.WTF::Mutex", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", i64, i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::RWBuffer"* }
%"class.blink::RWBuffer" = type { %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferBlock"*, i64 }
%"struct.blink::RWBuffer::BufferHead" = type opaque
%"struct.blink::RWBuffer::BufferBlock" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::DiskDataAllocator"* }
%"class.blink::DiskDataAllocator" = type <{ %"class.blink::mojom::blink::DiskAllocator", %"class.mojo::Receiver", %"class.base::File", %"class.WTF::Mutex", %"class.std::__1::map.179", i64, i64, i8, [7 x i8] }>
%"class.blink::mojom::blink::DiskAllocator" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::DiskAllocatorStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.128", %"class.base::WeakPtrFactory.178" }
%class.scoped_refptr = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.12, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.91", %"class.absl::optional.96", %"class.absl::optional.53", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.119", i8, [7 x i8], %class.scoped_refptr.12, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.11" }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.30", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.12, %"class.std::__1::unique_ptr.38", %"class.absl::optional", %"struct.std::__1::atomic.49", i8, i8, i8, i8, i32, i32, %"class.absl::optional.53", %"class.std::__1::unique_ptr.58", i8, i64, %class.scoped_refptr.87, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.90" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.37", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.12, i8, %"class.mojo::ScopedHandleBase.41", %class.scoped_refptr.42, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.43" }
%"class.mojo::ScopedHandleBase.41" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.42 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.43" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.48", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.48" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i8 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.61", i8, i64, %class.scoped_refptr.62, %class.scoped_refptr.83 }
%"class.base::RepeatingCallback.61" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.62 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.72", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::map.72" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%class.scoped_refptr.83 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.87 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.193", [4 x i8], %"class.base::RepeatingCallback.131", %class.scoped_refptr.12, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.194", [4 x i8] }>
%"class.base::RefCountedThreadSafe.193" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.131" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.89 }
%class.scoped_refptr.89 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.90" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.91" = type { %"class.absl::optional_internal::optional_data.92" }
%"class.absl::optional_internal::optional_data.92" = type { %"class.absl::optional_internal::optional_data_base.93" }
%"class.absl::optional_internal::optional_data_base.93" = type { %"class.absl::optional_internal::optional_data_dtor_base.94" }
%"class.absl::optional_internal::optional_data_dtor_base.94" = type { i8, %union.anon.95 }
%union.anon.95 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, [7 x i8], %union.anon.100 }
%union.anon.100 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.105 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.105 = type { %"class.std::__1::map.107" }
%"class.std::__1::map.107" = type { %"class.std::__1::__tree.108" }
%"class.std::__1::__tree.108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.118"*, i64 }
%"class.std::__1::unique_ptr.118" = type opaque
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%class.scoped_refptr.12 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13" }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.131", %"class.base::OnceCallback.132", %"class.absl::optional.133", %"class.absl::optional.138", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.145", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.153", %"class.std::__1::map.164", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.173", i8, %class.scoped_refptr.12, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.174" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.132" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { %"class.base::TimeDelta" }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.12, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.143" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.143" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.144 }
%class.scoped_refptr.144 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.148", %class.scoped_refptr.149 }
%"class.base::RepeatingCallback.148" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.149 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.11", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.153" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.164" = type { %"class.std::__1::__tree.165" }
%"class.std::__1::__tree.165" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.base::OnceCallback.173" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.174" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.178" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::DiskAllocatorStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::DiskAllocator"* }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.std::__1::map.179" = type { %"class.std::__1::__tree.180" }
%"class.std::__1::__tree.180" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map.199", %"class.std::__1::map.210", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.221" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map.199" = type { %"class.std::__1::__tree.200" }
%"class.std::__1::__tree.200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.210" = type { %"class.std::__1::__tree.211" }
%"class.std::__1::__tree.211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.224", %"class.std::__1::vector" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.224" = type { %"class.absl::optional_internal::optional_data.225" }
%"class.absl::optional_internal::optional_data.225" = type { %"class.absl::optional_internal::optional_data_base.226" }
%"class.absl::optional_internal::optional_data_base.226" = type { %"class.absl::optional_internal::optional_data_dtor_base.227" }
%"class.absl::optional_internal::optional_data_dtor_base.227" = type { i8, %union.anon.228 }
%union.anon.228 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.229" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"struct.blink::ParkableImageManager::Statistics" = type { i64, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.238*, i32, i32 }
%class.scoped_refptr.238 = type { %"class.blink::ParkableImage"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink20ParkableImageManagerD2Ev = comdat any

$_ZN5blink20ParkableImageManagerD0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20ParkableImageManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink20ParkableImageManagerEKFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20ParkableImageManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink20ParkableImageManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink13ParkableImageEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink13ParkableImageEEEEmm = comdat any

@.str = private unnamed_addr constant [21 x i8] c"ParkableImagesToDisk\00", align 1
@_ZN5blink21kParkableImagesToDiskE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i32 0 }, align 8
@.str.1 = private unnamed_addr constant [16 x i8] c"parkable_images\00", align 1
@_ZN5blink20ParkableImageManager18kAllocatorDumpNameE = hidden local_unnamed_addr constant i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), align 8
@_ZN5blink20ParkableImageManager23kDelayedParkingIntervalE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 2000000 }, align 8
@_ZZN5blink20ParkableImageManager8InstanceEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN5blink20ParkableImageManager8InstanceEvE8instance = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"total_size\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"unparked_size\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"on_disk_size\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.7 = private unnamed_addr constant [77 x i8] c"../../third_party/blink/renderer/platform/graphics/parkable_image_manager.cc\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"Memory.ParkableImage.TotalSize.5min\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"Memory.ParkableImage.OnDiskSize.5min\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"Memory.ParkableImage.UnparkedSize.5min\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"Memory.ParkableImage.DiskIsUsable.5min\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"Memory.ParkableImage.TotalWriteTime.5min\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"Memory.ParkableImage.TotalReadTime.5min\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"it != from->end()\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"!to->Contains(image)\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"ScheduleDelayedParkingTaskIfNeeded\00", align 1
@_ZTVN5blink20ParkableImageManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ParkableImageManager"*)* @_ZN5blink20ParkableImageManagerD2Ev to i8*), i8* bitcast (void (%"class.blink::ParkableImageManager"*)* @_ZN5blink20ParkableImageManagerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ParkableImageManager"*, %"struct.base::trace_event::MemoryDumpArgs"*, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZN5blink20ParkableImageManager12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE to i8*)] }, align 8
@.str.18 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13ParkableImageEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ParkableImage *]\00", align 1
@.str.20 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.25 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink13ParkableImageEEEEPKcv = private unnamed_addr constant [83 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::ParkableImage>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(128) %"class.blink::ParkableImageManager"* @_ZN5blink20ParkableImageManager8InstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink20ParkableImageManager8InstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink20ParkableImageManager8InstanceEvE8instance) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance, i64 0, i32 0, i64 8), i8 0, i64 120, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink20ParkableImageManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance to i32 (...)***), align 8
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance, i64 0, i32 0, i64 8) to %"class.WTF::MutexBase"*), i1 zeroext false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance, i64 0, i32 0, i64 48), i8 0, i64 20, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance, i64 0, i32 0, i64 72), i8 0, i64 20, i1 false) #8
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance, i64 0, i32 0, i64 96), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance, i64 0, i32 0, i64 97), align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance, i64 0, i32 0, i64 104), i8 0, i64 24, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink20ParkableImageManager8InstanceEvE8instance) #8
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.blink::ParkableImageManager"* bitcast (%"class.base::NoDestructor"* @_ZZN5blink20ParkableImageManager8InstanceEvE8instance to %"class.blink::ParkableImageManager"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20ParkableImageManager12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE(%"class.blink::ParkableImageManager"*, %"struct.base::trace_event::MemoryDumpArgs"* nocapture readnone dereferenceable(16), %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.blink::ParkableImageManager::Statistics", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 15, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15, i1 false) #8
  %9 = getelementptr inbounds i8, i8* %6, i64 15
  store i8 0, i8* %9, align 1
  %10 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %11 = load i8, i8* %8, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #9
  br label %16

16:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %17 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %17) #8
  %18 = bitcast %"struct.blink::ParkableImageManager::Statistics"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %5, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %5, i64 0, i32 2
  %22 = bitcast %"struct.blink::ParkableImageManager::Statistics"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink20ParkableImageManager17ComputeStatisticsEv(%"struct.blink::ParkableImageManager::Statistics"* nonnull sret %5, %"class.blink::ParkableImageManager"* %0)
  %23 = load i64, i64* %21, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %23) #8
  %24 = load i64, i64* %19, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %24) #8
  %25 = load i64, i64* %20, align 8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %25) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %17) #8
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20ParkableImageManager17ComputeStatisticsEv(%"struct.blink::ParkableImageManager::Statistics"* noalias nocapture sret, %"class.blink::ParkableImageManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %0, i64 0, i32 2
  %6 = bitcast %"struct.blink::ParkableImageManager::Statistics"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  %7 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %1, i64 0, i32 2, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %1, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"class.blink::ParkableImage"** [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"class.blink::ParkableImage"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %19, i64 1
  %24 = icmp eq %"class.blink::ParkableImage"** %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"class.blink::ParkableImage"** [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"class.blink::ParkableImage"** %26, %15
  br i1 %27, label %28, label %51

28:                                               ; preds = %22, %51, %66, %63, %2, %25
  %29 = phi i64 [ 0, %25 ], [ 0, %2 ], [ %56, %63 ], [ %56, %66 ], [ %56, %51 ], [ 0, %22 ]
  %30 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %1, i64 0, i32 3, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %1, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %1, i64 0, i32 3, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %34, i64 %37
  br i1 %32, label %68, label %39

39:                                               ; preds = %28
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %39, %45
  %42 = phi %"class.blink::ParkableImage"** [ %46, %45 ], [ %34, %39 ]
  %43 = bitcast %"class.blink::ParkableImage"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  switch i64 %44, label %48 [
    i64 -1, label %45
    i64 0, label %45
  ]

45:                                               ; preds = %41, %41
  %46 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %42, i64 1
  %47 = icmp eq %"class.blink::ParkableImage"** %46, %38
  br i1 %47, label %68, label %41

48:                                               ; preds = %41, %39
  %49 = phi %"class.blink::ParkableImage"** [ %34, %39 ], [ %42, %41 ]
  %50 = icmp eq %"class.blink::ParkableImage"** %49, %38
  br i1 %50, label %68, label %71

51:                                               ; preds = %25, %66
  %52 = phi i64 [ %56, %66 ], [ 0, %25 ]
  %53 = phi %"class.blink::ParkableImage"** [ %60, %66 ], [ %26, %25 ]
  %54 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %53, align 8
  %55 = tail call i64 @_ZNK5blink13ParkableImage4sizeEv(%"class.blink::ParkableImage"* %54) #8
  %56 = add i64 %52, %55
  store i64 %56, i64* %3, align 8
  %57 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %53, i64 1
  %58 = icmp eq %"class.blink::ParkableImage"** %57, %15
  br i1 %58, label %28, label %59

59:                                               ; preds = %51, %63
  %60 = phi %"class.blink::ParkableImage"** [ %64, %63 ], [ %57, %51 ]
  %61 = bitcast %"class.blink::ParkableImage"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  switch i64 %62, label %66 [
    i64 -1, label %63
    i64 0, label %63
  ]

63:                                               ; preds = %59, %59
  %64 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %60, i64 1
  %65 = icmp eq %"class.blink::ParkableImage"** %64, %15
  br i1 %65, label %28, label %59

66:                                               ; preds = %59
  %67 = icmp eq %"class.blink::ParkableImage"** %60, %15
  br i1 %67, label %28, label %51

68:                                               ; preds = %45, %71, %86, %83, %28, %48
  %69 = phi i64 [ 0, %48 ], [ 0, %28 ], [ %76, %83 ], [ %76, %86 ], [ %76, %71 ], [ 0, %45 ]
  %70 = add i64 %29, %69
  store i64 %70, i64* %5, align 8
  ret void

71:                                               ; preds = %48, %86
  %72 = phi i64 [ %76, %86 ], [ 0, %48 ]
  %73 = phi %"class.blink::ParkableImage"** [ %80, %86 ], [ %49, %48 ]
  %74 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %73, align 8
  %75 = tail call i64 @_ZNK5blink13ParkableImage4sizeEv(%"class.blink::ParkableImage"* %74) #8
  %76 = add i64 %72, %75
  store i64 %76, i64* %4, align 8
  %77 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %73, i64 1
  %78 = icmp eq %"class.blink::ParkableImage"** %77, %38
  br i1 %78, label %68, label %79

79:                                               ; preds = %71, %83
  %80 = phi %"class.blink::ParkableImage"** [ %84, %83 ], [ %77, %71 ]
  %81 = bitcast %"class.blink::ParkableImage"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  switch i64 %82, label %86 [
    i64 -1, label %83
    i64 0, label %83
  ]

83:                                               ; preds = %79, %79
  %84 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %80, i64 1
  %85 = icmp eq %"class.blink::ParkableImage"** %84, %38
  br i1 %85, label %68, label %79

86:                                               ; preds = %79
  %87 = icmp eq %"class.blink::ParkableImage"** %80, %38
  br i1 %87, label %68, label %71
}

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #3

declare i64 @_ZNK5blink13ParkableImage4sizeEv(%"class.blink::ParkableImage"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20ParkableImageManager4SizeEv(%"class.blink::ParkableImageManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #8
  %3 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, %4
  %8 = zext i32 %7 to i64
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #8
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZNK5blink20ParkableImageManager14data_allocatorEv(%"class.blink::ParkableImageManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %2, align 8
  %4 = icmp eq %"class.blink::DiskDataAllocator"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.blink::DiskDataAllocator"* [ %6, %5 ], [ %3, %1 ]
  ret %"class.blink::DiskDataAllocator"* %8
}

declare dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ParkableImageManager15ResetForTestingEv(%"class.blink::ParkableImageManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #8
  %3 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 4
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 5
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %6, align 8
  %8 = icmp eq %"class.blink::ParkableImage"** %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast %"class.blink::ParkableImage"** %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #8
  %12 = bitcast %"class.WTF::HashSet"* %5 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  store i32 0, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %13, align 4
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %16, align 8
  %18 = icmp eq %"class.blink::ParkableImage"** %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3, i32 0, i32 1
  %21 = bitcast %"class.blink::ParkableImage"** %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #8
  %22 = bitcast %"class.WTF::HashSet"* %15 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  store i32 0, i32* %20, align 8
  %23 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3, i32 0, i32 2
  store i32 0, i32* %23, align 4
  br label %24

24:                                               ; preds = %14, %19
  %25 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %26 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %25, align 8
  store %"class.blink::DiskDataAllocator"* null, %"class.blink::DiskDataAllocator"** %25, align 8
  %27 = icmp eq %"class.blink::DiskDataAllocator"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::DiskDataAllocator"* %26 to void (%"class.blink::DiskDataAllocator"*)***
  %30 = load void (%"class.blink::DiskDataAllocator"*)**, void (%"class.blink::DiskDataAllocator"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %30, i64 1
  %32 = load void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %31, align 8
  tail call void %32(%"class.blink::DiskDataAllocator"* nonnull %26) #8
  br label %33

33:                                               ; preds = %24, %28
  %34 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 6, i32 0
  %35 = bitcast i64* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ParkableImageManager3AddEPNS_13ParkableImageE(%"class.blink::ParkableImageManager"*, %"class.blink::ParkableImage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ParkableImage"*, align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  store %"class.blink::ParkableImage"* %1, %"class.blink::ParkableImage"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #8
  tail call void @_ZN5blink20ParkableImageManager34ScheduleDelayedParkingTaskIfNeededEv(%"class.blink::ParkableImageManager"* %0)
  %7 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 1, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %41

10:                                               ; preds = %2
  %11 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #8
  %12 = bitcast %"class.blink::Thread"* %11 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %13 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %13, i64 3
  %15 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %14, align 8
  %16 = tail call %"class.base::SingleThreadTaskRunner"* %15(%"class.blink::Thread"* %11) #8
  %17 = bitcast %"class.base::SingleThreadTaskRunner"* %16 to %"class.base::TaskRunner"*
  %18 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.7, i64 0, i64 0), i32 103) #8
  %19 = ptrtoint %"class.blink::ParkableImageManager"* %0 to i64
  %20 = call i8* @_Znwm(i64 56) #9, !noalias !4
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20ParkableImageManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20ParkableImageManagerEKFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !4
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ParkableImageManager"*)* @_ZNK5blink20ParkableImageManager29RecordStatisticsAfter5MinutesEv to i64), i64 0>, <2 x i64>* %23, align 8, !noalias !4
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 8, !noalias !4
  %26 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %20, i8** %26, align 8, !alias.scope !4
  %27 = bitcast %"class.base::SingleThreadTaskRunner"* %16 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %28 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %27, align 8
  %29 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %28, align 8
  %30 = call zeroext i1 %29(%"class.base::TaskRunner"* %17, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5, i64 300000000) #8
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #8
  store i8 1, i8* %7, align 1
  %32 = icmp eq %"class.base::SingleThreadTaskRunner"* %16, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %10
  %34 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %16, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %34, i64 -2
  %40 = bitcast %"class.base::RefCountedThreadSafe.13"* %39 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %40) #8
  br label %41

41:                                               ; preds = %38, %33, %10, %2
  %42 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0
  %43 = call { %"class.blink::ParkableImage"**, i8 } @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %42, %"class.blink::ParkableImage"** nonnull dereferenceable(8) %3, %"class.blink::ParkableImage"** nonnull dereferenceable(8) %3) #8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ParkableImageManager34ScheduleDelayedParkingTaskIfNeededEv(%"class.blink::ParkableImageManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink21kParkableImagesToDiskE) #8
  br i1 %4, label %5, label %40

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %40

9:                                                ; preds = %5
  %10 = tail call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #8
  %11 = bitcast %"class.blink::Thread"* %10 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %12 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %12, i64 3
  %14 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %13, align 8
  %15 = tail call %"class.base::SingleThreadTaskRunner"* %14(%"class.blink::Thread"* %10) #8
  %16 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to %"class.base::TaskRunner"*
  %17 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.7, i64 0, i64 0), i32 193) #8
  %18 = ptrtoint %"class.blink::ParkableImageManager"* %0 to i64
  %19 = call i8* @_Znwm(i64 56) #9, !noalias !9
  %20 = bitcast i8* %19 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %20, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20ParkableImageManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20ParkableImageManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !9
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ParkableImageManager"*)* @_ZN5blink20ParkableImageManager15MaybeParkImagesEv to i64), i64 0>, <2 x i64>* %22, align 8, !noalias !9
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = bitcast i8* %23 to i64*
  store i64 %18, i64* %24, align 8, !noalias !9
  %25 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %19, i8** %25, align 8, !alias.scope !9
  %26 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %27 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %26, align 8
  %28 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %27, align 8
  %29 = call zeroext i1 %28(%"class.base::TaskRunner"* %16, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3, i64 2000000) #8
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  store i8 1, i8* %6, align 8
  %31 = icmp eq %"class.base::SingleThreadTaskRunner"* %15, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %9
  %33 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %15, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe.13"* %38 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %39) #8
  br label %40

40:                                               ; preds = %37, %32, %9, %5, %1
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20ParkableImageManager29RecordStatisticsAfter5MinutesEv(%"class.blink::ParkableImageManager"*) #0 align 2 {
  %2 = alloca %"struct.blink::ParkableImageManager::Statistics", align 8
  %3 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #8
  %4 = bitcast %"struct.blink::ParkableImageManager::Statistics"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %2, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %2, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::ParkableImageManager::Statistics", %"struct.blink::ParkableImageManager::Statistics"* %2, i64 0, i32 2
  %8 = bitcast %"struct.blink::ParkableImageManager::Statistics"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink20ParkableImageManager17ComputeStatisticsEv(%"struct.blink::ParkableImageManager::Statistics"* nonnull sret %2, %"class.blink::ParkableImageManager"* %0)
  %9 = load i64, i64* %7, align 8
  %10 = lshr i64 %9, 10
  %11 = trunc i64 %10 to i32
  tail call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i32 %11) #8
  %12 = load i64, i64* %6, align 8
  %13 = lshr i64 %12, 10
  %14 = trunc i64 %13 to i32
  tail call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i32 %14) #8
  %15 = load i64, i64* %5, align 8
  %16 = lshr i64 %15, 10
  %17 = trunc i64 %16 to i32
  tail call void @_ZN4base24UmaHistogramCounts100000EPKci(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i32 %17) #8
  %18 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink21kParkableImagesToDiskE) #8
  br i1 %18, label %19, label %40

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %21 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %20, align 8
  %22 = icmp eq %"class.blink::DiskDataAllocator"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = tail call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #8
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::DiskDataAllocator"* [ %24, %23 ], [ %21, %19 ]
  %27 = tail call zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"* %26) #8
  tail call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0), i1 zeroext %27) #8
  %28 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %20, align 8
  %29 = icmp eq %"class.blink::DiskDataAllocator"* %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = tail call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #8
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi %"class.blink::DiskDataAllocator"* [ %31, %30 ], [ %28, %25 ]
  %34 = tail call zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"* %33) #8
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 7, i32 0
  %37 = load i64, i64* %36, align 8
  tail call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i64 %37) #8
  %38 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 6, i32 0
  %39 = load i64, i64* %38, align 8
  tail call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0), i64 %39) #8
  br label %40

40:                                               ; preds = %32, %35, %1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN4base24UmaHistogramCounts100000EPKci(i8*, i32) local_unnamed_addr #3

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"*) local_unnamed_addr #3

declare void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ParkableImageManager6RemoveEPNS_13ParkableImageE(%"class.blink::ParkableImageManager"*, %"class.blink::ParkableImage"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::ParkableImage"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %4) #8
  %5 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::RWBuffer"*, %"class.blink::RWBuffer"** %5, align 8
  %7 = icmp eq %"class.blink::RWBuffer"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2
  br label %17

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %11, align 8
  %13 = icmp eq %"class.blink::DiskDataMetadata"* %12, null
  %14 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2
  %16 = select i1 %13, %"class.WTF::HashSet"* %15, %"class.WTF::HashSet"* %14
  br label %17

17:                                               ; preds = %10, %8
  %18 = phi %"class.WTF::HashSet"* [ %9, %8 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %18, i64 0, i32 0, i32 0
  %21 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %20, align 8
  %22 = icmp eq %"class.blink::ParkableImage"** %21, null
  %23 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %18, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  br i1 %22, label %86, label %25

25:                                               ; preds = %17
  %26 = add i32 %24, -1
  %27 = zext i32 %26 to i64
  %28 = shl i64 %3, 32
  %29 = xor i64 %28, -1
  %30 = add i64 %29, %3
  %31 = lshr i64 %30, 22
  %32 = xor i64 %31, %30
  %33 = shl i64 %32, 13
  %34 = xor i64 %33, -1
  %35 = add i64 %32, %34
  %36 = lshr i64 %35, 8
  %37 = xor i64 %36, %35
  %38 = mul i64 %37, 9
  %39 = lshr i64 %38, 15
  %40 = xor i64 %39, %38
  %41 = shl i64 %40, 27
  %42 = xor i64 %41, -1
  %43 = add i64 %40, %42
  %44 = lshr i64 %43, 31
  %45 = xor i64 %44, %43
  %46 = trunc i64 %45 to i32
  %47 = and i32 %26, %46
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %21, i64 %48
  %50 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %49, align 8
  %51 = icmp eq %"class.blink::ParkableImage"* %50, %1
  br i1 %51, label %81, label %52

52:                                               ; preds = %25
  %53 = xor i32 %46, -1
  %54 = lshr i32 %46, 23
  %55 = add i32 %54, %53
  %56 = shl i32 %55, 12
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 7
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 2
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 20
  %63 = xor i32 %62, %61
  %64 = or i32 %63, 1
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %71, %52
  %67 = phi %"class.blink::ParkableImage"* [ %50, %52 ], [ %77, %71 ]
  %68 = phi i64 [ %48, %52 ], [ %75, %71 ]
  %69 = phi i64 [ 0, %52 ], [ %73, %71 ]
  %70 = icmp eq %"class.blink::ParkableImage"* %67, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %66
  %72 = icmp eq i64 %69, 0
  %73 = select i1 %72, i64 %65, i64 %69
  %74 = add i64 %73, %68
  %75 = and i64 %74, %27
  %76 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %21, i64 %75
  %77 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %76, align 8
  %78 = icmp eq %"class.blink::ParkableImage"* %77, %1
  br i1 %78, label %79, label %66

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %21, i64 %75
  br label %81

81:                                               ; preds = %79, %25
  %82 = phi %"class.blink::ParkableImage"** [ %49, %25 ], [ %80, %79 ]
  %83 = icmp eq %"class.blink::ParkableImage"** %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = zext i32 %24 to i64
  br label %89

86:                                               ; preds = %66, %81, %17
  %87 = zext i32 %24 to i64
  %88 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %21, i64 %87
  br label %89

89:                                               ; preds = %84, %86
  %90 = phi i64 [ %85, %84 ], [ %87, %86 ]
  %91 = phi %"class.blink::ParkableImage"** [ %82, %84 ], [ %88, %86 ]
  %92 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %21, i64 %90
  %93 = icmp eq %"class.blink::ParkableImage"** %92, %91
  br i1 %93, label %116, label %94

94:                                               ; preds = %89
  store %"class.blink::ParkableImage"* inttoptr (i64 -1 to %"class.blink::ParkableImage"*), %"class.blink::ParkableImage"** %91, align 8
  %95 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %18, i64 0, i32 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 1
  %98 = and i32 %97, 2147483647
  %99 = and i32 %96, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %95, align 8
  %101 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %18, i64 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = add i32 %102, -1
  store i32 %103, i32* %101, align 4
  %104 = mul i32 %103, 6
  %105 = load i32, i32* %23, align 8
  %106 = icmp ult i32 %104, %105
  %107 = icmp ugt i32 %105, 8
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %116

109:                                              ; preds = %94
  %110 = lshr i32 %105, 1
  %111 = zext i32 %110 to i64
  %112 = shl nuw nsw i64 %111, 3
  %113 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %112, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13ParkableImageEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %113, i8 0, i64 %112, i1 false) #8
  %114 = bitcast i8* %113 to %"class.blink::ParkableImage"**
  %115 = tail call %"class.blink::ParkableImage"** @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable"* %19, %"class.blink::ParkableImage"** %114, i32 %110, %"class.blink::ParkableImage"** null) #8
  br label %116

116:                                              ; preds = %89, %94, %109
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ParkableImageManager9MoveImageEPNS_13ParkableImageEPN3WTF7HashSetIS2_NS3_7PtrHashIS1_EENS3_10HashTraitsIS2_EENS3_18PartitionAllocatorEEESB_(%"class.blink::ParkableImageManager"* nocapture readnone, %"class.blink::ParkableImage"*, %"class.WTF::HashSet"*, %"class.WTF::HashSet"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ParkableImage"*, align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::ParkableImage"* %1, %"class.blink::ParkableImage"** %5, align 8
  %8 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %9, align 8
  %11 = icmp eq %"class.blink::ParkableImage"** %10, null
  %12 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = ptrtoint %"class.blink::ParkableImage"* %1 to i64
  br i1 %11, label %76, label %15

15:                                               ; preds = %4
  %16 = add i32 %13, -1
  %17 = zext i32 %16 to i64
  %18 = shl i64 %14, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %14, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %16, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %10, i64 %38
  %40 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %39, align 8
  %41 = icmp eq %"class.blink::ParkableImage"* %40, %1
  br i1 %41, label %71, label %42

42:                                               ; preds = %15
  %43 = xor i32 %36, -1
  %44 = lshr i32 %36, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %61, %42
  %57 = phi %"class.blink::ParkableImage"* [ %40, %42 ], [ %67, %61 ]
  %58 = phi i64 [ %38, %42 ], [ %65, %61 ]
  %59 = phi i64 [ 0, %42 ], [ %63, %61 ]
  %60 = icmp eq %"class.blink::ParkableImage"* %57, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %56
  %62 = icmp eq i64 %59, 0
  %63 = select i1 %62, i64 %55, i64 %59
  %64 = add i64 %63, %58
  %65 = and i64 %64, %17
  %66 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %10, i64 %65
  %67 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %66, align 8
  %68 = icmp eq %"class.blink::ParkableImage"* %67, %1
  br i1 %68, label %69, label %56

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %10, i64 %65
  br label %71

71:                                               ; preds = %69, %15
  %72 = phi %"class.blink::ParkableImage"** [ %39, %15 ], [ %70, %69 ]
  %73 = icmp eq %"class.blink::ParkableImage"** %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = zext i32 %13 to i64
  br label %79

76:                                               ; preds = %56, %71, %4
  %77 = zext i32 %13 to i64
  %78 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %10, i64 %77
  br label %79

79:                                               ; preds = %74, %76
  %80 = phi i64 [ %75, %74 ], [ %77, %76 ]
  %81 = phi %"class.blink::ParkableImage"** [ %72, %74 ], [ %78, %76 ]
  %82 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %10, i64 %80
  %83 = icmp eq %"class.blink::ParkableImage"** %81, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.7, i64 0, i64 0), i32 156, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)) #8
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #8
  br label %87

87:                                               ; preds = %79, %84
  %88 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %89 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %88, align 8
  %90 = icmp eq %"class.blink::ParkableImage"** %89, null
  br i1 %90, label %158, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = add i32 %93, -1
  %95 = zext i32 %94 to i64
  %96 = bitcast %"class.blink::ParkableImage"** %5 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = shl i64 %97, 32
  %99 = xor i64 %98, -1
  %100 = add i64 %97, %99
  %101 = lshr i64 %100, 22
  %102 = xor i64 %101, %100
  %103 = shl i64 %102, 13
  %104 = xor i64 %103, -1
  %105 = add i64 %102, %104
  %106 = lshr i64 %105, 8
  %107 = xor i64 %106, %105
  %108 = mul i64 %107, 9
  %109 = lshr i64 %108, 15
  %110 = xor i64 %109, %108
  %111 = shl i64 %110, 27
  %112 = xor i64 %111, -1
  %113 = add i64 %110, %112
  %114 = lshr i64 %113, 31
  %115 = xor i64 %114, %113
  %116 = trunc i64 %115 to i32
  %117 = and i32 %94, %116
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %89, i64 %118
  %120 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %119, align 8
  %121 = inttoptr i64 %97 to %"class.blink::ParkableImage"*
  %122 = icmp eq %"class.blink::ParkableImage"* %120, %121
  br i1 %122, label %152, label %123

123:                                              ; preds = %91
  %124 = xor i32 %116, -1
  %125 = lshr i32 %116, 23
  %126 = add i32 %125, %124
  %127 = shl i32 %126, 12
  %128 = xor i32 %127, %126
  %129 = lshr i32 %128, 7
  %130 = xor i32 %129, %128
  %131 = shl i32 %130, 2
  %132 = xor i32 %131, %130
  %133 = lshr i32 %132, 20
  %134 = xor i32 %133, %132
  %135 = or i32 %134, 1
  %136 = zext i32 %135 to i64
  br label %137

137:                                              ; preds = %142, %123
  %138 = phi %"class.blink::ParkableImage"* [ %120, %123 ], [ %148, %142 ]
  %139 = phi i64 [ %118, %123 ], [ %146, %142 ]
  %140 = phi i64 [ 0, %123 ], [ %144, %142 ]
  %141 = icmp eq %"class.blink::ParkableImage"* %138, null
  br i1 %141, label %158, label %142

142:                                              ; preds = %137
  %143 = icmp eq i64 %140, 0
  %144 = select i1 %143, i64 %136, i64 %140
  %145 = add i64 %144, %139
  %146 = and i64 %145, %95
  %147 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %89, i64 %146
  %148 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %147, align 8
  %149 = icmp eq %"class.blink::ParkableImage"* %148, %121
  br i1 %149, label %150, label %137

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %89, i64 %146
  br label %152

152:                                              ; preds = %150, %91
  %153 = phi %"class.blink::ParkableImage"** [ %119, %91 ], [ %151, %150 ]
  %154 = icmp eq %"class.blink::ParkableImage"** %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.7, i64 0, i64 0), i32 157, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0)) #8
  %157 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #8
  br label %158

158:                                              ; preds = %137, %152, %87, %155
  %159 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %9, align 8
  %160 = load i32, i32* %12, align 8
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %159, i64 %161
  %163 = icmp eq %"class.blink::ParkableImage"** %162, %81
  br i1 %163, label %186, label %164

164:                                              ; preds = %158
  store %"class.blink::ParkableImage"* inttoptr (i64 -1 to %"class.blink::ParkableImage"*), %"class.blink::ParkableImage"** %81, align 8
  %165 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 3
  %166 = load i32, i32* %165, align 8
  %167 = add i32 %166, 1
  %168 = and i32 %167, 2147483647
  %169 = and i32 %166, -2147483648
  %170 = or i32 %168, %169
  store i32 %170, i32* %165, align 8
  %171 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 2
  %172 = load i32, i32* %171, align 4
  %173 = add i32 %172, -1
  store i32 %173, i32* %171, align 4
  %174 = mul i32 %173, 6
  %175 = load i32, i32* %12, align 8
  %176 = icmp ult i32 %174, %175
  %177 = icmp ugt i32 %175, 8
  %178 = and i1 %176, %177
  br i1 %178, label %179, label %186

179:                                              ; preds = %164
  %180 = lshr i32 %175, 1
  %181 = zext i32 %180 to i64
  %182 = shl nuw nsw i64 %181, 3
  %183 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %182, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13ParkableImageEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %183, i8 0, i64 %182, i1 false) #8
  %184 = bitcast i8* %183 to %"class.blink::ParkableImage"**
  %185 = call %"class.blink::ParkableImage"** @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable"* %8, %"class.blink::ParkableImage"** %184, i32 %180, %"class.blink::ParkableImage"** null) #8
  br label %186

186:                                              ; preds = %158, %164, %179
  %187 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  %188 = call { %"class.blink::ParkableImage"**, i8 } @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %187, %"class.blink::ParkableImage"** nonnull dereferenceable(8) %5, %"class.blink::ParkableImage"** nonnull dereferenceable(8) %5) #8
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20ParkableImageManager12IsRegisteredEPNS_13ParkableImageE(%"class.blink::ParkableImageManager"*, %"class.blink::ParkableImage"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::ParkableImage"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %4) #8
  %5 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.blink::RWBuffer"*, %"class.blink::RWBuffer"** %5, align 8
  %7 = icmp eq %"class.blink::RWBuffer"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2
  br label %17

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %11, align 8
  %13 = icmp eq %"class.blink::DiskDataMetadata"* %12, null
  %14 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2
  %16 = select i1 %13, %"class.WTF::HashSet"* %15, %"class.WTF::HashSet"* %14
  br label %17

17:                                               ; preds = %10, %8
  %18 = phi %"class.WTF::HashSet"* [ %9, %8 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %19, align 8
  %21 = icmp eq %"class.blink::ParkableImage"** %20, null
  %22 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %18, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  br i1 %21, label %85, label %24

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  %26 = zext i32 %25 to i64
  %27 = shl i64 %3, 32
  %28 = xor i64 %27, -1
  %29 = add i64 %28, %3
  %30 = lshr i64 %29, 22
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 13
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 8
  %36 = xor i64 %35, %34
  %37 = mul i64 %36, 9
  %38 = lshr i64 %37, 15
  %39 = xor i64 %38, %37
  %40 = shl i64 %39, 27
  %41 = xor i64 %40, -1
  %42 = add i64 %39, %41
  %43 = lshr i64 %42, 31
  %44 = xor i64 %43, %42
  %45 = trunc i64 %44 to i32
  %46 = and i32 %25, %45
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %20, i64 %47
  %49 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %48, align 8
  %50 = icmp eq %"class.blink::ParkableImage"* %49, %1
  br i1 %50, label %80, label %51

51:                                               ; preds = %24
  %52 = xor i32 %45, -1
  %53 = lshr i32 %45, 23
  %54 = add i32 %53, %52
  %55 = shl i32 %54, 12
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 7
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 2
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 20
  %62 = xor i32 %61, %60
  %63 = or i32 %62, 1
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %70, %51
  %66 = phi %"class.blink::ParkableImage"* [ %49, %51 ], [ %76, %70 ]
  %67 = phi i64 [ %47, %51 ], [ %74, %70 ]
  %68 = phi i64 [ 0, %51 ], [ %72, %70 ]
  %69 = icmp eq %"class.blink::ParkableImage"* %66, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %65
  %71 = icmp eq i64 %68, 0
  %72 = select i1 %71, i64 %64, i64 %68
  %73 = add i64 %72, %67
  %74 = and i64 %73, %26
  %75 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %20, i64 %74
  %76 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %75, align 8
  %77 = icmp eq %"class.blink::ParkableImage"* %76, %1
  br i1 %77, label %78, label %65

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %20, i64 %74
  br label %80

80:                                               ; preds = %78, %24
  %81 = phi %"class.blink::ParkableImage"** [ %48, %24 ], [ %79, %78 ]
  %82 = icmp eq %"class.blink::ParkableImage"** %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = zext i32 %23 to i64
  br label %88

85:                                               ; preds = %65, %80, %17
  %86 = zext i32 %23 to i64
  %87 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %20, i64 %86
  br label %88

88:                                               ; preds = %83, %85
  %89 = phi i64 [ %84, %83 ], [ %86, %85 ]
  %90 = phi %"class.blink::ParkableImage"** [ %81, %83 ], [ %87, %85 ]
  %91 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %20, i64 %89
  %92 = icmp ne %"class.blink::ParkableImage"** %90, %91
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #8
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ParkableImageManager15OnWrittenToDiskEPNS_13ParkableImageE(%"class.blink::ParkableImageManager"*, %"class.blink::ParkableImage"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #8
  %4 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3
  tail call void @_ZN5blink20ParkableImageManager9MoveImageEPNS_13ParkableImageEPN3WTF7HashSetIS2_NS3_7PtrHashIS1_EENS3_10HashTraitsIS2_EENS3_18PartitionAllocatorEEESB_(%"class.blink::ParkableImageManager"* undef, %"class.blink::ParkableImage"* %1, %"class.WTF::HashSet"* %4, %"class.WTF::HashSet"* %5)
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ParkableImageManager14OnReadFromDiskEPNS_13ParkableImageE(%"class.blink::ParkableImageManager"*, %"class.blink::ParkableImage"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #8
  %4 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2
  tail call void @_ZN5blink20ParkableImageManager9MoveImageEPNS_13ParkableImageEPN3WTF7HashSetIS2_NS3_7PtrHashIS1_EENS3_10HashTraitsIS2_EENS3_18PartitionAllocatorEEESB_(%"class.blink::ParkableImageManager"* undef, %"class.blink::ParkableImage"* %1, %"class.WTF::HashSet"* %4, %"class.WTF::HashSet"* %5)
  tail call void @_ZN5blink20ParkableImageManager34ScheduleDelayedParkingTaskIfNeededEv(%"class.blink::ParkableImageManager"* %0)
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #8
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ParkableImageManager15MaybeParkImagesEv(%"class.blink::ParkableImageManager"*) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %class.scoped_refptr.238, align 8
  %6 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #8
  %7 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #8
  %11 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %15, i64 %18
  br i1 %13, label %37, label %20

20:                                               ; preds = %1
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"class.blink::ParkableImage"** [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"class.blink::ParkableImage"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %23, i64 1
  %28 = icmp eq %"class.blink::ParkableImage"** %27, %19
  br i1 %28, label %37, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"class.blink::ParkableImage"** [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"class.blink::ParkableImage"** %30, %19
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = bitcast %class.scoped_refptr.238* %5 to i8*
  %34 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %5, i64 0, i32 0
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  %36 = bitcast %class.scoped_refptr.238* %5 to i64*
  br label %47

37:                                               ; preds = %26, %78, %88, %85, %1, %29
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #8
  %38 = load %class.scoped_refptr.238*, %class.scoped_refptr.238** %8, align 8
  %39 = load i32, i32* %10, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %38, i64 %40
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #8
  %44 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 4
  store i8 0, i8* %44, align 8
  br label %122

45:                                               ; preds = %37
  %46 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %94

47:                                               ; preds = %32, %88
  %48 = phi %"class.blink::ParkableImage"** [ %30, %32 ], [ %82, %88 ]
  %49 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  store %"class.blink::ParkableImage"* %49, %"class.blink::ParkableImage"** %34, align 8
  %50 = icmp eq %"class.blink::ParkableImage"* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0)) #8
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  br label %57

57:                                               ; preds = %47, %51, %55
  %58 = load i32, i32* %10, align 4
  %59 = load i32, i32* %9, align 8
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %69, label %61, !prof !14

61:                                               ; preds = %57
  %62 = load %class.scoped_refptr.238*, %class.scoped_refptr.238** %8, align 8
  %63 = zext i32 %58 to i64
  %64 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %62, i64 %63
  %65 = load i64, i64* %36, align 8
  %66 = bitcast %class.scoped_refptr.238* %64 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.blink::ParkableImage"* null, %"class.blink::ParkableImage"** %34, align 8
  %67 = load i32, i32* %10, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %10, align 4
  br label %78

69:                                               ; preds = %57
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink13ParkableImageEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector"* nonnull %4, %class.scoped_refptr.238* nonnull dereferenceable(8) %5) #8
  %70 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %34, align 8
  %71 = icmp eq %"class.blink::ParkableImage"* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  call void @_ZN5blink13ParkableImageD1Ev(%"class.blink::ParkableImage"* nonnull %70) #8
  %77 = bitcast %"class.blink::ParkableImage"* %70 to i8*
  call void @free(i8* %77) #8
  br label %78

78:                                               ; preds = %61, %69, %72, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %79 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %48, i64 1
  %80 = icmp eq %"class.blink::ParkableImage"** %79, %19
  br i1 %80, label %37, label %81

81:                                               ; preds = %78, %85
  %82 = phi %"class.blink::ParkableImage"** [ %86, %85 ], [ %79, %78 ]
  %83 = bitcast %"class.blink::ParkableImage"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  switch i64 %84, label %88 [
    i64 -1, label %85
    i64 0, label %85
  ]

85:                                               ; preds = %81, %81
  %86 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %82, i64 1
  %87 = icmp eq %"class.blink::ParkableImage"** %86, %19
  br i1 %87, label %37, label %81

88:                                               ; preds = %81
  %89 = icmp eq %"class.blink::ParkableImage"** %82, %19
  br i1 %89, label %37, label %47

90:                                               ; preds = %118
  %91 = and i8 %110, 1
  %92 = icmp eq i8 %91, 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #8
  %93 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 4
  store i8 0, i8* %93, align 8
  br i1 %92, label %122, label %121

94:                                               ; preds = %45, %118
  %95 = phi %class.scoped_refptr.238* [ %38, %45 ], [ %119, %118 ]
  %96 = phi i8 [ 0, %45 ], [ %110, %118 ]
  %97 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %95, i64 0, i32 0
  %98 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %97, align 8
  %99 = icmp eq %"class.blink::ParkableImage"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 1 monotonic
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0)) #8
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %106

106:                                              ; preds = %94, %100, %104
  %107 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %98, i64 0, i32 6
  %108 = load i8, i8* %107, align 8, !range !3
  %109 = icmp eq i8 %108, 0
  %110 = select i1 %109, i8 1, i8 %96
  %111 = call zeroext i1 @_ZN5blink13ParkableImage9MaybeParkEv(%"class.blink::ParkableImage"* %98) #8
  br i1 %99, label %118, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw sub i32* %113, i32 1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %112
  call void @_ZN5blink13ParkableImageD1Ev(%"class.blink::ParkableImage"* nonnull %98) #8
  %117 = bitcast %"class.blink::ParkableImage"* %98 to i8*
  call void @free(i8* %117) #8
  br label %118

118:                                              ; preds = %106, %112, %116
  %119 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %95, i64 1
  %120 = icmp eq %class.scoped_refptr.238* %119, %41
  br i1 %120, label %90, label %94

121:                                              ; preds = %90
  call void @_ZN5blink20ParkableImageManager34ScheduleDelayedParkingTaskIfNeededEv(%"class.blink::ParkableImageManager"* %0)
  br label %122

122:                                              ; preds = %43, %90, %121
  %123 = load %class.scoped_refptr.238*, %class.scoped_refptr.238** %8, align 8
  %124 = icmp eq %class.scoped_refptr.238* %123, null
  br i1 %124, label %151, label %125, !prof !15

125:                                              ; preds = %122
  %126 = bitcast %class.scoped_refptr.238* %123 to i8*
  %127 = load i32, i32* %10, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %149, label %129, !prof !14

129:                                              ; preds = %125
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %123, i64 %130
  br label %132

132:                                              ; preds = %143, %129
  %133 = phi %class.scoped_refptr.238* [ %144, %143 ], [ %123, %129 ]
  %134 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %133, i64 0, i32 0
  %135 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %134, align 8
  %136 = icmp eq %"class.blink::ParkableImage"* %135, null
  br i1 %136, label %143, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::ParkableImage", %"class.blink::ParkableImage"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw sub i32* %138, i32 1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  call void @_ZN5blink13ParkableImageD1Ev(%"class.blink::ParkableImage"* nonnull %135) #8
  %142 = bitcast %"class.blink::ParkableImage"* %135 to i8*
  call void @free(i8* %142) #8
  br label %143

143:                                              ; preds = %141, %137, %132
  %144 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %133, i64 1
  %145 = icmp eq %class.scoped_refptr.238* %144, %131
  br i1 %145, label %146, label %132

146:                                              ; preds = %143
  store i32 0, i32* %10, align 4
  %147 = bitcast %"class.WTF::Vector"* %4 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %125
  %150 = phi i8* [ %148, %146 ], [ %126, %125 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #8
  store %class.scoped_refptr.238* null, %class.scoped_refptr.238** %8, align 8
  br label %151

151:                                              ; preds = %122, %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #8
  ret void
}

declare zeroext i1 @_ZN5blink13ParkableImage9MaybeParkEv(%"class.blink::ParkableImage"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ParkableImageManagerD2Ev(%"class.blink::ParkableImageManager"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink20ParkableImageManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %3, align 8
  store %"class.blink::DiskDataAllocator"* null, %"class.blink::DiskDataAllocator"** %3, align 8
  %5 = icmp eq %"class.blink::DiskDataAllocator"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::DiskDataAllocator"* %4 to void (%"class.blink::DiskDataAllocator"*)***
  %8 = load void (%"class.blink::DiskDataAllocator"*)**, void (%"class.blink::DiskDataAllocator"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %8, i64 1
  %10 = load void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %9, align 8
  tail call void %10(%"class.blink::DiskDataAllocator"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %12, align 8
  %14 = icmp eq %"class.blink::ParkableImage"** %13, null
  br i1 %14, label %17, label %15, !prof !15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::ParkableImage"** %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #8
  store %"class.blink::ParkableImage"** null, %"class.blink::ParkableImage"*** %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %18, align 8
  %20 = icmp eq %"class.blink::ParkableImage"** %19, null
  br i1 %20, label %23, label %21, !prof !15

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::ParkableImage"** %19 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #8
  store %"class.blink::ParkableImage"** null, %"class.blink::ParkableImage"*** %18, align 8
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %24) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ParkableImageManagerD0Ev(%"class.blink::ParkableImageManager"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink20ParkableImageManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %3, align 8
  store %"class.blink::DiskDataAllocator"* null, %"class.blink::DiskDataAllocator"** %3, align 8
  %5 = icmp eq %"class.blink::DiskDataAllocator"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::DiskDataAllocator"* %4 to void (%"class.blink::DiskDataAllocator"*)***
  %8 = load void (%"class.blink::DiskDataAllocator"*)**, void (%"class.blink::DiskDataAllocator"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %8, i64 1
  %10 = load void (%"class.blink::DiskDataAllocator"*)*, void (%"class.blink::DiskDataAllocator"*)** %9, align 8
  tail call void %10(%"class.blink::DiskDataAllocator"* nonnull %4) #8
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %12, align 8
  %14 = icmp eq %"class.blink::ParkableImage"** %13, null
  br i1 %14, label %17, label %15, !prof !15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::ParkableImage"** %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #8
  store %"class.blink::ParkableImage"** null, %"class.blink::ParkableImage"*** %12, align 8
  br label %17

17:                                               ; preds = %15, %11
  %18 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %18, align 8
  %20 = icmp eq %"class.blink::ParkableImage"** %19, null
  br i1 %20, label %23, label %21, !prof !15

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::ParkableImage"** %19 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #8
  store %"class.blink::ParkableImage"** null, %"class.blink::ParkableImage"*** %18, align 8
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %"class.blink::ParkableImageManager", %"class.blink::ParkableImageManager"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %24) #8
  %25 = bitcast %"class.blink::ParkableImageManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #9
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20ParkableImageManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::ParkableImageManager"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ParkableImageManager"*)**
  %21 = load void (%"class.blink::ParkableImageManager"*)*, void (%"class.blink::ParkableImageManager"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::ParkableImageManager"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ParkableImageManager"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ParkableImageManager"* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink20ParkableImageManagerEKFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::ParkableImage"**, i8 } @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_RS3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::ParkableImage"** dereferenceable(8), %"class.blink::ParkableImage"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %4, align 8
  %6 = icmp eq %"class.blink::ParkableImage"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::ParkableImage"** @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"* %0, %"class.blink::ParkableImage"** null)
  %9 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::ParkableImage"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ParkableImage"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %11, i64 %38
  %40 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %39, align 8
  %41 = icmp eq %"class.blink::ParkableImage"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::ParkableImage"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::ParkableImage"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::ParkableImage"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::ParkableImage"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::ParkableImage"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::ParkableImage"* %58, inttoptr (i64 -1 to %"class.blink::ParkableImage"*)
  %66 = select i1 %65, %"class.blink::ParkableImage"** %59, %"class.blink::ParkableImage"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %11, i64 %70
  %72 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %71, align 8
  %73 = icmp eq %"class.blink::ParkableImage"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::ParkableImage"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::ParkableImage"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::ParkableImage"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::ParkableImage"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::ParkableImage"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::ParkableImage"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::ParkableImage"** @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"* %0, %"class.blink::ParkableImage"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::ParkableImage"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::ParkableImage"**, i8 } undef, %"class.blink::ParkableImage"** %105, 0
  %107 = insertvalue { %"class.blink::ParkableImage"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::ParkableImage"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ParkableImage"** @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"*, %"class.blink::ParkableImage"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13ParkableImageEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"class.blink::ParkableImage"**
  %37 = call %"class.blink::ParkableImage"** @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable"* %0, %"class.blink::ParkableImage"** %36, i32 %32, %"class.blink::ParkableImage"** %1) #8
  ret %"class.blink::ParkableImage"** %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ParkableImage"** @_ZN3WTF9HashTableIPN5blink13ParkableImageES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable"*, %"class.blink::ParkableImage"**, i32, %"class.blink::ParkableImage"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::ParkableImage"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %9, align 8
  %17 = ptrtoint %"class.blink::ParkableImage"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::ParkableImage"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #8
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::ParkableImage"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::ParkableImage"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::ParkableImage"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %34, i64 %37
  %39 = bitcast %"class.blink::ParkableImage"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %1, i64 %62
  %64 = ptrtoint %"class.blink::ParkableImage"** %63 to i64
  %65 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %63, align 8
  %66 = icmp eq %"class.blink::ParkableImage"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::ParkableImage"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::ParkableImage"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::ParkableImage"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::ParkableImage"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::ParkableImage"** %87, null
  %89 = ptrtoint %"class.blink::ParkableImage"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::ParkableImage"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::ParkableImage"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::ParkableImage"* %93, inttoptr (i64 -1 to %"class.blink::ParkableImage"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %1, i64 %104
  %106 = ptrtoint %"class.blink::ParkableImage"** %105 to i64
  %107 = load %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %105, align 8
  %108 = icmp eq %"class.blink::ParkableImage"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::ParkableImage"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::ParkableImage"**, %"class.blink::ParkableImage"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::ParkableImage"*, %"class.blink::ParkableImage"** %113, i64 %37
  %115 = icmp eq %"class.blink::ParkableImage"** %114, %3
  %116 = select i1 %115, %"class.blink::ParkableImage"** %111, %"class.blink::ParkableImage"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::ParkableImage"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::ParkableImage"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::ParkableImage"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20ParkableImageManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::ParkableImageManager"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ParkableImageManager"*)**
  %21 = load void (%"class.blink::ParkableImageManager"*)*, void (%"class.blink::ParkableImageManager"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::ParkableImageManager"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ParkableImageManager"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ParkableImageManager"* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink20ParkableImageManagerEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13ParkableImageD1Ev(%"class.blink::ParkableImage"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink13ParkableImageEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector"*, %class.scoped_refptr.238* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.238*, %class.scoped_refptr.238** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.238* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.238* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !15

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr.238* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink13ParkableImageEEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink13ParkableImageEEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %class.scoped_refptr.238*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %class.scoped_refptr.238*, %class.scoped_refptr.238** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %class.scoped_refptr.238* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %class.scoped_refptr.238* %38 to i8*
  br i1 %41, label %43, label %49, !prof !15

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %class.scoped_refptr.238*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %class.scoped_refptr.238* %1 to i64
  %56 = ptrtoint %class.scoped_refptr.238* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !15

69:                                               ; preds = %54
  %70 = icmp eq %class.scoped_refptr.238* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink13ParkableImageEEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink13ParkableImageEEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %class.scoped_refptr.238*, %class.scoped_refptr.238** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %class.scoped_refptr.238* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %class.scoped_refptr.238* %78 to i8*
  br i1 %81, label %83, label %89, !prof !15

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %class.scoped_refptr.238*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %class.scoped_refptr.238* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %class.scoped_refptr.238* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %class.scoped_refptr.238* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %100, i64 %103
  %105 = getelementptr inbounds %class.scoped_refptr.238, %class.scoped_refptr.238* %101, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr.238* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr.238* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.blink::ParkableImage"* null, %"class.blink::ParkableImage"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink13ParkableImageEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.25, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20ParkableImageManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20ParkableImageManagerEKFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIMN5blink20ParkableImageManagerEKFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIMN5blink20ParkableImageManagerEKFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20ParkableImageManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20ParkableImageManagerEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN5blink20ParkableImageManagerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN5blink20ParkableImageManagerEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!14 = !{!"branch_weights", i32 1, i32 2000}
!15 = !{!"branch_weights", i32 2000, i32 1}
