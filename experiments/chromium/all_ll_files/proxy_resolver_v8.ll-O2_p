; ModuleID = '../../services/proxy_resolver/proxy_resolver_v8.cc'
source_filename = "../../services/proxy_resolver/proxy_resolver_v8.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [56 x i8] }
%"struct.std::nothrow_t" = type { i8 }
%"class.proxy_resolver::ProxyResolverV8" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.proxy_resolver::ProxyResolverV8::Context"* }
%"class.proxy_resolver::ProxyResolverV8::Context" = type { %"class.base::Lock", %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.v8::Isolate"*, %"class.v8::Persistent", %"class.v8::Persistent.0" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.proxy_resolver::ProxyResolverV8::JSBindings" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::External"* }
%"class.v8::External" = type { i8 }
%"class.v8::Persistent.0" = type { %"class.v8::PersistentBase.1" }
%"class.v8::PersistentBase.1" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.6" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%"class.net::ProxyInfo" = type { %"class.net::ProxyList", %"class.std::__1::map", %"struct.net::MutableNetworkTrafficAnnotationTag", i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyList" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.12" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.net::ProxyServer"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Locker" = type { i8, i8, %"class.v8::internal::Isolate"* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Isolate::SafeForTerminationScope" = type <{ %"class.v8::internal::Isolate"*, i8, [7 x i8] }>
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::Local.65" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.std::__1::basic_string.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.29 }
%union.anon.29 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Function" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::Message" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.30 }
%struct.anon.30 = type { %"struct.std::__1::__padding.31", i8 }
%"struct.std::__1::__padding.31" = type { [1 x i8] }
%class.scoped_refptr = type { %"class.net::PacFileData"* }
%"class.net::PacFileData" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %class.GURL, %"class.std::__1::basic_string.26" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.proxy_resolver::ProxyResolverV8"* }
%"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory" = type <{ %"class.base::Lock", %"class.std::__1::unique_ptr.41", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.gin::IsolateHolder"* }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.44", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", i32, i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.gin::ArrayBufferAllocator" = type { %"class.v8::ArrayBuffer::Allocator" }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%class.scoped_refptr.70 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.71" }>
%"class.base::RefCountedThreadSafe.71" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::CFunction" = type opaque
%"class.v8::Template" = type { i8 }
%"class.v8::Name" = type { i8 }
%"class.v8::Data" = type { i8 }
%"class.v8::ExtensionConfiguration" = type { i32, i8** }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::HeapStatistics" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i8, i64, i64, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral" = type { %"class.v8::String::ExternalOneByteStringResource", i8*, i64 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::BasicStringPiece.80" = type { i8*, i64 }
%"struct.std::__1::__less.92" = type { i8 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"class.std::__1::__compressed_pair.83" }
%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry" = type <{ %"class.std::__1::basic_string", %"class.net::IPAddress", [7 x i8] }>
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__wrap_iter" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::ScriptCompiler::Source" = type { %"class.v8::Local.66", %"class.v8::Local.65", i32, i32, %"class.v8::ScriptOriginOptions", %"class.v8::Local.65", %"class.v8::Local.100", %"struct.v8::ScriptCompiler::CachedData"* }
%"class.v8::Local.66" = type { %"class.v8::String"* }
%"class.v8::ScriptOriginOptions" = type { i32 }
%"class.v8::Local.100" = type { %"class.v8::PrimitiveArray"* }
%"class.v8::PrimitiveArray" = type { i8 }
%"struct.v8::ScriptCompiler::CachedData" = type <{ i8*, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::Script" = type { i8 }
%"class.url::RawCanonOutputT" = type { %"class.url::CanonOutputT", [256 x i16] }
%"class.url::CanonOutputT" = type { i32 (...)**, i16*, i32, i32 }
%"class.v8::Unlocker" = type { %"class.v8::internal::Isolate"* }
%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData" = type { %"class.v8::String::ExternalStringResource", %class.scoped_refptr }

$_ZN14proxy_resolver15ProxyResolverV87Context12ResolveProxyERK4GURLPN3net9ProxyInfoEPNS0_10JSBindingsE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context6InitV8ERK13scoped_refptrIN3net11PacFileDataEEPNS0_10JSBindingsE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context18GetFindProxyForURLEPN2v85LocalINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context11HandleErrorEN2v85LocalINS2_7MessageEEE = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_ = comdat any

$_ZNK2v86String26ExternalStringResourceBase11IsCacheableEv = comdat any

$_ZN2v86String26ExternalStringResourceBase7DisposeEv = comdat any

$_ZNK2v86String26ExternalStringResourceBase4LockEv = comdat any

$_ZNK2v86String26ExternalStringResourceBase6UnlockEv = comdat any

$_ZN2v86String26ExternalStringResourceBaseD2Ev = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context13AlertCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context19MyIpAddressCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context18DnsResolveCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context23IsPlainHostNameCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context20DnsResolveExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context21MyIpAddressExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context25SortIpAddressListCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context17IsInNetExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context9RunScriptEN2v85LocalINS2_6StringEEEPKc = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs = comdat any

$_ZN14proxy_resolver15ProxyResolverV87Context24DnsResolveCallbackHelperERKN2v820FunctionCallbackInfoINS2_5ValueEEEN3net24ProxyResolveDnsOperationE = comdat any

$_ZN3url15RawCanonOutputTIDsLi256EED2Ev = comdat any

$_ZN3url15RawCanonOutputTIDsLi256EED0Ev = comdat any

$_ZN3url15RawCanonOutputTIDsLi256EE6ResizeEi = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv = comdat any

$_ZN14proxy_resolver15ProxyResolverV87ContextD2Ev = comdat any

$_ZTVN3url15RawCanonOutputTIDsLi256EEE = comdat any

@_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [66 x i16] [i16 70, i16 105, i16 110, i16 100, i16 80, i16 114, i16 111, i16 120, i16 121, i16 70, i16 111, i16 114, i16 85, i16 82, i16 76, i16 40, i16 41, i16 32, i16 114, i16 101, i16 116, i16 117, i16 114, i16 110, i16 101, i16 100, i16 32, i16 97, i16 32, i16 110, i16 111, i16 110, i16 45, i16 65, i16 83, i16 67, i16 73, i16 73, i16 32, i16 115, i16 116, i16 114, i16 105, i16 110, i16 103, i16 32, i16 40, i16 99, i16 114, i16 98, i16 117, i16 103, i16 46, i16 99, i16 111, i16 109, i16 47, i16 52, i16 55, i16 50, i16 51, i16 52, i16 41, i16 58, i16 32, i16 0], align 2
@.str.2 = private unnamed_addr constant [16 x i8] c"FindProxyForURL\00", align 1
@_ZTVN14proxy_resolver12_GLOBAL__N_122V8ExternalASCIILiteralE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZN2v86String26ExternalStringResourceBaseD2Ev to i8*), i8* bitcast (void (%"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"*)* @_ZN14proxy_resolver12_GLOBAL__N_122V8ExternalASCIILiteralD0Ev to i8*), i8* bitcast (i1 (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase11IsCacheableEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZN2v86String26ExternalStringResourceBase7DisposeEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase4LockEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase6UnlockEv to i8*), i8* bitcast (i8* (%"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"*)* @_ZNK14proxy_resolver12_GLOBAL__N_122V8ExternalASCIILiteral4dataEv to i8*), i8* bitcast (i64 (%"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"*)* @_ZNK14proxy_resolver12_GLOBAL__N_122V8ExternalASCIILiteral6lengthEv to i8*)] }, align 8
@_ZZN14proxy_resolver12_GLOBAL__N_120SharedIsolateFactory16GetSharedIsolateEvE16kOptimizeForSize = internal constant [20 x i8] c"--optimize_for_size\00", align 16
@_ZZN14proxy_resolver12_GLOBAL__N_120SharedIsolateFactory16GetSharedIsolateEvE8kJitless = internal constant [10 x i8] c"--jitless\00", align 1
@_ZZN14proxy_resolver12_GLOBAL__N_120SharedIsolateFactory16GetSharedIsolateEvE13kNoExposeWasm = internal constant [17 x i8] c"--no-expose-wasm\00", align 16
@.str.6 = private unnamed_addr constant [6 x i8] c"alert\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"myIpAddress\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"dnsResolve\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"isPlainHostName\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"dnsResolveEx\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"myIpAddressEx\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"sortIpAddressList\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"isInNetEx\00", align 1
@.str.14 = private unnamed_addr constant [6542 x i8] c"function dnsDomainIs(host, domain) {\0A    return (host.length >= domain.length &&\0A            host.substring(host.length - domain.length) == domain);\0A}\0Afunction dnsDomainLevels(host) {\0A    return host.split('.').length - 1;\0A}\0Afunction isValidIpAddress(ipchars) {\0A    var matches = /^(\5Cd{1,3})\5C.(\5Cd{1,3})\5C.(\5Cd{1,3})\5C.(\5Cd{1,3})$/.exec(ipchars);\0A    if (matches == null) {\0A        return false;\0A    } else if (matches[1] > 255 || matches[2] > 255 || \0A               matches[3] > 255 || matches[4] > 255) {\0A        return false;\0A    }\0A    return true;\0A}\0Afunction convert_addr(ipchars) {\0A    var bytes = ipchars.split('.');\0A    var result = ((bytes[0] & 0xff) << 24) |\0A                 ((bytes[1] & 0xff) << 16) |\0A                 ((bytes[2] & 0xff) <<  8) |\0A                  (bytes[3] & 0xff);\0A    return result;\0A}\0Afunction isInNet(ipaddr, pattern, maskstr) {\0A    if (!isValidIpAddress(pattern) || !isValidIpAddress(maskstr)) {\0A        return false;\0A    }\0A    if (!isValidIpAddress(ipaddr)) {\0A        ipaddr = dnsResolve(ipaddr);\0A        if (ipaddr == null) {\0A            return false;\0A        }\0A    }\0A    var host = convert_addr(ipaddr);\0A    var pat  = convert_addr(pattern);\0A    var mask = convert_addr(maskstr);\0A    return ((host & mask) == (pat & mask));\0A    \0A}\0Afunction isResolvable(host) {\0A    var ip = dnsResolve(host);\0A    return (ip != null);\0A}\0Afunction localHostOrDomainIs(host, hostdom) {\0A    return (host == hostdom) ||\0A           (hostdom.lastIndexOf(host + '.', 0) == 0);\0A}\0Afunction shExpMatch(url, pattern) {\0A   pattern = pattern.replace(/\5C./g, '\5C\5C.');\0A   pattern = pattern.replace(/\5C*/g, '.*');\0A   pattern = pattern.replace(/\5C?/g, '.');\0A   var newRe = new RegExp('^'+pattern+'$');\0A   return newRe.test(url);\0A}\0Avar wdays = {SUN: 0, MON: 1, TUE: 2, WED: 3, THU: 4, FRI: 5, SAT: 6};\0Avar months = {JAN: 0, FEB: 1, MAR: 2, APR: 3, MAY: 4, JUN: 5, JUL: 6, AUG: 7, SEP: 8, OCT: 9, NOV: 10, DEC: 11};\0Afunction weekdayRange() {\0A    function getDay(weekday) {\0A        if (weekday in wdays) {\0A            return wdays[weekday];\0A        }\0A        return -1;\0A    }\0A    var date = new Date();\0A    var argc = arguments.length;\0A    var wday;\0A    if (argc < 1)\0A        return false;\0A    if (arguments[argc - 1] == 'GMT') {\0A        argc--;\0A        wday = date.getUTCDay();\0A    } else {\0A        wday = date.getDay();\0A    }\0A    var wd1 = getDay(arguments[0]);\0A    var wd2 = (argc == 2) ? getDay(arguments[1]) : wd1;\0A    return (wd1 == -1 || wd2 == -1) ? false\0A                                    : (wd1 <= wd2) ? (wd1 <= wday && wday <= wd2)\0A                                                   : (wd2 >= wday || wday >= wd1);\0A}\0Afunction dateRange() {\0A    function getMonth(name) {\0A        if (name in months) {\0A            return months[name];\0A        }\0A        return -1;\0A    }\0A    var date = new Date();\0A    var argc = arguments.length;\0A    if (argc < 1) {\0A        return false;\0A    }\0A    var isGMT = (arguments[argc - 1] == 'GMT');\0A\0A    if (isGMT) {\0A        argc--;\0A    }\0A    // function will work even without explict handling of this case\0A    if (argc == 1) {\0A        var tmp = parseInt(arguments[0]);\0A        if (isNaN(tmp)) {\0A            return ((isGMT ? date.getUTCMonth() : date.getMonth()) ==\0A                     getMonth(arguments[0]));\0A        } else if (tmp < 32) {\0A            return ((isGMT ? date.getUTCDate() : date.getDate()) == tmp);\0A        } else { \0A            return ((isGMT ? date.getUTCFullYear() : date.getFullYear()) ==\0A                     tmp);\0A        }\0A    }\0A    var year = date.getFullYear();\0A    var date1, date2;\0A    date1 = new Date(year,  0,  1,  0,  0,  0);\0A    date2 = new Date(year, 11, 31, 23, 59, 59);\0A    var adjustMonth = false;\0A    for (var i = 0; i < (argc >> 1); i++) {\0A        var tmp = parseInt(arguments[i]);\0A        if (isNaN(tmp)) {\0A            var mon = getMonth(arguments[i]);\0A            date1.setMonth(mon);\0A        } else if (tmp < 32) {\0A            adjustMonth = (argc <= 2);\0A            date1.setDate(tmp);\0A        } else {\0A            date1.setFullYear(tmp);\0A        }\0A    }\0A    for (var i = (argc >> 1); i < argc; i++) {\0A        var tmp = parseInt(arguments[i]);\0A        if (isNaN(tmp)) {\0A            var mon = getMonth(arguments[i]);\0A            date2.setMonth(mon);\0A        } else if (tmp < 32) {\0A            date2.setDate(tmp);\0A        } else {\0A            date2.setFullYear(tmp);\0A        }\0A    }\0A    if (adjustMonth) {\0A        date1.setMonth(date.getMonth());\0A        date2.setMonth(date.getMonth());\0A    }\0A    if (isGMT) {\0A    var tmp = date;\0A        tmp.setFullYear(date.getUTCFullYear());\0A        tmp.setMonth(date.getUTCMonth());\0A        tmp.setDate(date.getUTCDate());\0A        tmp.setHours(date.getUTCHours());\0A        tmp.setMinutes(date.getUTCMinutes());\0A        tmp.setSeconds(date.getUTCSeconds());\0A        date = tmp;\0A    }\0A    return (date1 <= date2) ? (date1 <= date) && (date <= date2)\0A                            : (date2 >= date) || (date >= date1);\0A}\0Afunction timeRange() {\0A    var argc = arguments.length;\0A    var date = new Date();\0A    var isGMT= false;\0A    if (argc < 1) {\0A        return false;\0A    }\0A    if (arguments[argc - 1] == 'GMT') {\0A        isGMT = true;\0A        argc--;\0A    }\0A\0A    var hour = isGMT ? date.getUTCHours() : date.getHours();\0A    var date1, date2;\0A    date1 = new Date();\0A    date2 = new Date();\0A\0A    if (argc == 1) {\0A        return (hour == arguments[0]);\0A    } else if (argc == 2) {\0A        return ((arguments[0] <= hour) && (hour <= arguments[1]));\0A    } else {\0A        switch (argc) {\0A        case 6:\0A            date1.setSeconds(arguments[2]);\0A            date2.setSeconds(arguments[5]);\0A        case 4:\0A            var middle = argc >> 1;\0A            date1.setHours(arguments[0]);\0A            date1.setMinutes(arguments[1]);\0A            date2.setHours(arguments[middle]);\0A            date2.setMinutes(arguments[middle + 1]);\0A            if (middle == 2) {\0A                date2.setSeconds(59);\0A            }\0A            break;\0A        default:\0A          throw 'timeRange: bad number of arguments'\0A        }\0A    }\0A\0A    if (isGMT) {\0A        date.setFullYear(date.getUTCFullYear());\0A        date.setMonth(date.getUTCMonth());\0A        date.setDate(date.getUTCDate());\0A        date.setHours(date.getUTCHours());\0A        date.setMinutes(date.getUTCMinutes());\0A        date.setSeconds(date.getUTCSeconds());\0A    }\0A    return (date1 <= date2) ? (date1 <= date) && (date <= date2)\0A                            : (date2 >= date) || (date >= date1);\0A\0A}\0Afunction isResolvableEx(host) {\0A    var ipList = dnsResolveEx(host);\0A    return (ipList != '');\0A}\0A\00", align 1
@_ZN14proxy_resolver12_GLOBAL__N_123kPacUtilityResourceNameE = internal constant [28 x i8] c"proxy-pac-utility-script.js\00", align 16
@_ZN14proxy_resolver12_GLOBAL__N_116kPacResourceNameE = internal constant [20 x i8] c"proxy-pac-script.js\00", align 16
@.str.15 = private unnamed_addr constant [10 x i16] [i16 117, i16 110, i16 100, i16 101, i16 102, i16 105, i16 110, i16 101, i16 100, i16 0], align 2
@.str.16 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@_ZTVN3url15RawCanonOutputTIDsLi256EEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIDsLi256EED2Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIDsLi256EED0Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*, i32)* @_ZN3url15RawCanonOutputTIDsLi256EE6ResizeEi to i8*)] }, comdat, align 8
@.str.17 = private unnamed_addr constant [28 x i8] c"Requires 1 string parameter\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c";\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZTVN14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptDataE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"*)* @_ZN14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptDataD2Ev to i8*), i8* bitcast (void (%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"*)* @_ZN14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptDataD0Ev to i8*), i8* bitcast (i1 (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase11IsCacheableEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZN2v86String26ExternalStringResourceBase7DisposeEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase4LockEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase6UnlockEv to i8*), i8* bitcast (i16* (%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"*)* @_ZNK14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptData4dataEv to i8*), i8* bitcast (i64 (%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"*)* @_ZNK14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptData6lengthEv to i8*)] }, align 8

@_ZN14proxy_resolver15ProxyResolverV8C1ENSt3__110unique_ptrINS0_7ContextENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.proxy_resolver::ProxyResolverV8"*, %"class.proxy_resolver::ProxyResolverV8::Context"*), void (%"class.proxy_resolver::ProxyResolverV8"*, %"class.proxy_resolver::ProxyResolverV8::Context"*)* @_ZN14proxy_resolver15ProxyResolverV8C2ENSt3__110unique_ptrINS0_7ContextENS1_14default_deleteIS3_EEEE
@_ZN14proxy_resolver15ProxyResolverV8D1Ev = hidden unnamed_addr alias void (%"class.proxy_resolver::ProxyResolverV8"*), void (%"class.proxy_resolver::ProxyResolverV8"*)* @_ZN14proxy_resolver15ProxyResolverV8D2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14proxy_resolver15ProxyResolverV8C2ENSt3__110unique_ptrINS0_7ContextENS1_14default_deleteIS3_EEEE(%"class.proxy_resolver::ProxyResolverV8"* nocapture, %"class.proxy_resolver::ProxyResolverV8::Context"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.proxy_resolver::ProxyResolverV8::Context"* %1 to i64
  %4 = bitcast %"class.proxy_resolver::ProxyResolverV8"* %0 to i64*
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14proxy_resolver15ProxyResolverV8D2Ev(%"class.proxy_resolver::ProxyResolverV8"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8", %"class.proxy_resolver::ProxyResolverV8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.proxy_resolver::ProxyResolverV8::Context"*, %"class.proxy_resolver::ProxyResolverV8::Context"** %2, align 8
  store %"class.proxy_resolver::ProxyResolverV8::Context"* null, %"class.proxy_resolver::ProxyResolverV8::Context"** %2, align 8
  %4 = icmp eq %"class.proxy_resolver::ProxyResolverV8::Context"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN14proxy_resolver15ProxyResolverV87ContextD2Ev(%"class.proxy_resolver::ProxyResolverV8::Context"* nonnull %3) #14
  %6 = bitcast %"class.proxy_resolver::ProxyResolverV8::Context"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14proxy_resolver15ProxyResolverV814GetProxyForURLERK4GURLPN3net9ProxyInfoEPNS0_10JSBindingsE(%"class.proxy_resolver::ProxyResolverV8"* nocapture readonly, %class.GURL* dereferenceable(120), %"class.net::ProxyInfo"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8", %"class.proxy_resolver::ProxyResolverV8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.proxy_resolver::ProxyResolverV8::Context"*, %"class.proxy_resolver::ProxyResolverV8::Context"** %5, align 8
  %7 = tail call i32 @_ZN14proxy_resolver15ProxyResolverV87Context12ResolveProxyERK4GURLPN3net9ProxyInfoEPNS0_10JSBindingsE(%"class.proxy_resolver::ProxyResolverV8::Context"* %6, %class.GURL* dereferenceable(120) %1, %"class.net::ProxyInfo"* %2, %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %3)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN14proxy_resolver15ProxyResolverV87Context12ResolveProxyERK4GURLPN3net9ProxyInfoEPNS0_10JSBindingsE(%"class.proxy_resolver::ProxyResolverV8::Context"*, %class.GURL* dereferenceable(120), %"class.net::ProxyInfo"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::Locker", align 8
  %6 = alloca %"class.v8::Isolate::SafeForTerminationScope", align 8
  %7 = alloca %"class.v8::HandleScope", align 8
  %8 = alloca %"class.v8::Local.65", align 8
  %9 = alloca [2 x %"class.v8::Local.65"], align 16
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.v8::TryCatch", align 8
  %12 = alloca %"class.std::__1::basic_string.26", align 8
  %13 = alloca %"class.std::__1::basic_string.26", align 8
  %14 = alloca %"class.std::__1::basic_string.26", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = ptrtoint %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %3 to i64
  %17 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 1
  %18 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %16, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::Locker", %"class.v8::Locker"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 2
  %22 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  call void @_ZN2v86Locker10InitializeEPNS_7IsolateE(%"class.v8::Locker"* nonnull %5, %"class.v8::Isolate"* %22) #14
  %23 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  call void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"* %23) #14
  %24 = bitcast %"class.v8::Isolate::SafeForTerminationScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #14
  %25 = bitcast %"class.v8::Isolate::SafeForTerminationScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %26 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  call void @_ZN2v87Isolate23SafeForTerminationScopeC1EPS0_(%"class.v8::Isolate::SafeForTerminationScope"* nonnull %6, %"class.v8::Isolate"* %26) #14
  %27 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #14
  %28 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %7, %"class.v8::Isolate"* %29) #14
  %30 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 4, i32 0, i32 0
  %31 = load %"class.v8::Context"*, %"class.v8::Context"** %30, align 8
  %32 = icmp eq %"class.v8::Context"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %4
  %34 = bitcast %"class.v8::Isolate"** %21 to %"class.v8::internal::Isolate"**
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = bitcast %"class.v8::Context"* %31 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %35, i64 %37) #14
  %39 = bitcast i64* %38 to %"class.v8::Context"*
  br label %40

40:                                               ; preds = %4, %33
  %41 = phi %"class.v8::Context"* [ %39, %33 ], [ null, %4 ]
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %41) #14
  %42 = bitcast %"class.v8::Local.65"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  %43 = getelementptr inbounds %"class.v8::Local.65", %"class.v8::Local.65"* %8, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %43, align 8
  %44 = call i32 @_ZN14proxy_resolver15ProxyResolverV87Context18GetFindProxyForURLEPN2v85LocalINS2_5ValueEEE(%"class.proxy_resolver::ProxyResolverV8::Context"* %0, %"class.v8::Local.65"* nonnull %8)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %229

46:                                               ; preds = %40
  %47 = bitcast [2 x %"class.v8::Local.65"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #14
  %48 = getelementptr inbounds [2 x %"class.v8::Local.65"], [2 x %"class.v8::Local.65"]* %9, i64 0, i64 0
  %49 = bitcast [2 x %"class.v8::Local.65"]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 16, i1 false)
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %51 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #14
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %61 = zext i8 %54 to i64
  %62 = select i1 %55, i8* %57, i8* %60
  %63 = select i1 %55, i64 %59, i64 %61
  %64 = trunc i64 %63 to i32
  %65 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %50, i8* %62, i32 0, i32 %64) #14
  %66 = icmp eq %"class.v8::String"* %65, null
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %46
  call void @_ZN2v82V812ToLocalEmptyEv() #14
  br label %68

68:                                               ; preds = %46, %67
  %69 = bitcast [2 x %"class.v8::Local.65"]* %9 to %"class.v8::String"**
  store %"class.v8::String"* %65, %"class.v8::String"** %69, align 16
  %70 = getelementptr inbounds [2 x %"class.v8::Local.65"], [2 x %"class.v8::Local.65"]* %9, i64 0, i64 1
  %71 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %72 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #14
  call void @_ZNK4GURL14HostNoBracketsEv(%"class.std::__1::basic_string"* nonnull sret %10, %class.GURL* %1) #14
  %73 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %75 to i64
  %82 = select i1 %76, i8* %78, i8* %72
  %83 = select i1 %76, i64 %80, i64 %81
  %84 = trunc i64 %83 to i32
  %85 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %71, i8* %82, i32 0, i32 %84) #14
  %86 = icmp eq %"class.v8::String"* %85, null
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %68
  call void @_ZN2v82V812ToLocalEmptyEv() #14
  br label %88

88:                                               ; preds = %68, %87
  %89 = bitcast %"class.v8::Local.65"* %70 to %"class.v8::String"**
  store %"class.v8::String"* %85, %"class.v8::String"** %89, align 8
  %90 = load i8, i8* %74, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %93) #15
  br label %94

94:                                               ; preds = %88, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #14
  %95 = bitcast %"class.v8::TryCatch"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %95) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 48, i1 false)
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %11, %"class.v8::Isolate"* %96) #14
  %97 = bitcast %"class.v8::Local.65"* %8 to %"class.v8::Function"**
  %98 = load %"class.v8::Function"*, %"class.v8::Function"** %97, align 8
  %99 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %41) #14
  %100 = bitcast %"class.v8::Object"* %99 to %"class.v8::Value"*
  %101 = call %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"* %98, %"class.v8::Context"* %41, %"class.v8::Value"* %100, i32 2, %"class.v8::Local.65"* nonnull %48) #14
  %102 = icmp eq %"class.v8::Value"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %94
  %104 = call %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"* nonnull %11) #14
  call void @_ZN14proxy_resolver15ProxyResolverV87Context11HandleErrorEN2v85LocalINS2_7MessageEEE(%"class.proxy_resolver::ProxyResolverV8::Context"* %0, %"class.v8::Message"* %104)
  br label %227

105:                                              ; preds = %94
  %106 = bitcast %"class.v8::Value"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %121

110:                                              ; preds = %105
  %111 = add i64 %107, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %107, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp ult i16 %119, 64
  br i1 %120, label %155, label %121

121:                                              ; preds = %110, %105
  %122 = load %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %17, align 8
  %123 = bitcast %"class.std::__1::basic_string.26"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #14
  %124 = call i8* @_Znwm(i64 96) #15
  %125 = bitcast %"class.std::__1::basic_string.26"* %12 to i8**
  store i8* %124, i8** %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %127, align 8
  %128 = bitcast %"class.std::__1::basic_string.26"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %129 = bitcast i8* %124 to <8 x i16>*
  store <8 x i16> <i16 70, i16 105, i16 110, i16 100, i16 80, i16 114, i16 111, i16 120>, <8 x i16>* %129, align 2
  %130 = getelementptr inbounds i8, i8* %124, i64 16
  %131 = bitcast i8* %130 to <8 x i16>*
  store <8 x i16> <i16 121, i16 70, i16 111, i16 114, i16 85, i16 82, i16 76, i16 40>, <8 x i16>* %131, align 2
  %132 = getelementptr inbounds i8, i8* %124, i64 32
  %133 = bitcast i8* %132 to <8 x i16>*
  store <8 x i16> <i16 41, i16 32, i16 100, i16 105, i16 100, i16 32, i16 110, i16 111>, <8 x i16>* %133, align 2
  %134 = getelementptr inbounds i8, i8* %124, i64 48
  %135 = bitcast i8* %134 to <8 x i16>*
  store <8 x i16> <i16 116, i16 32, i16 114, i16 101, i16 116, i16 117, i16 114, i16 110>, <8 x i16>* %135, align 2
  %136 = getelementptr inbounds i8, i8* %124, i64 64
  %137 = bitcast i8* %136 to <8 x i16>*
  store <8 x i16> <i16 32, i16 97, i16 32, i16 115, i16 116, i16 114, i16 105, i16 110>, <8 x i16>* %137, align 2
  %138 = getelementptr inbounds i8, i8* %124, i64 80
  %139 = bitcast i8* %138 to i16*
  store i16 103, i16* %139, align 2
  %140 = getelementptr inbounds i8, i8* %124, i64 82
  %141 = bitcast i8* %140 to i16*
  store i16 46, i16* %141, align 2
  %142 = getelementptr inbounds i8, i8* %124, i64 84
  %143 = bitcast i8* %142 to i16*
  store i16 0, i16* %143, align 2
  %144 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %122 to void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)***
  %145 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)**, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %145, i64 2
  %147 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %146, align 8
  call void %147(%"class.proxy_resolver::ProxyResolverV8::JSBindings"* %122, i32 -1, %"class.std::__1::basic_string.26"* nonnull dereferenceable(24) %12) #14
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %128, i64 0, i32 1, i32 1
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %121
  %152 = bitcast %"class.std::__1::basic_string.26"* %12 to i8**
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %121, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #14
  br label %227

155:                                              ; preds = %110
  %156 = bitcast %"class.std::__1::basic_string.26"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #14
  %157 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %159 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %160 = bitcast %"class.v8::Value"* %101 to %"class.v8::String"*
  %161 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %160) #14, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 0, i64 24, i1 false) #14, !alias.scope !3
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %155
  %164 = bitcast %"class.std::__1::basic_string.26"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %175

165:                                              ; preds = %155
  %166 = add nuw nsw i32 %161, 1
  %167 = sext i32 %166 to i64
  %168 = call i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.26"* nonnull %13, i64 %167) #14
  %169 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* nonnull %160, %"class.v8::Isolate"* %159, i16* %168, i32 0, i32 %161, i32 0) #14
  %170 = bitcast %"class.std::__1::basic_string.26"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %170, i64 0, i32 1, i32 1
  %172 = load i8, i8* %171, align 1
  %173 = load i16*, i16** %157, align 8
  %174 = load i64, i64* %158, align 8
  br label %175

175:                                              ; preds = %163, %165
  %176 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %164, %163 ], [ %170, %165 ]
  %177 = phi i64 [ 0, %163 ], [ %174, %165 ]
  %178 = phi i16* [ null, %163 ], [ %173, %165 ]
  %179 = phi i8 [ 0, %163 ], [ %172, %165 ]
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %176, i64 0, i32 1, i32 1
  %181 = icmp slt i8 %179, 0
  %182 = bitcast %"class.std::__1::basic_string.26"* %13 to i16*
  %183 = select i1 %181, i16* %178, i16* %182
  %184 = zext i8 %179 to i64
  %185 = select i1 %181, i64 %177, i64 %184
  %186 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16* %183, i64 %185) #14
  br i1 %186, label %202, label %187

187:                                              ; preds = %175
  %188 = bitcast %"class.std::__1::basic_string.26"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #14
  %189 = bitcast %"class.std::__1::basic_string.26"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.26"* nonnull sret %14, i16* getelementptr inbounds ([66 x i16], [66 x i16]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string.26"* nonnull dereferenceable(24) %13)
  %190 = load %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %17, align 8
  %191 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %190 to void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)***
  %192 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)**, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %192, i64 2
  %194 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %193, align 8
  call void %194(%"class.proxy_resolver::ProxyResolverV8::JSBindings"* %190, i32 -1, %"class.std::__1::basic_string.26"* nonnull dereferenceable(24) %14) #14
  %195 = bitcast %"class.std::__1::basic_string.26"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %195, i64 0, i32 1, i32 1
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %218

199:                                              ; preds = %187
  %200 = bitcast %"class.std::__1::basic_string.26"* %14 to i8**
  %201 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %201) #15
  br label %218

202:                                              ; preds = %175
  %203 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #14
  %204 = load i8, i8* %180, align 1
  %205 = icmp slt i8 %204, 0
  %206 = load i16*, i16** %157, align 8
  %207 = select i1 %205, i16* %206, i16* %182
  %208 = load i64, i64* %158, align 8
  %209 = zext i8 %204 to i64
  %210 = select i1 %205, i64 %208, i64 %209
  call void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %15, i16* %207, i64 %210) #14
  call void @_ZN3net9ProxyInfo12UsePacStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::ProxyInfo"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #14
  %211 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %202
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %217) #15
  br label %218

218:                                              ; preds = %215, %202, %199, %187
  %219 = phi i8* [ %188, %187 ], [ %188, %199 ], [ %203, %202 ], [ %203, %215 ]
  %220 = phi i32 [ -327, %187 ], [ -327, %199 ], [ 0, %202 ], [ 0, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #14
  %221 = load i8, i8* %180, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %218
  %224 = bitcast %"class.std::__1::basic_string.26"* %13 to i8**
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #15
  br label %226

226:                                              ; preds = %218, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #14
  br label %227

227:                                              ; preds = %226, %154, %103
  %228 = phi i32 [ -327, %103 ], [ %220, %226 ], [ -327, %154 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %95) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #14
  br label %229

229:                                              ; preds = %40, %227
  %230 = phi i32 [ %228, %227 ], [ %44, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #14
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %41) #14
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #14
  call void @_ZN2v87Isolate23SafeForTerminationScopeD1Ev(%"class.v8::Isolate::SafeForTerminationScope"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #14
  call void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"* %23) #14
  call void @_ZN2v86LockerD1Ev(%"class.v8::Locker"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  %231 = icmp eq %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %17, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  store i64 %19, i64* %18, align 8
  br label %233

233:                                              ; preds = %229, %232
  ret i32 %230
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14proxy_resolver15ProxyResolverV86CreateERK13scoped_refptrIN3net11PacFileDataEEPNS0_10JSBindingsEPNSt3__110unique_ptrIS0_NS9_14default_deleteIS0_EEEE(%class.scoped_refptr* dereferenceable(8), %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::unique_ptr.35"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %5 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %4, align 8
  %6 = tail call dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNK3net11PacFileData5utf16Ev(%"class.net::PacFileData"* %5) #14
  %7 = bitcast %"class.std::__1::basic_string.26"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %95, label %16

16:                                               ; preds = %3
  %17 = tail call i8* @_Znwm(i64 72) #15
  %18 = bitcast i8* %17 to %"class.proxy_resolver::ProxyResolverV8::Context"*
  %19 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0) acquire, align 8
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0)) #14
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #14
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 40) to i64*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 48), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE to i8*)) #14
  br label %26

24:                                               ; preds = %21
  %25 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0) acquire, align 8
  br label %26

26:                                               ; preds = %16, %23, %24
  %27 = phi i64 [ %19, %16 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to i64), %23 ], [ %25, %24 ]
  %28 = inttoptr i64 %27 to %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"*
  %29 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %29) #14
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32, !prof !6

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %28, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %33) #14
  br label %34

34:                                               ; preds = %32, %26
  %35 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %28, i64 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.gin::IsolateHolder"*, %"class.gin::IsolateHolder"** %36, align 8
  %38 = icmp eq %"class.gin::IsolateHolder"* %37, null
  br i1 %38, label %39, label %64

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %28, i64 0, i32 2
  %41 = load i8, i8* %40, align 8, !range !7
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  tail call void @_ZN3gin13V8Initializer14LoadV8SnapshotENS0_18V8SnapshotFileTypeE(i32 0) #14
  tail call void @_ZN2v82V818SetFlagsFromStringEPKcm(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZZN14proxy_resolver12_GLOBAL__N_120SharedIsolateFactory16GetSharedIsolateEvE16kOptimizeForSize, i64 0, i64 0), i64 19) #14
  tail call void @_ZN2v82V818SetFlagsFromStringEPKcm(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZZN14proxy_resolver12_GLOBAL__N_120SharedIsolateFactory16GetSharedIsolateEvE8kJitless, i64 0, i64 0), i64 9) #14
  tail call void @_ZN2v82V818SetFlagsFromStringEPKcm(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZZN14proxy_resolver12_GLOBAL__N_120SharedIsolateFactory16GetSharedIsolateEvE13kNoExposeWasm, i64 0, i64 0), i64 16) #14
  %44 = tail call %"class.gin::ArrayBufferAllocator"* @_ZN3gin20ArrayBufferAllocator14SharedInstanceEv() #14
  %45 = getelementptr inbounds %"class.gin::ArrayBufferAllocator", %"class.gin::ArrayBufferAllocator"* %44, i64 0, i32 0
  tail call void @_ZN3gin13IsolateHolder10InitializeENS0_10ScriptModeEPN2v811ArrayBuffer9AllocatorEPKl(i32 0, %"class.v8::ArrayBuffer::Allocator"* %45, i64* null) #14
  store i8 1, i8* %40, align 8
  br label %46

46:                                               ; preds = %43, %39
  %47 = tail call dereferenceable(8) %class.scoped_refptr.70* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #14
  %48 = tail call i8* @_Znwm(i64 40) #15
  %49 = bitcast i8* %48 to %"class.gin::IsolateHolder"*
  %50 = getelementptr inbounds %class.scoped_refptr.70, %class.scoped_refptr.70* %47, i64 0, i32 0
  %51 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %50, align 8
  %52 = icmp eq %"class.base::SingleThreadTaskRunner"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic
  br label %56

56:                                               ; preds = %53, %46
  tail call void @_ZN3gin13IsolateHolderC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_10AccessModeENS0_11IsolateTypeE(%"class.gin::IsolateHolder"* nonnull %49, %"class.base::SingleThreadTaskRunner"* %51, i32 1, i32 3) #14
  %57 = ptrtoint i8* %48 to i64
  %58 = load %"class.gin::IsolateHolder"*, %"class.gin::IsolateHolder"** %36, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.41"* %35 to i64*
  store i64 %57, i64* %59, align 8
  %60 = icmp eq %"class.gin::IsolateHolder"* %58, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %56
  tail call void @_ZN3gin13IsolateHolderD1Ev(%"class.gin::IsolateHolder"* nonnull %58) #14
  %62 = bitcast %"class.gin::IsolateHolder"* %58 to i8*
  tail call void @_ZdlPv(i8* %62) #15
  %63 = load %"class.gin::IsolateHolder"*, %"class.gin::IsolateHolder"** %36, align 8
  br label %64

64:                                               ; preds = %34, %56, %61
  %65 = phi %"class.gin::IsolateHolder"* [ %37, %34 ], [ %49, %56 ], [ %63, %61 ]
  %66 = getelementptr inbounds %"class.gin::IsolateHolder", %"class.gin::IsolateHolder"* %65, i64 0, i32 1
  %67 = bitcast %"class.v8::Isolate"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %29) #14
  %70 = bitcast i8* %17 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* nonnull %70) #14
  %71 = getelementptr inbounds i8, i8* %17, i64 40
  %72 = bitcast i8* %71 to %"class.proxy_resolver::ProxyResolverV8::JSBindings"**
  store %"class.proxy_resolver::ProxyResolverV8::JSBindings"* null, %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %72, align 8
  %73 = getelementptr inbounds i8, i8* %17, i64 48
  %74 = bitcast i8* %73 to i64*
  store i64 %68, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %17, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #14
  %76 = tail call i32 @_ZN14proxy_resolver15ProxyResolverV87Context6InitV8ERK13scoped_refptrIN3net11PacFileDataEEPNS0_10JSBindingsE(%"class.proxy_resolver::ProxyResolverV8::Context"* nonnull %18, %class.scoped_refptr* dereferenceable(8) %0, %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %1)
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %94

78:                                               ; preds = %64
  %79 = ptrtoint i8* %17 to i64
  %80 = tail call i8* @_Znwm(i64 8) #15
  %81 = bitcast i8* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %2, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.proxy_resolver::ProxyResolverV8"*, %"class.proxy_resolver::ProxyResolverV8"** %82, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.35"* %2 to i8**
  store i8* %80, i8** %84, align 8
  %85 = icmp eq %"class.proxy_resolver::ProxyResolverV8"* %83, null
  br i1 %85, label %95, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8", %"class.proxy_resolver::ProxyResolverV8"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.proxy_resolver::ProxyResolverV8::Context"*, %"class.proxy_resolver::ProxyResolverV8::Context"** %87, align 8
  store %"class.proxy_resolver::ProxyResolverV8::Context"* null, %"class.proxy_resolver::ProxyResolverV8::Context"** %87, align 8
  %89 = icmp eq %"class.proxy_resolver::ProxyResolverV8::Context"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  tail call void @_ZN14proxy_resolver15ProxyResolverV87ContextD2Ev(%"class.proxy_resolver::ProxyResolverV8::Context"* nonnull %88) #14
  %91 = bitcast %"class.proxy_resolver::ProxyResolverV8::Context"* %88 to i8*
  tail call void @_ZdlPv(i8* %91) #15
  br label %92

92:                                               ; preds = %90, %86
  %93 = bitcast %"class.proxy_resolver::ProxyResolverV8"* %83 to i8*
  tail call void @_ZdlPv(i8* %93) #15
  br label %95

94:                                               ; preds = %64
  tail call void @_ZN14proxy_resolver15ProxyResolverV87ContextD2Ev(%"class.proxy_resolver::ProxyResolverV8::Context"* nonnull %18) #14
  tail call void @_ZdlPv(i8* nonnull %17) #15
  br label %95

95:                                               ; preds = %92, %78, %94, %3
  %96 = phi i32 [ -327, %3 ], [ %76, %94 ], [ 0, %78 ], [ 0, %92 ]
  ret i32 %96
}

declare dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNK3net11PacFileData5utf16Ev(%"class.net::PacFileData"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN14proxy_resolver15ProxyResolverV87Context6InitV8ERK13scoped_refptrIN3net11PacFileDataEEPNS0_10JSBindingsE(%"class.proxy_resolver::ProxyResolverV8::Context"*, %class.scoped_refptr* dereferenceable(8), %"class.proxy_resolver::ProxyResolverV8::JSBindings"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::Locker", align 8
  %5 = alloca %"class.v8::HandleScope", align 8
  %6 = alloca %"class.v8::Local.65", align 8
  %7 = ptrtoint %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %2 to i64
  %8 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 1
  %9 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %7, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::Locker", %"class.v8::Locker"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 2
  %13 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  call void @_ZN2v86Locker10InitializeEPNS_7IsolateE(%"class.v8::Locker"* nonnull %4, %"class.v8::Isolate"* %13) #14
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  call void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"* %14) #14
  %15 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %5, %"class.v8::Isolate"* %17) #14
  %18 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 3, i32 0
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %20 = bitcast %"class.proxy_resolver::ProxyResolverV8::Context"* %0 to i8*
  %21 = call %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"* %19, i8* %20) #14
  %22 = getelementptr inbounds %"class.v8::PersistentBase", %"class.v8::PersistentBase"* %18, i64 0, i32 0
  %23 = load %"class.v8::External"*, %"class.v8::External"** %22, align 8
  %24 = icmp eq %"class.v8::External"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = bitcast %"class.v8::External"* %23 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %26) #14
  store %"class.v8::External"* null, %"class.v8::External"** %22, align 8
  br label %27

27:                                               ; preds = %25, %3
  %28 = icmp eq %"class.v8::External"* %21, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.v8::External"* %21 to i64*
  %31 = bitcast %"class.v8::Isolate"* %19 to %"class.v8::internal::Isolate"*
  %32 = call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %31, i64* nonnull %30) #14
  %33 = bitcast %"class.v8::PersistentBase"* %18 to i64**
  store i64* %32, i64** %33, align 8
  %34 = icmp eq i64* %32, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.v8::Isolate"** %12 to %"class.v8::internal::Isolate"**
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %36, align 8
  %38 = load i64, i64* %32, align 8
  %39 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %37, i64 %38) #14
  %40 = bitcast i64* %39 to %"class.v8::Value"*
  br label %41

41:                                               ; preds = %27, %29, %35
  %42 = phi %"class.v8::Value"* [ %40, %35 ], [ null, %29 ], [ null, %27 ]
  %43 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %44 = call %"class.v8::ObjectTemplate"* @_ZN2v814ObjectTemplate3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %43, %"class.v8::FunctionTemplate"* null) #14
  %45 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %46 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %45, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN14proxy_resolver15ProxyResolverV87Context13AlertCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* %42, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #14
  call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %46) #14
  %47 = bitcast %"class.v8::ObjectTemplate"* %44 to %"class.v8::Template"*
  %48 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %49 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %50 = bitcast %"class.v8::String"* %49 to %"class.v8::Name"*
  %51 = bitcast %"class.v8::FunctionTemplate"* %46 to %"class.v8::Data"*
  call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %47, %"class.v8::Name"* %50, %"class.v8::Data"* %51, i32 0) #14
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %53 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %52, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN14proxy_resolver15ProxyResolverV87Context19MyIpAddressCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* %42, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #14
  call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %53) #14
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %55 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %54, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0))
  %56 = bitcast %"class.v8::String"* %55 to %"class.v8::Name"*
  %57 = bitcast %"class.v8::FunctionTemplate"* %53 to %"class.v8::Data"*
  call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %47, %"class.v8::Name"* %56, %"class.v8::Data"* %57, i32 0) #14
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %59 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %58, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN14proxy_resolver15ProxyResolverV87Context18DnsResolveCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* %42, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #14
  call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %59) #14
  %60 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %61 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %60, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0))
  %62 = bitcast %"class.v8::String"* %61 to %"class.v8::Name"*
  %63 = bitcast %"class.v8::FunctionTemplate"* %59 to %"class.v8::Data"*
  call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %47, %"class.v8::Name"* %62, %"class.v8::Data"* %63, i32 0) #14
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %65 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %64, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN14proxy_resolver15ProxyResolverV87Context23IsPlainHostNameCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* %42, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #14
  call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %65) #14
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %67 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %66, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0))
  %68 = bitcast %"class.v8::String"* %67 to %"class.v8::Name"*
  %69 = bitcast %"class.v8::FunctionTemplate"* %65 to %"class.v8::Data"*
  call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %47, %"class.v8::Name"* %68, %"class.v8::Data"* %69, i32 0) #14
  %70 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %71 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %70, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN14proxy_resolver15ProxyResolverV87Context20DnsResolveExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* %42, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #14
  call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %71) #14
  %72 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %73 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %72, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0))
  %74 = bitcast %"class.v8::String"* %73 to %"class.v8::Name"*
  %75 = bitcast %"class.v8::FunctionTemplate"* %71 to %"class.v8::Data"*
  call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %47, %"class.v8::Name"* %74, %"class.v8::Data"* %75, i32 0) #14
  %76 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %77 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %76, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN14proxy_resolver15ProxyResolverV87Context21MyIpAddressExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* %42, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #14
  call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %77) #14
  %78 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %79 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %78, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0))
  %80 = bitcast %"class.v8::String"* %79 to %"class.v8::Name"*
  %81 = bitcast %"class.v8::FunctionTemplate"* %77 to %"class.v8::Data"*
  call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %47, %"class.v8::Name"* %80, %"class.v8::Data"* %81, i32 0) #14
  %82 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %83 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %82, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN14proxy_resolver15ProxyResolverV87Context25SortIpAddressListCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* %42, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #14
  call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %83) #14
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %85 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0))
  %86 = bitcast %"class.v8::String"* %85 to %"class.v8::Name"*
  %87 = bitcast %"class.v8::FunctionTemplate"* %83 to %"class.v8::Data"*
  call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %47, %"class.v8::Name"* %86, %"class.v8::Data"* %87, i32 0) #14
  %88 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %89 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %88, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN14proxy_resolver15ProxyResolverV87Context17IsInNetExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* %42, %"class.v8::Signature"* null, i32 0, i32 1, i32 0, %"class.v8::CFunction"* null) #14
  call void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"* %89) #14
  %90 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %91 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %90, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0))
  %92 = bitcast %"class.v8::String"* %91 to %"class.v8::Name"*
  %93 = bitcast %"class.v8::FunctionTemplate"* %89 to %"class.v8::Data"*
  call void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"* %47, %"class.v8::Name"* %92, %"class.v8::Data"* %93, i32 0) #14
  %94 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 4, i32 0
  %95 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %96 = call %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"* %95, %"class.v8::ExtensionConfiguration"* null, %"class.v8::ObjectTemplate"* %44, %"class.v8::Value"* null, void (%"class.v8::Object"*, i32, i8*, i32, i8*)* null, i8* null, %"class.v8::MicrotaskQueue"* null) #14
  %97 = getelementptr inbounds %"class.v8::PersistentBase.1", %"class.v8::PersistentBase.1"* %94, i64 0, i32 0
  %98 = load %"class.v8::Context"*, %"class.v8::Context"** %97, align 8
  %99 = icmp eq %"class.v8::Context"* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %41
  %101 = bitcast %"class.v8::Context"* %98 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %101) #14
  store %"class.v8::Context"* null, %"class.v8::Context"** %97, align 8
  br label %102

102:                                              ; preds = %100, %41
  %103 = icmp eq %"class.v8::Context"* %96, null
  br i1 %103, label %116, label %104

104:                                              ; preds = %102
  %105 = bitcast %"class.v8::Context"* %96 to i64*
  %106 = bitcast %"class.v8::Isolate"* %95 to %"class.v8::internal::Isolate"*
  %107 = call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %106, i64* nonnull %105) #14
  %108 = bitcast %"class.v8::PersistentBase.1"* %94 to i64**
  store i64* %107, i64** %108, align 8
  %109 = icmp eq i64* %107, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %104
  %111 = bitcast %"class.v8::Isolate"** %12 to %"class.v8::internal::Isolate"**
  %112 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %111, align 8
  %113 = load i64, i64* %107, align 8
  %114 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %112, i64 %113) #14
  %115 = bitcast i64* %114 to %"class.v8::Context"*
  br label %116

116:                                              ; preds = %102, %104, %110
  %117 = phi %"class.v8::Context"* [ %115, %110 ], [ null, %104 ], [ null, %102 ]
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %117) #14
  %118 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %119 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %118, i8* getelementptr inbounds ([6542 x i8], [6542 x i8]* @.str.14, i64 0, i64 0))
  %120 = call i32 @_ZN14proxy_resolver15ProxyResolverV87Context9RunScriptEN2v85LocalINS2_6StringEEEPKc(%"class.proxy_resolver::ProxyResolverV8::Context"* %0, %"class.v8::String"* %119, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZN14proxy_resolver12_GLOBAL__N_123kPacUtilityResourceNameE, i64 0, i64 0))
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %187

122:                                              ; preds = %116
  %123 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %12, align 8
  %124 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %125 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %124, align 8
  %126 = call dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNK3net11PacFileData5utf16Ev(%"class.net::PacFileData"* %125) #14
  %127 = bitcast %"class.std::__1::basic_string.26"* %126 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %127, i64 0, i32 1, i32 1
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  %131 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = zext i8 %129 to i64
  %134 = select i1 %130, i64 %132, i64 %133
  %135 = shl i64 %134, 1
  %136 = icmp ult i64 %135, 257
  br i1 %136, label %137, label %162

137:                                              ; preds = %122
  %138 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %124, align 8
  %139 = call dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNK3net11PacFileData5utf16Ev(%"class.net::PacFileData"* %138) #14
  %140 = bitcast %"class.std::__1::basic_string.26"* %139 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %140, i64 0, i32 1, i32 1
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  %144 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i16*, i16** %144, align 8
  %146 = bitcast %"class.std::__1::basic_string.26"* %139 to i16*
  %147 = select i1 %143, i16* %145, i16* %146
  %148 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %124, align 8
  %149 = call dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNK3net11PacFileData5utf16Ev(%"class.net::PacFileData"* %148) #14
  %150 = bitcast %"class.std::__1::basic_string.26"* %149 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %150, i64 0, i32 1, i32 1
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  %154 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = zext i8 %152 to i64
  %157 = select i1 %153, i64 %155, i64 %156
  %158 = trunc i64 %157 to i32
  %159 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %123, i16* %147, i32 0, i32 %158) #14
  %160 = icmp eq %"class.v8::String"* %159, null
  br i1 %160, label %161, label %179, !prof !2

161:                                              ; preds = %137
  call void @_ZN2v82V812ToLocalEmptyEv() #14
  br label %179

162:                                              ; preds = %122
  %163 = call i8* @_Znwm(i64 24) #15
  %164 = bitcast i8* %163 to i32 (...)***
  %165 = getelementptr inbounds i8, i8* %163, i64 8
  %166 = bitcast i8* %165 to i16**
  store i16* null, i16** %166, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %164, align 8
  %167 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %124, align 8
  %168 = getelementptr inbounds i8, i8* %163, i64 16
  %169 = bitcast i8* %168 to %"class.net::PacFileData"**
  store %"class.net::PacFileData"* %167, %"class.net::PacFileData"** %169, align 8
  %170 = icmp eq %"class.net::PacFileData"* %167, null
  br i1 %170, label %174, label %171

171:                                              ; preds = %162
  %172 = getelementptr inbounds %"class.net::PacFileData", %"class.net::PacFileData"* %167, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 1 monotonic
  br label %174

174:                                              ; preds = %171, %162
  %175 = bitcast i8* %163 to %"class.v8::String::ExternalStringResource"*
  %176 = call %"class.v8::String"* @_ZN2v86String18NewExternalTwoByteEPNS_7IsolateEPNS0_22ExternalStringResourceE(%"class.v8::Isolate"* %123, %"class.v8::String::ExternalStringResource"* nonnull %175) #14
  %177 = icmp eq %"class.v8::String"* %176, null
  br i1 %177, label %178, label %179, !prof !2

178:                                              ; preds = %174
  call void @_ZN2v82V812ToLocalEmptyEv() #14
  br label %179

179:                                              ; preds = %137, %161, %174, %178
  %180 = phi %"class.v8::String"* [ %159, %137 ], [ null, %161 ], [ %176, %174 ], [ null, %178 ]
  %181 = call i32 @_ZN14proxy_resolver15ProxyResolverV87Context9RunScriptEN2v85LocalINS2_6StringEEEPKc(%"class.proxy_resolver::ProxyResolverV8::Context"* %0, %"class.v8::String"* %180, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN14proxy_resolver12_GLOBAL__N_116kPacResourceNameE, i64 0, i64 0))
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %179
  %184 = bitcast %"class.v8::Local.65"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #14
  %185 = getelementptr inbounds %"class.v8::Local.65", %"class.v8::Local.65"* %6, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %185, align 8
  %186 = call i32 @_ZN14proxy_resolver15ProxyResolverV87Context18GetFindProxyForURLEPN2v85LocalINS2_5ValueEEE(%"class.proxy_resolver::ProxyResolverV8::Context"* %0, %"class.v8::Local.65"* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #14
  br label %187

187:                                              ; preds = %179, %116, %183
  %188 = phi i32 [ %186, %183 ], [ %120, %116 ], [ %181, %179 ]
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %117) #14
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  call void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"* %14) #14
  call void @_ZN2v86LockerD1Ev(%"class.v8::Locker"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %189 = icmp eq %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %8, null
  br i1 %189, label %191, label %190

190:                                              ; preds = %187
  store i64 %10, i64* %9, align 8
  br label %191

191:                                              ; preds = %187, %190
  ret i32 %188
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN14proxy_resolver15ProxyResolverV816GetTotalHeapSizeEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.v8::Locker", align 8
  %2 = alloca %"class.v8::HeapStatistics", align 8
  %3 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0) acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %10, label %5

5:                                                ; preds = %0
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0)) #14
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #14
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 40) to i64*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 48), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE to i8*)) #14
  br label %10

8:                                                ; preds = %5
  %9 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0) acquire, align 8
  br label %10

10:                                               ; preds = %0, %7, %8
  %11 = phi i64 [ %3, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to i64), %7 ], [ %9, %8 ]
  %12 = inttoptr i64 %11 to %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"*
  %13 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %13) #14
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16, !prof !6

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %12, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %17) #14
  br label %18

18:                                               ; preds = %16, %10
  %19 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.gin::IsolateHolder"*, %"class.gin::IsolateHolder"** %19, align 8
  %21 = icmp eq %"class.gin::IsolateHolder"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #14
  br label %34

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.gin::IsolateHolder", %"class.gin::IsolateHolder"* %20, i64 0, i32 1
  %26 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8
  %27 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #14
  %28 = icmp eq %"class.v8::Isolate"* %26, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::Locker", %"class.v8::Locker"* %1, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @_ZN2v86Locker10InitializeEPNS_7IsolateE(%"class.v8::Locker"* nonnull %1, %"class.v8::Isolate"* nonnull %26) #14
  call void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"* nonnull %26) #14
  %31 = bitcast %"class.v8::HeapStatistics"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 112, i1 false)
  call void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"* nonnull %2) #14
  call void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"* nonnull %26, %"class.v8::HeapStatistics"* nonnull %2) #14
  %32 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %2, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #14
  call void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"* nonnull %26) #14
  call void @_ZN2v86LockerD1Ev(%"class.v8::Locker"* nonnull %1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #14
  br label %34

34:                                               ; preds = %22, %24, %29
  %35 = phi i64 [ %33, %29 ], [ 0, %24 ], [ 0, %22 ]
  ret i64 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"*) unnamed_addr #1

declare void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"*, %"class.v8::HeapStatistics"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v86LockerD1Ev(%"class.v8::Locker"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN14proxy_resolver15ProxyResolverV815GetUsedHeapSizeEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.v8::Locker", align 8
  %2 = alloca %"class.v8::HeapStatistics", align 8
  %3 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0) acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %10, label %5

5:                                                ; preds = %0
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0)) #14
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to %"class.base::internal::LockImpl"*)) #14
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 40) to i64*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 48), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE to i8*)) #14
  br label %10

8:                                                ; preds = %5
  %9 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 0) acquire, align 8
  br label %10

10:                                               ; preds = %0, %7, %8
  %11 = phi i64 [ %3, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN14proxy_resolver12_GLOBAL__N_117g_isolate_factoryE, i64 0, i32 1, i64 0) to i64), %7 ], [ %9, %8 ]
  %12 = inttoptr i64 %11 to %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"*
  %13 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %13) #14
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16, !prof !6

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %12, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %17) #14
  br label %18

18:                                               ; preds = %16, %10
  %19 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory", %"class.proxy_resolver::(anonymous namespace)::SharedIsolateFactory"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.gin::IsolateHolder"*, %"class.gin::IsolateHolder"** %19, align 8
  %21 = icmp eq %"class.gin::IsolateHolder"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #14
  br label %34

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.gin::IsolateHolder", %"class.gin::IsolateHolder"* %20, i64 0, i32 1
  %26 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8
  %27 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #14
  %28 = icmp eq %"class.v8::Isolate"* %26, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::Locker", %"class.v8::Locker"* %1, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @_ZN2v86Locker10InitializeEPNS_7IsolateE(%"class.v8::Locker"* nonnull %1, %"class.v8::Isolate"* nonnull %26) #14
  call void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"* nonnull %26) #14
  %31 = bitcast %"class.v8::HeapStatistics"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 112, i1 false)
  call void @_ZN2v814HeapStatisticsC1Ev(%"class.v8::HeapStatistics"* nonnull %2) #14
  call void @_ZN2v87Isolate17GetHeapStatisticsEPNS_14HeapStatisticsE(%"class.v8::Isolate"* nonnull %26, %"class.v8::HeapStatistics"* nonnull %2) #14
  %32 = getelementptr inbounds %"class.v8::HeapStatistics", %"class.v8::HeapStatistics"* %2, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #14
  call void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"* nonnull %26) #14
  call void @_ZN2v86LockerD1Ev(%"class.v8::Locker"* nonnull %1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #14
  br label %34

34:                                               ; preds = %22, %24, %29
  %35 = phi i64 [ %33, %29 ], [ 0, %24 ], [ 0, %22 ]
  ret i64 %35
}

declare void @_ZN2v87Isolate23SafeForTerminationScopeC1EPS0_(%"class.v8::Isolate::SafeForTerminationScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN14proxy_resolver15ProxyResolverV87Context18GetFindProxyForURLEPN2v85LocalINS2_5ValueEEE(%"class.proxy_resolver::ProxyResolverV8::Context"*, %"class.v8::Local.65"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = alloca %"class.std::__1::basic_string.26", align 8
  %5 = alloca %"class.std::__1::basic_string.26", align 8
  %6 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.v8::Context"*, %"class.v8::Context"** %7, align 8
  %9 = icmp eq %"class.v8::Context"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::Isolate"** %6 to %"class.v8::internal::Isolate"**
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = bitcast %"class.v8::Context"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %14) #14
  %16 = bitcast i64* %15 to %"class.v8::Context"*
  br label %17

17:                                               ; preds = %2, %10
  %18 = phi %"class.v8::Context"* [ %16, %10 ], [ null, %2 ]
  %19 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %20) #14
  %21 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %18) #14
  %22 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %23 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0))
  %24 = bitcast %"class.v8::String"* %23 to %"class.v8::Value"*
  %25 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %21, %"class.v8::Context"* %18, %"class.v8::Value"* %24) #14
  %26 = ptrtoint %"class.v8::Value"* %25 to i64
  %27 = bitcast %"class.v8::Local.65"* %1 to i64*
  store i64 %26, i64* %27, align 8
  %28 = icmp eq %"class.v8::Value"* %25, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %17
  %30 = call %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"* nonnull %3) #14
  call void @_ZN14proxy_resolver15ProxyResolverV87Context11HandleErrorEN2v85LocalINS2_7MessageEEE(%"class.proxy_resolver::ProxyResolverV8::Context"* %0, %"class.v8::Message"* %30)
  %31 = getelementptr inbounds %"class.v8::Local.65", %"class.v8::Local.65"* %1, i64 0, i32 0
  %32 = load %"class.v8::Value"*, %"class.v8::Value"** %31, align 8
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %17, %29
  %35 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %3) #14
  br i1 %35, label %36, label %76

36:                                               ; preds = %29, %34
  %37 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 1
  %38 = load %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #14
  %40 = call i8* @_Znwm(i64 96) #15
  %41 = bitcast %"class.std::__1::basic_string.26"* %4 to i8**
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> <i64 45, i64 -9223372036854775760>, <2 x i64>* %43, align 8
  %44 = bitcast %"class.std::__1::basic_string.26"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = bitcast i8* %40 to <8 x i16>*
  store <8 x i16> <i16 65, i16 99, i16 99, i16 101, i16 115, i16 115, i16 105, i16 110>, <8 x i16>* %45, align 2
  %46 = getelementptr inbounds i8, i8* %40, i64 16
  %47 = bitcast i8* %46 to <8 x i16>*
  store <8 x i16> <i16 103, i16 32, i16 70, i16 105, i16 110, i16 100, i16 80, i16 114>, <8 x i16>* %47, align 2
  %48 = getelementptr inbounds i8, i8* %40, i64 32
  %49 = bitcast i8* %48 to <8 x i16>*
  store <8 x i16> <i16 111, i16 120, i16 121, i16 70, i16 111, i16 114, i16 85, i16 82>, <8 x i16>* %49, align 2
  %50 = getelementptr inbounds i8, i8* %40, i64 48
  %51 = bitcast i8* %50 to <8 x i16>*
  store <8 x i16> <i16 76, i16 32, i16 116, i16 104, i16 114, i16 101, i16 119, i16 32>, <8 x i16>* %51, align 2
  %52 = getelementptr inbounds i8, i8* %40, i64 64
  %53 = bitcast i8* %52 to <8 x i16>*
  store <8 x i16> <i16 97, i16 110, i16 32, i16 101, i16 120, i16 99, i16 101, i16 112>, <8 x i16>* %53, align 2
  %54 = getelementptr inbounds i8, i8* %40, i64 80
  %55 = bitcast i8* %54 to i16*
  store i16 116, i16* %55, align 2
  %56 = getelementptr inbounds i8, i8* %40, i64 82
  %57 = bitcast i8* %56 to i16*
  store i16 105, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %40, i64 84
  %59 = bitcast i8* %58 to i16*
  store i16 111, i16* %59, align 2
  %60 = getelementptr inbounds i8, i8* %40, i64 86
  %61 = bitcast i8* %60 to i16*
  store i16 110, i16* %61, align 2
  %62 = getelementptr inbounds i8, i8* %40, i64 88
  %63 = bitcast i8* %62 to i16*
  store i16 46, i16* %63, align 2
  %64 = getelementptr inbounds i8, i8* %40, i64 90
  %65 = bitcast i8* %64 to i16*
  store i16 0, i16* %65, align 2
  %66 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %38 to void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)***
  %67 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)**, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %67, i64 2
  %69 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %68, align 8
  call void %69(%"class.proxy_resolver::ProxyResolverV8::JSBindings"* %38, i32 -1, %"class.std::__1::basic_string.26"* nonnull dereferenceable(24) %4) #14
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %110

73:                                               ; preds = %36
  %74 = bitcast %"class.std::__1::basic_string.26"* %4 to i8**
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #15
  br label %110

76:                                               ; preds = %34
  %77 = getelementptr inbounds %"class.v8::Local.65", %"class.v8::Local.65"* %1, i64 0, i32 0
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  %79 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %78) #14
  br i1 %79, label %112, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 1
  %82 = load %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %81, align 8
  %83 = bitcast %"class.std::__1::basic_string.26"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #14
  %84 = call i8* @_Znwm(i64 96) #15
  %85 = bitcast %"class.std::__1::basic_string.26"* %5 to i8**
  store i8* %84, i8** %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = bitcast i64* %86 to <2 x i64>*
  store <2 x i64> <i64 47, i64 -9223372036854775760>, <2 x i64>* %87, align 8
  %88 = bitcast %"class.std::__1::basic_string.26"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %89 = bitcast i8* %84 to <8 x i16>*
  store <8 x i16> <i16 70, i16 105, i16 110, i16 100, i16 80, i16 114, i16 111, i16 120>, <8 x i16>* %89, align 2
  %90 = getelementptr inbounds i8, i8* %84, i64 16
  %91 = bitcast i8* %90 to <8 x i16>*
  store <8 x i16> <i16 121, i16 70, i16 111, i16 114, i16 85, i16 82, i16 76, i16 32>, <8 x i16>* %91, align 2
  %92 = getelementptr inbounds i8, i8* %84, i64 32
  %93 = bitcast i8* %92 to <8 x i16>*
  store <8 x i16> <i16 105, i16 115, i16 32, i16 117, i16 110, i16 100, i16 101, i16 102>, <8 x i16>* %93, align 2
  %94 = getelementptr inbounds i8, i8* %84, i64 48
  %95 = bitcast i8* %94 to <8 x i16>*
  store <8 x i16> <i16 105, i16 110, i16 101, i16 100, i16 32, i16 111, i16 114, i16 32>, <8 x i16>* %95, align 2
  %96 = getelementptr inbounds i8, i8* %84, i64 64
  %97 = bitcast i8* %96 to <8 x i16>*
  store <8 x i16> <i16 110, i16 111, i16 116, i16 32, i16 97, i16 32, i16 102, i16 117>, <8 x i16>* %97, align 2
  %98 = getelementptr inbounds i8, i8* %84, i64 80
  %99 = bitcast i8* %98 to <8 x i16>*
  store <8 x i16> <i16 110, i16 99, i16 116, i16 105, i16 111, i16 110, i16 46, i16 0>, <8 x i16>* %99, align 2
  %100 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %82 to void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)***
  %101 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)**, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %101, i64 2
  %103 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %102, align 8
  call void %103(%"class.proxy_resolver::ProxyResolverV8::JSBindings"* %82, i32 -1, %"class.std::__1::basic_string.26"* nonnull dereferenceable(24) %5) #14
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %88, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %80
  %108 = bitcast %"class.std::__1::basic_string.26"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %107, %80, %73, %36
  %111 = phi i8* [ %39, %36 ], [ %39, %73 ], [ %83, %80 ], [ %83, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #14
  br label %112

112:                                              ; preds = %110, %76
  %113 = phi i32 [ 0, %76 ], [ -327, %110 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #14
  ret i32 %113
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

declare void @_ZNK4GURL14HostNoBracketsEv(%"class.std::__1::basic_string"* sret, %class.GURL*) local_unnamed_addr #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v88Function4CallENS_5LocalINS_7ContextEEENS1_INS_5ValueEEEiPS5_(%"class.v8::Function"*, %"class.v8::Context"*, %"class.v8::Value"*, i32, %"class.v8::Local.65"*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context11HandleErrorEN2v85LocalINS2_7MessageEEE(%"class.proxy_resolver::ProxyResolverV8::Context"*, %"class.v8::Message"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.26", align 8
  %4 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::Isolate"** %4 to %"class.v8::internal::Isolate"**
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Context"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #14
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %8
  %16 = phi %"class.v8::Context"* [ %14, %8 ], [ null, %2 ]
  %17 = bitcast %"class.std::__1::basic_string.26"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #14
  %18 = icmp eq %"class.v8::Message"* %1, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %15
  %20 = tail call i64 @_ZNK2v87Message13GetLineNumberENS_5LocalINS_7ContextEEE(%"class.v8::Message"* nonnull %1, %"class.v8::Context"* %16) #14
  %21 = trunc i64 %20 to i8
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i8 %21, 0
  %25 = select i1 %24, i32 -1, i32 %23
  %26 = tail call %"class.v8::String"* @_ZNK2v87Message3GetEv(%"class.v8::Message"* nonnull %1) #14
  %27 = bitcast %"class.v8::String"* %26 to %"class.v8::Value"*
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %29 = call fastcc zeroext i1 @_ZN14proxy_resolver12_GLOBAL__N_121V8ObjectToUTF16StringEN2v85LocalINS1_5ValueEEEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEPNS1_7IsolateE(%"class.v8::Value"* %27, %"class.std::__1::basic_string.26"* nonnull %3, %"class.v8::Isolate"* %28)
  br label %30

30:                                               ; preds = %19, %15
  %31 = phi i32 [ -1, %15 ], [ %25, %19 ]
  %32 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 1
  %33 = load %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %32, align 8
  %34 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %33 to void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)***
  %35 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)**, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %35, i64 2
  %37 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, i32, %"class.std::__1::basic_string.26"*)** %36, align 8
  call void %37(%"class.proxy_resolver::ProxyResolverV8::JSBindings"* %33, i32 %31, %"class.std::__1::basic_string.26"* nonnull dereferenceable(24) %3) #14
  %38 = bitcast %"class.std::__1::basic_string.26"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %30
  %43 = bitcast %"class.std::__1::basic_string.26"* %3 to i8**
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #15
  br label %45

45:                                               ; preds = %30, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #14
  ret void
}

declare %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.26"* noalias sret, i16*, %"class.std::__1::basic_string.26"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.26"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %8 = load i16, i16* %1, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %3, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %3 ]
  %12 = phi i16* [ %14, %10 ], [ %1, %3 ]
  %13 = add i64 %11, 1
  %14 = getelementptr inbounds i16, i16* %12, i64 1
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %10, %3
  %18 = phi i64 [ 0, %3 ], [ %13, %10 ]
  %19 = bitcast %"class.std::__1::basic_string.26"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = add i64 %26, %18
  %28 = icmp ugt i64 %27, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %17
  %30 = bitcast %"class.std::__1::basic_string.26"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #16
  unreachable

31:                                               ; preds = %17
  %32 = icmp ult i64 %27, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = trunc i64 %18 to i8
  %35 = bitcast %"class.std::__1::basic_string.26"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  store i8 %34, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string.26"* %0 to i16*
  br label %49

38:                                               ; preds = %31
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #15
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string.26"* %0 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  store i64 %48, i64* %6, align 8
  store i64 %18, i64* %5, align 8
  br label %49

49:                                               ; preds = %43, %33
  %50 = phi i16* [ %37, %33 ], [ %46, %43 ]
  %51 = icmp eq i64 %18, 0
  br i1 %51, label %208, label %52

52:                                               ; preds = %49
  store i16 %8, i16* %50, align 2
  %53 = add i64 %18, -1
  %54 = getelementptr inbounds i16, i16* %1, i64 1
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %206, label %56

56:                                               ; preds = %52
  %57 = icmp ult i64 %53, 16
  br i1 %57, label %153, label %58

58:                                               ; preds = %56
  %59 = getelementptr i16, i16* %50, i64 1
  %60 = getelementptr i16, i16* %50, i64 %18
  %61 = getelementptr i16, i16* %1, i64 %18
  %62 = icmp ult i16* %59, %61
  %63 = icmp ult i16* %54, %60
  %64 = and i1 %62, %63
  br i1 %64, label %153, label %65

65:                                               ; preds = %58
  %66 = and i64 %53, -16
  %67 = getelementptr i16, i16* %54, i64 %66
  %68 = sub i64 %53, %66
  %69 = getelementptr i16, i16* %50, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %130, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  %77 = getelementptr i16, i16* %50, i64 1
  %78 = getelementptr i16, i16* %50, i64 1
  %79 = getelementptr i16, i16* %50, i64 1
  %80 = getelementptr i16, i16* %50, i64 1
  br label %81

81:                                               ; preds = %81, %75
  %82 = phi i64 [ 0, %75 ], [ %127, %81 ]
  %83 = phi i64 [ %76, %75 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %54, i64 %82
  %85 = getelementptr inbounds i16, i16* %77, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !8
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !8
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !11, !noalias !8
  %92 = getelementptr inbounds i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !11, !noalias !8
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %54, i64 %94
  %96 = getelementptr inbounds i16, i16* %78, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !8
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !8
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !11, !noalias !8
  %103 = getelementptr inbounds i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !11, !noalias !8
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %54, i64 %105
  %107 = getelementptr inbounds i16, i16* %79, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !8
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !8
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !11, !noalias !8
  %114 = getelementptr inbounds i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !11, !noalias !8
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %54, i64 %116
  %118 = getelementptr inbounds i16, i16* %80, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !8
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !8
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !11, !noalias !8
  %125 = getelementptr inbounds i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !11, !noalias !8
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !13

130:                                              ; preds = %81, %65
  %131 = phi i64 [ 0, %65 ], [ %127, %81 ]
  %132 = icmp eq i64 %73, 0
  br i1 %132, label %151, label %133

133:                                              ; preds = %130
  %134 = getelementptr i16, i16* %50, i64 1
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ %131, %133 ], [ %148, %135 ]
  %137 = phi i64 [ %73, %133 ], [ %149, %135 ]
  %138 = getelementptr i16, i16* %54, i64 %136
  %139 = getelementptr inbounds i16, i16* %134, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !8
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !8
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !11, !noalias !8
  %146 = getelementptr inbounds i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !11, !noalias !8
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !15

151:                                              ; preds = %135, %130
  %152 = icmp eq i64 %53, %66
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %58, %56
  %154 = phi i16* [ %54, %58 ], [ %54, %56 ], [ %67, %151 ]
  %155 = phi i64 [ %53, %58 ], [ %53, %56 ], [ %68, %151 ]
  %156 = phi i16* [ %50, %58 ], [ %50, %56 ], [ %69, %151 ]
  %157 = add i64 %155, -1
  %158 = and i64 %155, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i16* [ %168, %160 ], [ %154, %153 ]
  %162 = phi i64 [ %167, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %165, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = load i16, i16* %161, align 2
  store i16 %166, i16* %165, align 2
  %167 = add i64 %162, -1
  %168 = getelementptr inbounds i16, i16* %161, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !17

171:                                              ; preds = %160, %153
  %172 = phi i16* [ %154, %153 ], [ %168, %160 ]
  %173 = phi i64 [ %155, %153 ], [ %167, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %165, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i16* [ %204, %176 ], [ %172, %171 ]
  %178 = phi i64 [ %203, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %201, %176 ], [ %174, %171 ]
  %180 = getelementptr inbounds i16, i16* %179, i64 1
  %181 = load i16, i16* %177, align 2
  store i16 %181, i16* %180, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 1
  %183 = getelementptr inbounds i16, i16* %179, i64 2
  %184 = load i16, i16* %182, align 2
  store i16 %184, i16* %183, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 2
  %186 = getelementptr inbounds i16, i16* %179, i64 3
  %187 = load i16, i16* %185, align 2
  store i16 %187, i16* %186, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 3
  %189 = getelementptr inbounds i16, i16* %179, i64 4
  %190 = load i16, i16* %188, align 2
  store i16 %190, i16* %189, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 4
  %192 = getelementptr inbounds i16, i16* %179, i64 5
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 5
  %195 = getelementptr inbounds i16, i16* %179, i64 6
  %196 = load i16, i16* %194, align 2
  store i16 %196, i16* %195, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 6
  %198 = getelementptr inbounds i16, i16* %179, i64 7
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %177, i64 7
  %201 = getelementptr inbounds i16, i16* %179, i64 8
  %202 = load i16, i16* %200, align 2
  store i16 %202, i16* %201, align 2
  %203 = add i64 %178, -8
  %204 = getelementptr inbounds i16, i16* %177, i64 8
  %205 = icmp eq i64 %203, 0
  br i1 %205, label %206, label %176, !llvm.loop !18

206:                                              ; preds = %171, %176, %151, %52
  %207 = load i8, i8* %20, align 1
  br label %208

208:                                              ; preds = %206, %49
  %209 = phi i8 [ %207, %206 ], [ %21, %49 ]
  %210 = getelementptr inbounds i16, i16* %50, i64 %18
  store i16 0, i16* %210, align 2
  %211 = icmp slt i8 %209, 0
  %212 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i16*, i16** %212, align 8
  %214 = bitcast %"class.std::__1::basic_string.26"* %2 to i16*
  %215 = select i1 %211, i16* %213, i16* %214
  %216 = bitcast %"class.std::__1::basic_string.26"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %216, i64 0, i32 1, i32 1
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %225

220:                                              ; preds = %208
  %221 = load i64, i64* %6, align 8
  %222 = and i64 %221, 9223372036854775807
  %223 = add nsw i64 %222, -1
  %224 = load i64, i64* %5, align 8
  br label %227

225:                                              ; preds = %208
  %226 = zext i8 %218 to i64
  br label %227

227:                                              ; preds = %225, %220
  %228 = phi i64 [ %223, %220 ], [ 10, %225 ]
  %229 = phi i64 [ %224, %220 ], [ %226, %225 ]
  %230 = sub i64 %228, %229
  %231 = icmp ult i64 %230, %26
  br i1 %231, label %391, label %232

232:                                              ; preds = %227
  %233 = icmp eq i64 %26, 0
  br i1 %233, label %394, label %234

234:                                              ; preds = %232
  %235 = load i16*, i16** %4, align 8
  %236 = bitcast %"class.std::__1::basic_string.26"* %0 to i16*
  %237 = select i1 %219, i16* %235, i16* %236
  %238 = getelementptr inbounds i16, i16* %237, i64 %229
  %239 = icmp ult i64 %26, 16
  br i1 %239, label %329, label %240

240:                                              ; preds = %234
  %241 = add i64 %26, %229
  %242 = getelementptr i16, i16* %237, i64 %241
  %243 = getelementptr i16, i16* %215, i64 %26
  %244 = icmp ult i16* %238, %243
  %245 = icmp ult i16* %215, %242
  %246 = and i1 %244, %245
  br i1 %246, label %329, label %247

247:                                              ; preds = %240
  %248 = and i64 %26, -16
  %249 = sub i64 %26, %248
  %250 = getelementptr i16, i16* %215, i64 %248
  %251 = getelementptr i16, i16* %238, i64 %248
  %252 = add i64 %248, -16
  %253 = lshr exact i64 %252, 4
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 3
  %256 = icmp ult i64 %252, 48
  br i1 %256, label %308, label %257

257:                                              ; preds = %247
  %258 = sub nsw i64 %254, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 0, %257 ], [ %305, %259 ]
  %261 = phi i64 [ %258, %257 ], [ %306, %259 ]
  %262 = getelementptr i16, i16* %215, i64 %260
  %263 = getelementptr i16, i16* %238, i64 %260
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !19
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !19
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !22, !noalias !19
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !22, !noalias !19
  %272 = or i64 %260, 16
  %273 = getelementptr i16, i16* %215, i64 %272
  %274 = getelementptr i16, i16* %238, i64 %272
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !19
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !19
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !22, !noalias !19
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !22, !noalias !19
  %283 = or i64 %260, 32
  %284 = getelementptr i16, i16* %215, i64 %283
  %285 = getelementptr i16, i16* %238, i64 %283
  %286 = bitcast i16* %284 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !19
  %288 = getelementptr i16, i16* %284, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !19
  %291 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %291, align 2, !alias.scope !22, !noalias !19
  %292 = getelementptr i16, i16* %285, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %293, align 2, !alias.scope !22, !noalias !19
  %294 = or i64 %260, 48
  %295 = getelementptr i16, i16* %215, i64 %294
  %296 = getelementptr i16, i16* %238, i64 %294
  %297 = bitcast i16* %295 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !19
  %299 = getelementptr i16, i16* %295, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !19
  %302 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %302, align 2, !alias.scope !22, !noalias !19
  %303 = getelementptr i16, i16* %296, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %304, align 2, !alias.scope !22, !noalias !19
  %305 = add i64 %260, 64
  %306 = add i64 %261, -4
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %259, !llvm.loop !24

308:                                              ; preds = %259, %247
  %309 = phi i64 [ 0, %247 ], [ %305, %259 ]
  %310 = icmp eq i64 %255, 0
  br i1 %310, label %327, label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %324, %311 ], [ %309, %308 ]
  %313 = phi i64 [ %325, %311 ], [ %255, %308 ]
  %314 = getelementptr i16, i16* %215, i64 %312
  %315 = getelementptr i16, i16* %238, i64 %312
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !19
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !19
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !22, !noalias !19
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !22, !noalias !19
  %324 = add i64 %312, 16
  %325 = add i64 %313, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %311, !llvm.loop !25

327:                                              ; preds = %311, %308
  %328 = icmp eq i64 %26, %248
  br i1 %328, label %382, label %329

329:                                              ; preds = %327, %240, %234
  %330 = phi i64 [ %26, %240 ], [ %26, %234 ], [ %249, %327 ]
  %331 = phi i16* [ %215, %240 ], [ %215, %234 ], [ %250, %327 ]
  %332 = phi i16* [ %238, %240 ], [ %238, %234 ], [ %251, %327 ]
  %333 = add i64 %330, -1
  %334 = and i64 %330, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %347, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %342, %336 ], [ %330, %329 ]
  %338 = phi i16* [ %344, %336 ], [ %331, %329 ]
  %339 = phi i16* [ %343, %336 ], [ %332, %329 ]
  %340 = phi i64 [ %345, %336 ], [ %334, %329 ]
  %341 = load i16, i16* %338, align 2
  store i16 %341, i16* %339, align 2
  %342 = add i64 %337, -1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = getelementptr inbounds i16, i16* %338, i64 1
  %345 = add i64 %340, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !26

347:                                              ; preds = %336, %329
  %348 = phi i64 [ %330, %329 ], [ %342, %336 ]
  %349 = phi i16* [ %331, %329 ], [ %344, %336 ]
  %350 = phi i16* [ %332, %329 ], [ %343, %336 ]
  %351 = icmp ult i64 %333, 7
  br i1 %351, label %382, label %352

352:                                              ; preds = %347, %352
  %353 = phi i64 [ %378, %352 ], [ %348, %347 ]
  %354 = phi i16* [ %380, %352 ], [ %349, %347 ]
  %355 = phi i16* [ %379, %352 ], [ %350, %347 ]
  %356 = load i16, i16* %354, align 2
  store i16 %356, i16* %355, align 2
  %357 = getelementptr inbounds i16, i16* %355, i64 1
  %358 = getelementptr inbounds i16, i16* %354, i64 1
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %355, i64 2
  %361 = getelementptr inbounds i16, i16* %354, i64 2
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %355, i64 3
  %364 = getelementptr inbounds i16, i16* %354, i64 3
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %355, i64 4
  %367 = getelementptr inbounds i16, i16* %354, i64 4
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %355, i64 5
  %370 = getelementptr inbounds i16, i16* %354, i64 5
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %355, i64 6
  %373 = getelementptr inbounds i16, i16* %354, i64 6
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %355, i64 7
  %376 = getelementptr inbounds i16, i16* %354, i64 7
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = add i64 %353, -8
  %379 = getelementptr inbounds i16, i16* %355, i64 8
  %380 = getelementptr inbounds i16, i16* %354, i64 8
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %382, label %352, !llvm.loop !27

382:                                              ; preds = %347, %352, %327
  %383 = add i64 %229, %26
  %384 = load i8, i8* %217, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %382
  store i64 %383, i64* %5, align 8
  br label %389

387:                                              ; preds = %382
  %388 = trunc i64 %383 to i8
  store i8 %388, i8* %217, align 1
  br label %389

389:                                              ; preds = %387, %386
  %390 = getelementptr inbounds i16, i16* %237, i64 %383
  store i16 0, i16* %390, align 2
  br label %394

391:                                              ; preds = %227
  %392 = add i64 %229, %26
  %393 = sub i64 %392, %228
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.26"* %0, i64 %228, i64 %393, i64 %229, i64 %229, i64 0, i64 %26, i16* %215) #14
  br label %394

394:                                              ; preds = %232, %389, %391
  ret void
}

declare void @_ZN3net9ProxyInfo12UsePacStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::ProxyInfo"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v87Isolate23SafeForTerminationScopeD1Ev(%"class.v8::Isolate::SafeForTerminationScope"*) unnamed_addr #4

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"*, i8*) unnamed_addr #0 {
  %3 = tail call i64 @strlen(i8* %1) #17
  %4 = icmp ult i64 %3, 257
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = trunc i64 %3 to i32
  %7 = tail call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* %1, i32 0, i32 %6) #14
  %8 = icmp eq %"class.v8::String"* %7, null
  br i1 %8, label %9, label %23, !prof !2

9:                                                ; preds = %5
  tail call void @_ZN2v82V812ToLocalEmptyEv() #14
  br label %23

10:                                               ; preds = %2
  %11 = tail call i8* @_Znwm(i64 32) #15
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i8**
  store i8* null, i8** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN14proxy_resolver12_GLOBAL__N_122V8ExternalASCIILiteralE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = bitcast i8* %15 to i8**
  store i8* %1, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 24
  %18 = bitcast i8* %17 to i64*
  store i64 %3, i64* %18, align 8
  %19 = bitcast i8* %11 to %"class.v8::String::ExternalOneByteStringResource"*
  %20 = tail call %"class.v8::String"* @_ZN2v86String18NewExternalOneByteEPNS_7IsolateEPNS0_29ExternalOneByteStringResourceE(%"class.v8::Isolate"* %0, %"class.v8::String::ExternalOneByteStringResource"* nonnull %19) #14
  %21 = icmp eq %"class.v8::String"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %10
  tail call void @_ZN2v82V812ToLocalEmptyEv() #14
  br label %23

23:                                               ; preds = %22, %10, %9, %5
  %24 = phi %"class.v8::String"* [ %7, %5 ], [ null, %9 ], [ %20, %10 ], [ null, %22 ]
  ret %"class.v8::String"* %24
}

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String18NewExternalOneByteEPNS_7IsolateEPNS0_29ExternalOneByteStringResourceE(%"class.v8::Isolate"*, %"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN14proxy_resolver12_GLOBAL__N_122V8ExternalASCIILiteralD0Ev(%"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v86String26ExternalStringResourceBase11IsCacheableEv(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v86String26ExternalStringResourceBase7DisposeEv(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %"class.v8::String::ExternalStringResourceBase"* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.v8::String::ExternalStringResourceBase"* %0 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %5 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %5, i64 1
  %7 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %6, align 8
  tail call void %7(%"class.v8::String::ExternalStringResourceBase"* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2v86String26ExternalStringResourceBase4LockEv(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2v86String26ExternalStringResourceBase6UnlockEv(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @_ZNK14proxy_resolver12_GLOBAL__N_122V8ExternalASCIILiteral4dataEv(%"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral", %"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK14proxy_resolver12_GLOBAL__N_122V8ExternalASCIILiteral6lengthEv(%"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral", %"class.proxy_resolver::(anonymous namespace)::V8ExternalASCIILiteral"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v86String26ExternalStringResourceBaseD2Ev(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i64 @_ZNK2v87Message13GetLineNumberENS_5LocalINS_7ContextEEE(%"class.v8::Message"*, %"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN14proxy_resolver12_GLOBAL__N_121V8ObjectToUTF16StringEN2v85LocalINS1_5ValueEEEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEPNS1_7IsolateE(%"class.v8::Value"*, %"class.std::__1::basic_string.26"* nocapture, %"class.v8::Isolate"*) unnamed_addr #0 {
  %4 = alloca %"class.v8::HandleScope", align 8
  %5 = alloca %"class.std::__1::basic_string.26", align 8
  %6 = icmp eq %"class.v8::Value"* %0, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %4, %"class.v8::Isolate"* %2) #14
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #14
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %0, %"class.v8::Context"* %10) #14
  %12 = icmp eq %"class.v8::String"* %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.std::__1::basic_string.26"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %11) #14, !noalias !28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #14, !alias.scope !28
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = add nuw nsw i32 %15, 1
  %19 = sext i32 %18 to i64
  %20 = call i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.26"* nonnull %5, i64 %19) #14
  %21 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* nonnull %11, %"class.v8::Isolate"* %2, i16* %20, i32 0, i32 %15, i32 0) #14
  br label %22

22:                                               ; preds = %13, %17
  %23 = bitcast %"class.std::__1::basic_string.26"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = bitcast %"class.std::__1::basic_string.26"* %1 to i8**
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %27, %22
  %31 = bitcast %"class.std::__1::basic_string.26"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %14, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  br label %32

32:                                               ; preds = %7, %30
  %33 = phi i1 [ true, %30 ], [ false, %7 ]
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  br label %34

34:                                               ; preds = %3, %32
  %35 = phi i1 [ %33, %32 ], [ false, %3 ]
  ret i1 %35
}

declare %"class.v8::String"* @_ZNK2v87Message3GetEv(%"class.v8::Message"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare i32 @_ZNK2v86String6LengthEv(%"class.v8::String"*) local_unnamed_addr #1

declare i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"*, %"class.v8::Isolate"*, i16*, i32, i32, i32) local_unnamed_addr #1

declare i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.26"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.26"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.26"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #16
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.26"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.26"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #16
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #15
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !31
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !31
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !34, !noalias !31
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !34, !noalias !31
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !31
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !31
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !34, !noalias !31
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !34, !noalias !31
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !31
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !31
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !34, !noalias !31
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !34, !noalias !31
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !31
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !31
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !34, !noalias !31
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !34, !noalias !31
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !36

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !31
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !31
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !34, !noalias !31
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !34, !noalias !31
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !37

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !38

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !39

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !40

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !41

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !42

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !44
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !44
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !47, !noalias !44
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !47, !noalias !44
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !44
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !44
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !47, !noalias !44
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !47, !noalias !44
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !44
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !44
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !47, !noalias !44
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !47, !noalias !44
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !44
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !44
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !47, !noalias !44
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !47, !noalias !44
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !49

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !44
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !44
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !47, !noalias !44
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !47, !noalias !44
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !50

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !51

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !52

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #15
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.26"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN3gin13V8Initializer14LoadV8SnapshotENS0_18V8SnapshotFileTypeE(i32) local_unnamed_addr #1

declare void @_ZN2v82V818SetFlagsFromStringEPKcm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3gin13IsolateHolder10InitializeENS0_10ScriptModeEPN2v811ArrayBuffer9AllocatorEPKl(i32, %"class.v8::ArrayBuffer::Allocator"*, i64*) local_unnamed_addr #1

declare %"class.gin::ArrayBufferAllocator"* @_ZN3gin20ArrayBufferAllocator14SharedInstanceEv() local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr.70* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

declare void @_ZN3gin13IsolateHolderC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS0_10AccessModeENS0_11IsolateTypeE(%"class.gin::IsolateHolder"*, %"class.base::SingleThreadTaskRunner"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gin13IsolateHolderD1Ev(%"class.gin::IsolateHolder"*) unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

declare %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"*, i8*) local_unnamed_addr #1

declare %"class.v8::ObjectTemplate"* @_ZN2v814ObjectTemplate3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #1

declare %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, %"class.v8::Signature"*, i32, i32, i32, %"class.v8::CFunction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context13AlertCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.26", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 4
  %6 = bitcast i64* %5 to %"class.v8::External"*
  %7 = tail call i8* @_ZNK2v88External5ValueEv(%"class.v8::External"* %6) #14
  %8 = bitcast %"class.std::__1::basic_string.26"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = call dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.26"* nonnull %2, i16* getelementptr inbounds ([10 x i16], [10 x i16]* @.str.15, i64 0, i64 0)) #14
  br label %34

14:                                               ; preds = %1
  %15 = icmp sgt i32 %10, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %14
  %17 = load i64*, i64** %3, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 160
  %21 = inttoptr i64 %20 to %"class.v8::Value"*
  br label %27

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %24 = bitcast i64** %23 to %"class.v8::Value"**
  %25 = load %"class.v8::Value"*, %"class.v8::Value"** %24, align 8
  %26 = load i64*, i64** %3, align 8
  br label %27

27:                                               ; preds = %16, %22
  %28 = phi i64* [ %17, %16 ], [ %26, %22 ]
  %29 = phi %"class.v8::Value"* [ %21, %16 ], [ %25, %22 ]
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = bitcast i64* %30 to %"class.v8::Isolate"**
  %32 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %31, align 8
  %33 = call fastcc zeroext i1 @_ZN14proxy_resolver12_GLOBAL__N_121V8ObjectToUTF16StringEN2v85LocalINS1_5ValueEEEPNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEPNS1_7IsolateE(%"class.v8::Value"* %29, %"class.std::__1::basic_string.26"* nonnull %2, %"class.v8::Isolate"* %32)
  br i1 %33, label %34, label %42

34:                                               ; preds = %27, %12
  %35 = getelementptr inbounds i8, i8* %7, i64 40
  %36 = bitcast i8* %35 to %"class.proxy_resolver::ProxyResolverV8::JSBindings"**
  %37 = load %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %36, align 8
  %38 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %37 to void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string.26"*)***
  %39 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string.26"*)**, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string.26"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string.26"*)** %39, i64 1
  %41 = load void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string.26"*)*, void (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string.26"*)** %40, align 8
  call void %41(%"class.proxy_resolver::ProxyResolverV8::JSBindings"* %37, %"class.std::__1::basic_string.26"* nonnull dereferenceable(24) %2) #14
  br label %42

42:                                               ; preds = %27, %34
  %43 = bitcast %"class.std::__1::basic_string.26"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = bitcast %"class.std::__1::basic_string.26"* %2 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #15
  br label %50

50:                                               ; preds = %42, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  ret void
}

declare void @_ZN2v816FunctionTemplate15RemovePrototypeEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #1

declare void @_ZN2v88Template3SetENS_5LocalINS_4NameEEENS1_INS_4DataEEENS_17PropertyAttributeE(%"class.v8::Template"*, %"class.v8::Name"*, %"class.v8::Data"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context19MyIpAddressCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  tail call void @_ZN14proxy_resolver15ProxyResolverV87Context24DnsResolveCallbackHelperERKN2v820FunctionCallbackInfoINS2_5ValueEEEN3net24ProxyResolveDnsOperationE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i32 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context18DnsResolveCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  tail call void @_ZN14proxy_resolver15ProxyResolverV87Context24DnsResolveCallbackHelperERKN2v820FunctionCallbackInfoINS2_5ValueEEEN3net24ProxyResolveDnsOperationE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context23IsPlainHostNameCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %2 = alloca %"class.net::IPAddress", align 1
  %3 = alloca %"class.base::BasicStringPiece.80", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %30, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %10 = bitcast i64** %9 to %"class.v8::Value"**
  %11 = load %"class.v8::Value"*, %"class.v8::Value"** %10, align 8
  %12 = icmp eq %"class.v8::Value"* %11, null
  %13 = bitcast %"class.v8::Value"* %11 to %"class.v8::String"*
  br i1 %12, label %30, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.v8::Value"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 3
  %18 = icmp eq i64 %17, 1
  br i1 %18, label %19, label %30

19:                                               ; preds = %14
  %20 = add i64 %16, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i64 %16, -4294967296
  %24 = zext i32 %22 to i64
  %25 = or i64 %23, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load i16, i16* %27, align 2
  %29 = icmp ult i16 %28, 64
  br i1 %29, label %44, label %30

30:                                               ; preds = %14, %1, %8, %19
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = tail call i8* @_Znwm(i64 32) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i64 27, i1 false) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 27
  store i8 0, i8* %37, align 1
  %38 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %35, i8* nonnull %36, i32 0, i32 27) #14
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %30
  call void @_ZN2v82V812ToLocalEmptyEv() #14
  br label %41

41:                                               ; preds = %30, %40
  %42 = call %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"* %38) #14
  %43 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %35, %"class.v8::Value"* %42) #14
  call void @_ZdlPv(i8* nonnull %36) #15
  br label %98

44:                                               ; preds = %19
  %45 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #14
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  %50 = load i64*, i64** %48, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 1
  %52 = bitcast i64* %51 to %"class.v8::Isolate"**
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = tail call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %13) #14, !noalias !53
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #14, !alias.scope !53
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %44
  %57 = add nuw nsw i32 %54, 1
  %58 = sext i32 %57 to i64
  %59 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* nonnull %4, i64 %58) #14
  %60 = call i32 @_ZNK2v86String9WriteUtf8EPNS_7IsolateEPciPii(%"class.v8::String"* nonnull %13, %"class.v8::Isolate"* %53, i8* %59, i32 -1, i32* null, i32 0) #14
  br label %61

61:                                               ; preds = %44, %56
  %62 = load i64*, i64** %48, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 3
  %64 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* nonnull %4, i8 signext 46, i64 0) #14
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %84

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %2, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %69) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %69, i8 -86, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %2) #14
  %70 = bitcast %"class.base::BasicStringPiece.80"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #14
  %71 = getelementptr inbounds %"class.base::BasicStringPiece.80", %"class.base::BasicStringPiece.80"* %3, i64 0, i32 0
  %72 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = load i8*, i8** %46, align 8
  %77 = select i1 %75, i8* %76, i8* %45
  store i8* %77, i8** %71, align 8
  %78 = getelementptr inbounds %"class.base::BasicStringPiece.80", %"class.base::BasicStringPiece.80"* %3, i64 0, i32 1
  %79 = load i64, i64* %47, align 8
  %80 = zext i8 %74 to i64
  %81 = select i1 %75, i64 %79, i64 %80
  store i64 %81, i64* %78, align 8
  %82 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %2, %"class.base::BasicStringPiece.80"* nonnull dereferenceable(16) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #14
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %69) #14
  %83 = select i1 %82, i64 192, i64 184
  br label %84

84:                                               ; preds = %66, %68
  %85 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %66 ], [ %72, %68 ]
  %86 = phi i64 [ 192, %66 ], [ %83, %68 ]
  %87 = getelementptr inbounds i64, i64* %62, i64 1
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, %86
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %63, align 8
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %84
  %96 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %84, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #14
  br label %98

98:                                               ; preds = %97, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context20DnsResolveExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  tail call void @_ZN14proxy_resolver15ProxyResolverV87Context24DnsResolveCallbackHelperERKN2v820FunctionCallbackInfoINS2_5ValueEEEN3net24ProxyResolveDnsOperationE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context21MyIpAddressExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  tail call void @_ZN14proxy_resolver15ProxyResolverV87Context24DnsResolveCallbackHelperERKN2v820FunctionCallbackInfoINS2_5ValueEEEN3net24ProxyResolveDnsOperationE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i32 3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context25SortIpAddressListCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::__less.92", align 1
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::vector.81", align 8
  %5 = alloca %"class.net::IPAddress", align 1
  %6 = alloca %"class.base::StringTokenizerT", align 8
  %7 = alloca %"class.base::BasicStringPiece.80", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %61, label %16

16:                                               ; preds = %1
  %17 = icmp sgt i32 %14, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 160
  %24 = inttoptr i64 %23 to %"class.v8::Value"*
  br label %29

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %27 = bitcast i64** %26 to %"class.v8::Value"**
  %28 = load %"class.v8::Value"*, %"class.v8::Value"** %27, align 8
  br label %29

29:                                               ; preds = %18, %25
  %30 = phi %"class.v8::Value"* [ %24, %18 ], [ %28, %25 ]
  %31 = icmp eq %"class.v8::Value"* %30, null
  br i1 %31, label %61, label %32

32:                                               ; preds = %29
  br i1 %17, label %40, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 160
  %39 = inttoptr i64 %38 to %"class.v8::Value"*
  br label %44

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %42 = bitcast i64** %41 to %"class.v8::Value"**
  %43 = load %"class.v8::Value"*, %"class.v8::Value"** %42, align 8
  br label %44

44:                                               ; preds = %33, %40
  %45 = phi %"class.v8::Value"* [ %39, %33 ], [ %43, %40 ]
  %46 = bitcast %"class.v8::Value"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 3
  %49 = icmp eq i64 %48, 1
  br i1 %49, label %50, label %61

50:                                               ; preds = %44
  %51 = add i64 %47, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %47, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load i16, i16* %58, align 2
  %60 = icmp ult i16 %59, 64
  br i1 %60, label %70, label %61

61:                                               ; preds = %44, %1, %29, %50
  %62 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 3
  %65 = getelementptr inbounds i64, i64* %63, i64 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 176
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %64, align 8
  br label %739

70:                                               ; preds = %50
  %71 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #14
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %75 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 24, i1 false)
  %76 = load i64*, i64** %74, align 8
  %77 = getelementptr inbounds i64, i64* %76, i64 1
  %78 = bitcast i64* %77 to %"class.v8::Isolate"**
  %79 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %78, align 8
  br i1 %17, label %84, label %80

80:                                               ; preds = %70
  %81 = ptrtoint %"class.v8::Isolate"* %79 to i64
  %82 = add i64 %81, 160
  %83 = inttoptr i64 %82 to %"class.v8::Value"*
  br label %88

84:                                               ; preds = %70
  %85 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %86 = bitcast i64** %85 to %"class.v8::Value"**
  %87 = load %"class.v8::Value"*, %"class.v8::Value"** %86, align 8
  br label %88

88:                                               ; preds = %80, %84
  %89 = phi %"class.v8::Value"* [ %83, %80 ], [ %87, %84 ]
  %90 = bitcast %"class.v8::Value"* %89 to %"class.v8::String"*
  %91 = tail call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %90) #14, !noalias !56
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #14, !alias.scope !56
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %105

95:                                               ; preds = %88
  %96 = add nuw nsw i32 %91, 1
  %97 = sext i32 %96 to i64
  %98 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* nonnull %11, i64 %97) #14
  %99 = call i32 @_ZNK2v86String9WriteUtf8EPNS_7IsolateEPciPii(%"class.v8::String"* %90, %"class.v8::Isolate"* %79, i8* %98, i32 -1, i32* null, i32 0) #14
  %100 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = load i8*, i8** %72, align 8
  %104 = load i64, i64* %73, align 8
  br label %105

105:                                              ; preds = %93, %95
  %106 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %94, %93 ], [ %100, %95 ]
  %107 = phi i64 [ 0, %93 ], [ %104, %95 ]
  %108 = phi i8* [ null, %93 ], [ %103, %95 ]
  %109 = phi i8 [ 0, %93 ], [ %102, %95 ]
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %111 = icmp slt i8 %109, 0
  %112 = select i1 %111, i8* %108, i8* %71
  %113 = zext i8 %109 to i64
  %114 = select i1 %111, i64 %107, i64 %113
  %115 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %112, i64 %114) #14
  br i1 %115, label %124, label %116

116:                                              ; preds = %105
  %117 = load i64*, i64** %74, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 3
  %119 = getelementptr inbounds i64, i64* %117, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 176
  %122 = inttoptr i64 %121 to i64*
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %118, align 8
  br label %733

124:                                              ; preds = %105
  %125 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #14
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 24, i1 false) #14
  %128 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  store i8 0, i8* %125, align 8
  store i8 0, i8* %129, align 1
  %130 = load i8, i8* %110, align 1
  %131 = load i8*, i8** %72, align 8
  %132 = load i64, i64* %73, align 8
  %133 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #14
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 24, i1 false) #14
  %136 = icmp slt i8 %130, 0
  %137 = select i1 %136, i8* %131, i8* %71
  %138 = zext i8 %130 to i64
  %139 = select i1 %136, i64 %132, i64 %138
  %140 = call zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %137, i64 %139, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i64 2, %"class.std::__1::basic_string"* nonnull %3) #14
  %141 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = load i64, i64* %135, align 8
  %146 = zext i8 %143 to i64
  %147 = select i1 %144, i64 %145, i64 %146
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %694, label %149

149:                                              ; preds = %124
  %150 = bitcast %"class.std::__1::vector.81"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #14
  %151 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %4, i64 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %4, i64 0, i32 0, i32 1
  %153 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 24, i1 false) #14
  %154 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %5, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %154) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %154, i8 -86, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %5) #14
  %155 = bitcast %"class.base::StringTokenizerT"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %155) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 96, i1 false) #14
  %156 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 1, i32 0
  %158 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 2, i32 0
  %159 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 3, i32 0
  %160 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 4
  %161 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 5
  %162 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 0, i64 24, i1 false) #14
  %163 = load i8, i8* %142, align 1
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %134, align 8
  %166 = load i64, i64* %135, align 8
  %167 = zext i8 %163 to i64
  %168 = select i1 %164, i8* %165, i8* %133
  %169 = select i1 %164, i64 %166, i64 %167
  %170 = getelementptr inbounds i8, i8* %168, i64 %169
  store i8* %168, i8** %156, align 8
  store i8* %168, i8** %157, align 8
  store i8* %168, i8** %158, align 8
  store i8* %170, i8** %159, align 8
  %171 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  store i8 59, i8* %171, align 8
  %172 = getelementptr inbounds i8, i8* %155, i64 33
  store i8 0, i8* %172, align 1
  %173 = getelementptr inbounds i8, i8* %155, i64 55
  store i8 1, i8* %173, align 1
  %174 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 6
  store i32 0, i32* %174, align 8
  %175 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 7
  store i8 1, i8* %175, align 4
  %176 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 9
  store i32 0, i32* %176, align 8
  %177 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %180 = bitcast %"class.base::BasicStringPiece.80"* %7 to i8*
  %181 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::BasicStringPiece.80", %"class.base::BasicStringPiece.80"* %7, i64 0, i32 0
  %188 = getelementptr inbounds %"class.base::BasicStringPiece.80", %"class.base::BasicStringPiece.80"* %7, i64 0, i32 1
  %189 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9 to i8*
  %190 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %194 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9, i64 0, i32 0
  %197 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9, i64 0, i32 1
  %198 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %152 to i64*
  %199 = bitcast %"class.std::__1::vector.81"* %4 to i64*
  %200 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %153 to i64*
  %201 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %204

204:                                              ; preds = %582, %149
  %205 = phi i32 [ %585, %582 ], [ 0, %149 ]
  %206 = phi i64 [ %584, %582 ], [ 0, %149 ]
  %207 = phi i8 [ %583, %582 ], [ 0, %149 ]
  %208 = icmp slt i8 %207, 0
  %209 = zext i8 %207 to i64
  %210 = select i1 %208, i64 %206, i64 %209
  %211 = icmp eq i64 %210, 0
  %212 = icmp eq i32 %205, 0
  %213 = and i1 %212, %211
  br i1 %213, label %214, label %216

214:                                              ; preds = %204
  %215 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %6) #14
  br i1 %215, label %218, label %586

216:                                              ; preds = %204
  %217 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %6) #14
  br i1 %217, label %218, label %586

218:                                              ; preds = %216, %214
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #14
  %219 = load i8*, i8** %157, align 8, !noalias !59
  %220 = ptrtoint i8* %219 to i64
  %221 = load i8*, i8** %158, align 8, !noalias !59
  %222 = ptrtoint i8* %221 to i64
  %223 = sub i64 %222, %220
  %224 = icmp ugt i64 %223, -17
  br i1 %224, label %225, label %227

225:                                              ; preds = %218
  %226 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %226) #16
  unreachable

227:                                              ; preds = %218
  %228 = icmp ult i64 %223, 23
  br i1 %228, label %229, label %231

229:                                              ; preds = %227
  %230 = trunc i64 %223 to i8
  store i8 %230, i8* %186, align 1, !alias.scope !59
  br label %236

231:                                              ; preds = %227
  %232 = add nuw i64 %223, 16
  %233 = and i64 %232, -16
  %234 = call i8* @_Znwm(i64 %233) #15
  store i8* %234, i8** %182, align 8, !alias.scope !59
  %235 = or i64 %233, -9223372036854775808
  store i64 %235, i64* %183, align 8, !alias.scope !59
  store i64 %223, i64* %184, align 8, !alias.scope !59
  br label %236

236:                                              ; preds = %231, %229
  %237 = phi i8* [ %181, %229 ], [ %234, %231 ]
  %238 = icmp eq i8* %219, %221
  br i1 %238, label %341, label %239

239:                                              ; preds = %236
  %240 = ptrtoint i8* %221 to i64
  %241 = sub i64 %240, %220
  %242 = icmp ult i64 %241, 32
  br i1 %242, label %331, label %243

243:                                              ; preds = %239
  %244 = ptrtoint i8* %221 to i64
  %245 = sub i64 %244, %220
  %246 = getelementptr i8, i8* %237, i64 %245
  %247 = icmp ult i8* %237, %221
  %248 = icmp ult i8* %219, %246
  %249 = and i1 %247, %248
  br i1 %249, label %331, label %250

250:                                              ; preds = %243
  %251 = and i64 %241, -32
  %252 = getelementptr i8, i8* %237, i64 %251
  %253 = getelementptr i8, i8* %219, i64 %251
  %254 = add i64 %251, -32
  %255 = lshr exact i64 %254, 5
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 3
  %258 = icmp ult i64 %254, 96
  br i1 %258, label %310, label %259

259:                                              ; preds = %250
  %260 = sub nsw i64 %256, %257
  br label %261

261:                                              ; preds = %261, %259
  %262 = phi i64 [ 0, %259 ], [ %307, %261 ]
  %263 = phi i64 [ %260, %259 ], [ %308, %261 ]
  %264 = getelementptr i8, i8* %237, i64 %262
  %265 = getelementptr i8, i8* %219, i64 %262
  %266 = bitcast i8* %265 to <16 x i8>*
  %267 = load <16 x i8>, <16 x i8>* %266, align 1, !alias.scope !62
  %268 = getelementptr i8, i8* %265, i64 16
  %269 = bitcast i8* %268 to <16 x i8>*
  %270 = load <16 x i8>, <16 x i8>* %269, align 1, !alias.scope !62
  %271 = bitcast i8* %264 to <16 x i8>*
  store <16 x i8> %267, <16 x i8>* %271, align 1, !alias.scope !65, !noalias !62
  %272 = getelementptr i8, i8* %264, i64 16
  %273 = bitcast i8* %272 to <16 x i8>*
  store <16 x i8> %270, <16 x i8>* %273, align 1, !alias.scope !65, !noalias !62
  %274 = or i64 %262, 32
  %275 = getelementptr i8, i8* %237, i64 %274
  %276 = getelementptr i8, i8* %219, i64 %274
  %277 = bitcast i8* %276 to <16 x i8>*
  %278 = load <16 x i8>, <16 x i8>* %277, align 1, !alias.scope !62
  %279 = getelementptr i8, i8* %276, i64 16
  %280 = bitcast i8* %279 to <16 x i8>*
  %281 = load <16 x i8>, <16 x i8>* %280, align 1, !alias.scope !62
  %282 = bitcast i8* %275 to <16 x i8>*
  store <16 x i8> %278, <16 x i8>* %282, align 1, !alias.scope !65, !noalias !62
  %283 = getelementptr i8, i8* %275, i64 16
  %284 = bitcast i8* %283 to <16 x i8>*
  store <16 x i8> %281, <16 x i8>* %284, align 1, !alias.scope !65, !noalias !62
  %285 = or i64 %262, 64
  %286 = getelementptr i8, i8* %237, i64 %285
  %287 = getelementptr i8, i8* %219, i64 %285
  %288 = bitcast i8* %287 to <16 x i8>*
  %289 = load <16 x i8>, <16 x i8>* %288, align 1, !alias.scope !62
  %290 = getelementptr i8, i8* %287, i64 16
  %291 = bitcast i8* %290 to <16 x i8>*
  %292 = load <16 x i8>, <16 x i8>* %291, align 1, !alias.scope !62
  %293 = bitcast i8* %286 to <16 x i8>*
  store <16 x i8> %289, <16 x i8>* %293, align 1, !alias.scope !65, !noalias !62
  %294 = getelementptr i8, i8* %286, i64 16
  %295 = bitcast i8* %294 to <16 x i8>*
  store <16 x i8> %292, <16 x i8>* %295, align 1, !alias.scope !65, !noalias !62
  %296 = or i64 %262, 96
  %297 = getelementptr i8, i8* %237, i64 %296
  %298 = getelementptr i8, i8* %219, i64 %296
  %299 = bitcast i8* %298 to <16 x i8>*
  %300 = load <16 x i8>, <16 x i8>* %299, align 1, !alias.scope !62
  %301 = getelementptr i8, i8* %298, i64 16
  %302 = bitcast i8* %301 to <16 x i8>*
  %303 = load <16 x i8>, <16 x i8>* %302, align 1, !alias.scope !62
  %304 = bitcast i8* %297 to <16 x i8>*
  store <16 x i8> %300, <16 x i8>* %304, align 1, !alias.scope !65, !noalias !62
  %305 = getelementptr i8, i8* %297, i64 16
  %306 = bitcast i8* %305 to <16 x i8>*
  store <16 x i8> %303, <16 x i8>* %306, align 1, !alias.scope !65, !noalias !62
  %307 = add i64 %262, 128
  %308 = add i64 %263, -4
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %261, !llvm.loop !67

310:                                              ; preds = %261, %250
  %311 = phi i64 [ 0, %250 ], [ %307, %261 ]
  %312 = icmp eq i64 %257, 0
  br i1 %312, label %329, label %313

313:                                              ; preds = %310, %313
  %314 = phi i64 [ %326, %313 ], [ %311, %310 ]
  %315 = phi i64 [ %327, %313 ], [ %257, %310 ]
  %316 = getelementptr i8, i8* %237, i64 %314
  %317 = getelementptr i8, i8* %219, i64 %314
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !62
  %320 = getelementptr i8, i8* %317, i64 16
  %321 = bitcast i8* %320 to <16 x i8>*
  %322 = load <16 x i8>, <16 x i8>* %321, align 1, !alias.scope !62
  %323 = bitcast i8* %316 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %323, align 1, !alias.scope !65, !noalias !62
  %324 = getelementptr i8, i8* %316, i64 16
  %325 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %322, <16 x i8>* %325, align 1, !alias.scope !65, !noalias !62
  %326 = add i64 %314, 32
  %327 = add i64 %315, -1
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %313, !llvm.loop !68

329:                                              ; preds = %313, %310
  %330 = icmp eq i64 %241, %251
  br i1 %330, label %341, label %331

331:                                              ; preds = %329, %243, %239
  %332 = phi i8* [ %237, %243 ], [ %237, %239 ], [ %252, %329 ]
  %333 = phi i8* [ %219, %243 ], [ %219, %239 ], [ %253, %329 ]
  br label %334

334:                                              ; preds = %331, %334
  %335 = phi i8* [ %339, %334 ], [ %332, %331 ]
  %336 = phi i8* [ %338, %334 ], [ %333, %331 ]
  %337 = load i8, i8* %336, align 1
  store i8 %337, i8* %335, align 1
  %338 = getelementptr inbounds i8, i8* %336, i64 1
  %339 = getelementptr inbounds i8, i8* %335, i64 1
  %340 = icmp eq i8* %338, %221
  br i1 %340, label %341, label %334, !llvm.loop !69

341:                                              ; preds = %334, %329, %236
  %342 = phi i8* [ %237, %236 ], [ %252, %329 ], [ %339, %334 ]
  store i8 0, i8* %342, align 1
  %343 = load i8, i8* %186, align 1
  %344 = icmp slt i8 %343, 0
  %345 = load i8*, i8** %182, align 8
  %346 = select i1 %344, i8* %345, i8* %181
  store i8* %346, i8** %187, align 8
  %347 = load i64, i64* %184, align 8
  %348 = zext i8 %343 to i64
  %349 = select i1 %344, i64 %347, i64 %348
  store i64 %349, i64* %188, align 8
  %350 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %5, %"class.base::BasicStringPiece.80"* nonnull dereferenceable(16) %7) #14
  %351 = load i8, i8* %186, align 1
  %352 = icmp slt i8 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %341
  %354 = load i8*, i8** %182, align 8
  call void @_ZdlPv(i8* %354) #15
  br label %355

355:                                              ; preds = %353, %341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #14
  br i1 %350, label %356, label %652

356:                                              ; preds = %355
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %189) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #14
  %357 = load i8*, i8** %157, align 8, !noalias !70
  %358 = ptrtoint i8* %357 to i64
  %359 = load i8*, i8** %158, align 8, !noalias !70
  %360 = ptrtoint i8* %359 to i64
  %361 = sub i64 %360, %358
  %362 = icmp ugt i64 %361, -17
  br i1 %362, label %363, label %365

363:                                              ; preds = %356
  %364 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %364) #16
  unreachable

365:                                              ; preds = %356
  %366 = icmp ult i64 %361, 23
  br i1 %366, label %367, label %369

367:                                              ; preds = %365
  %368 = trunc i64 %361 to i8
  store i8 %368, i8* %195, align 1, !alias.scope !70
  br label %374

369:                                              ; preds = %365
  %370 = add nuw i64 %361, 16
  %371 = and i64 %370, -16
  %372 = call i8* @_Znwm(i64 %371) #15
  store i8* %372, i8** %191, align 8, !alias.scope !70
  %373 = or i64 %371, -9223372036854775808
  store i64 %373, i64* %192, align 8, !alias.scope !70
  store i64 %361, i64* %193, align 8, !alias.scope !70
  br label %374

374:                                              ; preds = %369, %367
  %375 = phi i8* [ %190, %367 ], [ %372, %369 ]
  %376 = icmp eq i8* %357, %359
  br i1 %376, label %479, label %377

377:                                              ; preds = %374
  %378 = ptrtoint i8* %359 to i64
  %379 = sub i64 %378, %358
  %380 = icmp ult i64 %379, 32
  br i1 %380, label %469, label %381

381:                                              ; preds = %377
  %382 = ptrtoint i8* %359 to i64
  %383 = sub i64 %382, %358
  %384 = getelementptr i8, i8* %375, i64 %383
  %385 = icmp ult i8* %375, %359
  %386 = icmp ult i8* %357, %384
  %387 = and i1 %385, %386
  br i1 %387, label %469, label %388

388:                                              ; preds = %381
  %389 = and i64 %379, -32
  %390 = getelementptr i8, i8* %375, i64 %389
  %391 = getelementptr i8, i8* %357, i64 %389
  %392 = add i64 %389, -32
  %393 = lshr exact i64 %392, 5
  %394 = add nuw nsw i64 %393, 1
  %395 = and i64 %394, 3
  %396 = icmp ult i64 %392, 96
  br i1 %396, label %448, label %397

397:                                              ; preds = %388
  %398 = sub nsw i64 %394, %395
  br label %399

399:                                              ; preds = %399, %397
  %400 = phi i64 [ 0, %397 ], [ %445, %399 ]
  %401 = phi i64 [ %398, %397 ], [ %446, %399 ]
  %402 = getelementptr i8, i8* %375, i64 %400
  %403 = getelementptr i8, i8* %357, i64 %400
  %404 = bitcast i8* %403 to <16 x i8>*
  %405 = load <16 x i8>, <16 x i8>* %404, align 1, !alias.scope !73
  %406 = getelementptr i8, i8* %403, i64 16
  %407 = bitcast i8* %406 to <16 x i8>*
  %408 = load <16 x i8>, <16 x i8>* %407, align 1, !alias.scope !73
  %409 = bitcast i8* %402 to <16 x i8>*
  store <16 x i8> %405, <16 x i8>* %409, align 1, !alias.scope !76, !noalias !73
  %410 = getelementptr i8, i8* %402, i64 16
  %411 = bitcast i8* %410 to <16 x i8>*
  store <16 x i8> %408, <16 x i8>* %411, align 1, !alias.scope !76, !noalias !73
  %412 = or i64 %400, 32
  %413 = getelementptr i8, i8* %375, i64 %412
  %414 = getelementptr i8, i8* %357, i64 %412
  %415 = bitcast i8* %414 to <16 x i8>*
  %416 = load <16 x i8>, <16 x i8>* %415, align 1, !alias.scope !73
  %417 = getelementptr i8, i8* %414, i64 16
  %418 = bitcast i8* %417 to <16 x i8>*
  %419 = load <16 x i8>, <16 x i8>* %418, align 1, !alias.scope !73
  %420 = bitcast i8* %413 to <16 x i8>*
  store <16 x i8> %416, <16 x i8>* %420, align 1, !alias.scope !76, !noalias !73
  %421 = getelementptr i8, i8* %413, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  store <16 x i8> %419, <16 x i8>* %422, align 1, !alias.scope !76, !noalias !73
  %423 = or i64 %400, 64
  %424 = getelementptr i8, i8* %375, i64 %423
  %425 = getelementptr i8, i8* %357, i64 %423
  %426 = bitcast i8* %425 to <16 x i8>*
  %427 = load <16 x i8>, <16 x i8>* %426, align 1, !alias.scope !73
  %428 = getelementptr i8, i8* %425, i64 16
  %429 = bitcast i8* %428 to <16 x i8>*
  %430 = load <16 x i8>, <16 x i8>* %429, align 1, !alias.scope !73
  %431 = bitcast i8* %424 to <16 x i8>*
  store <16 x i8> %427, <16 x i8>* %431, align 1, !alias.scope !76, !noalias !73
  %432 = getelementptr i8, i8* %424, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  store <16 x i8> %430, <16 x i8>* %433, align 1, !alias.scope !76, !noalias !73
  %434 = or i64 %400, 96
  %435 = getelementptr i8, i8* %375, i64 %434
  %436 = getelementptr i8, i8* %357, i64 %434
  %437 = bitcast i8* %436 to <16 x i8>*
  %438 = load <16 x i8>, <16 x i8>* %437, align 1, !alias.scope !73
  %439 = getelementptr i8, i8* %436, i64 16
  %440 = bitcast i8* %439 to <16 x i8>*
  %441 = load <16 x i8>, <16 x i8>* %440, align 1, !alias.scope !73
  %442 = bitcast i8* %435 to <16 x i8>*
  store <16 x i8> %438, <16 x i8>* %442, align 1, !alias.scope !76, !noalias !73
  %443 = getelementptr i8, i8* %435, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  store <16 x i8> %441, <16 x i8>* %444, align 1, !alias.scope !76, !noalias !73
  %445 = add i64 %400, 128
  %446 = add i64 %401, -4
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %448, label %399, !llvm.loop !78

448:                                              ; preds = %399, %388
  %449 = phi i64 [ 0, %388 ], [ %445, %399 ]
  %450 = icmp eq i64 %395, 0
  br i1 %450, label %467, label %451

451:                                              ; preds = %448, %451
  %452 = phi i64 [ %464, %451 ], [ %449, %448 ]
  %453 = phi i64 [ %465, %451 ], [ %395, %448 ]
  %454 = getelementptr i8, i8* %375, i64 %452
  %455 = getelementptr i8, i8* %357, i64 %452
  %456 = bitcast i8* %455 to <16 x i8>*
  %457 = load <16 x i8>, <16 x i8>* %456, align 1, !alias.scope !73
  %458 = getelementptr i8, i8* %455, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  %460 = load <16 x i8>, <16 x i8>* %459, align 1, !alias.scope !73
  %461 = bitcast i8* %454 to <16 x i8>*
  store <16 x i8> %457, <16 x i8>* %461, align 1, !alias.scope !76, !noalias !73
  %462 = getelementptr i8, i8* %454, i64 16
  %463 = bitcast i8* %462 to <16 x i8>*
  store <16 x i8> %460, <16 x i8>* %463, align 1, !alias.scope !76, !noalias !73
  %464 = add i64 %452, 32
  %465 = add i64 %453, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %451, !llvm.loop !79

467:                                              ; preds = %451, %448
  %468 = icmp eq i64 %379, %389
  br i1 %468, label %479, label %469

469:                                              ; preds = %467, %381, %377
  %470 = phi i8* [ %375, %381 ], [ %375, %377 ], [ %390, %467 ]
  %471 = phi i8* [ %357, %381 ], [ %357, %377 ], [ %391, %467 ]
  br label %472

472:                                              ; preds = %469, %472
  %473 = phi i8* [ %477, %472 ], [ %470, %469 ]
  %474 = phi i8* [ %476, %472 ], [ %471, %469 ]
  %475 = load i8, i8* %474, align 1
  store i8 %475, i8* %473, align 1
  %476 = getelementptr inbounds i8, i8* %474, i64 1
  %477 = getelementptr inbounds i8, i8* %473, i64 1
  %478 = icmp eq i8* %476, %359
  br i1 %478, label %479, label %472, !llvm.loop !80

479:                                              ; preds = %472, %467, %374
  %480 = phi i8* [ %375, %374 ], [ %390, %467 ], [ %477, %472 ]
  store i8 0, i8* %480, align 1
  %481 = load i8, i8* %195, align 1
  %482 = icmp slt i8 %481, 0
  br i1 %482, label %484, label %483

483:                                              ; preds = %479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %189, i8* nonnull align 8 %190, i64 24, i1 false) #14
  br label %487

484:                                              ; preds = %479
  %485 = load i8*, i8** %191, align 8
  %486 = load i64, i64* %193, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %196, i8* %485, i64 %486) #14
  br label %487

487:                                              ; preds = %484, %483
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %197, %"class.net::IPAddress"* nonnull dereferenceable(17) %5) #14
  %488 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %152, align 8
  %489 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %153, align 8
  %490 = icmp ult %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %488, %489
  %491 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %489 to i64
  br i1 %490, label %492, label %497

492:                                              ; preds = %487
  %493 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %488 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %493, i8* nonnull align 8 %189, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 0, i64 24, i1 false) #14
  %494 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %488, i64 0, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %494, %"class.net::IPAddress"* dereferenceable(17) %197) #14
  %495 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %488, i64 1
  %496 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %495 to i64
  store i64 %496, i64* %198, align 8
  br label %572

497:                                              ; preds = %487
  %498 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %488 to i64
  %499 = load i64, i64* %199, align 8
  %500 = sub i64 %498, %499
  %501 = sdiv exact i64 %500, 48
  %502 = add nsw i64 %501, 1
  %503 = icmp ugt i64 %502, 384307168202282325
  br i1 %503, label %504, label %506

504:                                              ; preds = %497
  %505 = bitcast %"class.std::__1::vector.81"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %505) #16
  unreachable

506:                                              ; preds = %497
  %507 = sub i64 %491, %499
  %508 = sdiv exact i64 %507, 48
  %509 = icmp ult i64 %508, 192153584101141162
  br i1 %509, label %510, label %515

510:                                              ; preds = %506
  %511 = shl nsw i64 %508, 1
  %512 = icmp ult i64 %511, %502
  %513 = select i1 %512, i64 %502, i64 %511
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %520, label %515

515:                                              ; preds = %510, %506
  %516 = phi i64 [ %513, %510 ], [ 384307168202282325, %506 ]
  %517 = mul i64 %516, 48
  %518 = call i8* @_Znwm(i64 %517) #15
  %519 = bitcast i8* %518 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  br label %520

520:                                              ; preds = %515, %510
  %521 = phi i64 [ %516, %515 ], [ 0, %510 ]
  %522 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %519, %515 ], [ null, %510 ]
  %523 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %522, i64 %501
  %524 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %522, i64 %521
  %525 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %524 to i64
  %526 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %523 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %526, i8* nonnull align 8 %189, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 0, i64 24, i1 false) #14
  %527 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %522, i64 %501, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %527, %"class.net::IPAddress"* dereferenceable(17) %197) #14
  %528 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %523, i64 1
  %529 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %528 to i64
  %530 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %151, align 8
  %531 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %152, align 8
  %532 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %531, %530
  br i1 %532, label %533, label %535

533:                                              ; preds = %520
  %534 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %530 to i64
  br label %548

535:                                              ; preds = %520, %535
  %536 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %538, %535 ], [ %523, %520 ]
  %537 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %539, %535 ], [ %531, %520 ]
  %538 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %536, i64 -1
  %539 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %537, i64 -1
  %540 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %538 to i8*
  %541 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %540, i8* align 8 %541, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %541, i8 0, i64 24, i1 false) #14
  %542 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %536, i64 -1, i32 1
  %543 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %537, i64 -1, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %542, %"class.net::IPAddress"* dereferenceable(17) %543) #14
  %544 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %539, %530
  br i1 %544, label %545, label %535

545:                                              ; preds = %535
  %546 = load i64, i64* %199, align 8
  %547 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %152, align 8
  br label %548

548:                                              ; preds = %545, %533
  %549 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %530, %533 ], [ %547, %545 ]
  %550 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %523, %533 ], [ %538, %545 ]
  %551 = phi i64 [ %534, %533 ], [ %546, %545 ]
  %552 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %550 to i64
  store i64 %552, i64* %199, align 8
  store i64 %529, i64* %198, align 8
  store i64 %525, i64* %200, align 8
  %553 = inttoptr i64 %551 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %554 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %549, %553
  br i1 %554, label %568, label %555

555:                                              ; preds = %548, %566
  %556 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %557, %566 ], [ %549, %548 ]
  %557 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %556, i64 -1
  %558 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %556, i64 -1, i32 1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %558) #14
  %559 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %557 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %560 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %559, i64 0, i32 1, i32 0
  %561 = load i8, i8* %560, align 1
  %562 = icmp slt i8 %561, 0
  br i1 %562, label %563, label %566

563:                                              ; preds = %555
  %564 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %557, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = load i8*, i8** %564, align 8
  call void @_ZdlPv(i8* %565) #15
  br label %566

566:                                              ; preds = %563, %555
  %567 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %557, %553
  br i1 %567, label %568, label %555

568:                                              ; preds = %566, %548
  %569 = icmp eq i64 %551, 0
  br i1 %569, label %572, label %570

570:                                              ; preds = %568
  %571 = inttoptr i64 %551 to i8*
  call void @_ZdlPv(i8* %571) #15
  br label %572

572:                                              ; preds = %570, %568, %492
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %197) #14
  %573 = load i8, i8* %202, align 1
  %574 = icmp slt i8 %573, 0
  br i1 %574, label %575, label %577

575:                                              ; preds = %572
  %576 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %576) #15
  br label %577

577:                                              ; preds = %575, %572
  %578 = load i8, i8* %195, align 1
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %582

580:                                              ; preds = %577
  %581 = load i8*, i8** %191, align 8
  call void @_ZdlPv(i8* %581) #15
  br label %582

582:                                              ; preds = %580, %577
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %189) #14
  %583 = load i8, i8* %178, align 1
  %584 = load i64, i64* %179, align 8
  %585 = load i32, i32* %174, align 8
  br label %204

586:                                              ; preds = %216, %214
  %587 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %151, align 8
  %588 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %152, align 8
  %589 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %587, %588
  %590 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %588 to i64
  %591 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %587 to i64
  br i1 %589, label %652, label %592

592:                                              ; preds = %586
  %593 = sub i64 %590, %591
  %594 = sdiv exact i64 %593, 48
  %595 = icmp ugt i64 %594, 1
  br i1 %595, label %596, label %617

596:                                              ; preds = %592
  %597 = getelementptr inbounds %"struct.std::__1::__less.92", %"struct.std::__1::__less.92"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %597) #14
  %598 = icmp sgt i64 %593, 0
  br i1 %598, label %599, label %610

599:                                              ; preds = %596
  %600 = icmp slt i64 %594, 192153584101141162
  %601 = select i1 %600, i64 %594, i64 192153584101141162
  br label %602

602:                                              ; preds = %607, %599
  %603 = phi i64 [ %608, %607 ], [ %601, %599 ]
  %604 = mul i64 %603, 48
  %605 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %604, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #14
  %606 = icmp eq i8* %605, null
  br i1 %606, label %607, label %611

607:                                              ; preds = %602
  %608 = lshr i64 %603, 1
  %609 = icmp eq i64 %608, 0
  br i1 %609, label %610, label %602

610:                                              ; preds = %607, %596
  call fastcc void @_ZNSt3__113__stable_sortIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %587, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %588, %"struct.std::__1::__less.92"* nonnull dereferenceable(1) %2, i64 %594, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* null, i64 0) #14
  br label %613

611:                                              ; preds = %602
  %612 = bitcast i8* %605 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  call fastcc void @_ZNSt3__113__stable_sortIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %587, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %588, %"struct.std::__1::__less.92"* nonnull dereferenceable(1) %2, i64 %594, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* nonnull %612, i64 %603) #14
  call void @_ZdlPv(i8* nonnull %605) #15
  br label %613

613:                                              ; preds = %611, %610
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %597) #14
  %614 = load i64, i64* %198, align 8
  %615 = load i64, i64* %199, align 8
  %616 = inttoptr i64 %615 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  br label %617

617:                                              ; preds = %613, %592
  %618 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %616, %613 ], [ %587, %592 ]
  %619 = phi i64 [ %615, %613 ], [ %591, %592 ]
  %620 = phi i64 [ %614, %613 ], [ %590, %592 ]
  %621 = icmp eq i64 %620, %619
  br i1 %621, label %652, label %622

622:                                              ; preds = %617, %629
  %623 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %651, %629 ], [ %618, %617 ]
  %624 = phi i64 [ %645, %629 ], [ 0, %617 ]
  %625 = icmp eq i64 %624, 0
  br i1 %625, label %629, label %626

626:                                              ; preds = %622
  %627 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #14
  %628 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %151, align 8
  br label %629

629:                                              ; preds = %626, %622
  %630 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %623, %622 ], [ %628, %626 ]
  %631 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %630, i64 %624, i32 0
  %632 = bitcast %"class.std::__1::basic_string"* %631 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %633 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %632, i64 0, i32 1, i32 0
  %634 = load i8, i8* %633, align 1
  %635 = icmp slt i8 %634, 0
  %636 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %631, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %637 = load i8*, i8** %636, align 8
  %638 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %630, i64 %624, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %639 = load i64, i64* %638, align 8
  %640 = bitcast %"class.std::__1::basic_string"* %631 to i8*
  %641 = zext i8 %634 to i64
  %642 = select i1 %635, i8* %637, i8* %640
  %643 = select i1 %635, i64 %639, i64 %641
  %644 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %642, i64 %643) #14
  %645 = add nuw i64 %624, 1
  %646 = load i64, i64* %198, align 8
  %647 = load i64, i64* %199, align 8
  %648 = sub i64 %646, %647
  %649 = sdiv exact i64 %648, 48
  %650 = icmp ult i64 %645, %649
  %651 = inttoptr i64 %647 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  br i1 %650, label %622, label %652

652:                                              ; preds = %355, %629, %617, %586
  %653 = phi i1 [ false, %586 ], [ true, %617 ], [ true, %629 ], [ false, %355 ]
  %654 = load i8, i8* %178, align 1
  %655 = icmp slt i8 %654, 0
  br i1 %655, label %656, label %659

656:                                              ; preds = %652
  %657 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %658 = load i8*, i8** %657, align 8
  call void @_ZdlPv(i8* %658) #15
  br label %659

659:                                              ; preds = %656, %652
  %660 = bitcast %"class.std::__1::basic_string"* %160 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %661 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %660, i64 0, i32 1, i32 0
  %662 = load i8, i8* %661, align 1
  %663 = icmp slt i8 %662, 0
  br i1 %663, label %664, label %667

664:                                              ; preds = %659
  %665 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %666 = load i8*, i8** %665, align 8
  call void @_ZdlPv(i8* %666) #15
  br label %667

667:                                              ; preds = %664, %659
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %155) #14
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %154) #14
  %668 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %151, align 8
  %669 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %668, null
  br i1 %669, label %692, label %670

670:                                              ; preds = %667
  %671 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %668 to i8*
  %672 = load %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %152, align 8
  %673 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %672, %668
  br i1 %673, label %690, label %674

674:                                              ; preds = %670, %685
  %675 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %676, %685 ], [ %672, %670 ]
  %676 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %675, i64 -1
  %677 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %675, i64 -1, i32 1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %677) #14
  %678 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %676 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %679 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %678, i64 0, i32 1, i32 0
  %680 = load i8, i8* %679, align 1
  %681 = icmp slt i8 %680, 0
  br i1 %681, label %682, label %685

682:                                              ; preds = %674
  %683 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %676, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = load i8*, i8** %683, align 8
  call void @_ZdlPv(i8* %684) #15
  br label %685

685:                                              ; preds = %682, %674
  %686 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %676, %668
  br i1 %686, label %687, label %674

687:                                              ; preds = %685
  %688 = bitcast %"class.std::__1::vector.81"* %4 to i8**
  %689 = load i8*, i8** %688, align 8
  br label %690

690:                                              ; preds = %687, %670
  %691 = phi i8* [ %689, %687 ], [ %671, %670 ]
  store %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %668, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"** %152, align 8
  call void @_ZdlPv(i8* %691) #15
  br label %692

692:                                              ; preds = %690, %667
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #14
  %693 = load i8, i8* %142, align 1
  br label %694

694:                                              ; preds = %692, %124
  %695 = phi i8 [ %693, %692 ], [ %143, %124 ]
  %696 = phi i1 [ %653, %692 ], [ false, %124 ]
  %697 = icmp slt i8 %695, 0
  br i1 %697, label %698, label %700

698:                                              ; preds = %694
  %699 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %699) #15
  br label %700

700:                                              ; preds = %694, %698
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #14
  %701 = load i64*, i64** %74, align 8
  %702 = getelementptr inbounds i64, i64* %701, i64 3
  %703 = getelementptr inbounds i64, i64* %701, i64 1
  br i1 %696, label %708, label %704

704:                                              ; preds = %700
  %705 = load i64, i64* %703, align 8
  %706 = add i64 %705, 192
  %707 = inttoptr i64 %706 to i64*
  br label %725

708:                                              ; preds = %700
  %709 = bitcast i64* %703 to %"class.v8::Isolate"**
  %710 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %709, align 8
  %711 = load i8, i8* %129, align 1
  %712 = icmp slt i8 %711, 0
  %713 = load i8*, i8** %126, align 8
  %714 = load i64, i64* %127, align 8
  %715 = zext i8 %711 to i64
  %716 = select i1 %712, i8* %713, i8* %125
  %717 = select i1 %712, i64 %714, i64 %715
  %718 = trunc i64 %717 to i32
  %719 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %710, i8* %716, i32 0, i32 %718) #14
  %720 = icmp eq %"class.v8::String"* %719, null
  br i1 %720, label %721, label %723, !prof !2

721:                                              ; preds = %708
  call void @_ZN2v82V812ToLocalEmptyEv() #14
  %722 = getelementptr inbounds i64, i64* %701, i64 2
  br label %725

723:                                              ; preds = %708
  %724 = bitcast %"class.v8::String"* %719 to i64*
  br label %725

725:                                              ; preds = %723, %721, %704
  %726 = phi i64* [ %724, %723 ], [ %722, %721 ], [ %707, %704 ]
  %727 = load i64, i64* %726, align 8
  store i64 %727, i64* %702, align 8
  %728 = load i8, i8* %129, align 1
  %729 = icmp slt i8 %728, 0
  br i1 %729, label %730, label %732

730:                                              ; preds = %725
  %731 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %731) #15
  br label %732

732:                                              ; preds = %725, %730
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #14
  br label %733

733:                                              ; preds = %732, %116
  %734 = load i8, i8* %110, align 1
  %735 = icmp slt i8 %734, 0
  br i1 %735, label %736, label %738

736:                                              ; preds = %733
  %737 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %737) #15
  br label %738

738:                                              ; preds = %733, %736
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #14
  br label %739

739:                                              ; preds = %738, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context17IsInNetExCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %2 = alloca %"class.net::IPAddress", align 1
  %3 = alloca %"class.base::BasicStringPiece.80", align 8
  %4 = alloca %"class.net::IPAddress", align 1
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 2
  br i1 %10, label %52, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %13 = bitcast i64** %12 to %"class.v8::Value"**
  %14 = load %"class.v8::Value"*, %"class.v8::Value"** %13, align 8
  %15 = icmp eq %"class.v8::Value"* %14, null
  %16 = bitcast %"class.v8::Value"* %14 to %"class.v8::String"*
  br i1 %15, label %52, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.v8::Value"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %52

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp ult i16 %31, 64
  br i1 %32, label %33, label %52

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.v8::Value", %"class.v8::Value"* %14, i64 8
  %35 = icmp eq %"class.v8::Value"* %34, null
  br i1 %35, label %52, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.v8::Value"* %34 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 3
  %40 = icmp eq i64 %39, 1
  br i1 %40, label %41, label %52

41:                                               ; preds = %36
  %42 = add i64 %38, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = and i64 %38, -4294967296
  %46 = zext i32 %44 to i64
  %47 = or i64 %45, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load i16, i16* %49, align 2
  %51 = icmp ult i16 %50, 64
  br i1 %51, label %61, label %52

52:                                               ; preds = %36, %17, %1, %11, %22, %33, %41
  %53 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 3
  %56 = getelementptr inbounds i64, i64* %54, i64 1
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, 176
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %55, align 8
  br label %207

61:                                               ; preds = %41
  %62 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #14
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false)
  %67 = load i64*, i64** %65, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = bitcast i64* %68 to %"class.v8::Isolate"**
  %70 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %69, align 8
  %71 = tail call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* nonnull %16) #14, !noalias !81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #14, !alias.scope !81
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %61
  %74 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %85

75:                                               ; preds = %61
  %76 = add nuw nsw i32 %71, 1
  %77 = sext i32 %76 to i64
  %78 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* nonnull %6, i64 %77) #14
  %79 = call i32 @_ZNK2v86String9WriteUtf8EPNS_7IsolateEPciPii(%"class.v8::String"* nonnull %16, %"class.v8::Isolate"* %70, i8* %78, i32 -1, i32* null, i32 0) #14
  %80 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = load i8*, i8** %63, align 8
  %84 = load i64, i64* %64, align 8
  br label %85

85:                                               ; preds = %73, %75
  %86 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %74, %73 ], [ %80, %75 ]
  %87 = phi i64 [ 0, %73 ], [ %84, %75 ]
  %88 = phi i8* [ null, %73 ], [ %83, %75 ]
  %89 = phi i8 [ 0, %73 ], [ %82, %75 ]
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %91 = icmp slt i8 %89, 0
  %92 = select i1 %91, i8* %88, i8* %62
  %93 = zext i8 %89 to i64
  %94 = select i1 %91, i64 %87, i64 %93
  %95 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %92, i64 %94) #14
  br i1 %95, label %104, label %96

96:                                               ; preds = %85
  %97 = load i64*, i64** %65, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 3
  %99 = getelementptr inbounds i64, i64* %97, i64 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 192
  %102 = inttoptr i64 %101 to i64*
  %103 = load i64, i64* %102, align 8
  store i64 %103, i64* %98, align 8
  br label %201

104:                                              ; preds = %85
  %105 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #14
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false)
  %109 = load i64*, i64** %65, align 8
  %110 = getelementptr inbounds i64, i64* %109, i64 1
  %111 = bitcast i64* %110 to %"class.v8::Isolate"**
  %112 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %111, align 8
  %113 = load i32, i32* %8, align 8
  %114 = icmp sgt i32 %113, 1
  br i1 %114, label %119, label %115

115:                                              ; preds = %104
  %116 = ptrtoint %"class.v8::Isolate"* %112 to i64
  %117 = add i64 %116, 160
  %118 = inttoptr i64 %117 to %"class.v8::Value"*
  br label %123

119:                                              ; preds = %104
  %120 = load i64*, i64** %12, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %115, %119
  %124 = phi %"class.v8::Value"* [ %118, %115 ], [ %122, %119 ]
  %125 = bitcast %"class.v8::Value"* %124 to %"class.v8::String"*
  %126 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %125) #14, !noalias !84
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 24, i1 false) #14, !alias.scope !84
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %123
  %129 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %140

130:                                              ; preds = %123
  %131 = add nuw nsw i32 %126, 1
  %132 = sext i32 %131 to i64
  %133 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* nonnull %7, i64 %132) #14
  %134 = call i32 @_ZNK2v86String9WriteUtf8EPNS_7IsolateEPciPii(%"class.v8::String"* %125, %"class.v8::Isolate"* %112, i8* %133, i32 -1, i32* null, i32 0) #14
  %135 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = load i8*, i8** %106, align 8
  %139 = load i64, i64* %107, align 8
  br label %140

140:                                              ; preds = %128, %130
  %141 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %129, %128 ], [ %135, %130 ]
  %142 = phi i64 [ 0, %128 ], [ %139, %130 ]
  %143 = phi i8* [ null, %128 ], [ %138, %130 ]
  %144 = phi i8 [ 0, %128 ], [ %137, %130 ]
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %146 = icmp slt i8 %144, 0
  %147 = select i1 %146, i8* %143, i8* %105
  %148 = zext i8 %144 to i64
  %149 = select i1 %146, i64 %142, i64 %148
  %150 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %147, i64 %149) #14
  %151 = load i64*, i64** %65, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 3
  br i1 %150, label %157, label %153

153:                                              ; preds = %140
  %154 = getelementptr inbounds i64, i64* %151, i64 1
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, 192
  br label %192

157:                                              ; preds = %140
  %158 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %2, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %158) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %158, i8 -86, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %2) #14
  %159 = bitcast %"class.base::BasicStringPiece.80"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #14
  %160 = getelementptr inbounds %"class.base::BasicStringPiece.80", %"class.base::BasicStringPiece.80"* %3, i64 0, i32 0
  %161 = load i8, i8* %90, align 1
  %162 = icmp slt i8 %161, 0
  %163 = load i8*, i8** %63, align 8
  %164 = select i1 %162, i8* %163, i8* %62
  store i8* %164, i8** %160, align 8
  %165 = getelementptr inbounds %"class.base::BasicStringPiece.80", %"class.base::BasicStringPiece.80"* %3, i64 0, i32 1
  %166 = load i64, i64* %64, align 8
  %167 = zext i8 %161 to i64
  %168 = select i1 %162, i64 %166, i64 %167
  store i64 %168, i64* %165, align 8
  %169 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %2, %"class.base::BasicStringPiece.80"* nonnull dereferenceable(16) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #14
  br i1 %169, label %170, label %186

170:                                              ; preds = %157
  %171 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %4, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %171) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %171, i8 -86, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %4) #14
  %172 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #14
  store i64 -6148914691236517206, i64* %5, align 8
  %173 = load i8, i8* %145, align 1
  %174 = icmp slt i8 %173, 0
  %175 = load i8*, i8** %106, align 8
  %176 = select i1 %174, i8* %175, i8* %105
  %177 = load i64, i64* %107, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = call zeroext i1 @_ZN3net14ParseCIDRBlockEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_9IPAddressEPm(i8* %176, i64 %179, %"class.net::IPAddress"* nonnull %4, i64* nonnull %5) #14
  br i1 %180, label %181, label %184

181:                                              ; preds = %170
  %182 = load i64, i64* %5, align 8
  %183 = call zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* nonnull dereferenceable(17) %2, %"class.net::IPAddress"* nonnull dereferenceable(17) %4, i64 %182) #14
  br label %184

184:                                              ; preds = %181, %170
  %185 = phi i1 [ %183, %181 ], [ false, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #14
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %171) #14
  br label %186

186:                                              ; preds = %157, %184
  %187 = phi i1 [ %185, %184 ], [ false, %157 ]
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %158) #14
  %188 = getelementptr inbounds i64, i64* %151, i64 1
  %189 = load i64, i64* %188, align 8
  %190 = select i1 %187, i64 184, i64 192
  %191 = add i64 %189, %190
  br label %192

192:                                              ; preds = %186, %153
  %193 = phi i64 [ %156, %153 ], [ %191, %186 ]
  %194 = inttoptr i64 %193 to i64*
  %195 = load i64, i64* %194, align 8
  store i64 %195, i64* %152, align 8
  %196 = load i8, i8* %145, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %192
  %199 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %199) #15
  br label %200

200:                                              ; preds = %192, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #14
  br label %201

201:                                              ; preds = %200, %96
  %202 = load i8, i8* %90, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  %205 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %205) #15
  br label %206

206:                                              ; preds = %201, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #14
  br label %207

207:                                              ; preds = %206, %52
  ret void
}

declare %"class.v8::Context"* @_ZN2v87Context3NewEPNS_7IsolateEPNS_22ExtensionConfigurationENS_10MaybeLocalINS_14ObjectTemplateEEENS5_INS_5ValueEEENS_33DeserializeInternalFieldsCallbackEPNS_14MicrotaskQueueE(%"class.v8::Isolate"*, %"class.v8::ExtensionConfiguration"*, %"class.v8::ObjectTemplate"*, %"class.v8::Value"*, void (%"class.v8::Object"*, i32, i8*, i32, i8*)*, i8*, %"class.v8::MicrotaskQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN14proxy_resolver15ProxyResolverV87Context9RunScriptEN2v85LocalINS2_6StringEEEPKc(%"class.proxy_resolver::ProxyResolverV8::Context"*, %"class.v8::String"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.v8::ScriptCompiler::Source", align 8
  %6 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.v8::Context"*, %"class.v8::Context"** %7, align 8
  %9 = icmp eq %"class.v8::Context"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.v8::Isolate"** %6 to %"class.v8::internal::Isolate"**
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = bitcast %"class.v8::Context"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %14) #14
  %16 = bitcast i64* %15 to %"class.v8::Context"*
  br label %17

17:                                               ; preds = %3, %10
  %18 = phi %"class.v8::Context"* [ %16, %10 ], [ null, %3 ]
  %19 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %20) #14
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %22 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %21, i8* %2)
  %23 = ptrtoint %"class.v8::String"* %22 to i64
  %24 = bitcast %"class.v8::ScriptCompiler::Source"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %24) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %25 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %5, i64 0, i32 0, i32 0
  store %"class.v8::String"* %1, %"class.v8::String"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %5, i64 0, i32 1, i32 0
  %27 = bitcast %"class.v8::Value"** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %5, i64 0, i32 2
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %5, i64 0, i32 3
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %5, i64 0, i32 5, i32 0
  %32 = getelementptr inbounds %"class.v8::ScriptCompiler::Source", %"class.v8::ScriptCompiler::Source"* %5, i64 0, i32 7
  %33 = bitcast %"class.v8::Value"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false)
  %34 = call %"class.v8::Script"* @_ZN2v814ScriptCompiler7CompileENS_5LocalINS_7ContextEEEPNS0_6SourceENS0_14CompileOptionsENS0_13NoCacheReasonE(%"class.v8::Context"* %18, %"class.v8::ScriptCompiler::Source"* nonnull %5, i32 0, i32 11) #14
  %35 = icmp eq %"class.v8::Script"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %17
  %37 = call %"class.v8::Value"* @_ZN2v86Script3RunENS_5LocalINS_7ContextEEE(%"class.v8::Script"* nonnull %34, %"class.v8::Context"* %18) #14
  %38 = icmp eq %"class.v8::Value"* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36, %17
  %40 = call %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"* nonnull %4) #14
  call void @_ZN14proxy_resolver15ProxyResolverV87Context11HandleErrorEN2v85LocalINS2_7MessageEEE(%"class.proxy_resolver::ProxyResolverV8::Context"* %0, %"class.v8::Message"* %40)
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i32 [ 0, %36 ], [ -327, %39 ]
  %43 = load %"struct.v8::ScriptCompiler::CachedData"*, %"struct.v8::ScriptCompiler::CachedData"** %32, align 8
  %44 = icmp eq %"struct.v8::ScriptCompiler::CachedData"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  call void @_ZN2v814ScriptCompiler10CachedDataD1Ev(%"struct.v8::ScriptCompiler::CachedData"* nonnull %43) #14
  %46 = bitcast %"struct.v8::ScriptCompiler::CachedData"* %43 to i8*
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %41, %45
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %24) #14
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #14
  ret i32 %42
}

declare void @_ZN2v82V813DisposeGlobalEPm(i64*) local_unnamed_addr #1

declare i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare i8* @_ZNK2v88External5ValueEv(%"class.v8::External"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.26"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = tail call i1 @llvm.is.constant.i16(i16 %3)
  %5 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %667

6:                                                ; preds = %2
  br i1 %5, label %24, label %7

7:                                                ; preds = %6, %7
  %8 = phi i64 [ %10, %7 ], [ 0, %6 ]
  %9 = phi i16* [ %11, %7 ], [ %1, %6 ]
  %10 = add i64 %8, 1
  %11 = getelementptr inbounds i16, i16* %9, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 11
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i64 [ %19, %16 ], [ 0, %14 ]
  %18 = phi i16* [ %20, %16 ], [ %1, %14 ]
  %19 = add i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  br i1 %15, label %24, label %330

24:                                               ; preds = %6, %23
  %25 = phi i64 [ %19, %23 ], [ 0, %6 ]
  %26 = bitcast %"class.std::__1::basic_string.26"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string.26"* %0 to i16*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i16* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %328, label %40

40:                                               ; preds = %37
  %41 = icmp ult i16* %38, %1
  br i1 %41, label %42, label %185

42:                                               ; preds = %40
  %43 = icmp ult i64 %25, 16
  br i1 %43, label %132, label %44

44:                                               ; preds = %42
  %45 = getelementptr i16, i16* %38, i64 %25
  %46 = getelementptr i16, i16* %1, i64 %25
  %47 = icmp ult i16* %38, %46
  %48 = icmp ugt i16* %45, %1
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %44
  %51 = and i64 %25, -16
  %52 = sub i64 %25, %51
  %53 = getelementptr i16, i16* %1, i64 %51
  %54 = getelementptr i16, i16* %38, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %1, i64 %63
  %66 = getelementptr i16, i16* %38, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !87
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !87
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !90, !noalias !87
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !90, !noalias !87
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %1, i64 %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !87
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !87
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !90, !noalias !87
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !90, !noalias !87
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %1, i64 %86
  %88 = getelementptr i16, i16* %38, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !87
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !87
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !90, !noalias !87
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !90, !noalias !87
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %1, i64 %97
  %99 = getelementptr i16, i16* %38, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !87
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !87
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !90, !noalias !87
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !90, !noalias !87
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !92

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %1, i64 %115
  %118 = getelementptr i16, i16* %38, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !87
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !87
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !90, !noalias !87
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !90, !noalias !87
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !93

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %25, %51
  br i1 %131, label %328, label %132

132:                                              ; preds = %130, %44, %42
  %133 = phi i64 [ %25, %44 ], [ %25, %42 ], [ %52, %130 ]
  %134 = phi i16* [ %1, %44 ], [ %1, %42 ], [ %53, %130 ]
  %135 = phi i16* [ %38, %44 ], [ %38, %42 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !94

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %328, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %328, label %155, !llvm.loop !95

185:                                              ; preds = %40
  %186 = icmp ugt i16* %38, %1
  br i1 %186, label %187, label %328

187:                                              ; preds = %185
  %188 = getelementptr inbounds i16, i16* %1, i64 %25
  %189 = getelementptr inbounds i16, i16* %38, i64 %25
  %190 = icmp ult i64 %25, 16
  br i1 %190, label %275, label %191

191:                                              ; preds = %187
  %192 = icmp ult i16* %38, %188
  %193 = icmp ugt i16* %189, %1
  %194 = and i1 %192, %193
  br i1 %194, label %275, label %195

195:                                              ; preds = %191
  %196 = and i64 %25, -16
  %197 = sub i64 %25, %196
  %198 = sub i64 0, %196
  %199 = getelementptr i16, i16* %188, i64 %198
  %200 = sub i64 0, %196
  %201 = getelementptr i16, i16* %189, i64 %200
  %202 = add i64 %196, -16
  %203 = lshr exact i64 %202, 4
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %202, 0
  br i1 %206, label %253, label %207

207:                                              ; preds = %195
  %208 = sub nuw nsw i64 %204, %205
  %209 = getelementptr i16, i16* %188, i64 -1
  %210 = getelementptr i16, i16* %189, i64 -1
  %211 = getelementptr i16, i16* %188, i64 -1
  %212 = getelementptr i16, i16* %189, i64 -1
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 0, %207 ], [ %248, %213 ]
  %215 = phi i64 [ %208, %207 ], [ %249, %213 ]
  %216 = sub i64 0, %214
  %217 = sub i64 0, %214
  %218 = getelementptr inbounds i16, i16* %210, i64 %217
  %219 = getelementptr inbounds i16, i16* %209, i64 %216
  %220 = getelementptr inbounds i16, i16* %219, i64 -7
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !96
  %223 = getelementptr inbounds i16, i16* %219, i64 -8
  %224 = getelementptr inbounds i16, i16* %223, i64 -7
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !96
  %227 = getelementptr inbounds i16, i16* %218, i64 -7
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %228, align 2, !alias.scope !99, !noalias !96
  %229 = getelementptr inbounds i16, i16* %218, i64 -8
  %230 = getelementptr inbounds i16, i16* %229, i64 -7
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %231, align 2, !alias.scope !99, !noalias !96
  %232 = sub nuw nsw i64 -16, %214
  %233 = sub nuw nsw i64 -16, %214
  %234 = getelementptr inbounds i16, i16* %212, i64 %233
  %235 = getelementptr inbounds i16, i16* %211, i64 %232
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !96
  %239 = getelementptr inbounds i16, i16* %235, i64 -8
  %240 = getelementptr inbounds i16, i16* %239, i64 -7
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !96
  %243 = getelementptr inbounds i16, i16* %234, i64 -7
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %244, align 2, !alias.scope !99, !noalias !96
  %245 = getelementptr inbounds i16, i16* %234, i64 -8
  %246 = getelementptr inbounds i16, i16* %245, i64 -7
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %247, align 2, !alias.scope !99, !noalias !96
  %248 = add i64 %214, 32
  %249 = add i64 %215, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %213, !llvm.loop !101

251:                                              ; preds = %213
  %252 = sub nuw nsw i64 -32, %214
  br label %253

253:                                              ; preds = %251, %195
  %254 = phi i64 [ 0, %195 ], [ %252, %251 ]
  %255 = icmp eq i64 %205, 0
  br i1 %255, label %273, label %256

256:                                              ; preds = %253
  %257 = getelementptr i16, i16* %188, i64 -1
  %258 = getelementptr i16, i16* %189, i64 -1
  %259 = getelementptr inbounds i16, i16* %258, i64 %254
  %260 = getelementptr inbounds i16, i16* %257, i64 %254
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !96
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !96
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !99, !noalias !96
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !99, !noalias !96
  br label %273

273:                                              ; preds = %253, %256
  %274 = icmp eq i64 %25, %196
  br i1 %274, label %328, label %275

275:                                              ; preds = %273, %191, %187
  %276 = phi i64 [ %25, %191 ], [ %25, %187 ], [ %197, %273 ]
  %277 = phi i16* [ %188, %191 ], [ %188, %187 ], [ %199, %273 ]
  %278 = phi i16* [ %189, %191 ], [ %189, %187 ], [ %201, %273 ]
  %279 = add i64 %276, -1
  %280 = and i64 %276, 7
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %290, %282 ], [ %276, %275 ]
  %284 = phi i16* [ %288, %282 ], [ %277, %275 ]
  %285 = phi i16* [ %287, %282 ], [ %278, %275 ]
  %286 = phi i64 [ %291, %282 ], [ %280, %275 ]
  %287 = getelementptr inbounds i16, i16* %285, i64 -1
  %288 = getelementptr inbounds i16, i16* %284, i64 -1
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %283, -1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !102

293:                                              ; preds = %282, %275
  %294 = phi i64 [ %276, %275 ], [ %290, %282 ]
  %295 = phi i16* [ %277, %275 ], [ %288, %282 ]
  %296 = phi i16* [ %278, %275 ], [ %287, %282 ]
  %297 = icmp ult i64 %279, 7
  br i1 %297, label %328, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %326, %298 ], [ %294, %293 ]
  %300 = phi i16* [ %324, %298 ], [ %295, %293 ]
  %301 = phi i16* [ %323, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds i16, i16* %301, i64 -1
  %303 = getelementptr inbounds i16, i16* %300, i64 -1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %301, i64 -2
  %306 = getelementptr inbounds i16, i16* %300, i64 -2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %301, i64 -3
  %309 = getelementptr inbounds i16, i16* %300, i64 -3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %301, i64 -4
  %312 = getelementptr inbounds i16, i16* %300, i64 -4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %301, i64 -5
  %315 = getelementptr inbounds i16, i16* %300, i64 -5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %301, i64 -6
  %318 = getelementptr inbounds i16, i16* %300, i64 -6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %301, i64 -7
  %321 = getelementptr inbounds i16, i16* %300, i64 -7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %301, i64 -8
  %324 = getelementptr inbounds i16, i16* %300, i64 -8
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %299, -8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %298, !llvm.loop !103

328:                                              ; preds = %293, %298, %150, %155, %273, %130, %37, %185
  %329 = getelementptr inbounds i16, i16* %38, i64 %25
  store i16 0, i16* %329, align 2
  br label %1014

330:                                              ; preds = %23
  %331 = bitcast %"class.std::__1::basic_string.26"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 9223372036854775807
  %339 = add nsw i64 %338, -1
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %339, %335 ], [ 10, %330 ]
  %342 = icmp ugt i64 %19, %341
  br i1 %342, label %658, label %343

343:                                              ; preds = %340
  br i1 %334, label %344, label %347

344:                                              ; preds = %343
  %345 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  br label %349

347:                                              ; preds = %343
  %348 = bitcast %"class.std::__1::basic_string.26"* %0 to i16*
  br label %349

349:                                              ; preds = %347, %344
  %350 = phi i16* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i64 %19, 0
  br i1 %351, label %650, label %352

352:                                              ; preds = %349
  %353 = icmp ult i16* %350, %1
  br i1 %353, label %354, label %507

354:                                              ; preds = %352
  store i16 %3, i16* %350, align 2
  %355 = getelementptr inbounds i16, i16* %1, i64 1
  %356 = icmp eq i64 %17, 0
  br i1 %356, label %650, label %357

357:                                              ; preds = %354
  %358 = icmp ult i64 %17, 16
  br i1 %358, label %454, label %359

359:                                              ; preds = %357
  %360 = getelementptr i16, i16* %350, i64 1
  %361 = getelementptr i16, i16* %350, i64 %19
  %362 = getelementptr i16, i16* %1, i64 %19
  %363 = icmp ult i16* %360, %362
  %364 = icmp ult i16* %355, %361
  %365 = and i1 %363, %364
  br i1 %365, label %454, label %366

366:                                              ; preds = %359
  %367 = and i64 %17, -16
  %368 = getelementptr i16, i16* %355, i64 %367
  %369 = sub i64 %17, %367
  %370 = getelementptr i16, i16* %350, i64 %367
  %371 = add i64 %367, -16
  %372 = lshr exact i64 %371, 4
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 3
  %375 = icmp ult i64 %371, 48
  br i1 %375, label %431, label %376

376:                                              ; preds = %366
  %377 = sub nsw i64 %373, %374
  %378 = getelementptr i16, i16* %350, i64 1
  %379 = getelementptr i16, i16* %350, i64 1
  %380 = getelementptr i16, i16* %350, i64 1
  %381 = getelementptr i16, i16* %350, i64 1
  br label %382

382:                                              ; preds = %382, %376
  %383 = phi i64 [ 0, %376 ], [ %428, %382 ]
  %384 = phi i64 [ %377, %376 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %355, i64 %383
  %386 = getelementptr inbounds i16, i16* %378, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !104
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !104
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !107, !noalias !104
  %393 = getelementptr inbounds i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !107, !noalias !104
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %355, i64 %395
  %397 = getelementptr inbounds i16, i16* %379, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !104
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !104
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !107, !noalias !104
  %404 = getelementptr inbounds i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !107, !noalias !104
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %355, i64 %406
  %408 = getelementptr inbounds i16, i16* %380, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !104
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !104
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !107, !noalias !104
  %415 = getelementptr inbounds i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !107, !noalias !104
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %355, i64 %417
  %419 = getelementptr inbounds i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !104
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !104
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !107, !noalias !104
  %426 = getelementptr inbounds i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !107, !noalias !104
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !109

431:                                              ; preds = %382, %366
  %432 = phi i64 [ 0, %366 ], [ %428, %382 ]
  %433 = icmp eq i64 %374, 0
  br i1 %433, label %452, label %434

434:                                              ; preds = %431
  %435 = getelementptr i16, i16* %350, i64 1
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ %432, %434 ], [ %449, %436 ]
  %438 = phi i64 [ %374, %434 ], [ %450, %436 ]
  %439 = getelementptr i16, i16* %355, i64 %437
  %440 = getelementptr inbounds i16, i16* %435, i64 %437
  %441 = bitcast i16* %439 to <8 x i16>*
  %442 = load <8 x i16>, <8 x i16>* %441, align 2, !alias.scope !104
  %443 = getelementptr i16, i16* %439, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !104
  %446 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %442, <8 x i16>* %446, align 2, !alias.scope !107, !noalias !104
  %447 = getelementptr inbounds i16, i16* %440, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %448, align 2, !alias.scope !107, !noalias !104
  %449 = add i64 %437, 16
  %450 = add i64 %438, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %436, !llvm.loop !110

452:                                              ; preds = %436, %431
  %453 = icmp eq i64 %17, %367
  br i1 %453, label %650, label %454

454:                                              ; preds = %452, %359, %357
  %455 = phi i16* [ %355, %359 ], [ %355, %357 ], [ %368, %452 ]
  %456 = phi i64 [ %17, %359 ], [ %17, %357 ], [ %369, %452 ]
  %457 = phi i16* [ %350, %359 ], [ %350, %357 ], [ %370, %452 ]
  %458 = add i64 %456, -1
  %459 = and i64 %456, 7
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %454, %461
  %462 = phi i16* [ %469, %461 ], [ %455, %454 ]
  %463 = phi i64 [ %468, %461 ], [ %456, %454 ]
  %464 = phi i16* [ %466, %461 ], [ %457, %454 ]
  %465 = phi i64 [ %470, %461 ], [ %459, %454 ]
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = load i16, i16* %462, align 2
  store i16 %467, i16* %466, align 2
  %468 = add i64 %463, -1
  %469 = getelementptr inbounds i16, i16* %462, i64 1
  %470 = add i64 %465, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %461, !llvm.loop !111

472:                                              ; preds = %461, %454
  %473 = phi i16* [ %455, %454 ], [ %469, %461 ]
  %474 = phi i64 [ %456, %454 ], [ %468, %461 ]
  %475 = phi i16* [ %457, %454 ], [ %466, %461 ]
  %476 = icmp ult i64 %458, 7
  br i1 %476, label %650, label %477

477:                                              ; preds = %472, %477
  %478 = phi i16* [ %505, %477 ], [ %473, %472 ]
  %479 = phi i64 [ %504, %477 ], [ %474, %472 ]
  %480 = phi i16* [ %502, %477 ], [ %475, %472 ]
  %481 = getelementptr inbounds i16, i16* %480, i64 1
  %482 = load i16, i16* %478, align 2
  store i16 %482, i16* %481, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 1
  %484 = getelementptr inbounds i16, i16* %480, i64 2
  %485 = load i16, i16* %483, align 2
  store i16 %485, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 2
  %487 = getelementptr inbounds i16, i16* %480, i64 3
  %488 = load i16, i16* %486, align 2
  store i16 %488, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 3
  %490 = getelementptr inbounds i16, i16* %480, i64 4
  %491 = load i16, i16* %489, align 2
  store i16 %491, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 4
  %493 = getelementptr inbounds i16, i16* %480, i64 5
  %494 = load i16, i16* %492, align 2
  store i16 %494, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 5
  %496 = getelementptr inbounds i16, i16* %480, i64 6
  %497 = load i16, i16* %495, align 2
  store i16 %497, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 6
  %499 = getelementptr inbounds i16, i16* %480, i64 7
  %500 = load i16, i16* %498, align 2
  store i16 %500, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %478, i64 7
  %502 = getelementptr inbounds i16, i16* %480, i64 8
  %503 = load i16, i16* %501, align 2
  store i16 %503, i16* %502, align 2
  %504 = add i64 %479, -8
  %505 = getelementptr inbounds i16, i16* %478, i64 8
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %650, label %477, !llvm.loop !112

507:                                              ; preds = %352
  %508 = icmp ugt i16* %350, %1
  br i1 %508, label %509, label %650

509:                                              ; preds = %507
  %510 = getelementptr inbounds i16, i16* %1, i64 %19
  %511 = getelementptr inbounds i16, i16* %350, i64 %19
  %512 = icmp ult i64 %19, 16
  br i1 %512, label %597, label %513

513:                                              ; preds = %509
  %514 = icmp ult i16* %350, %510
  %515 = icmp ugt i16* %511, %1
  %516 = and i1 %514, %515
  br i1 %516, label %597, label %517

517:                                              ; preds = %513
  %518 = and i64 %19, -16
  %519 = sub i64 %19, %518
  %520 = sub i64 0, %518
  %521 = getelementptr i16, i16* %510, i64 %520
  %522 = sub i64 0, %518
  %523 = getelementptr i16, i16* %511, i64 %522
  %524 = add i64 %518, -16
  %525 = lshr exact i64 %524, 4
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %575, label %529

529:                                              ; preds = %517
  %530 = sub nuw nsw i64 %526, %527
  %531 = getelementptr i16, i16* %1, i64 %17
  %532 = getelementptr i16, i16* %350, i64 %17
  %533 = getelementptr i16, i16* %1, i64 %17
  %534 = getelementptr i16, i16* %350, i64 %17
  br label %535

535:                                              ; preds = %535, %529
  %536 = phi i64 [ 0, %529 ], [ %570, %535 ]
  %537 = phi i64 [ %530, %529 ], [ %571, %535 ]
  %538 = sub i64 0, %536
  %539 = sub i64 0, %536
  %540 = getelementptr inbounds i16, i16* %532, i64 %539
  %541 = getelementptr inbounds i16, i16* %531, i64 %538
  %542 = getelementptr inbounds i16, i16* %541, i64 -7
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !113
  %545 = getelementptr inbounds i16, i16* %541, i64 -8
  %546 = getelementptr inbounds i16, i16* %545, i64 -7
  %547 = bitcast i16* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !113
  %549 = getelementptr inbounds i16, i16* %540, i64 -7
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %550, align 2, !alias.scope !116, !noalias !113
  %551 = getelementptr inbounds i16, i16* %540, i64 -8
  %552 = getelementptr inbounds i16, i16* %551, i64 -7
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %548, <8 x i16>* %553, align 2, !alias.scope !116, !noalias !113
  %554 = sub nuw nsw i64 -16, %536
  %555 = sub nuw nsw i64 -16, %536
  %556 = getelementptr inbounds i16, i16* %534, i64 %555
  %557 = getelementptr inbounds i16, i16* %533, i64 %554
  %558 = getelementptr inbounds i16, i16* %557, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !113
  %561 = getelementptr inbounds i16, i16* %557, i64 -8
  %562 = getelementptr inbounds i16, i16* %561, i64 -7
  %563 = bitcast i16* %562 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !113
  %565 = getelementptr inbounds i16, i16* %556, i64 -7
  %566 = bitcast i16* %565 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %566, align 2, !alias.scope !116, !noalias !113
  %567 = getelementptr inbounds i16, i16* %556, i64 -8
  %568 = getelementptr inbounds i16, i16* %567, i64 -7
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !alias.scope !116, !noalias !113
  %570 = add i64 %536, 32
  %571 = add i64 %537, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %535, !llvm.loop !118

573:                                              ; preds = %535
  %574 = sub nuw nsw i64 -32, %536
  br label %575

575:                                              ; preds = %573, %517
  %576 = phi i64 [ 0, %517 ], [ %574, %573 ]
  %577 = icmp eq i64 %527, 0
  br i1 %577, label %595, label %578

578:                                              ; preds = %575
  %579 = getelementptr i16, i16* %1, i64 %17
  %580 = getelementptr i16, i16* %350, i64 %17
  %581 = getelementptr inbounds i16, i16* %580, i64 %576
  %582 = getelementptr inbounds i16, i16* %579, i64 %576
  %583 = getelementptr inbounds i16, i16* %582, i64 -7
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !113
  %586 = getelementptr inbounds i16, i16* %582, i64 -8
  %587 = getelementptr inbounds i16, i16* %586, i64 -7
  %588 = bitcast i16* %587 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !113
  %590 = getelementptr inbounds i16, i16* %581, i64 -7
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %591, align 2, !alias.scope !116, !noalias !113
  %592 = getelementptr inbounds i16, i16* %581, i64 -8
  %593 = getelementptr inbounds i16, i16* %592, i64 -7
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %594, align 2, !alias.scope !116, !noalias !113
  br label %595

595:                                              ; preds = %575, %578
  %596 = icmp eq i64 %19, %518
  br i1 %596, label %650, label %597

597:                                              ; preds = %595, %513, %509
  %598 = phi i64 [ %19, %513 ], [ %19, %509 ], [ %519, %595 ]
  %599 = phi i16* [ %510, %513 ], [ %510, %509 ], [ %521, %595 ]
  %600 = phi i16* [ %511, %513 ], [ %511, %509 ], [ %523, %595 ]
  %601 = add i64 %598, -1
  %602 = and i64 %598, 7
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %597, %604
  %605 = phi i64 [ %612, %604 ], [ %598, %597 ]
  %606 = phi i16* [ %610, %604 ], [ %599, %597 ]
  %607 = phi i16* [ %609, %604 ], [ %600, %597 ]
  %608 = phi i64 [ %613, %604 ], [ %602, %597 ]
  %609 = getelementptr inbounds i16, i16* %607, i64 -1
  %610 = getelementptr inbounds i16, i16* %606, i64 -1
  %611 = load i16, i16* %610, align 2
  store i16 %611, i16* %609, align 2
  %612 = add i64 %605, -1
  %613 = add i64 %608, -1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %604, !llvm.loop !119

615:                                              ; preds = %604, %597
  %616 = phi i64 [ %598, %597 ], [ %612, %604 ]
  %617 = phi i16* [ %599, %597 ], [ %610, %604 ]
  %618 = phi i16* [ %600, %597 ], [ %609, %604 ]
  %619 = icmp ult i64 %601, 7
  br i1 %619, label %650, label %620

620:                                              ; preds = %615, %620
  %621 = phi i64 [ %648, %620 ], [ %616, %615 ]
  %622 = phi i16* [ %646, %620 ], [ %617, %615 ]
  %623 = phi i16* [ %645, %620 ], [ %618, %615 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 -1
  %625 = getelementptr inbounds i16, i16* %622, i64 -1
  %626 = load i16, i16* %625, align 2
  store i16 %626, i16* %624, align 2
  %627 = getelementptr inbounds i16, i16* %623, i64 -2
  %628 = getelementptr inbounds i16, i16* %622, i64 -2
  %629 = load i16, i16* %628, align 2
  store i16 %629, i16* %627, align 2
  %630 = getelementptr inbounds i16, i16* %623, i64 -3
  %631 = getelementptr inbounds i16, i16* %622, i64 -3
  %632 = load i16, i16* %631, align 2
  store i16 %632, i16* %630, align 2
  %633 = getelementptr inbounds i16, i16* %623, i64 -4
  %634 = getelementptr inbounds i16, i16* %622, i64 -4
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %623, i64 -5
  %637 = getelementptr inbounds i16, i16* %622, i64 -5
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %623, i64 -6
  %640 = getelementptr inbounds i16, i16* %622, i64 -6
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %623, i64 -7
  %643 = getelementptr inbounds i16, i16* %622, i64 -7
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %623, i64 -8
  %646 = getelementptr inbounds i16, i16* %622, i64 -8
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = add i64 %621, -8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %620, !llvm.loop !120

650:                                              ; preds = %615, %620, %472, %477, %595, %354, %452, %507, %349
  %651 = getelementptr inbounds i16, i16* %350, i64 %19
  store i16 0, i16* %651, align 2
  %652 = load i8, i8* %332, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %655, align 8
  br label %1014

656:                                              ; preds = %650
  %657 = trunc i64 %19 to i8
  store i8 %657, i8* %332, align 1
  br label %1014

658:                                              ; preds = %340
  br i1 %334, label %659, label %662

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  br label %664

662:                                              ; preds = %658
  %663 = zext i8 %333 to i64
  br label %664

664:                                              ; preds = %662, %659
  %665 = phi i64 [ %661, %659 ], [ %663, %662 ]
  %666 = sub i64 %19, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.26"* %0, i64 %341, i64 %666, i64 %665, i64 0, i64 %665, i64 %19, i16* %1) #14
  br label %1014

667:                                              ; preds = %2
  br i1 %5, label %675, label %668

668:                                              ; preds = %667, %668
  %669 = phi i64 [ %671, %668 ], [ 0, %667 ]
  %670 = phi i16* [ %672, %668 ], [ %1, %667 ]
  %671 = add i64 %669, 1
  %672 = getelementptr inbounds i16, i16* %670, i64 1
  %673 = load i16, i16* %672, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %675, label %668

675:                                              ; preds = %668, %667
  %676 = phi i64 [ 0, %667 ], [ %671, %668 ]
  %677 = bitcast %"class.std::__1::basic_string.26"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %686

681:                                              ; preds = %675
  %682 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = and i64 %683, 9223372036854775807
  %685 = add nsw i64 %684, -1
  br label %686

686:                                              ; preds = %681, %675
  %687 = phi i64 [ %685, %681 ], [ 10, %675 ]
  %688 = icmp ugt i64 %676, %687
  br i1 %688, label %1005, label %689

689:                                              ; preds = %686
  br i1 %680, label %690, label %693

690:                                              ; preds = %689
  %691 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i16*, i16** %691, align 8
  br label %695

693:                                              ; preds = %689
  %694 = bitcast %"class.std::__1::basic_string.26"* %0 to i16*
  br label %695

695:                                              ; preds = %693, %690
  %696 = phi i16* [ %692, %690 ], [ %694, %693 ]
  %697 = icmp eq i64 %676, 0
  br i1 %697, label %997, label %698

698:                                              ; preds = %695
  %699 = icmp ult i16* %696, %1
  br i1 %699, label %700, label %854

700:                                              ; preds = %698
  store i16 %3, i16* %696, align 2
  %701 = add i64 %676, -1
  %702 = getelementptr inbounds i16, i16* %1, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %997, label %704

704:                                              ; preds = %700
  %705 = icmp ult i64 %701, 16
  br i1 %705, label %801, label %706

706:                                              ; preds = %704
  %707 = getelementptr i16, i16* %696, i64 1
  %708 = getelementptr i16, i16* %696, i64 %676
  %709 = getelementptr i16, i16* %1, i64 %676
  %710 = icmp ult i16* %707, %709
  %711 = icmp ult i16* %702, %708
  %712 = and i1 %710, %711
  br i1 %712, label %801, label %713

713:                                              ; preds = %706
  %714 = and i64 %701, -16
  %715 = getelementptr i16, i16* %702, i64 %714
  %716 = sub i64 %701, %714
  %717 = getelementptr i16, i16* %696, i64 %714
  %718 = add i64 %714, -16
  %719 = lshr exact i64 %718, 4
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 48
  br i1 %722, label %778, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  %725 = getelementptr i16, i16* %696, i64 1
  %726 = getelementptr i16, i16* %696, i64 1
  %727 = getelementptr i16, i16* %696, i64 1
  %728 = getelementptr i16, i16* %696, i64 1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %775, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %702, i64 %730
  %733 = getelementptr inbounds i16, i16* %725, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !121
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !121
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !124, !noalias !121
  %740 = getelementptr inbounds i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !124, !noalias !121
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %702, i64 %742
  %744 = getelementptr inbounds i16, i16* %726, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !121
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !121
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !124, !noalias !121
  %751 = getelementptr inbounds i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !124, !noalias !121
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %702, i64 %753
  %755 = getelementptr inbounds i16, i16* %727, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !121
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !121
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !124, !noalias !121
  %762 = getelementptr inbounds i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !124, !noalias !121
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %702, i64 %764
  %766 = getelementptr inbounds i16, i16* %728, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !121
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !121
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !124, !noalias !121
  %773 = getelementptr inbounds i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !124, !noalias !121
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !126

778:                                              ; preds = %729, %713
  %779 = phi i64 [ 0, %713 ], [ %775, %729 ]
  %780 = icmp eq i64 %721, 0
  br i1 %780, label %799, label %781

781:                                              ; preds = %778
  %782 = getelementptr i16, i16* %696, i64 1
  br label %783

783:                                              ; preds = %783, %781
  %784 = phi i64 [ %779, %781 ], [ %796, %783 ]
  %785 = phi i64 [ %721, %781 ], [ %797, %783 ]
  %786 = getelementptr i16, i16* %702, i64 %784
  %787 = getelementptr inbounds i16, i16* %782, i64 %784
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !121
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !121
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !124, !noalias !121
  %794 = getelementptr inbounds i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !124, !noalias !121
  %796 = add i64 %784, 16
  %797 = add i64 %785, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %783, !llvm.loop !127

799:                                              ; preds = %783, %778
  %800 = icmp eq i64 %701, %714
  br i1 %800, label %997, label %801

801:                                              ; preds = %799, %706, %704
  %802 = phi i16* [ %702, %706 ], [ %702, %704 ], [ %715, %799 ]
  %803 = phi i64 [ %701, %706 ], [ %701, %704 ], [ %716, %799 ]
  %804 = phi i16* [ %696, %706 ], [ %696, %704 ], [ %717, %799 ]
  %805 = add i64 %803, -1
  %806 = and i64 %803, 7
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %801, %808
  %809 = phi i16* [ %816, %808 ], [ %802, %801 ]
  %810 = phi i64 [ %815, %808 ], [ %803, %801 ]
  %811 = phi i16* [ %813, %808 ], [ %804, %801 ]
  %812 = phi i64 [ %817, %808 ], [ %806, %801 ]
  %813 = getelementptr inbounds i16, i16* %811, i64 1
  %814 = load i16, i16* %809, align 2
  store i16 %814, i16* %813, align 2
  %815 = add i64 %810, -1
  %816 = getelementptr inbounds i16, i16* %809, i64 1
  %817 = add i64 %812, -1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %808, !llvm.loop !128

819:                                              ; preds = %808, %801
  %820 = phi i16* [ %802, %801 ], [ %816, %808 ]
  %821 = phi i64 [ %803, %801 ], [ %815, %808 ]
  %822 = phi i16* [ %804, %801 ], [ %813, %808 ]
  %823 = icmp ult i64 %805, 7
  br i1 %823, label %997, label %824

824:                                              ; preds = %819, %824
  %825 = phi i16* [ %852, %824 ], [ %820, %819 ]
  %826 = phi i64 [ %851, %824 ], [ %821, %819 ]
  %827 = phi i16* [ %849, %824 ], [ %822, %819 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 1
  %829 = load i16, i16* %825, align 2
  store i16 %829, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 1
  %831 = getelementptr inbounds i16, i16* %827, i64 2
  %832 = load i16, i16* %830, align 2
  store i16 %832, i16* %831, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 2
  %834 = getelementptr inbounds i16, i16* %827, i64 3
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %834, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 3
  %837 = getelementptr inbounds i16, i16* %827, i64 4
  %838 = load i16, i16* %836, align 2
  store i16 %838, i16* %837, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 4
  %840 = getelementptr inbounds i16, i16* %827, i64 5
  %841 = load i16, i16* %839, align 2
  store i16 %841, i16* %840, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 5
  %843 = getelementptr inbounds i16, i16* %827, i64 6
  %844 = load i16, i16* %842, align 2
  store i16 %844, i16* %843, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 6
  %846 = getelementptr inbounds i16, i16* %827, i64 7
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %825, i64 7
  %849 = getelementptr inbounds i16, i16* %827, i64 8
  %850 = load i16, i16* %848, align 2
  store i16 %850, i16* %849, align 2
  %851 = add i64 %826, -8
  %852 = getelementptr inbounds i16, i16* %825, i64 8
  %853 = icmp eq i64 %851, 0
  br i1 %853, label %997, label %824, !llvm.loop !129

854:                                              ; preds = %698
  %855 = icmp ugt i16* %696, %1
  br i1 %855, label %856, label %997

856:                                              ; preds = %854
  %857 = getelementptr inbounds i16, i16* %1, i64 %676
  %858 = getelementptr inbounds i16, i16* %696, i64 %676
  %859 = icmp ult i64 %676, 16
  br i1 %859, label %944, label %860

860:                                              ; preds = %856
  %861 = icmp ult i16* %696, %857
  %862 = icmp ugt i16* %858, %1
  %863 = and i1 %861, %862
  br i1 %863, label %944, label %864

864:                                              ; preds = %860
  %865 = and i64 %676, -16
  %866 = sub i64 %676, %865
  %867 = sub i64 0, %865
  %868 = getelementptr i16, i16* %857, i64 %867
  %869 = sub i64 0, %865
  %870 = getelementptr i16, i16* %858, i64 %869
  %871 = add i64 %865, -16
  %872 = lshr exact i64 %871, 4
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %922, label %876

876:                                              ; preds = %864
  %877 = sub nuw nsw i64 %873, %874
  %878 = getelementptr i16, i16* %857, i64 -1
  %879 = getelementptr i16, i16* %858, i64 -1
  %880 = getelementptr i16, i16* %857, i64 -1
  %881 = getelementptr i16, i16* %858, i64 -1
  br label %882

882:                                              ; preds = %882, %876
  %883 = phi i64 [ 0, %876 ], [ %917, %882 ]
  %884 = phi i64 [ %877, %876 ], [ %918, %882 ]
  %885 = sub i64 0, %883
  %886 = sub i64 0, %883
  %887 = getelementptr inbounds i16, i16* %879, i64 %886
  %888 = getelementptr inbounds i16, i16* %878, i64 %885
  %889 = getelementptr inbounds i16, i16* %888, i64 -7
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !130
  %892 = getelementptr inbounds i16, i16* %888, i64 -8
  %893 = getelementptr inbounds i16, i16* %892, i64 -7
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !130
  %896 = getelementptr inbounds i16, i16* %887, i64 -7
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %897, align 2, !alias.scope !133, !noalias !130
  %898 = getelementptr inbounds i16, i16* %887, i64 -8
  %899 = getelementptr inbounds i16, i16* %898, i64 -7
  %900 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %900, align 2, !alias.scope !133, !noalias !130
  %901 = sub nuw nsw i64 -16, %883
  %902 = sub nuw nsw i64 -16, %883
  %903 = getelementptr inbounds i16, i16* %881, i64 %902
  %904 = getelementptr inbounds i16, i16* %880, i64 %901
  %905 = getelementptr inbounds i16, i16* %904, i64 -7
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !130
  %908 = getelementptr inbounds i16, i16* %904, i64 -8
  %909 = getelementptr inbounds i16, i16* %908, i64 -7
  %910 = bitcast i16* %909 to <8 x i16>*
  %911 = load <8 x i16>, <8 x i16>* %910, align 2, !alias.scope !130
  %912 = getelementptr inbounds i16, i16* %903, i64 -7
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %913, align 2, !alias.scope !133, !noalias !130
  %914 = getelementptr inbounds i16, i16* %903, i64 -8
  %915 = getelementptr inbounds i16, i16* %914, i64 -7
  %916 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %911, <8 x i16>* %916, align 2, !alias.scope !133, !noalias !130
  %917 = add i64 %883, 32
  %918 = add i64 %884, -2
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %882, !llvm.loop !135

920:                                              ; preds = %882
  %921 = sub nuw nsw i64 -32, %883
  br label %922

922:                                              ; preds = %920, %864
  %923 = phi i64 [ 0, %864 ], [ %921, %920 ]
  %924 = icmp eq i64 %874, 0
  br i1 %924, label %942, label %925

925:                                              ; preds = %922
  %926 = getelementptr i16, i16* %857, i64 -1
  %927 = getelementptr i16, i16* %858, i64 -1
  %928 = getelementptr inbounds i16, i16* %927, i64 %923
  %929 = getelementptr inbounds i16, i16* %926, i64 %923
  %930 = getelementptr inbounds i16, i16* %929, i64 -7
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !130
  %933 = getelementptr inbounds i16, i16* %929, i64 -8
  %934 = getelementptr inbounds i16, i16* %933, i64 -7
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !130
  %937 = getelementptr inbounds i16, i16* %928, i64 -7
  %938 = bitcast i16* %937 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %938, align 2, !alias.scope !133, !noalias !130
  %939 = getelementptr inbounds i16, i16* %928, i64 -8
  %940 = getelementptr inbounds i16, i16* %939, i64 -7
  %941 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %941, align 2, !alias.scope !133, !noalias !130
  br label %942

942:                                              ; preds = %922, %925
  %943 = icmp eq i64 %676, %865
  br i1 %943, label %997, label %944

944:                                              ; preds = %942, %860, %856
  %945 = phi i64 [ %676, %860 ], [ %676, %856 ], [ %866, %942 ]
  %946 = phi i16* [ %857, %860 ], [ %857, %856 ], [ %868, %942 ]
  %947 = phi i16* [ %858, %860 ], [ %858, %856 ], [ %870, %942 ]
  %948 = add i64 %945, -1
  %949 = and i64 %945, 7
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %962, label %951

951:                                              ; preds = %944, %951
  %952 = phi i64 [ %959, %951 ], [ %945, %944 ]
  %953 = phi i16* [ %957, %951 ], [ %946, %944 ]
  %954 = phi i16* [ %956, %951 ], [ %947, %944 ]
  %955 = phi i64 [ %960, %951 ], [ %949, %944 ]
  %956 = getelementptr inbounds i16, i16* %954, i64 -1
  %957 = getelementptr inbounds i16, i16* %953, i64 -1
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %952, -1
  %960 = add i64 %955, -1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %951, !llvm.loop !136

962:                                              ; preds = %951, %944
  %963 = phi i64 [ %945, %944 ], [ %959, %951 ]
  %964 = phi i16* [ %946, %944 ], [ %957, %951 ]
  %965 = phi i16* [ %947, %944 ], [ %956, %951 ]
  %966 = icmp ult i64 %948, 7
  br i1 %966, label %997, label %967

967:                                              ; preds = %962, %967
  %968 = phi i64 [ %995, %967 ], [ %963, %962 ]
  %969 = phi i16* [ %993, %967 ], [ %964, %962 ]
  %970 = phi i16* [ %992, %967 ], [ %965, %962 ]
  %971 = getelementptr inbounds i16, i16* %970, i64 -1
  %972 = getelementptr inbounds i16, i16* %969, i64 -1
  %973 = load i16, i16* %972, align 2
  store i16 %973, i16* %971, align 2
  %974 = getelementptr inbounds i16, i16* %970, i64 -2
  %975 = getelementptr inbounds i16, i16* %969, i64 -2
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %970, i64 -3
  %978 = getelementptr inbounds i16, i16* %969, i64 -3
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %970, i64 -4
  %981 = getelementptr inbounds i16, i16* %969, i64 -4
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %970, i64 -5
  %984 = getelementptr inbounds i16, i16* %969, i64 -5
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %970, i64 -6
  %987 = getelementptr inbounds i16, i16* %969, i64 -6
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %970, i64 -7
  %990 = getelementptr inbounds i16, i16* %969, i64 -7
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %970, i64 -8
  %993 = getelementptr inbounds i16, i16* %969, i64 -8
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %968, -8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %967, !llvm.loop !137

997:                                              ; preds = %962, %967, %819, %824, %942, %700, %799, %854, %695
  %998 = getelementptr inbounds i16, i16* %696, i64 %676
  store i16 0, i16* %998, align 2
  %999 = load i8, i8* %678, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1003

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %676, i64* %1002, align 8
  br label %1014

1003:                                             ; preds = %997
  %1004 = trunc i64 %676 to i8
  store i8 %1004, i8* %678, align 1
  br label %1014

1005:                                             ; preds = %686
  br i1 %680, label %1006, label %1009

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  br label %1011

1009:                                             ; preds = %1005
  %1010 = zext i8 %679 to i64
  br label %1011

1011:                                             ; preds = %1009, %1006
  %1012 = phi i64 [ %1008, %1006 ], [ %1010, %1009 ]
  %1013 = sub i64 %676, %687
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.26"* %0, i64 %687, i64 %1013, i64 %1012, i64 0, i64 %1012, i64 %676, i16* %1) #14
  br label %1014

1014:                                             ; preds = %1011, %1003, %1001, %664, %656, %654, %328
  ret %"class.std::__1::basic_string.26"* %0
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i16(i16) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87Context24DnsResolveCallbackHelperERKN2v820FunctionCallbackInfoINS2_5ValueEEEN3net24ProxyResolveDnsOperationE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.26", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.url::RawCanonOutputT", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.v8::Unlocker", align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 4
  %13 = bitcast i64* %12 to %"class.v8::External"*
  %14 = tail call i8* @_ZNK2v88External5ValueEv(%"class.v8::External"* %13) #14
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #14
  %17 = icmp eq i32 %1, 0
  %18 = icmp ult i32 %1, 2
  br i1 %18, label %19, label %178

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %169, label %23

23:                                               ; preds = %19
  %24 = icmp sgt i32 %21, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %23
  %26 = load i64*, i64** %10, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 160
  %30 = inttoptr i64 %29 to %"class.v8::Value"*
  br label %35

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %33 = bitcast i64** %32 to %"class.v8::Value"**
  %34 = load %"class.v8::Value"*, %"class.v8::Value"** %33, align 8
  br label %35

35:                                               ; preds = %31, %25
  %36 = phi %"class.v8::Value"* [ %30, %25 ], [ %34, %31 ]
  %37 = icmp eq %"class.v8::Value"* %36, null
  br i1 %37, label %169, label %38

38:                                               ; preds = %35
  br i1 %24, label %45, label %39

39:                                               ; preds = %38
  %40 = load i64*, i64** %10, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 160
  %44 = inttoptr i64 %43 to %"class.v8::Value"*
  br label %49

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = bitcast i64** %46 to %"class.v8::Value"**
  %48 = load %"class.v8::Value"*, %"class.v8::Value"** %47, align 8
  br label %49

49:                                               ; preds = %45, %39
  %50 = phi %"class.v8::Value"* [ %44, %39 ], [ %48, %45 ]
  %51 = bitcast %"class.v8::Value"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 3
  %54 = icmp eq i64 %53, 1
  br i1 %54, label %55, label %169

55:                                               ; preds = %49
  %56 = add i64 %52, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = and i64 %52, -4294967296
  %60 = zext i32 %58 to i64
  %61 = or i64 %59, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load i16, i16* %63, align 2
  %65 = icmp ult i16 %64, 64
  br i1 %65, label %66, label %169

66:                                               ; preds = %55
  %67 = bitcast %"class.std::__1::basic_string.26"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #14
  %68 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false) #14
  %70 = load i64*, i64** %10, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = bitcast i64* %71 to %"class.v8::Isolate"**
  %73 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %72, align 8
  br i1 %24, label %78, label %74

74:                                               ; preds = %66
  %75 = ptrtoint %"class.v8::Isolate"* %73 to i64
  %76 = add i64 %75, 160
  %77 = inttoptr i64 %76 to %"class.v8::Value"*
  br label %82

78:                                               ; preds = %66
  %79 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %80 = bitcast i64** %79 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %78, %74
  %83 = phi %"class.v8::Value"* [ %77, %74 ], [ %81, %78 ]
  %84 = bitcast %"class.v8::Value"* %83 to %"class.v8::String"*
  %85 = tail call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %84) #14, !noalias !138
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #14, !alias.scope !138
  %86 = icmp sgt i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.std::__1::basic_string.26"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %99

89:                                               ; preds = %82
  %90 = add nuw nsw i32 %85, 1
  %91 = sext i32 %90 to i64
  %92 = call i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.26"* nonnull %3, i64 %91) #14
  %93 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* %84, %"class.v8::Isolate"* %73, i16* %92, i32 0, i32 %85, i32 0) #14
  %94 = bitcast %"class.std::__1::basic_string.26"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %94, i64 0, i32 1, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = load i16*, i16** %68, align 8
  %98 = load i64, i64* %69, align 8
  br label %99

99:                                               ; preds = %89, %87
  %100 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %88, %87 ], [ %94, %89 ]
  %101 = phi i64 [ 0, %87 ], [ %98, %89 ]
  %102 = phi i16* [ null, %87 ], [ %97, %89 ]
  %103 = phi i8 [ 0, %87 ], [ %96, %89 ]
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %105 = icmp slt i8 %103, 0
  %106 = bitcast %"class.std::__1::basic_string.26"* %3 to i16*
  %107 = select i1 %105, i16* %102, i16* %106
  %108 = zext i8 %103 to i64
  %109 = select i1 %105, i64 %101, i64 %108
  %110 = call zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(i16* %107, i64 %109) #14
  br i1 %110, label %111, label %127

111:                                              ; preds = %99
  %112 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #14
  %113 = load i8, i8* %104, align 1
  %114 = icmp slt i8 %113, 0
  %115 = load i16*, i16** %68, align 8
  %116 = select i1 %114, i16* %115, i16* %106
  %117 = load i64, i64* %69, align 8
  %118 = zext i8 %113 to i64
  %119 = select i1 %114, i64 %117, i64 %118
  call void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i16* %116, i64 %119) #14
  %120 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %111
  %125 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %125) #15
  br label %126

126:                                              ; preds = %124, %111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %112, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #14
  br label %161

127:                                              ; preds = %99
  %128 = bitcast %"class.url::RawCanonOutputT"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %128) #14
  %129 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 1
  %130 = bitcast [256 x i16]* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 512, i1 false) #14
  %131 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 1
  %133 = bitcast i16** %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIDsLi256EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %134 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 1, i64 0
  store i16* %134, i16** %132, align 8
  %135 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 2
  store i32 256, i32* %135, align 8
  %136 = load i8, i8* %104, align 1
  %137 = icmp slt i8 %136, 0
  %138 = load i16*, i16** %68, align 8
  %139 = load i64, i64* %69, align 8
  %140 = zext i8 %136 to i64
  %141 = select i1 %137, i16* %138, i16* %106
  %142 = select i1 %137, i64 %139, i64 %140
  %143 = trunc i64 %142 to i32
  %144 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0
  %145 = call zeroext i1 @_ZN3url10IDNToASCIIEPKDsiPNS_12CanonOutputTIDsEE(i16* %141, i32 %143, %"class.url::CanonOutputT"* nonnull %144) #14
  br i1 %145, label %146, label %152

146:                                              ; preds = %127
  %147 = load i16*, i16** %132, align 8
  %148 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 3
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = call zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16* %147, i64 %150, %"class.std::__1::basic_string"* nonnull %6) #14
  br label %152

152:                                              ; preds = %146, %127
  %153 = phi i1 [ %151, %146 ], [ false, %127 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIDsLi256EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %154 = load i16*, i16** %132, align 8
  %155 = icmp eq i16* %154, %134
  %156 = icmp eq i16* %154, null
  %157 = or i1 %155, %156
  br i1 %157, label %160, label %158

158:                                              ; preds = %152
  %159 = bitcast i16* %154 to i8*
  call void @_ZdaPv(i8* %159) #15
  br label %160

160:                                              ; preds = %158, %152
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %128) #14
  br label %161

161:                                              ; preds = %160, %126
  %162 = phi i1 [ true, %126 ], [ %153, %160 ]
  %163 = load i8, i8* %104, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %161
  %166 = bitcast %"class.std::__1::basic_string.26"* %3 to i8**
  %167 = load i8*, i8** %166, align 8
  call void @_ZdlPv(i8* %167) #15
  br label %168

168:                                              ; preds = %161, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #14
  br i1 %162, label %178, label %169

169:                                              ; preds = %49, %19, %35, %55, %168
  br i1 %17, label %170, label %271

170:                                              ; preds = %169
  %171 = load i64*, i64** %10, align 8
  %172 = getelementptr inbounds i64, i64* %171, i64 3
  %173 = getelementptr inbounds i64, i64* %171, i64 1
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, 176
  %176 = inttoptr i64 %175 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %172, align 8
  br label %271

178:                                              ; preds = %168, %2
  %179 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #14
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 0, i64 24, i1 false) #14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #14
  store i8 0, i8* %8, align 1
  %182 = bitcast %"class.v8::Unlocker"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #14
  %183 = getelementptr inbounds %"class.v8::Unlocker", %"class.v8::Unlocker"* %9, i64 0, i32 0
  store %"class.v8::internal::Isolate"* inttoptr (i64 -6148914691236517206 to %"class.v8::internal::Isolate"*), %"class.v8::internal::Isolate"** %183, align 8
  %184 = load i64*, i64** %10, align 8
  %185 = getelementptr inbounds i64, i64* %184, i64 1
  %186 = bitcast i64* %185 to %"class.v8::Isolate"**
  %187 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %186, align 8
  call void @_ZN2v88Unlocker10InitializeEPNS_7IsolateE(%"class.v8::Unlocker"* nonnull %9, %"class.v8::Isolate"* %187) #14
  %188 = getelementptr inbounds i8, i8* %14, i64 40
  %189 = bitcast i8* %188 to %"class.proxy_resolver::ProxyResolverV8::JSBindings"**
  %190 = load %"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.proxy_resolver::ProxyResolverV8::JSBindings"** %189, align 8
  %191 = bitcast %"class.proxy_resolver::ProxyResolverV8::JSBindings"* %190 to i1 (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*, i8*)***
  %192 = load i1 (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*, i8*)**, i1 (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*, i8*)*** %191, align 8
  %193 = load i1 (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*, i8*)*, i1 (%"class.proxy_resolver::ProxyResolverV8::JSBindings"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*, i8*)** %192, align 8
  %194 = call zeroext i1 %193(%"class.proxy_resolver::ProxyResolverV8::JSBindings"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 %1, %"class.std::__1::basic_string"* nonnull %7, i8* nonnull %8) #14
  call void @_ZN2v88UnlockerD1Ev(%"class.v8::Unlocker"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #14
  %195 = load i8, i8* %8, align 1, !range !7
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %202, label %197

197:                                              ; preds = %178
  %198 = load i64*, i64** %10, align 8
  %199 = getelementptr inbounds i64, i64* %198, i64 1
  %200 = bitcast i64* %199 to %"class.v8::Isolate"**
  %201 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %200, align 8
  call void @_ZN2v87Isolate18TerminateExecutionEv(%"class.v8::Isolate"* %201) #14
  br label %202

202:                                              ; preds = %178, %197
  br i1 %194, label %203, label %225

203:                                              ; preds = %202
  %204 = load i64*, i64** %10, align 8
  %205 = getelementptr inbounds i64, i64* %204, i64 3
  %206 = getelementptr inbounds i64, i64* %204, i64 1
  %207 = bitcast i64* %206 to %"class.v8::Isolate"**
  %208 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %207, align 8
  %209 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  %213 = load i8*, i8** %180, align 8
  %214 = load i64, i64* %181, align 8
  %215 = zext i8 %211 to i64
  %216 = select i1 %212, i8* %213, i8* %179
  %217 = select i1 %212, i64 %214, i64 %215
  %218 = trunc i64 %217 to i32
  %219 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %208, i8* %216, i32 0, i32 %218) #14
  %220 = icmp eq %"class.v8::String"* %219, null
  br i1 %220, label %221, label %223, !prof !2

221:                                              ; preds = %203
  call void @_ZN2v82V812ToLocalEmptyEv() #14
  %222 = getelementptr inbounds i64, i64* %204, i64 2
  br label %259

223:                                              ; preds = %203
  %224 = bitcast %"class.v8::String"* %219 to i64*
  br label %259

225:                                              ; preds = %202
  switch i32 %1, label %263 [
    i32 0, label %226
    i32 1, label %233
    i32 2, label %240
    i32 3, label %252
  ]

226:                                              ; preds = %225
  %227 = load i64*, i64** %10, align 8
  %228 = getelementptr inbounds i64, i64* %227, i64 3
  %229 = getelementptr inbounds i64, i64* %227, i64 1
  %230 = load i64, i64* %229, align 8
  %231 = add i64 %230, 176
  %232 = inttoptr i64 %231 to i64*
  br label %259

233:                                              ; preds = %225
  %234 = load i64*, i64** %10, align 8
  %235 = getelementptr inbounds i64, i64* %234, i64 3
  %236 = getelementptr inbounds i64, i64* %234, i64 1
  %237 = load i64, i64* %236, align 8
  %238 = add i64 %237, 200
  %239 = inttoptr i64 %238 to i64*
  br label %259

240:                                              ; preds = %225
  %241 = load i64*, i64** %10, align 8
  %242 = getelementptr inbounds i64, i64* %241, i64 3
  %243 = getelementptr inbounds i64, i64* %241, i64 1
  %244 = bitcast i64* %243 to %"class.v8::Isolate"**
  %245 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %244, align 8
  %246 = call fastcc %"class.v8::String"* @_ZN14proxy_resolver12_GLOBAL__N_122ASCIILiteralToV8StringEPN2v87IsolateEPKc(%"class.v8::Isolate"* %245, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0))
  %247 = icmp eq %"class.v8::String"* %246, null
  br i1 %247, label %248, label %250, !prof !2

248:                                              ; preds = %240
  %249 = getelementptr inbounds i64, i64* %241, i64 2
  br label %259

250:                                              ; preds = %240
  %251 = bitcast %"class.v8::String"* %246 to i64*
  br label %259

252:                                              ; preds = %225
  %253 = load i64*, i64** %10, align 8
  %254 = getelementptr inbounds i64, i64* %253, i64 3
  %255 = getelementptr inbounds i64, i64* %253, i64 1
  %256 = load i64, i64* %255, align 8
  %257 = add i64 %256, 200
  %258 = inttoptr i64 %257 to i64*
  br label %259

259:                                              ; preds = %226, %233, %252, %221, %223, %248, %250
  %260 = phi i64* [ %251, %250 ], [ %249, %248 ], [ %224, %223 ], [ %222, %221 ], [ %258, %252 ], [ %239, %233 ], [ %232, %226 ]
  %261 = phi i64* [ %242, %250 ], [ %242, %248 ], [ %205, %223 ], [ %205, %221 ], [ %254, %252 ], [ %235, %233 ], [ %228, %226 ]
  %262 = load i64, i64* %260, align 8
  store i64 %262, i64* %261, align 8
  br label %263

263:                                              ; preds = %259, %225
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #14
  %264 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %264, i64 0, i32 1, i32 0
  %266 = load i8, i8* %265, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %263
  %269 = load i8*, i8** %180, align 8
  call void @_ZdlPv(i8* %269) #15
  br label %270

270:                                              ; preds = %263, %268
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #14
  br label %271

271:                                              ; preds = %169, %170, %270
  %272 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %273 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %272, i64 0, i32 1, i32 0
  %274 = load i8, i8* %273, align 1
  %275 = icmp slt i8 %274, 0
  br i1 %275, label %276, label %278

276:                                              ; preds = %271
  %277 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %277) #15
  br label %278

278:                                              ; preds = %271, %276
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88UnlockerD1Ev(%"class.v8::Unlocker"*) unnamed_addr #4

declare void @_ZN2v87Isolate18TerminateExecutionEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3url10IDNToASCIIEPKDsiPNS_12CanonOutputTIDsEE(i16*, i32, %"class.url::CanonOutputT"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIDsLi256EED2Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIDsLi256EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i16* %4, %5
  %7 = icmp eq i16* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdaPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIDsLi256EED0Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIDsLi256EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i16* %4, %5
  %7 = icmp eq i16* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdaPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = bitcast %"class.url::RawCanonOutputT"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIDsLi256EE6ResizeEi(%"class.url::RawCanonOutputT"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 2)
  %5 = extractvalue { i64, i1 } %4, 1
  %6 = extractvalue { i64, i1 } %4, 0
  %7 = select i1 %5, i64 -1, i64 %6
  %8 = tail call i8* @_Znam(i64 %7) #15
  %9 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i16** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %1
  %15 = select i1 %14, i32 %13, i32 %1
  %16 = sext i32 %15 to i64
  %17 = shl nsw i64 %16, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* align 2 %11, i64 %17, i1 false)
  %18 = bitcast i8* %11 to i16*
  %19 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %20 = icmp eq i16* %19, %18
  %21 = icmp eq i8* %11, null
  %22 = or i1 %20, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %11) #15
  br label %24

24:                                               ; preds = %2, %23
  store i8* %8, i8** %10, align 8
  %25 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %25, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

declare void @_ZN2v88Unlocker10InitializeEPNS_7IsolateE(%"class.v8::Unlocker"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"*) local_unnamed_addr #1

declare i32 @_ZNK2v86String9WriteUtf8EPNS_7IsolateEPciPii(%"class.v8::String"*, %"class.v8::Isolate"*, i8*, i32, i32*, i32) local_unnamed_addr #1

declare i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #4

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #1

declare zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"*, %"class.base::BasicStringPiece.80"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #4

declare zeroext i1 @_ZN4base13IsStringASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::__wrap_iter"* %3 to i64*
  %6 = bitcast %"class.std::__1::__wrap_iter"* %4 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %3, i64 0, i32 0
  %9 = inttoptr i64 %7 to i8*
  %10 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %18

17:                                               ; preds = %34, %1
  store i8 1, i8* %2, align 4
  br label %61

18:                                               ; preds = %13, %34
  %19 = phi i8* [ %9, %13 ], [ %36, %34 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %8, align 8
  %21 = load i8, i8* %19, align 1
  %22 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %21, i64 0) #14
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %16, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i8*, i8** %15, align 8
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %30 [
    i8 32, label %34
    i8 13, label %34
    i8 10, label %34
    i8 9, label %34
    i8 12, label %34
  ]

30:                                               ; preds = %27, %24
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %31, %32
  br i1 %33, label %61, label %39

34:                                               ; preds = %27, %27, %27, %27, %27, %18
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %6, align 8
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8*, i8** %10, align 8
  %38 = icmp eq i8* %37, %36
  br i1 %38, label %17, label %18

39:                                               ; preds = %30, %52
  %40 = phi i8* [ %53, %52 ], [ %31, %30 ]
  %41 = load i8, i8* %40, align 1
  %42 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %41, i64 0) #14
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = load i8*, i8** %8, align 8
  %46 = load i32, i32* %16, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = load i8, i8* %45, align 1
  %50 = add i8 %49, -9
  %51 = icmp ult i8 %50, 24
  br i1 %51, label %56, label %52

52:                                               ; preds = %56, %48, %44
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %53, i8** %8, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = icmp eq i8* %53, %54
  br i1 %55, label %61, label %39

56:                                               ; preds = %48
  %57 = zext i8 %50 to i32
  %58 = lshr i32 8388635, %57
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %52, label %61

61:                                               ; preds = %17, %30, %52, %39, %56
  %62 = phi i1 [ true, %56 ], [ false, %17 ], [ true, %30 ], [ true, %52 ], [ true, %39 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::__wrap_iter"* %28 to i64*
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %28, i64 0, i32 0
  %34 = load i8, i8* %27, align 4, !range !7
  %35 = icmp eq i8 %34, 0
  br label %36

36:                                               ; preds = %113, %22
  %37 = phi i8* [ %5, %22 ], [ %106, %113 ]
  %38 = phi i64 [ %23, %22 ], [ %118, %113 ]
  %39 = phi i8* [ %24, %22 ], [ %114, %113 ]
  %40 = phi i1 [ %35, %22 ], [ false, %113 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %113 ]
  %42 = phi i8 [ 0, %22 ], [ %109, %113 ]
  %43 = phi i8 [ 0, %22 ], [ %110, %113 ]
  br i1 %40, label %105, label %44

44:                                               ; preds = %36
  store i8 0, i8* %27, align 4
  store i64 %38, i64* %29, align 8
  %45 = inttoptr i64 %38 to i8*
  %46 = icmp eq i8* %37, %45
  br i1 %46, label %91, label %47

47:                                               ; preds = %44, %76
  %48 = phi i8* [ %77, %76 ], [ %37, %44 ]
  %49 = phi i8* [ %82, %76 ], [ %39, %44 ]
  %50 = phi i8* [ %82, %76 ], [ %45, %44 ]
  %51 = phi i8 [ %81, %76 ], [ %43, %44 ]
  %52 = phi i8 [ %80, %76 ], [ %42, %44 ]
  %53 = phi i8 [ %79, %76 ], [ %41, %44 ]
  %54 = load i8, i8* %50, align 1
  %55 = icmp eq i8 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %47
  %57 = icmp eq i8 %52, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %56
  %59 = icmp eq i8 %54, 92
  br i1 %59, label %76, label %60

60:                                               ; preds = %58
  %61 = icmp eq i8 %53, %54
  %62 = select i1 %61, i8 0, i8 %51
  br label %76

63:                                               ; preds = %47
  %64 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %30, i8 signext %54, i64 0) #14
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %66, label %84

66:                                               ; preds = %63
  %67 = load i32, i32* %31, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  switch i8 %54, label %70 [
    i8 32, label %84
    i8 13, label %84
    i8 10, label %84
    i8 9, label %84
    i8 12, label %84
  ]

70:                                               ; preds = %69, %66
  %71 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %32, i8 signext %54, i64 0) #14
  %72 = icmp ne i64 %71, -1
  %73 = zext i1 %72 to i8
  %74 = load i8*, i8** %26, align 8
  %75 = load i8*, i8** %4, align 8
  br label %76

76:                                               ; preds = %60, %70, %56, %58
  %77 = phi i8* [ %48, %58 ], [ %48, %56 ], [ %75, %70 ], [ %48, %60 ]
  %78 = phi i8* [ %49, %58 ], [ %49, %56 ], [ %74, %70 ], [ %49, %60 ]
  %79 = phi i8 [ %53, %58 ], [ %53, %56 ], [ %54, %70 ], [ %53, %60 ]
  %80 = phi i8 [ 1, %58 ], [ 0, %56 ], [ %52, %70 ], [ 0, %60 ]
  %81 = phi i8 [ %51, %58 ], [ %51, %56 ], [ %73, %70 ], [ %62, %60 ]
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %82, i8** %26, align 8
  %83 = icmp eq i8* %82, %77
  br i1 %83, label %84, label %47

84:                                               ; preds = %76, %69, %69, %69, %69, %69, %63
  %85 = phi i8 [ %53, %63 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %79, %76 ]
  %86 = phi i8 [ %52, %63 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %80, %76 ]
  %87 = phi i8 [ 0, %63 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ %81, %76 ]
  %88 = load i8*, i8** %33, align 8
  %89 = load i8*, i8** %26, align 8
  %90 = ptrtoint i8* %89 to i64
  br label %91

91:                                               ; preds = %84, %44
  %92 = phi i64 [ %38, %44 ], [ %90, %84 ]
  %93 = phi i8* [ %39, %44 ], [ %89, %84 ]
  %94 = phi i8* [ %37, %44 ], [ %88, %84 ]
  %95 = phi i8 [ %41, %44 ], [ %85, %84 ]
  %96 = phi i8 [ %42, %44 ], [ %86, %84 ]
  %97 = phi i8 [ %43, %44 ], [ %87, %84 ]
  %98 = icmp eq i8* %94, %93
  br i1 %98, label %99, label %119

99:                                               ; preds = %91
  %100 = load i32, i32* %25, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %99
  %104 = load i8*, i8** %4, align 8
  br label %105

105:                                              ; preds = %103, %36
  %106 = phi i8* [ %37, %36 ], [ %104, %103 ]
  %107 = phi i64 [ %38, %36 ], [ %92, %103 ]
  %108 = phi i8 [ %41, %36 ], [ %95, %103 ]
  %109 = phi i8 [ %42, %36 ], [ %96, %103 ]
  %110 = phi i8 [ %43, %36 ], [ %97, %103 ]
  store i8 1, i8* %27, align 4
  store i64 %107, i64* %29, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = icmp eq i8* %106, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds i8, i8* %111, i64 1
  store i8* %114, i8** %26, align 8
  %115 = load i32, i32* %25, align 8
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = ptrtoint i8* %114 to i64
  br i1 %117, label %36, label %119

119:                                              ; preds = %91, %113, %105, %99
  %120 = phi i1 [ true, %99 ], [ true, %91 ], [ false, %105 ], [ true, %113 ]
  ret i1 %120
}

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__113__stable_sortIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.std::__1::__less.92"* dereferenceable(1), i64, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, i64) unnamed_addr #0 {
  %7 = alloca %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", align 8
  %8 = alloca %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", align 8
  switch i64 %3, label %55 [
    i64 0, label %250
    i64 1, label %250
    i64 2, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1, i32 1, i32 0, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %9
  %17 = icmp ugt i8 %12, %14
  br i1 %17, label %22, label %250

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1, i32 1
  %21 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %20, %"class.net::IPAddress"* dereferenceable(17) %19) #14
  br i1 %21, label %22, label %250

22:                                               ; preds = %16, %18
  %23 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #14
  %24 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0 to i8*
  %25 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -86, i64 24, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %24, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #14
  %26 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %8, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %26, %"class.net::IPAddress"* dereferenceable(17) %27) #14
  %28 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %32, %22
  %36 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %36, i64 24, i1 false) #14
  %37 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 0, i8* %38, align 1
  store i8 0, i8* %36, align 1
  %39 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %40 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 17, i1 false) #14
  %41 = load i8, i8* %38, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %43, %35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %23, i64 24, i1 false) #14
  %47 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 0, i8* %48, align 1
  store i8 0, i8* %23, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %25, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %26) #14
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #14
  br label %250

55:                                               ; preds = %6
  %56 = icmp slt i64 %3, 1
  br i1 %56, label %57, label %123

57:                                               ; preds = %55
  %58 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, %1
  br i1 %58, label %250, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 1
  %61 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %60, %1
  br i1 %61, label %250, label %62

62:                                               ; preds = %59
  %63 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %7 to i8*
  %64 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %7, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %7, i64 0, i32 1, i32 0, i32 1
  %66 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %69 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %104, %62
  %71 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %60, %62 ], [ %105, %104 ]
  %72 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %0, %62 ], [ %71, %104 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %63) #14
  %73 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 -86, i64 24, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 8 %73, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #14
  %74 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %72, i64 1, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %64, %"class.net::IPAddress"* dereferenceable(17) %74) #14
  %75 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %71, %0
  br i1 %75, label %88, label %76

76:                                               ; preds = %70, %115
  %77 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %78, %115 ], [ %71, %70 ]
  %78 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %77, i64 -1
  %79 = load i8, i8* %65, align 8
  %80 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %77, i64 -1, i32 1, i32 0, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %79, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %76
  %84 = icmp ugt i8 %79, %81
  br i1 %84, label %107, label %88

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %77, i64 -1, i32 1
  %87 = call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %64, %"class.net::IPAddress"* dereferenceable(17) %86) #14
  br i1 %87, label %107, label %88

88:                                               ; preds = %115, %85, %83, %70
  %89 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %0, %70 ], [ %77, %85 ], [ %77, %83 ], [ %0, %115 ]
  %90 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %94, %88
  %98 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %63, i64 24, i1 false) #14
  store i8 0, i8* %67, align 1
  store i8 0, i8* %63, align 8
  %99 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %89, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %68, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %64) #14
  %100 = load i8, i8* %67, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  %103 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %102, %97
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %63) #14
  %105 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %71, i64 1
  %106 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %105, %1
  br i1 %106, label %250, label %70

107:                                              ; preds = %85, %83
  %108 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #15
  br label %115

115:                                              ; preds = %112, %107
  %116 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %77 to i8*
  %117 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 24, i1 false) #14
  %118 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  store i8 0, i8* %119, align 1
  store i8 0, i8* %117, align 1
  %120 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %77, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %121 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %77, i64 -1, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 17, i1 false) #14
  %122 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %78, %0
  br i1 %122, label %88, label %76

123:                                              ; preds = %55
  %124 = lshr i64 %3, 1
  %125 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 %124
  %126 = icmp sgt i64 %3, %5
  br i1 %126, label %248, label %127

127:                                              ; preds = %123
  tail call fastcc void @_ZNSt3__118__stable_sort_moveIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %125, %"struct.std::__1::__less.92"* dereferenceable(1) %2, i64 %124, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4)
  %128 = sub nsw i64 %3, %124
  %129 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 %124
  tail call fastcc void @_ZNSt3__118__stable_sort_moveIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %125, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, %"struct.std::__1::__less.92"* dereferenceable(1) %2, i64 %128, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %129)
  %130 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 %3
  br label %133

131:                                              ; preds = %204
  %132 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %205, %130
  br i1 %132, label %229, label %209

133:                                              ; preds = %127, %204
  %134 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %206, %204 ], [ %4, %127 ]
  %135 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %205, %204 ], [ %129, %127 ]
  %136 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %207, %204 ], [ %0, %127 ]
  %137 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %135, %130
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %134, %129
  br i1 %139, label %229, label %140

140:                                              ; preds = %138, %150
  %141 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %157, %150 ], [ %134, %138 ]
  %142 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %158, %150 ], [ %136, %138 ]
  %143 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  tail call void @_ZdlPv(i8* %149) #15
  br label %150

150:                                              ; preds = %147, %140
  %151 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142 to i8*
  %152 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 24, i1 false) #14
  %153 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %141 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  store i8 0, i8* %154, align 1
  store i8 0, i8* %152, align 1
  %155 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %156 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %141, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 17, i1 false) #14
  %157 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %141, i64 1
  %158 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 1
  %159 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %157, %129
  br i1 %159, label %229, label %140

160:                                              ; preds = %133
  %161 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %135, i64 0, i32 1, i32 0, i32 1
  %162 = load i8, i8* %161, align 1
  %163 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %134, i64 0, i32 1, i32 0, i32 1
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %162, %164
  br i1 %165, label %168, label %166

166:                                              ; preds = %160
  %167 = icmp ugt i8 %162, %164
  br i1 %167, label %172, label %188

168:                                              ; preds = %160
  %169 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %134, i64 0, i32 1
  %170 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %135, i64 0, i32 1
  %171 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %170, %"class.net::IPAddress"* dereferenceable(17) %169) #14
  br i1 %171, label %172, label %188

172:                                              ; preds = %168, %166
  %173 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  tail call void @_ZdlPv(i8* %179) #15
  br label %180

180:                                              ; preds = %177, %172
  %181 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136 to i8*
  %182 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 24, i1 false) #14
  %183 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  store i8 0, i8* %184, align 1
  store i8 0, i8* %182, align 1
  %185 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %186 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %135, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 17, i1 false) #14
  %187 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %135, i64 1
  br label %204

188:                                              ; preds = %168, %166
  %189 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  tail call void @_ZdlPv(i8* %195) #15
  br label %196

196:                                              ; preds = %193, %188
  %197 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136 to i8*
  %198 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 24, i1 false) #14
  %199 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  store i8 0, i8* %200, align 1
  store i8 0, i8* %198, align 1
  %201 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %202 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %134, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %202, i64 17, i1 false) #14
  %203 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %134, i64 1
  br label %204

204:                                              ; preds = %196, %180
  %205 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %187, %180 ], [ %135, %196 ]
  %206 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %134, %180 ], [ %203, %196 ]
  %207 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136, i64 1
  %208 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %206, %129
  br i1 %208, label %131, label %133

209:                                              ; preds = %131, %219
  %210 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %226, %219 ], [ %205, %131 ]
  %211 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %227, %219 ], [ %207, %131 ]
  %212 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %211 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  tail call void @_ZdlPv(i8* %218) #15
  br label %219

219:                                              ; preds = %216, %209
  %220 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %211 to i8*
  %221 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 24, i1 false) #14
  %222 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %210 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %222, i64 0, i32 1, i32 0
  store i8 0, i8* %223, align 1
  store i8 0, i8* %221, align 1
  %224 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %211, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %225 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %210, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %225, i64 17, i1 false) #14
  %226 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %210, i64 1
  %227 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %211, i64 1
  %228 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %226, %130
  br i1 %228, label %229, label %209

229:                                              ; preds = %219, %150, %131, %138
  %230 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, null
  %231 = icmp eq i64 %3, 0
  %232 = or i1 %231, %230
  br i1 %232, label %250, label %233

233:                                              ; preds = %229, %244
  %234 = phi i64 [ %245, %244 ], [ 0, %229 ]
  %235 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %246, %244 ], [ %4, %229 ]
  %236 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %235, i64 0, i32 1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %236) #14
  %237 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %235 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %244

241:                                              ; preds = %233
  %242 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  tail call void @_ZdlPv(i8* %243) #15
  br label %244

244:                                              ; preds = %241, %233
  %245 = add nuw i64 %234, 1
  %246 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %235, i64 1
  %247 = icmp eq i64 %245, %3
  br i1 %247, label %250, label %233

248:                                              ; preds = %123
  tail call fastcc void @_ZNSt3__113__stable_sortIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %125, %"struct.std::__1::__less.92"* dereferenceable(1) %2, i64 %124, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 %5)
  %249 = sub nsw i64 %3, %124
  tail call fastcc void @_ZNSt3__113__stable_sortIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %125, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, %"struct.std::__1::__less.92"* dereferenceable(1) %2, i64 %249, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 %5)
  tail call fastcc void @_ZNSt3__115__inplace_mergeIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %125, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, %"struct.std::__1::__less.92"* dereferenceable(1) %2, i64 %124, i64 %249, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 %5)
  br label %250

250:                                              ; preds = %244, %104, %229, %59, %57, %16, %248, %18, %54, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__118__stable_sort_moveIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.std::__1::__less.92"* dereferenceable(1), i64, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*) unnamed_addr #0 {
  switch i64 %3, label %44 [
    i64 0, label %197
    i64 1, label %6
    i64 2, label %11
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4 to i8*
  %8 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %9, %"class.net::IPAddress"* dereferenceable(17) %10) #14
  br label %197

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1
  %13 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1, i32 1, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = icmp ugt i8 %14, %16
  br i1 %19, label %24, label %34

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1, i32 1
  %23 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %22, %"class.net::IPAddress"* dereferenceable(17) %21) #14
  br i1 %23, label %24, label %34

24:                                               ; preds = %18, %20
  %25 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4 to i8*
  %26 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #14
  %27 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %27, %"class.net::IPAddress"* dereferenceable(17) %28) #14
  %29 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 1
  %30 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %29 to i8*
  %31 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #14
  %32 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 1, i32 1
  %33 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %32, %"class.net::IPAddress"* dereferenceable(17) %33) #14
  br label %197

34:                                               ; preds = %18, %20
  %35 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4 to i8*
  %36 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #14
  %37 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %37, %"class.net::IPAddress"* dereferenceable(17) %38) #14
  %39 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 1
  %40 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %39 to i8*
  %41 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #14
  %42 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 1, i32 1
  %43 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, i64 -1, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %42, %"class.net::IPAddress"* dereferenceable(17) %43) #14
  br label %197

44:                                               ; preds = %5
  %45 = icmp slt i64 %3, 9
  br i1 %45, label %46, label %131

46:                                               ; preds = %44
  %47 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, %1
  br i1 %47, label %197, label %48

48:                                               ; preds = %46
  %49 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4 to i8*
  %50 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #14
  %51 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %51, %"class.net::IPAddress"* dereferenceable(17) %52) #14
  %53 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 1
  %54 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %53, %1
  br i1 %54, label %197, label %55

55:                                               ; preds = %48, %128
  %56 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %129, %128 ], [ %53, %48 ]
  %57 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %59, %128 ], [ %4, %48 ]
  %58 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %56, %128 ], [ %0, %48 ]
  %59 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %57, i64 1
  %60 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %58, i64 1, i32 1, i32 0, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %57, i64 0, i32 1, i32 0, i32 1
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %61, %63
  br i1 %64, label %67, label %65

65:                                               ; preds = %55
  %66 = icmp ugt i8 %61, %63
  br i1 %66, label %71, label %123

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %57, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %58, i64 1, i32 1
  %70 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %69, %"class.net::IPAddress"* dereferenceable(17) %68) #14
  br i1 %70, label %71, label %123

71:                                               ; preds = %67, %65
  %72 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %59 to i8*
  %73 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #14
  %74 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %57, i64 1, i32 1
  %75 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %57, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %74, %"class.net::IPAddress"* dereferenceable(17) %75) #14
  %76 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %57, %4
  br i1 %76, label %107, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %58, i64 1, i32 1
  br label %79

79:                                               ; preds = %99, %77
  %80 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %57, %77 ], [ %81, %99 ]
  %81 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %80, i64 -1
  %82 = load i8, i8* %60, align 1
  %83 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %80, i64 -1, i32 1, i32 0, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %82, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %79
  %87 = icmp ugt i8 %82, %84
  br i1 %87, label %91, label %107

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %80, i64 -1, i32 1
  %90 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %78, %"class.net::IPAddress"* dereferenceable(17) %89) #14
  br i1 %90, label %91, label %107

91:                                               ; preds = %88, %86
  %92 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %96, %91
  %100 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %80 to i8*
  %101 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 24, i1 false) #14
  %102 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  store i8 0, i8* %103, align 1
  store i8 0, i8* %101, align 1
  %104 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %80, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %105 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %80, i64 -1, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 17, i1 false) #14
  %106 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %81, %4
  br i1 %106, label %107, label %79

107:                                              ; preds = %99, %88, %86, %71
  %108 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %4, %71 ], [ %80, %88 ], [ %4, %99 ], [ %80, %86 ]
  %109 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  tail call void @_ZdlPv(i8* %115) #15
  br label %116

116:                                              ; preds = %113, %107
  %117 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %108 to i8*
  %118 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 24, i1 false) #14
  %119 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  store i8 0, i8* %120, align 1
  store i8 0, i8* %118, align 1
  %121 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %108, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %122 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %58, i64 1, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 17, i1 false) #14
  br label %128

123:                                              ; preds = %67, %65
  %124 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %59 to i8*
  %125 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #14
  %126 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %57, i64 1, i32 1
  %127 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %58, i64 1, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %126, %"class.net::IPAddress"* dereferenceable(17) %127) #14
  br label %128

128:                                              ; preds = %123, %116
  %129 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56, i64 1
  %130 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %129, %1
  br i1 %130, label %197, label %55

131:                                              ; preds = %44
  %132 = lshr i64 %3, 1
  %133 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, i64 %132
  tail call fastcc void @_ZNSt3__113__stable_sortIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %133, %"struct.std::__1::__less.92"* dereferenceable(1) %2, i64 %132, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 %132)
  %134 = sub nsw i64 %3, %132
  %135 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %4, i64 %132
  tail call fastcc void @_ZNSt3__113__stable_sortIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %133, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1, %"struct.std::__1::__less.92"* dereferenceable(1) %2, i64 %134, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %135, i64 %134)
  %136 = icmp eq i64 %132, 0
  br i1 %136, label %137, label %151

137:                                              ; preds = %192, %131
  %138 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %133, %131 ], [ %193, %192 ]
  %139 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %4, %131 ], [ %195, %192 ]
  %140 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %138, %1
  br i1 %140, label %197, label %141

141:                                              ; preds = %137, %141
  %142 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %149, %141 ], [ %139, %137 ]
  %143 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %148, %141 ], [ %138, %137 ]
  %144 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142 to i8*
  %145 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #14
  %146 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 0, i32 1
  %147 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %143, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %146, %"class.net::IPAddress"* dereferenceable(17) %147) #14
  %148 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %143, i64 1
  %149 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 1
  %150 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %148, %1
  br i1 %150, label %197, label %141

151:                                              ; preds = %131, %192
  %152 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %195, %192 ], [ %4, %131 ]
  %153 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %194, %192 ], [ %0, %131 ]
  %154 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %193, %192 ], [ %133, %131 ]
  %155 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %154, %1
  br i1 %155, label %156, label %168

156:                                              ; preds = %151
  %157 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %153, %133
  br i1 %157, label %197, label %158

158:                                              ; preds = %156, %158
  %159 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %166, %158 ], [ %152, %156 ]
  %160 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %165, %158 ], [ %153, %156 ]
  %161 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %159 to i8*
  %162 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #14
  %163 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %159, i64 0, i32 1
  %164 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %160, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %163, %"class.net::IPAddress"* dereferenceable(17) %164) #14
  %165 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %160, i64 1
  %166 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %159, i64 1
  %167 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %165, %133
  br i1 %167, label %197, label %158

168:                                              ; preds = %151
  %169 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %154, i64 0, i32 1, i32 0, i32 1
  %170 = load i8, i8* %169, align 1
  %171 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %153, i64 0, i32 1, i32 0, i32 1
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %170, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %168
  %175 = icmp ugt i8 %170, %172
  br i1 %175, label %180, label %186

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %153, i64 0, i32 1
  %178 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %154, i64 0, i32 1
  %179 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %178, %"class.net::IPAddress"* dereferenceable(17) %177) #14
  br i1 %179, label %180, label %186

180:                                              ; preds = %176, %174
  %181 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %152 to i8*
  %182 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 24, i1 false) #14
  %183 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %152, i64 0, i32 1
  %184 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %154, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %183, %"class.net::IPAddress"* dereferenceable(17) %184) #14
  %185 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %154, i64 1
  br label %192

186:                                              ; preds = %176, %174
  %187 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %152 to i8*
  %188 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #14
  %189 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %152, i64 0, i32 1
  %190 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %153, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %189, %"class.net::IPAddress"* dereferenceable(17) %190) #14
  %191 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %153, i64 1
  br label %192

192:                                              ; preds = %186, %180
  %193 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %185, %180 ], [ %154, %186 ]
  %194 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %153, %180 ], [ %191, %186 ]
  %195 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %152, i64 1
  %196 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %194, %133
  br i1 %196, label %137, label %151

197:                                              ; preds = %158, %141, %128, %156, %137, %48, %46, %34, %24, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__115__inplace_mergeIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, %"struct.std::__1::__less.92"* readnone dereferenceable(1), i64, i64, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*, i64) unnamed_addr #0 {
  %9 = alloca %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", align 8
  %10 = alloca %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", align 8
  %11 = alloca %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", align 8
  %12 = icmp eq i64 %5, 0
  br i1 %12, label %492, label %13

13:                                               ; preds = %8
  %14 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %1 to i64
  %15 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %0 to i64
  %16 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9 to i8*
  %17 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %18 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9, i64 0, i32 1
  %19 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %10 to i8*
  %23 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %24 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %10, i64 0, i32 1
  %25 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %13, %485
  %29 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %2, %13 ], [ %490, %485 ]
  %30 = phi i64 [ %4, %13 ], [ %489, %485 ]
  %31 = phi i64 [ %5, %13 ], [ %488, %485 ]
  %32 = phi i64 [ %14, %13 ], [ %487, %485 ]
  %33 = phi i64 [ %15, %13 ], [ %486, %485 ]
  %34 = icmp sgt i64 %30, %7
  %35 = icmp sgt i64 %31, %7
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %43

37:                                               ; preds = %28
  %38 = icmp eq i64 %30, 0
  br i1 %38, label %492, label %39

39:                                               ; preds = %37
  %40 = inttoptr i64 %32 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %41 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %40, i64 0, i32 1, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %40, i64 0, i32 1
  br label %248

43:                                               ; preds = %28
  %44 = inttoptr i64 %33 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %45 = inttoptr i64 %32 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %46 = icmp sgt i64 %30, %31
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %44, %45
  br i1 %48, label %492, label %127

49:                                               ; preds = %43
  %50 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %29, %45
  br i1 %50, label %492, label %216

51:                                               ; preds = %127
  %52 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %137, %6
  br i1 %52, label %228, label %53

53:                                               ; preds = %51, %122
  %54 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %124, %122 ], [ %6, %51 ]
  %55 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %125, %122 ], [ %44, %51 ]
  %56 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %123, %122 ], [ %45, %51 ]
  %57 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56, %29
  br i1 %57, label %58, label %78

58:                                               ; preds = %53, %68
  %59 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %76, %68 ], [ %55, %53 ]
  %60 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %75, %68 ], [ %54, %53 ]
  %61 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #15
  br label %68

68:                                               ; preds = %65, %58
  %69 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %59 to i8*
  %70 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false) #14
  %71 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 0, i8* %72, align 1
  store i8 0, i8* %70, align 1
  %73 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %74 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %60, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 17, i1 false) #14
  %75 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %60, i64 1
  %76 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %59, i64 1
  %77 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %60, %128
  br i1 %77, label %228, label %58

78:                                               ; preds = %53
  %79 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56, i64 0, i32 1, i32 0, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %54, i64 0, i32 1, i32 0, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %80, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %78
  %85 = icmp ugt i8 %80, %82
  br i1 %85, label %90, label %106

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %54, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56, i64 0, i32 1
  %89 = call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %88, %"class.net::IPAddress"* dereferenceable(17) %87) #14
  br i1 %89, label %90, label %106

90:                                               ; preds = %86, %84
  %91 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %95, %90
  %99 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55 to i8*
  %100 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false) #14
  %101 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 0, i8* %102, align 1
  store i8 0, i8* %100, align 1
  %103 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %104 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 17, i1 false) #14
  %105 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %56, i64 1
  br label %122

106:                                              ; preds = %86, %84
  %107 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %111, %106
  %115 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55 to i8*
  %116 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #14
  %117 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  store i8 0, i8* %118, align 1
  store i8 0, i8* %116, align 1
  %119 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %120 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %54, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 17, i1 false) #14
  %121 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %54, i64 1
  br label %122

122:                                              ; preds = %114, %98
  %123 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %105, %98 ], [ %56, %114 ]
  %124 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %54, %98 ], [ %121, %114 ]
  %125 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %55, i64 1
  %126 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %124, %137
  br i1 %126, label %228, label %53

127:                                              ; preds = %47, %127
  %128 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %137, %127 ], [ %6, %47 ]
  %129 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %136, %127 ], [ %44, %47 ]
  %130 = phi i64 [ %135, %127 ], [ 0, %47 ]
  %131 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %128 to i8*
  %132 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #14
  %133 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %128, i64 0, i32 1
  %134 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %129, i64 0, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %133, %"class.net::IPAddress"* dereferenceable(17) %134) #14
  %135 = add i64 %130, 1
  %136 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %129, i64 1
  %137 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %128, i64 1
  %138 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %136, %45
  br i1 %138, label %51, label %127

139:                                              ; preds = %216
  %140 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %226, %6
  br i1 %140, label %228, label %141

141:                                              ; preds = %139, %204
  %142 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %214, %204 ], [ %29, %139 ]
  %143 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %209, %204 ], [ %226, %139 ]
  %144 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %208, %204 ], [ %45, %139 ]
  %145 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %144, %44
  br i1 %145, label %146, label %166

146:                                              ; preds = %141, %158
  %147 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %149, %158 ], [ %143, %141 ]
  %148 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %150, %158 ], [ %142, %141 ]
  %149 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %147, i64 -1
  %150 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %148, i64 -1
  %151 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %146
  %156 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %157) #15
  br label %158

158:                                              ; preds = %155, %146
  %159 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %150 to i8*
  %160 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %160, i64 24, i1 false) #14
  %161 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %149 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  store i8 0, i8* %162, align 1
  store i8 0, i8* %160, align 1
  %163 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %148, i64 -1, i32 1, i32 0, i32 0, i32 0, i64 0
  %164 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %147, i64 -1, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 17, i1 false) #14
  %165 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %149, %6
  br i1 %165, label %228, label %146

166:                                              ; preds = %141
  %167 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %144, i64 -1
  %168 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %143, i64 -1
  %169 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %143, i64 -1, i32 1, i32 0, i32 1
  %170 = load i8, i8* %169, align 1
  %171 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %144, i64 -1, i32 1, i32 0, i32 1
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %170, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %166
  %175 = icmp ugt i8 %170, %172
  br i1 %175, label %180, label %192

176:                                              ; preds = %166
  %177 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %144, i64 -1, i32 1
  %178 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %143, i64 -1, i32 1
  %179 = call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %178, %"class.net::IPAddress"* dereferenceable(17) %177) #14
  br i1 %179, label %180, label %192

180:                                              ; preds = %176, %174
  %181 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 -1
  %182 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %181 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %188) #15
  br label %189

189:                                              ; preds = %186, %180
  %190 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %181 to i8*
  %191 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 8 %191, i64 24, i1 false) #14
  br label %204

192:                                              ; preds = %176, %174
  %193 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 -1
  %194 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %193 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %200) #15
  br label %201

201:                                              ; preds = %198, %192
  %202 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %193 to i8*
  %203 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* align 8 %203, i64 24, i1 false) #14
  br label %204

204:                                              ; preds = %201, %189
  %205 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %168, %201 ], [ %167, %189 ]
  %206 = phi i8* [ %203, %201 ], [ %191, %189 ]
  %207 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %143, %201 ], [ %144, %189 ]
  %208 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %144, %201 ], [ %167, %189 ]
  %209 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %168, %201 ], [ %143, %189 ]
  %210 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %205 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  store i8 0, i8* %211, align 1
  store i8 0, i8* %206, align 1
  %212 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 -1, i32 1, i32 0, i32 0, i32 0, i64 0
  %213 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %207, i64 -1, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 17, i1 false) #14
  %214 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %142, i64 -1
  %215 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %209, %6
  br i1 %215, label %228, label %141

216:                                              ; preds = %49, %216
  %217 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %226, %216 ], [ %6, %49 ]
  %218 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %225, %216 ], [ %45, %49 ]
  %219 = phi i64 [ %224, %216 ], [ 0, %49 ]
  %220 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %217 to i8*
  %221 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %221, i8 0, i64 24, i1 false) #14
  %222 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %217, i64 0, i32 1
  %223 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %218, i64 0, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %222, %"class.net::IPAddress"* dereferenceable(17) %223) #14
  %224 = add i64 %219, 1
  %225 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %218, i64 1
  %226 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %217, i64 1
  %227 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %225, %29
  br i1 %227, label %139, label %216

228:                                              ; preds = %122, %68, %204, %158, %139, %51
  %229 = phi i64 [ %135, %51 ], [ %224, %139 ], [ %224, %158 ], [ %224, %204 ], [ %135, %68 ], [ %135, %122 ]
  %230 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %6, null
  %231 = icmp eq i64 %229, 0
  %232 = or i1 %230, %231
  br i1 %232, label %492, label %233

233:                                              ; preds = %228, %244
  %234 = phi i64 [ %245, %244 ], [ 0, %228 ]
  %235 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %246, %244 ], [ %6, %228 ]
  %236 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %235, i64 0, i32 1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %236) #14
  %237 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %235 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %244

241:                                              ; preds = %233
  %242 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  call void @_ZdlPv(i8* %243) #15
  br label %244

244:                                              ; preds = %241, %233
  %245 = add nuw i64 %234, 1
  %246 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %235, i64 1
  %247 = icmp eq i64 %245, %229
  br i1 %247, label %492, label %233

248:                                              ; preds = %39, %261
  %249 = phi i64 [ %30, %39 ], [ %264, %261 ]
  %250 = phi i64 [ %33, %39 ], [ %263, %261 ]
  %251 = inttoptr i64 %250 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %252 = load i8, i8* %41, align 1
  %253 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %251, i64 0, i32 1, i32 0, i32 1
  %254 = load i8, i8* %253, align 1
  %255 = icmp eq i8 %252, %254
  br i1 %255, label %258, label %256

256:                                              ; preds = %248
  %257 = icmp ugt i8 %252, %254
  br i1 %257, label %266, label %261

258:                                              ; preds = %248
  %259 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %251, i64 0, i32 1
  %260 = call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %42, %"class.net::IPAddress"* dereferenceable(17) %259) #14
  br i1 %260, label %266, label %261

261:                                              ; preds = %256, %258
  %262 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %251, i64 1
  %263 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %262 to i64
  %264 = add nsw i64 %249, -1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %492, label %248

266:                                              ; preds = %256, %258
  %267 = inttoptr i64 %250 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %268 = icmp slt i64 %249, %31
  br i1 %268, label %269, label %306

269:                                              ; preds = %266
  %270 = sdiv i64 %31, 2
  %271 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %40, i64 %270
  %272 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %271 to i64
  %273 = sub i64 %32, %250
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %301, label %275

275:                                              ; preds = %269
  %276 = sdiv exact i64 %273, 48
  %277 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %40, i64 %270, i32 1, i32 0, i32 1
  %278 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %40, i64 %270, i32 1
  br label %279

279:                                              ; preds = %297, %275
  %280 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %267, %275 ], [ %299, %297 ]
  %281 = phi i64 [ %276, %275 ], [ %298, %297 ]
  %282 = lshr i64 %281, 1
  %283 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %280, i64 1
  %284 = load i8, i8* %277, align 1
  %285 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %280, i64 %282, i32 1, i32 0, i32 1
  %286 = load i8, i8* %285, align 1
  %287 = icmp eq i8 %284, %286
  br i1 %287, label %290, label %288

288:                                              ; preds = %279
  %289 = icmp ugt i8 %284, %286
  br i1 %289, label %297, label %293

290:                                              ; preds = %279
  %291 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %280, i64 %282, i32 1
  %292 = call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %278, %"class.net::IPAddress"* dereferenceable(17) %291) #14
  br i1 %292, label %297, label %293

293:                                              ; preds = %290, %288
  %294 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %283, i64 %282
  %295 = xor i64 %282, -1
  %296 = add i64 %281, %295
  br label %297

297:                                              ; preds = %293, %290, %288
  %298 = phi i64 [ %296, %293 ], [ %282, %290 ], [ %282, %288 ]
  %299 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %294, %293 ], [ %280, %290 ], [ %280, %288 ]
  %300 = icmp eq i64 %298, 0
  br i1 %300, label %301, label %279

301:                                              ; preds = %297, %269
  %302 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %267, %269 ], [ %299, %297 ]
  %303 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %302 to i64
  %304 = sub i64 %303, %250
  %305 = sdiv exact i64 %304, 48
  br label %381

306:                                              ; preds = %266
  %307 = icmp eq i64 %249, 1
  br i1 %307, label %308, label %343

308:                                              ; preds = %306
  %309 = inttoptr i64 %32 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %310 = inttoptr i64 %250 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %311 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %311) #14
  %312 = inttoptr i64 %250 to i8*
  %313 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %313, i8 -86, i64 24, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %311, i8* align 8 %312, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %312, i8 0, i64 24, i1 false) #14
  %314 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %11, i64 0, i32 1
  %315 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %310, i64 0, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %314, %"class.net::IPAddress"* dereferenceable(17) %315) #14
  %316 = inttoptr i64 %250 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %317 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %316, i64 0, i32 1, i32 0
  %318 = load i8, i8* %317, align 1
  %319 = icmp slt i8 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %308
  %321 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load i8*, i8** %321, align 8
  call void @_ZdlPv(i8* %322) #15
  br label %323

323:                                              ; preds = %320, %308
  %324 = inttoptr i64 %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %312, i8* align 8 %324, i64 24, i1 false) #14
  %325 = inttoptr i64 %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %326 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %325, i64 0, i32 1, i32 0
  store i8 0, i8* %326, align 1
  store i8 0, i8* %324, align 1
  %327 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %310, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %328 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %309, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* align 8 %328, i64 17, i1 false) #14
  %329 = load i8, i8* %326, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %330, label %331, label %334

331:                                              ; preds = %323
  %332 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %309, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load i8*, i8** %332, align 8
  call void @_ZdlPv(i8* %333) #15
  br label %334

334:                                              ; preds = %331, %323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %324, i8* nonnull align 8 %311, i64 24, i1 false) #14
  %335 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %336 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %335, i64 0, i32 1, i32 0
  store i8 0, i8* %336, align 1
  store i8 0, i8* %311, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* align 8 %313, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %314) #14
  %337 = load i8, i8* %336, align 1
  %338 = icmp slt i8 %337, 0
  br i1 %338, label %339, label %342

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load i8*, i8** %340, align 8
  call void @_ZdlPv(i8* %341) #15
  br label %342

342:                                              ; preds = %339, %334
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %311) #14
  br label %492

343:                                              ; preds = %306
  %344 = sdiv i64 %249, 2
  %345 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %267, i64 %344
  %346 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %345 to i64
  %347 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %29 to i64
  %348 = sub i64 %347, %32
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %376, label %350

350:                                              ; preds = %343
  %351 = sdiv exact i64 %348, 48
  %352 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %267, i64 %344, i32 1, i32 0, i32 1
  %353 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %267, i64 %344, i32 1
  br label %354

354:                                              ; preds = %372, %350
  %355 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %40, %350 ], [ %374, %372 ]
  %356 = phi i64 [ %351, %350 ], [ %373, %372 ]
  %357 = lshr i64 %356, 1
  %358 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %355, i64 1
  %359 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %355, i64 %357, i32 1, i32 0, i32 1
  %360 = load i8, i8* %359, align 1
  %361 = load i8, i8* %352, align 1
  %362 = icmp eq i8 %360, %361
  br i1 %362, label %365, label %363

363:                                              ; preds = %354
  %364 = icmp ugt i8 %360, %361
  br i1 %364, label %368, label %372

365:                                              ; preds = %354
  %366 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %355, i64 %357, i32 1
  %367 = call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %366, %"class.net::IPAddress"* dereferenceable(17) %353) #14
  br i1 %367, label %368, label %372

368:                                              ; preds = %365, %363
  %369 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %358, i64 %357
  %370 = xor i64 %357, -1
  %371 = add i64 %356, %370
  br label %372

372:                                              ; preds = %368, %365, %363
  %373 = phi i64 [ %371, %368 ], [ %357, %365 ], [ %357, %363 ]
  %374 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %369, %368 ], [ %355, %365 ], [ %355, %363 ]
  %375 = icmp eq i64 %373, 0
  br i1 %375, label %376, label %354

376:                                              ; preds = %372, %343
  %377 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %40, %343 ], [ %374, %372 ]
  %378 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %377 to i64
  %379 = sub i64 %378, %32
  %380 = sdiv exact i64 %379, 48
  br label %381

381:                                              ; preds = %376, %301
  %382 = phi i64 [ %303, %301 ], [ %346, %376 ]
  %383 = phi i64 [ %272, %301 ], [ %378, %376 ]
  %384 = phi i64 [ %270, %301 ], [ %380, %376 ]
  %385 = phi i64 [ %305, %301 ], [ %344, %376 ]
  %386 = sub nsw i64 %249, %385
  %387 = sub nsw i64 %31, %384
  %388 = inttoptr i64 %382 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %389 = inttoptr i64 %383 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %390 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %388, %40
  br i1 %390, label %477, label %391

391:                                              ; preds = %381
  %392 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %40, %389
  br i1 %392, label %477, label %393

393:                                              ; preds = %391, %427
  %394 = phi i64 [ %430, %427 ], [ %32, %391 ]
  %395 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %423, %427 ], [ %388, %391 ]
  %396 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %424, %427 ], [ %40, %391 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #14
  %397 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %395 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 24, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %397, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %397, i8 0, i64 24, i1 false) #14
  %398 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %395, i64 0, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %18, %"class.net::IPAddress"* dereferenceable(17) %398) #14
  %399 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %395 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %400 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %399, i64 0, i32 1, i32 0
  %401 = load i8, i8* %400, align 1
  %402 = icmp slt i8 %401, 0
  br i1 %402, label %403, label %406

403:                                              ; preds = %393
  %404 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %395, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load i8*, i8** %404, align 8
  call void @_ZdlPv(i8* %405) #15
  br label %406

406:                                              ; preds = %403, %393
  %407 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %396 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %397, i8* align 8 %407, i64 24, i1 false) #14
  %408 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %396 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %409 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %408, i64 0, i32 1, i32 0
  store i8 0, i8* %409, align 1
  store i8 0, i8* %407, align 1
  %410 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %395, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %411 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %396, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %410, i8* align 8 %411, i64 17, i1 false) #14
  %412 = load i8, i8* %409, align 1
  %413 = icmp slt i8 %412, 0
  br i1 %413, label %414, label %417

414:                                              ; preds = %406
  %415 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %396, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load i8*, i8** %415, align 8
  call void @_ZdlPv(i8* %416) #15
  br label %417

417:                                              ; preds = %414, %406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %407, i8* nonnull align 8 %16, i64 24, i1 false) #14
  store i8 0, i8* %20, align 1
  store i8 0, i8* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %411, i8* align 8 %17, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %18) #14
  %418 = load i8, i8* %20, align 1
  %419 = icmp slt i8 %418, 0
  br i1 %419, label %420, label %422

420:                                              ; preds = %417
  %421 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %421) #15
  br label %422

422:                                              ; preds = %420, %417
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #14
  %423 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %395, i64 1
  %424 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %396, i64 1
  %425 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %424, %389
  %426 = inttoptr i64 %394 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  br i1 %425, label %431, label %427

427:                                              ; preds = %422
  %428 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %424 to i64
  %429 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %423, %426
  %430 = select i1 %429, i64 %428, i64 %394
  br label %393

431:                                              ; preds = %422
  %432 = inttoptr i64 %394 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  %433 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %423, %432
  br i1 %433, label %477, label %434

434:                                              ; preds = %431, %474
  %435 = phi i64 [ %476, %474 ], [ %394, %431 ]
  %436 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %469, %474 ], [ %423, %431 ]
  %437 = phi i64 [ %475, %474 ], [ %394, %431 ]
  %438 = inttoptr i64 %435 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  br label %439

439:                                              ; preds = %434, %473
  %440 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %469, %473 ], [ %436, %434 ]
  %441 = phi i64 [ %435, %473 ], [ %437, %434 ]
  %442 = inttoptr i64 %441 to %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #14
  %443 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %440 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 -86, i64 24, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %443, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %443, i8 0, i64 24, i1 false) #14
  %444 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %440, i64 0, i32 1
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %24, %"class.net::IPAddress"* dereferenceable(17) %444) #14
  %445 = bitcast %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %440 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %446 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %445, i64 0, i32 1, i32 0
  %447 = load i8, i8* %446, align 1
  %448 = icmp slt i8 %447, 0
  br i1 %448, label %449, label %452

449:                                              ; preds = %439
  %450 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %440, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load i8*, i8** %450, align 8
  call void @_ZdlPv(i8* %451) #15
  br label %452

452:                                              ; preds = %449, %439
  %453 = inttoptr i64 %441 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %443, i8* align 8 %453, i64 24, i1 false) #14
  %454 = inttoptr i64 %441 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %455 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %454, i64 0, i32 1, i32 0
  store i8 0, i8* %455, align 1
  store i8 0, i8* %453, align 1
  %456 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %440, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %457 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %442, i64 0, i32 1, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %456, i8* align 8 %457, i64 17, i1 false) #14
  %458 = load i8, i8* %455, align 1
  %459 = icmp slt i8 %458, 0
  br i1 %459, label %460, label %463

460:                                              ; preds = %452
  %461 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %442, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load i8*, i8** %461, align 8
  call void @_ZdlPv(i8* %462) #15
  br label %463

463:                                              ; preds = %460, %452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %453, i8* nonnull align 8 %22, i64 24, i1 false) #14
  store i8 0, i8* %26, align 1
  store i8 0, i8* %22, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %457, i8* align 8 %23, i64 17, i1 false) #14
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %24) #14
  %464 = load i8, i8* %26, align 1
  %465 = icmp slt i8 %464, 0
  br i1 %465, label %466, label %468

466:                                              ; preds = %463
  %467 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %467) #15
  br label %468

468:                                              ; preds = %466, %463
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #14
  %469 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %440, i64 1
  %470 = getelementptr inbounds %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry", %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %442, i64 1
  %471 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %470, %389
  %472 = icmp eq %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %469, %438
  br i1 %471, label %473, label %474

473:                                              ; preds = %468
  br i1 %472, label %477, label %439

474:                                              ; preds = %468
  %475 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %470 to i64
  %476 = select i1 %472, i64 %475, i64 %435
  br label %434

477:                                              ; preds = %473, %381, %391, %431
  %478 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %388, %391 ], [ %389, %381 ], [ %423, %431 ], [ %423, %473 ]
  %479 = add nsw i64 %385, %384
  %480 = add nsw i64 %386, %387
  %481 = icmp slt i64 %479, %480
  br i1 %481, label %482, label %484

482:                                              ; preds = %477
  %483 = ptrtoint %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %478 to i64
  call fastcc void @_ZNSt3__115__inplace_mergeIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %267, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %388, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %478, %"struct.std::__1::__less.92"* dereferenceable(1) %3, i64 %385, i64 %384, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %6, i64 %7)
  br label %485

484:                                              ; preds = %477
  call fastcc void @_ZNSt3__115__inplace_mergeIRNS_6__lessIN14proxy_resolver12_GLOBAL__N_121IPAddressSortingEntryES4_EENS_11__wrap_iterIPS4_EEEEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl(%"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %478, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %389, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %29, %"struct.std::__1::__less.92"* dereferenceable(1) %3, i64 %386, i64 %387, %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* %6, i64 %7)
  br label %485

485:                                              ; preds = %482, %484
  %486 = phi i64 [ %483, %482 ], [ %250, %484 ]
  %487 = phi i64 [ %383, %482 ], [ %382, %484 ]
  %488 = phi i64 [ %387, %482 ], [ %384, %484 ]
  %489 = phi i64 [ %386, %482 ], [ %385, %484 ]
  %490 = phi %"struct.proxy_resolver::(anonymous namespace)::IPAddressSortingEntry"* [ %29, %482 ], [ %478, %484 ]
  %491 = icmp eq i64 %488, 0
  br i1 %491, label %492, label %28

492:                                              ; preds = %485, %37, %261, %244, %8, %342, %228, %49, %47
  ret void
}

declare zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3net14ParseCIDRBlockEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_9IPAddressEPm(i8*, i64, %"class.net::IPAddress"*, i64*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17), %"class.net::IPAddress"* dereferenceable(17), i64) local_unnamed_addr #1

declare %"class.v8::Script"* @_ZN2v814ScriptCompiler7CompileENS_5LocalINS_7ContextEEEPNS0_6SourceENS0_14CompileOptionsENS0_13NoCacheReasonE(%"class.v8::Context"*, %"class.v8::ScriptCompiler::Source"*, i32, i32) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Script3RunENS_5LocalINS_7ContextEEE(%"class.v8::Script"*, %"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v814ScriptCompiler10CachedDataD1Ev(%"struct.v8::ScriptCompiler::CachedData"*) unnamed_addr #4

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String18NewExternalTwoByteEPNS_7IsolateEPNS0_22ExternalStringResourceE(%"class.v8::Isolate"*, %"class.v8::String::ExternalStringResource"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptDataD2Ev(%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData", %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData", %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %3, align 8
  %5 = icmp eq %"class.net::PacFileData"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::PacFileData", %"class.net::PacFileData"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.net::PacFileData"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.net::PacFileData"*)***
  %15 = load void (%"class.net::PacFileData"*)**, void (%"class.net::PacFileData"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::PacFileData"*)*, void (%"class.net::PacFileData"*)** %15, i64 1
  %17 = load void (%"class.net::PacFileData"*)*, void (%"class.net::PacFileData"*)** %16, align 8
  tail call void %17(%"class.net::PacFileData"* nonnull %13) #14
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptDataD0Ev(%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData", %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData", %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %3, align 8
  %5 = icmp eq %"class.net::PacFileData"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::PacFileData", %"class.net::PacFileData"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.net::PacFileData"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.net::PacFileData"*)***
  %15 = load void (%"class.net::PacFileData"*)**, void (%"class.net::PacFileData"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::PacFileData"*)*, void (%"class.net::PacFileData"*)** %15, i64 1
  %17 = load void (%"class.net::PacFileData"*)*, void (%"class.net::PacFileData"*)** %16, align 8
  tail call void %17(%"class.net::PacFileData"* nonnull %13) #14
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i16* @_ZNK14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptData4dataEv(%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData", %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %2, align 8
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNK3net11PacFileData5utf16Ev(%"class.net::PacFileData"* %3) #14
  %5 = bitcast %"class.std::__1::basic_string.26"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string.26"* %4 to i16*
  %12 = select i1 %8, i16* %10, i16* %11
  ret i16* %12
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK14proxy_resolver12_GLOBAL__N_130V8ExternalStringFromScriptData6lengthEv(%"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData", %"class.proxy_resolver::(anonymous namespace)::V8ExternalStringFromScriptData"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.net::PacFileData"*, %"class.net::PacFileData"** %2, align 8
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string.26"* @_ZNK3net11PacFileData5utf16Ev(%"class.net::PacFileData"* %3) #14
  %5 = bitcast %"class.std::__1::basic_string.26"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.26", %"class.std::__1::basic_string.26"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  ret i64 %12
}

declare void @_ZN2v86Locker10InitializeEPNS_7IsolateE(%"class.v8::Locker"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14proxy_resolver15ProxyResolverV87ContextD2Ev(%"class.proxy_resolver::ProxyResolverV8::Context"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::Locker", align 8
  %3 = getelementptr inbounds %"class.v8::Locker", %"class.v8::Locker"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 16, i1 false)
  %4 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 2
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  call void @_ZN2v86Locker10InitializeEPNS_7IsolateE(%"class.v8::Locker"* nonnull %2, %"class.v8::Isolate"* %5) #14
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  call void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"* %6) #14
  %7 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.v8::External"*, %"class.v8::External"** %7, align 8
  %9 = icmp eq %"class.v8::External"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.v8::External"* %8 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %11) #14
  store %"class.v8::External"* null, %"class.v8::External"** %7, align 8
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::Context"* %14 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %17) #14
  store %"class.v8::Context"* null, %"class.v8::Context"** %13, align 8
  br label %18

18:                                               ; preds = %12, %16
  call void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"* %6) #14
  call void @_ZN2v86LockerD1Ev(%"class.v8::Locker"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #14
  %19 = getelementptr inbounds %"class.proxy_resolver::ProxyResolverV8::Context", %"class.proxy_resolver::ProxyResolverV8::Context"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %19) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN14proxy_resolver12_GLOBAL__N_115V8StringToUTF16EPN2v87IsolateENS1_5LocalINS1_6StringEEE: argument 0"}
!5 = distinct !{!5, !"_ZN14proxy_resolver12_GLOBAL__N_115V8StringToUTF16EPN2v87IsolateENS1_5LocalINS1_6StringEEE"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !14}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !16}
!27 = distinct !{!27, !14}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN14proxy_resolver12_GLOBAL__N_115V8StringToUTF16EPN2v87IsolateENS1_5LocalINS1_6StringEEE: argument 0"}
!30 = distinct !{!30, !"_ZN14proxy_resolver12_GLOBAL__N_115V8StringToUTF16EPN2v87IsolateENS1_5LocalINS1_6StringEEE"}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !14}
!37 = distinct !{!37, !16}
!38 = distinct !{!38, !16}
!39 = distinct !{!39, !14}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !16}
!42 = distinct !{!42, !43, !14}
!43 = !{!"llvm.loop.unroll.runtime.disable"}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !14}
!50 = distinct !{!50, !16}
!51 = distinct !{!51, !16}
!52 = distinct !{!52, !14}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN14proxy_resolver12_GLOBAL__N_114V8StringToUTF8EPN2v87IsolateENS1_5LocalINS1_6StringEEE: argument 0"}
!55 = distinct !{!55, !"_ZN14proxy_resolver12_GLOBAL__N_114V8StringToUTF8EPN2v87IsolateENS1_5LocalINS1_6StringEEE"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN14proxy_resolver12_GLOBAL__N_114V8StringToUTF8EPN2v87IsolateENS1_5LocalINS1_6StringEEE: argument 0"}
!58 = distinct !{!58, !"_ZN14proxy_resolver12_GLOBAL__N_114V8StringToUTF8EPN2v87IsolateENS1_5LocalINS1_6StringEEE"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv: argument 0"}
!61 = distinct !{!61, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv"}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !14}
!68 = distinct !{!68, !16}
!69 = distinct !{!69, !14}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv: argument 0"}
!72 = distinct !{!72, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv"}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !14}
!79 = distinct !{!79, !16}
!80 = distinct !{!80, !14}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN14proxy_resolver12_GLOBAL__N_114V8StringToUTF8EPN2v87IsolateENS1_5LocalINS1_6StringEEE: argument 0"}
!83 = distinct !{!83, !"_ZN14proxy_resolver12_GLOBAL__N_114V8StringToUTF8EPN2v87IsolateENS1_5LocalINS1_6StringEEE"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN14proxy_resolver12_GLOBAL__N_114V8StringToUTF8EPN2v87IsolateENS1_5LocalINS1_6StringEEE: argument 0"}
!86 = distinct !{!86, !"_ZN14proxy_resolver12_GLOBAL__N_114V8StringToUTF8EPN2v87IsolateENS1_5LocalINS1_6StringEEE"}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !14}
!93 = distinct !{!93, !16}
!94 = distinct !{!94, !16}
!95 = distinct !{!95, !14}
!96 = !{!97}
!97 = distinct !{!97, !98}
!98 = distinct !{!98, !"LVerDomain"}
!99 = !{!100}
!100 = distinct !{!100, !98}
!101 = distinct !{!101, !14}
!102 = distinct !{!102, !16}
!103 = distinct !{!103, !14}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !14}
!110 = distinct !{!110, !16}
!111 = distinct !{!111, !16}
!112 = distinct !{!112, !14}
!113 = !{!114}
!114 = distinct !{!114, !115}
!115 = distinct !{!115, !"LVerDomain"}
!116 = !{!117}
!117 = distinct !{!117, !115}
!118 = distinct !{!118, !14}
!119 = distinct !{!119, !16}
!120 = distinct !{!120, !14}
!121 = !{!122}
!122 = distinct !{!122, !123}
!123 = distinct !{!123, !"LVerDomain"}
!124 = !{!125}
!125 = distinct !{!125, !123}
!126 = distinct !{!126, !14}
!127 = distinct !{!127, !16}
!128 = distinct !{!128, !16}
!129 = distinct !{!129, !14}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !14}
!136 = distinct !{!136, !16}
!137 = distinct !{!137, !14}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZN14proxy_resolver12_GLOBAL__N_115V8StringToUTF16EPN2v87IsolateENS1_5LocalINS1_6StringEEE: argument 0"}
!140 = distinct !{!140, !"_ZN14proxy_resolver12_GLOBAL__N_115V8StringToUTF16EPN2v87IsolateENS1_5LocalINS1_6StringEEE"}
