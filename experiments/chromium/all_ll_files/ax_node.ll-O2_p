; ModuleID = '../../ui/accessibility/ax_node.cc'
source_filename = "../../ui/accessibility/ax_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.79" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::AXNode"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::vector.16", %"class.std::__1::vector.24", %"class.std::__1::vector.32", %"class.std::__1::vector.40", %"class.std::__1::vector.48", %"class.std::__1::vector.56", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.std::__1::pair.10"*, %"struct.std::__1::pair.10"*, %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::pair.10" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::pair.10"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::pair.18"*, %"struct.std::__1::pair.18"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::pair.18" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::pair.18"* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.std::__1::pair.26"*, %"struct.std::__1::pair.26"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair.26" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair.26"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.std::__1::pair.34"*, %"struct.std::__1::pair.34"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair.34"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.std::__1::pair.42"*, %"struct.std::__1::pair.42"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair.42" = type opaque
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair.42"* }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.std::__1::pair.50"*, %"struct.std::__1::pair.50"*, %"class.std::__1::__compressed_pair.51" }
%"struct.std::__1::pair.50" = type opaque
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::pair.50"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { i32*, i32*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map", %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type { %"class.std::__1::basic_string.82", %"class.std::__1::vector.91" }
%"class.std::__1::basic_string.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.85 }
%union.anon.85 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.std::__1::basic_string.82"*, %"class.std::__1::basic_string.82"*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::basic_string.82"* }
%"class.ui::AXTreeManagerMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { float }
%"class.ui::AXTreeManager" = type { i32 (...)** }
%"class.ui::AXNode::ChildIteratorBase" = type { %"class.ui::AXNode"*, %"class.ui::AXNode"* }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.120 }
%union.anon.120 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.86 }
%struct.anon.86 = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.466" }
%"struct.std::__1::pair.466" = type { i32, i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.ui::AXTableInfo" = type { i64, i64, %"class.std::__1::vector.127", %"class.std::__1::vector.127", %"class.std::__1::vector.56", i32, %"class.std::__1::vector.127", %"class.std::__1::vector.134", %"class.std::__1::vector.56", %"class.std::__1::vector", %"class.std::__1::map.141", %"class.std::__1::map.141", %"class.std::__1::vector", i32, i32, %"class.ui::AXTree"*, %"class.ui::AXNode"*, i8, %"class.std::__1::map.442" }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::vector.56"* }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"*, %"class.std::__1::__compressed_pair.136" }
%"struct.ui::AXTableInfo::CellData" = type { %"class.ui::AXNode"*, i32, i64, i64, i64, i64, i64, i64 }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.ui::AXTableInfo::CellData"* }
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.ui::AXTree" = type { %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr.150", %"class.base::ObserverList", %"class.ui::AXNode"*, %"class.std::__1::unordered_map.328", %"class.std::__1::basic_string.82", %"struct.ui::AXTreeData", %"class.std::__1::map.355", %"class.std::__1::map.366", %"class.std::__1::map.377", %"class.std::__1::unordered_map.387", i32, [4 x i8], %"class.std::__1::unordered_map.411", i8, i8, %"class.std::__1::vector.435" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.ui::AXLanguageDetectionManager"* }
%"class.ui::AXLanguageDetectionManager" = type { %"class.chrome_lang_id::NNetLanguageIdentifier", %"class.chrome_lang_id::NNetLanguageIdentifier", %"class.std::__1::unique_ptr.249", %"class.ui::AXTree"*, %"class.ui::AXLanguageInfoStats" }
%"class.chrome_lang_id::NNetLanguageIdentifier" = type { i32, %"class.chrome_lang_id::LanguageIdEmbeddingFeatureExtractor", %"class.chrome_lang_id::WorkspaceRegistry", %"class.chrome_lang_id::LangIdNNParams", %"class.chrome_lang_id::EmbeddingNetwork", %"class.chrome_lang_id::ContinuousBagOfNgramsFunction", i32, i32, i32, i32 }
%"class.chrome_lang_id::LanguageIdEmbeddingFeatureExtractor" = type { %"class.chrome_lang_id::EmbeddingFeatureExtractor" }
%"class.chrome_lang_id::EmbeddingFeatureExtractor" = type { %"class.chrome_lang_id::GenericEmbeddingFeatureExtractor.base", %"class.std::__1::vector.153" }
%"class.chrome_lang_id::GenericEmbeddingFeatureExtractor.base" = type <{ i32 (...)**, %"class.std::__1::vector.91", %"class.std::__1::vector.91", %"class.std::__1::vector.56", %"class.std::__1::vector.56", i8 }>
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"class.chrome_lang_id::FeatureExtractor"*, %"class.chrome_lang_id::FeatureExtractor"*, %"class.std::__1::__compressed_pair.155" }
%"class.chrome_lang_id::FeatureExtractor" = type opaque
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.chrome_lang_id::FeatureExtractor"* }
%"class.chrome_lang_id::WorkspaceRegistry" = type { %"class.std::__1::unordered_map.160", %"class.std::__1::unordered_map.186" }
%"class.std::__1::unordered_map.160" = type { %"class.std::__1::__hash_table.161" }
%"class.std::__1::__hash_table.161" = type <{ %"class.std::__1::unique_ptr.162", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.180", [4 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164", %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::__hash_node_base.165"** }
%"struct.std::__1::__hash_node_base.165" = type { %"struct.std::__1::__hash_node_base.165"* }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.std::__1::__bucket_list_deallocator.167" }
%"class.std::__1::__bucket_list_deallocator.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.std::__1::__hash_node_base.165" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::unordered_map.186" = type { %"class.std::__1::__hash_table.187" }
%"class.std::__1::__hash_table.187" = type <{ %"class.std::__1::unique_ptr.188", %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.206", [4 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190", %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base.191"** }
%"struct.std::__1::__hash_node_base.191" = type { %"struct.std::__1::__hash_node_base.191"* }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.std::__1::__bucket_list_deallocator.193" }
%"class.std::__1::__bucket_list_deallocator.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::__hash_node_base.191" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.chrome_lang_id::LangIdNNParams" = type { %"class.chrome_lang_id::EmbeddingNetworkParams", [6 x i8*], [6 x i16*], [1 x i8*], [1 x i8*], [1 x i8*], [1 x i8*] }
%"class.chrome_lang_id::EmbeddingNetworkParams" = type { i32 (...)** }
%"class.chrome_lang_id::EmbeddingNetwork" = type { i32 (...)**, %"class.chrome_lang_id::EmbeddingNetworkParams"*, %"class.std::__1::vector.210", %"class.std::__1::vector.217", %"class.std::__1::vector.219", %"class.std::__1::vector.219", %"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"class.chrome_lang_id::EmbeddingNetwork::EmbeddingMatrix"*, %"class.chrome_lang_id::EmbeddingNetwork::EmbeddingMatrix"*, %"class.std::__1::__compressed_pair.212" }
%"class.chrome_lang_id::EmbeddingNetwork::EmbeddingMatrix" = type { i32, i32, i32, i8*, i32, i16* }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.chrome_lang_id::EmbeddingNetwork::EmbeddingMatrix"* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.std::__1::vector.219"*, %"class.std::__1::vector.219"*, %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.std::__1::vector.219"* }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper"*, %"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper"*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper"* }
%"class.chrome_lang_id::EmbeddingNetwork::VectorWrapper" = type <{ float*, i32, [4 x i8] }>
%"class.chrome_lang_id::ContinuousBagOfNgramsFunction" = type <{ %"class.chrome_lang_id::FeatureFunction", i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.chrome_lang_id::FeatureFunction" = type { %"class.chrome_lang_id::GenericFeatureFunction" }
%"class.chrome_lang_id::GenericFeatureFunction" = type { i32 (...)**, %"class.chrome_lang_id::GenericFeatureExtractor"*, %"class.chrome_lang_id::FeatureFunctionDescriptor"*, %"class.chrome_lang_id::FeatureType"*, %"class.std::__1::basic_string.82" }
%"class.chrome_lang_id::GenericFeatureExtractor" = type { i32 (...)**, %"class.chrome_lang_id::FeatureExtractorDescriptor", %"class.std::__1::vector.241" }
%"class.chrome_lang_id::FeatureExtractorDescriptor" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic.231", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.231" = type { %"struct.std::__1::__atomic_base.232" }
%"struct.std::__1::__atomic_base.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__cxx_atomic_impl.234" }
%"struct.std::__1::__cxx_atomic_impl.234" = type { %"struct.std::__1::__cxx_atomic_base_impl.235" }
%"struct.std::__1::__cxx_atomic_base_impl.235" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic.236" }
%"struct.std::__1::atomic.236" = type { %"struct.std::__1::__atomic_base.237" }
%"struct.std::__1::__atomic_base.237" = type { %"struct.std::__1::__atomic_base.238" }
%"struct.std::__1::__atomic_base.238" = type { %"struct.std::__1::__cxx_atomic_impl.239" }
%"struct.std::__1::__cxx_atomic_impl.239" = type { %"struct.std::__1::__cxx_atomic_base_impl.240" }
%"struct.std::__1::__cxx_atomic_base_impl.240" = type { i32 }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"class.chrome_lang_id::FeatureType"**, %"class.chrome_lang_id::FeatureType"**, %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.chrome_lang_id::FeatureType"** }
%"class.chrome_lang_id::FeatureFunctionDescriptor" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.248", %"class.google::protobuf::RepeatedPtrField", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i32, [4 x i8] }>
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::RepeatedPtrField.248" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string.82"* }
%"class.chrome_lang_id::FeatureType" = type <{ i32 (...)**, %"class.std::__1::basic_string.82", i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.ui::AXLanguageDetectionObserver"* }
%"class.ui::AXLanguageDetectionObserver" = type { %"class.ui::AXTreeObserver", %"class.ui::AXTree"* }
%"class.ui::AXTreeObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.236" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.252" }
%"struct.std::__1::atomic.252" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl.255" }
%"struct.std::__1::__cxx_atomic_impl.255" = type { %"struct.std::__1::__cxx_atomic_base_impl.256" }
%"struct.std::__1::__cxx_atomic_base_impl.256" = type { i8 }
%"class.ui::AXLanguageInfoStats" = type { %"class.std::__1::unordered_map.260", %"class.std::__1::vector.288", i8, i8, i32, i32, i32, i32, i32, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_map.260" = type { %"class.std::__1::__hash_table.261" }
%"class.std::__1::__hash_table.261" = type <{ %"class.std::__1::unique_ptr.262", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.282", [4 x i8] }>
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264", %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base.265"** }
%"struct.std::__1::__hash_node_base.265" = type { %"struct.std::__1::__hash_node_base.265"* }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.std::__1::__bucket_list_deallocator.267" }
%"class.std::__1::__bucket_list_deallocator.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base.265" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.296" }
%"class.std::__1::__hash_table.296" = type <{ %"class.std::__1::unique_ptr.297", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.314", [4 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299", %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::__hash_node_base.300"** }
%"struct.std::__1::__hash_node_base.300" = type { %"struct.std::__1::__hash_node_base.300"* }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::__bucket_list_deallocator.302" }
%"class.std::__1::__bucket_list_deallocator.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.300" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.320", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.323" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.350", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string.82", i8, [3 x i8], float, %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::map.355" = type { %"class.std::__1::__tree.356" }
%"class.std::__1::__tree.356" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::map.366" = type { %"class.std::__1::__tree.367" }
%"class.std::__1::__tree.367" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::map.377" = type { %"class.std::__1::__tree.378" }
%"class.std::__1::__tree.378" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::unordered_map.387" = type { %"class.std::__1::__hash_table.388" }
%"class.std::__1::__hash_table.388" = type <{ %"class.std::__1::unique_ptr.389", %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.407", [4 x i8] }>
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391", %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.392"** }
%"struct.std::__1::__hash_node_base.392" = type { %"struct.std::__1::__hash_node_base.392"* }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.std::__1::__bucket_list_deallocator.394" }
%"class.std::__1::__bucket_list_deallocator.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::__hash_node_base.392" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::unordered_map.411" = type { %"class.std::__1::__hash_table.412" }
%"class.std::__1::__hash_table.412" = type <{ %"class.std::__1::unique_ptr.413", %"class.std::__1::__compressed_pair.423", %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.431", [4 x i8] }>
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415", %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.416"** }
%"struct.std::__1::__hash_node_base.416" = type { %"struct.std::__1::__hash_node_base.416"* }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.std::__1::__bucket_list_deallocator.418" }
%"class.std::__1::__bucket_list_deallocator.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::__hash_node_base.416" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::vector.435" = type { %"class.std::__1::__vector_base.436" }
%"class.std::__1::__vector_base.436" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.437" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"struct.ui::AXEventIntent"* }
%"class.std::__1::map.442" = type { %"class.std::__1::__tree.443" }
%"class.std::__1::__tree.443" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::__tree_node.471" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.472" }
%"struct.std::__1::__value_type.472" = type { %"struct.std::__1::pair.459" }
%"struct.std::__1::pair.459" = type { i32, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPiEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKiEES9_S9_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN2ui6AXNode18kEmbeddedCharacterE = hidden local_unnamed_addr constant [2 x i16] [i16 -4, i16 0], align 2
@_ZN2ui6AXNode24kEmbeddedCharacterLengthE = hidden local_unnamed_addr constant i32 1, align 4
@_ZTVN2ui6AXNodeE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXNode"*)* @_ZN2ui6AXNodeD2Ev to i8*), i8* bitcast (void (%"class.ui::AXNode"*)* @_ZN2ui6AXNodeD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [30 x i8] c"%d%% red %d%% green %d%% blue\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"img\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2ui6AXNodeC1EPNS0_9OwnerTreeEPS0_imm = hidden unnamed_addr alias void (%"class.ui::AXNode"*, %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*, i32, i64, i64), void (%"class.ui::AXNode"*, %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*, i32, i64, i64)* @_ZN2ui6AXNodeC2EPNS0_9OwnerTreeEPS0_imm
@_ZN2ui6AXNodeD1Ev = hidden unnamed_addr alias void (%"class.ui::AXNode"*), void (%"class.ui::AXNode"*)* @_ZN2ui6AXNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNodeC2EPNS0_9OwnerTreeEPS0_imm(%"class.ui::AXNode"*, %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*, i32, i64, i64) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui6AXNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  store %"class.ui::AXNode::OwnerTree"* %1, %"class.ui::AXNode::OwnerTree"** %8, align 8
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 2
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 3
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  store %"class.ui::AXNode"* %2, %"class.ui::AXNode"** %12, align 8
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %14 = bitcast %"class.std::__1::vector"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #13
  %15 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  tail call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* %15) #13
  %16 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 8
  tail call void @_ZN2ui11AXHypertextC1Ev(%"struct.ui::AXHypertext"* %16) #13
  %17 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 9
  tail call void @_ZN2ui11AXHypertextC1Ev(%"struct.ui::AXHypertext"* %17) #13
  %18 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 10
  %19 = bitcast %"class.std::__1::unique_ptr.79"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  store i32 %3, i32* %20, align 8
  ret void
}

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #1

declare void @_ZN2ui11AXHypertextC1Ev(%"struct.ui::AXHypertext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNodeD2Ev(%"class.ui::AXNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui6AXNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"struct.ui::AXLanguageInfo"*, %"struct.ui::AXLanguageInfo"** %3, align 8
  store %"struct.ui::AXLanguageInfo"* null, %"struct.ui::AXLanguageInfo"** %3, align 8
  %5 = icmp eq %"struct.ui::AXLanguageInfo"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2ui14AXLanguageInfoD1Ev(%"struct.ui::AXLanguageInfo"* nonnull %4) #13
  %7 = bitcast %"struct.ui::AXLanguageInfo"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 9
  tail call void @_ZN2ui11AXHypertextD1Ev(%"struct.ui::AXHypertext"* %9) #13
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 8
  tail call void @_ZN2ui11AXHypertextD1Ev(%"struct.ui::AXHypertext"* %10) #13
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  tail call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* %11) #13
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %12, align 8
  %14 = icmp eq %"class.ui::AXNode"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %8
  %16 = ptrtoint %"class.ui::AXNode"** %13 to i64
  %17 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %18 = bitcast %"class.ui::AXNode"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.ui::AXNode"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %8, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui11AXHypertextD1Ev(%"struct.ui::AXHypertext"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNodeD0Ev(%"class.ui::AXNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui6AXNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"struct.ui::AXLanguageInfo"*, %"struct.ui::AXLanguageInfo"** %3, align 8
  store %"struct.ui::AXLanguageInfo"* null, %"struct.ui::AXLanguageInfo"** %3, align 8
  %5 = icmp eq %"struct.ui::AXLanguageInfo"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2ui14AXLanguageInfoD1Ev(%"struct.ui::AXLanguageInfo"* nonnull %4) #13
  %7 = bitcast %"struct.ui::AXLanguageInfo"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 9
  tail call void @_ZN2ui11AXHypertextD1Ev(%"struct.ui::AXHypertext"* %9) #13
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 8
  tail call void @_ZN2ui11AXHypertextD1Ev(%"struct.ui::AXHypertext"* %10) #13
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  tail call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* %11) #13
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %12, align 8
  %14 = icmp eq %"class.ui::AXNode"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %8
  %16 = ptrtoint %"class.ui::AXNode"** %13 to i64
  %17 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %18 = bitcast %"class.ui::AXNode"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.ui::AXNode"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %8, %15
  %21 = bitcast %"class.ui::AXNode"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui6AXNode8TakeDataEv(%"class.ui::AXNode"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  ret %"struct.ui::AXNodeData"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui6AXNode13GetChildCountEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %4 = bitcast %"class.ui::AXNode"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode33GetChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %3 = tail call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"* %2, %"class.ui::AXNode"* dereferenceable(456) %0) #13
  %4 = icmp eq %"class.ui::AXTreeManager"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast %"class.ui::AXNode"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi i64 [ %13, %5 ], [ 1, %1 ]
  ret i64 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() local_unnamed_addr #1

declare %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"*, %"class.ui::AXNode"* dereferenceable(456)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui6AXNode22GetUnignoredChildCountEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode42GetUnignoredChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %3 = tail call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"* %2, %"class.ui::AXNode"* dereferenceable(456) %0) #13
  %4 = icmp eq %"class.ui::AXTreeManager"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 1, %1 ]
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode10GetChildAtEm(%"class.ui::AXNode"* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %5 = bitcast %"class.ui::AXNode"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ugt i64 %10, %1
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.ui::AXNode"**
  %14 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %13, i64 %1
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  br label %16

16:                                               ; preds = %2, %12
  %17 = phi %"class.ui::AXNode"* [ %15, %12 ], [ null, %2 ]
  ret %"class.ui::AXNode"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode30GetChildAtCrossingTreeBoundaryEm(%"class.ui::AXNode"*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %4 = tail call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"* %3, %"class.ui::AXNode"* dereferenceable(456) %0) #13
  %5 = icmp eq %"class.ui::AXTreeManager"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.ui::AXTreeManager"* %4 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)***
  %8 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %8, i64 6
  %10 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %9, align 8
  %11 = tail call %"class.ui::AXNode"* %10(%"class.ui::AXTreeManager"* nonnull %4) #13
  br label %26

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %15 = bitcast %"class.ui::AXNode"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ugt i64 %20, %1
  br i1 %21, label %22, label %26

22:                                               ; preds = %12
  %23 = inttoptr i64 %18 to %"class.ui::AXNode"**
  %24 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %23, i64 %1
  %25 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %24, align 8
  br label %26

26:                                               ; preds = %22, %12, %6
  %27 = phi %"class.ui::AXNode"* [ %11, %6 ], [ %25, %22 ], [ null, %12 ]
  ret %"class.ui::AXNode"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode24GetUnignoredChildAtIndexEm(%"class.ui::AXNode"*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %0) #13, !noalias !2
  %4 = icmp eq %"class.ui::AXNode"* %3, null
  %5 = icmp eq i64 %1, 0
  %6 = or i1 %4, %5
  br i1 %6, label %70, label %7

7:                                                ; preds = %2
  %8 = icmp eq %"class.ui::AXNode"* %0, null
  br label %9

9:                                                ; preds = %7, %65
  %10 = phi i64 [ %1, %7 ], [ %12, %65 ]
  %11 = phi %"class.ui::AXNode"* [ %3, %7 ], [ %66, %65 ]
  %12 = add i64 %10, -1
  br i1 %8, label %65, label %13

13:                                               ; preds = %9
  %14 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* nonnull %0) #13
  %15 = icmp eq %"class.ui::AXNode"* %11, %14
  br i1 %15, label %70, label %16

16:                                               ; preds = %13, %59
  %17 = phi i8 [ %60, %59 ], [ 0, %13 ]
  %18 = phi %"class.ui::AXNode"* [ %61, %59 ], [ %11, %13 ]
  %19 = icmp eq i8 %17, 0
  br label %20

20:                                               ; preds = %16, %31
  %21 = phi %"class.ui::AXNode"* [ %29, %31 ], [ %18, %16 ]
  br i1 %19, label %34, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %21, i64 0, i32 6, i32 0, i32 0
  %24 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %23, align 8
  %25 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %21, i64 0, i32 6, i32 0, i32 1
  %26 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %25, align 8
  %27 = icmp eq %"class.ui::AXNode"** %24, %26
  br i1 %27, label %34, label %28

28:                                               ; preds = %22
  %29 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %24, align 8
  %30 = icmp eq %"class.ui::AXNode"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %29, i64 0, i32 7
  %33 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %32) #13
  br i1 %33, label %20, label %65

34:                                               ; preds = %28, %22, %20
  %35 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %21, i64 0, i32 5
  %36 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %35, align 8
  %37 = icmp eq %"class.ui::AXNode"* %36, null
  br i1 %37, label %70, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %21, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 1
  %42 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %36, i64 0, i32 6
  %43 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %36, i64 0, i32 6, i32 0, i32 1
  %44 = bitcast %"class.ui::AXNode"*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %41, %49
  br i1 %50, label %51, label %62

51:                                               ; preds = %38
  %52 = inttoptr i64 %47 to %"class.ui::AXNode"**
  %53 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %52, i64 %41
  %54 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %53, align 8
  %55 = icmp eq %"class.ui::AXNode"* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %54, i64 0, i32 7
  %58 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %57) #13
  br i1 %58, label %59, label %65

59:                                               ; preds = %56, %62
  %60 = phi i8 [ 0, %62 ], [ 1, %56 ]
  %61 = phi %"class.ui::AXNode"* [ %36, %62 ], [ %54, %56 ]
  br label %16

62:                                               ; preds = %51, %38
  %63 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %36, i64 0, i32 7
  %64 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %63) #13
  br i1 %64, label %59, label %70

65:                                               ; preds = %31, %56, %9
  %66 = phi %"class.ui::AXNode"* [ %11, %9 ], [ %29, %31 ], [ %54, %56 ]
  %67 = icmp eq %"class.ui::AXNode"* %66, null
  %68 = icmp eq i64 %12, 0
  %69 = or i1 %67, %68
  br i1 %69, label %70, label %9

70:                                               ; preds = %13, %65, %62, %34, %2
  %71 = phi %"class.ui::AXNode"* [ %3, %2 ], [ null, %34 ], [ null, %62 ], [ null, %13 ], [ %66, %65 ]
  ret %"class.ui::AXNode"* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode22UnignoredChildrenBeginEv(%"class.ui::AXNode::ChildIteratorBase"* noalias nocapture sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %1) #13
  %4 = getelementptr inbounds %"class.ui::AXNode::ChildIteratorBase", %"class.ui::AXNode::ChildIteratorBase"* %0, i64 0, i32 0
  store %"class.ui::AXNode"* %1, %"class.ui::AXNode"** %4, align 8
  %5 = getelementptr inbounds %"class.ui::AXNode::ChildIteratorBase", %"class.ui::AXNode::ChildIteratorBase"* %0, i64 0, i32 1
  store %"class.ui::AXNode"* %3, %"class.ui::AXNode"** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK2ui6AXNode20UnignoredChildrenEndEv(%"class.ui::AXNode::ChildIteratorBase"* noalias nocapture sret, %"class.ui::AXNode"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode::ChildIteratorBase", %"class.ui::AXNode::ChildIteratorBase"* %0, i64 0, i32 0
  store %"class.ui::AXNode"* %1, %"class.ui::AXNode"** %3, align 8
  %4 = getelementptr inbounds %"class.ui::AXNode::ChildIteratorBase", %"class.ui::AXNode::ChildIteratorBase"* %0, i64 0, i32 1
  store %"class.ui::AXNode"* null, %"class.ui::AXNode"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode44GetUnignoredChildAtIndexCrossingTreeBoundaryEm(%"class.ui::AXNode"*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %4 = tail call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"* %3, %"class.ui::AXNode"* dereferenceable(456) %0) #13
  %5 = icmp eq %"class.ui::AXTreeManager"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.ui::AXTreeManager"* %4 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)***
  %8 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %8, i64 6
  %10 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %9, align 8
  %11 = tail call %"class.ui::AXNode"* %10(%"class.ui::AXTreeManager"* nonnull %4) #13
  br label %14

12:                                               ; preds = %2
  %13 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode24GetUnignoredChildAtIndexEm(%"class.ui::AXNode"* %0, i64 %1)
  br label %14

14:                                               ; preds = %12, %6
  %15 = phi %"class.ui::AXNode"* [ %11, %6 ], [ %13, %12 ]
  ret %"class.ui::AXNode"* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode9GetParentEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %3 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %2, align 8
  ret %"class.ui::AXNode"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode29GetParentCrossingTreeBoundaryEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.ui::AXTreeID", align 8
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %4 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  %5 = icmp eq %"class.ui::AXNode"* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %9 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %8, align 8
  %10 = bitcast %"class.ui::AXNode::OwnerTree"* %9 to void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)***
  %11 = load void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)**, void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)*** %10, align 8
  %12 = load void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)*, void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)** %11, align 8
  call void %12(%"class.ui::AXTreeID"* nonnull sret %2, %"class.ui::AXNode::OwnerTree"* %9) #13
  %13 = call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap10GetManagerENS_8AXTreeIDE(%"class.ui::AXTreeManagerMap"* %7, %"class.ui::AXTreeID"* nonnull %2) #13
  %14 = icmp eq %"class.ui::AXTreeManager"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %6
  %16 = bitcast %"class.ui::AXTreeManager"* %13 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)***
  %17 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %17, i64 7
  %19 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %18, align 8
  %20 = call %"class.ui::AXNode"* %19(%"class.ui::AXTreeManager"* nonnull %13) #13
  br label %21

21:                                               ; preds = %15, %6, %1
  %22 = phi %"class.ui::AXNode"* [ %4, %1 ], [ %20, %15 ], [ null, %6 ]
  ret %"class.ui::AXNode"* %22
}

declare %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap10GetManagerENS_8AXTreeIDE(%"class.ui::AXTreeManagerMap"*, %"class.ui::AXTreeID"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode18GetUnignoredParentEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %7, %1
  %3 = phi %"class.ui::AXNode"* [ %0, %1 ], [ %5, %7 ]
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %3, i64 0, i32 5
  %5 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %4, align 8
  %6 = icmp eq %"class.ui::AXNode"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 7
  %9 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %8) #13
  br i1 %9, label %2, label %10

10:                                               ; preds = %2, %7
  ret %"class.ui::AXNode"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %3 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %2) #13
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode38GetUnignoredParentCrossingTreeBoundaryEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.ui::AXTreeID", align 8
  br label %3

3:                                                ; preds = %8, %1
  %4 = phi %"class.ui::AXNode"* [ %0, %1 ], [ %6, %8 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %6 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %5, align 8
  %7 = icmp eq %"class.ui::AXNode"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7
  %10 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %9) #13
  br i1 %10, label %3, label %26

11:                                               ; preds = %3
  %12 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)***
  %16 = load void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)**, void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)*** %15, align 8
  %17 = load void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)*, void (%"class.ui::AXTreeID"*, %"class.ui::AXNode::OwnerTree"*)** %16, align 8
  call void %17(%"class.ui::AXTreeID"* nonnull sret %2, %"class.ui::AXNode::OwnerTree"* %14) #13
  %18 = call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap10GetManagerENS_8AXTreeIDE(%"class.ui::AXTreeManagerMap"* %12, %"class.ui::AXTreeID"* nonnull %2) #13
  %19 = icmp eq %"class.ui::AXTreeManager"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.ui::AXTreeManager"* %18 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)***
  %22 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %22, i64 7
  %24 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %23, align 8
  %25 = call %"class.ui::AXNode"* %24(%"class.ui::AXTreeManager"* nonnull %18) #13
  br label %26

26:                                               ; preds = %8, %20, %11
  %27 = phi %"class.ui::AXNode"* [ %25, %20 ], [ null, %11 ], [ %6, %8 ]
  ret %"class.ui::AXNode"* %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui6AXNode16GetIndexInParentEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui6AXNode25GetUnignoredIndexInParentEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode22GetFirstUnignoredChildEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %0)
  ret %"class.ui::AXNode"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %4 = bitcast %"class.ui::AXNode"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %27, label %15

9:                                                ; preds = %23
  %10 = load i64, i64* %4, align 8
  %11 = load i64, i64* %6, align 8
  %12 = sub i64 %10, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %26, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %1, %9
  %16 = phi i64 [ %11, %9 ], [ %7, %1 ]
  %17 = phi i64 [ %26, %9 ], [ 0, %1 ]
  %18 = inttoptr i64 %16 to %"class.ui::AXNode"**
  %19 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %18, i64 %17
  %20 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %19, align 8
  %21 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %20, i64 0, i32 7
  %22 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %21) #13
  br i1 %22, label %23, label %27

23:                                               ; preds = %15
  %24 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %20)
  %25 = icmp eq %"class.ui::AXNode"* %24, null
  %26 = add nuw i64 %17, 1
  br i1 %25, label %9, label %27

27:                                               ; preds = %23, %15, %9, %1
  %28 = phi %"class.ui::AXNode"* [ null, %1 ], [ null, %9 ], [ %20, %15 ], [ %24, %23 ]
  ret %"class.ui::AXNode"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode21GetLastUnignoredChildEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* %0)
  ret %"class.ui::AXNode"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %2, align 8
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %5 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %4, align 8
  %6 = icmp eq %"class.ui::AXNode"** %3, %5
  br i1 %6, label %26, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.ui::AXNode"** %3 to i64
  %9 = ptrtoint %"class.ui::AXNode"** %5 to i64
  %10 = sub i64 %9, %8
  %11 = shl i64 %10, 29
  %12 = ashr i64 %11, 32
  br label %13

13:                                               ; preds = %23, %7
  %14 = phi i64 [ %15, %23 ], [ %12, %7 ]
  %15 = add nsw i64 %14, -1
  %16 = icmp sgt i64 %14, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %13
  %18 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %2, align 8
  %19 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %18, i64 %15
  %20 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %19, align 8
  %21 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %20, i64 0, i32 7
  %22 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %21) #13
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* %20)
  %25 = icmp eq %"class.ui::AXNode"* %24, null
  br i1 %25, label %13, label %26

26:                                               ; preds = %13, %17, %23, %1
  %27 = phi %"class.ui::AXNode"* [ null, %1 ], [ null, %13 ], [ %24, %23 ], [ %20, %17 ]
  ret %"class.ui::AXNode"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode29GetDeepestFirstUnignoredChildEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %0) #13
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"class.ui::AXNode"* [ %12, %10 ], [ %6, %5 ]
  %12 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %11) #13
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %5, %1
  %17 = phi %"class.ui::AXNode"* [ null, %1 ], [ %6, %5 ], [ %12, %10 ]
  ret %"class.ui::AXNode"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode28GetDeepestLastUnignoredChildEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* %0) #13
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"class.ui::AXNode"* [ %12, %10 ], [ %6, %5 ]
  %12 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* %11) #13
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %5, %1
  %17 = phi %"class.ui::AXNode"* [ null, %1 ], [ %6, %5 ], [ %12, %10 ]
  ret %"class.ui::AXNode"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode23GetNextUnignoredSiblingEv(%"class.ui::AXNode"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %52, label %3

3:                                                ; preds = %1, %46
  %4 = phi i8 [ %47, %46 ], [ 0, %1 ]
  %5 = phi %"class.ui::AXNode"* [ %48, %46 ], [ %0, %1 ]
  %6 = icmp eq i8 %4, 0
  br label %7

7:                                                ; preds = %3, %18
  %8 = phi %"class.ui::AXNode"* [ %16, %18 ], [ %5, %3 ]
  br i1 %6, label %21, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 6, i32 0, i32 1
  %13 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %12, align 8
  %14 = icmp eq %"class.ui::AXNode"** %11, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %9
  %16 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, align 8
  %17 = icmp eq %"class.ui::AXNode"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %16, i64 0, i32 7
  %20 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %19) #13
  br i1 %20, label %7, label %52

21:                                               ; preds = %9, %15, %7
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 5
  %23 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, align 8
  %24 = icmp eq %"class.ui::AXNode"* %23, null
  br i1 %24, label %52, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 1
  %29 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 6
  %30 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 6, i32 0, i32 1
  %31 = bitcast %"class.ui::AXNode"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %28, %36
  br i1 %37, label %38, label %49

38:                                               ; preds = %25
  %39 = inttoptr i64 %34 to %"class.ui::AXNode"**
  %40 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %39, i64 %28
  %41 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %40, align 8
  %42 = icmp eq %"class.ui::AXNode"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %41, i64 0, i32 7
  %45 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %44) #13
  br i1 %45, label %46, label %52

46:                                               ; preds = %43, %49
  %47 = phi i8 [ 0, %49 ], [ 1, %43 ]
  %48 = phi %"class.ui::AXNode"* [ %23, %49 ], [ %41, %43 ]
  br label %3

49:                                               ; preds = %38, %25
  %50 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 7
  %51 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %50) #13
  br i1 %51, label %46, label %52

52:                                               ; preds = %18, %43, %49, %21, %1
  %53 = phi %"class.ui::AXNode"* [ null, %1 ], [ %16, %18 ], [ %41, %43 ], [ null, %49 ], [ null, %21 ]
  ret %"class.ui::AXNode"* %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode13GetFirstChildEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %2, align 8
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %5 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %4, align 8
  %6 = icmp eq %"class.ui::AXNode"** %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %3, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %"class.ui::AXNode"* [ %8, %7 ], [ null, %1 ]
  ret %"class.ui::AXNode"* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode14GetNextSiblingEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %3 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %2, align 8
  %4 = icmp eq %"class.ui::AXNode"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %3, i64 0, i32 6
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %3, i64 0, i32 6, i32 0, i32 1
  %11 = bitcast %"class.ui::AXNode"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ult i64 %8, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %5
  %19 = inttoptr i64 %14 to %"class.ui::AXNode"**
  %20 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %19, i64 %8
  %21 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %20, align 8
  br label %22

22:                                               ; preds = %18, %5, %1
  %23 = phi %"class.ui::AXNode"* [ null, %1 ], [ %21, %18 ], [ null, %5 ]
  ret %"class.ui::AXNode"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode27GetPreviousUnignoredSiblingEv(%"class.ui::AXNode"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %52, label %3

3:                                                ; preds = %1, %44
  %4 = phi i8 [ %45, %44 ], [ 0, %1 ]
  %5 = phi %"class.ui::AXNode"* [ %46, %44 ], [ %0, %1 ]
  %6 = icmp eq i8 %4, 0
  br label %7

7:                                                ; preds = %3, %25
  %8 = phi %"class.ui::AXNode"* [ %23, %25 ], [ %5, %3 ]
  br i1 %6, label %28, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 6
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 6, i32 0, i32 1
  %12 = bitcast %"class.ui::AXNode"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %9
  %19 = inttoptr i64 %15 to %"class.ui::AXNode"**
  %20 = ashr exact i64 %16, 3
  %21 = add nsw i64 %20, -1
  %22 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %19, i64 %21
  %23 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, align 8
  %24 = icmp eq %"class.ui::AXNode"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 7
  %27 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %26) #13
  br i1 %27, label %7, label %52

28:                                               ; preds = %9, %18, %7
  %29 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  %32 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 5
  %33 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %32, align 8
  br i1 %31, label %47, label %34

34:                                               ; preds = %28
  %35 = add i64 %30, -1
  %36 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %33, i64 0, i32 6, i32 0, i32 0
  %37 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %36, align 8
  %38 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %37, i64 %35
  %39 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %38, align 8
  %40 = icmp eq %"class.ui::AXNode"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %39, i64 0, i32 7
  %43 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %42) #13
  br i1 %43, label %44, label %52

44:                                               ; preds = %41, %49
  %45 = phi i8 [ 0, %49 ], [ 1, %41 ]
  %46 = phi %"class.ui::AXNode"* [ %33, %49 ], [ %39, %41 ]
  br label %3

47:                                               ; preds = %28, %34
  %48 = icmp eq %"class.ui::AXNode"* %33, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %33, i64 0, i32 7
  %51 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %50) #13
  br i1 %51, label %44, label %52

52:                                               ; preds = %25, %41, %47, %49, %1
  %53 = phi %"class.ui::AXNode"* [ null, %1 ], [ %23, %25 ], [ %39, %41 ], [ null, %47 ], [ null, %49 ]
  ret %"class.ui::AXNode"* %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode12GetLastChildEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %4 = bitcast %"class.ui::AXNode"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = inttoptr i64 %7 to %"class.ui::AXNode"**
  %12 = ashr exact i64 %8, 3
  %13 = add nsw i64 %12, -1
  %14 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, i64 %13
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi %"class.ui::AXNode"* [ %15, %10 ], [ null, %1 ]
  ret %"class.ui::AXNode"* %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode18GetPreviousSiblingEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %7 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %6, align 8
  %8 = add i64 %3, -1
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %7, i64 0, i32 6, i32 0, i32 0
  %10 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %9, align 8
  %11 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, i64 %8
  %12 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, align 8
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi %"class.ui::AXNode"* [ %12, %5 ], [ null, %1 ]
  ret %"class.ui::AXNode"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode27GetNextUnignoredInTreeOrderEv(%"class.ui::AXNode"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %6, label %69, label %9

7:                                                ; preds = %1
  %8 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %0) #13
  br label %69

9:                                                ; preds = %66, %5
  %10 = phi %"class.ui::AXNode"* [ %0, %5 ], [ %64, %66 ]
  br label %11

11:                                               ; preds = %54, %9
  %12 = phi i8 [ 0, %9 ], [ %55, %54 ]
  %13 = phi %"class.ui::AXNode"* [ %10, %9 ], [ %56, %54 ]
  %14 = icmp eq i8 %12, 0
  br label %15

15:                                               ; preds = %11, %26
  %16 = phi %"class.ui::AXNode"* [ %24, %26 ], [ %13, %11 ]
  br i1 %14, label %29, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %16, i64 0, i32 6, i32 0, i32 0
  %19 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %18, align 8
  %20 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %16, i64 0, i32 6, i32 0, i32 1
  %21 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %20, align 8
  %22 = icmp eq %"class.ui::AXNode"** %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %19, align 8
  %25 = icmp eq %"class.ui::AXNode"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %24, i64 0, i32 7
  %28 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %27) #13
  br i1 %28, label %15, label %69

29:                                               ; preds = %23, %17, %15
  %30 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %16, i64 0, i32 5
  %31 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %30, align 8
  %32 = icmp eq %"class.ui::AXNode"* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %16, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 1
  %37 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %31, i64 0, i32 6
  %38 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %31, i64 0, i32 6, i32 0, i32 1
  %39 = bitcast %"class.ui::AXNode"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %36, %44
  br i1 %45, label %46, label %57

46:                                               ; preds = %33
  %47 = inttoptr i64 %42 to %"class.ui::AXNode"**
  %48 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %47, i64 %36
  %49 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %48, align 8
  %50 = icmp eq %"class.ui::AXNode"* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %49, i64 0, i32 7
  %53 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %52) #13
  br i1 %53, label %54, label %69

54:                                               ; preds = %51, %57
  %55 = phi i8 [ 0, %57 ], [ 1, %51 ]
  %56 = phi %"class.ui::AXNode"* [ %31, %57 ], [ %49, %51 ]
  br label %11

57:                                               ; preds = %46, %33
  %58 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %31, i64 0, i32 7
  %59 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %58) #13
  br i1 %59, label %54, label %60

60:                                               ; preds = %29, %57
  br label %61

61:                                               ; preds = %60, %66
  %62 = phi %"class.ui::AXNode"* [ %64, %66 ], [ %10, %60 ]
  %63 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %62, i64 0, i32 5
  %64 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %63, align 8
  %65 = icmp eq %"class.ui::AXNode"* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %64, i64 0, i32 7
  %68 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %67) #13
  br i1 %68, label %61, label %9

69:                                               ; preds = %26, %51, %61, %5, %7
  %70 = phi %"class.ui::AXNode"* [ %8, %7 ], [ null, %5 ], [ null, %61 ], [ %24, %26 ], [ %49, %51 ]
  ret %"class.ui::AXNode"* %70
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode31GetPreviousUnignoredInTreeOrderEv(%"class.ui::AXNode"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %52, label %3

3:                                                ; preds = %1, %44
  %4 = phi i8 [ %45, %44 ], [ 0, %1 ]
  %5 = phi %"class.ui::AXNode"* [ %46, %44 ], [ %0, %1 ]
  %6 = icmp eq i8 %4, 0
  br label %7

7:                                                ; preds = %3, %25
  %8 = phi %"class.ui::AXNode"* [ %23, %25 ], [ %5, %3 ]
  br i1 %6, label %28, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 6
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 6, i32 0, i32 1
  %12 = bitcast %"class.ui::AXNode"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %9
  %19 = inttoptr i64 %15 to %"class.ui::AXNode"**
  %20 = ashr exact i64 %16, 3
  %21 = add nsw i64 %20, -1
  %22 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %19, i64 %21
  %23 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, align 8
  %24 = icmp eq %"class.ui::AXNode"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 7
  %27 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %26) #13
  br i1 %27, label %7, label %61

28:                                               ; preds = %18, %9, %7
  %29 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  %32 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 5
  %33 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %32, align 8
  br i1 %31, label %47, label %34

34:                                               ; preds = %28
  %35 = add i64 %30, -1
  %36 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %33, i64 0, i32 6, i32 0, i32 0
  %37 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %36, align 8
  %38 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %37, i64 %35
  %39 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %38, align 8
  %40 = icmp eq %"class.ui::AXNode"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %39, i64 0, i32 7
  %43 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %42) #13
  br i1 %43, label %44, label %61

44:                                               ; preds = %41, %49
  %45 = phi i8 [ 0, %49 ], [ 1, %41 ]
  %46 = phi %"class.ui::AXNode"* [ %33, %49 ], [ %39, %41 ]
  br label %3

47:                                               ; preds = %34, %28
  %48 = icmp eq %"class.ui::AXNode"* %33, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %33, i64 0, i32 7
  %51 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %50) #13
  br i1 %51, label %44, label %52

52:                                               ; preds = %49, %47, %1
  br label %53

53:                                               ; preds = %52, %58
  %54 = phi %"class.ui::AXNode"* [ %56, %58 ], [ %0, %52 ]
  %55 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %54, i64 0, i32 5
  %56 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %55, align 8
  %57 = icmp eq %"class.ui::AXNode"* %56, null
  br i1 %57, label %77, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %56, i64 0, i32 7
  %60 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %59) #13
  br i1 %60, label %53, label %77

61:                                               ; preds = %41, %25
  %62 = phi %"class.ui::AXNode"* [ %23, %25 ], [ %39, %41 ]
  %63 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %62, i64 0, i32 4
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %61
  %67 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* nonnull %62) #13
  %68 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %67, i64 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %66, %71
  %72 = phi %"class.ui::AXNode"* [ %73, %71 ], [ %67, %66 ]
  %73 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* %72) #13
  %74 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %73, i64 0, i32 4
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %71

77:                                               ; preds = %71, %58, %53, %66, %61
  %78 = phi %"class.ui::AXNode"* [ %62, %61 ], [ %67, %66 ], [ %56, %58 ], [ null, %53 ], [ %73, %71 ]
  ret %"class.ui::AXNode"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode6IsTextEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 117
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast %"class.ui::AXNode"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br label %15

13:                                               ; preds = %1
  %14 = tail call zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32 %3) #13
  br label %15

15:                                               ; preds = %13, %5
  %16 = phi i1 [ %12, %5 ], [ %14, %13 ]
  ret i1 %16
}

declare zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode11IsLineBreakEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %7 [
    i32 110, label %8
    i32 102, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %6 = tail call zeroext i1 @_ZNK2ui10AXNodeData16GetBoolAttributeEN2ax5mojom13BoolAttributeE(%"struct.ui::AXNodeData"* %5, i32 17) #13
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %7, %4
  %9 = phi i1 [ true, %1 ], [ %6, %4 ], [ false, %7 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK2ui10AXNodeData16GetBoolAttributeEN2ax5mojom13BoolAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode7SetDataERKNS_10AXNodeDataE(%"class.ui::AXNode"*, %"struct.ui::AXNodeData"* dereferenceable(264)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXNodeData", align 8
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %3, %"struct.ui::AXNodeData"* dereferenceable(264) %1) #13
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %5 = call dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"* %4, %"struct.ui::AXNodeData"* nonnull %3) #13
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %3) #13
  ret void
}

declare void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #1

declare dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode11SetLocationEiRKN3gfx5RectFEPNS1_9TransformE(%"class.ui::AXNode"* nocapture, i32, %"class.gfx::RectF"* nocapture readonly dereferenceable(16), %"class.gfx::Transform"* readonly) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 13, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 13, i32 2
  %7 = bitcast %"class.gfx::RectF"* %6 to i8*
  %8 = bitcast %"class.gfx::RectF"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 16, i1 false)
  %9 = icmp eq %"class.gfx::Transform"* %3, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 68) #14
  %12 = bitcast %"class.gfx::Transform"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* nonnull align 4 %12, i64 68, i1 false) #13
  %13 = ptrtoint i8* %11 to i64
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 13, i32 3
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.gfx::Transform"*, %"class.gfx::Transform"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.gfx::Transform"* %16, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.gfx::Transform"* %16 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %27

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 13, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.gfx::Transform"*, %"class.gfx::Transform"** %22, align 8
  store %"class.gfx::Transform"* null, %"class.gfx::Transform"** %22, align 8
  %24 = icmp eq %"class.gfx::Transform"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.gfx::Transform"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %25, %21, %10, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui6AXNode16SetIndexInParentEm(%"class.ui::AXNode"* nocapture, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 2
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode27UpdateUnignoredCachedValuesEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %3 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %2) #13
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @_ZN2ui6AXNode36UpdateUnignoredCachedValuesRecursiveEi(%"class.ui::AXNode"* %0, i32 0)
  br label %6

6:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui6AXNode36UpdateUnignoredCachedValuesRecursiveEi(%"class.ui::AXNode"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %5, align 8
  %7 = icmp eq %"class.ui::AXNode"** %4, %6
  br i1 %7, label %8, label %12

8:                                                ; preds = %26, %2
  %9 = phi i32 [ 0, %2 ], [ %28, %26 ]
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  store i64 %10, i64* %11, align 8
  ret i32 %9

12:                                               ; preds = %2, %26
  %13 = phi i32 [ %28, %26 ], [ 0, %2 ]
  %14 = phi %"class.ui::AXNode"** [ %29, %26 ], [ %4, %2 ]
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  %16 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 7
  %17 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %16) #13
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 3
  store i64 0, i64* %19, align 8
  %20 = add nsw i32 %13, %1
  %21 = tail call i32 @_ZN2ui6AXNode36UpdateUnignoredCachedValuesRecursiveEi(%"class.ui::AXNode"* %15, i32 %20)
  br label %26

22:                                               ; preds = %12
  %23 = add nsw i32 %13, %1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 3
  store i64 %24, i64* %25, align 8
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi i32 [ %21, %18 ], [ 1, %22 ]
  %28 = add nsw i32 %27, %13
  %29 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, i64 1
  %30 = icmp eq %"class.ui::AXNode"** %29, %6
  br i1 %30, label %8, label %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode12SwapChildrenEPNSt3__16vectorIPS0_NS1_9allocatorIS3_EEEE(%"class.ui::AXNode"* nocapture, %"class.std::__1::vector"* nocapture) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %4 = bitcast %"class.std::__1::vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %4, align 8
  store i64 %5, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %10 = bitcast %"class.ui::AXNode"*** %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.ui::AXNode"*** %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.ui::AXNode"*** %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.ui::AXNode"*** %15 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode7DestroyEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.ui::AXNode"* %0 to void (%"class.ui::AXNode"*)***
  %5 = load void (%"class.ui::AXNode"*)**, void (%"class.ui::AXNode"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ui::AXNode"*)*, void (%"class.ui::AXNode"*)** %5, i64 1
  %7 = load void (%"class.ui::AXNode"*)*, void (%"class.ui::AXNode"*)** %6, align 8
  tail call void %7(%"class.ui::AXNode"* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode14IsDescendantOfEPKS0_(%"class.ui::AXNode"* readonly, %"class.ui::AXNode"* readnone) local_unnamed_addr #9 align 2 {
  %3 = icmp eq %"class.ui::AXNode"* %1, null
  br label %4

4:                                                ; preds = %8, %2
  %5 = phi %"class.ui::AXNode"* [ %0, %2 ], [ %10, %8 ]
  br i1 %3, label %12, label %6

6:                                                ; preds = %4
  %7 = icmp eq %"class.ui::AXNode"* %5, %1
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %8, %6, %4
  %13 = phi i1 [ false, %4 ], [ true, %6 ], [ false, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode28GetOrComputeLineStartOffsetsEv(%"class.std::__1::vector.56"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7
  %6 = tail call zeroext i1 @_ZNK2ui10AXNodeData19GetIntListAttributeEN2ax5mojom16IntListAttributeEPNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %5, i32 12, %"class.std::__1::vector.56"* %0) #13
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 0, i32* %3, align 4
  call void @_ZNK2ui6AXNode23ComputeLineStartOffsetsEPNSt3__16vectorIiNS1_9allocatorIiEEEEPi(%"class.ui::AXNode"* %1, %"class.std::__1::vector.56"* %0, i32* nonnull %3)
  tail call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %5, i32 12, %"class.std::__1::vector.56"* dereferenceable(24) %0) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

declare zeroext i1 @_ZNK2ui10AXNodeData19GetIntListAttributeEN2ax5mojom16IntListAttributeEPNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::vector.56"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode23ComputeLineStartOffsetsEPNSt3__16vectorIiNS1_9allocatorIiEEEEPi(%"class.ui::AXNode"* nocapture readonly, %"class.std::__1::vector.56"*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %5, align 8
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %7, align 8
  %9 = icmp eq %"class.ui::AXNode"** %6, %8
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %1, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %1, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast i32** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.56"* %1 to i64*
  %16 = bitcast i32** %13 to i64*
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %24

23:                                               ; preds = %124, %3
  ret void

24:                                               ; preds = %10, %124
  %25 = phi %"class.ui::AXNode"** [ %6, %10 ], [ %125, %124 ]
  %26 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %25, align 8
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %27, align 8
  %29 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 6, i32 0, i32 1
  %30 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %29, align 8
  %31 = icmp eq %"class.ui::AXNode"** %28, %30
  br i1 %31, label %33, label %32

32:                                               ; preds = %24
  call void @_ZNK2ui6AXNode23ComputeLineStartOffsetsEPNSt3__16vectorIiNS1_9allocatorIiEEEEPi(%"class.ui::AXNode"* %26, %"class.std::__1::vector.56"* %1, i32* %2)
  br label %124

33:                                               ; preds = %24
  %34 = load i32, i32* %2, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %109, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 7
  %38 = call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %37, i32 37) #13
  br i1 %38, label %109, label %39

39:                                               ; preds = %36
  %40 = load i32*, i32** %11, align 8
  %41 = load i32*, i32** %12, align 8
  %42 = icmp eq i32* %40, %41
  %43 = ptrtoint i32* %40 to i64
  br i1 %42, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds i32, i32* %41, i64 -1
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %2, align 4
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %109, label %49

49:                                               ; preds = %44, %39
  %50 = load i32*, i32** %13, align 8
  %51 = icmp eq i32* %41, %50
  %52 = ptrtoint i32* %50 to i64
  br i1 %51, label %57, label %53

53:                                               ; preds = %49
  %54 = load i32, i32* %2, align 4
  store i32 %54, i32* %41, align 4
  %55 = getelementptr inbounds i32, i32* %41, i64 1
  %56 = ptrtoint i32* %55 to i64
  store i64 %56, i64* %14, align 8
  br label %109

57:                                               ; preds = %49
  %58 = ptrtoint i32* %41 to i64
  %59 = sub i64 %58, %43
  %60 = ashr exact i64 %59, 2
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 4611686018427387903
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::vector.56"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %64) #15
  unreachable

65:                                               ; preds = %57
  %66 = sub i64 %52, %43
  %67 = ashr exact i64 %66, 2
  %68 = icmp ult i64 %67, 2305843009213693951
  br i1 %68, label %69, label %77

69:                                               ; preds = %65
  %70 = ashr exact i64 %66, 1
  %71 = icmp ult i64 %70, %61
  %72 = select i1 %71, i64 %61, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %69
  %75 = icmp ugt i64 %72, 4611686018427387903
  br i1 %75, label %76, label %77

76:                                               ; preds = %74
  call void @abort() #15
  unreachable

77:                                               ; preds = %74, %65
  %78 = phi i64 [ %72, %74 ], [ 4611686018427387903, %65 ]
  %79 = shl i64 %78, 2
  %80 = call i8* @_Znwm(i64 %79) #14
  %81 = bitcast i8* %80 to i32*
  br label %82

82:                                               ; preds = %77, %69
  %83 = phi i64 [ %78, %77 ], [ 0, %69 ]
  %84 = phi i32* [ %81, %77 ], [ null, %69 ]
  %85 = getelementptr inbounds i32, i32* %84, i64 %60
  %86 = getelementptr inbounds i32, i32* %84, i64 %83
  %87 = ptrtoint i32* %86 to i64
  %88 = load i32, i32* %2, align 4
  store i32 %88, i32* %85, align 4
  %89 = getelementptr inbounds i32, i32* %85, i64 1
  %90 = ptrtoint i32* %89 to i64
  %91 = load i32*, i32** %11, align 8
  %92 = load i64, i64* %14, align 8
  %93 = ptrtoint i32* %91 to i64
  %94 = sub i64 %92, %93
  %95 = ashr exact i64 %94, 2
  %96 = sub nsw i64 0, %95
  %97 = getelementptr inbounds i32, i32* %85, i64 %96
  %98 = ptrtoint i32* %97 to i64
  %99 = icmp sgt i64 %94, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %82
  %101 = bitcast i32* %97 to i8*
  %102 = bitcast i32* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 %94, i1 false) #13
  %103 = load i32*, i32** %11, align 8
  br label %104

104:                                              ; preds = %100, %82
  %105 = phi i32* [ %91, %82 ], [ %103, %100 ]
  store i64 %98, i64* %15, align 8
  store i64 %90, i64* %14, align 8
  store i64 %87, i64* %16, align 8
  %106 = icmp eq i32* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = bitcast i32* %105 to i8*
  call void @_ZdlPv(i8* %108) #14
  br label %109

109:                                              ; preds = %107, %104, %53, %44, %33, %36
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #13
  %110 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZNK2ui10AXNodeData20GetString16AttributeEN2ax5mojom15StringAttributeE(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.ui::AXNodeData"* %110, i32 21) #13
  %111 = load i8, i8* %20, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = zext i8 %111 to i32
  %115 = load i32, i32* %2, align 4
  %116 = add nsw i32 %115, %114
  store i32 %116, i32* %2, align 4
  br label %123

117:                                              ; preds = %109
  %118 = load i64, i64* %18, align 8
  %119 = trunc i64 %118 to i32
  %120 = load i32, i32* %2, align 4
  %121 = add nsw i32 %120, %119
  store i32 %121, i32* %2, align 4
  %122 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %113, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #13
  br label %124

124:                                              ; preds = %123, %32
  %125 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %25, i64 1
  %126 = icmp eq %"class.ui::AXNode"** %125, %8
  br i1 %126, label %23, label %24
}

declare void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::vector.56"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

declare void @_ZNK2ui10AXNodeData20GetString16AttributeEN2ax5mojom15StringAttributeE(%"class.std::__1::basic_string"* sret, %"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui6AXNode12ComputeColorEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %3 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %2, i32 44) #13
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %5 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %4, align 8
  %6 = icmp ne %"class.ui::AXNode"* %5, null
  %7 = icmp ult i32 %3, -16777216
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %20

9:                                                ; preds = %1, %9
  %10 = phi %"class.ui::AXNode"* [ %16, %9 ], [ %5, %1 ]
  %11 = phi i32 [ %14, %9 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 7
  %13 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %12, i32 44) #13
  %14 = tail call i32 @_ZN11color_utils22GetResultingPaintColorEjj(i32 %11, i32 %13) #13
  %15 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 5
  %16 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %15, align 8
  %17 = icmp ne %"class.ui::AXNode"* %16, null
  %18 = icmp ult i32 %14, -16777216
  %19 = and i1 %18, %17
  br i1 %19, label %9, label %20

20:                                               ; preds = %9, %1
  %21 = phi i32 [ %3, %1 ], [ %14, %9 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui6AXNode21ComputeColorAttributeEN2ax5mojom12IntAttributeE(%"class.ui::AXNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %4 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %6 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %5, align 8
  %7 = icmp ne %"class.ui::AXNode"* %6, null
  %8 = icmp ult i32 %4, -16777216
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %21

10:                                               ; preds = %2, %10
  %11 = phi %"class.ui::AXNode"* [ %17, %10 ], [ %6, %2 ]
  %12 = phi i32 [ %15, %10 ], [ %4, %2 ]
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %11, i64 0, i32 7
  %14 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %13, i32 %1) #13
  %15 = tail call i32 @_ZN11color_utils22GetResultingPaintColorEjj(i32 %12, i32 %14) #13
  %16 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %11, i64 0, i32 5
  %17 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %16, align 8
  %18 = icmp ne %"class.ui::AXNode"* %17, null
  %19 = icmp ult i32 %15, -16777216
  %20 = and i1 %19, %18
  br i1 %20, label %10, label %21

21:                                               ; preds = %10, %2
  %22 = phi i32 [ %4, %2 ], [ %15, %10 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui6AXNode22ComputeBackgroundColorEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %3 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %2, i32 43) #13
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %5 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %4, align 8
  %6 = icmp ne %"class.ui::AXNode"* %5, null
  %7 = icmp ult i32 %3, -16777216
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %20

9:                                                ; preds = %1, %9
  %10 = phi %"class.ui::AXNode"* [ %16, %9 ], [ %5, %1 ]
  %11 = phi i32 [ %14, %9 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 7
  %13 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %12, i32 43) #13
  %14 = tail call i32 @_ZN11color_utils22GetResultingPaintColorEjj(i32 %11, i32 %13) #13
  %15 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 5
  %16 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %15, align 8
  %17 = icmp ne %"class.ui::AXNode"* %16, null
  %18 = icmp ult i32 %14, -16777216
  %19 = and i1 %18, %17
  br i1 %19, label %9, label %20

20:                                               ; preds = %9, %1
  %21 = phi i32 [ %3, %1 ], [ %14, %9 ]
  ret i32 %21
}

declare i32 @_ZN11color_utils22GetResultingPaintColorEjj(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui6AXNode27GetInheritedStringAttributeEN2ax5mojom15StringAttributeE(%"class.ui::AXNode"*, i32) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %9, %2
  %4 = phi %"class.ui::AXNode"* [ %0, %2 ], [ %11, %9 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7
  %6 = tail call zeroext i1 @_ZNK2ui10AXNodeData18HasStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %5, i32 %1) #13
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %5, i32 %1) #13
  br label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  %12 = icmp eq %"class.ui::AXNode"* %11, null
  br i1 %12, label %13, label %3

13:                                               ; preds = %9
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZN4base11EmptyStringEv() #13
  br label %15

15:                                               ; preds = %13, %7
  %16 = phi %"class.std::__1::basic_string.82"* [ %8, %7 ], [ %14, %13 ]
  ret %"class.std::__1::basic_string.82"* %16
}

declare zeroext i1 @_ZNK2ui10AXNodeData18HasStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZN4base11EmptyStringEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode29GetInheritedString16AttributeEN2ax5mojom15StringAttributeE(%"class.std::__1::basic_string"* noalias sret, %"class.ui::AXNode"*, i32) local_unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %10, %3
  %5 = phi %"class.ui::AXNode"* [ %1, %3 ], [ %12, %10 ]
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 7
  %7 = tail call zeroext i1 @_ZNK2ui10AXNodeData18HasStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %6, i32 %2) #13
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %6, i32 %2) #13
  br label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 5
  %12 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, align 8
  %13 = icmp eq %"class.ui::AXNode"* %12, null
  br i1 %13, label %14, label %4

14:                                               ; preds = %10
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZN4base11EmptyStringEv() #13
  br label %16

16:                                               ; preds = %8, %14
  %17 = phi %"class.std::__1::basic_string.82"* [ %9, %8 ], [ %15, %14 ]
  %18 = bitcast %"class.std::__1::basic_string.82"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string.82"* %17 to i8*
  %25 = select i1 %21, i8* %23, i8* %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %20 to i64
  %29 = select i1 %21, i64 %27, i64 %28
  tail call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %25, i64 %29) #13
  ret void
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.ui::AXLanguageInfo"* @_ZNK2ui6AXNode15GetLanguageInfoEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"struct.ui::AXLanguageInfo"*, %"struct.ui::AXLanguageInfo"** %2, align 8
  ret %"struct.ui::AXLanguageInfo"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode15SetLanguageInfoENSt3__110unique_ptrINS_14AXLanguageInfoENS1_14default_deleteIS3_EEEE(%"class.ui::AXNode"* nocapture, %"struct.ui::AXLanguageInfo"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"struct.ui::AXLanguageInfo"* %1 to i64
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 10
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.ui::AXLanguageInfo"*, %"struct.ui::AXLanguageInfo"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.79"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"struct.ui::AXLanguageInfo"* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @_ZN2ui14AXLanguageInfoD1Ev(%"struct.ui::AXLanguageInfo"* nonnull %6) #13
  %10 = bitcast %"struct.ui::AXLanguageInfo"* %6 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode17ClearLanguageInfoEv(%"class.ui::AXNode"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"struct.ui::AXLanguageInfo"*, %"struct.ui::AXLanguageInfo"** %2, align 8
  store %"struct.ui::AXLanguageInfo"* null, %"struct.ui::AXLanguageInfo"** %2, align 8
  %4 = icmp eq %"struct.ui::AXLanguageInfo"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2ui14AXLanguageInfoD1Ev(%"struct.ui::AXLanguageInfo"* nonnull %3) #13
  %6 = bitcast %"struct.ui::AXLanguageInfo"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode12GetHypertextEv(%"class.std::__1::basic_string"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::AXHypertext", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string.82", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string.82", align 8
  %9 = getelementptr inbounds %"struct.ui::AXHypertext", %"struct.ui::AXHypertext"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #13
  call void @_ZN2ui11AXHypertextC1Ev(%"struct.ui::AXHypertext"* nonnull %3) #13
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8
  %11 = call dereferenceable(56) %"struct.ui::AXHypertext"* @_ZN2ui11AXHypertextaSERKS0_(%"struct.ui::AXHypertext"* %10, %"struct.ui::AXHypertext"* nonnull dereferenceable(56) %3) #13
  call void @_ZN2ui11AXHypertextD1Ev(%"struct.ui::AXHypertext"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #13
  %12 = call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* %1)
  br i1 %12, label %34, label %13

13:                                               ; preds = %2, %18
  %14 = phi %"class.ui::AXNode"* [ %16, %18 ], [ %1, %2 ]
  %15 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %14, i64 0, i32 5
  %16 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %15, align 8
  %17 = icmp eq %"class.ui::AXNode"* %16, null
  br i1 %17, label %66, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %16, i64 0, i32 7
  %20 = call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %19) #13
  br i1 %20, label %13, label %21

21:                                               ; preds = %18
  %22 = call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* nonnull %16) #13
  br i1 %22, label %34, label %25

23:                                               ; preds = %30
  %24 = call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* nonnull %28) #13
  br i1 %24, label %34, label %33

25:                                               ; preds = %21, %33
  %26 = phi %"class.ui::AXNode"* [ %28, %33 ], [ %16, %21 ]
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 5
  %28 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %27, align 8
  %29 = icmp eq %"class.ui::AXNode"* %28, null
  br i1 %29, label %66, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %28, i64 0, i32 7
  %32 = call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %31) #13
  br i1 %32, label %33, label %23

33:                                               ; preds = %30, %23
  br label %25

34:                                               ; preds = %23, %21, %2
  %35 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #13
  %36 = bitcast %"class.std::__1::basic_string.82"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  call void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string.82"* nonnull sret %5, %"class.ui::AXNode"* %1)
  %37 = bitcast %"class.std::__1::basic_string.82"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = select i1 %40, i8* %42, i8* %36
  %44 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %39 to i64
  %47 = select i1 %40, i64 %45, i64 %46
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %43, i64 %47) #13
  %48 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 2
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %34
  %54 = bitcast %"class.std::__1::basic_string"* %48 to i8**
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %53, %34
  %57 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %35, i64 24, i1 false) #13
  %58 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  store i8 0, i8* %59, align 1
  %60 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  store i16 0, i16* %60, align 8
  %61 = load i8, i8* %38, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %56, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  br label %605

66:                                               ; preds = %13, %25
  %67 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  %71 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  store i8 1, i8* %72, align 1
  %73 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  store i16 -4, i16* %73, align 8
  %74 = getelementptr inbounds i16, i16* %73, i64 1
  store i16 0, i16* %74, align 2
  %75 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 4
  %76 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 2
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %77, i64 0, i32 1, i32 1
  %79 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 1
  %81 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 1, i32 0, i32 1, i32 0, i32 0
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node"**
  %83 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %80, i64 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::map"* %80 to i64*
  %87 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 1, i32 0, i32 2, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  %89 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %90 = bitcast %"class.std::__1::basic_string"* %76 to i16*
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %93 = bitcast %"class.std::__1::basic_string.82"* %8 to i8*
  %94 = bitcast %"class.std::__1::basic_string.82"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %103 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  br label %104

104:                                              ; preds = %603, %66
  %105 = phi i64 [ 0, %66 ], [ %604, %603 ]
  %106 = call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %107 = call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"* %106, %"class.ui::AXNode"* dereferenceable(456) %1) #13
  %108 = icmp eq %"class.ui::AXTreeManager"* %107, null
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = load i64, i64* %75, align 8
  br label %111

111:                                              ; preds = %104, %109
  %112 = phi i64 [ %110, %109 ], [ 1, %104 ]
  %113 = icmp ult i64 %105, %112
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = load i8, i8* %88, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %605

117:                                              ; preds = %114
  %118 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #14
  br label %605

120:                                              ; preds = %111
  %121 = call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %122 = call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"* %121, %"class.ui::AXNode"* dereferenceable(456) %1) #13
  %123 = icmp eq %"class.ui::AXTreeManager"* %122, null
  br i1 %123, label %130, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.ui::AXTreeManager"* %122 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)***
  %126 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %126, i64 6
  %128 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %127, align 8
  %129 = call %"class.ui::AXNode"* %128(%"class.ui::AXTreeManager"* nonnull %122) #13
  br label %132

130:                                              ; preds = %120
  %131 = call %"class.ui::AXNode"* @_ZNK2ui6AXNode24GetUnignoredChildAtIndexEm(%"class.ui::AXNode"* %1, i64 %105) #13
  br label %132

132:                                              ; preds = %124, %130
  %133 = phi %"class.ui::AXNode"* [ %129, %124 ], [ %131, %130 ]
  %134 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %133, i64 0, i32 7, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 117
  br i1 %136, label %137, label %145

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %133, i64 0, i32 6
  %139 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %133, i64 0, i32 6, i32 0, i32 1
  %140 = bitcast %"class.ui::AXNode"*** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::vector"* %138 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %141, %143
  br i1 %144, label %147, label %350

145:                                              ; preds = %132
  %146 = call zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32 %135) #13
  br i1 %146, label %147, label %350

147:                                              ; preds = %137, %145
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13
  call void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string.82"* nonnull sret %8, %"class.ui::AXNode"* %133)
  %148 = load i8, i8* %95, align 1
  %149 = icmp slt i8 %148, 0
  %150 = load i8*, i8** %96, align 8
  %151 = select i1 %149, i8* %150, i8* %93
  %152 = load i64, i64* %97, align 8
  %153 = zext i8 %148 to i64
  %154 = select i1 %149, i64 %152, i64 %153
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %151, i64 %154) #13
  %155 = load i8, i8* %99, align 1
  %156 = icmp slt i8 %155, 0
  %157 = load i16*, i16** %100, align 8
  %158 = load i64, i64* %101, align 8
  %159 = zext i8 %155 to i64
  %160 = select i1 %156, i16* %157, i16* %102
  %161 = select i1 %156, i64 %158, i64 %159
  %162 = load i8, i8* %78, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %169

164:                                              ; preds = %147
  %165 = load i64, i64* %89, align 8
  %166 = and i64 %165, 9223372036854775807
  %167 = add nsw i64 %166, -1
  %168 = load i64, i64* %79, align 8
  br label %171

169:                                              ; preds = %147
  %170 = zext i8 %162 to i64
  br label %171

171:                                              ; preds = %169, %164
  %172 = phi i64 [ %167, %164 ], [ 10, %169 ]
  %173 = phi i64 [ %168, %164 ], [ %170, %169 ]
  %174 = sub i64 %172, %173
  %175 = icmp ult i64 %174, %161
  br i1 %175, label %336, label %176

176:                                              ; preds = %171
  %177 = icmp eq i64 %161, 0
  br i1 %177, label %339, label %178

178:                                              ; preds = %176
  br i1 %163, label %179, label %181

179:                                              ; preds = %178
  %180 = load i16*, i16** %91, align 8
  br label %181

181:                                              ; preds = %178, %179
  %182 = phi i16* [ %180, %179 ], [ %90, %178 ]
  %183 = getelementptr inbounds i16, i16* %182, i64 %173
  %184 = icmp ult i64 %161, 16
  br i1 %184, label %274, label %185

185:                                              ; preds = %181
  %186 = add i64 %161, %173
  %187 = getelementptr i16, i16* %182, i64 %186
  %188 = getelementptr i16, i16* %160, i64 %161
  %189 = icmp ult i16* %183, %188
  %190 = icmp ult i16* %160, %187
  %191 = and i1 %189, %190
  br i1 %191, label %274, label %192

192:                                              ; preds = %185
  %193 = and i64 %161, -16
  %194 = sub i64 %161, %193
  %195 = getelementptr i16, i16* %160, i64 %193
  %196 = getelementptr i16, i16* %183, i64 %193
  %197 = add i64 %193, -16
  %198 = lshr exact i64 %197, 4
  %199 = add nuw nsw i64 %198, 1
  %200 = and i64 %199, 3
  %201 = icmp ult i64 %197, 48
  br i1 %201, label %253, label %202

202:                                              ; preds = %192
  %203 = sub nsw i64 %199, %200
  br label %204

204:                                              ; preds = %204, %202
  %205 = phi i64 [ 0, %202 ], [ %250, %204 ]
  %206 = phi i64 [ %203, %202 ], [ %251, %204 ]
  %207 = getelementptr i16, i16* %160, i64 %205
  %208 = getelementptr i16, i16* %183, i64 %205
  %209 = bitcast i16* %207 to <8 x i16>*
  %210 = load <8 x i16>, <8 x i16>* %209, align 2, !alias.scope !5
  %211 = getelementptr i16, i16* %207, i64 8
  %212 = bitcast i16* %211 to <8 x i16>*
  %213 = load <8 x i16>, <8 x i16>* %212, align 2, !alias.scope !5
  %214 = bitcast i16* %208 to <8 x i16>*
  store <8 x i16> %210, <8 x i16>* %214, align 2, !alias.scope !8, !noalias !5
  %215 = getelementptr i16, i16* %208, i64 8
  %216 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %216, align 2, !alias.scope !8, !noalias !5
  %217 = or i64 %205, 16
  %218 = getelementptr i16, i16* %160, i64 %217
  %219 = getelementptr i16, i16* %183, i64 %217
  %220 = bitcast i16* %218 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !5
  %222 = getelementptr i16, i16* %218, i64 8
  %223 = bitcast i16* %222 to <8 x i16>*
  %224 = load <8 x i16>, <8 x i16>* %223, align 2, !alias.scope !5
  %225 = bitcast i16* %219 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %225, align 2, !alias.scope !8, !noalias !5
  %226 = getelementptr i16, i16* %219, i64 8
  %227 = bitcast i16* %226 to <8 x i16>*
  store <8 x i16> %224, <8 x i16>* %227, align 2, !alias.scope !8, !noalias !5
  %228 = or i64 %205, 32
  %229 = getelementptr i16, i16* %160, i64 %228
  %230 = getelementptr i16, i16* %183, i64 %228
  %231 = bitcast i16* %229 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !5
  %233 = getelementptr i16, i16* %229, i64 8
  %234 = bitcast i16* %233 to <8 x i16>*
  %235 = load <8 x i16>, <8 x i16>* %234, align 2, !alias.scope !5
  %236 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %236, align 2, !alias.scope !8, !noalias !5
  %237 = getelementptr i16, i16* %230, i64 8
  %238 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %235, <8 x i16>* %238, align 2, !alias.scope !8, !noalias !5
  %239 = or i64 %205, 48
  %240 = getelementptr i16, i16* %160, i64 %239
  %241 = getelementptr i16, i16* %183, i64 %239
  %242 = bitcast i16* %240 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !5
  %244 = getelementptr i16, i16* %240, i64 8
  %245 = bitcast i16* %244 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 2, !alias.scope !5
  %247 = bitcast i16* %241 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %247, align 2, !alias.scope !8, !noalias !5
  %248 = getelementptr i16, i16* %241, i64 8
  %249 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %246, <8 x i16>* %249, align 2, !alias.scope !8, !noalias !5
  %250 = add i64 %205, 64
  %251 = add i64 %206, -4
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %204, !llvm.loop !10

253:                                              ; preds = %204, %192
  %254 = phi i64 [ 0, %192 ], [ %250, %204 ]
  %255 = icmp eq i64 %200, 0
  br i1 %255, label %272, label %256

256:                                              ; preds = %253, %256
  %257 = phi i64 [ %269, %256 ], [ %254, %253 ]
  %258 = phi i64 [ %270, %256 ], [ %200, %253 ]
  %259 = getelementptr i16, i16* %160, i64 %257
  %260 = getelementptr i16, i16* %183, i64 %257
  %261 = bitcast i16* %259 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !5
  %263 = getelementptr i16, i16* %259, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !5
  %266 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %266, align 2, !alias.scope !8, !noalias !5
  %267 = getelementptr i16, i16* %260, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %268, align 2, !alias.scope !8, !noalias !5
  %269 = add i64 %257, 16
  %270 = add i64 %258, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %256, !llvm.loop !12

272:                                              ; preds = %256, %253
  %273 = icmp eq i64 %161, %193
  br i1 %273, label %327, label %274

274:                                              ; preds = %272, %185, %181
  %275 = phi i64 [ %161, %185 ], [ %161, %181 ], [ %194, %272 ]
  %276 = phi i16* [ %160, %185 ], [ %160, %181 ], [ %195, %272 ]
  %277 = phi i16* [ %183, %185 ], [ %183, %181 ], [ %196, %272 ]
  %278 = add i64 %275, -1
  %279 = and i64 %275, 7
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %292, label %281

281:                                              ; preds = %274, %281
  %282 = phi i64 [ %287, %281 ], [ %275, %274 ]
  %283 = phi i16* [ %289, %281 ], [ %276, %274 ]
  %284 = phi i16* [ %288, %281 ], [ %277, %274 ]
  %285 = phi i64 [ %290, %281 ], [ %279, %274 ]
  %286 = load i16, i16* %283, align 2
  store i16 %286, i16* %284, align 2
  %287 = add i64 %282, -1
  %288 = getelementptr inbounds i16, i16* %284, i64 1
  %289 = getelementptr inbounds i16, i16* %283, i64 1
  %290 = add i64 %285, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %281, !llvm.loop !14

292:                                              ; preds = %281, %274
  %293 = phi i64 [ %275, %274 ], [ %287, %281 ]
  %294 = phi i16* [ %276, %274 ], [ %289, %281 ]
  %295 = phi i16* [ %277, %274 ], [ %288, %281 ]
  %296 = icmp ult i64 %278, 7
  br i1 %296, label %327, label %297

297:                                              ; preds = %292, %297
  %298 = phi i64 [ %323, %297 ], [ %293, %292 ]
  %299 = phi i16* [ %325, %297 ], [ %294, %292 ]
  %300 = phi i16* [ %324, %297 ], [ %295, %292 ]
  %301 = load i16, i16* %299, align 2
  store i16 %301, i16* %300, align 2
  %302 = getelementptr inbounds i16, i16* %300, i64 1
  %303 = getelementptr inbounds i16, i16* %299, i64 1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %300, i64 2
  %306 = getelementptr inbounds i16, i16* %299, i64 2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %300, i64 3
  %309 = getelementptr inbounds i16, i16* %299, i64 3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %300, i64 4
  %312 = getelementptr inbounds i16, i16* %299, i64 4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %300, i64 5
  %315 = getelementptr inbounds i16, i16* %299, i64 5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %300, i64 6
  %318 = getelementptr inbounds i16, i16* %299, i64 6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %300, i64 7
  %321 = getelementptr inbounds i16, i16* %299, i64 7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = add i64 %298, -8
  %324 = getelementptr inbounds i16, i16* %300, i64 8
  %325 = getelementptr inbounds i16, i16* %299, i64 8
  %326 = icmp eq i64 %323, 0
  br i1 %326, label %327, label %297, !llvm.loop !15

327:                                              ; preds = %292, %297, %272
  %328 = add i64 %173, %161
  %329 = load i8, i8* %78, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %330, label %331, label %332

331:                                              ; preds = %327
  store i64 %328, i64* %79, align 8
  br label %334

332:                                              ; preds = %327
  %333 = trunc i64 %328 to i8
  store i8 %333, i8* %78, align 1
  br label %334

334:                                              ; preds = %332, %331
  %335 = getelementptr inbounds i16, i16* %182, i64 %328
  store i16 0, i16* %335, align 2
  br label %339

336:                                              ; preds = %171
  %337 = add i64 %173, %161
  %338 = sub i64 %337, %172
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %76, i64 %172, i64 %338, i64 %173, i64 %173, i64 0, i64 %161, i16* %160) #13
  br label %339

339:                                              ; preds = %176, %334, %336
  %340 = load i8, i8* %99, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %344

342:                                              ; preds = %339
  %343 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %343) #14
  br label %344

344:                                              ; preds = %339, %342
  %345 = load i8, i8* %95, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %349

347:                                              ; preds = %344
  %348 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %348) #14
  br label %349

349:                                              ; preds = %344, %347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #13
  br label %603

350:                                              ; preds = %137, %145
  %351 = load i8, i8* %78, align 1
  %352 = icmp slt i8 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %350
  %354 = load i64, i64* %79, align 8
  br label %357

355:                                              ; preds = %350
  %356 = zext i8 %351 to i64
  br label %357

357:                                              ; preds = %353, %355
  %358 = phi i64 [ %354, %353 ], [ %356, %355 ]
  %359 = trunc i64 %358 to i32
  %360 = trunc i64 %105 to i32
  %361 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %82, align 8
  %362 = icmp eq %"class.std::__1::__tree_node"* %361, null
  br i1 %362, label %389, label %363

363:                                              ; preds = %357, %385
  %364 = phi %"class.std::__1::__tree_node"* [ %388, %385 ], [ %361, %357 ]
  %365 = phi %"class.std::__1::__tree_node_base"** [ %387, %385 ], [ %83, %357 ]
  %366 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %364, i64 0, i32 1, i32 0, i32 0
  %367 = load i32, i32* %366, align 4
  %368 = icmp sgt i32 %367, %359
  br i1 %368, label %369, label %375

369:                                              ; preds = %363
  %370 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %364, i64 0, i32 0, i32 0, i32 0
  %371 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %370, align 8
  %372 = icmp eq %"class.std::__1::__tree_node_base"* %371, null
  br i1 %372, label %373, label %385

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %364, i64 0, i32 0, i32 0
  br label %389

375:                                              ; preds = %363
  %376 = icmp slt i32 %367, %359
  br i1 %376, label %377, label %383

377:                                              ; preds = %375
  %378 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %364, i64 0, i32 0, i32 1
  %379 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %378, align 8
  %380 = icmp eq %"class.std::__1::__tree_node_base"* %379, null
  br i1 %380, label %381, label %385

381:                                              ; preds = %377
  %382 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %364, i64 0, i32 0, i32 0
  br label %389

383:                                              ; preds = %375
  %384 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %364, i64 0, i32 0, i32 0
  br label %389

385:                                              ; preds = %377, %369
  %386 = phi %"class.std::__1::__tree_node_base"* [ %371, %369 ], [ %379, %377 ]
  %387 = phi %"class.std::__1::__tree_node_base"** [ %370, %369 ], [ %378, %377 ]
  %388 = bitcast %"class.std::__1::__tree_node_base"* %386 to %"class.std::__1::__tree_node"*
  br label %363

389:                                              ; preds = %357, %383, %381, %373
  %390 = phi %"class.std::__1::__tree_end_node"* [ %374, %373 ], [ %382, %381 ], [ %384, %383 ], [ %81, %357 ]
  %391 = phi %"class.std::__1::__tree_node_base"** [ %370, %373 ], [ %378, %381 ], [ %365, %383 ], [ %84, %357 ]
  %392 = bitcast %"class.std::__1::__tree_node_base"** %391 to %"class.std::__1::__tree_node"**
  %393 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %392, align 8
  %394 = icmp eq %"class.std::__1::__tree_node"* %393, null
  br i1 %394, label %395, label %418

395:                                              ; preds = %389
  %396 = call i8* @_Znwm(i64 40) #14, !noalias !16
  %397 = getelementptr inbounds i8, i8* %396, i64 28
  %398 = bitcast i8* %397 to i32*
  store i32 %359, i32* %398, align 4, !noalias !16
  %399 = getelementptr inbounds i8, i8* %396, i64 32
  %400 = bitcast i8* %399 to i32*
  store i32 %360, i32* %400, align 4, !noalias !16
  %401 = bitcast i8* %396 to %"class.std::__1::__tree_node_base"*
  %402 = getelementptr inbounds i8, i8* %396, i64 16
  %403 = bitcast i8* %402 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %396, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %390, %"class.std::__1::__tree_end_node"** %403, align 8
  %404 = bitcast %"class.std::__1::__tree_node_base"** %391 to i8**
  store i8* %396, i8** %404, align 8
  %405 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %406 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %405, i64 0, i32 0
  %407 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %406, align 8
  %408 = icmp eq %"class.std::__1::__tree_node_base"* %407, null
  br i1 %408, label %412, label %409

409:                                              ; preds = %395
  %410 = ptrtoint %"class.std::__1::__tree_node_base"* %407 to i64
  store i64 %410, i64* %86, align 8
  %411 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %391, align 8
  br label %412

412:                                              ; preds = %409, %395
  %413 = phi %"class.std::__1::__tree_node_base"* [ %401, %395 ], [ %411, %409 ]
  %414 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %414, %"class.std::__1::__tree_node_base"* %413) #13
  %415 = load i64, i64* %87, align 8
  %416 = add i64 %415, 1
  store i64 %416, i64* %87, align 8
  %417 = load i8, i8* %78, align 1
  br label %418

418:                                              ; preds = %389, %412
  %419 = phi i8 [ %351, %389 ], [ %417, %412 ]
  %420 = load i8, i8* %88, align 1
  %421 = icmp slt i8 %420, 0
  %422 = load i16*, i16** %68, align 8
  %423 = load i64, i64* %69, align 8
  %424 = zext i8 %420 to i64
  %425 = select i1 %421, i16* %422, i16* %73
  %426 = select i1 %421, i64 %423, i64 %424
  %427 = icmp slt i8 %419, 0
  br i1 %427, label %428, label %433

428:                                              ; preds = %418
  %429 = load i64, i64* %89, align 8
  %430 = and i64 %429, 9223372036854775807
  %431 = add nsw i64 %430, -1
  %432 = load i64, i64* %79, align 8
  br label %435

433:                                              ; preds = %418
  %434 = zext i8 %419 to i64
  br label %435

435:                                              ; preds = %433, %428
  %436 = phi i64 [ %431, %428 ], [ 10, %433 ]
  %437 = phi i64 [ %432, %428 ], [ %434, %433 ]
  %438 = sub i64 %436, %437
  %439 = icmp ult i64 %438, %426
  br i1 %439, label %600, label %440

440:                                              ; preds = %435
  %441 = icmp eq i64 %426, 0
  br i1 %441, label %603, label %442

442:                                              ; preds = %440
  br i1 %427, label %443, label %445

443:                                              ; preds = %442
  %444 = load i16*, i16** %91, align 8
  br label %445

445:                                              ; preds = %442, %443
  %446 = phi i16* [ %444, %443 ], [ %90, %442 ]
  %447 = getelementptr inbounds i16, i16* %446, i64 %437
  %448 = icmp ult i64 %426, 16
  br i1 %448, label %538, label %449

449:                                              ; preds = %445
  %450 = add i64 %426, %437
  %451 = getelementptr i16, i16* %446, i64 %450
  %452 = getelementptr i16, i16* %425, i64 %426
  %453 = icmp ult i16* %447, %452
  %454 = icmp ult i16* %425, %451
  %455 = and i1 %453, %454
  br i1 %455, label %538, label %456

456:                                              ; preds = %449
  %457 = and i64 %426, -16
  %458 = sub i64 %426, %457
  %459 = getelementptr i16, i16* %425, i64 %457
  %460 = getelementptr i16, i16* %447, i64 %457
  %461 = add i64 %457, -16
  %462 = lshr exact i64 %461, 4
  %463 = add nuw nsw i64 %462, 1
  %464 = and i64 %463, 3
  %465 = icmp ult i64 %461, 48
  br i1 %465, label %517, label %466

466:                                              ; preds = %456
  %467 = sub nsw i64 %463, %464
  br label %468

468:                                              ; preds = %468, %466
  %469 = phi i64 [ 0, %466 ], [ %514, %468 ]
  %470 = phi i64 [ %467, %466 ], [ %515, %468 ]
  %471 = getelementptr i16, i16* %425, i64 %469
  %472 = getelementptr i16, i16* %447, i64 %469
  %473 = bitcast i16* %471 to <8 x i16>*
  %474 = load <8 x i16>, <8 x i16>* %473, align 2, !alias.scope !19
  %475 = getelementptr i16, i16* %471, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 2, !alias.scope !19
  %478 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %474, <8 x i16>* %478, align 2, !alias.scope !22, !noalias !19
  %479 = getelementptr i16, i16* %472, i64 8
  %480 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %480, align 2, !alias.scope !22, !noalias !19
  %481 = or i64 %469, 16
  %482 = getelementptr i16, i16* %425, i64 %481
  %483 = getelementptr i16, i16* %447, i64 %481
  %484 = bitcast i16* %482 to <8 x i16>*
  %485 = load <8 x i16>, <8 x i16>* %484, align 2, !alias.scope !19
  %486 = getelementptr i16, i16* %482, i64 8
  %487 = bitcast i16* %486 to <8 x i16>*
  %488 = load <8 x i16>, <8 x i16>* %487, align 2, !alias.scope !19
  %489 = bitcast i16* %483 to <8 x i16>*
  store <8 x i16> %485, <8 x i16>* %489, align 2, !alias.scope !22, !noalias !19
  %490 = getelementptr i16, i16* %483, i64 8
  %491 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %488, <8 x i16>* %491, align 2, !alias.scope !22, !noalias !19
  %492 = or i64 %469, 32
  %493 = getelementptr i16, i16* %425, i64 %492
  %494 = getelementptr i16, i16* %447, i64 %492
  %495 = bitcast i16* %493 to <8 x i16>*
  %496 = load <8 x i16>, <8 x i16>* %495, align 2, !alias.scope !19
  %497 = getelementptr i16, i16* %493, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  %499 = load <8 x i16>, <8 x i16>* %498, align 2, !alias.scope !19
  %500 = bitcast i16* %494 to <8 x i16>*
  store <8 x i16> %496, <8 x i16>* %500, align 2, !alias.scope !22, !noalias !19
  %501 = getelementptr i16, i16* %494, i64 8
  %502 = bitcast i16* %501 to <8 x i16>*
  store <8 x i16> %499, <8 x i16>* %502, align 2, !alias.scope !22, !noalias !19
  %503 = or i64 %469, 48
  %504 = getelementptr i16, i16* %425, i64 %503
  %505 = getelementptr i16, i16* %447, i64 %503
  %506 = bitcast i16* %504 to <8 x i16>*
  %507 = load <8 x i16>, <8 x i16>* %506, align 2, !alias.scope !19
  %508 = getelementptr i16, i16* %504, i64 8
  %509 = bitcast i16* %508 to <8 x i16>*
  %510 = load <8 x i16>, <8 x i16>* %509, align 2, !alias.scope !19
  %511 = bitcast i16* %505 to <8 x i16>*
  store <8 x i16> %507, <8 x i16>* %511, align 2, !alias.scope !22, !noalias !19
  %512 = getelementptr i16, i16* %505, i64 8
  %513 = bitcast i16* %512 to <8 x i16>*
  store <8 x i16> %510, <8 x i16>* %513, align 2, !alias.scope !22, !noalias !19
  %514 = add i64 %469, 64
  %515 = add i64 %470, -4
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %517, label %468, !llvm.loop !24

517:                                              ; preds = %468, %456
  %518 = phi i64 [ 0, %456 ], [ %514, %468 ]
  %519 = icmp eq i64 %464, 0
  br i1 %519, label %536, label %520

520:                                              ; preds = %517, %520
  %521 = phi i64 [ %533, %520 ], [ %518, %517 ]
  %522 = phi i64 [ %534, %520 ], [ %464, %517 ]
  %523 = getelementptr i16, i16* %425, i64 %521
  %524 = getelementptr i16, i16* %447, i64 %521
  %525 = bitcast i16* %523 to <8 x i16>*
  %526 = load <8 x i16>, <8 x i16>* %525, align 2, !alias.scope !19
  %527 = getelementptr i16, i16* %523, i64 8
  %528 = bitcast i16* %527 to <8 x i16>*
  %529 = load <8 x i16>, <8 x i16>* %528, align 2, !alias.scope !19
  %530 = bitcast i16* %524 to <8 x i16>*
  store <8 x i16> %526, <8 x i16>* %530, align 2, !alias.scope !22, !noalias !19
  %531 = getelementptr i16, i16* %524, i64 8
  %532 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> %529, <8 x i16>* %532, align 2, !alias.scope !22, !noalias !19
  %533 = add i64 %521, 16
  %534 = add i64 %522, -1
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %536, label %520, !llvm.loop !25

536:                                              ; preds = %520, %517
  %537 = icmp eq i64 %426, %457
  br i1 %537, label %591, label %538

538:                                              ; preds = %536, %449, %445
  %539 = phi i64 [ %426, %449 ], [ %426, %445 ], [ %458, %536 ]
  %540 = phi i16* [ %425, %449 ], [ %425, %445 ], [ %459, %536 ]
  %541 = phi i16* [ %447, %449 ], [ %447, %445 ], [ %460, %536 ]
  %542 = add i64 %539, -1
  %543 = and i64 %539, 7
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %556, label %545

545:                                              ; preds = %538, %545
  %546 = phi i64 [ %551, %545 ], [ %539, %538 ]
  %547 = phi i16* [ %553, %545 ], [ %540, %538 ]
  %548 = phi i16* [ %552, %545 ], [ %541, %538 ]
  %549 = phi i64 [ %554, %545 ], [ %543, %538 ]
  %550 = load i16, i16* %547, align 2
  store i16 %550, i16* %548, align 2
  %551 = add i64 %546, -1
  %552 = getelementptr inbounds i16, i16* %548, i64 1
  %553 = getelementptr inbounds i16, i16* %547, i64 1
  %554 = add i64 %549, -1
  %555 = icmp eq i64 %554, 0
  br i1 %555, label %556, label %545, !llvm.loop !26

556:                                              ; preds = %545, %538
  %557 = phi i64 [ %539, %538 ], [ %551, %545 ]
  %558 = phi i16* [ %540, %538 ], [ %553, %545 ]
  %559 = phi i16* [ %541, %538 ], [ %552, %545 ]
  %560 = icmp ult i64 %542, 7
  br i1 %560, label %591, label %561

561:                                              ; preds = %556, %561
  %562 = phi i64 [ %587, %561 ], [ %557, %556 ]
  %563 = phi i16* [ %589, %561 ], [ %558, %556 ]
  %564 = phi i16* [ %588, %561 ], [ %559, %556 ]
  %565 = load i16, i16* %563, align 2
  store i16 %565, i16* %564, align 2
  %566 = getelementptr inbounds i16, i16* %564, i64 1
  %567 = getelementptr inbounds i16, i16* %563, i64 1
  %568 = load i16, i16* %567, align 2
  store i16 %568, i16* %566, align 2
  %569 = getelementptr inbounds i16, i16* %564, i64 2
  %570 = getelementptr inbounds i16, i16* %563, i64 2
  %571 = load i16, i16* %570, align 2
  store i16 %571, i16* %569, align 2
  %572 = getelementptr inbounds i16, i16* %564, i64 3
  %573 = getelementptr inbounds i16, i16* %563, i64 3
  %574 = load i16, i16* %573, align 2
  store i16 %574, i16* %572, align 2
  %575 = getelementptr inbounds i16, i16* %564, i64 4
  %576 = getelementptr inbounds i16, i16* %563, i64 4
  %577 = load i16, i16* %576, align 2
  store i16 %577, i16* %575, align 2
  %578 = getelementptr inbounds i16, i16* %564, i64 5
  %579 = getelementptr inbounds i16, i16* %563, i64 5
  %580 = load i16, i16* %579, align 2
  store i16 %580, i16* %578, align 2
  %581 = getelementptr inbounds i16, i16* %564, i64 6
  %582 = getelementptr inbounds i16, i16* %563, i64 6
  %583 = load i16, i16* %582, align 2
  store i16 %583, i16* %581, align 2
  %584 = getelementptr inbounds i16, i16* %564, i64 7
  %585 = getelementptr inbounds i16, i16* %563, i64 7
  %586 = load i16, i16* %585, align 2
  store i16 %586, i16* %584, align 2
  %587 = add i64 %562, -8
  %588 = getelementptr inbounds i16, i16* %564, i64 8
  %589 = getelementptr inbounds i16, i16* %563, i64 8
  %590 = icmp eq i64 %587, 0
  br i1 %590, label %591, label %561, !llvm.loop !27

591:                                              ; preds = %556, %561, %536
  %592 = add i64 %437, %426
  %593 = load i8, i8* %78, align 1
  %594 = icmp slt i8 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %591
  store i64 %592, i64* %79, align 8
  br label %598

596:                                              ; preds = %591
  %597 = trunc i64 %592 to i8
  store i8 %597, i8* %78, align 1
  br label %598

598:                                              ; preds = %596, %595
  %599 = getelementptr inbounds i16, i16* %446, i64 %592
  store i16 0, i16* %599, align 2
  br label %603

600:                                              ; preds = %435
  %601 = add i64 %437, %426
  %602 = sub i64 %601, %436
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %76, i64 %436, i64 %602, i64 %437, i64 %437, i64 0, i64 %426, i16* %425) #13
  br label %603

603:                                              ; preds = %600, %598, %440, %349
  %604 = add i64 %105, 1
  br label %104

605:                                              ; preds = %117, %114, %65
  %606 = phi i8* [ %35, %65 ], [ %67, %114 ], [ %67, %117 ]
  %607 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %49, %65 ], [ %77, %114 ], [ %77, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %606) #13
  %608 = getelementptr inbounds %"struct.ui::AXHypertext", %"struct.ui::AXHypertext"* %10, i64 0, i32 0
  store i8 0, i8* %608, align 8
  %609 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 2
  %610 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %607, i64 0, i32 1, i32 1
  %611 = load i8, i8* %610, align 1
  %612 = icmp slt i8 %611, 0
  br i1 %612, label %616, label %613

613:                                              ; preds = %605
  %614 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %615 = bitcast %"class.std::__1::basic_string"* %609 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %614, i8* align 8 %615, i64 24, i1 false) #13
  br label %791

616:                                              ; preds = %605
  %617 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %609, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %618 = load i16*, i16** %617, align 8
  %619 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %620 = load i64, i64* %619, align 8
  %621 = icmp ult i64 %620, 11
  br i1 %621, label %622, label %627

622:                                              ; preds = %616
  %623 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %624 = trunc i64 %620 to i8
  %625 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %626 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %625, i64 0, i32 1, i32 1
  store i8 %624, i8* %626, align 1
  br label %644

627:                                              ; preds = %616
  %628 = icmp ugt i64 %620, 9223372036854775791
  br i1 %628, label %629, label %631

629:                                              ; preds = %627
  %630 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %630) #15
  unreachable

631:                                              ; preds = %627
  %632 = add nuw nsw i64 %620, 8
  %633 = and i64 %632, -8
  %634 = icmp slt i64 %633, 0
  br i1 %634, label %635, label %636

635:                                              ; preds = %631
  call void @abort() #15
  unreachable

636:                                              ; preds = %631
  %637 = shl i64 %633, 1
  %638 = call i8* @_Znwm(i64 %637) #14
  %639 = bitcast i8* %638 to i16*
  %640 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %638, i8** %640, align 8
  %641 = or i64 %633, -9223372036854775808
  %642 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %641, i64* %642, align 8
  %643 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %620, i64* %643, align 8
  br label %644

644:                                              ; preds = %636, %622
  %645 = phi i16* [ %623, %622 ], [ %639, %636 ]
  %646 = add nuw nsw i64 %620, 1
  %647 = add i64 %620, 1
  %648 = icmp ult i64 %647, 16
  br i1 %648, label %738, label %649

649:                                              ; preds = %644
  %650 = add i64 %620, 1
  %651 = getelementptr i16, i16* %645, i64 %650
  %652 = getelementptr i16, i16* %618, i64 %650
  %653 = icmp ult i16* %645, %652
  %654 = icmp ult i16* %618, %651
  %655 = and i1 %653, %654
  br i1 %655, label %738, label %656

656:                                              ; preds = %649
  %657 = and i64 %647, -16
  %658 = sub i64 %646, %657
  %659 = getelementptr i16, i16* %618, i64 %657
  %660 = getelementptr i16, i16* %645, i64 %657
  %661 = add i64 %657, -16
  %662 = lshr exact i64 %661, 4
  %663 = add nuw nsw i64 %662, 1
  %664 = and i64 %663, 3
  %665 = icmp ult i64 %661, 48
  br i1 %665, label %717, label %666

666:                                              ; preds = %656
  %667 = sub nsw i64 %663, %664
  br label %668

668:                                              ; preds = %668, %666
  %669 = phi i64 [ 0, %666 ], [ %714, %668 ]
  %670 = phi i64 [ %667, %666 ], [ %715, %668 ]
  %671 = getelementptr i16, i16* %618, i64 %669
  %672 = getelementptr i16, i16* %645, i64 %669
  %673 = bitcast i16* %671 to <8 x i16>*
  %674 = load <8 x i16>, <8 x i16>* %673, align 2, !alias.scope !28
  %675 = getelementptr i16, i16* %671, i64 8
  %676 = bitcast i16* %675 to <8 x i16>*
  %677 = load <8 x i16>, <8 x i16>* %676, align 2, !alias.scope !28
  %678 = bitcast i16* %672 to <8 x i16>*
  store <8 x i16> %674, <8 x i16>* %678, align 2, !alias.scope !31, !noalias !28
  %679 = getelementptr i16, i16* %672, i64 8
  %680 = bitcast i16* %679 to <8 x i16>*
  store <8 x i16> %677, <8 x i16>* %680, align 2, !alias.scope !31, !noalias !28
  %681 = or i64 %669, 16
  %682 = getelementptr i16, i16* %618, i64 %681
  %683 = getelementptr i16, i16* %645, i64 %681
  %684 = bitcast i16* %682 to <8 x i16>*
  %685 = load <8 x i16>, <8 x i16>* %684, align 2, !alias.scope !28
  %686 = getelementptr i16, i16* %682, i64 8
  %687 = bitcast i16* %686 to <8 x i16>*
  %688 = load <8 x i16>, <8 x i16>* %687, align 2, !alias.scope !28
  %689 = bitcast i16* %683 to <8 x i16>*
  store <8 x i16> %685, <8 x i16>* %689, align 2, !alias.scope !31, !noalias !28
  %690 = getelementptr i16, i16* %683, i64 8
  %691 = bitcast i16* %690 to <8 x i16>*
  store <8 x i16> %688, <8 x i16>* %691, align 2, !alias.scope !31, !noalias !28
  %692 = or i64 %669, 32
  %693 = getelementptr i16, i16* %618, i64 %692
  %694 = getelementptr i16, i16* %645, i64 %692
  %695 = bitcast i16* %693 to <8 x i16>*
  %696 = load <8 x i16>, <8 x i16>* %695, align 2, !alias.scope !28
  %697 = getelementptr i16, i16* %693, i64 8
  %698 = bitcast i16* %697 to <8 x i16>*
  %699 = load <8 x i16>, <8 x i16>* %698, align 2, !alias.scope !28
  %700 = bitcast i16* %694 to <8 x i16>*
  store <8 x i16> %696, <8 x i16>* %700, align 2, !alias.scope !31, !noalias !28
  %701 = getelementptr i16, i16* %694, i64 8
  %702 = bitcast i16* %701 to <8 x i16>*
  store <8 x i16> %699, <8 x i16>* %702, align 2, !alias.scope !31, !noalias !28
  %703 = or i64 %669, 48
  %704 = getelementptr i16, i16* %618, i64 %703
  %705 = getelementptr i16, i16* %645, i64 %703
  %706 = bitcast i16* %704 to <8 x i16>*
  %707 = load <8 x i16>, <8 x i16>* %706, align 2, !alias.scope !28
  %708 = getelementptr i16, i16* %704, i64 8
  %709 = bitcast i16* %708 to <8 x i16>*
  %710 = load <8 x i16>, <8 x i16>* %709, align 2, !alias.scope !28
  %711 = bitcast i16* %705 to <8 x i16>*
  store <8 x i16> %707, <8 x i16>* %711, align 2, !alias.scope !31, !noalias !28
  %712 = getelementptr i16, i16* %705, i64 8
  %713 = bitcast i16* %712 to <8 x i16>*
  store <8 x i16> %710, <8 x i16>* %713, align 2, !alias.scope !31, !noalias !28
  %714 = add i64 %669, 64
  %715 = add i64 %670, -4
  %716 = icmp eq i64 %715, 0
  br i1 %716, label %717, label %668, !llvm.loop !33

717:                                              ; preds = %668, %656
  %718 = phi i64 [ 0, %656 ], [ %714, %668 ]
  %719 = icmp eq i64 %664, 0
  br i1 %719, label %736, label %720

720:                                              ; preds = %717, %720
  %721 = phi i64 [ %733, %720 ], [ %718, %717 ]
  %722 = phi i64 [ %734, %720 ], [ %664, %717 ]
  %723 = getelementptr i16, i16* %618, i64 %721
  %724 = getelementptr i16, i16* %645, i64 %721
  %725 = bitcast i16* %723 to <8 x i16>*
  %726 = load <8 x i16>, <8 x i16>* %725, align 2, !alias.scope !28
  %727 = getelementptr i16, i16* %723, i64 8
  %728 = bitcast i16* %727 to <8 x i16>*
  %729 = load <8 x i16>, <8 x i16>* %728, align 2, !alias.scope !28
  %730 = bitcast i16* %724 to <8 x i16>*
  store <8 x i16> %726, <8 x i16>* %730, align 2, !alias.scope !31, !noalias !28
  %731 = getelementptr i16, i16* %724, i64 8
  %732 = bitcast i16* %731 to <8 x i16>*
  store <8 x i16> %729, <8 x i16>* %732, align 2, !alias.scope !31, !noalias !28
  %733 = add i64 %721, 16
  %734 = add i64 %722, -1
  %735 = icmp eq i64 %734, 0
  br i1 %735, label %736, label %720, !llvm.loop !34

736:                                              ; preds = %720, %717
  %737 = icmp eq i64 %647, %657
  br i1 %737, label %791, label %738

738:                                              ; preds = %736, %649, %644
  %739 = phi i64 [ %646, %649 ], [ %646, %644 ], [ %658, %736 ]
  %740 = phi i16* [ %618, %649 ], [ %618, %644 ], [ %659, %736 ]
  %741 = phi i16* [ %645, %649 ], [ %645, %644 ], [ %660, %736 ]
  %742 = add i64 %739, -1
  %743 = and i64 %739, 7
  %744 = icmp eq i64 %743, 0
  br i1 %744, label %756, label %745

745:                                              ; preds = %738, %745
  %746 = phi i64 [ %751, %745 ], [ %739, %738 ]
  %747 = phi i16* [ %753, %745 ], [ %740, %738 ]
  %748 = phi i16* [ %752, %745 ], [ %741, %738 ]
  %749 = phi i64 [ %754, %745 ], [ %743, %738 ]
  %750 = load i16, i16* %747, align 2
  store i16 %750, i16* %748, align 2
  %751 = add i64 %746, -1
  %752 = getelementptr inbounds i16, i16* %748, i64 1
  %753 = getelementptr inbounds i16, i16* %747, i64 1
  %754 = add i64 %749, -1
  %755 = icmp eq i64 %754, 0
  br i1 %755, label %756, label %745, !llvm.loop !35

756:                                              ; preds = %745, %738
  %757 = phi i64 [ %739, %738 ], [ %751, %745 ]
  %758 = phi i16* [ %740, %738 ], [ %753, %745 ]
  %759 = phi i16* [ %741, %738 ], [ %752, %745 ]
  %760 = icmp ult i64 %742, 7
  br i1 %760, label %791, label %761

761:                                              ; preds = %756, %761
  %762 = phi i64 [ %787, %761 ], [ %757, %756 ]
  %763 = phi i16* [ %789, %761 ], [ %758, %756 ]
  %764 = phi i16* [ %788, %761 ], [ %759, %756 ]
  %765 = load i16, i16* %763, align 2
  store i16 %765, i16* %764, align 2
  %766 = getelementptr inbounds i16, i16* %764, i64 1
  %767 = getelementptr inbounds i16, i16* %763, i64 1
  %768 = load i16, i16* %767, align 2
  store i16 %768, i16* %766, align 2
  %769 = getelementptr inbounds i16, i16* %764, i64 2
  %770 = getelementptr inbounds i16, i16* %763, i64 2
  %771 = load i16, i16* %770, align 2
  store i16 %771, i16* %769, align 2
  %772 = getelementptr inbounds i16, i16* %764, i64 3
  %773 = getelementptr inbounds i16, i16* %763, i64 3
  %774 = load i16, i16* %773, align 2
  store i16 %774, i16* %772, align 2
  %775 = getelementptr inbounds i16, i16* %764, i64 4
  %776 = getelementptr inbounds i16, i16* %763, i64 4
  %777 = load i16, i16* %776, align 2
  store i16 %777, i16* %775, align 2
  %778 = getelementptr inbounds i16, i16* %764, i64 5
  %779 = getelementptr inbounds i16, i16* %763, i64 5
  %780 = load i16, i16* %779, align 2
  store i16 %780, i16* %778, align 2
  %781 = getelementptr inbounds i16, i16* %764, i64 6
  %782 = getelementptr inbounds i16, i16* %763, i64 6
  %783 = load i16, i16* %782, align 2
  store i16 %783, i16* %781, align 2
  %784 = getelementptr inbounds i16, i16* %764, i64 7
  %785 = getelementptr inbounds i16, i16* %763, i64 7
  %786 = load i16, i16* %785, align 2
  store i16 %786, i16* %784, align 2
  %787 = add i64 %762, -8
  %788 = getelementptr inbounds i16, i16* %764, i64 8
  %789 = getelementptr inbounds i16, i16* %763, i64 8
  %790 = icmp eq i64 %787, 0
  br i1 %790, label %791, label %761, !llvm.loop !36

791:                                              ; preds = %756, %761, %736, %613
  ret void
}

declare dereferenceable(56) %"struct.ui::AXHypertext"* @_ZN2ui11AXHypertextaSERKS0_(%"struct.ui::AXHypertext"*, %"struct.ui::AXHypertext"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string.82", align 8
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %4, align 8
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 6, i32 0, i32 1
  %7 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %6, align 8
  %8 = icmp eq %"class.ui::AXNode"** %5, %7
  br i1 %8, label %83, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %11 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %10) #13
  br i1 %11, label %83, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %83, label %16

16:                                               ; preds = %12
  %17 = tail call zeroext i1 @_ZNK2ui10AXNodeData17IsAtomicTextFieldEv(%"struct.ui::AXNodeData"* %10) #13
  br i1 %17, label %83, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 117
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %"class.ui::AXNode"*** %6 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %3 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %24, %26
  ret i1 %27

28:                                               ; preds = %18
  %29 = tail call zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32 %20) #13
  br i1 %29, label %83, label %30

30:                                               ; preds = %28
  %31 = load i32, i32* %19, align 4
  switch i32 %31, label %83 [
    i32 141, label %82
    i32 100, label %32
    i32 50, label %82
    i32 92, label %82
    i32 130, label %82
    i32 151, label %82
    i32 157, label %82
    i32 156, label %82
    i32 158, label %82
  ]

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::basic_string.82"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string.82"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %10, i32 25) #13
  %38 = bitcast %"class.std::__1::basic_string.82"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %32
  %43 = bitcast %"class.std::__1::basic_string.82"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %43, i64 24, i1 false) #13
  br label %49

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"* nonnull %2, i8* %46, i64 %48) #13
  br label %49

49:                                               ; preds = %42, %44
  %50 = bitcast %"class.std::__1::basic_string.82"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i64, i64* %35, align 8
  %55 = zext i8 %52 to i64
  %56 = select i1 %53, i64 %54, i64 %55
  %57 = icmp eq i64 %56, 3
  br i1 %57, label %58, label %65

58:                                               ; preds = %49
  %59 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.82"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #13
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = load i8, i8* %51, align 1
  %63 = load i64, i64* %35, align 8
  %64 = zext i8 %62 to i64
  br label %65

65:                                               ; preds = %61, %49
  %66 = phi i64 [ %64, %61 ], [ %55, %49 ]
  %67 = phi i64 [ %63, %61 ], [ %54, %49 ]
  %68 = phi i8 [ %62, %61 ], [ %52, %49 ]
  %69 = icmp slt i8 %68, 0
  %70 = select i1 %69, i64 %67, i64 %66
  %71 = icmp eq i64 %70, 5
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.82"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #13
  %74 = icmp eq i32 %73, 0
  br label %75

75:                                               ; preds = %72, %65, %58
  %76 = phi i1 [ true, %58 ], [ %74, %72 ], [ false, %65 ]
  %77 = load i8, i8* %51, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  br label %83

82:                                               ; preds = %30, %30, %30, %30, %30, %30, %30, %30
  br label %83

83:                                               ; preds = %30, %16, %28, %12, %9, %1, %82, %81
  %84 = phi i1 [ true, %82 ], [ %76, %81 ], [ true, %1 ], [ false, %9 ], [ true, %12 ], [ true, %28 ], [ true, %16 ], [ false, %30 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode13IsChildOfLeafEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %7, %1
  %3 = phi %"class.ui::AXNode"* [ %0, %1 ], [ %5, %7 ]
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %3, i64 0, i32 5
  %5 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %4, align 8
  %6 = icmp eq %"class.ui::AXNode"* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 7
  %9 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %8) #13
  br i1 %9, label %2, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* nonnull %5)
  br i1 %11, label %23, label %14

12:                                               ; preds = %19
  %13 = tail call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* nonnull %17)
  br i1 %13, label %23, label %22

14:                                               ; preds = %10, %22
  %15 = phi %"class.ui::AXNode"* [ %17, %22 ], [ %5, %10 ]
  %16 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 5
  %17 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %16, align 8
  %18 = icmp eq %"class.ui::AXNode"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %17, i64 0, i32 7
  %21 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %20) #13
  br i1 %21, label %22, label %12

22:                                               ; preds = %19, %12
  br label %14

23:                                               ; preds = %2, %12, %14, %10
  %24 = phi i1 [ true, %10 ], [ true, %12 ], [ false, %14 ], [ false, %2 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string.82"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.82", align 8
  %4 = alloca %"class.std::__1::basic_string.82", align 8
  %5 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %6 = tail call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"* %5, %"class.ui::AXNode"* dereferenceable(456) %1) #13
  %7 = icmp eq %"class.ui::AXTreeManager"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.ui::AXTreeManager"* %6 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)***
  %10 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %10, i64 6
  %12 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %11, align 8
  %13 = tail call %"class.ui::AXNode"* %12(%"class.ui::AXTreeManager"* nonnull %6) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi %"class.ui::AXNode"* [ %13, %8 ], [ %1, %2 ]
  %16 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 7
  %17 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"* %16) #13
  br i1 %17, label %18, label %52

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %52

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -86, i64 24, i1 false)
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %16, i32 29) #13
  %27 = bitcast %"class.std::__1::basic_string.82"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  %33 = bitcast %"class.std::__1::basic_string.82"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #13
  br label %39

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"* %0, i8* %36, i64 %38) #13
  br label %39

39:                                               ; preds = %31, %34
  %40 = bitcast %"class.std::__1::basic_string.82"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i64, i64* %24, align 8
  %45 = zext i8 %42 to i64
  %46 = select i1 %43, i64 %44, i64 %45
  %47 = icmp eq i64 %46, 0
  %48 = and i1 %43, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %39
  %50 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %39, %49
  br i1 %47, label %52, label %164

52:                                               ; preds = %14, %51, %18
  %53 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"* %16) #13
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 4
  %56 = load i64, i64* %55, align 8
  %57 = icmp ne i64 %56, 0
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i1 [ false, %52 ], [ %57, %54 ]
  %60 = tail call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* %15)
  %61 = xor i1 %60, true
  %62 = or i1 %59, %61
  br i1 %62, label %81, label %63

63:                                               ; preds = %58
  %64 = tail call i32 @_ZNK2ui10AXNodeData11GetNameFromEv(%"struct.ui::AXNodeData"* %16) #13
  switch i32 %64, label %81 [
    i32 0, label %65
    i32 1, label %65
    i32 2, label %65
    i32 3, label %65
    i32 4, label %65
    i32 7, label %65
    i32 8, label %65
    i32 5, label %67
    i32 6, label %67
    i32 9, label %67
  ]

65:                                               ; preds = %63, %63, %63, %63, %63, %63, %63
  %66 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #13
  br label %164

67:                                               ; preds = %63, %63, %63
  %68 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %16, i32 21) #13
  %69 = bitcast %"class.std::__1::basic_string.82"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  %75 = bitcast %"class.std::__1::basic_string.82"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #13
  br label %164

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"* %0, i8* %78, i64 %80) #13
  br label %164

81:                                               ; preds = %58, %63
  %82 = bitcast %"class.std::__1::basic_string.82"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 24, i1 false) #13
  %83 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %15) #13, !noalias !37
  %84 = icmp eq %"class.ui::AXNode"* %83, null
  br i1 %84, label %92, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.std::__1::basic_string.82"* %4 to i8*
  %87 = bitcast %"class.std::__1::basic_string.82"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = icmp eq %"class.ui::AXNode"* %15, null
  br label %96

92:                                               ; preds = %112, %161, %133, %81
  %93 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* nonnull align 8 %82, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #13
  br label %164

94:                                               ; preds = %155, %130
  %95 = phi %"class.ui::AXNode"* [ %128, %130 ], [ %153, %155 ]
  br label %96

96:                                               ; preds = %94, %85
  %97 = phi %"class.ui::AXNode"* [ %95, %94 ], [ %83, %85 ]
  br label %98

98:                                               ; preds = %96, %111
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  call void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string.82"* nonnull sret %4, %"class.ui::AXNode"* nonnull %97)
  %99 = load i8, i8* %88, align 1
  %100 = icmp slt i8 %99, 0
  %101 = load i8*, i8** %89, align 8
  %102 = load i64, i64* %90, align 8
  %103 = zext i8 %99 to i64
  %104 = select i1 %100, i8* %101, i8* %86
  %105 = select i1 %100, i64 %102, i64 %103
  %106 = call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.82"* nonnull %3, i8* %104, i64 %105) #13
  %107 = load i8, i8* %88, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %98
  %110 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %110) #14
  br label %111

111:                                              ; preds = %109, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  br i1 %91, label %98, label %112

112:                                              ; preds = %111
  %113 = call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* nonnull %15) #13
  %114 = icmp eq %"class.ui::AXNode"* %97, %113
  br i1 %114, label %92, label %115

115:                                              ; preds = %112, %158
  %116 = phi i8 [ %159, %158 ], [ 0, %112 ]
  %117 = phi %"class.ui::AXNode"* [ %160, %158 ], [ %97, %112 ]
  %118 = icmp eq i8 %116, 0
  br label %119

119:                                              ; preds = %115, %130
  %120 = phi %"class.ui::AXNode"* [ %128, %130 ], [ %117, %115 ]
  br i1 %118, label %133, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %120, i64 0, i32 6, i32 0, i32 0
  %123 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %122, align 8
  %124 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %120, i64 0, i32 6, i32 0, i32 1
  %125 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %124, align 8
  %126 = icmp eq %"class.ui::AXNode"** %123, %125
  br i1 %126, label %133, label %127

127:                                              ; preds = %121
  %128 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %123, align 8
  %129 = icmp eq %"class.ui::AXNode"* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %128, i64 0, i32 7
  %132 = call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %131) #13
  br i1 %132, label %119, label %94

133:                                              ; preds = %127, %121, %119
  %134 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %120, i64 0, i32 5
  %135 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %134, align 8
  %136 = icmp eq %"class.ui::AXNode"* %135, null
  br i1 %136, label %92, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %120, i64 0, i32 2
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  %141 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %135, i64 0, i32 6
  %142 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %135, i64 0, i32 6, i32 0, i32 1
  %143 = bitcast %"class.ui::AXNode"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.std::__1::vector"* %141 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %144, %146
  %148 = ashr exact i64 %147, 3
  %149 = icmp ult i64 %140, %148
  br i1 %149, label %150, label %161

150:                                              ; preds = %137
  %151 = inttoptr i64 %146 to %"class.ui::AXNode"**
  %152 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %151, i64 %140
  %153 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %152, align 8
  %154 = icmp eq %"class.ui::AXNode"* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %153, i64 0, i32 7
  %157 = call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %156) #13
  br i1 %157, label %158, label %94

158:                                              ; preds = %155, %161
  %159 = phi i8 [ 0, %161 ], [ 1, %155 ]
  %160 = phi %"class.ui::AXNode"* [ %135, %161 ], [ %153, %155 ]
  br label %115

161:                                              ; preds = %150, %137
  %162 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %135, i64 0, i32 7
  %163 = call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %162) #13
  br i1 %163, label %158, label %92

164:                                              ; preds = %76, %73, %65, %92, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui6AXNode25SetNeedsToUpdateHypertextEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 9
  %5 = tail call dereferenceable(56) %"struct.ui::AXHypertext"* @_ZN2ui11AXHypertextaSERKS0_(%"struct.ui::AXHypertext"* %4, %"struct.ui::AXHypertext"* dereferenceable(56) %3) #13
  %6 = getelementptr inbounds %"struct.ui::AXHypertext", %"struct.ui::AXHypertext"* %3, i64 0, i32 0
  store i8 1, i8* %6, align 8
  call void @_ZNK2ui6AXNode12GetHypertextEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.ui::AXNode"* %0)
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::map"* @_ZNK2ui6AXNode39GetHypertextOffsetToHyperlinkChildIndexEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  call void @_ZNK2ui6AXNode12GetHypertextEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.ui::AXNode"* %0)
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 8, i32 1
  ret %"class.std::__1::map"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"struct.ui::AXHypertext"* @_ZNK2ui6AXNode15GetOldHypertextEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  call void @_ZNK2ui6AXNode12GetHypertextEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.ui::AXNode"* %0)
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 9
  ret %"struct.ui::AXHypertext"* %11
}

declare zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #1

declare i32 @_ZNK2ui10AXNodeData11GetNameFromEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui6AXNode18GetInnerTextLengthEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string.82", align 8
  %3 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #13
  %4 = tail call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap22GetManagerForChildTreeERKNS_6AXNodeE(%"class.ui::AXTreeManagerMap"* %3, %"class.ui::AXNode"* dereferenceable(456) %0) #13
  %5 = icmp eq %"class.ui::AXTreeManager"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::AXTreeManager"* %4 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)***
  %8 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %8, i64 6
  %10 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*)** %9, align 8
  %11 = tail call %"class.ui::AXNode"* %10(%"class.ui::AXTreeManager"* nonnull %4) #13
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi %"class.ui::AXNode"* [ %11, %6 ], [ %0, %1 ]
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %13, i64 0, i32 7
  %15 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"* %14) #13
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %13, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = icmp ne i64 %18, 0
  br label %20

20:                                               ; preds = %16, %12
  %21 = phi i1 [ false, %12 ], [ %19, %16 ]
  %22 = tail call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* %13)
  %23 = xor i1 %22, true
  %24 = or i1 %21, %23
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.std::__1::basic_string.82"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  call void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string.82"* nonnull sret %2, %"class.ui::AXNode"* %13)
  %27 = bitcast %"class.std::__1::basic_string.82"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = zext i8 %29 to i32
  br label %39

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i32 [ %32, %31 ], [ %36, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  br label %107

41:                                               ; preds = %20
  %42 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %13) #13, !noalias !40
  %43 = icmp eq %"class.ui::AXNode"* %42, null
  br i1 %43, label %107, label %44

44:                                               ; preds = %41
  %45 = icmp eq %"class.ui::AXNode"* %13, null
  br label %48

46:                                               ; preds = %98, %73
  %47 = phi %"class.ui::AXNode"* [ %71, %73 ], [ %96, %98 ]
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i32 [ %54, %46 ], [ 0, %44 ]
  %50 = phi %"class.ui::AXNode"* [ %47, %46 ], [ %42, %44 ]
  br label %51

51:                                               ; preds = %48, %51
  %52 = phi i32 [ %54, %51 ], [ %49, %48 ]
  %53 = tail call i32 @_ZNK2ui6AXNode18GetInnerTextLengthEv(%"class.ui::AXNode"* nonnull %50)
  %54 = add nsw i32 %53, %52
  br i1 %45, label %51, label %55

55:                                               ; preds = %51
  %56 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode34ComputeLastUnignoredChildRecursiveEv(%"class.ui::AXNode"* nonnull %13) #13
  %57 = icmp eq %"class.ui::AXNode"* %50, %56
  br i1 %57, label %107, label %58

58:                                               ; preds = %55, %101
  %59 = phi i8 [ %102, %101 ], [ 0, %55 ]
  %60 = phi %"class.ui::AXNode"* [ %103, %101 ], [ %50, %55 ]
  %61 = icmp eq i8 %59, 0
  br label %62

62:                                               ; preds = %58, %73
  %63 = phi %"class.ui::AXNode"* [ %71, %73 ], [ %60, %58 ]
  br i1 %61, label %76, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %63, i64 0, i32 6, i32 0, i32 0
  %66 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %65, align 8
  %67 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %63, i64 0, i32 6, i32 0, i32 1
  %68 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %67, align 8
  %69 = icmp eq %"class.ui::AXNode"** %66, %68
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %66, align 8
  %72 = icmp eq %"class.ui::AXNode"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %71, i64 0, i32 7
  %75 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %74) #13
  br i1 %75, label %62, label %46

76:                                               ; preds = %70, %64, %62
  %77 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %63, i64 0, i32 5
  %78 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %77, align 8
  %79 = icmp eq %"class.ui::AXNode"* %78, null
  br i1 %79, label %107, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %63, i64 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %78, i64 0, i32 6
  %85 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %78, i64 0, i32 6, i32 0, i32 1
  %86 = bitcast %"class.ui::AXNode"*** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector"* %84 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 3
  %92 = icmp ult i64 %83, %91
  br i1 %92, label %93, label %104

93:                                               ; preds = %80
  %94 = inttoptr i64 %89 to %"class.ui::AXNode"**
  %95 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %94, i64 %83
  %96 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %95, align 8
  %97 = icmp eq %"class.ui::AXNode"* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %96, i64 0, i32 7
  %100 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %99) #13
  br i1 %100, label %101, label %46

101:                                              ; preds = %98, %104
  %102 = phi i8 [ 0, %104 ], [ 1, %98 ]
  %103 = phi %"class.ui::AXNode"* [ %78, %104 ], [ %96, %98 ]
  br label %58

104:                                              ; preds = %93, %80
  %105 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %78, i64 0, i32 7
  %106 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %105) #13
  br i1 %106, label %101, label %107

107:                                              ; preds = %55, %104, %76, %41, %39
  %108 = phi i32 [ %40, %39 ], [ 0, %41 ], [ %54, %76 ], [ %54, %104 ], [ %54, %55 ]
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode11GetLanguageEv(%"class.std::__1::basic_string.82"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.ui::AXNode"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2, %48
  %5 = phi %"class.ui::AXNode"* [ %50, %48 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 10, i32 0, i32 0, i32 0
  %7 = load %"struct.ui::AXLanguageInfo"*, %"struct.ui::AXLanguageInfo"** %6, align 8
  %8 = icmp eq %"struct.ui::AXLanguageInfo"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %4
  %10 = bitcast %"struct.ui::AXLanguageInfo"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %9
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %19
  br i1 %13, label %26, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  %25 = bitcast %"struct.ui::AXLanguageInfo"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %25, i64 24, i1 false) #13
  br label %54

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.ui::AXLanguageInfo", %"struct.ui::AXLanguageInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"* %0, i8* %28, i64 %30) #13
  br label %54

31:                                               ; preds = %4, %19
  %32 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 7
  %33 = tail call zeroext i1 @_ZNK2ui10AXNodeData18HasStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %32, i32 20) #13
  br i1 %33, label %34, label %48

34:                                               ; preds = %31
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %32, i32 20) #13
  %36 = bitcast %"class.std::__1::basic_string.82"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  %42 = bitcast %"class.std::__1::basic_string.82"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #13
  br label %54

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"* %0, i8* %45, i64 %47) #13
  br label %54

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 5
  %50 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %49, align 8
  %51 = icmp eq %"class.ui::AXNode"* %50, null
  br i1 %51, label %52, label %4

52:                                               ; preds = %48, %2
  %53 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13
  br label %54

54:                                               ; preds = %43, %40, %26, %23, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode18GetValueForControlEv(%"class.std::__1::basic_string.82"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7
  %4 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"* %3) #13
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @_ZNK2ui6AXNode20GetValueForTextFieldEv(%"class.std::__1::basic_string.82"* sret %0, %"class.ui::AXNode"* %1)
  br label %50

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK2ui10AXNodeData21IsRangeValueSupportedEv(%"struct.ui::AXNodeData"* %3) #13
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @_ZNK2ui6AXNode20GetTextForRangeValueEv(%"class.std::__1::basic_string.82"* sret %0, %"class.ui::AXNode"* %1)
  br label %50

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 18
  br i1 %12, label %13, label %32

13:                                               ; preds = %9
  %14 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %3, i32 41) #13, !noalias !43
  %15 = lshr i32 %14, 16
  %16 = lshr i32 %14, 8
  %17 = trunc i32 %15 to i16
  %18 = and i16 %17, 255
  %19 = mul nuw nsw i16 %18, 100
  %20 = udiv i16 %19, 255
  %21 = zext i16 %20 to i32
  %22 = trunc i32 %16 to i16
  %23 = and i16 %22, 255
  %24 = mul nuw nsw i16 %23, 100
  %25 = udiv i16 %24, 255
  %26 = zext i16 %25 to i32
  %27 = trunc i32 %14 to i16
  %28 = and i16 %27, 255
  %29 = mul nuw nsw i16 %28, 100
  %30 = udiv i16 %29, 255
  %31 = zext i16 %30 to i32
  tail call void (%"class.std::__1::basic_string.82"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.82"* sret %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 %21, i32 %26, i32 %31) #13
  br label %50

32:                                               ; preds = %9
  %33 = tail call zeroext i1 @_ZN2ui9IsControlEN2ax5mojom4RoleE(i32 %11) #13
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #13
  br label %50

36:                                               ; preds = %32
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %3, i32 29) #13
  %38 = bitcast %"class.std::__1::basic_string.82"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  %44 = bitcast %"class.std::__1::basic_string.82"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #13
  br label %50

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"* %0, i8* %47, i64 %49) #13
  br label %50

50:                                               ; preds = %45, %42, %34, %13, %8, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode20GetValueForTextFieldEv(%"class.std::__1::basic_string.82"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.82", align 8
  %4 = bitcast %"class.std::__1::basic_string.82"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7
  %8 = bitcast %"class.std::__1::basic_string.82"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %7, i32 29) #13
  %10 = bitcast %"class.std::__1::basic_string.82"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string.82"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %15, i64 24, i1 false) #13
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"* nonnull %3, i8* %18, i64 %20) #13
  br label %21

21:                                               ; preds = %14, %16
  %22 = bitcast %"class.std::__1::basic_string.82"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i64, i64* %6, align 8
  %27 = zext i8 %24 to i64
  %28 = select i1 %25, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = call zeroext i1 @_ZNK2ui10AXNodeData20IsNonAtomicTextFieldEv(%"struct.ui::AXNodeData"* %7) #13
  br i1 %31, label %34, label %32

32:                                               ; preds = %21, %30
  %33 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %4, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #13
  br label %39

34:                                               ; preds = %30
  call void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string.82"* sret %0, %"class.ui::AXNode"* %1)
  %35 = load i8, i8* %23, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %32, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

declare zeroext i1 @_ZNK2ui10AXNodeData21IsRangeValueSupportedEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode20GetTextForRangeValueEv(%"class.std::__1::basic_string.82"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = alloca %"class.std::__1::basic_string.82", align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7
  %8 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %7, i32 29) #13
  %10 = bitcast %"class.std::__1::basic_string.82"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  %16 = bitcast %"class.std::__1::basic_string.82"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #13
  br label %22

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"* %0, i8* %19, i64 %21) #13
  br label %22

22:                                               ; preds = %14, %17
  %23 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #13
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %24 = bitcast %"class.std::__1::basic_string.82"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i64, i64* %6, align 8
  %29 = zext i8 %26 to i64
  %30 = select i1 %27, i64 %28, i64 %29
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %22
  %33 = call zeroext i1 @_ZNK2ui10AXNodeData17GetFloatAttributeEN2ax5mojom14FloatAttributeEPf(%"struct.ui::AXNodeData"* %7, i32 1, float* nonnull %3) #13
  br i1 %33, label %34, label %44

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::basic_string.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #13
  %36 = load float, float* %3, align 4
  %37 = fpext float %36 to double
  call void @_ZN4base14NumberToStringEd(%"class.std::__1::basic_string.82"* nonnull sret %4, double %37) #13
  %38 = load i8, i8* %25, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %40, %34
  %43 = bitcast %"class.std::__1::basic_string.82"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %35, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #13
  br label %44

44:                                               ; preds = %42, %32, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode20GetValueForColorWellEv(%"class.std::__1::basic_string.82"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7
  %4 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %3, i32 41) #13
  %5 = lshr i32 %4, 16
  %6 = lshr i32 %4, 8
  %7 = trunc i32 %5 to i16
  %8 = and i16 %7, 255
  %9 = mul nuw nsw i16 %8, 100
  %10 = udiv i16 %9, 255
  %11 = zext i16 %10 to i32
  %12 = trunc i32 %6 to i16
  %13 = and i16 %12, 255
  %14 = mul nuw nsw i16 %13, 100
  %15 = udiv i16 %14, 255
  %16 = zext i16 %15 to i32
  %17 = trunc i32 %4 to i16
  %18 = and i16 %17, 255
  %19 = mul nuw nsw i16 %18, 100
  %20 = udiv i16 %19, 255
  %21 = zext i16 %20 to i32
  tail call void (%"class.std::__1::basic_string.82"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.82"* sret %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 %11, i32 %16, i32 %21) #13
  ret void
}

declare zeroext i1 @_ZN2ui9IsControlEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2uilsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6AXNodeE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.ui::AXNode"* dereferenceable(456)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.82", align 8
  %4 = bitcast %"class.std::__1::basic_string.82"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7
  %6 = bitcast %"struct.ui::AXNodeData"* %5 to void (%"class.std::__1::basic_string.82"*, %"struct.ui::AXNodeData"*)***
  %7 = load void (%"class.std::__1::basic_string.82"*, %"struct.ui::AXNodeData"*)**, void (%"class.std::__1::basic_string.82"*, %"struct.ui::AXNodeData"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.std::__1::basic_string.82"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string.82"*, %"struct.ui::AXNodeData"*)** %7, i64 2
  %9 = load void (%"class.std::__1::basic_string.82"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string.82"*, %"struct.ui::AXNodeData"*)** %8, align 8
  call void %9(%"class.std::__1::basic_string.82"* nonnull sret %3, %"struct.ui::AXNodeData"* %5) #13
  %10 = bitcast %"class.std::__1::basic_string.82"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %12 to i64
  %19 = select i1 %13, i8* %15, i8* %4
  %20 = select i1 %13, i64 %17, i64 %18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %19, i64 %20) #13
  %22 = load i8, i8* %11, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret %"class.std::__1::basic_ostream"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode7IsTableEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %3) #13
  ret i1 %4
}

declare zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode16GetTableColCountEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %25, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = shl i64 %23, 32
  br label %25

25:                                               ; preds = %8, %1, %12, %21
  %26 = phi i64 [ 1, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %27 = phi i64 [ %24, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %28 = or i64 %27, %26
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXTableInfo"* @_ZNK2ui6AXNode20GetAncestorTableInfoEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %20, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  br label %20

20:                                               ; preds = %8, %1, %12
  %21 = phi %"class.ui::AXTableInfo"* [ %19, %12 ], [ null, %1 ], [ null, %8 ]
  ret %"class.ui::AXTableInfo"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode16GetTableRowCountEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %25, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = shl i64 %23, 32
  br label %25

25:                                               ; preds = %8, %1, %12, %21
  %26 = phi i64 [ 1, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %27 = phi i64 [ %24, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %28 = or i64 %27, %26
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode20GetTableAriaColCountEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %26, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 14
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  br label %26

26:                                               ; preds = %8, %1, %12, %21
  %27 = phi i64 [ %25, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %28 = phi i64 [ 1, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %29 = or i64 %28, %27
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode20GetTableAriaRowCountEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %26, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 13
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  br label %26

26:                                               ; preds = %8, %1, %12, %21
  %27 = phi i64 [ %25, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %28 = phi i64 [ 1, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %29 = or i64 %28, %27
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode17GetTableCellCountEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %30, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 8
  %23 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 8, i32 0, i32 1
  %24 = bitcast i32** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.56"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = shl i64 %28, 30
  br label %30

30:                                               ; preds = %8, %1, %12, %21
  %31 = phi i64 [ 1, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %32 = phi i64 [ %29, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZNK2ui6AXNode32GetTableHasColumnOrRowHeaderNodeEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %29, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 4, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 4, i32 0, i32 1
  %25 = load i32*, i32** %24, align 8
  %26 = icmp ne i32* %23, %25
  %27 = zext i1 %26 to i16
  %28 = shl nuw nsw i16 %27, 8
  br label %29

29:                                               ; preds = %8, %1, %12, %21
  %30 = phi i16 [ 1, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %31 = phi i16 [ %28, %21 ], [ 0, %12 ], [ 0, %1 ], [ 0, %8 ]
  %32 = or i16 %31, %30
  ret i16 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode21GetTableCellFromIndexEi(%"class.ui::AXNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %2, %9
  %5 = phi %"class.ui::AXNode"* [ %11, %9 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 7, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %7) #13
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 5
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  %12 = icmp eq %"class.ui::AXNode"* %11, null
  br i1 %12, label %45, label %4

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %15 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %14, align 8
  %16 = bitcast %"class.ui::AXNode::OwnerTree"* %15 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %17 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, i64 1
  %19 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %18, align 8
  %20 = tail call %"class.ui::AXTableInfo"* %19(%"class.ui::AXNode::OwnerTree"* %15, %"class.ui::AXNode"* nonnull %5) #13
  %21 = icmp eq %"class.ui::AXTableInfo"* %20, null
  %22 = icmp slt i32 %1, 0
  %23 = or i1 %22, %21
  br i1 %23, label %45, label %24

24:                                               ; preds = %13
  %25 = sext i32 %1 to i64
  %26 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %20, i64 0, i32 8
  %27 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %20, i64 0, i32 8, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.56"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 2
  %34 = icmp ugt i64 %33, %25
  br i1 %34, label %35, label %45

35:                                               ; preds = %24
  %36 = inttoptr i64 %31 to i32*
  %37 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %14, align 8
  %38 = getelementptr inbounds i32, i32* %36, i64 %25
  %39 = load i32, i32* %38, align 4
  %40 = bitcast %"class.ui::AXNode::OwnerTree"* %37 to %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)***
  %41 = load %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)**, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*** %40, align 8
  %42 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)** %41, i64 2
  %43 = load %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)** %42, align 8
  %44 = tail call %"class.ui::AXNode"* %43(%"class.ui::AXNode::OwnerTree"* %37, i32 %39) #13
  br label %45

45:                                               ; preds = %9, %2, %24, %13, %35
  %46 = phi %"class.ui::AXNode"* [ %44, %35 ], [ null, %13 ], [ null, %24 ], [ null, %2 ], [ null, %9 ]
  ret %"class.ui::AXNode"* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode15GetTableCaptionEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %30, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %12
  %22 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %23 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = bitcast %"class.ui::AXNode::OwnerTree"* %22 to %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)***
  %26 = load %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)**, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*** %25, align 8
  %27 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)** %26, i64 2
  %28 = load %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)** %27, align 8
  %29 = tail call %"class.ui::AXNode"* %28(%"class.ui::AXNode::OwnerTree"* %22, i32 %24) #13
  br label %30

30:                                               ; preds = %8, %1, %12, %21
  %31 = phi %"class.ui::AXNode"* [ %29, %21 ], [ null, %12 ], [ null, %1 ], [ null, %8 ]
  ret %"class.ui::AXNode"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode22GetTableCellFromCoordsEii(%"class.ui::AXNode"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %4, label %50, label %5

5:                                                ; preds = %3, %10
  %6 = phi %"class.ui::AXNode"* [ %12, %10 ], [ %0, %3 ]
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %8) #13
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 5
  %12 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, align 8
  %13 = icmp eq %"class.ui::AXNode"* %12, null
  br i1 %13, label %50, label %5

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %16 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %15, align 8
  %17 = bitcast %"class.ui::AXNode::OwnerTree"* %16 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %18, i64 1
  %20 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %19, align 8
  %21 = tail call %"class.ui::AXTableInfo"* %20(%"class.ui::AXNode::OwnerTree"* %16, %"class.ui::AXNode"* nonnull %6) #13
  %22 = icmp eq %"class.ui::AXTableInfo"* %21, null
  %23 = icmp slt i32 %1, 0
  %24 = or i1 %23, %22
  br i1 %24, label %50, label %25

25:                                               ; preds = %14
  %26 = sext i32 %1 to i64
  %27 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %21, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ule i64 %28, %26
  %30 = icmp slt i32 %2, 0
  %31 = or i1 %30, %29
  br i1 %31, label %50, label %32

32:                                               ; preds = %25
  %33 = sext i32 %2 to i64
  %34 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %21, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %35, %33
  br i1 %36, label %37, label %50

37:                                               ; preds = %32
  %38 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %15, align 8
  %39 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %21, i64 0, i32 6, i32 0, i32 0
  %40 = load %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %40, i64 %26, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 %33
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %"class.ui::AXNode::OwnerTree"* %38 to %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)***
  %46 = load %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)**, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*** %45, align 8
  %47 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)** %46, i64 2
  %48 = load %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)** %47, align 8
  %49 = tail call %"class.ui::AXNode"* %48(%"class.ui::AXNode::OwnerTree"* %38, i32 %44) #13
  br label %50

50:                                               ; preds = %10, %3, %25, %32, %14, %37
  %51 = phi %"class.ui::AXNode"* [ %49, %37 ], [ null, %14 ], [ null, %32 ], [ null, %25 ], [ null, %3 ], [ null, %10 ]
  ret %"class.ui::AXNode"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode24GetTableColHeaderNodeIdsEv(%"class.std::__1::vector.56"* noalias nocapture sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.56", align 16
  %4 = alloca %"class.std::__1::vector.56", align 8
  %5 = icmp eq %"class.ui::AXNode"* %1, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2, %11
  %7 = phi %"class.ui::AXNode"* [ %13, %11 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %7, i64 0, i32 7, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %9) #13
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %7, i64 0, i32 5
  %13 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %12, align 8
  %14 = icmp eq %"class.ui::AXNode"* %13, null
  br i1 %14, label %24, label %6

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 1
  %17 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %16, align 8
  %18 = bitcast %"class.ui::AXNode::OwnerTree"* %17 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %19 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %19, i64 1
  %21 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %20, align 8
  %22 = tail call %"class.ui::AXTableInfo"* %21(%"class.ui::AXNode::OwnerTree"* %17, %"class.ui::AXNode"* nonnull %7) #13
  %23 = icmp eq %"class.ui::AXTableInfo"* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %11, %2, %15
  %25 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #13
  br label %100

26:                                               ; preds = %15
  %27 = bitcast %"class.std::__1::vector.56"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %3, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 0, i64 24, i1 false) #13
  %30 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %22, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"** %30, align 8
  %32 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %22, i64 0, i32 2, i32 0, i32 1
  %33 = load %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"** %32, align 8
  %34 = icmp eq %"class.std::__1::vector.56"* %31, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector.56"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %4, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %4, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast i32** %38 to i8**
  %41 = bitcast %"class.std::__1::vector.56"* %4 to i8**
  %42 = bitcast i32** %38 to i64*
  br label %54

43:                                               ; preds = %97
  %44 = bitcast %"class.std::__1::vector.56"* %3 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 16
  %46 = bitcast i32** %29 to i64*
  %47 = load i64, i64* %46, align 16
  br label %48

48:                                               ; preds = %43, %26
  %49 = phi i64 [ %47, %43 ], [ 0, %26 ]
  %50 = phi <2 x i64> [ %45, %43 ], [ zeroinitializer, %26 ]
  %51 = bitcast %"class.std::__1::vector.56"* %0 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast i32** %52 to i64*
  store i64 %49, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  br label %100

54:                                               ; preds = %35, %97
  %55 = phi %"class.std::__1::vector.56"* [ %31, %35 ], [ %98, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #13
  %56 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %55, i64 0, i32 0, i32 1
  %57 = bitcast i32** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.56"* %55 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = ashr exact i64 %61, 2
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %87, label %64

64:                                               ; preds = %54
  %65 = icmp ugt i64 %62, 4611686018427387903
  br i1 %65, label %66, label %68

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector.56"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %67) #15
  unreachable

68:                                               ; preds = %64
  %69 = call i8* @_Znwm(i64 %61) #14
  %70 = bitcast i8* %69 to i32*
  store i8* %69, i8** %40, align 8
  store i8* %69, i8** %41, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %62
  store i32* %71, i32** %39, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %55, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = load i64, i64* %57, align 8
  %75 = ptrtoint i8* %69 to i64
  %76 = ptrtoint i32* %73 to i64
  %77 = sub i64 %74, %76
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %68
  %80 = lshr exact i64 %77, 2
  %81 = bitcast i32* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %69, i8* align 4 %81, i64 %77, i1 false) #13
  %82 = getelementptr inbounds i32, i32* %70, i64 %80
  %83 = ptrtoint i32* %82 to i64
  br label %84

84:                                               ; preds = %79, %68
  %85 = phi i64 [ %83, %79 ], [ %75, %68 ]
  store i64 %85, i64* %42, align 8
  %86 = inttoptr i64 %85 to i32*
  br label %87

87:                                               ; preds = %54, %84
  %88 = phi i32* [ null, %54 ], [ %86, %84 ]
  %89 = phi i32* [ null, %54 ], [ %70, %84 ]
  %90 = load i32*, i32** %28, align 8
  %91 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPiEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKiEES9_S9_(%"class.std::__1::vector.56"* nonnull %3, i32* %90, i32* %89, i32* %88)
  %92 = load i32*, i32** %37, align 8
  %93 = icmp eq i32* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = ptrtoint i32* %92 to i64
  store i64 %95, i64* %42, align 8
  %96 = bitcast i32* %92 to i8*
  call void @_ZdlPv(i8* %96) #14
  br label %97

97:                                               ; preds = %87, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  %98 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %55, i64 1
  %99 = icmp eq %"class.std::__1::vector.56"* %98, %33
  br i1 %99, label %43, label %54

100:                                              ; preds = %48, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPiEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKiEES9_S9_(%"class.std::__1::vector.56"*, i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %1 to i8*
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint i32* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint i32* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 2
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %706

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = ptrtoint i32* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i32** %18 to i64*
  br i1 %23, label %339, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 2
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %196

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %2, i64 %27
  %31 = icmp eq i32* %30, %3
  br i1 %31, label %191, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr i32, i32* %3, i64 %33
  %35 = ptrtoint i32* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 2
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 8
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr i32, i32* %3, i64 %41
  %43 = ptrtoint i32* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 2
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr i32, i32* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add i64 %48, 1
  %50 = getelementptr i32, i32* %2, i64 %49
  %51 = icmp ult i32* %19, %50
  %52 = icmp ult i32* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 9223372036854775800
  %56 = getelementptr i32, i32* %19, i64 %55
  %57 = getelementptr i32, i32* %30, i64 %55
  %58 = add nsw i64 %55, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %19, i64 %66
  %69 = getelementptr i32, i32* %30, i64 %66
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !46
  %72 = getelementptr i32, i32* %69, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !46
  %75 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !49, !noalias !46
  %76 = getelementptr i32, i32* %68, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !49, !noalias !46
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %19, i64 %78
  %80 = getelementptr i32, i32* %30, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !46
  %83 = getelementptr i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !46
  %86 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !49, !noalias !46
  %87 = getelementptr i32, i32* %79, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !49, !noalias !46
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %19, i64 %89
  %91 = getelementptr i32, i32* %30, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !46
  %94 = getelementptr i32, i32* %91, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !46
  %97 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !49, !noalias !46
  %98 = getelementptr i32, i32* %90, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !49, !noalias !46
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %19, i64 %100
  %102 = getelementptr i32, i32* %30, i64 %100
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !46
  %105 = getelementptr i32, i32* %102, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !46
  %108 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !49, !noalias !46
  %109 = getelementptr i32, i32* %101, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !49, !noalias !46
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !51

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %19, i64 %118
  %121 = getelementptr i32, i32* %30, i64 %118
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !46
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !46
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !49, !noalias !46
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !49, !noalias !46
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !52

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi i32* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi i32* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint i32* %137 to i64
  %139 = getelementptr i32, i32* %3, i64 -1
  %140 = ptrtoint i32* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 2
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %135, %146
  %147 = phi i32* [ %152, %146 ], [ %136, %135 ]
  %148 = phi i32* [ %151, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %153, %146 ], [ %144, %135 ]
  %150 = load i32, i32* %148, align 4
  store i32 %150, i32* %147, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 1
  %152 = getelementptr inbounds i32, i32* %147, i64 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %146, !llvm.loop !53

155:                                              ; preds = %146, %135
  %156 = phi i32* [ undef, %135 ], [ %152, %146 ]
  %157 = phi i32* [ %136, %135 ], [ %152, %146 ]
  %158 = phi i32* [ %137, %135 ], [ %151, %146 ]
  %159 = icmp ult i64 %141, 28
  br i1 %159, label %188, label %160

160:                                              ; preds = %155, %160
  %161 = phi i32* [ %186, %160 ], [ %157, %155 ]
  %162 = phi i32* [ %185, %160 ], [ %158, %155 ]
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds i32, i32* %162, i64 1
  %165 = getelementptr inbounds i32, i32* %161, i64 1
  %166 = load i32, i32* %164, align 4
  store i32 %166, i32* %165, align 4
  %167 = getelementptr inbounds i32, i32* %162, i64 2
  %168 = getelementptr inbounds i32, i32* %161, i64 2
  %169 = load i32, i32* %167, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %162, i64 3
  %171 = getelementptr inbounds i32, i32* %161, i64 3
  %172 = load i32, i32* %170, align 4
  store i32 %172, i32* %171, align 4
  %173 = getelementptr inbounds i32, i32* %162, i64 4
  %174 = getelementptr inbounds i32, i32* %161, i64 4
  %175 = load i32, i32* %173, align 4
  store i32 %175, i32* %174, align 4
  %176 = getelementptr inbounds i32, i32* %162, i64 5
  %177 = getelementptr inbounds i32, i32* %161, i64 5
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %177, align 4
  %179 = getelementptr inbounds i32, i32* %162, i64 6
  %180 = getelementptr inbounds i32, i32* %161, i64 6
  %181 = load i32, i32* %179, align 4
  store i32 %181, i32* %180, align 4
  %182 = getelementptr inbounds i32, i32* %162, i64 7
  %183 = getelementptr inbounds i32, i32* %161, i64 7
  %184 = load i32, i32* %182, align 4
  store i32 %184, i32* %183, align 4
  %185 = getelementptr inbounds i32, i32* %162, i64 8
  %186 = getelementptr inbounds i32, i32* %161, i64 8
  %187 = icmp eq i32* %185, %3
  br i1 %187, label %188, label %160, !llvm.loop !54

188:                                              ; preds = %155, %160, %133
  %189 = phi i32* [ %56, %133 ], [ %156, %155 ], [ %186, %160 ]
  %190 = ptrtoint i32* %189 to i64
  br label %191

191:                                              ; preds = %188, %29
  %192 = phi i64 [ %20, %29 ], [ %190, %188 ]
  store i64 %192, i64* %24, align 8
  %193 = icmp sgt i64 %26, 0
  br i1 %193, label %194, label %706

194:                                              ; preds = %191
  %195 = inttoptr i64 %192 to i32*
  br label %196

196:                                              ; preds = %194, %25
  %197 = phi i64 [ %192, %194 ], [ %20, %25 ]
  %198 = phi i32* [ %195, %194 ], [ %19, %25 ]
  %199 = phi i32* [ %30, %194 ], [ %3, %25 ]
  %200 = getelementptr inbounds i32, i32* %1, i64 %12
  %201 = ptrtoint i32* %200 to i64
  %202 = sub i64 %197, %201
  %203 = ashr exact i64 %202, 2
  %204 = getelementptr inbounds i32, i32* %1, i64 %203
  %205 = icmp ult i32* %204, %19
  br i1 %205, label %206, label %319

206:                                              ; preds = %196
  %207 = sub nsw i64 0, %203
  %208 = getelementptr i32, i32* %19, i64 %207
  %209 = bitcast i32* %208 to i8*
  %210 = xor i64 %7, -1
  %211 = getelementptr i8, i8* %209, i64 %210
  %212 = ptrtoint i8* %211 to i64
  %213 = lshr i64 %212, 2
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i64 %214, 8
  br i1 %215, label %216, label %219

216:                                              ; preds = %314, %219, %206
  %217 = phi i32* [ %198, %219 ], [ %198, %206 ], [ %237, %314 ]
  %218 = phi i32* [ %204, %219 ], [ %204, %206 ], [ %238, %314 ]
  br label %327

219:                                              ; preds = %206
  %220 = sub nsw i64 0, %203
  %221 = getelementptr i32, i32* %19, i64 %220
  %222 = bitcast i32* %221 to i8*
  %223 = xor i64 %7, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = lshr i64 %225, 2
  %227 = add nuw nsw i64 %226, 1
  %228 = getelementptr i32, i32* %198, i64 %227
  %229 = add nsw i64 %203, %226
  %230 = add i64 %229, 1
  %231 = getelementptr i32, i32* %1, i64 %230
  %232 = icmp ult i32* %198, %231
  %233 = icmp ult i32* %204, %228
  %234 = and i1 %232, %233
  br i1 %234, label %216, label %235

235:                                              ; preds = %219
  %236 = and i64 %214, 9223372036854775800
  %237 = getelementptr i32, i32* %198, i64 %236
  %238 = getelementptr i32, i32* %204, i64 %236
  %239 = add nsw i64 %236, -8
  %240 = lshr exact i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 24
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = getelementptr i32, i32* %204, i64 %247
  %251 = bitcast i32* %250 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !55
  %253 = getelementptr i32, i32* %250, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !55
  %256 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !58, !noalias !55
  %257 = getelementptr i32, i32* %249, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !58, !noalias !55
  %259 = or i64 %247, 8
  %260 = getelementptr i32, i32* %198, i64 %259
  %261 = getelementptr i32, i32* %204, i64 %259
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !55
  %264 = getelementptr i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !55
  %267 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !58, !noalias !55
  %268 = getelementptr i32, i32* %260, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !58, !noalias !55
  %270 = or i64 %247, 16
  %271 = getelementptr i32, i32* %198, i64 %270
  %272 = getelementptr i32, i32* %204, i64 %270
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !55
  %275 = getelementptr i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !55
  %278 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %278, align 4, !alias.scope !58, !noalias !55
  %279 = getelementptr i32, i32* %271, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %280, align 4, !alias.scope !58, !noalias !55
  %281 = or i64 %247, 24
  %282 = getelementptr i32, i32* %198, i64 %281
  %283 = getelementptr i32, i32* %204, i64 %281
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !55
  %286 = getelementptr i32, i32* %283, i64 4
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !55
  %289 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %289, align 4, !alias.scope !58, !noalias !55
  %290 = getelementptr i32, i32* %282, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %291, align 4, !alias.scope !58, !noalias !55
  %292 = add i64 %247, 32
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !60

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i32, i32* %198, i64 %299
  %302 = getelementptr i32, i32* %204, i64 %299
  %303 = bitcast i32* %302 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4, !alias.scope !55
  %305 = getelementptr i32, i32* %302, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 4, !alias.scope !55
  %308 = bitcast i32* %301 to <4 x i32>*
  store <4 x i32> %304, <4 x i32>* %308, align 4, !alias.scope !58, !noalias !55
  %309 = getelementptr i32, i32* %301, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %307, <4 x i32>* %310, align 4, !alias.scope !58, !noalias !55
  %311 = add i64 %299, 8
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !61

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %214, %236
  br i1 %315, label %316, label %216

316:                                              ; preds = %327, %314
  %317 = phi i32* [ %237, %314 ], [ %332, %327 ]
  %318 = ptrtoint i32* %317 to i64
  br label %319

319:                                              ; preds = %316, %196
  %320 = phi i64 [ %318, %316 ], [ %197, %196 ]
  store i64 %320, i64* %24, align 8
  %321 = icmp eq i64 %202, 0
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  %323 = sub nsw i64 0, %203
  %324 = getelementptr inbounds i32, i32* %198, i64 %323
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %202, i1 false) #13
  br label %334

327:                                              ; preds = %216, %327
  %328 = phi i32* [ %332, %327 ], [ %217, %216 ]
  %329 = phi i32* [ %331, %327 ], [ %218, %216 ]
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %329, i64 1
  %332 = getelementptr inbounds i32, i32* %328, i64 1
  %333 = icmp ult i32* %331, %19
  br i1 %333, label %327, label %316, !llvm.loop !62

334:                                              ; preds = %319, %322
  %335 = ptrtoint i32* %199 to i64
  %336 = sub i64 %335, %8
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %706, label %338

338:                                              ; preds = %334
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %5, i64 %336, i1 false) #13
  br label %706

339:                                              ; preds = %14
  %340 = bitcast %"class.std::__1::vector.56"* %0 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %20, %341
  %343 = ashr exact i64 %342, 2
  %344 = add nsw i64 %343, %12
  %345 = icmp ugt i64 %344, 4611686018427387903
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %347) #15
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %17, %341
  %350 = ashr exact i64 %349, 2
  %351 = icmp ult i64 %350, 2305843009213693951
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = sub i64 %7, %341
  %354 = ashr exact i64 %353, 2
  br label %365

355:                                              ; preds = %348
  %356 = ashr exact i64 %349, 1
  %357 = icmp ult i64 %356, %344
  %358 = select i1 %357, i64 %344, i64 %356
  %359 = sub i64 %7, %341
  %360 = ashr exact i64 %359, 2
  %361 = icmp eq i64 %358, 0
  br i1 %361, label %371, label %362

362:                                              ; preds = %355
  %363 = icmp ugt i64 %358, 4611686018427387903
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  tail call void @abort() #15
  unreachable

365:                                              ; preds = %352, %362
  %366 = phi i64 [ 4611686018427387903, %352 ], [ %358, %362 ]
  %367 = phi i64 [ %354, %352 ], [ %360, %362 ]
  %368 = shl i64 %366, 2
  %369 = tail call i8* @_Znwm(i64 %368) #14
  %370 = bitcast i8* %369 to i32*
  br label %371

371:                                              ; preds = %365, %355
  %372 = phi i64 [ %367, %365 ], [ %360, %355 ]
  %373 = phi i64 [ %366, %365 ], [ 0, %355 ]
  %374 = phi i32* [ %370, %365 ], [ null, %355 ]
  %375 = getelementptr inbounds i32, i32* %374, i64 %372
  %376 = getelementptr inbounds i32, i32* %374, i64 %373
  %377 = ptrtoint i32* %376 to i64
  %378 = getelementptr inbounds i32, i32* %375, i64 %12
  %379 = add i64 %11, -4
  %380 = lshr i64 %379, 2
  %381 = add nuw nsw i64 %380, 1
  %382 = icmp ult i64 %381, 8
  br i1 %382, label %475, label %383

383:                                              ; preds = %371
  %384 = add i64 %11, -4
  %385 = lshr i64 %384, 2
  %386 = add nsw i64 %372, %385
  %387 = add i64 %386, 1
  %388 = getelementptr i32, i32* %374, i64 %387
  %389 = add nuw nsw i64 %385, 1
  %390 = getelementptr i32, i32* %2, i64 %389
  %391 = icmp ult i32* %375, %390
  %392 = icmp ugt i32* %388, %2
  %393 = and i1 %391, %392
  br i1 %393, label %475, label %394

394:                                              ; preds = %383
  %395 = and i64 %381, 9223372036854775800
  %396 = getelementptr i32, i32* %375, i64 %395
  %397 = getelementptr i32, i32* %2, i64 %395
  %398 = add nsw i64 %395, -8
  %399 = lshr exact i64 %398, 3
  %400 = add nuw nsw i64 %399, 1
  %401 = and i64 %400, 3
  %402 = icmp ult i64 %398, 24
  br i1 %402, label %454, label %403

403:                                              ; preds = %394
  %404 = sub nsw i64 %400, %401
  br label %405

405:                                              ; preds = %405, %403
  %406 = phi i64 [ 0, %403 ], [ %451, %405 ]
  %407 = phi i64 [ %404, %403 ], [ %452, %405 ]
  %408 = getelementptr i32, i32* %375, i64 %406
  %409 = getelementptr i32, i32* %2, i64 %406
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4, !alias.scope !63
  %412 = getelementptr i32, i32* %409, i64 4
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4, !alias.scope !63
  %415 = bitcast i32* %408 to <4 x i32>*
  store <4 x i32> %411, <4 x i32>* %415, align 4, !alias.scope !66, !noalias !63
  %416 = getelementptr i32, i32* %408, i64 4
  %417 = bitcast i32* %416 to <4 x i32>*
  store <4 x i32> %414, <4 x i32>* %417, align 4, !alias.scope !66, !noalias !63
  %418 = or i64 %406, 8
  %419 = getelementptr i32, i32* %375, i64 %418
  %420 = getelementptr i32, i32* %2, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4, !alias.scope !63
  %423 = getelementptr i32, i32* %420, i64 4
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4, !alias.scope !63
  %426 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %422, <4 x i32>* %426, align 4, !alias.scope !66, !noalias !63
  %427 = getelementptr i32, i32* %419, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> %425, <4 x i32>* %428, align 4, !alias.scope !66, !noalias !63
  %429 = or i64 %406, 16
  %430 = getelementptr i32, i32* %375, i64 %429
  %431 = getelementptr i32, i32* %2, i64 %429
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4, !alias.scope !63
  %434 = getelementptr i32, i32* %431, i64 4
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4, !alias.scope !63
  %437 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> %433, <4 x i32>* %437, align 4, !alias.scope !66, !noalias !63
  %438 = getelementptr i32, i32* %430, i64 4
  %439 = bitcast i32* %438 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %439, align 4, !alias.scope !66, !noalias !63
  %440 = or i64 %406, 24
  %441 = getelementptr i32, i32* %375, i64 %440
  %442 = getelementptr i32, i32* %2, i64 %440
  %443 = bitcast i32* %442 to <4 x i32>*
  %444 = load <4 x i32>, <4 x i32>* %443, align 4, !alias.scope !63
  %445 = getelementptr i32, i32* %442, i64 4
  %446 = bitcast i32* %445 to <4 x i32>*
  %447 = load <4 x i32>, <4 x i32>* %446, align 4, !alias.scope !63
  %448 = bitcast i32* %441 to <4 x i32>*
  store <4 x i32> %444, <4 x i32>* %448, align 4, !alias.scope !66, !noalias !63
  %449 = getelementptr i32, i32* %441, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  store <4 x i32> %447, <4 x i32>* %450, align 4, !alias.scope !66, !noalias !63
  %451 = add i64 %406, 32
  %452 = add i64 %407, -4
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %405, !llvm.loop !68

454:                                              ; preds = %405, %394
  %455 = phi i64 [ 0, %394 ], [ %451, %405 ]
  %456 = icmp eq i64 %401, 0
  br i1 %456, label %473, label %457

457:                                              ; preds = %454, %457
  %458 = phi i64 [ %470, %457 ], [ %455, %454 ]
  %459 = phi i64 [ %471, %457 ], [ %401, %454 ]
  %460 = getelementptr i32, i32* %375, i64 %458
  %461 = getelementptr i32, i32* %2, i64 %458
  %462 = bitcast i32* %461 to <4 x i32>*
  %463 = load <4 x i32>, <4 x i32>* %462, align 4, !alias.scope !63
  %464 = getelementptr i32, i32* %461, i64 4
  %465 = bitcast i32* %464 to <4 x i32>*
  %466 = load <4 x i32>, <4 x i32>* %465, align 4, !alias.scope !63
  %467 = bitcast i32* %460 to <4 x i32>*
  store <4 x i32> %463, <4 x i32>* %467, align 4, !alias.scope !66, !noalias !63
  %468 = getelementptr i32, i32* %460, i64 4
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %469, align 4, !alias.scope !66, !noalias !63
  %470 = add i64 %458, 8
  %471 = add i64 %459, -1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %457, !llvm.loop !69

473:                                              ; preds = %457, %454
  %474 = icmp eq i64 %381, %395
  br i1 %474, label %529, label %475

475:                                              ; preds = %473, %383, %371
  %476 = phi i32* [ %375, %383 ], [ %375, %371 ], [ %396, %473 ]
  %477 = phi i32* [ %2, %383 ], [ %2, %371 ], [ %397, %473 ]
  %478 = ptrtoint i32* %476 to i64
  %479 = add nsw i64 %372, %12
  %480 = add nsw i64 %479, -1
  %481 = getelementptr i32, i32* %374, i64 %480
  %482 = ptrtoint i32* %481 to i64
  %483 = sub i64 %482, %478
  %484 = lshr i64 %483, 2
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 7
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %497, label %488

488:                                              ; preds = %475, %488
  %489 = phi i32* [ %493, %488 ], [ %476, %475 ]
  %490 = phi i32* [ %494, %488 ], [ %477, %475 ]
  %491 = phi i64 [ %495, %488 ], [ %486, %475 ]
  %492 = load i32, i32* %490, align 4
  store i32 %492, i32* %489, align 4
  %493 = getelementptr inbounds i32, i32* %489, i64 1
  %494 = getelementptr inbounds i32, i32* %490, i64 1
  %495 = add i64 %491, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %488, !llvm.loop !70

497:                                              ; preds = %488, %475
  %498 = phi i32* [ %476, %475 ], [ %493, %488 ]
  %499 = phi i32* [ %477, %475 ], [ %494, %488 ]
  %500 = icmp ult i64 %483, 28
  br i1 %500, label %529, label %501

501:                                              ; preds = %497, %501
  %502 = phi i32* [ %526, %501 ], [ %498, %497 ]
  %503 = phi i32* [ %527, %501 ], [ %499, %497 ]
  %504 = load i32, i32* %503, align 4
  store i32 %504, i32* %502, align 4
  %505 = getelementptr inbounds i32, i32* %502, i64 1
  %506 = getelementptr inbounds i32, i32* %503, i64 1
  %507 = load i32, i32* %506, align 4
  store i32 %507, i32* %505, align 4
  %508 = getelementptr inbounds i32, i32* %502, i64 2
  %509 = getelementptr inbounds i32, i32* %503, i64 2
  %510 = load i32, i32* %509, align 4
  store i32 %510, i32* %508, align 4
  %511 = getelementptr inbounds i32, i32* %502, i64 3
  %512 = getelementptr inbounds i32, i32* %503, i64 3
  %513 = load i32, i32* %512, align 4
  store i32 %513, i32* %511, align 4
  %514 = getelementptr inbounds i32, i32* %502, i64 4
  %515 = getelementptr inbounds i32, i32* %503, i64 4
  %516 = load i32, i32* %515, align 4
  store i32 %516, i32* %514, align 4
  %517 = getelementptr inbounds i32, i32* %502, i64 5
  %518 = getelementptr inbounds i32, i32* %503, i64 5
  %519 = load i32, i32* %518, align 4
  store i32 %519, i32* %517, align 4
  %520 = getelementptr inbounds i32, i32* %502, i64 6
  %521 = getelementptr inbounds i32, i32* %503, i64 6
  %522 = load i32, i32* %521, align 4
  store i32 %522, i32* %520, align 4
  %523 = getelementptr inbounds i32, i32* %502, i64 7
  %524 = getelementptr inbounds i32, i32* %503, i64 7
  %525 = load i32, i32* %524, align 4
  store i32 %525, i32* %523, align 4
  %526 = getelementptr inbounds i32, i32* %502, i64 8
  %527 = getelementptr inbounds i32, i32* %503, i64 8
  %528 = icmp eq i32* %378, %526
  br i1 %528, label %529, label %501, !llvm.loop !71

529:                                              ; preds = %497, %501, %473
  %530 = load i32*, i32** %9, align 8
  %531 = ptrtoint i32* %530 to i64
  %532 = sub i64 %7, %531
  %533 = ashr exact i64 %532, 2
  %534 = sub nsw i64 0, %533
  %535 = getelementptr inbounds i32, i32* %375, i64 %534
  %536 = ptrtoint i32* %535 to i64
  %537 = icmp sgt i64 %532, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %529
  %539 = bitcast i32* %535 to i8*
  %540 = bitcast i32* %530 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %539, i8* align 4 %540, i64 %532, i1 false) #13
  br label %541

541:                                              ; preds = %538, %529
  %542 = load i32*, i32** %18, align 8
  %543 = icmp eq i32* %542, %1
  br i1 %543, label %699, label %544

544:                                              ; preds = %541
  %545 = getelementptr i32, i32* %542, i64 -1
  %546 = ptrtoint i32* %545 to i64
  %547 = sub i64 %546, %7
  %548 = lshr i64 %547, 2
  %549 = add nuw nsw i64 %548, 1
  %550 = icmp ult i64 %549, 8
  br i1 %550, label %646, label %551

551:                                              ; preds = %544
  %552 = add nsw i64 %372, %12
  %553 = getelementptr i32, i32* %542, i64 -1
  %554 = ptrtoint i32* %553 to i64
  %555 = sub i64 %554, %7
  %556 = lshr i64 %555, 2
  %557 = add nsw i64 %552, %556
  %558 = add i64 %557, 1
  %559 = getelementptr i32, i32* %374, i64 %558
  %560 = add nuw nsw i64 %556, 1
  %561 = getelementptr i32, i32* %1, i64 %560
  %562 = icmp ult i32* %378, %561
  %563 = icmp ugt i32* %559, %1
  %564 = and i1 %562, %563
  br i1 %564, label %646, label %565

565:                                              ; preds = %551
  %566 = and i64 %549, 9223372036854775800
  %567 = getelementptr i32, i32* %378, i64 %566
  %568 = getelementptr i32, i32* %1, i64 %566
  %569 = add nsw i64 %566, -8
  %570 = lshr exact i64 %569, 3
  %571 = add nuw nsw i64 %570, 1
  %572 = and i64 %571, 3
  %573 = icmp ult i64 %569, 24
  br i1 %573, label %625, label %574

574:                                              ; preds = %565
  %575 = sub nsw i64 %571, %572
  br label %576

576:                                              ; preds = %576, %574
  %577 = phi i64 [ 0, %574 ], [ %622, %576 ]
  %578 = phi i64 [ %575, %574 ], [ %623, %576 ]
  %579 = getelementptr i32, i32* %378, i64 %577
  %580 = getelementptr i32, i32* %1, i64 %577
  %581 = bitcast i32* %580 to <4 x i32>*
  %582 = load <4 x i32>, <4 x i32>* %581, align 4, !alias.scope !72
  %583 = getelementptr i32, i32* %580, i64 4
  %584 = bitcast i32* %583 to <4 x i32>*
  %585 = load <4 x i32>, <4 x i32>* %584, align 4, !alias.scope !72
  %586 = bitcast i32* %579 to <4 x i32>*
  store <4 x i32> %582, <4 x i32>* %586, align 4, !alias.scope !75, !noalias !72
  %587 = getelementptr i32, i32* %579, i64 4
  %588 = bitcast i32* %587 to <4 x i32>*
  store <4 x i32> %585, <4 x i32>* %588, align 4, !alias.scope !75, !noalias !72
  %589 = or i64 %577, 8
  %590 = getelementptr i32, i32* %378, i64 %589
  %591 = getelementptr i32, i32* %1, i64 %589
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4, !alias.scope !72
  %594 = getelementptr i32, i32* %591, i64 4
  %595 = bitcast i32* %594 to <4 x i32>*
  %596 = load <4 x i32>, <4 x i32>* %595, align 4, !alias.scope !72
  %597 = bitcast i32* %590 to <4 x i32>*
  store <4 x i32> %593, <4 x i32>* %597, align 4, !alias.scope !75, !noalias !72
  %598 = getelementptr i32, i32* %590, i64 4
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> %596, <4 x i32>* %599, align 4, !alias.scope !75, !noalias !72
  %600 = or i64 %577, 16
  %601 = getelementptr i32, i32* %378, i64 %600
  %602 = getelementptr i32, i32* %1, i64 %600
  %603 = bitcast i32* %602 to <4 x i32>*
  %604 = load <4 x i32>, <4 x i32>* %603, align 4, !alias.scope !72
  %605 = getelementptr i32, i32* %602, i64 4
  %606 = bitcast i32* %605 to <4 x i32>*
  %607 = load <4 x i32>, <4 x i32>* %606, align 4, !alias.scope !72
  %608 = bitcast i32* %601 to <4 x i32>*
  store <4 x i32> %604, <4 x i32>* %608, align 4, !alias.scope !75, !noalias !72
  %609 = getelementptr i32, i32* %601, i64 4
  %610 = bitcast i32* %609 to <4 x i32>*
  store <4 x i32> %607, <4 x i32>* %610, align 4, !alias.scope !75, !noalias !72
  %611 = or i64 %577, 24
  %612 = getelementptr i32, i32* %378, i64 %611
  %613 = getelementptr i32, i32* %1, i64 %611
  %614 = bitcast i32* %613 to <4 x i32>*
  %615 = load <4 x i32>, <4 x i32>* %614, align 4, !alias.scope !72
  %616 = getelementptr i32, i32* %613, i64 4
  %617 = bitcast i32* %616 to <4 x i32>*
  %618 = load <4 x i32>, <4 x i32>* %617, align 4, !alias.scope !72
  %619 = bitcast i32* %612 to <4 x i32>*
  store <4 x i32> %615, <4 x i32>* %619, align 4, !alias.scope !75, !noalias !72
  %620 = getelementptr i32, i32* %612, i64 4
  %621 = bitcast i32* %620 to <4 x i32>*
  store <4 x i32> %618, <4 x i32>* %621, align 4, !alias.scope !75, !noalias !72
  %622 = add i64 %577, 32
  %623 = add i64 %578, -4
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %576, !llvm.loop !77

625:                                              ; preds = %576, %565
  %626 = phi i64 [ 0, %565 ], [ %622, %576 ]
  %627 = icmp eq i64 %572, 0
  br i1 %627, label %644, label %628

628:                                              ; preds = %625, %628
  %629 = phi i64 [ %641, %628 ], [ %626, %625 ]
  %630 = phi i64 [ %642, %628 ], [ %572, %625 ]
  %631 = getelementptr i32, i32* %378, i64 %629
  %632 = getelementptr i32, i32* %1, i64 %629
  %633 = bitcast i32* %632 to <4 x i32>*
  %634 = load <4 x i32>, <4 x i32>* %633, align 4, !alias.scope !72
  %635 = getelementptr i32, i32* %632, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  %637 = load <4 x i32>, <4 x i32>* %636, align 4, !alias.scope !72
  %638 = bitcast i32* %631 to <4 x i32>*
  store <4 x i32> %634, <4 x i32>* %638, align 4, !alias.scope !75, !noalias !72
  %639 = getelementptr i32, i32* %631, i64 4
  %640 = bitcast i32* %639 to <4 x i32>*
  store <4 x i32> %637, <4 x i32>* %640, align 4, !alias.scope !75, !noalias !72
  %641 = add i64 %629, 8
  %642 = add i64 %630, -1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %628, !llvm.loop !78

644:                                              ; preds = %628, %625
  %645 = icmp eq i64 %549, %566
  br i1 %645, label %699, label %646

646:                                              ; preds = %644, %551, %544
  %647 = phi i32* [ %378, %551 ], [ %378, %544 ], [ %567, %644 ]
  %648 = phi i32* [ %1, %551 ], [ %1, %544 ], [ %568, %644 ]
  %649 = ptrtoint i32* %648 to i64
  %650 = getelementptr i32, i32* %542, i64 -1
  %651 = ptrtoint i32* %650 to i64
  %652 = sub i64 %651, %649
  %653 = lshr i64 %652, 2
  %654 = add nuw nsw i64 %653, 1
  %655 = and i64 %654, 7
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %666, label %657

657:                                              ; preds = %646, %657
  %658 = phi i32* [ %663, %657 ], [ %647, %646 ]
  %659 = phi i32* [ %662, %657 ], [ %648, %646 ]
  %660 = phi i64 [ %664, %657 ], [ %655, %646 ]
  %661 = load i32, i32* %659, align 4
  store i32 %661, i32* %658, align 4
  %662 = getelementptr inbounds i32, i32* %659, i64 1
  %663 = getelementptr inbounds i32, i32* %658, i64 1
  %664 = add i64 %660, -1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %657, !llvm.loop !79

666:                                              ; preds = %657, %646
  %667 = phi i32* [ undef, %646 ], [ %663, %657 ]
  %668 = phi i32* [ %647, %646 ], [ %663, %657 ]
  %669 = phi i32* [ %648, %646 ], [ %662, %657 ]
  %670 = icmp ult i64 %652, 28
  br i1 %670, label %699, label %671

671:                                              ; preds = %666, %671
  %672 = phi i32* [ %697, %671 ], [ %668, %666 ]
  %673 = phi i32* [ %696, %671 ], [ %669, %666 ]
  %674 = load i32, i32* %673, align 4
  store i32 %674, i32* %672, align 4
  %675 = getelementptr inbounds i32, i32* %673, i64 1
  %676 = getelementptr inbounds i32, i32* %672, i64 1
  %677 = load i32, i32* %675, align 4
  store i32 %677, i32* %676, align 4
  %678 = getelementptr inbounds i32, i32* %673, i64 2
  %679 = getelementptr inbounds i32, i32* %672, i64 2
  %680 = load i32, i32* %678, align 4
  store i32 %680, i32* %679, align 4
  %681 = getelementptr inbounds i32, i32* %673, i64 3
  %682 = getelementptr inbounds i32, i32* %672, i64 3
  %683 = load i32, i32* %681, align 4
  store i32 %683, i32* %682, align 4
  %684 = getelementptr inbounds i32, i32* %673, i64 4
  %685 = getelementptr inbounds i32, i32* %672, i64 4
  %686 = load i32, i32* %684, align 4
  store i32 %686, i32* %685, align 4
  %687 = getelementptr inbounds i32, i32* %673, i64 5
  %688 = getelementptr inbounds i32, i32* %672, i64 5
  %689 = load i32, i32* %687, align 4
  store i32 %689, i32* %688, align 4
  %690 = getelementptr inbounds i32, i32* %673, i64 6
  %691 = getelementptr inbounds i32, i32* %672, i64 6
  %692 = load i32, i32* %690, align 4
  store i32 %692, i32* %691, align 4
  %693 = getelementptr inbounds i32, i32* %673, i64 7
  %694 = getelementptr inbounds i32, i32* %672, i64 7
  %695 = load i32, i32* %693, align 4
  store i32 %695, i32* %694, align 4
  %696 = getelementptr inbounds i32, i32* %673, i64 8
  %697 = getelementptr inbounds i32, i32* %672, i64 8
  %698 = icmp eq i32* %696, %542
  br i1 %698, label %699, label %671, !llvm.loop !80

699:                                              ; preds = %666, %671, %644, %541
  %700 = phi i32* [ %378, %541 ], [ %567, %644 ], [ %667, %666 ], [ %697, %671 ]
  %701 = ptrtoint i32* %700 to i64
  %702 = load i32*, i32** %9, align 8
  store i64 %536, i64* %340, align 8
  store i64 %701, i64* %24, align 8
  store i64 %377, i64* %16, align 8
  %703 = icmp eq i32* %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = bitcast i32* %702 to i8*
  tail call void @_ZdlPv(i8* %705) #14
  br label %706

706:                                              ; preds = %704, %699, %191, %334, %338, %4
  %707 = phi i32* [ %1, %4 ], [ %1, %338 ], [ %1, %334 ], [ %1, %191 ], [ %375, %699 ], [ %375, %704 ]
  ret i32* %707
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode24GetTableColHeaderNodeIdsEi(%"class.std::__1::vector.56"* noalias sret, %"class.ui::AXNode"*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.ui::AXNode"* %1, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %3, %10
  %6 = phi %"class.ui::AXNode"* [ %12, %10 ], [ %1, %3 ]
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %8) #13
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 5
  %12 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, align 8
  %13 = icmp eq %"class.ui::AXNode"* %12, null
  br i1 %13, label %23, label %5

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 1
  %16 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %15, align 8
  %17 = bitcast %"class.ui::AXNode::OwnerTree"* %16 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %18, i64 1
  %20 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %19, align 8
  %21 = tail call %"class.ui::AXTableInfo"* %20(%"class.ui::AXNode::OwnerTree"* %16, %"class.ui::AXNode"* nonnull %6) #13
  %22 = icmp eq %"class.ui::AXTableInfo"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %10, %3, %14
  %24 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #13
  br label %74

25:                                               ; preds = %14
  %26 = icmp slt i32 %2, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = sext i32 %2 to i64
  %29 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %21, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %28
  br i1 %31, label %34, label %32

32:                                               ; preds = %27, %25
  %33 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #13
  br label %74

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %21, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %36, i64 %28
  %38 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %36, i64 %28, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.56"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %34
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #15
  unreachable

51:                                               ; preds = %47
  %52 = tail call i8* @_Znwm(i64 %44) #14
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %55 = bitcast i32** %54 to i8**
  store i8* %52, i8** %55, align 8
  %56 = bitcast %"class.std::__1::vector.56"* %0 to i8**
  store i8* %52, i8** %56, align 8
  %57 = getelementptr inbounds i32, i32* %53, i64 %45
  %58 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %57, i32** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %37, i64 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = load i64, i64* %40, align 8
  %62 = bitcast i32** %54 to i64*
  %63 = ptrtoint i8* %52 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = sub i64 %61, %64
  %66 = icmp sgt i64 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %51
  %68 = lshr exact i64 %65, 2
  %69 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %69, i64 %65, i1 false) #13
  %70 = getelementptr inbounds i32, i32* %53, i64 %68
  %71 = ptrtoint i32* %70 to i64
  br label %72

72:                                               ; preds = %67, %51
  %73 = phi i64 [ %71, %67 ], [ %63, %51 ]
  store i64 %73, i64* %62, align 8
  br label %74

74:                                               ; preds = %72, %34, %32, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode24GetTableRowHeaderNodeIdsEi(%"class.std::__1::vector.56"* noalias sret, %"class.ui::AXNode"*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.ui::AXNode"* %1, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %3, %10
  %6 = phi %"class.ui::AXNode"* [ %12, %10 ], [ %1, %3 ]
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %8) #13
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 5
  %12 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %11, align 8
  %13 = icmp eq %"class.ui::AXNode"* %12, null
  br i1 %13, label %23, label %5

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 1
  %16 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %15, align 8
  %17 = bitcast %"class.ui::AXNode::OwnerTree"* %16 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %18, i64 1
  %20 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %19, align 8
  %21 = tail call %"class.ui::AXTableInfo"* %20(%"class.ui::AXNode::OwnerTree"* %16, %"class.ui::AXNode"* nonnull %6) #13
  %22 = icmp eq %"class.ui::AXTableInfo"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %10, %3, %14
  %24 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #13
  br label %74

25:                                               ; preds = %14
  %26 = icmp slt i32 %2, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = sext i32 %2 to i64
  %29 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %21, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %28
  br i1 %31, label %34, label %32

32:                                               ; preds = %27, %25
  %33 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #13
  br label %74

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %21, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %36, i64 %28
  %38 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %36, i64 %28, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.56"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %34
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #15
  unreachable

51:                                               ; preds = %47
  %52 = tail call i8* @_Znwm(i64 %44) #14
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %55 = bitcast i32** %54 to i8**
  store i8* %52, i8** %55, align 8
  %56 = bitcast %"class.std::__1::vector.56"* %0 to i8**
  store i8* %52, i8** %56, align 8
  %57 = getelementptr inbounds i32, i32* %53, i64 %45
  %58 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %57, i32** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %37, i64 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = load i64, i64* %40, align 8
  %62 = bitcast i32** %54 to i64*
  %63 = ptrtoint i8* %52 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = sub i64 %61, %64
  %66 = icmp sgt i64 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %51
  %68 = lshr exact i64 %65, 2
  %69 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %69, i64 %65, i1 false) #13
  %70 = getelementptr inbounds i32, i32* %53, i64 %68
  %71 = ptrtoint i32* %70 to i64
  br label %72

72:                                               ; preds = %67, %51
  %73 = phi i64 [ %71, %67 ], [ %63, %51 ]
  store i64 %73, i64* %62, align 8
  br label %74

74:                                               ; preds = %72, %34, %32, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode21GetTableUniqueCellIdsEv(%"class.std::__1::vector.56"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.ui::AXNode"* %1, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2, %9
  %5 = phi %"class.ui::AXNode"* [ %11, %9 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 7, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %7) #13
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 5
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  %12 = icmp eq %"class.ui::AXNode"* %11, null
  br i1 %12, label %22, label %4

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 1
  %15 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %14, align 8
  %16 = bitcast %"class.ui::AXNode::OwnerTree"* %15 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %17 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, i64 1
  %19 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %18, align 8
  %20 = tail call %"class.ui::AXTableInfo"* %19(%"class.ui::AXNode::OwnerTree"* %15, %"class.ui::AXNode"* nonnull %5) #13
  %21 = icmp eq %"class.ui::AXTableInfo"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %9, %2, %13
  %23 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #13
  br label %62

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %20, i64 0, i32 8
  %26 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #13
  %27 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %20, i64 0, i32 8, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.56"* %25 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 2
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %62, label %35

35:                                               ; preds = %24
  %36 = icmp ugt i64 %33, 4611686018427387903
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #15
  unreachable

39:                                               ; preds = %35
  %40 = tail call i8* @_Znwm(i64 %32) #14
  %41 = bitcast i8* %40 to i32*
  %42 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %43 = bitcast i32** %42 to i8**
  store i8* %40, i8** %43, align 8
  %44 = bitcast %"class.std::__1::vector.56"* %0 to i8**
  store i8* %40, i8** %44, align 8
  %45 = getelementptr inbounds i32, i32* %41, i64 %33
  %46 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %45, i32** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %25, i64 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = load i64, i64* %28, align 8
  %50 = bitcast i32** %42 to i64*
  %51 = ptrtoint i8* %40 to i64
  %52 = ptrtoint i32* %48 to i64
  %53 = sub i64 %49, %52
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %39
  %56 = lshr exact i64 %53, 2
  %57 = bitcast i32* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* align 4 %57, i64 %53, i1 false) #13
  %58 = getelementptr inbounds i32, i32* %41, i64 %56
  %59 = ptrtoint i32* %58 to i64
  br label %60

60:                                               ; preds = %55, %39
  %61 = phi i64 [ %59, %55 ], [ %51, %39 ]
  store i64 %61, i64* %50, align 8
  br label %62

62:                                               ; preds = %60, %24, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector"* @_ZNK2ui6AXNode16GetExtraMacNodesEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %3 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %2, align 8
  %4 = bitcast %"class.ui::AXNode::OwnerTree"* %3 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %5 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %5, i64 1
  %7 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %6, align 8
  %8 = tail call %"class.ui::AXTableInfo"* %7(%"class.ui::AXNode::OwnerTree"* %3, %"class.ui::AXNode"* %0) #13
  %9 = icmp eq %"class.ui::AXTableInfo"* %8, null
  %10 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %8, i64 0, i32 9
  %11 = select i1 %9, %"class.std::__1::vector"* null, %"class.std::__1::vector"* %10
  ret %"class.std::__1::vector"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode10IsTableRowEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %3) #13
  ret i1 %4
}

declare zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode19GetTableRowRowIndexEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %3) #13
  %5 = xor i1 %4, true
  %6 = icmp eq %"class.ui::AXNode"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %59, label %8

8:                                                ; preds = %1, %13
  %9 = phi %"class.ui::AXNode"* [ %15, %13 ], [ %0, %1 ]
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %11) #13
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 5
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  %16 = icmp eq %"class.ui::AXNode"* %15, null
  br i1 %16, label %59, label %8

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %19 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %18, align 8
  %20 = bitcast %"class.ui::AXNode::OwnerTree"* %19 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %21 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %21, i64 1
  %23 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %22, align 8
  %24 = tail call %"class.ui::AXTableInfo"* %23(%"class.ui::AXNode::OwnerTree"* %19, %"class.ui::AXNode"* nonnull %9) #13
  %25 = icmp eq %"class.ui::AXTableInfo"* %24, null
  br i1 %25, label %59, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %24, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node.471"**
  %31 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node.471"* %31, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %26, %33
  %34 = phi %"class.std::__1::__tree_end_node"* [ %44, %33 ], [ %29, %26 ]
  %35 = phi %"class.std::__1::__tree_node.471"* [ %45, %33 ], [ %31, %26 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, %28
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %35, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.471"**
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %35, i64 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node.471"* %35 to %"class.std::__1::__tree_node.471"**
  %43 = select i1 %38, %"class.std::__1::__tree_node.471"** %40, %"class.std::__1::__tree_node.471"** %42
  %44 = select i1 %38, %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"* %41
  %45 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %43, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.471"* %45, null
  br i1 %46, label %47, label %33

47:                                               ; preds = %33
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %44, %29
  br i1 %48, label %59, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 4
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %28, %52
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 5
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = shl i64 %57, 32
  br label %59

59:                                               ; preds = %13, %1, %49, %47, %26, %54, %17
  %60 = phi i64 [ 0, %1 ], [ 0, %17 ], [ 1, %54 ], [ 0, %26 ], [ 0, %47 ], [ 0, %49 ], [ 0, %13 ]
  %61 = phi i64 [ 0, %1 ], [ 0, %17 ], [ %58, %54 ], [ 0, %26 ], [ 0, %47 ], [ 0, %49 ], [ 0, %13 ]
  %62 = or i64 %61, %60
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode18GetTableRowNodeIdsEv(%"class.std::__1::vector.56"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #13
  %6 = icmp eq %"class.ui::AXNode"* %1, null
  br i1 %6, label %100, label %7

7:                                                ; preds = %2, %12
  %8 = phi %"class.ui::AXNode"* [ %14, %12 ], [ %1, %2 ]
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 7, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %10) #13
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 5
  %14 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %13, align 8
  %15 = icmp eq %"class.ui::AXNode"* %14, null
  br i1 %15, label %100, label %7

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 1
  %18 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %17, align 8
  %19 = bitcast %"class.ui::AXNode::OwnerTree"* %18 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %20 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %20, i64 1
  %22 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %21, align 8
  %23 = tail call %"class.ui::AXTableInfo"* %22(%"class.ui::AXNode::OwnerTree"* %18, %"class.ui::AXNode"* nonnull %8) #13
  %24 = icmp eq %"class.ui::AXTableInfo"* %23, null
  br i1 %24, label %100, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %23, i64 0, i32 12, i32 0, i32 0
  %27 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %26, align 8
  %28 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %23, i64 0, i32 12, i32 0, i32 1
  %29 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %28, align 8
  %30 = icmp eq %"class.ui::AXNode"** %27, %29
  br i1 %30, label %100, label %31

31:                                               ; preds = %25
  %32 = bitcast i32** %3 to i64*
  %33 = bitcast %"class.std::__1::vector.56"* %0 to i64*
  %34 = bitcast i32** %4 to i64*
  br label %35

35:                                               ; preds = %96, %31
  %36 = phi i64 [ 0, %31 ], [ %99, %96 ]
  %37 = phi i32* [ null, %31 ], [ %98, %96 ]
  %38 = phi i32* [ null, %31 ], [ %97, %96 ]
  %39 = phi %"class.ui::AXNode"** [ %27, %31 ], [ %94, %96 ]
  %40 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %39, align 8
  %41 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %40, i64 0, i32 7, i32 1
  %42 = icmp eq i32* %38, %37
  br i1 %42, label %47, label %43

43:                                               ; preds = %35
  %44 = load i32, i32* %41, align 4
  store i32 %44, i32* %38, align 4
  %45 = getelementptr inbounds i32, i32* %38, i64 1
  %46 = ptrtoint i32* %45 to i64
  store i64 %46, i64* %32, align 8
  br label %93

47:                                               ; preds = %35
  %48 = ptrtoint i32* %37 to i64
  %49 = load i64, i64* %33, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 2
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 4611686018427387903
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #15
  unreachable

56:                                               ; preds = %47
  %57 = icmp ult i64 %51, 2305843009213693951
  br i1 %57, label %58, label %66

58:                                               ; preds = %56
  %59 = ashr exact i64 %50, 1
  %60 = icmp ult i64 %59, %52
  %61 = select i1 %60, i64 %52, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 4611686018427387903
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #15
  unreachable

66:                                               ; preds = %63, %56
  %67 = phi i64 [ %61, %63 ], [ 4611686018427387903, %56 ]
  %68 = shl i64 %67, 2
  %69 = tail call i8* @_Znwm(i64 %68) #14
  %70 = bitcast i8* %69 to i32*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi i32* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds i32, i32* %73, i64 %51
  %75 = getelementptr inbounds i32, i32* %73, i64 %72
  %76 = ptrtoint i32* %75 to i64
  %77 = load i32, i32* %41, align 4
  store i32 %77, i32* %74, align 4
  %78 = getelementptr inbounds i32, i32* %74, i64 1
  %79 = ptrtoint i32* %78 to i64
  %80 = sub i64 %36, %49
  %81 = ashr exact i64 %80, 2
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds i32, i32* %74, i64 %82
  %84 = ptrtoint i32* %83 to i64
  %85 = icmp sgt i64 %80, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %71
  %87 = bitcast i32* %83 to i8*
  %88 = inttoptr i64 %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 %80, i1 false) #13
  br label %89

89:                                               ; preds = %86, %71
  store i64 %84, i64* %33, align 8
  store i64 %79, i64* %32, align 8
  store i64 %76, i64* %34, align 8
  %90 = icmp eq i64 %49, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %49 to i8*
  tail call void @_ZdlPv(i8* %92) #14
  br label %93

93:                                               ; preds = %43, %89, %91
  %94 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %39, i64 1
  %95 = icmp eq %"class.ui::AXNode"** %94, %29
  br i1 %95, label %100, label %96

96:                                               ; preds = %93
  %97 = load i32*, i32** %3, align 8
  %98 = load i32*, i32** %4, align 8
  %99 = ptrtoint i32* %97 to i64
  br label %35

100:                                              ; preds = %12, %93, %25, %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode19IsTableCellOrHeaderEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %3) #13
  ret i1 %4
}

declare zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode17GetTableCellIndexEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %3) #13
  %5 = xor i1 %4, true
  %6 = icmp eq %"class.ui::AXNode"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %59, label %8

8:                                                ; preds = %1, %13
  %9 = phi %"class.ui::AXNode"* [ %15, %13 ], [ %0, %1 ]
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %11) #13
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 5
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  %16 = icmp eq %"class.ui::AXNode"* %15, null
  br i1 %16, label %59, label %8

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %19 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %18, align 8
  %20 = bitcast %"class.ui::AXNode::OwnerTree"* %19 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %21 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %21, i64 1
  %23 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %22, align 8
  %24 = tail call %"class.ui::AXTableInfo"* %23(%"class.ui::AXNode::OwnerTree"* %19, %"class.ui::AXNode"* nonnull %9) #13
  %25 = icmp eq %"class.ui::AXTableInfo"* %24, null
  br i1 %25, label %59, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %24, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node.471"**
  %31 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node.471"* %31, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %26, %33
  %34 = phi %"class.std::__1::__tree_end_node"* [ %44, %33 ], [ %29, %26 ]
  %35 = phi %"class.std::__1::__tree_node.471"* [ %45, %33 ], [ %31, %26 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, %28
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %35, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.471"**
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %35, i64 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node.471"* %35 to %"class.std::__1::__tree_node.471"**
  %43 = select i1 %38, %"class.std::__1::__tree_node.471"** %40, %"class.std::__1::__tree_node.471"** %42
  %44 = select i1 %38, %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"* %41
  %45 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %43, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.471"* %45, null
  br i1 %46, label %47, label %33

47:                                               ; preds = %33
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %44, %29
  br i1 %48, label %59, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 4
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %28, %52
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 5
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = shl i64 %57, 32
  br label %59

59:                                               ; preds = %13, %49, %1, %47, %26, %54, %17
  %60 = phi i64 [ 0, %1 ], [ 0, %17 ], [ 1, %54 ], [ 0, %26 ], [ 0, %47 ], [ 0, %49 ], [ 0, %13 ]
  %61 = phi i64 [ 0, %1 ], [ 0, %17 ], [ %58, %54 ], [ 0, %26 ], [ 0, %47 ], [ 0, %49 ], [ 0, %13 ]
  %62 = or i64 %61, %60
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode20GetTableCellColIndexEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %81, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %81, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %81, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %23) #13
  br i1 %24, label %25, label %81

25:                                               ; preds = %21, %30
  %26 = phi %"class.ui::AXNode"* [ %32, %30 ], [ %0, %21 ]
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 7, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %28) #13
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 5
  %32 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %31, align 8
  %33 = icmp eq %"class.ui::AXNode"* %32, null
  br i1 %33, label %81, label %25

34:                                               ; preds = %25
  %35 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %36 = bitcast %"class.ui::AXNode::OwnerTree"* %35 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %37 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %37, i64 1
  %39 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %38, align 8
  %40 = tail call %"class.ui::AXTableInfo"* %39(%"class.ui::AXNode::OwnerTree"* %35, %"class.ui::AXNode"* nonnull %26) #13
  %41 = icmp eq %"class.ui::AXTableInfo"* %40, null
  br i1 %41, label %81, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %40, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node.471"**
  %47 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node.471"* %47, null
  br i1 %48, label %81, label %49

49:                                               ; preds = %42, %49
  %50 = phi %"class.std::__1::__tree_end_node"* [ %60, %49 ], [ %45, %42 ]
  %51 = phi %"class.std::__1::__tree_node.471"* [ %61, %49 ], [ %47, %42 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, %44
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__tree_node_base"** %55 to %"class.std::__1::__tree_node.471"**
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_node.471"* %51 to %"class.std::__1::__tree_node.471"**
  %59 = select i1 %54, %"class.std::__1::__tree_node.471"** %56, %"class.std::__1::__tree_node.471"** %58
  %60 = select i1 %54, %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"* %57
  %61 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %59, align 8
  %62 = icmp eq %"class.std::__1::__tree_node.471"* %61, null
  br i1 %62, label %63, label %49

63:                                               ; preds = %49
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %60, %45
  br i1 %64, label %81, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 4
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %44, %68
  br i1 %69, label %81, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 5
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = shl i64 %73, 32
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 7, i32 0, i32 0
  %77 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %76, align 8
  %78 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %77, i64 %75, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = shl i64 %79, 32
  br label %81

81:                                               ; preds = %8, %30, %65, %63, %42, %34, %21, %1, %70, %12
  %82 = phi i64 [ 0, %12 ], [ 1, %70 ], [ 0, %1 ], [ 0, %21 ], [ 0, %34 ], [ 0, %42 ], [ 0, %63 ], [ 0, %65 ], [ 0, %30 ], [ 0, %8 ]
  %83 = phi i64 [ 0, %12 ], [ %80, %70 ], [ 0, %1 ], [ 0, %21 ], [ 0, %34 ], [ 0, %42 ], [ 0, %63 ], [ 0, %65 ], [ 0, %30 ], [ 0, %8 ]
  %84 = or i64 %83, %82
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode20GetTableCellRowIndexEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %81, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %81, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %81, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %23) #13
  br i1 %24, label %25, label %81

25:                                               ; preds = %21, %30
  %26 = phi %"class.ui::AXNode"* [ %32, %30 ], [ %0, %21 ]
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 7, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %28) #13
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 5
  %32 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %31, align 8
  %33 = icmp eq %"class.ui::AXNode"* %32, null
  br i1 %33, label %81, label %25

34:                                               ; preds = %25
  %35 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %36 = bitcast %"class.ui::AXNode::OwnerTree"* %35 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %37 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %37, i64 1
  %39 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %38, align 8
  %40 = tail call %"class.ui::AXTableInfo"* %39(%"class.ui::AXNode::OwnerTree"* %35, %"class.ui::AXNode"* nonnull %26) #13
  %41 = icmp eq %"class.ui::AXTableInfo"* %40, null
  br i1 %41, label %81, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %40, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node.471"**
  %47 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node.471"* %47, null
  br i1 %48, label %81, label %49

49:                                               ; preds = %42, %49
  %50 = phi %"class.std::__1::__tree_end_node"* [ %60, %49 ], [ %45, %42 ]
  %51 = phi %"class.std::__1::__tree_node.471"* [ %61, %49 ], [ %47, %42 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, %44
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__tree_node_base"** %55 to %"class.std::__1::__tree_node.471"**
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_node.471"* %51 to %"class.std::__1::__tree_node.471"**
  %59 = select i1 %54, %"class.std::__1::__tree_node.471"** %56, %"class.std::__1::__tree_node.471"** %58
  %60 = select i1 %54, %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"* %57
  %61 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %59, align 8
  %62 = icmp eq %"class.std::__1::__tree_node.471"* %61, null
  br i1 %62, label %63, label %49

63:                                               ; preds = %49
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %60, %45
  br i1 %64, label %81, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 4
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %44, %68
  br i1 %69, label %81, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 5
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = shl i64 %73, 32
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 7, i32 0, i32 0
  %77 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %76, align 8
  %78 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %77, i64 %75, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = shl i64 %79, 32
  br label %81

81:                                               ; preds = %8, %30, %65, %63, %42, %34, %21, %1, %70, %12
  %82 = phi i64 [ 0, %12 ], [ 1, %70 ], [ 0, %1 ], [ 0, %21 ], [ 0, %34 ], [ 0, %42 ], [ 0, %63 ], [ 0, %65 ], [ 0, %30 ], [ 0, %8 ]
  %83 = phi i64 [ 0, %12 ], [ %80, %70 ], [ 0, %1 ], [ 0, %21 ], [ 0, %34 ], [ 0, %42 ], [ 0, %63 ], [ 0, %65 ], [ 0, %30 ], [ 0, %8 ]
  %84 = or i64 %83, %82
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode19GetTableCellColSpanEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %4) #13
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  store i32 -1431655766, i32* %2, align 4
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %9 = call zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"* %8, i32 24, i32* nonnull %2) #13
  %10 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = select i1 %9, i64 %12, i64 4294967296
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi i64 [ 1, %6 ], [ 0, %1 ]
  %16 = phi i64 [ %13, %6 ], [ 0, %1 ]
  %17 = or i64 %16, %15
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode19GetTableCellRowSpanEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %4) #13
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  store i32 -1431655766, i32* %2, align 4
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %9 = call zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"* %8, i32 26, i32* nonnull %2) #13
  %10 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = select i1 %9, i64 %12, i64 4294967296
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi i64 [ 1, %6 ], [ 0, %1 ]
  %16 = phi i64 [ %13, %6 ], [ 0, %1 ]
  %17 = or i64 %16, %15
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode24GetTableCellAriaColIndexEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %81, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %81, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %81, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %23) #13
  br i1 %24, label %25, label %81

25:                                               ; preds = %21, %30
  %26 = phi %"class.ui::AXNode"* [ %32, %30 ], [ %0, %21 ]
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 7, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %28) #13
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 5
  %32 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %31, align 8
  %33 = icmp eq %"class.ui::AXNode"* %32, null
  br i1 %33, label %81, label %25

34:                                               ; preds = %25
  %35 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %36 = bitcast %"class.ui::AXNode::OwnerTree"* %35 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %37 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %37, i64 1
  %39 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %38, align 8
  %40 = tail call %"class.ui::AXTableInfo"* %39(%"class.ui::AXNode::OwnerTree"* %35, %"class.ui::AXNode"* nonnull %26) #13
  %41 = icmp eq %"class.ui::AXTableInfo"* %40, null
  br i1 %41, label %81, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %40, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node.471"**
  %47 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node.471"* %47, null
  br i1 %48, label %81, label %49

49:                                               ; preds = %42, %49
  %50 = phi %"class.std::__1::__tree_end_node"* [ %60, %49 ], [ %45, %42 ]
  %51 = phi %"class.std::__1::__tree_node.471"* [ %61, %49 ], [ %47, %42 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, %44
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__tree_node_base"** %55 to %"class.std::__1::__tree_node.471"**
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_node.471"* %51 to %"class.std::__1::__tree_node.471"**
  %59 = select i1 %54, %"class.std::__1::__tree_node.471"** %56, %"class.std::__1::__tree_node.471"** %58
  %60 = select i1 %54, %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"* %57
  %61 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %59, align 8
  %62 = icmp eq %"class.std::__1::__tree_node.471"* %61, null
  br i1 %62, label %63, label %49

63:                                               ; preds = %49
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %60, %45
  br i1 %64, label %81, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 4
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %44, %68
  br i1 %69, label %81, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 5
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = shl i64 %73, 32
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 7, i32 0, i32 0
  %77 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %76, align 8
  %78 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %77, i64 %75, i32 6
  %79 = load i64, i64* %78, align 8
  %80 = shl i64 %79, 32
  br label %81

81:                                               ; preds = %8, %30, %65, %63, %42, %34, %21, %1, %70, %12
  %82 = phi i64 [ 0, %12 ], [ 1, %70 ], [ 0, %1 ], [ 0, %21 ], [ 0, %34 ], [ 0, %42 ], [ 0, %63 ], [ 0, %65 ], [ 0, %30 ], [ 0, %8 ]
  %83 = phi i64 [ 0, %12 ], [ %80, %70 ], [ 0, %1 ], [ 0, %21 ], [ 0, %34 ], [ 0, %42 ], [ 0, %63 ], [ 0, %65 ], [ 0, %30 ], [ 0, %8 ]
  %84 = or i64 %83, %82
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode24GetTableCellAriaRowIndexEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %81, label %3

3:                                                ; preds = %1, %8
  %4 = phi %"class.ui::AXNode"* [ %10, %8 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %6) #13
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %81, label %3

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %14 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %15 = bitcast %"class.ui::AXNode::OwnerTree"* %14 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %16 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %16, i64 1
  %18 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, align 8
  %19 = tail call %"class.ui::AXTableInfo"* %18(%"class.ui::AXNode::OwnerTree"* %14, %"class.ui::AXNode"* nonnull %4) #13
  %20 = icmp eq %"class.ui::AXTableInfo"* %19, null
  br i1 %20, label %81, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %23) #13
  br i1 %24, label %25, label %81

25:                                               ; preds = %21, %30
  %26 = phi %"class.ui::AXNode"* [ %32, %30 ], [ %0, %21 ]
  %27 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 7, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %28) #13
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %26, i64 0, i32 5
  %32 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %31, align 8
  %33 = icmp eq %"class.ui::AXNode"* %32, null
  br i1 %33, label %81, label %25

34:                                               ; preds = %25
  %35 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %13, align 8
  %36 = bitcast %"class.ui::AXNode::OwnerTree"* %35 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %37 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %37, i64 1
  %39 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %38, align 8
  %40 = tail call %"class.ui::AXTableInfo"* %39(%"class.ui::AXNode::OwnerTree"* %35, %"class.ui::AXNode"* nonnull %26) #13
  %41 = icmp eq %"class.ui::AXTableInfo"* %40, null
  br i1 %41, label %81, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %40, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node.471"**
  %47 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node.471"* %47, null
  br i1 %48, label %81, label %49

49:                                               ; preds = %42, %49
  %50 = phi %"class.std::__1::__tree_end_node"* [ %60, %49 ], [ %45, %42 ]
  %51 = phi %"class.std::__1::__tree_node.471"* [ %61, %49 ], [ %47, %42 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, %44
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__tree_node_base"** %55 to %"class.std::__1::__tree_node.471"**
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.471", %"class.std::__1::__tree_node.471"* %51, i64 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_node.471"* %51 to %"class.std::__1::__tree_node.471"**
  %59 = select i1 %54, %"class.std::__1::__tree_node.471"** %56, %"class.std::__1::__tree_node.471"** %58
  %60 = select i1 %54, %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"* %57
  %61 = load %"class.std::__1::__tree_node.471"*, %"class.std::__1::__tree_node.471"** %59, align 8
  %62 = icmp eq %"class.std::__1::__tree_node.471"* %61, null
  br i1 %62, label %63, label %49

63:                                               ; preds = %49
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %60, %45
  br i1 %64, label %81, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 4
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %44, %68
  br i1 %69, label %81, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 5
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = shl i64 %73, 32
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %19, i64 0, i32 7, i32 0, i32 0
  %77 = load %"struct.ui::AXTableInfo::CellData"*, %"struct.ui::AXTableInfo::CellData"** %76, align 8
  %78 = getelementptr inbounds %"struct.ui::AXTableInfo::CellData", %"struct.ui::AXTableInfo::CellData"* %77, i64 %75, i32 7
  %79 = load i64, i64* %78, align 8
  %80 = shl i64 %79, 32
  br label %81

81:                                               ; preds = %8, %30, %65, %63, %42, %34, %21, %1, %70, %12
  %82 = phi i64 [ 0, %12 ], [ 1, %70 ], [ 0, %1 ], [ 0, %21 ], [ 0, %34 ], [ 0, %42 ], [ 0, %63 ], [ 0, %65 ], [ 0, %30 ], [ 0, %8 ]
  %83 = phi i64 [ 0, %12 ], [ %80, %70 ], [ 0, %1 ], [ 0, %21 ], [ 0, %34 ], [ 0, %42 ], [ 0, %63 ], [ 0, %65 ], [ 0, %30 ], [ 0, %8 ]
  %84 = or i64 %83, %82
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode28GetTableCellColHeaderNodeIdsEv(%"class.std::__1::vector.56"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.ui::AXNode"* %1, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2, %9
  %5 = phi %"class.ui::AXNode"* [ %11, %9 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 7, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %7) #13
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 5
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  %12 = icmp eq %"class.ui::AXNode"* %11, null
  br i1 %12, label %26, label %4

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 1
  %15 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %14, align 8
  %16 = bitcast %"class.ui::AXNode::OwnerTree"* %15 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %17 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, i64 1
  %19 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %18, align 8
  %20 = tail call %"class.ui::AXTableInfo"* %19(%"class.ui::AXNode::OwnerTree"* %15, %"class.ui::AXNode"* nonnull %5) #13
  %21 = icmp eq %"class.ui::AXTableInfo"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %20, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %9, %2, %13, %22
  %27 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13
  br label %73

28:                                               ; preds = %22
  %29 = tail call i64 @_ZNK2ui6AXNode20GetTableCellColIndexEv(%"class.ui::AXNode"* nonnull %1)
  %30 = trunc i64 %29 to i8
  %31 = icmp eq i8 %30, 0
  %32 = ashr i64 %29, 32
  %33 = select i1 %31, i64 0, i64 %32
  %34 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %20, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %35, i64 %33
  %37 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  %38 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %35, i64 %33, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.56"* %36 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %28
  %47 = icmp ugt i64 %44, 4611686018427387903
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #15
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #14
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.std::__1::vector.56"* %0 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds i32, i32* %52, i64 %44
  %57 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %56, i32** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %36, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %39, align 8
  %61 = bitcast i32** %53 to i64*
  %62 = ptrtoint i8* %51 to i64
  %63 = ptrtoint i32* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %50
  %67 = lshr exact i64 %64, 2
  %68 = bitcast i32* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %68, i64 %64, i1 false) #13
  %69 = getelementptr inbounds i32, i32* %52, i64 %67
  %70 = ptrtoint i32* %69 to i64
  br label %71

71:                                               ; preds = %66, %50
  %72 = phi i64 [ %70, %66 ], [ %62, %50 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %71, %28, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode22GetTableCellColHeadersEPNSt3__16vectorIPS0_NS1_9allocatorIS3_EEEE(%"class.ui::AXNode"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.56", align 8
  %4 = bitcast %"class.std::__1::vector.56"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %3, i64 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.56"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZNK2ui6AXNode28GetTableCellColHeaderNodeIdsEv(%"class.std::__1::vector.56"* nonnull sret %3, %"class.ui::AXNode"* %0)
  call void @_ZNK2ui6AXNode20IdVectorToNodeVectorERKNSt3__16vectorIiNS1_9allocatorIiEEEEPNS2_IPS0_NS3_IS8_EEEE(%"class.ui::AXNode"* %0, %"class.std::__1::vector.56"* nonnull dereferenceable(24) %3, %"class.std::__1::vector"* %1)
  %7 = load i32*, i32** %5, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %3, i64 0, i32 0, i32 1
  %11 = ptrtoint i32* %7 to i64
  %12 = bitcast i32** %10 to i64*
  store i64 %11, i64* %12, align 8
  %13 = bitcast i32* %7 to i8*
  call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode20IdVectorToNodeVectorERKNSt3__16vectorIiNS1_9allocatorIiEEEEPNS2_IPS0_NS3_IS8_EEEE(%"class.ui::AXNode"* nocapture readonly, %"class.std::__1::vector.56"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %1, i64 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %1, i64 0, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.ui::AXNode"*** %11 to i64*
  %14 = bitcast %"class.std::__1::vector"* %2 to i64*
  %15 = bitcast %"class.ui::AXNode"*** %12 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  br label %18

17:                                               ; preds = %91, %3
  ret void

18:                                               ; preds = %9, %91
  %19 = phi i32* [ %5, %9 ], [ %92, %91 ]
  %20 = load i32, i32* %19, align 4
  %21 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %10, align 8
  %22 = bitcast %"class.ui::AXNode::OwnerTree"* %21 to %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)***
  %23 = load %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)**, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*** %22, align 8
  %24 = getelementptr inbounds %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)** %23, i64 2
  %25 = load %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXNode::OwnerTree"*, i32)** %24, align 8
  %26 = tail call %"class.ui::AXNode"* %25(%"class.ui::AXNode::OwnerTree"* %21, i32 %20) #13
  %27 = ptrtoint %"class.ui::AXNode"* %26 to i64
  %28 = icmp eq %"class.ui::AXNode"* %26, null
  br i1 %28, label %91, label %29

29:                                               ; preds = %18
  %30 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %11, align 8
  %31 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %12, align 8
  %32 = icmp eq %"class.ui::AXNode"** %30, %31
  %33 = ptrtoint %"class.ui::AXNode"** %31 to i64
  br i1 %32, label %38, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.ui::AXNode"** %30 to i64*
  store i64 %27, i64* %35, align 8
  %36 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %30, i64 1
  %37 = ptrtoint %"class.ui::AXNode"** %36 to i64
  store i64 %37, i64* %13, align 8
  br label %91

38:                                               ; preds = %29
  %39 = ptrtoint %"class.ui::AXNode"** %30 to i64
  %40 = load i64, i64* %14, align 8
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 3
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #15
  unreachable

47:                                               ; preds = %38
  %48 = sub i64 %33, %40
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %49, 1152921504606846975
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = ashr exact i64 %48, 2
  %53 = icmp ult i64 %52, %43
  %54 = select i1 %53, i64 %43, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = icmp ugt i64 %54, 2305843009213693951
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  tail call void @abort() #15
  unreachable

59:                                               ; preds = %56, %47
  %60 = phi i64 [ %54, %56 ], [ 2305843009213693951, %47 ]
  %61 = shl i64 %60, 3
  %62 = tail call i8* @_Znwm(i64 %61) #14
  %63 = bitcast i8* %62 to %"class.ui::AXNode"**
  br label %64

64:                                               ; preds = %59, %51
  %65 = phi i64 [ %60, %59 ], [ 0, %51 ]
  %66 = phi %"class.ui::AXNode"** [ %63, %59 ], [ null, %51 ]
  %67 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %66, i64 %42
  %68 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %66, i64 %65
  %69 = ptrtoint %"class.ui::AXNode"** %68 to i64
  %70 = bitcast %"class.ui::AXNode"** %67 to i64*
  store i64 %27, i64* %70, align 8
  %71 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %67, i64 1
  %72 = ptrtoint %"class.ui::AXNode"** %71 to i64
  %73 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %16, align 8
  %74 = load i64, i64* %13, align 8
  %75 = ptrtoint %"class.ui::AXNode"** %73 to i64
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 3
  %78 = sub nsw i64 0, %77
  %79 = getelementptr inbounds %"class.ui::AXNode"*, %"class.ui::AXNode"** %67, i64 %78
  %80 = ptrtoint %"class.ui::AXNode"** %79 to i64
  %81 = icmp sgt i64 %76, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %64
  %83 = bitcast %"class.ui::AXNode"** %79 to i8*
  %84 = bitcast %"class.ui::AXNode"** %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 %76, i1 false) #13
  %85 = load %"class.ui::AXNode"**, %"class.ui::AXNode"*** %16, align 8
  br label %86

86:                                               ; preds = %82, %64
  %87 = phi %"class.ui::AXNode"** [ %73, %64 ], [ %85, %82 ]
  store i64 %80, i64* %14, align 8
  store i64 %72, i64* %13, align 8
  store i64 %69, i64* %15, align 8
  %88 = icmp eq %"class.ui::AXNode"** %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = bitcast %"class.ui::AXNode"** %87 to i8*
  tail call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %89, %86, %34, %18
  %92 = getelementptr inbounds i32, i32* %19, i64 1
  %93 = icmp eq i32* %92, %7
  br i1 %93, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode28GetTableCellRowHeaderNodeIdsEv(%"class.std::__1::vector.56"* noalias sret, %"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.ui::AXNode"* %1, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2, %9
  %5 = phi %"class.ui::AXNode"* [ %11, %9 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 7, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %7) #13
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %5, i64 0, i32 5
  %11 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %10, align 8
  %12 = icmp eq %"class.ui::AXNode"* %11, null
  br i1 %12, label %26, label %4

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 1
  %15 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %14, align 8
  %16 = bitcast %"class.ui::AXNode::OwnerTree"* %15 to %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %17 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %17, i64 1
  %19 = load %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, %"class.ui::AXTableInfo"* (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %18, align 8
  %20 = tail call %"class.ui::AXTableInfo"* %19(%"class.ui::AXNode::OwnerTree"* %15, %"class.ui::AXNode"* nonnull %5) #13
  %21 = icmp eq %"class.ui::AXTableInfo"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %20, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %9, %2, %13, %22
  %27 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13
  br label %73

28:                                               ; preds = %22
  %29 = tail call i64 @_ZNK2ui6AXNode20GetTableCellRowIndexEv(%"class.ui::AXNode"* nonnull %1)
  %30 = trunc i64 %29 to i8
  %31 = icmp eq i8 %30, 0
  %32 = ashr i64 %29, 32
  %33 = select i1 %31, i64 0, i64 %32
  %34 = getelementptr inbounds %"class.ui::AXTableInfo", %"class.ui::AXTableInfo"* %20, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.std::__1::vector.56"*, %"class.std::__1::vector.56"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %35, i64 %33
  %37 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  %38 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %35, i64 %33, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.56"* %36 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %28
  %47 = icmp ugt i64 %44, 4611686018427387903
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #15
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #14
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.std::__1::vector.56"* %0 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds i32, i32* %52, i64 %44
  %57 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %56, i32** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %36, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %39, align 8
  %61 = bitcast i32** %53 to i64*
  %62 = ptrtoint i8* %51 to i64
  %63 = ptrtoint i32* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %50
  %67 = lshr exact i64 %64, 2
  %68 = bitcast i32* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %68, i64 %64, i1 false) #13
  %69 = getelementptr inbounds i32, i32* %52, i64 %67
  %70 = ptrtoint i32* %69 to i64
  br label %71

71:                                               ; preds = %66, %50
  %72 = phi i64 [ %70, %66 ], [ %62, %50 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %71, %28, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui6AXNode22GetTableCellRowHeadersEPNSt3__16vectorIPS0_NS1_9allocatorIS3_EEEE(%"class.ui::AXNode"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.56", align 8
  %4 = bitcast %"class.std::__1::vector.56"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %3, i64 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.56"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZNK2ui6AXNode28GetTableCellRowHeaderNodeIdsEv(%"class.std::__1::vector.56"* nonnull sret %3, %"class.ui::AXNode"* %0)
  call void @_ZNK2ui6AXNode20IdVectorToNodeVectorERKNSt3__16vectorIiNS1_9allocatorIiEEEEPNS2_IPS0_NS3_IS8_EEEE(%"class.ui::AXNode"* %0, %"class.std::__1::vector.56"* nonnull dereferenceable(24) %3, %"class.std::__1::vector"* %1)
  %7 = load i32*, i32** %5, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %3, i64 0, i32 0, i32 1
  %11 = ptrtoint i32* %7 to i64
  %12 = bitcast i32** %10 to i64*
  store i64 %11, i64* %12, align 8
  %13 = bitcast i32* %7 to i8*
  call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode25IsCellOrHeaderOfARIATableEv(%"class.ui::AXNode"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %3) #13
  %5 = xor i1 %4, true
  %6 = icmp eq %"class.ui::AXNode"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %21, label %8

8:                                                ; preds = %1, %13
  %9 = phi %"class.ui::AXNode"* [ %15, %13 ], [ %0, %1 ]
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %11) #13
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 5
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  %16 = icmp eq %"class.ui::AXNode"* %15, null
  br i1 %16, label %21, label %8

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 7, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 168
  br label %21

21:                                               ; preds = %13, %1, %17
  %22 = phi i1 [ false, %1 ], [ %20, %17 ], [ false, %13 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode24IsCellOrHeaderOfARIAGridEv(%"class.ui::AXNode"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %3) #13
  %5 = xor i1 %4, true
  %6 = icmp eq %"class.ui::AXNode"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %23, label %8

8:                                                ; preds = %1, %13
  %9 = phi %"class.ui::AXNode"* [ %15, %13 ], [ %0, %1 ]
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %11) #13
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 5
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  %16 = icmp eq %"class.ui::AXNode"* %15, null
  br i1 %16, label %23, label %8

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 7, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 93
  %21 = icmp eq i32 %19, 180
  %22 = or i1 %20, %21
  ret i1 %22

23:                                               ; preds = %13, %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui6AXNode20GetHierarchicalLevelEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %3 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %2, i32 28) #13
  %4 = icmp sgt i32 %3, 0
  %5 = zext i32 %3 to i64
  %6 = shl nuw i64 %5, 32
  %7 = zext i1 %4 to i64
  %8 = or i64 %6, %7
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode16IsOrderedSetItemEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui10IsItemLikeEN2ax5mojom4RoleE(i32 %3) #13
  ret i1 %4
}

declare zeroext i1 @_ZN2ui10IsItemLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode12IsOrderedSetEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZN2ui9IsSetLikeEN2ax5mojom4RoleE(i32 %3) #13
  ret i1 %4
}

declare zeroext i1 @_ZN2ui9IsSetLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui6AXNode11GetPosInSetEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %3 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %2, align 8
  %4 = bitcast %"class.ui::AXNode::OwnerTree"* %3 to i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %5 = load i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %5, i64 4
  %7 = load i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %6, align 8
  %8 = tail call i64 %7(%"class.ui::AXNode::OwnerTree"* %3, %"class.ui::AXNode"* dereferenceable(456) %0) #13
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui6AXNode10GetSetSizeEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %3 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %2, align 8
  %4 = bitcast %"class.ui::AXNode::OwnerTree"* %3 to i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)***
  %5 = load i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)**, i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %5, i64 5
  %7 = load i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)*, i64 (%"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode"*)** %6, align 8
  %8 = tail call i64 %7(%"class.ui::AXNode::OwnerTree"* %3, %"class.ui::AXNode"* dereferenceable(456) %0) #13
  ret i64 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode22SetRoleMatchesItemRoleEPKS0_(%"class.ui::AXNode"* nocapture readonly, %"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %1, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %40 [
    i32 83, label %7
    i32 112, label %9
    i32 94, label %11
    i32 123, label %13
    i32 124, label %18
    i32 166, label %23
    i32 179, label %25
    i32 113, label %27
    i32 129, label %29
    i32 143, label %32
    i32 31, label %34
    i32 138, label %38
  ]

7:                                                ; preds = %2
  %8 = icmp eq i32 %4, 6
  br label %40

9:                                                ; preds = %2
  %10 = icmp eq i32 %4, 116
  br label %40

11:                                               ; preds = %2
  switch i32 %4, label %12 [
    i32 127, label %40
    i32 125, label %40
    i32 116, label %40
    i32 114, label %40
    i32 24, label %40
    i32 181, label %40
  ]

12:                                               ; preds = %11
  br label %40

13:                                               ; preds = %2
  %14 = or i32 %4, 2
  %15 = icmp eq i32 %14, 127
  %16 = icmp eq i32 %4, 126
  %17 = or i1 %16, %15
  br label %40

18:                                               ; preds = %2
  %19 = or i32 %4, 2
  %20 = icmp eq i32 %19, 127
  %21 = icmp eq i32 %4, 126
  %22 = or i1 %21, %20
  br label %40

23:                                               ; preds = %2
  %24 = icmp eq i32 %4, 165
  br label %40

25:                                               ; preds = %2
  %26 = icmp eq i32 %4, 181
  br label %40

27:                                               ; preds = %2
  %28 = icmp eq i32 %4, 114
  br label %40

29:                                               ; preds = %2
  %30 = add i32 %4, -125
  %31 = icmp ult i32 %30, 4
  ret i1 %31

32:                                               ; preds = %2
  %33 = icmp eq i32 %4, 142
  br label %40

34:                                               ; preds = %2
  %35 = icmp eq i32 %4, 33
  %36 = icmp eq i32 %4, 170
  %37 = or i1 %35, %36
  br label %40

38:                                               ; preds = %2
  %39 = icmp eq i32 %4, 129
  br label %40

40:                                               ; preds = %11, %2, %12, %11, %11, %11, %11, %11, %38, %34, %32, %27, %25, %23, %18, %13, %9, %7
  %41 = phi i1 [ %39, %38 ], [ %37, %34 ], [ %33, %32 ], [ %28, %27 ], [ %26, %25 ], [ %24, %23 ], [ %22, %18 ], [ %17, %13 ], [ %10, %9 ], [ %8, %7 ], [ true, %11 ], [ false, %12 ], [ true, %11 ], [ true, %11 ], [ true, %11 ], [ true, %11 ], [ false, %2 ], [ true, %11 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode31IsIgnoredContainerForOrderedSetEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %3 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %2) #13
  br i1 %3, label %21, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 94
  br i1 %7, label %8, label %18

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 7, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = tail call zeroext i1 @_ZN2ui9IsSetLikeEN2ax5mojom4RoleE(i32 %14) #13
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = load i32, i32* %5, align 4
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi i32 [ %17, %16 ], [ %6, %4 ]
  switch i32 %19, label %20 [
    i32 116, label %21
    i32 89, label %21
    i32 182, label %21
  ]

20:                                               ; preds = %8, %18
  br label %21

21:                                               ; preds = %18, %18, %18, %20, %12, %1
  %22 = phi i1 [ true, %18 ], [ true, %12 ], [ true, %1 ], [ false, %20 ], [ true, %18 ], [ true, %18 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode15IsEmbeddedGroupEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 94
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %7 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %6, align 8
  %8 = icmp eq %"class.ui::AXNode"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %7, i64 0, i32 7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2ui9IsSetLikeEN2ax5mojom4RoleE(i32 %11) #13
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode13GetOrderedSetEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %3 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %2, align 8
  %4 = icmp eq %"class.ui::AXNode"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %25
  %6 = phi %"class.ui::AXNode"* [ %27, %25 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7
  %8 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %7) #13
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 94
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 5
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  %16 = icmp eq %"class.ui::AXNode"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 7, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i1 @_ZN2ui9IsSetLikeEN2ax5mojom4RoleE(i32 %19) #13
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = load i32, i32* %10, align 4
  br label %23

23:                                               ; preds = %21, %9
  %24 = phi i32 [ %22, %21 ], [ %11, %9 ]
  switch i32 %24, label %29 [
    i32 116, label %25
    i32 89, label %25
    i32 182, label %25
  ]

25:                                               ; preds = %23, %23, %23, %17, %5
  %26 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 5
  %27 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %26, align 8
  %28 = icmp eq %"class.ui::AXNode"* %27, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %25, %13, %23, %1
  %30 = phi %"class.ui::AXNode"* [ null, %1 ], [ %6, %23 ], [ %6, %13 ], [ null, %25 ]
  ret %"class.ui::AXNode"* %30
}

declare zeroext i1 @_ZNK2ui10AXNodeData17GetFloatAttributeEN2ax5mojom14FloatAttributeEPf(%"struct.ui::AXNodeData"*, i32, float*) local_unnamed_addr #1

declare void @_ZN4base14NumberToStringEd(%"class.std::__1::basic_string.82"* sret, double) local_unnamed_addr #1

declare i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.82"* sret, i8*, ...) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui10AXNodeData20IsNonAtomicTextFieldEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode26IsIgnoredForTextNavigationEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %11 [
    i32 158, label %12
    i32 89, label %5
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %2, i32 4) #13
  br i1 %10, label %11, label %12

11:                                               ; preds = %1, %5, %9
  br label %12

12:                                               ; preds = %1, %9, %11
  %13 = phi i1 [ false, %11 ], [ true, %1 ], [ true, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode20IsInvisibleOrIgnoredEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %3 = tail call zeroext i1 @_ZNK2ui10AXNodeData20IsInvisibleOrIgnoredEv(%"struct.ui::AXNodeData"* %2) #13
  br i1 %3, label %4, label %17

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %8 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %7, align 8
  %9 = bitcast %"class.ui::AXNode::OwnerTree"* %8 to %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)***
  %10 = load %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)**, %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)*** %9, align 8
  %11 = getelementptr inbounds %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)*, %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)** %10, i64 3
  %12 = load %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)*, %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)** %11, align 8
  %13 = tail call dereferenceable(248) %"struct.ui::AXTreeData"* %12(%"class.ui::AXNode::OwnerTree"* %8) #13
  %14 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %13, i64 0, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %6, %15
  br label %17

17:                                               ; preds = %1, %4
  %18 = phi i1 [ %16, %4 ], [ false, %1 ]
  ret i1 %18
}

declare zeroext i1 @_ZNK2ui10AXNodeData20IsInvisibleOrIgnoredEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode23IsFocusedWithinThisTreeEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 1
  %5 = load %"class.ui::AXNode::OwnerTree"*, %"class.ui::AXNode::OwnerTree"** %4, align 8
  %6 = bitcast %"class.ui::AXNode::OwnerTree"* %5 to %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)***
  %7 = load %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)**, %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)*, %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)** %7, i64 3
  %9 = load %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)*, %"struct.ui::AXTreeData"* (%"class.ui::AXNode::OwnerTree"*)** %8, align 8
  %10 = tail call dereferenceable(248) %"struct.ui::AXTreeData"* %9(%"class.ui::AXNode::OwnerTree"* %5) #13
  %11 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %3, %12
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode11IsEmptyLeafEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* %0)
  br i1 %2, label %3, label %16

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i32 @_ZNK2ui6AXNode18GetInnerTextLengthEv(%"class.ui::AXNode"* %0)
  %9 = icmp eq i32 %8, 0
  br label %16

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %12 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %11) #13
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @_ZNK2ui6AXNode18GetInnerTextLengthEv(%"class.ui::AXNode"* %0)
  %15 = icmp eq i32 %14, 0
  br label %16

16:                                               ; preds = %10, %13, %1, %7
  %17 = phi i1 [ %9, %7 ], [ false, %1 ], [ true, %10 ], [ %15, %13 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK2ui10AXNodeData17IsAtomicTextFieldEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode14IsInListMarkerEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 117
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32 %3) #13
  br i1 %6, label %7, label %32

7:                                                ; preds = %5, %12
  %8 = phi %"class.ui::AXNode"* [ %10, %12 ], [ %0, %5 ]
  %9 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %8, i64 0, i32 5
  %10 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %9, align 8
  %11 = icmp eq %"class.ui::AXNode"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 7
  %14 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %13) #13
  br i1 %14, label %7, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %10, i64 0, i32 7, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 117
  br i1 %18, label %32, label %19

19:                                               ; preds = %7, %15
  br label %20

20:                                               ; preds = %19, %25
  %21 = phi %"class.ui::AXNode"* [ %23, %25 ], [ %10, %19 ]
  %22 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %21, i64 0, i32 5
  %23 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %22, align 8
  %24 = icmp eq %"class.ui::AXNode"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 7
  %27 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %26) #13
  br i1 %27, label %20, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 7, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 117
  br label %32

32:                                               ; preds = %20, %15, %28, %5, %1
  %33 = phi i1 [ true, %1 ], [ false, %5 ], [ true, %15 ], [ %31, %28 ], [ false, %20 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode30IsCollapsedMenuListPopUpButtonEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 138
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 7
  %7 = tail call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %6, i32 2) #13
  br i1 %7, label %8, label %15

8:                                                ; preds = %5
  %9 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* %0) #13
  %10 = icmp eq %"class.ui::AXNode"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %9, i64 0, i32 7, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 129
  br label %15

15:                                               ; preds = %11, %8, %5, %1
  %16 = phi i1 [ false, %1 ], [ false, %5 ], [ %14, %11 ], [ false, %8 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode39GetCollapsedMenuListPopUpButtonAncestorEv(%"class.ui::AXNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %0, i64 0, i32 5
  %3 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %2, align 8
  %4 = icmp eq %"class.ui::AXNode"* %3, null
  br i1 %4, label %49, label %5

5:                                                ; preds = %1, %25
  %6 = phi %"class.ui::AXNode"* [ %27, %25 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7
  %8 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %7) #13
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 94
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 5
  %15 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %14, align 8
  %16 = icmp eq %"class.ui::AXNode"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %15, i64 0, i32 7, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i1 @_ZN2ui9IsSetLikeEN2ax5mojom4RoleE(i32 %19) #13
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = load i32, i32* %10, align 4
  br label %23

23:                                               ; preds = %21, %9
  %24 = phi i32 [ %22, %21 ], [ %11, %9 ]
  switch i32 %24, label %29 [
    i32 116, label %25
    i32 89, label %25
    i32 182, label %25
    i32 138, label %37
  ]

25:                                               ; preds = %23, %23, %23, %17, %5
  %26 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 5
  %27 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %26, align 8
  %28 = icmp eq %"class.ui::AXNode"* %27, null
  br i1 %28, label %49, label %5

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %6, i64 0, i32 5
  %31 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %30, align 8
  %32 = icmp eq %"class.ui::AXNode"* %31, null
  br i1 %32, label %49, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %31, i64 0, i32 7, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 138
  br i1 %36, label %37, label %49

37:                                               ; preds = %23, %33
  %38 = phi %"class.ui::AXNode"* [ %31, %33 ], [ %6, %23 ]
  %39 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %38, i64 0, i32 7
  %40 = tail call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %39, i32 2) #13
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = tail call %"class.ui::AXNode"* @_ZNK2ui6AXNode35ComputeFirstUnignoredChildRecursiveEv(%"class.ui::AXNode"* nonnull %38) #13
  %43 = icmp eq %"class.ui::AXNode"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %42, i64 0, i32 7, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 129
  %48 = select i1 %47, %"class.ui::AXNode"* %38, %"class.ui::AXNode"* null
  ret %"class.ui::AXNode"* %48

49:                                               ; preds = %25, %41, %37, %33, %1, %29
  ret %"class.ui::AXNode"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode25GetLowestPlatformAncestorEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1, %7
  %4 = phi %"class.ui::AXNode"* [ %9, %7 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7
  %6 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %5) #13
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 5
  %9 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %8, align 8
  %10 = icmp eq %"class.ui::AXNode"* %9, null
  br i1 %10, label %13, label %3

11:                                               ; preds = %22
  %12 = icmp eq %"class.ui::AXNode"* %21, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %7, %1, %11
  %14 = phi %"class.ui::AXNode"* [ %4, %11 ], [ null, %1 ], [ %0, %7 ]
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi %"class.ui::AXNode"* [ %14, %13 ], [ %21, %11 ]
  ret %"class.ui::AXNode"* %16

17:                                               ; preds = %27, %3
  %18 = phi %"class.ui::AXNode"* [ %4, %3 ], [ %25, %27 ]
  %19 = phi %"class.ui::AXNode"* [ %4, %3 ], [ %21, %27 ]
  %20 = tail call zeroext i1 @_ZNK2ui6AXNode6IsLeafEv(%"class.ui::AXNode"* nonnull %18)
  %21 = select i1 %20, %"class.ui::AXNode"* %18, %"class.ui::AXNode"* %19
  br label %22

22:                                               ; preds = %27, %17
  %23 = phi %"class.ui::AXNode"* [ %18, %17 ], [ %25, %27 ]
  %24 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 5
  %25 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %24, align 8
  %26 = icmp eq %"class.ui::AXNode"* %25, null
  br i1 %26, label %11, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %25, i64 0, i32 7
  %29 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %28) #13
  br i1 %29, label %22, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXNode"* @_ZNK2ui6AXNode20GetTextFieldAncestorEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %27, %1
  %4 = phi %"class.ui::AXNode"* [ %0, %1 ], [ %25, %27 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7
  %6 = tail call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %5, i32 4) #13
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %18 [
    i32 89, label %20
    i32 117, label %10
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 6
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"class.ui::AXNode"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %20, label %30

18:                                               ; preds = %7
  %19 = tail call zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32 %9) #13
  br i1 %19, label %20, label %30

20:                                               ; preds = %7, %10, %3, %18
  %21 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"* %5) #13
  br i1 %21, label %30, label %22

22:                                               ; preds = %20, %27
  %23 = phi %"class.ui::AXNode"* [ %25, %27 ], [ %4, %20 ]
  %24 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 5
  %25 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %24, align 8
  %26 = icmp eq %"class.ui::AXNode"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %25, i64 0, i32 7
  %29 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %28) #13
  br i1 %29, label %22, label %3

30:                                               ; preds = %20, %18, %10, %22, %1
  %31 = phi %"class.ui::AXNode"* [ null, %1 ], [ null, %22 ], [ null, %10 ], [ null, %18 ], [ %4, %20 ]
  ret %"class.ui::AXNode"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui6AXNode29IsDescendantOfAtomicTextFieldEv(%"class.ui::AXNode"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.ui::AXNode"* %0, null
  br i1 %2, label %32, label %3

3:                                                ; preds = %27, %1
  %4 = phi %"class.ui::AXNode"* [ %0, %1 ], [ %25, %27 ]
  %5 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7
  %6 = tail call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %5, i32 4) #13
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 7, i32 2
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %18 [
    i32 89, label %20
    i32 117, label %10
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 6
  %12 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %4, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"class.ui::AXNode"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %20, label %32

18:                                               ; preds = %7
  %19 = tail call zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32 %9) #13
  br i1 %19, label %20, label %32

20:                                               ; preds = %18, %10, %7, %3
  %21 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"* %5) #13
  br i1 %21, label %30, label %22

22:                                               ; preds = %20, %27
  %23 = phi %"class.ui::AXNode"* [ %25, %27 ], [ %4, %20 ]
  %24 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %23, i64 0, i32 5
  %25 = load %"class.ui::AXNode"*, %"class.ui::AXNode"** %24, align 8
  %26 = icmp eq %"class.ui::AXNode"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %25, i64 0, i32 7
  %29 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %28) #13
  br i1 %29, label %22, label %3

30:                                               ; preds = %20
  %31 = tail call zeroext i1 @_ZNK2ui10AXNodeData17IsAtomicTextFieldEv(%"struct.ui::AXNodeData"* %5) #13
  br label %32

32:                                               ; preds = %18, %10, %22, %1, %30
  %33 = phi i1 [ %31, %30 ], [ false, %1 ], [ false, %22 ], [ false, %10 ], [ false, %18 ]
  ret i1 %33
}

declare zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"*, i32, i32*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.82"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.82"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.82"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN2ui14AXLanguageInfoD1Ev(%"struct.ui::AXLanguageInfo"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #15
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !81
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !81
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !84, !noalias !81
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !84, !noalias !81
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !81
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !81
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !84, !noalias !81
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !84, !noalias !81
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !81
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !81
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !84, !noalias !81
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !84, !noalias !81
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !81
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !81
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !84, !noalias !81
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !84, !noalias !81
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !86

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !81
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !81
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !84, !noalias !81
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !84, !noalias !81
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !87

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !88

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !89

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !90

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !91

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !92

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !94
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !94
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !97, !noalias !94
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !97, !noalias !94
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !94
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !94
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !97, !noalias !94
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !97, !noalias !94
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !94
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !94
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !97, !noalias !94
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !97, !noalias !94
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !94
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !94
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !97, !noalias !94
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !97, !noalias !94
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !99

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !94
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !94
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !97, !noalias !94
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !97, !noalias !94
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !100

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !101

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !102

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !103
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !103
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !103
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !103
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.82", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.82"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.82"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.82", %"class.std::__1::basic_string.82"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.82"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.82"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.82"*, i64, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK2ui6AXNode22UnignoredChildrenBeginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK2ui6AXNode22UnignoredChildrenBeginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !11}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRiiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISF_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRiiEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISF_EEEEEEDpOT_"}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !11}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13}
!27 = distinct !{!27, !11}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !11}
!34 = distinct !{!34, !13}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !11}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK2ui6AXNode22UnignoredChildrenBeginEv: argument 0"}
!39 = distinct !{!39, !"_ZNK2ui6AXNode22UnignoredChildrenBeginEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK2ui6AXNode22UnignoredChildrenBeginEv: argument 0"}
!42 = distinct !{!42, !"_ZNK2ui6AXNode22UnignoredChildrenBeginEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK2ui6AXNode20GetValueForColorWellEv: argument 0"}
!45 = distinct !{!45, !"_ZNK2ui6AXNode20GetValueForColorWellEv"}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !13}
!53 = distinct !{!53, !13}
!54 = distinct !{!54, !11}
!55 = !{!56}
!56 = distinct !{!56, !57}
!57 = distinct !{!57, !"LVerDomain"}
!58 = !{!59}
!59 = distinct !{!59, !57}
!60 = distinct !{!60, !11}
!61 = distinct !{!61, !13}
!62 = distinct !{!62, !11}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !11}
!69 = distinct !{!69, !13}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !11}
!72 = !{!73}
!73 = distinct !{!73, !74}
!74 = distinct !{!74, !"LVerDomain"}
!75 = !{!76}
!76 = distinct !{!76, !74}
!77 = distinct !{!77, !11}
!78 = distinct !{!78, !13}
!79 = distinct !{!79, !13}
!80 = distinct !{!80, !11}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !11}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13}
!89 = distinct !{!89, !11}
!90 = distinct !{!90, !11}
!91 = distinct !{!91, !13}
!92 = distinct !{!92, !93, !11}
!93 = !{!"llvm.loop.unroll.runtime.disable"}
!94 = !{!95}
!95 = distinct !{!95, !96}
!96 = distinct !{!96, !"LVerDomain"}
!97 = !{!98}
!98 = distinct !{!98, !96}
!99 = distinct !{!99, !11}
!100 = distinct !{!100, !13}
!101 = distinct !{!101, !13}
!102 = distinct !{!102, !11}
!103 = !{i8 0, i8 2}
