; ModuleID = '../../native_client/src/shared/platform/nacl_secure_random_common.c'
source_filename = "../../native_client/src/shared/platform/nacl_secure_random_common.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClSecureRngIf = type { %struct.NaClSecureRngIfVtbl* }
%struct.NaClSecureRngIfVtbl = type { void (%struct.NaClSecureRngIf*)*, i8 (%struct.NaClSecureRngIf*)*, {}*, void (%struct.NaClSecureRngIf*, i8*, i64)*, i32 (%struct.NaClSecureRngIf*, i32)* }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSecureRngDefaultGenUint32(%struct.NaClSecureRngIf*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClSecureRngIf, %struct.NaClSecureRngIf* %0, i64 0, i32 0
  %3 = load %struct.NaClSecureRngIfVtbl*, %struct.NaClSecureRngIfVtbl** %2, align 8
  %4 = getelementptr inbounds %struct.NaClSecureRngIfVtbl, %struct.NaClSecureRngIfVtbl* %3, i64 0, i32 1
  %5 = load i8 (%struct.NaClSecureRngIf*)*, i8 (%struct.NaClSecureRngIf*)** %4, align 8
  %6 = tail call zeroext i8 %5(%struct.NaClSecureRngIf* %0) #2
  %7 = zext i8 %6 to i32
  %8 = shl nuw nsw i32 %7, 8
  %9 = load %struct.NaClSecureRngIfVtbl*, %struct.NaClSecureRngIfVtbl** %2, align 8
  %10 = getelementptr inbounds %struct.NaClSecureRngIfVtbl, %struct.NaClSecureRngIfVtbl* %9, i64 0, i32 1
  %11 = load i8 (%struct.NaClSecureRngIf*)*, i8 (%struct.NaClSecureRngIf*)** %10, align 8
  %12 = tail call zeroext i8 %11(%struct.NaClSecureRngIf* %0) #2
  %13 = zext i8 %12 to i32
  %14 = or i32 %8, %13
  %15 = shl nuw nsw i32 %14, 8
  %16 = load %struct.NaClSecureRngIfVtbl*, %struct.NaClSecureRngIfVtbl** %2, align 8
  %17 = getelementptr inbounds %struct.NaClSecureRngIfVtbl, %struct.NaClSecureRngIfVtbl* %16, i64 0, i32 1
  %18 = load i8 (%struct.NaClSecureRngIf*)*, i8 (%struct.NaClSecureRngIf*)** %17, align 8
  %19 = tail call zeroext i8 %18(%struct.NaClSecureRngIf* %0) #2
  %20 = zext i8 %19 to i32
  %21 = or i32 %15, %20
  %22 = shl nuw i32 %21, 8
  %23 = load %struct.NaClSecureRngIfVtbl*, %struct.NaClSecureRngIfVtbl** %2, align 8
  %24 = getelementptr inbounds %struct.NaClSecureRngIfVtbl, %struct.NaClSecureRngIfVtbl* %23, i64 0, i32 1
  %25 = load i8 (%struct.NaClSecureRngIf*)*, i8 (%struct.NaClSecureRngIf*)** %24, align 8
  %26 = tail call zeroext i8 %25(%struct.NaClSecureRngIf* %0) #2
  %27 = zext i8 %26 to i32
  %28 = or i32 %22, %27
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClSecureRngDefaultGenBytes(%struct.NaClSecureRngIf*, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.NaClSecureRngIf, %struct.NaClSecureRngIf* %0, i64 0, i32 0
  br label %7

7:                                                ; preds = %7, %5
  %8 = phi i64 [ 0, %5 ], [ %14, %7 ]
  %9 = load %struct.NaClSecureRngIfVtbl*, %struct.NaClSecureRngIfVtbl** %6, align 8
  %10 = getelementptr inbounds %struct.NaClSecureRngIfVtbl, %struct.NaClSecureRngIfVtbl* %9, i64 0, i32 1
  %11 = load i8 (%struct.NaClSecureRngIf*)*, i8 (%struct.NaClSecureRngIf*)** %10, align 8
  %12 = tail call zeroext i8 %11(%struct.NaClSecureRngIf* %0) #2
  %13 = getelementptr inbounds i8, i8* %1, i64 %8
  store i8 %12, i8* %13, align 1
  %14 = add nuw i64 %8, 1
  %15 = icmp eq i64 %14, %2
  br i1 %15, label %16, label %7

16:                                               ; preds = %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSecureRngDefaultUniform(%struct.NaClSecureRngIf*, i32) local_unnamed_addr #0 {
  %3 = tail call i32 @llvm.ctpop.i32(i32 %1), !range !2
  %4 = icmp ult i32 %3, 2
  br i1 %4, label %5, label %14

5:                                                ; preds = %2
  %6 = add i32 %1, -1
  %7 = getelementptr inbounds %struct.NaClSecureRngIf, %struct.NaClSecureRngIf* %0, i64 0, i32 0
  %8 = load %struct.NaClSecureRngIfVtbl*, %struct.NaClSecureRngIfVtbl** %7, align 8
  %9 = getelementptr inbounds %struct.NaClSecureRngIfVtbl, %struct.NaClSecureRngIfVtbl* %8, i64 0, i32 2
  %10 = bitcast {}** %9 to i32 (%struct.NaClSecureRngIf*)**
  %11 = load i32 (%struct.NaClSecureRngIf*)*, i32 (%struct.NaClSecureRngIf*)** %10, align 8
  %12 = tail call i32 %11(%struct.NaClSecureRngIf* %0) #2
  %13 = and i32 %12, %6
  br label %26

14:                                               ; preds = %2
  %15 = urem i32 -1, %1
  %16 = getelementptr inbounds %struct.NaClSecureRngIf, %struct.NaClSecureRngIf* %0, i64 0, i32 0
  br label %17

17:                                               ; preds = %17, %14
  %18 = load %struct.NaClSecureRngIfVtbl*, %struct.NaClSecureRngIfVtbl** %16, align 8
  %19 = getelementptr inbounds %struct.NaClSecureRngIfVtbl, %struct.NaClSecureRngIfVtbl* %18, i64 0, i32 2
  %20 = bitcast {}** %19 to i32 (%struct.NaClSecureRngIf*)**
  %21 = load i32 (%struct.NaClSecureRngIf*)*, i32 (%struct.NaClSecureRngIf*)** %20, align 8
  %22 = tail call i32 %21(%struct.NaClSecureRngIf* %0) #2
  %23 = icmp ugt i32 %22, %15
  br i1 %23, label %24, label %17

24:                                               ; preds = %17
  %25 = urem i32 %22, %1
  br label %26

26:                                               ; preds = %24, %5
  %27 = phi i32 [ %13, %5 ], [ %25, %24 ]
  ret i32 %27
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
