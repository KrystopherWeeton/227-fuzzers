; ModuleID = '../../third_party/perfetto/src/trace_processor/importers/common/args_tracker.cc'
source_filename = "../../third_party/perfetto/src/trace_processor/importers/common/args_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.perfetto::trace_processor::macros_internal::RootParentTable::Row" = type { i8* }
%union.anon.336 = type { i64 }
%union.anon.341 = type { %"struct.perfetto::trace_processor::StringPool::Id" }
%union.anon.346 = type { double }
%"struct.perfetto::trace_processor::StringPool::Id" = type { i32 }
%"struct.std::nothrow_t" = type { i8 }
%"class.perfetto::trace_processor::ArgsTracker" = type { i32 (...)**, %"class.std::__1::vector", %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.std::__1::map.321" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"class.std::__1::__compressed_pair.66" }
%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg" = type { %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::Variadic", %"class.perfetto::trace_processor::Column"*, i32, i32 }
%"struct.perfetto::trace_processor::Variadic" = type { i64, %union.anon }
%union.anon = type { i64 }
%"class.perfetto::trace_processor::Column" = type { %"class.std::__1::shared_ptr", i32, %"class.perfetto::trace_processor::NullableVectorBase"*, i8*, i32, %"class.perfetto::trace_processor::Table"*, i32, i32, %"class.perfetto::trace_processor::StringPool"* }
%"class.std::__1::shared_ptr" = type { %"class.perfetto::trace_processor::NullableVectorBase"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.perfetto::trace_processor::NullableVectorBase" = type { i32 (...)** }
%"class.perfetto::trace_processor::Table" = type { i32 (...)**, %"class.std::__1::vector.0", %"class.std::__1::vector.17", i32, %"class.perfetto::trace_processor::StringPool"* }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"*, %"class.std::__1::__compressed_pair.12" }
%"class.perfetto::trace_processor::RowMap" = type <{ i32, i32, i32, [4 x i8], %"class.perfetto::trace_processor::BitVector", %"class.std::__1::vector.2", i32, [4 x i8] }>
%"class.perfetto::trace_processor::BitVector" = type { i32, %"class.std::__1::vector.2", %"class.std::__1::vector.5" }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"*, %"class.std::__1::__compressed_pair.7" }
%"class.perfetto::trace_processor::BitVector::Block" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x %"class.perfetto::trace_processor::BitVector::BitWord"] }
%"class.perfetto::trace_processor::BitVector::BitWord" = type { i64 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.perfetto::trace_processor::BitVector::Block"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.perfetto::trace_processor::RowMap"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.perfetto::trace_processor::Column"* }
%"class.perfetto::trace_processor::StringPool" = type { %"class.std::__1::vector.24", %"class.std::__1::vector.31", %"class.std::__1::unordered_map" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.perfetto::trace_processor::StringPool::Block"*, %"struct.perfetto::trace_processor::StringPool::Block"*, %"class.std::__1::__compressed_pair.26" }
%"struct.perfetto::trace_processor::StringPool::Block" = type { %"class.perfetto::base::PagedMemory", i32, i64 }
%"class.perfetto::base::PagedMemory" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.perfetto::trace_processor::StringPool::Block"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.37 }
%union.anon.37 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { float }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* }
%"class.std::__1::map.321" = type { %"class.std::__1::__tree.322" }
%"class.std::__1::__tree.322" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.323", %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::TraceProcessorContext" = type { %"struct.perfetto::trace_processor::Config", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.299", %"class.std::__1::vector.305", %"class.std::__1::vector.313", %"class.perfetto::trace_processor::FtraceModule"* }
%"struct.perfetto::trace_processor::Config" = type { i32, i8, i32 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.perfetto::trace_processor::TraceStorage"* }
%"class.perfetto::trace_processor::TraceStorage" = type <{ i32 (...)**, %"class.perfetto::trace_processor::StringPool", %"struct.std::__1::array.74", %"class.perfetto::trace_processor::tables::MetadataTable", %"class.perfetto::trace_processor::tables::ClockSnapshotTable", %"class.perfetto::trace_processor::tables::TrackTable", %"class.perfetto::trace_processor::tables::GpuTrackTable", %"class.perfetto::trace_processor::tables::ProcessTrackTable", %"class.perfetto::trace_processor::tables::ThreadTrackTable", %"class.perfetto::trace_processor::tables::CounterTrackTable", %"class.perfetto::trace_processor::tables::ThreadCounterTrackTable", %"class.perfetto::trace_processor::tables::ProcessCounterTrackTable", %"class.perfetto::trace_processor::tables::CpuCounterTrackTable", %"class.perfetto::trace_processor::tables::IrqCounterTrackTable", %"class.perfetto::trace_processor::tables::SoftirqCounterTrackTable", %"class.perfetto::trace_processor::tables::GpuCounterTrackTable", %"class.perfetto::trace_processor::tables::GpuCounterGroupTable", %"class.perfetto::trace_processor::tables::PerfCounterTrackTable", %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ThreadTable", %"class.perfetto::trace_processor::tables::ProcessTable", %"class.perfetto::trace_processor::tables::SliceTable", %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::SchedSliceTable", %"class.perfetto::trace_processor::tables::ThreadSliceTable", %"class.perfetto::trace_processor::TraceStorage::VirtualTrackSlices", %"class.perfetto::trace_processor::tables::GpuSliceTable", %"class.perfetto::trace_processor::tables::CounterTable", %"class.perfetto::trace_processor::TraceStorage::SqlStats", %"class.perfetto::trace_processor::tables::InstantTable", %"class.perfetto::trace_processor::tables::RawTable", %"class.perfetto::trace_processor::tables::CpuTable", %"class.perfetto::trace_processor::tables::CpuFreqTable", %"class.perfetto::trace_processor::tables::AndroidLogTable", %"class.perfetto::trace_processor::tables::StackProfileMappingTable", %"class.perfetto::trace_processor::tables::StackProfileFrameTable", %"class.perfetto::trace_processor::tables::StackProfileCallsiteTable", %"class.perfetto::trace_processor::tables::StackSampleTable", %"class.perfetto::trace_processor::tables::HeapProfileAllocationTable", %"class.perfetto::trace_processor::tables::CpuProfileStackSampleTable", %"class.perfetto::trace_processor::tables::PerfSampleTable", %"class.perfetto::trace_processor::tables::PackageListTable", %"class.perfetto::trace_processor::tables::ProfilerSmapsTable", %"class.perfetto::trace_processor::tables::SymbolTable", %"class.perfetto::trace_processor::tables::HeapGraphObjectTable", %"class.perfetto::trace_processor::tables::HeapGraphClassTable", %"class.perfetto::trace_processor::tables::HeapGraphReferenceTable", %"class.perfetto::trace_processor::tables::VulkanMemoryAllocationsTable", %"class.perfetto::trace_processor::tables::GraphicsFrameSliceTable", %"class.perfetto::trace_processor::tables::MemorySnapshotTable", %"class.perfetto::trace_processor::tables::ProcessMemorySnapshotTable", %"class.perfetto::trace_processor::tables::MemorySnapshotNodeTable", %"class.perfetto::trace_processor::tables::MemorySnapshotEdgeTable", %"class.perfetto::trace_processor::tables::ExpectedFrameTimelineSliceTable", %"class.perfetto::trace_processor::tables::ActualFrameTimelineSliceTable", %"struct.std::__1::array.169", [4 x i8] }>
%"struct.std::__1::array.74" = type { [130 x %"struct.perfetto::trace_processor::TraceStorage::Stats"] }
%"struct.perfetto::trace_processor::TraceStorage::Stats" = type { i64, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::tables::MetadataTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::macros_internal::MacroTable" = type { %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::NullableVector", i8*, %"class.perfetto::trace_processor::Table"* }
%"class.perfetto::trace_processor::macros_internal::RootParentTable" = type { %"class.perfetto::trace_processor::Table" }
%"class.perfetto::trace_processor::NullableVector.92" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.93", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.93" = type { %"class.std::__1::__deque_base.94" }
%"class.std::__1::__deque_base.94" = type { %"struct.std::__1::__split_buffer.95", i64, %"class.std::__1::__compressed_pair.101" }
%"struct.std::__1::__split_buffer.95" = type { i64**, i64**, i64**, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64** }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::NullableVector" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.88" }
%"struct.std::__1::__split_buffer" = type { %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.perfetto::trace_processor::StringPool::Id"** }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::tables::ClockSnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::NullableVector.106" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.107", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.107" = type { %"class.std::__1::__deque_base.108" }
%"class.std::__1::__deque_base.108" = type { %"struct.std::__1::__split_buffer.109", i64, %"class.std::__1::__compressed_pair.115" }
%"struct.std::__1::__split_buffer.109" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i32** }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::tables::TrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::GpuTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92" }
%"class.perfetto::trace_processor::tables::ProcessTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::ThreadTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::CounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ThreadCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::ProcessCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::CpuCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::IrqCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.117" }
%"class.perfetto::trace_processor::NullableVector.117" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.118", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.118" = type { %"class.std::__1::__deque_base.119" }
%"class.std::__1::__deque_base.119" = type { %"struct.std::__1::__split_buffer.120", i64, %"class.std::__1::__compressed_pair.126" }
%"struct.std::__1::__split_buffer.120" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i32** }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::tables::SoftirqCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.117" }
%"class.perfetto::trace_processor::tables::GpuCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::GpuCounterGroupTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::PerfCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::ArgTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::NullableVector.131" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.132", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.132" = type { %"class.std::__1::__deque_base.133" }
%"class.std::__1::__deque_base.133" = type { %"struct.std::__1::__split_buffer.134", i64, %"class.std::__1::__compressed_pair.140" }
%"struct.std::__1::__split_buffer.134" = type { double**, double**, double**, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { double** }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::tables::ThreadTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::ProcessTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::SliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::FlowTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::SchedSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.117" }
%"class.perfetto::trace_processor::tables::ThreadSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92" }
%"class.perfetto::trace_processor::TraceStorage::VirtualTrackSlices" = type { %"class.std::__1::deque.145", %"class.std::__1::deque.93", %"class.std::__1::deque.93", %"class.std::__1::deque.93", %"class.std::__1::deque.93" }
%"class.std::__1::deque.145" = type { %"class.std::__1::__deque_base.146" }
%"class.std::__1::__deque_base.146" = type { %"struct.std::__1::__split_buffer.147", i64, %"class.std::__1::__compressed_pair.153" }
%"struct.std::__1::__split_buffer.147" = type { %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"class.std::__1::__compressed_pair.148" }
%"struct.perfetto::trace_processor::tables::SliceTable::DefinedId" = type { %"struct.perfetto::trace_processor::BaseId" }
%"struct.perfetto::trace_processor::BaseId" = type { i32 }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"** }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::tables::GpuSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::CounterTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::TraceStorage::SqlStats" = type { i32, %"class.std::__1::deque.157", %"class.std::__1::deque.93", %"class.std::__1::deque.93", %"class.std::__1::deque.93", %"class.std::__1::deque.93" }
%"class.std::__1::deque.157" = type { %"class.std::__1::__deque_base.158" }
%"class.std::__1::__deque_base.158" = type { %"struct.std::__1::__split_buffer.159", i64, %"class.std::__1::__compressed_pair.165" }
%"struct.std::__1::__split_buffer.159" = type { %"class.std::__1::basic_string"**, %"class.std::__1::basic_string"**, %"class.std::__1::basic_string"**, %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.std::__1::basic_string"** }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.perfetto::trace_processor::tables::InstantTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::RawTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::CpuTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::CpuFreqTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::AndroidLogTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileMappingTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileFrameTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileCallsiteTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::StackSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::HeapProfileAllocationTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92" }
%"class.perfetto::trace_processor::tables::CpuProfileStackSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::StackSampleTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.117" }
%"class.perfetto::trace_processor::tables::PerfSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::PackageListTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.92" }
%"class.perfetto::trace_processor::tables::ProfilerSmapsTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92" }
%"class.perfetto::trace_processor::tables::SymbolTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::HeapGraphObjectTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.117" }
%"class.perfetto::trace_processor::tables::HeapGraphClassTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::HeapGraphReferenceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::VulkanMemoryAllocationsTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::GraphicsFrameSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92" }
%"class.perfetto::trace_processor::tables::MemorySnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ProcessMemorySnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::MemorySnapshotNodeTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::MemorySnapshotEdgeTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106" }
%"class.perfetto::trace_processor::tables::ExpectedFrameTimelineSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ActualFrameTimelineSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"struct.std::__1::array.169" = type { [7 x %"struct.perfetto::trace_processor::StringPool::Id"] }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.perfetto::trace_processor::TraceSorter"* }
%"class.perfetto::trace_processor::TraceSorter" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.perfetto::trace_processor::GlobalArgsTracker"* }
%"class.perfetto::trace_processor::GlobalArgsTracker" = type { %"class.std::__1::unordered_map.188", %"class.perfetto::trace_processor::TraceProcessorContext"* }
%"class.std::__1::unordered_map.188" = type { %"class.std::__1::__hash_table.189" }
%"class.std::__1::__hash_table.189" = type <{ %"class.std::__1::unique_ptr.190", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.208", [4 x i8] }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192", %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::__hash_node_base.193"** }
%"struct.std::__1::__hash_node_base.193" = type { %"struct.std::__1::__hash_node_base.193"* }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::__bucket_list_deallocator.195" }
%"class.std::__1::__bucket_list_deallocator.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::__hash_node_base.193" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.perfetto::trace_processor::ArgsTracker"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.perfetto::trace_processor::TrackTracker"* }
%"class.perfetto::trace_processor::TrackTracker" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.perfetto::trace_processor::AsyncTrackSetTracker"* }
%"class.perfetto::trace_processor::AsyncTrackSetTracker" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.perfetto::trace_processor::SliceTracker"* }
%"class.perfetto::trace_processor::SliceTracker" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.perfetto::trace_processor::FlowTracker"* }
%"class.perfetto::trace_processor::FlowTracker" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.perfetto::trace_processor::ProcessTracker"* }
%"class.perfetto::trace_processor::ProcessTracker" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.perfetto::trace_processor::EventTracker"* }
%"class.perfetto::trace_processor::EventTracker" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.perfetto::trace_processor::ClockTracker"* }
%"class.perfetto::trace_processor::ClockTracker" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.perfetto::trace_processor::HeapProfileTracker"* }
%"class.perfetto::trace_processor::HeapProfileTracker" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.perfetto::trace_processor::PerfSampleTracker"* }
%"class.perfetto::trace_processor::PerfSampleTracker" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.perfetto::trace_processor::GlobalStackProfileTracker"* }
%"class.perfetto::trace_processor::GlobalStackProfileTracker" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.perfetto::trace_processor::MetadataTracker"* }
%"class.perfetto::trace_processor::MetadataTracker" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.perfetto::trace_processor::Destructible"* }
%"class.perfetto::trace_processor::Destructible" = type { i32 (...)** }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.perfetto::trace_processor::ChunkedTraceReader"* }
%"class.perfetto::trace_processor::ChunkedTraceReader" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.perfetto::trace_processor::TraceParser"* }
%"class.perfetto::trace_processor::TraceParser" = type opaque
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.perfetto::trace_processor::DescriptorPool"* }
%"class.perfetto::trace_processor::DescriptorPool" = type opaque
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.std::__1::vector.307"*, %"class.std::__1::vector.307"*, %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::vector.307" = type opaque
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.std::__1::vector.307"* }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"class.std::__1::unique_ptr.315"*, %"class.std::__1::unique_ptr.315"*, %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::unique_ptr.315" = type opaque
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.std::__1::unique_ptr.315"* }
%"class.perfetto::trace_processor::FtraceModule" = type opaque
%"class.perfetto::trace_processor::ArgsTracker::BoundInserter" = type <{ i32 (...)**, %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::Column"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.432" }
%"struct.std::__1::pair.432" = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.433", %"class.std::__1::__tuple_leaf.434" }
%"class.std::__1::__tuple_leaf" = type { %"class.perfetto::trace_processor::Column"* }
%"class.std::__1::__tuple_leaf.433" = type { i32 }
%"class.std::__1::__tuple_leaf.434" = type { %"struct.perfetto::trace_processor::StringPool::Id" }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.anon = type { i8 }
%"struct.perfetto::trace_processor::SqlValue" = type <{ %union.anon.332, i64, i32, [4 x i8] }>
%union.anon.332 = type { i8* }
%"struct.perfetto::trace_processor::GlobalArgsTracker::ArgHasher" = type { i8 }
%"struct.perfetto::trace_processor::tables::ArgTable::Row" = type <{ %"struct.perfetto::trace_processor::macros_internal::RootParentTable::Row", i32, %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id", [4 x i8], %"class.perfetto::base::Optional", %"class.perfetto::base::Optional.337", %"class.perfetto::base::Optional.342", %"struct.perfetto::trace_processor::StringPool::Id", [4 x i8] }>
%"class.perfetto::base::Optional" = type { %"class.perfetto::base::internal::OptionalBase" }
%"class.perfetto::base::internal::OptionalBase" = type { %"struct.perfetto::base::internal::OptionalStorage" }
%"struct.perfetto::base::internal::OptionalStorage" = type { %"struct.perfetto::base::internal::OptionalStorageBase" }
%"struct.perfetto::base::internal::OptionalStorageBase" = type { i8, %union.anon.336 }
%"class.perfetto::base::Optional.337" = type { %"class.perfetto::base::internal::OptionalBase.338" }
%"class.perfetto::base::internal::OptionalBase.338" = type { %"struct.perfetto::base::internal::OptionalStorage.339" }
%"struct.perfetto::base::internal::OptionalStorage.339" = type { %"struct.perfetto::base::internal::OptionalStorageBase.340" }
%"struct.perfetto::base::internal::OptionalStorageBase.340" = type { i8, %union.anon.341 }
%"class.perfetto::base::Optional.342" = type { %"class.perfetto::base::internal::OptionalBase.343" }
%"class.perfetto::base::internal::OptionalBase.343" = type { %"struct.perfetto::base::internal::OptionalStorage.344" }
%"struct.perfetto::base::internal::OptionalStorage.344" = type { %"struct.perfetto::base::internal::OptionalStorageBase.345" }
%"struct.perfetto::base::internal::OptionalStorageBase.345" = type { i8, %union.anon.346 }
%"struct.std::__1::__split_buffer.362" = type { %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.84", %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.std::__1::allocator.86"* }
%"class.std::__1::allocator.86" = type { i8 }
%"struct.perfetto::trace_processor::BitVector::Address" = type { i32, %"struct.perfetto::trace_processor::BitVector::BlockOffset" }
%"struct.perfetto::trace_processor::BitVector::BlockOffset" = type { i16, i16 }
%"struct.std::__1::__split_buffer.381" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.std::__1::allocator.113"* }
%"class.std::__1::allocator.113" = type { i8 }
%"struct.std::__1::__split_buffer.391" = type { i64**, i64**, i64**, %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.std::__1::allocator.99"* }
%"class.std::__1::allocator.99" = type { i8 }
%"struct.std::__1::__split_buffer.402" = type { double**, double**, double**, %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.136", %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.std::__1::allocator.138"* }
%"class.std::__1::allocator.138" = type { i8 }
%"class.perfetto::base::Optional.412" = type { %"class.perfetto::base::internal::OptionalBase.413" }
%"class.perfetto::base::internal::OptionalBase.413" = type { %"struct.perfetto::base::internal::OptionalStorage.414" }
%"struct.perfetto::base::internal::OptionalStorage.414" = type { %"struct.perfetto::base::internal::OptionalStorageBase.415" }
%"struct.perfetto::base::internal::OptionalStorageBase.415" = type { i8, %union.anon.416 }
%union.anon.416 = type { i32 }
%"class.std::__1::__deque_iterator.417" = type { i32**, i32* }
%"struct.std::__1::__split_buffer.419" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.122", %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.std::__1::allocator.124"* }
%"class.std::__1::allocator.124" = type { i8 }
%"class.std::__1::__deque_iterator.380" = type { i32**, i32* }
%"class.std::__1::__deque_iterator.390" = type { i64**, i64* }
%"class.std::__1::__deque_iterator.401" = type { double**, double* }

$_ZN8perfetto15trace_processor17GlobalArgsTracker9AddArgSetERKNSt3__16vectorINS1_3ArgENS2_9allocatorIS4_EEEEjj = comdat any

$_ZN8perfetto15trace_processor6Column3SetEjNS0_8SqlValueE = comdat any

$_ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE = comdat any

$_ZNK8perfetto15trace_processor17GlobalArgsTracker9ArgHasherclERKNS1_3ArgE = comdat any

$_ZN8perfetto15trace_processor6tables8ArgTable6InsertERKNS2_3RowE = comdat any

$_ZNK8perfetto15trace_processor6RowMap3GetEj = comdat any

$_ZN8perfetto4base8BasenameEPKc = comdat any

$_ZNK8perfetto15trace_processor9BitVector5Block13IndexOfNthSetEj = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRmjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN8perfetto15trace_processor10StringPool12InternStringENS_4base10StringViewE = comdat any

$_ZN8perfetto15trace_processor15macros_internal10MacroTable30UpdateRowMapsAfterParentInsertEv = comdat any

$_ZN8perfetto15trace_processor6RowMap6InsertEj = comdat any

$_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZN8perfetto15trace_processor9BitVector6ResizeEjb = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_ = comdat any

$_ZN8perfetto15trace_processor9BitVector3SetERKNS1_7AddressES4_ = comdat any

$_ZNSt3__16vectorIN8perfetto15trace_processor9BitVector5BlockENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNK8perfetto15trace_processor6RowMap4sizeEv = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZN8perfetto15trace_processor14NullableVectorIlE6AppendENS_4base8OptionalIlEE = comdat any

$_ZNSt3__15dequeIlNS_9allocatorIlEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPlRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZN8perfetto15trace_processor14NullableVectorIdE6AppendENS_4base8OptionalIdEE = comdat any

$_ZNSt3__15dequeIdNS_9allocatorIdEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPdRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZN8perfetto15trace_processor14NullableVectorIiE3SetEji = comdat any

$_ZN8perfetto15trace_processor14NullableVectorIjE3SetEjj = comdat any

$_ZN8perfetto15trace_processor14NullableVectorIlE3SetEjl = comdat any

$_ZN8perfetto15trace_processor14NullableVectorIdE3SetEjd = comdat any

$_ZNK8perfetto15trace_processor6RowMap8ContainsEj = comdat any

$_ZNK8perfetto15trace_processor6RowMap7IndexOfEj = comdat any

$_ZNSt3__15dequeIiNS_9allocatorIiEEE6insertENS_16__deque_iteratorIiPKiRS5_PKS6_lLl0EEES7_ = comdat any

$_ZNSt3__15dequeIiNS_9allocatorIiEEE20__add_front_capacityEv = comdat any

$_ZNSt3__15dequeIiNS_9allocatorIiEEE16__move_and_checkENS_16__deque_iteratorIiPiRiPS5_lLl0EEES8_S8_RPKi = comdat any

$_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv = comdat any

$_ZNSt3__15dequeIiNS_9allocatorIiEEE25__move_backward_and_checkENS_16__deque_iteratorIiPiRiPS5_lLl0EEES8_S8_RPKi = comdat any

$_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPiRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE6insertENS_16__deque_iteratorIjPKjRS5_PKS6_lLl0EEES7_ = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE20__add_front_capacityEv = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE16__move_and_checkENS_16__deque_iteratorIjPjRjPS5_lLl0EEES8_S8_RPKj = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE25__move_backward_and_checkENS_16__deque_iteratorIjPjRjPS5_lLl0EEES8_S8_RPKj = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__15dequeIlNS_9allocatorIlEEE6insertENS_16__deque_iteratorIlPKlRS5_PKS6_lLl0EEES7_ = comdat any

$_ZNSt3__15dequeIlNS_9allocatorIlEEE20__add_front_capacityEv = comdat any

$_ZNSt3__15dequeIlNS_9allocatorIlEEE16__move_and_checkENS_16__deque_iteratorIlPlRlPS5_lLl0EEES8_S8_RPKl = comdat any

$_ZNSt3__15dequeIlNS_9allocatorIlEEE25__move_backward_and_checkENS_16__deque_iteratorIlPlRlPS5_lLl0EEES8_S8_RPKl = comdat any

$_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__15dequeIdNS_9allocatorIdEEE6insertENS_16__deque_iteratorIdPKdRS5_PKS6_lLl0EEES7_ = comdat any

$_ZNSt3__15dequeIdNS_9allocatorIdEEE20__add_front_capacityEv = comdat any

$_ZNSt3__15dequeIdNS_9allocatorIdEEE16__move_and_checkENS_16__deque_iteratorIdPdRdPS5_lLl0EEES8_S8_RPKd = comdat any

$_ZNSt3__15dequeIdNS_9allocatorIdEEE25__move_backward_and_checkENS_16__deque_iteratorIdPdRdPS5_lLl0EEES8_S8_RPKd = comdat any

$_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJPN8perfetto15trace_processor6ColumnEjNS4_10StringPool2IdEEEEmEENS_19__map_value_compareIS9_SA_NS_4lessIS9_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

@_ZTVN8perfetto15trace_processor11ArgsTrackerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.perfetto::trace_processor::ArgsTracker"*)* @_ZN8perfetto15trace_processor11ArgsTrackerD2Ev to i8*), i8* bitcast (void (%"class.perfetto::trace_processor::ArgsTracker"*)* @_ZN8perfetto15trace_processor11ArgsTrackerD0Ev to i8*), i8* bitcast (void (%"class.perfetto::trace_processor::ArgsTracker"*)* @_ZN8perfetto15trace_processor11ArgsTracker5FlushEv to i8*)] }, align 8
@_ZTVN8perfetto15trace_processor11ArgsTracker13BoundInserterE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*)* @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev to i8*), i8* bitcast (void (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*)* @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev to i8*), i8* bitcast (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)* @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE to i8*)] }, align 8
@__const._ZN8perfetto15trace_processor17GlobalArgsTracker9AddArgSetERKNSt3__16vectorINS1_3ArgENS2_9allocatorIS4_EEEEjj.row = private unnamed_addr constant <{ %"struct.perfetto::trace_processor::macros_internal::RootParentTable::Row", i32, %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id", [4 x i8], { { { { i8, [7 x i8], %union.anon.336 } } } }, { { { { i8, [3 x i8], %union.anon.341 } } } }, { { { { i8, [7 x i8], %union.anon.346 } } } }, %"struct.perfetto::trace_processor::StringPool::Id", [4 x i8] }> <{ %"struct.perfetto::trace_processor::macros_internal::RootParentTable::Row" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i32 -1431655766, %"struct.perfetto::trace_processor::StringPool::Id" { i32 -1431655766 }, %"struct.perfetto::trace_processor::StringPool::Id" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.336 } } } } { { { { i8, [7 x i8], %union.anon.336 } } } { { { i8, [7 x i8], %union.anon.336 } } { { i8, [7 x i8], %union.anon.336 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.336 { i64 -6148914691236517206 } } } } }, { { { { i8, [3 x i8], %union.anon.341 } } } } { { { { i8, [3 x i8], %union.anon.341 } } } { { { i8, [3 x i8], %union.anon.341 } } { { i8, [3 x i8], %union.anon.341 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.341 { %"struct.perfetto::trace_processor::StringPool::Id" { i32 -1431655766 } } } } } }, { { { { i8, [7 x i8], %union.anon.346 } } } } { { { { i8, [7 x i8], %union.anon.346 } } } { { { i8, [7 x i8], %union.anon.346 } } { { i8, [7 x i8], %union.anon.346 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.346 { double 0xFFFFFFFFFFFFFFFF } } } } }, %"struct.perfetto::trace_processor::StringPool::Id" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.1 = private unnamed_addr constant [68 x i8] c"../../third_party/perfetto/src/trace_processor/containers/row_map.h\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"For GCC (errno: %d, %s)\00", align 1
@.str.3 = private unnamed_addr constant [71 x i8] c"../../third_party/perfetto/src/trace_processor/containers/bit_vector.h\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Index out of bounds (errno: %d, %s)\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@.str.6 = private unnamed_addr constant [72 x i8] c"../../third_party/perfetto/src/trace_processor/tables/macros_internal.h\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"Should not be called (errno: %d, %s)\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/perfetto/src/trace_processor/db/column.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"%s (errno: %d, %s)\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"PERFETTO_CHECK(value.type == type())\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"Setting a generic value on a string column is not implemented (errno: %d, %s)\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"Cannot set value on a id column (errno: %d, %s)\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@switch.table._ZN8perfetto15trace_processor6Column3SetEjNS0_8SqlValueE = private unnamed_addr constant [6 x i32] [i32 1, i32 1, i32 1, i32 2, i32 3, i32 1], align 4

@_ZN8perfetto15trace_processor11ArgsTrackerC1EPNS0_21TraceProcessorContextE = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::TraceProcessorContext"*), void (%"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::TraceProcessorContext"*)* @_ZN8perfetto15trace_processor11ArgsTrackerC2EPNS0_21TraceProcessorContextE
@_ZN8perfetto15trace_processor11ArgsTrackerD1Ev = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::ArgsTracker"*), void (%"class.perfetto::trace_processor::ArgsTracker"*)* @_ZN8perfetto15trace_processor11ArgsTrackerD2Ev
@_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterC1EPS1_PNS0_6ColumnEj = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::Column"*, i32), void (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::Column"*, i32)* @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterC2EPS1_PNS0_6ColumnEj
@_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD1Ev = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*), void (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*)* @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev
@_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterC1EOS2_ = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*), void (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*)* @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterC2EOS2_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11ArgsTrackerC2EPNS0_21TraceProcessorContextE(%"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::TraceProcessorContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8perfetto15trace_processor11ArgsTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 2
  store %"class.perfetto::trace_processor::TraceProcessorContext"* %1, %"class.perfetto::trace_processor::TraceProcessorContext"** %6, align 8
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11ArgsTrackerD2Ev(%"class.perfetto::trace_processor::ArgsTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8perfetto15trace_processor11ArgsTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN8perfetto15trace_processor11ArgsTracker5FlushEv(%"class.perfetto::trace_processor::ArgsTracker"* %0)
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJPN8perfetto15trace_processor6ColumnEjNS4_10StringPool2IdEEEEmEENS_19__map_value_compareIS9_SA_NS_4lessIS9_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.322"* %3, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %7, align 8
  %9 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8 to i64
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #16
  br label %15

15:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11ArgsTrackerD0Ev(%"class.perfetto::trace_processor::ArgsTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8perfetto15trace_processor11ArgsTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN8perfetto15trace_processor11ArgsTracker5FlushEv(%"class.perfetto::trace_processor::ArgsTracker"* %0) #15
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJPN8perfetto15trace_processor6ColumnEjNS4_10StringPool2IdEEEEmEENS_19__map_value_compareIS9_SA_NS_4lessIS9_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.322"* %3, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %7, align 8
  %9 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8 to i64
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #16
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.perfetto::trace_processor::ArgsTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11ArgsTracker6AddArgEPNS0_6ColumnEjNS0_10StringPool2IdES5_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE(%"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::Column"*, i32, i32, i32, %"struct.perfetto::trace_processor::Variadic"* nocapture readonly byval(%"struct.perfetto::trace_processor::Variadic") align 8, i32) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %9, align 8
  %11 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %11, align 8
  %13 = icmp ult %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10, %12
  %14 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %12 to i64
  br i1 %13, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10, i64 0, i32 5
  %17 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 40, i1 false) #15
  store i32 1, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10, i64 1
  %19 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %18 to i64
  %20 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %9 to i64*
  store i64 %19, i64* %20, align 8
  br label %76

21:                                               ; preds = %7
  %22 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10 to i64
  %23 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %9 to i64*
  %24 = bitcast %"class.std::__1::vector"* %8 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = sdiv exact i64 %26, 40
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 461168601842738790
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #17
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %11 to i64*
  %34 = sub i64 %14, %25
  %35 = sdiv exact i64 %34, 40
  %36 = icmp ult i64 %35, 230584300921369395
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37, %32
  %43 = phi i64 [ %40, %37 ], [ 461168601842738790, %32 ]
  %44 = mul i64 %43, 40
  %45 = tail call i8* @_Znwm(i64 %44) #16
  %46 = bitcast i8* %45 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  br label %47

47:                                               ; preds = %42, %37
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %49, i64 %27
  %51 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %49, i64 %48
  %52 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %51 to i64
  %53 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %49, i64 %27, i32 5
  %54 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 40, i1 false) #15
  store i32 1, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50, i64 1
  %56 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %58 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %57, align 8
  %59 = load i64, i64* %23, align 8
  %60 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %58 to i64
  %61 = sub i64 %59, %60
  %62 = sdiv exact i64 %61, -40
  %63 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50, i64 %62
  %64 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %63 to i64
  %65 = icmp sgt i64 %61, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %47
  %67 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %63 to i8*
  %68 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %61, i1 false) #15
  %69 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %57, align 8
  br label %70

70:                                               ; preds = %66, %47
  %71 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %58, %47 ], [ %69, %66 ]
  store i64 %64, i64* %24, align 8
  store i64 %56, i64* %23, align 8
  store i64 %52, i64* %33, align 8
  %72 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #16
  %75 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %9, align 8
  br label %76

76:                                               ; preds = %15, %70, %73
  %77 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %18, %15 ], [ %55, %70 ], [ %75, %73 ]
  %78 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %77, i64 -1, i32 3
  store %"class.perfetto::trace_processor::Column"* %1, %"class.perfetto::trace_processor::Column"** %78, align 8
  %79 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %77, i64 -1, i32 4
  store i32 %2, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %77, i64 -1, i32 0, i32 0
  store i32 %3, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %77, i64 -1, i32 1, i32 0
  store i32 %4, i32* %81, align 4
  %82 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %77, i64 -1, i32 2
  %83 = bitcast %"struct.perfetto::trace_processor::Variadic"* %82 to i8*
  %84 = bitcast %"struct.perfetto::trace_processor::Variadic"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 8 %84, i64 16, i1 false)
  %85 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %77, i64 -1, i32 5
  store i32 %6, i32* %85, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11ArgsTracker5FlushEv(%"class.perfetto::trace_processor::ArgsTracker"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.anon, align 1
  %3 = alloca %"struct.perfetto::trace_processor::SqlValue", align 8
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %5, align 8
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %7, align 8
  %9 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %6, %8
  br i1 %9, label %82, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.anon, %class.anon* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  %12 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %6 to i64
  %13 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8 to i64
  %14 = sub i64 %13, %12
  %15 = sdiv exact i64 %14, 40
  %16 = icmp sgt i64 %14, 5120
  br i1 %16, label %17, label %28

17:                                               ; preds = %10
  %18 = icmp slt i64 %15, 230584300921369395
  %19 = select i1 %18, i64 %15, i64 230584300921369395
  br label %20

20:                                               ; preds = %25, %17
  %21 = phi i64 [ %26, %25 ], [ %19, %17 ]
  %22 = mul i64 %21, 40
  %23 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %22, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #15
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = lshr i64 %21, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %20

28:                                               ; preds = %25, %10
  call fastcc void @"_ZNSt3__113__stable_sortIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %6, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8, %class.anon* nonnull dereferenceable(1) %2, i64 %15, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* null, i64 0) #15
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %23 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  call fastcc void @"_ZNSt3__113__stable_sortIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %6, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8, %class.anon* nonnull dereferenceable(1) %2, i64 %15, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* nonnull %30, i64 %21) #15
  call void @_ZdlPv(i8* nonnull %23) #16
  br label %31

31:                                               ; preds = %28, %29
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  %32 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %7 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %4 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %31
  %39 = sdiv exact i64 %36, 40
  %40 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"struct.perfetto::trace_processor::SqlValue", %"struct.perfetto::trace_processor::SqlValue"* %3, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.perfetto::trace_processor::SqlValue", %"struct.perfetto::trace_processor::SqlValue"* %3, i64 0, i32 2
  %43 = bitcast %"struct.perfetto::trace_processor::SqlValue"* %3 to i8*
  %44 = bitcast %"struct.perfetto::trace_processor::SqlValue"* %3 to i64*
  br label %47

45:                                               ; preds = %70, %31
  %46 = phi i64 [ %35, %31 ], [ %78, %70 ]
  store i64 %46, i64* %32, align 8
  br label %82

47:                                               ; preds = %38, %70
  %48 = phi i64 [ %35, %38 ], [ %78, %70 ]
  %49 = phi i64 [ %39, %38 ], [ %80, %70 ]
  %50 = phi i64 [ 0, %38 ], [ %71, %70 ]
  %51 = phi i32 [ 0, %38 ], [ %59, %70 ]
  %52 = inttoptr i64 %48 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  %53 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, i64 %50, i32 3
  %54 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %53, align 8
  %55 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, i64 %50, i32 4
  %56 = load i32, i32* %55, align 8
  br label %57

57:                                               ; preds = %66, %47
  %58 = phi i32 [ %51, %47 ], [ %59, %66 ]
  %59 = add i32 %58, 1
  %60 = zext i32 %59 to i64
  %61 = icmp ugt i64 %49, %60
  br i1 %61, label %62, label %70

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, i64 %60, i32 3
  %64 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %63, align 8
  %65 = icmp eq %"class.perfetto::trace_processor::Column"* %54, %64
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, i64 %60, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %56, %68
  br i1 %69, label %57, label %70

70:                                               ; preds = %57, %62, %66
  %71 = zext i32 %59 to i64
  %72 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %40, align 8
  %73 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %72, i64 0, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.perfetto::trace_processor::GlobalArgsTracker"*, %"class.perfetto::trace_processor::GlobalArgsTracker"** %73, align 8
  %75 = call i32 @_ZN8perfetto15trace_processor17GlobalArgsTracker9AddArgSetERKNSt3__16vectorINS1_3ArgENS2_9allocatorIS4_EEEEjj(%"class.perfetto::trace_processor::GlobalArgsTracker"* %74, %"class.std::__1::vector"* dereferenceable(24) %4, i32 %51, i32 %59)
  %76 = zext i32 %75 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false) #15, !alias.scope !2
  store i64 0, i64* %41, align 8, !alias.scope !2
  store i64 %76, i64* %44, align 8, !alias.scope !2
  store i32 1, i32* %42, align 8, !alias.scope !2
  call void @_ZN8perfetto15trace_processor6Column3SetEjNS0_8SqlValueE(%"class.perfetto::trace_processor::Column"* %54, i32 %56, %"struct.perfetto::trace_processor::SqlValue"* nonnull byval(%"struct.perfetto::trace_processor::SqlValue") align 8 %3)
  %77 = load i64, i64* %32, align 8
  %78 = load i64, i64* %34, align 8
  %79 = sub i64 %77, %78
  %80 = sdiv exact i64 %79, 40
  %81 = icmp ugt i64 %80, %71
  br i1 %81, label %47, label %45

82:                                               ; preds = %1, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8perfetto15trace_processor17GlobalArgsTracker9AddArgSetERKNSt3__16vectorINS1_3ArgENS2_9allocatorIS4_EEEEjj(%"class.perfetto::trace_processor::GlobalArgsTracker"*, %"class.std::__1::vector"* dereferenceable(24), i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::vector.2", align 8
  %6 = alloca %"struct.perfetto::trace_processor::GlobalArgsTracker::ArgHasher", align 1
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"struct.perfetto::trace_processor::tables::ArgTable::Row", align 8
  %10 = bitcast %"class.std::__1::vector.2"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #15
  %14 = sub i32 %3, %2
  %15 = zext i32 %14 to i64
  %16 = bitcast i32** %13 to i64*
  %17 = bitcast %"class.std::__1::vector.2"* %5 to i64*
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %4
  %20 = bitcast i32** %12 to i64*
  %21 = shl nuw nsw i64 %15, 2
  %22 = tail call i8* @_Znwm(i64 %21) #16
  %23 = bitcast i8* %22 to i32*
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr inbounds i32, i32* %23, i64 %15
  %26 = ptrtoint i32* %25 to i64
  %27 = ptrtoint i8* %22 to i64
  store i64 %27, i64* %17, align 8
  store i64 %24, i64* %20, align 8
  store i64 %26, i64* %16, align 8
  %28 = bitcast i8* %22 to i32*
  br label %29

29:                                               ; preds = %19, %4
  %30 = phi i32* [ null, %4 ], [ %23, %19 ]
  %31 = phi i32* [ null, %4 ], [ %28, %19 ]
  %32 = phi i64 [ 0, %4 ], [ %24, %19 ]
  %33 = phi i64 [ 0, %4 ], [ %27, %19 ]
  %34 = icmp ugt i32 %3, %2
  br i1 %34, label %35, label %39

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %37 = bitcast i32** %12 to i64*
  %38 = zext i32 %2 to i64
  br label %46

39:                                               ; preds = %127, %29
  %40 = phi i32* [ %31, %29 ], [ %130, %127 ]
  %41 = phi i32* [ %30, %29 ], [ %129, %127 ]
  %42 = icmp eq i32* %40, %41
  br i1 %42, label %135, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::ArgHasher", %"struct.perfetto::trace_processor::GlobalArgsTracker::ArgHasher"* %6, i64 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  br label %194

46:                                               ; preds = %127, %35
  %47 = phi i32* [ %30, %35 ], [ %129, %127 ]
  %48 = phi i32* [ %31, %35 ], [ %130, %127 ]
  %49 = phi i64 [ %32, %35 ], [ %128, %127 ]
  %50 = phi i64 [ %33, %35 ], [ %134, %127 ]
  %51 = phi i64 [ %38, %35 ], [ %131, %127 ]
  %52 = icmp eq i32* %48, %47
  br i1 %52, label %71, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds i32, i32* %47, i64 -1
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %36, align 8
  %58 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %57, i64 %51, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %57, i64 %56, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %57, i64 %51, i32 5
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = ptrtoint i32* %47 to i64
  br label %127

69:                                               ; preds = %63
  store i32* %54, i32** %12, align 8
  %70 = ptrtoint i32* %54 to i64
  br label %71

71:                                               ; preds = %69, %53, %46
  %72 = phi i64 [ %70, %69 ], [ %49, %53 ], [ %49, %46 ]
  %73 = phi i32* [ %54, %69 ], [ %47, %53 ], [ %47, %46 ]
  %74 = load i32*, i32** %13, align 8
  %75 = icmp eq i32* %73, %74
  br i1 %75, label %81, label %76

76:                                               ; preds = %71
  %77 = trunc i64 %51 to i32
  store i32 %77, i32* %73, align 4
  %78 = getelementptr inbounds i32, i32* %73, i64 1
  %79 = ptrtoint i32* %78 to i64
  store i64 %79, i64* %37, align 8
  %80 = load i32*, i32** %11, align 8
  br label %127

81:                                               ; preds = %71
  %82 = ptrtoint i32* %74 to i64
  %83 = sub i64 %82, %50
  %84 = ashr exact i64 %83, 2
  %85 = add nsw i64 %84, 1
  %86 = icmp ugt i64 %85, 4611686018427387903
  br i1 %86, label %87, label %89

87:                                               ; preds = %81
  %88 = bitcast %"class.std::__1::vector.2"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %88) #17
  unreachable

89:                                               ; preds = %81
  %90 = icmp ult i64 %84, 2305843009213693951
  br i1 %90, label %91, label %99

91:                                               ; preds = %89
  %92 = ashr exact i64 %83, 1
  %93 = icmp ult i64 %92, %85
  %94 = select i1 %93, i64 %85, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %91
  %97 = icmp ugt i64 %94, 4611686018427387903
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  tail call void @abort() #17
  unreachable

99:                                               ; preds = %96, %89
  %100 = phi i64 [ %94, %96 ], [ 4611686018427387903, %89 ]
  %101 = shl i64 %100, 2
  %102 = tail call i8* @_Znwm(i64 %101) #16
  %103 = bitcast i8* %102 to i32*
  br label %104

104:                                              ; preds = %99, %91
  %105 = phi i64 [ %100, %99 ], [ 0, %91 ]
  %106 = phi i32* [ %103, %99 ], [ null, %91 ]
  %107 = getelementptr inbounds i32, i32* %106, i64 %84
  %108 = getelementptr inbounds i32, i32* %106, i64 %105
  %109 = ptrtoint i32* %108 to i64
  %110 = trunc i64 %51 to i32
  store i32 %110, i32* %107, align 4
  %111 = getelementptr inbounds i32, i32* %107, i64 1
  %112 = ptrtoint i32* %111 to i64
  %113 = ptrtoint i32* %48 to i64
  %114 = sub i64 %72, %113
  %115 = ashr exact i64 %114, 2
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds i32, i32* %107, i64 %116
  %118 = ptrtoint i32* %117 to i64
  %119 = icmp sgt i64 %114, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %104
  %121 = bitcast i32* %117 to i8*
  %122 = bitcast i32* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %122, i64 %114, i1 false) #15
  br label %123

123:                                              ; preds = %120, %104
  store i64 %118, i64* %17, align 8
  store i64 %112, i64* %37, align 8
  store i64 %109, i64* %16, align 8
  %124 = icmp eq i32* %48, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %126) #16
  br label %127

127:                                              ; preds = %67, %125, %123, %76
  %128 = phi i64 [ %68, %67 ], [ %112, %125 ], [ %112, %123 ], [ %79, %76 ]
  %129 = phi i32* [ %47, %67 ], [ %111, %125 ], [ %111, %123 ], [ %78, %76 ]
  %130 = phi i32* [ %48, %67 ], [ %117, %125 ], [ %117, %123 ], [ %80, %76 ]
  %131 = add nuw nsw i64 %51, 1
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %132, %3
  %134 = ptrtoint i32* %130 to i64
  br i1 %133, label %39, label %46

135:                                              ; preds = %194, %39
  %136 = phi i64 [ -3750763034362895579, %39 ], [ %231, %194 ]
  %137 = getelementptr inbounds %"class.perfetto::trace_processor::GlobalArgsTracker", %"class.perfetto::trace_processor::GlobalArgsTracker"* %0, i64 0, i32 1
  %138 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %137, align 8
  %139 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %138, i64 0, i32 1, i32 0, i32 0, i32 0
  %140 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %139, align 8
  %141 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %140, i64 0, i32 18
  %142 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #15
  store i64 %136, i64* %7, align 8
  %143 = getelementptr inbounds %"class.perfetto::trace_processor::GlobalArgsTracker", %"class.perfetto::trace_processor::GlobalArgsTracker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %266, label %146

146:                                              ; preds = %135
  %147 = call i64 @llvm.ctpop.i64(i64 %144) #15, !range !5
  %148 = icmp ugt i64 %147, 1
  br i1 %148, label %152, label %149

149:                                              ; preds = %146
  %150 = add i64 %144, -1
  %151 = and i64 %150, %136
  br label %156

152:                                              ; preds = %146
  %153 = icmp ult i64 %136, %144
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = urem i64 %136, %144
  br label %156

156:                                              ; preds = %154, %152, %149
  %157 = phi i64 [ %151, %149 ], [ %155, %154 ], [ %136, %152 ]
  %158 = getelementptr inbounds %"class.perfetto::trace_processor::GlobalArgsTracker", %"class.perfetto::trace_processor::GlobalArgsTracker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %159, i64 %157
  %161 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.193"* %161, null
  br i1 %162, label %266, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %161, i64 0, i32 0
  %165 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %164, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base.193"* %165, null
  br i1 %166, label %266, label %167

167:                                              ; preds = %163
  %168 = add i64 %144, -1
  br label %169

169:                                              ; preds = %190, %167
  %170 = phi %"struct.std::__1::__hash_node_base.193"* [ %165, %167 ], [ %192, %190 ]
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %170, i64 1
  %172 = bitcast %"struct.std::__1::__hash_node_base.193"* %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = icmp eq i64 %173, %136
  br i1 %174, label %185, label %175

175:                                              ; preds = %169
  br i1 %148, label %178, label %176

176:                                              ; preds = %175
  %177 = and i64 %173, %168
  br label %182

178:                                              ; preds = %175
  %179 = icmp ult i64 %173, %144
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = urem i64 %173, %144
  br label %182

182:                                              ; preds = %180, %178, %176
  %183 = phi i64 [ %177, %176 ], [ %181, %180 ], [ %173, %178 ]
  %184 = icmp eq i64 %183, %157
  br i1 %184, label %190, label %266

185:                                              ; preds = %169
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %170, i64 2
  %187 = bitcast %"struct.std::__1::__hash_node_base.193"* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = icmp eq i64 %188, %136
  br i1 %189, label %234, label %190

190:                                              ; preds = %185, %182
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %170, i64 0, i32 0
  %192 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.193"* %192, null
  br i1 %193, label %266, label %169

194:                                              ; preds = %43, %194
  %195 = phi i64 [ -3750763034362895579, %43 ], [ %231, %194 ]
  %196 = phi i32* [ %40, %43 ], [ %232, %194 ]
  %197 = load i32, i32* %196, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #15
  %198 = zext i32 %197 to i64
  %199 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %45, align 8
  %200 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %199, i64 %198
  %201 = call i64 @_ZNK8perfetto15trace_processor17GlobalArgsTracker9ArgHasherclERKNS1_3ArgE(%"struct.perfetto::trace_processor::GlobalArgsTracker::ArgHasher"* nonnull %6, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* dereferenceable(40) %200) #15
  %202 = and i64 %201, 255
  %203 = xor i64 %202, %195
  %204 = mul i64 %203, 1099511628211
  %205 = lshr i64 %201, 8
  %206 = and i64 %205, 255
  %207 = xor i64 %204, %206
  %208 = mul i64 %207, 1099511628211
  %209 = lshr i64 %201, 16
  %210 = and i64 %209, 255
  %211 = xor i64 %208, %210
  %212 = mul i64 %211, 1099511628211
  %213 = lshr i64 %201, 24
  %214 = and i64 %213, 255
  %215 = xor i64 %212, %214
  %216 = mul i64 %215, 1099511628211
  %217 = lshr i64 %201, 32
  %218 = and i64 %217, 255
  %219 = xor i64 %216, %218
  %220 = mul i64 %219, 1099511628211
  %221 = lshr i64 %201, 40
  %222 = and i64 %221, 255
  %223 = xor i64 %220, %222
  %224 = mul i64 %223, 1099511628211
  %225 = lshr i64 %201, 48
  %226 = and i64 %225, 255
  %227 = xor i64 %224, %226
  %228 = mul i64 %227, 1099511628211
  %229 = lshr i64 %201, 56
  %230 = xor i64 %228, %229
  %231 = mul i64 %230, 1099511628211
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #15
  %232 = getelementptr inbounds i32, i32* %196, i64 1
  %233 = icmp eq i32* %232, %41
  br i1 %233, label %135, label %194

234:                                              ; preds = %185
  %235 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %140, i64 0, i32 18, i32 0, i32 0, i32 2, i32 0, i32 0
  %236 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %235, align 8
  %237 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %236, i64 2
  %238 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %170, i64 3
  %239 = bitcast %"struct.std::__1::__hash_node_base.193"* %238 to i32*
  %240 = load i32, i32* %239, align 8
  %241 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %236, i64 2, i32 2
  %242 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %241 to %"class.perfetto::trace_processor::NullableVector.106"**
  %243 = load %"class.perfetto::trace_processor::NullableVector.106"*, %"class.perfetto::trace_processor::NullableVector.106"** %242, align 8
  %244 = call dereferenceable(104) %"class.perfetto::trace_processor::RowMap"* @_ZNK8perfetto15trace_processor6Column7row_mapEv(%"class.perfetto::trace_processor::Column"* %237) #15
  %245 = call i32 @_ZNK8perfetto15trace_processor6RowMap3GetEj(%"class.perfetto::trace_processor::RowMap"* %244, i32 %240) #15
  %246 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %243, i64 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %249, label %252

249:                                              ; preds = %234
  %250 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %243, i64 0, i32 4
  %251 = call i32 @_ZNK8perfetto15trace_processor6RowMap3GetEj(%"class.perfetto::trace_processor::RowMap"* %250, i32 %245) #15
  br label %252

252:                                              ; preds = %234, %249
  %253 = phi i32 [ %251, %249 ], [ %245, %234 ]
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %243, i64 0, i32 3, i32 0, i32 1
  %256 = load i64, i64* %255, align 8
  %257 = add i64 %256, %254
  %258 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %243, i64 0, i32 3, i32 0, i32 0, i32 1
  %259 = load i32**, i32*** %258, align 8
  %260 = lshr i64 %257, 10
  %261 = getelementptr inbounds i32*, i32** %259, i64 %260
  %262 = load i32*, i32** %261, align 8
  %263 = and i64 %257, 1023
  %264 = getelementptr inbounds i32, i32* %262, i64 %263
  %265 = load i32, i32* %264, align 4
  br label %340

266:                                              ; preds = %182, %190, %156, %135, %163
  %267 = getelementptr inbounds %"class.perfetto::trace_processor::GlobalArgsTracker", %"class.perfetto::trace_processor::GlobalArgsTracker"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = trunc i64 %268 to i32
  %270 = add i32 %269, 1
  %271 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %271) #15
  %272 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %140, i64 0, i32 18, i32 0, i32 0, i32 3
  %273 = load i32, i32* %272, align 8
  store i32 %273, i32* %8, align 4
  %274 = getelementptr inbounds %"class.perfetto::trace_processor::GlobalArgsTracker", %"class.perfetto::trace_processor::GlobalArgsTracker"* %0, i64 0, i32 0, i32 0
  %275 = call { %"struct.std::__1::__hash_node_base.193"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRmjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.189"* %274, i64* nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %271) #15
  %276 = load i32*, i32** %11, align 8
  %277 = load i32*, i32** %12, align 8
  %278 = icmp eq i32* %276, %277
  br i1 %278, label %343, label %279

279:                                              ; preds = %266
  %280 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %281 = bitcast %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9 to i8*
  %282 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 1
  %284 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 2, i32 0
  %285 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 3, i32 0
  %286 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 8, i32 0
  %288 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %289 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %291 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %9, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %293 = bitcast double* %292 to i64*
  br label %294

294:                                              ; preds = %279, %330
  %295 = phi i32* [ %276, %279 ], [ %338, %330 ]
  %296 = load i32, i32* %295, align 4
  %297 = zext i32 %296 to i64
  %298 = load %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"** %280, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %281) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %281, i8* align 8 bitcast (<{ %"struct.perfetto::trace_processor::macros_internal::RootParentTable::Row", i32, %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id", [4 x i8], { { { { i8, [7 x i8], %union.anon.336 } } } }, { { { { i8, [3 x i8], %union.anon.341 } } } }, { { { { i8, [7 x i8], %union.anon.346 } } } }, %"struct.perfetto::trace_processor::StringPool::Id", [4 x i8] }>* @__const._ZN8perfetto15trace_processor17GlobalArgsTracker9AddArgSetERKNSt3__16vectorINS1_3ArgENS2_9allocatorIS4_EEEEjj.row to i8*), i64 72, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %286, i8 0, i64 40, i1 false) #15
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8** %282, align 8
  store i32 0, i32* %284, align 4
  store i32 0, i32* %285, align 8
  store i32 0, i32* %287, align 8
  store i32 %270, i32* %283, align 8
  %299 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 0, i32 0
  %300 = load i32, i32* %299, align 4
  store i32 %300, i32* %284, align 4
  %301 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 1, i32 0
  %302 = load i32, i32* %301, align 4
  store i32 %302, i32* %285, align 8
  %303 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 2, i32 0
  %304 = load i64, i64* %303, align 8
  switch i64 %304, label %330 [
    i64 0, label %305
    i64 1, label %308
    i64 2, label %311
    i64 3, label %315
    i64 4, label %318
    i64 5, label %321
    i64 6, label %326
  ]

305:                                              ; preds = %294
  %306 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 2, i32 1, i32 0
  %307 = load i64, i64* %306, align 8
  store i8 1, i8* %286, align 8
  store i64 %307, i64* %290, align 8
  br label %330

308:                                              ; preds = %294
  %309 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 2, i32 1, i32 0
  %310 = load i64, i64* %309, align 8
  store i8 1, i8* %286, align 8
  store i64 %310, i64* %290, align 8
  br label %330

311:                                              ; preds = %294
  %312 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 2, i32 1
  %313 = bitcast %union.anon* %312 to i32*
  %314 = load i32, i32* %313, align 4
  store i32 %314, i32* %289, align 4
  store i8 1, i8* %288, align 8
  br label %330

315:                                              ; preds = %294
  %316 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 2, i32 1, i32 0
  %317 = load i64, i64* %316, align 8
  store i64 %317, i64* %293, align 8
  store i8 1, i8* %291, align 8
  br label %330

318:                                              ; preds = %294
  %319 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 2, i32 1, i32 0
  %320 = load i64, i64* %319, align 8
  store i8 1, i8* %286, align 8
  store i64 %320, i64* %290, align 8
  br label %330

321:                                              ; preds = %294
  %322 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 2, i32 1
  %323 = bitcast %union.anon* %322 to i8*
  %324 = load i8, i8* %323, align 1, !range !6
  store i8 1, i8* %286, align 8
  %325 = zext i8 %324 to i64
  store i64 %325, i64* %290, align 8
  br label %330

326:                                              ; preds = %294
  %327 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %298, i64 %297, i32 2, i32 1
  %328 = bitcast %union.anon* %327 to i32*
  %329 = load i32, i32* %328, align 4
  store i32 %329, i32* %289, align 4
  store i8 1, i8* %288, align 8
  br label %330

330:                                              ; preds = %326, %315, %311, %294, %321, %318, %308, %305
  %331 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %137, align 8
  %332 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %331, i64 0, i32 1, i32 0, i32 0, i32 0
  %333 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %332, align 8
  %334 = load i64, i64* %303, align 8
  %335 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %333, i64 0, i32 55, i32 0, i64 %334, i32 0
  %336 = load i32, i32* %335, align 4
  store i32 %336, i32* %287, align 8
  %337 = call i64 @_ZN8perfetto15trace_processor6tables8ArgTable6InsertERKNS2_3RowE(%"class.perfetto::trace_processor::tables::ArgTable"* %141, %"struct.perfetto::trace_processor::tables::ArgTable::Row"* nonnull dereferenceable(72) %9)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %281) #15
  %338 = getelementptr inbounds i32, i32* %295, i64 1
  %339 = icmp eq i32* %338, %277
  br i1 %339, label %340, label %294

340:                                              ; preds = %330, %252
  %341 = phi i32 [ %265, %252 ], [ %270, %330 ]
  %342 = load i32*, i32** %11, align 8
  br label %343

343:                                              ; preds = %340, %266
  %344 = phi i32* [ %342, %340 ], [ %276, %266 ]
  %345 = phi i32 [ %341, %340 ], [ %270, %266 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #15
  %346 = icmp eq i32* %344, null
  br i1 %346, label %351, label %347

347:                                              ; preds = %343
  %348 = ptrtoint i32* %344 to i64
  %349 = bitcast i32** %12 to i64*
  store i64 %348, i64* %349, align 8
  %350 = bitcast i32* %344 to i8*
  call void @_ZdlPv(i8* %350) #16
  br label %351

351:                                              ; preds = %343, %347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  ret i32 %345
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor6Column3SetEjNS0_8SqlValueE(%"class.perfetto::trace_processor::Column"*, i32, %"struct.perfetto::trace_processor::SqlValue"* byval(%"struct.perfetto::trace_processor::SqlValue") align 8) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 6
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0)) #15
  %9 = tail call i32* @__errno_location() #18
  %10 = load i32, i32* %9, align 4
  %11 = tail call i8* @strerror(i32 %10) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %8, i32 590, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i32 %10, i8* %11) #15
  tail call void @llvm.trap() #15
  unreachable

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.perfetto::trace_processor::SqlValue", %"struct.perfetto::trace_processor::SqlValue"* %2, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %5 to i64
  %16 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN8perfetto15trace_processor6Column3SetEjNS0_8SqlValueE, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %24, label %19, !prof !7

19:                                               ; preds = %12
  %20 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0))
  %21 = tail call i32* @__errno_location() #18
  %22 = load i32, i32* %21, align 4
  %23 = tail call i8* @strerror(i32 %22) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %20, i32 240, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i32 %22, i8* %23) #15
  tail call void @llvm.trap()
  unreachable

24:                                               ; preds = %12
  switch i32 %5, label %61 [
    i32 0, label %25
    i32 1, label %32
    i32 2, label %39
    i32 3, label %45
    i32 4, label %51
    i32 5, label %56
  ]

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %0, i64 0, i32 2
  %27 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %26 to %"class.perfetto::trace_processor::NullableVector.117"**
  %28 = load %"class.perfetto::trace_processor::NullableVector.117"*, %"class.perfetto::trace_processor::NullableVector.117"** %27, align 8
  %29 = bitcast %"struct.perfetto::trace_processor::SqlValue"* %2 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  tail call void @_ZN8perfetto15trace_processor14NullableVectorIiE3SetEji(%"class.perfetto::trace_processor::NullableVector.117"* %28, i32 %1, i32 %31)
  br label %61

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %0, i64 0, i32 2
  %34 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %33 to %"class.perfetto::trace_processor::NullableVector.106"**
  %35 = load %"class.perfetto::trace_processor::NullableVector.106"*, %"class.perfetto::trace_processor::NullableVector.106"** %34, align 8
  %36 = bitcast %"struct.perfetto::trace_processor::SqlValue"* %2 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  tail call void @_ZN8perfetto15trace_processor14NullableVectorIjE3SetEjj(%"class.perfetto::trace_processor::NullableVector.106"* %35, i32 %1, i32 %38)
  br label %61

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %0, i64 0, i32 2
  %41 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %40 to %"class.perfetto::trace_processor::NullableVector.92"**
  %42 = load %"class.perfetto::trace_processor::NullableVector.92"*, %"class.perfetto::trace_processor::NullableVector.92"** %41, align 8
  %43 = bitcast %"struct.perfetto::trace_processor::SqlValue"* %2 to i64*
  %44 = load i64, i64* %43, align 8
  tail call void @_ZN8perfetto15trace_processor14NullableVectorIlE3SetEjl(%"class.perfetto::trace_processor::NullableVector.92"* %42, i32 %1, i64 %44)
  br label %61

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %0, i64 0, i32 2
  %47 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %46 to %"class.perfetto::trace_processor::NullableVector.131"**
  %48 = load %"class.perfetto::trace_processor::NullableVector.131"*, %"class.perfetto::trace_processor::NullableVector.131"** %47, align 8
  %49 = bitcast %"struct.perfetto::trace_processor::SqlValue"* %2 to double*
  %50 = load double, double* %49, align 8
  tail call void @_ZN8perfetto15trace_processor14NullableVectorIdE3SetEjd(%"class.perfetto::trace_processor::NullableVector.131"* %48, i32 %1, double %50)
  br label %61

51:                                               ; preds = %24
  %52 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0))
  %53 = tail call i32* @__errno_location() #18
  %54 = load i32, i32* %53, align 4
  %55 = tail call i8* @strerror(i32 %54) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %52, i32 263, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 %54, i8* %55) #15
  tail call void @llvm.trap()
  unreachable

56:                                               ; preds = %24
  %57 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0))
  %58 = tail call i32* @__errno_location() #18
  %59 = load i32, i32* %58, align 4
  %60 = tail call i8* @strerror(i32 %59) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %57, i32 266, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0), i32 %59, i8* %60) #15
  tail call void @llvm.trap()
  unreachable

61:                                               ; preds = %24, %45, %39, %32, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterC2EPS1_PNS0_6ColumnEj(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nocapture, %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::Column"*, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8perfetto15trace_processor11ArgsTracker13BoundInserterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 1
  store %"class.perfetto::trace_processor::ArgsTracker"* %1, %"class.perfetto::trace_processor::ArgsTracker"** %6, align 8
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 2
  store %"class.perfetto::trace_processor::Column"* %2, %"class.perfetto::trace_processor::Column"** %7, align 8
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 3
  store i32 %3, i32* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterC2EOS2_(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nocapture, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8perfetto15trace_processor11ArgsTracker13BoundInserterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %1, i64 0, i32 1
  %6 = bitcast %"class.perfetto::trace_processor::ArgsTracker"** %4 to i8*
  %7 = bitcast %"class.perfetto::trace_processor::ArgsTracker"** %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserteraSEOS2_(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* returned, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %1, i64 0, i32 1
  %5 = bitcast %"class.perfetto::trace_processor::ArgsTracker"** %3 to i8*
  %6 = bitcast %"class.perfetto::trace_processor::ArgsTracker"** %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 20, i1 false)
  ret %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32) unnamed_addr #0 comdat align 2 {
  %7 = alloca %"struct.perfetto::trace_processor::Variadic", align 8
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 1
  %9 = load %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::ArgsTracker"** %8, align 8
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 2
  %11 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %10, align 8
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.perfetto::trace_processor::Variadic", %"struct.perfetto::trace_processor::Variadic"* %7, i64 0, i32 0
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.perfetto::trace_processor::Variadic", %"struct.perfetto::trace_processor::Variadic"* %7, i64 0, i32 1, i32 0
  store i64 %4, i64* %15, align 8
  tail call void @_ZN8perfetto15trace_processor11ArgsTracker6AddArgEPNS0_6ColumnEjNS0_10StringPool2IdES5_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE(%"class.perfetto::trace_processor::ArgsTracker"* %9, %"class.perfetto::trace_processor::Column"* %11, i32 %13, i32 %1, i32 %2, %"struct.perfetto::trace_processor::Variadic"* nonnull byval(%"struct.perfetto::trace_processor::Variadic") align 8 %7, i32 %5)
  ret %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK8perfetto15trace_processor17GlobalArgsTracker9ArgHasherclERKNS1_3ArgE(%"struct.perfetto::trace_processor::GlobalArgsTracker::ArgHasher"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 255
  %6 = zext i32 %5 to i64
  %7 = xor i64 %6, -3750763034362895579
  %8 = mul i64 %7, 1099511628211
  %9 = lshr i32 %4, 8
  %10 = and i32 %9, 255
  %11 = zext i32 %10 to i64
  %12 = xor i64 %8, %11
  %13 = mul i64 %12, 1099511628211
  %14 = lshr i32 %4, 16
  %15 = and i32 %14, 255
  %16 = zext i32 %15 to i64
  %17 = xor i64 %13, %16
  %18 = mul i64 %17, 1099511628211
  %19 = lshr i32 %4, 24
  %20 = zext i32 %19 to i64
  %21 = xor i64 %18, %20
  %22 = mul i64 %21, 1099511628211
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 2, i32 0
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %208 [
    i64 0, label %25
    i64 1, label %58
    i64 2, label %91
    i64 3, label %113
    i64 4, label %146
    i64 5, label %179
    i64 6, label %186
  ]

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 2, i32 1, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 255
  %29 = xor i64 %28, %22
  %30 = mul i64 %29, 1099511628211
  %31 = lshr i64 %27, 8
  %32 = and i64 %31, 255
  %33 = xor i64 %30, %32
  %34 = mul i64 %33, 1099511628211
  %35 = lshr i64 %27, 16
  %36 = and i64 %35, 255
  %37 = xor i64 %34, %36
  %38 = mul i64 %37, 1099511628211
  %39 = lshr i64 %27, 24
  %40 = and i64 %39, 255
  %41 = xor i64 %38, %40
  %42 = mul i64 %41, 1099511628211
  %43 = lshr i64 %27, 32
  %44 = and i64 %43, 255
  %45 = xor i64 %42, %44
  %46 = mul i64 %45, 1099511628211
  %47 = lshr i64 %27, 40
  %48 = and i64 %47, 255
  %49 = xor i64 %46, %48
  %50 = mul i64 %49, 1099511628211
  %51 = lshr i64 %27, 48
  %52 = and i64 %51, 255
  %53 = xor i64 %50, %52
  %54 = mul i64 %53, 1099511628211
  %55 = lshr i64 %27, 56
  %56 = xor i64 %54, %55
  %57 = mul i64 %56, 1099511628211
  br label %208

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 2, i32 1, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 255
  %62 = xor i64 %61, %22
  %63 = mul i64 %62, 1099511628211
  %64 = lshr i64 %60, 8
  %65 = and i64 %64, 255
  %66 = xor i64 %63, %65
  %67 = mul i64 %66, 1099511628211
  %68 = lshr i64 %60, 16
  %69 = and i64 %68, 255
  %70 = xor i64 %67, %69
  %71 = mul i64 %70, 1099511628211
  %72 = lshr i64 %60, 24
  %73 = and i64 %72, 255
  %74 = xor i64 %71, %73
  %75 = mul i64 %74, 1099511628211
  %76 = lshr i64 %60, 32
  %77 = and i64 %76, 255
  %78 = xor i64 %75, %77
  %79 = mul i64 %78, 1099511628211
  %80 = lshr i64 %60, 40
  %81 = and i64 %80, 255
  %82 = xor i64 %79, %81
  %83 = mul i64 %82, 1099511628211
  %84 = lshr i64 %60, 48
  %85 = and i64 %84, 255
  %86 = xor i64 %83, %85
  %87 = mul i64 %86, 1099511628211
  %88 = lshr i64 %60, 56
  %89 = xor i64 %87, %88
  %90 = mul i64 %89, 1099511628211
  br label %208

91:                                               ; preds = %2
  %92 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 2, i32 1
  %93 = bitcast %union.anon* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 255
  %96 = zext i32 %95 to i64
  %97 = xor i64 %22, %96
  %98 = mul i64 %97, 1099511628211
  %99 = lshr i32 %94, 8
  %100 = and i32 %99, 255
  %101 = zext i32 %100 to i64
  %102 = xor i64 %98, %101
  %103 = mul i64 %102, 1099511628211
  %104 = lshr i32 %94, 16
  %105 = and i32 %104, 255
  %106 = zext i32 %105 to i64
  %107 = xor i64 %103, %106
  %108 = mul i64 %107, 1099511628211
  %109 = lshr i32 %94, 24
  %110 = zext i32 %109 to i64
  %111 = xor i64 %108, %110
  %112 = mul i64 %111, 1099511628211
  br label %208

113:                                              ; preds = %2
  %114 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 2, i32 1, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 255
  %117 = xor i64 %116, %22
  %118 = mul i64 %117, 1099511628211
  %119 = lshr i64 %115, 8
  %120 = and i64 %119, 255
  %121 = xor i64 %118, %120
  %122 = mul i64 %121, 1099511628211
  %123 = lshr i64 %115, 16
  %124 = and i64 %123, 255
  %125 = xor i64 %122, %124
  %126 = mul i64 %125, 1099511628211
  %127 = lshr i64 %115, 24
  %128 = and i64 %127, 255
  %129 = xor i64 %126, %128
  %130 = mul i64 %129, 1099511628211
  %131 = lshr i64 %115, 32
  %132 = and i64 %131, 255
  %133 = xor i64 %130, %132
  %134 = mul i64 %133, 1099511628211
  %135 = lshr i64 %115, 40
  %136 = and i64 %135, 255
  %137 = xor i64 %134, %136
  %138 = mul i64 %137, 1099511628211
  %139 = lshr i64 %115, 48
  %140 = and i64 %139, 255
  %141 = xor i64 %138, %140
  %142 = mul i64 %141, 1099511628211
  %143 = lshr i64 %115, 56
  %144 = xor i64 %142, %143
  %145 = mul i64 %144, 1099511628211
  br label %208

146:                                              ; preds = %2
  %147 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 2, i32 1, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 255
  %150 = xor i64 %149, %22
  %151 = mul i64 %150, 1099511628211
  %152 = lshr i64 %148, 8
  %153 = and i64 %152, 255
  %154 = xor i64 %151, %153
  %155 = mul i64 %154, 1099511628211
  %156 = lshr i64 %148, 16
  %157 = and i64 %156, 255
  %158 = xor i64 %155, %157
  %159 = mul i64 %158, 1099511628211
  %160 = lshr i64 %148, 24
  %161 = and i64 %160, 255
  %162 = xor i64 %159, %161
  %163 = mul i64 %162, 1099511628211
  %164 = lshr i64 %148, 32
  %165 = and i64 %164, 255
  %166 = xor i64 %163, %165
  %167 = mul i64 %166, 1099511628211
  %168 = lshr i64 %148, 40
  %169 = and i64 %168, 255
  %170 = xor i64 %167, %169
  %171 = mul i64 %170, 1099511628211
  %172 = lshr i64 %148, 48
  %173 = and i64 %172, 255
  %174 = xor i64 %171, %173
  %175 = mul i64 %174, 1099511628211
  %176 = lshr i64 %148, 56
  %177 = xor i64 %175, %176
  %178 = mul i64 %177, 1099511628211
  br label %208

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 2, i32 1
  %181 = bitcast %union.anon* %180 to i8*
  %182 = load i8, i8* %181, align 8, !range !6
  %183 = zext i8 %182 to i64
  %184 = xor i64 %22, %183
  %185 = mul i64 %184, 1099511628211
  br label %208

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 0, i32 2, i32 1
  %188 = bitcast %union.anon* %187 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, 255
  %191 = zext i32 %190 to i64
  %192 = xor i64 %22, %191
  %193 = mul i64 %192, 1099511628211
  %194 = lshr i32 %189, 8
  %195 = and i32 %194, 255
  %196 = zext i32 %195 to i64
  %197 = xor i64 %193, %196
  %198 = mul i64 %197, 1099511628211
  %199 = lshr i32 %189, 16
  %200 = and i32 %199, 255
  %201 = zext i32 %200 to i64
  %202 = xor i64 %198, %201
  %203 = mul i64 %202, 1099511628211
  %204 = lshr i32 %189, 24
  %205 = zext i32 %204 to i64
  %206 = xor i64 %203, %205
  %207 = mul i64 %206, 1099511628211
  br label %208

208:                                              ; preds = %2, %186, %179, %146, %113, %91, %58, %25
  %209 = phi i64 [ %22, %2 ], [ %207, %186 ], [ %185, %179 ], [ %178, %146 ], [ %145, %113 ], [ %112, %91 ], [ %90, %58 ], [ %57, %25 ]
  ret i64 %209
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN8perfetto15trace_processor6tables8ArgTable6InsertERKNS2_3RowE(%"class.perfetto::trace_processor::tables::ArgTable"*, %"struct.perfetto::trace_processor::tables::ArgTable::Row"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.perfetto::base::Optional", align 8
  %4 = alloca %"class.perfetto::base::Optional.342", align 8
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 1
  %8 = load %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::macros_internal::RootParentTable"** %7, align 8
  %9 = icmp eq %"class.perfetto::trace_processor::macros_internal::RootParentTable"* %8, null
  br i1 %9, label %10, label %90

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 0, i32 4
  %12 = load %"class.perfetto::trace_processor::StringPool"*, %"class.perfetto::trace_processor::StringPool"** %11, align 8
  %13 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = tail call i64 @strlen(i8* %14) #19
  %16 = tail call i32 @_ZN8perfetto15trace_processor10StringPool12InternStringENS_4base10StringViewE(%"class.perfetto::trace_processor::StringPool"* %12, i8* %14, i64 %15)
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 1, i32 3, i32 0, i32 0, i32 2
  %18 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 1, i32 3, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = icmp eq i64 %23, 0
  %25 = shl i64 %23, 7
  %26 = add i64 %25, -1
  %27 = select i1 %24, i64 0, i64 %26
  %28 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 1, i32 3, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 1, i32 3, i32 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %29
  %33 = icmp eq i64 %27, %32
  %34 = inttoptr i64 %22 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %35 = inttoptr i64 %19 to %"struct.perfetto::trace_processor::StringPool::Id"**
  br i1 %33, label %36, label %43

36:                                               ; preds = %10
  %37 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 1, i32 3
  tail call void @_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %37) #15
  %38 = load i64, i64* %30, align 8
  %39 = load i64, i64* %28, align 8
  %40 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %20, align 8
  %41 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %17, align 8
  %42 = add i64 %39, %38
  br label %43

43:                                               ; preds = %36, %10
  %44 = phi i64 [ %42, %36 ], [ %32, %10 ]
  %45 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %41, %36 ], [ %35, %10 ]
  %46 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %40, %36 ], [ %34, %10 ]
  %47 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %45, %46
  br i1 %47, label %54, label %48

48:                                               ; preds = %43
  %49 = lshr i64 %44, 10
  %50 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %46, i64 %49
  %51 = load %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %50, align 8
  %52 = and i64 %44, 1023
  %53 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %51, i64 %52
  br label %54

54:                                               ; preds = %43, %48
  %55 = phi %"struct.perfetto::trace_processor::StringPool::Id"* [ %53, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %55, i64 0, i32 0
  store i32 %16, i32* %56, align 4
  %57 = load i64, i64* %30, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %30, align 8
  %59 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 1, i32 4
  %60 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 1, i32 5
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, 1
  store i32 %62, i32* %60, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %59, i32 %61) #15
  %63 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0
  tail call void @_ZN8perfetto15trace_processor15macros_internal10MacroTable30UpdateRowMapsAfterParentInsertEv(%"class.perfetto::trace_processor::macros_internal::MacroTable"* %63)
  %64 = getelementptr inbounds %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ArgTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %64, align 8
  %66 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %65, i64 2, i32 2
  %69 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %68 to %"class.perfetto::trace_processor::NullableVector.106"**
  %70 = load %"class.perfetto::trace_processor::NullableVector.106"*, %"class.perfetto::trace_processor::NullableVector.106"** %69, align 8
  %71 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %70, i64 0, i32 3, i32 0, i32 0, i32 2
  %72 = bitcast i32*** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %70, i64 0, i32 3, i32 0, i32 0, i32 1
  %75 = bitcast i32*** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %73, %76
  %78 = icmp eq i64 %77, 0
  %79 = shl i64 %77, 7
  %80 = add i64 %79, -1
  %81 = select i1 %78, i64 0, i64 %80
  %82 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %70, i64 0, i32 3, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %70, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, %83
  %87 = icmp eq i64 %81, %86
  %88 = inttoptr i64 %76 to i32**
  %89 = inttoptr i64 %73 to i32**
  br i1 %87, label %95, label %102

90:                                               ; preds = %2
  %91 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.6, i64 0, i64 0)) #15
  %92 = tail call i32* @__errno_location() #18
  %93 = load i32, i32* %92, align 4
  %94 = tail call i8* @strerror(i32 %93) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %91, i32 51, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i32 %93, i8* %94) #15
  tail call void @llvm.trap() #15
  unreachable

95:                                               ; preds = %54
  %96 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %70, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.107"* %96) #15
  %97 = load i64, i64* %84, align 8
  %98 = load i64, i64* %82, align 8
  %99 = load i32**, i32*** %74, align 8
  %100 = load i32**, i32*** %71, align 8
  %101 = add i64 %98, %97
  br label %102

102:                                              ; preds = %95, %54
  %103 = phi i64 [ %101, %95 ], [ %86, %54 ]
  %104 = phi i32** [ %100, %95 ], [ %89, %54 ]
  %105 = phi i32** [ %99, %95 ], [ %88, %54 ]
  %106 = icmp eq i32** %104, %105
  br i1 %106, label %113, label %107

107:                                              ; preds = %102
  %108 = lshr i64 %103, 10
  %109 = getelementptr inbounds i32*, i32** %105, i64 %108
  %110 = load i32*, i32** %109, align 8
  %111 = and i64 %103, 1023
  %112 = getelementptr inbounds i32, i32* %110, i64 %111
  br label %113

113:                                              ; preds = %102, %107
  %114 = phi i32* [ %112, %107 ], [ null, %102 ]
  store i32 %67, i32* %114, align 4
  %115 = load i64, i64* %84, align 8
  %116 = add i64 %115, 1
  store i64 %116, i64* %84, align 8
  %117 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %70, i64 0, i32 4
  %118 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %70, i64 0, i32 5
  %119 = load i32, i32* %118, align 8
  %120 = add i32 %119, 1
  store i32 %120, i32* %118, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %117, i32 %119) #15
  %121 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %64, align 8
  %122 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 2, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %121, i64 3, i32 2
  %125 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %124 to %"class.perfetto::trace_processor::NullableVector"**
  %126 = load %"class.perfetto::trace_processor::NullableVector"*, %"class.perfetto::trace_processor::NullableVector"** %125, align 8
  %127 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %126, i64 0, i32 3, i32 0, i32 0, i32 2
  %128 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %126, i64 0, i32 3, i32 0, i32 0, i32 1
  %131 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %129, %132
  %134 = icmp eq i64 %133, 0
  %135 = shl i64 %133, 7
  %136 = add i64 %135, -1
  %137 = select i1 %134, i64 0, i64 %136
  %138 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %126, i64 0, i32 3, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %126, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, %139
  %143 = icmp eq i64 %137, %142
  %144 = inttoptr i64 %132 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %145 = inttoptr i64 %129 to %"struct.perfetto::trace_processor::StringPool::Id"**
  br i1 %143, label %146, label %153

146:                                              ; preds = %113
  %147 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %126, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %147) #15
  %148 = load i64, i64* %140, align 8
  %149 = load i64, i64* %138, align 8
  %150 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %130, align 8
  %151 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %127, align 8
  %152 = add i64 %149, %148
  br label %153

153:                                              ; preds = %146, %113
  %154 = phi i64 [ %152, %146 ], [ %142, %113 ]
  %155 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %151, %146 ], [ %145, %113 ]
  %156 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %150, %146 ], [ %144, %113 ]
  %157 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %155, %156
  br i1 %157, label %164, label %158

158:                                              ; preds = %153
  %159 = lshr i64 %154, 10
  %160 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %156, i64 %159
  %161 = load %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %160, align 8
  %162 = and i64 %154, 1023
  %163 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %161, i64 %162
  br label %164

164:                                              ; preds = %153, %158
  %165 = phi %"struct.perfetto::trace_processor::StringPool::Id"* [ %163, %158 ], [ null, %153 ]
  %166 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %165, i64 0, i32 0
  store i32 %123, i32* %166, align 4
  %167 = load i64, i64* %140, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %140, align 8
  %169 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %126, i64 0, i32 4
  %170 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %126, i64 0, i32 5
  %171 = load i32, i32* %170, align 8
  %172 = add i32 %171, 1
  store i32 %172, i32* %170, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %169, i32 %171) #15
  %173 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %64, align 8
  %174 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 3, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %173, i64 4, i32 2
  %177 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %176 to %"class.perfetto::trace_processor::NullableVector"**
  %178 = load %"class.perfetto::trace_processor::NullableVector"*, %"class.perfetto::trace_processor::NullableVector"** %177, align 8
  %179 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %178, i64 0, i32 3, i32 0, i32 0, i32 2
  %180 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %178, i64 0, i32 3, i32 0, i32 0, i32 1
  %183 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = sub i64 %181, %184
  %186 = icmp eq i64 %185, 0
  %187 = shl i64 %185, 7
  %188 = add i64 %187, -1
  %189 = select i1 %186, i64 0, i64 %188
  %190 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %178, i64 0, i32 3, i32 0, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %178, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %193 = load i64, i64* %192, align 8
  %194 = add i64 %193, %191
  %195 = icmp eq i64 %189, %194
  %196 = inttoptr i64 %184 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %197 = inttoptr i64 %181 to %"struct.perfetto::trace_processor::StringPool::Id"**
  br i1 %195, label %198, label %205

198:                                              ; preds = %164
  %199 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %178, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %199) #15
  %200 = load i64, i64* %192, align 8
  %201 = load i64, i64* %190, align 8
  %202 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %182, align 8
  %203 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %179, align 8
  %204 = add i64 %201, %200
  br label %205

205:                                              ; preds = %198, %164
  %206 = phi i64 [ %204, %198 ], [ %194, %164 ]
  %207 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %203, %198 ], [ %197, %164 ]
  %208 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %202, %198 ], [ %196, %164 ]
  %209 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %207, %208
  br i1 %209, label %216, label %210

210:                                              ; preds = %205
  %211 = lshr i64 %206, 10
  %212 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %208, i64 %211
  %213 = load %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %212, align 8
  %214 = and i64 %206, 1023
  %215 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %213, i64 %214
  br label %216

216:                                              ; preds = %205, %210
  %217 = phi %"struct.perfetto::trace_processor::StringPool::Id"* [ %215, %210 ], [ null, %205 ]
  %218 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %217, i64 0, i32 0
  store i32 %175, i32* %218, align 4
  %219 = load i64, i64* %192, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %192, align 8
  %221 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %178, i64 0, i32 4
  %222 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %178, i64 0, i32 5
  %223 = load i32, i32* %222, align 8
  %224 = add i32 %223, 1
  store i32 %224, i32* %222, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %221, i32 %223) #15
  %225 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %64, align 8
  %226 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %227 = load i8, i8* %226, align 8
  %228 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230)
  %231 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %225, i64 5, i32 2
  %232 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %231 to %"class.perfetto::trace_processor::NullableVector.92"**
  %233 = load %"class.perfetto::trace_processor::NullableVector.92"*, %"class.perfetto::trace_processor::NullableVector.92"** %232, align 8
  store i8 0, i8* %230, align 8, !alias.scope !8
  %234 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %235 = bitcast %union.anon.336* %234 to i8*
  store i8 0, i8* %235, align 8, !alias.scope !8
  %236 = icmp eq i8 %227, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %216
  %238 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %229, i64* %238, align 8, !alias.scope !8
  store i8 1, i8* %230, align 8, !alias.scope !8
  br label %239

239:                                              ; preds = %216, %237
  call void @_ZN8perfetto15trace_processor14NullableVectorIlE6AppendENS_4base8OptionalIlEE(%"class.perfetto::trace_processor::NullableVector.92"* %233, %"class.perfetto::base::Optional"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230)
  %240 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %64, align 8
  %241 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 6
  %242 = bitcast %"class.perfetto::base::Optional.337"* %241 to i64*
  %243 = load i64, i64* %242, align 4
  %244 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %240, i64 6, i32 2
  %245 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %244 to %"class.perfetto::trace_processor::NullableVector"**
  %246 = load %"class.perfetto::trace_processor::NullableVector"*, %"class.perfetto::trace_processor::NullableVector"** %245, align 8
  %247 = trunc i64 %243 to i8
  %248 = lshr i64 %243, 32
  %249 = trunc i64 %248 to i32
  %250 = icmp eq i8 %247, 0
  %251 = select i1 %250, i32 0, i32 %249
  %252 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %246, i64 0, i32 3, i32 0, i32 0, i32 2
  %253 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %246, i64 0, i32 3, i32 0, i32 0, i32 1
  %256 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = sub i64 %254, %257
  %259 = icmp eq i64 %258, 0
  %260 = shl i64 %258, 7
  %261 = add i64 %260, -1
  %262 = select i1 %259, i64 0, i64 %261
  %263 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %246, i64 0, i32 3, i32 0, i32 1
  %264 = load i64, i64* %263, align 8
  %265 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %246, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %266 = load i64, i64* %265, align 8
  %267 = add i64 %266, %264
  %268 = icmp eq i64 %262, %267
  %269 = inttoptr i64 %257 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %270 = inttoptr i64 %254 to %"struct.perfetto::trace_processor::StringPool::Id"**
  br i1 %268, label %271, label %278

271:                                              ; preds = %239
  %272 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %246, i64 0, i32 3
  call void @_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %272) #15
  %273 = load i64, i64* %265, align 8
  %274 = load i64, i64* %263, align 8
  %275 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %255, align 8
  %276 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %252, align 8
  %277 = add i64 %274, %273
  br label %278

278:                                              ; preds = %271, %239
  %279 = phi i64 [ %277, %271 ], [ %267, %239 ]
  %280 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %276, %271 ], [ %270, %239 ]
  %281 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %275, %271 ], [ %269, %239 ]
  %282 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %280, %281
  br i1 %282, label %289, label %283

283:                                              ; preds = %278
  %284 = lshr i64 %279, 10
  %285 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %281, i64 %284
  %286 = load %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %285, align 8
  %287 = and i64 %279, 1023
  %288 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %286, i64 %287
  br label %289

289:                                              ; preds = %278, %283
  %290 = phi %"struct.perfetto::trace_processor::StringPool::Id"* [ %288, %283 ], [ null, %278 ]
  %291 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %290, i64 0, i32 0
  store i32 %251, i32* %291, align 4
  %292 = load i64, i64* %265, align 8
  %293 = add i64 %292, 1
  store i64 %293, i64* %265, align 8
  %294 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %246, i64 0, i32 4
  %295 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %246, i64 0, i32 5
  %296 = load i32, i32* %295, align 8
  %297 = add i32 %296, 1
  store i32 %297, i32* %295, align 8
  call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %294, i32 %296) #15
  %298 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %64, align 8
  %299 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %300 = load i8, i8* %299, align 8
  %301 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %302 = bitcast %union.anon.346* %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = getelementptr inbounds %"class.perfetto::base::Optional.342", %"class.perfetto::base::Optional.342"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %304)
  %305 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %298, i64 7, i32 2
  %306 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %305 to %"class.perfetto::trace_processor::NullableVector.131"**
  %307 = load %"class.perfetto::trace_processor::NullableVector.131"*, %"class.perfetto::trace_processor::NullableVector.131"** %306, align 8
  store i8 0, i8* %304, align 8, !alias.scope !11
  %308 = getelementptr inbounds %"class.perfetto::base::Optional.342", %"class.perfetto::base::Optional.342"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %309 = bitcast %union.anon.346* %308 to i8*
  store i8 0, i8* %309, align 8, !alias.scope !11
  %310 = icmp eq i8 %300, 0
  br i1 %310, label %314, label %311

311:                                              ; preds = %289
  %312 = getelementptr inbounds %"class.perfetto::base::Optional.342", %"class.perfetto::base::Optional.342"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %313 = bitcast double* %312 to i64*
  store i64 %303, i64* %313, align 8, !alias.scope !11
  store i8 1, i8* %304, align 8, !alias.scope !11
  br label %314

314:                                              ; preds = %289, %311
  call void @_ZN8perfetto15trace_processor14NullableVectorIdE6AppendENS_4base8OptionalIdEE(%"class.perfetto::trace_processor::NullableVector.131"* %307, %"class.perfetto::base::Optional.342"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %304)
  %315 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %64, align 8
  %316 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::ArgTable::Row", %"struct.perfetto::trace_processor::tables::ArgTable::Row"* %1, i64 0, i32 8, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %315, i64 8, i32 2
  %319 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %318 to %"class.perfetto::trace_processor::NullableVector"**
  %320 = load %"class.perfetto::trace_processor::NullableVector"*, %"class.perfetto::trace_processor::NullableVector"** %319, align 8
  %321 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %320, i64 0, i32 3, i32 0, i32 0, i32 2
  %322 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %320, i64 0, i32 3, i32 0, i32 0, i32 1
  %325 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = sub i64 %323, %326
  %328 = icmp eq i64 %327, 0
  %329 = shl i64 %327, 7
  %330 = add i64 %329, -1
  %331 = select i1 %328, i64 0, i64 %330
  %332 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %320, i64 0, i32 3, i32 0, i32 1
  %333 = load i64, i64* %332, align 8
  %334 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %320, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %335 = load i64, i64* %334, align 8
  %336 = add i64 %335, %333
  %337 = icmp eq i64 %331, %336
  %338 = inttoptr i64 %326 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %339 = inttoptr i64 %323 to %"struct.perfetto::trace_processor::StringPool::Id"**
  br i1 %337, label %340, label %347

340:                                              ; preds = %314
  %341 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %320, i64 0, i32 3
  call void @_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %341) #15
  %342 = load i64, i64* %334, align 8
  %343 = load i64, i64* %332, align 8
  %344 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %324, align 8
  %345 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %321, align 8
  %346 = add i64 %343, %342
  br label %347

347:                                              ; preds = %340, %314
  %348 = phi i64 [ %346, %340 ], [ %336, %314 ]
  %349 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %345, %340 ], [ %339, %314 ]
  %350 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %344, %340 ], [ %338, %314 ]
  %351 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %349, %350
  br i1 %351, label %358, label %352

352:                                              ; preds = %347
  %353 = lshr i64 %348, 10
  %354 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %350, i64 %353
  %355 = load %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %354, align 8
  %356 = and i64 %348, 1023
  %357 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %355, i64 %356
  br label %358

358:                                              ; preds = %347, %352
  %359 = phi %"struct.perfetto::trace_processor::StringPool::Id"* [ %357, %352 ], [ null, %347 ]
  %360 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %359, i64 0, i32 0
  store i32 %317, i32* %360, align 4
  %361 = load i64, i64* %334, align 8
  %362 = add i64 %361, 1
  store i64 %362, i64* %334, align 8
  %363 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %320, i64 0, i32 4
  %364 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector"* %320, i64 0, i32 5
  %365 = load i32, i32* %364, align 8
  %366 = add i32 %365, 1
  store i32 %366, i32* %364, align 8
  call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %363, i32 %365) #15
  %367 = zext i32 %6 to i64
  %368 = shl nuw i64 %367, 32
  %369 = or i64 %368, %367
  ret i64 %369
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare dereferenceable(104) %"class.perfetto::trace_processor::RowMap"* @_ZNK8perfetto15trace_processor6Column7row_mapEv(%"class.perfetto::trace_processor::Column"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8perfetto15trace_processor6RowMap3GetEj(%"class.perfetto::trace_processor::RowMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %61 [
    i32 0, label %5
    i32 1, label %9
    i32 2, label %55
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %1
  br label %66

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = sub i64 %14, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %9
  %19 = ashr exact i64 %16, 2
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i32* [ %11, %18 ], [ %31, %20 ]
  %22 = phi i64 [ %19, %18 ], [ %30, %20 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %25, %1
  %27 = getelementptr inbounds i32, i32* %24, i64 1
  %28 = xor i64 %23, -1
  %29 = add i64 %22, %28
  %30 = select i1 %26, i64 %23, i64 %29
  %31 = select i1 %26, i32* %21, i32* %27
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %20

33:                                               ; preds = %20
  %34 = ptrtoint i32* %31 to i64
  br label %35

35:                                               ; preds = %9, %33
  %36 = phi i64 [ %34, %33 ], [ %15, %9 ]
  %37 = sub i64 %36, %15
  %38 = lshr exact i64 %37, 2
  %39 = add nuw nsw i64 %38, 4294967295
  %40 = and i64 %39, 4294967295
  %41 = getelementptr inbounds i32, i32* %11, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 %1, %42
  %44 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %45 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %44, align 8
  %46 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %45, i64 %40
  %47 = tail call i32 @_ZNK8perfetto15trace_processor9BitVector5Block13IndexOfNthSetEj(%"class.perfetto::trace_processor::BitVector::Block"* %46, i32 %43) #15
  %48 = shl i32 %47, 6
  %49 = trunc i64 %39 to i32
  %50 = lshr i32 %47, 16
  %51 = shl i32 %49, 9
  %52 = and i32 %48, 4194240
  %53 = add nuw nsw i32 %52, %50
  %54 = add i32 %53, %51
  br label %66

55:                                               ; preds = %2
  %56 = zext i32 %1 to i64
  %57 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %56
  %60 = load i32, i32* %59, align 4
  br label %66

61:                                               ; preds = %2
  %62 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0))
  %63 = tail call i32* @__errno_location() #18
  %64 = load i32, i32* %63, align 4
  %65 = tail call i8* @strerror(i32 %64) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %62, i32 268, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i32 %64, i8* %65) #15
  tail call void @llvm.trap()
  unreachable

66:                                               ; preds = %55, %35, %5
  %67 = phi i32 [ %60, %55 ], [ %54, %35 ], [ %8, %5 ]
  ret i32 %67
}

declare void @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN8perfetto4base8BasenameEPKc(i8*) local_unnamed_addr #0 comdat {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i8* [ %0, %1 ], [ %6, %2 ]
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds i8, i8* %3, i64 1
  br i1 %5, label %7, label %2

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7, %15
  %13 = phi i8* [ %16, %15 ], [ %3, %7 ]
  %14 = icmp ugt i8* %13, %0
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8, i8* %13, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 47
  %19 = icmp ult i8* %16, %8
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %12

21:                                               ; preds = %12, %15
  ret i8* %13
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8perfetto15trace_processor9BitVector5Block13IndexOfNthSetEj(%"class.perfetto::trace_processor::BitVector::Block"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @llvm.ctpop.i64(i64 %4) #15, !range !5
  %6 = trunc i64 %5 to i32
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @llvm.ctpop.i64(i64 %10) #15, !range !5
  %12 = trunc i64 %11 to i32
  %13 = add nuw nsw i32 %6, %12
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %15, label %71

15:                                               ; preds = %106, %99, %92, %85, %78, %71, %8, %2
  %16 = phi i32 [ 0, %2 ], [ 1, %8 ], [ 2, %71 ], [ 3, %78 ], [ 4, %85 ], [ 5, %92 ], [ 6, %99 ], [ 7, %106 ]
  %17 = phi i32 [ 0, %2 ], [ %6, %8 ], [ %13, %71 ], [ %76, %78 ], [ %83, %85 ], [ %90, %92 ], [ %97, %99 ], [ %104, %106 ]
  %18 = phi i64 [ %4, %2 ], [ %10, %8 ], [ %73, %71 ], [ %80, %78 ], [ %87, %85 ], [ %94, %92 ], [ %101, %99 ], [ %108, %106 ]
  %19 = sub i32 %1, %17
  %20 = lshr i64 %18, 1
  %21 = and i64 %20, 6148914691236517205
  %22 = sub i64 %18, %21
  %23 = and i64 %22, 3689348814741910323
  %24 = lshr i64 %22, 2
  %25 = and i64 %24, 3689348814741910323
  %26 = add nuw nsw i64 %25, %23
  %27 = lshr i64 %26, 4
  %28 = add nuw nsw i64 %27, %26
  %29 = and i64 %28, 1085102592571150095
  %30 = mul i64 %29, 72340172838076673
  %31 = zext i32 %19 to i64
  %32 = mul i64 %31, 72340172838076673
  %33 = or i64 %32, -9187201950435737472
  %34 = and i64 %30, 9187201950435737471
  %35 = sub nuw i64 %33, %34
  %36 = xor i64 %30, %32
  %37 = xor i64 %36, %35
  %38 = lshr i64 %37, 7
  %39 = and i64 %38, 72340172838076673
  %40 = mul i64 %39, 72340172838076673
  %41 = lshr i64 %40, 53
  %42 = and i64 %41, 2040
  %43 = mul i64 %29, 72340172838076672
  %44 = lshr i64 %43, %42
  %45 = and i64 %44, 255
  %46 = sub nsw i64 %31, %45
  %47 = lshr i64 %18, %42
  %48 = and i64 %47, 255
  %49 = mul nuw i64 %48, 72340172838076673
  %50 = and i64 %49, -9205322385119247871
  %51 = or i64 %50, -9187201950435737472
  %52 = add i64 %51, -72340172838076673
  %53 = or i64 %52, %50
  %54 = lshr i64 %53, 7
  %55 = and i64 %54, 72340172838076673
  %56 = mul i64 %55, 72340172838076673
  %57 = mul i64 %46, 72340172838076673
  %58 = or i64 %57, -9187201950435737472
  %59 = and i64 %56, 9187201950435737471
  %60 = sub nuw i64 %58, %59
  %61 = xor i64 %56, %57
  %62 = xor i64 %61, %60
  %63 = lshr i64 %62, 7
  %64 = and i64 %63, 72340172838076673
  %65 = mul i64 %64, 72340172838076673
  %66 = lshr i64 %65, 56
  %67 = add nuw nsw i64 %66, %42
  %68 = trunc i64 %67 to i32
  %69 = shl nuw nsw i32 %68, 16
  %70 = or i32 %69, %16
  ret i32 %70

71:                                               ; preds = %8
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 2, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = tail call i64 @llvm.ctpop.i64(i64 %73) #15, !range !5
  %75 = trunc i64 %74 to i32
  %76 = add nuw nsw i32 %13, %75
  %77 = icmp ugt i32 %76, %1
  br i1 %77, label %15, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 3, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = tail call i64 @llvm.ctpop.i64(i64 %80) #15, !range !5
  %82 = trunc i64 %81 to i32
  %83 = add nuw nsw i32 %76, %82
  %84 = icmp ugt i32 %83, %1
  br i1 %84, label %15, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 4, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = tail call i64 @llvm.ctpop.i64(i64 %87) #15, !range !5
  %89 = trunc i64 %88 to i32
  %90 = add nuw nsw i32 %83, %89
  %91 = icmp ugt i32 %90, %1
  br i1 %91, label %15, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 5, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = tail call i64 @llvm.ctpop.i64(i64 %94) #15, !range !5
  %96 = trunc i64 %95 to i32
  %97 = add nuw nsw i32 %90, %96
  %98 = icmp ugt i32 %97, %1
  br i1 %98, label %15, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 6, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = tail call i64 @llvm.ctpop.i64(i64 %101) #15, !range !5
  %103 = trunc i64 %102 to i32
  %104 = add i32 %97, %103
  %105 = icmp ugt i32 %104, %1
  br i1 %105, label %15, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 7, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = tail call i64 @llvm.ctpop.i64(i64 %108) #15, !range !5
  %110 = trunc i64 %109 to i32
  %111 = add i32 %104, %110
  %112 = icmp ugt i32 %111, %1
  br i1 %112, label %15, label %113

113:                                              ; preds = %106
  %114 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0))
  %115 = tail call i32* @__errno_location() #18
  %116 = load i32, i32* %115, align 4
  %117 = tail call i8* @strerror(i32 %116) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %114, i32 578, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i32 %116, i8* %117) #15
  tail call void @llvm.trap()
  unreachable
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.193"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRmjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.189"*, i64* dereferenceable(8), i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #15, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.193"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.193"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.193"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.193"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.193"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %5
  br i1 %52, label %143, label %28

53:                                               ; preds = %28, %45, %19, %4
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %4 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 32) #16, !noalias !14
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %2, align 8, !noalias !14
  store i64 %58, i64* %57, align 8, !noalias !14
  %59 = getelementptr inbounds i8, i8* %55, i64 24
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %3, align 4, !noalias !14
  store i32 %61, i32* %60, align 8, !noalias !14
  %62 = getelementptr inbounds i8, i8* %55, i64 8
  %63 = bitcast i8* %62 to i64*
  store i64 %5, i64* %63, align 8, !noalias !14
  %64 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.193"**
  store %"struct.std::__1::__hash_node_base.193"* null, %"struct.std::__1::__hash_node_base.193"** %64, align 8, !noalias !14
  %65 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  %68 = uitofp i64 %67 to float
  %69 = uitofp i64 %7 to float
  %70 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 3, i32 0, i32 0
  %71 = load float, float* %70, align 4
  %72 = fmul float %71, %69
  %73 = fcmp olt float %72, %68
  %74 = or i1 %8, %73
  br i1 %74, label %75, label %98

75:                                               ; preds = %53
  %76 = shl i64 %7, 1
  %77 = icmp ult i64 %7, 3
  %78 = tail call i64 @llvm.ctpop.i64(i64 %7) #15, !range !5
  %79 = icmp ugt i64 %78, 1
  %80 = or i1 %77, %79
  %81 = zext i1 %80 to i64
  %82 = or i64 %76, %81
  %83 = fdiv float %68, %71
  %84 = tail call float @llvm.ceil.f32(float %83) #15
  %85 = fptoui float %84 to i64
  %86 = icmp ult i64 %82, %85
  %87 = select i1 %86, i64 %85, i64 %82
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.189"* %0, i64 %87)
  %88 = load i64, i64* %6, align 8
  %89 = tail call i64 @llvm.ctpop.i64(i64 %88) #15, !range !5
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %75
  %92 = add i64 %88, -1
  %93 = and i64 %92, %5
  br label %98

94:                                               ; preds = %75
  %95 = icmp ult i64 %5, %88
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = urem i64 %5, %88
  br label %98

98:                                               ; preds = %96, %94, %91, %53
  %99 = phi i64 [ %7, %53 ], [ %88, %91 ], [ %88, %94 ], [ %88, %96 ]
  %100 = phi i64 [ %54, %53 ], [ %93, %91 ], [ %5, %94 ], [ %97, %96 ]
  %101 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %102, i64 %100
  %104 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.193"* %104, null
  br i1 %105, label %106, label %132

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 1, i32 0, i32 0
  %108 = bitcast %"struct.std::__1::__hash_node_base.193"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i8* %55 to i64*
  store i64 %109, i64* %110, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.193"* %107 to i8**
  store i8* %55, i8** %111, align 8
  store %"struct.std::__1::__hash_node_base.193"* %107, %"struct.std::__1::__hash_node_base.193"** %103, align 8
  %112 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %64, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base.193"* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %112, i64 1
  %116 = bitcast %"struct.std::__1::__hash_node_base.193"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = tail call i64 @llvm.ctpop.i64(i64 %99) #15, !range !5
  %119 = icmp ugt i64 %118, 1
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = add i64 %99, -1
  %122 = and i64 %117, %121
  br label %127

123:                                              ; preds = %114
  %124 = icmp ult i64 %117, %99
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = urem i64 %117, %99
  br label %127

127:                                              ; preds = %120, %123, %125
  %128 = phi i64 [ %122, %120 ], [ %126, %125 ], [ %117, %123 ]
  %129 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %101, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %129, i64 %128
  %131 = bitcast %"struct.std::__1::__hash_node_base.193"** %130 to i8**
  br label %137

132:                                              ; preds = %98
  %133 = bitcast %"struct.std::__1::__hash_node_base.193"* %104 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i8* %55 to i64*
  store i64 %134, i64* %135, align 8
  %136 = bitcast %"struct.std::__1::__hash_node_base.193"* %104 to i8**
  br label %137

137:                                              ; preds = %127, %132
  %138 = phi i8** [ %136, %132 ], [ %131, %127 ]
  store i8* %55, i8** %138, align 8
  br label %139

139:                                              ; preds = %137, %106
  %140 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.193"*
  %141 = load i64, i64* %65, align 8
  %142 = add i64 %141, 1
  store i64 %142, i64* %65, align 8
  br label %143

143:                                              ; preds = %48, %139
  %144 = phi i8 [ 1, %139 ], [ 0, %48 ]
  %145 = phi %"struct.std::__1::__hash_node_base.193"* [ %140, %139 ], [ %31, %48 ]
  %146 = insertvalue { %"struct.std::__1::__hash_node_base.193"*, i8 } undef, %"struct.std::__1::__hash_node_base.193"* %145, 0
  %147 = insertvalue { %"struct.std::__1::__hash_node_base.193"*, i8 } %146, i8 %144, 1
  ret { %"struct.std::__1::__hash_node_base.193"*, i8 } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.189"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.189"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.189"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.189"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.189"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.193"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.193"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.195", %"class.std::__1::__bucket_list_deallocator.195"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.193"* null, %"struct.std::__1::__hash_node_base.193"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !17

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.193"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.193"* null, %"struct.std::__1::__hash_node_base.193"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.193"* null, %"struct.std::__1::__hash_node_base.193"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.193"* null, %"struct.std::__1::__hash_node_base.193"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.193"* null, %"struct.std::__1::__hash_node_base.193"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.193"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.193"* %36, %"struct.std::__1::__hash_node_base.193"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.193"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.193"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.193"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.193"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.193"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.193"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.193"* %82, %"struct.std::__1::__hash_node_base.193"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.193"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.193"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.193"* %110 to i64*
  %112 = load i64, i64* %102, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.193"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.193"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.193"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.193"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.193"* %80, %"struct.std::__1::__hash_node_base.193"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.193"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.193", %"struct.std::__1::__hash_node_base.193"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.193"*, %"struct.std::__1::__hash_node_base.193"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.193"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.189", %"class.std::__1::__hash_table.189"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.193"**, %"struct.std::__1::__hash_node_base.193"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.193"** null, %"struct.std::__1::__hash_node_base.193"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.193"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.193"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.195", %"class.std::__1::__bucket_list_deallocator.195"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8perfetto15trace_processor10StringPool12InternStringENS_4base10StringViewE(%"class.perfetto::trace_processor::StringPool"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %119, label %5

5:                                                ; preds = %3
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %60, label %7

7:                                                ; preds = %5
  %8 = add i64 %2, -1
  %9 = and i64 %2, 3
  %10 = icmp ult i64 %8, 3
  br i1 %10, label %43, label %11

11:                                               ; preds = %7
  %12 = sub i64 %2, %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ -3750763034362895579, %11 ], [ %39, %13 ]
  %15 = phi i64 [ 0, %11 ], [ %40, %13 ]
  %16 = phi i64 [ %12, %11 ], [ %41, %13 ]
  %17 = getelementptr inbounds i8, i8* %1, i64 %15
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  %20 = xor i64 %14, %19
  %21 = mul i64 %20, 1099511628211
  %22 = or i64 %15, 1
  %23 = getelementptr inbounds i8, i8* %1, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = xor i64 %21, %25
  %27 = mul i64 %26, 1099511628211
  %28 = or i64 %15, 2
  %29 = getelementptr inbounds i8, i8* %1, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = xor i64 %27, %31
  %33 = mul i64 %32, 1099511628211
  %34 = or i64 %15, 3
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = xor i64 %33, %37
  %39 = mul i64 %38, 1099511628211
  %40 = add nuw i64 %15, 4
  %41 = add i64 %16, -4
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %13

43:                                               ; preds = %13, %7
  %44 = phi i64 [ undef, %7 ], [ %39, %13 ]
  %45 = phi i64 [ -3750763034362895579, %7 ], [ %39, %13 ]
  %46 = phi i64 [ 0, %7 ], [ %40, %13 ]
  %47 = icmp eq i64 %9, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %43, %48
  %49 = phi i64 [ %56, %48 ], [ %45, %43 ]
  %50 = phi i64 [ %57, %48 ], [ %46, %43 ]
  %51 = phi i64 [ %58, %48 ], [ %9, %43 ]
  %52 = getelementptr inbounds i8, i8* %1, i64 %50
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = xor i64 %49, %54
  %56 = mul i64 %55, 1099511628211
  %57 = add nuw i64 %50, 1
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %48, !llvm.loop !19

60:                                               ; preds = %43, %48, %5
  %61 = phi i64 [ -3750763034362895579, %5 ], [ %44, %43 ], [ %56, %48 ]
  %62 = getelementptr inbounds %"class.perfetto::trace_processor::StringPool", %"class.perfetto::trace_processor::StringPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %117, label %65

65:                                               ; preds = %60
  %66 = tail call i64 @llvm.ctpop.i64(i64 %63) #15, !range !5
  %67 = icmp ugt i64 %66, 1
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = add i64 %63, -1
  %70 = and i64 %69, %61
  br label %75

71:                                               ; preds = %65
  %72 = icmp ult i64 %61, %63
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = urem i64 %61, %63
  br label %75

75:                                               ; preds = %73, %71, %68
  %76 = phi i64 [ %70, %68 ], [ %74, %73 ], [ %61, %71 ]
  %77 = getelementptr inbounds %"class.perfetto::trace_processor::StringPool", %"class.perfetto::trace_processor::StringPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, i64 %76
  %80 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base"* %80, null
  br i1 %81, label %117, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %83, align 8
  %85 = icmp eq %"struct.std::__1::__hash_node_base"* %84, null
  br i1 %85, label %117, label %86

86:                                               ; preds = %82
  %87 = add i64 %63, -1
  br label %88

88:                                               ; preds = %109, %86
  %89 = phi %"struct.std::__1::__hash_node_base"* [ %84, %86 ], [ %111, %109 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, %61
  br i1 %93, label %104, label %94

94:                                               ; preds = %88
  br i1 %67, label %97, label %95

95:                                               ; preds = %94
  %96 = and i64 %92, %87
  br label %101

97:                                               ; preds = %94
  %98 = icmp ult i64 %92, %63
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %92, %63
  br label %101

101:                                              ; preds = %99, %97, %95
  %102 = phi i64 [ %96, %95 ], [ %100, %99 ], [ %92, %97 ]
  %103 = icmp eq i64 %102, %76
  br i1 %103, label %109, label %117

104:                                              ; preds = %88
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %61
  br i1 %108, label %113, label %109

109:                                              ; preds = %104, %101
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %111, null
  br i1 %112, label %117, label %88

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 3
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to i32*
  %116 = load i32, i32* %115, align 8
  br label %119

117:                                              ; preds = %101, %109, %75, %60, %82
  %118 = tail call i32 @_ZN8perfetto15trace_processor10StringPool12InsertStringENS_4base10StringViewEm(%"class.perfetto::trace_processor::StringPool"* %0, i8* nonnull %1, i64 %2, i64 %61) #15
  br label %119

119:                                              ; preds = %113, %117, %3
  %120 = phi i32 [ 0, %3 ], [ %116, %113 ], [ %118, %117 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor15macros_internal10MacroTable30UpdateRowMapsAfterParentInsertEv(%"class.perfetto::trace_processor::macros_internal::MacroTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::MacroTable"* %0, i64 0, i32 3
  %3 = load %"class.perfetto::trace_processor::Table"*, %"class.perfetto::trace_processor::Table"** %2, align 8
  %4 = icmp eq %"class.perfetto::trace_processor::Table"* %3, null
  br i1 %4, label %39, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %3, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.perfetto::trace_processor::RowMap"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.0"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %39, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::MacroTable"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi %"class.perfetto::trace_processor::Table"* [ %3, %13 ], [ %29, %15 ]
  %17 = phi i64 [ 0, %13 ], [ %28, %15 ]
  %18 = phi i32 [ 0, %13 ], [ %27, %15 ]
  %19 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %16, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"** %19, align 8
  %21 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %20, i64 %17
  %22 = load %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"** %14, align 8
  %23 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %22, i64 %17
  %24 = tail call i32 @_ZNK8perfetto15trace_processor6RowMap4sizeEv(%"class.perfetto::trace_processor::RowMap"* %21)
  %25 = add i32 %24, -1
  %26 = tail call i32 @_ZNK8perfetto15trace_processor6RowMap3GetEj(%"class.perfetto::trace_processor::RowMap"* %21, i32 %25)
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %23, i32 %26)
  %27 = add i32 %18, 1
  %28 = zext i32 %27 to i64
  %29 = load %"class.perfetto::trace_processor::Table"*, %"class.perfetto::trace_processor::Table"** %2, align 8
  %30 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %29, i64 0, i32 1
  %31 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %29, i64 0, i32 1, i32 0, i32 1
  %32 = bitcast %"class.perfetto::trace_processor::RowMap"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.0"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = sdiv exact i64 %36, 104
  %38 = icmp ugt i64 %37, %28
  br i1 %38, label %15, label %39

39:                                               ; preds = %15, %5, %1
  %40 = getelementptr inbounds %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::MacroTable"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %41 = load %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"** %40, align 8
  %42 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %41, i64 -1
  %43 = getelementptr inbounds %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::MacroTable"* %0, i64 0, i32 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %42, i32 %44)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.perfetto::trace_processor::RowMap", align 8
  %5 = alloca %"class.perfetto::trace_processor::BitVector", align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %315 [
    i32 0, label %8
    i32 1, label %212
    i32 2, label %287
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = add i32 %1, 1
  store i32 %13, i32* %9, align 8
  br label %315

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"* %15, i32 %17, i1 zeroext false)
  %18 = load i32, i32* %9, align 8
  tail call void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"* %15, i32 %18, i1 zeroext true)
  %19 = bitcast %"class.perfetto::trace_processor::RowMap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %15, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 1
  %24 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1
  %25 = bitcast %"class.std::__1::vector.2"* %24 to i64*
  %26 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %27 = bitcast i32** %26 to i64*
  %28 = bitcast %"class.std::__1::vector.2"* %24 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8
  %30 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 1, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  %32 = bitcast %"class.std::__1::vector.2"* %23 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast i32** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.std::__1::vector.2"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 2
  %40 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2
  %41 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %42 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %41 to i64*
  %43 = bitcast %"class.std::__1::vector.5"* %40 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 2, i32 0, i32 1
  %46 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %45 to i64*
  %47 = bitcast %"class.std::__1::vector.5"* %39 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.std::__1::vector.5"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #15
  call void @_ZN8perfetto15trace_processor6RowMapC1ENS0_9BitVectorE(%"class.perfetto::trace_processor::RowMap"* nonnull %4, %"class.perfetto::trace_processor::BitVector"* nonnull %5) #15
  %54 = bitcast %"class.perfetto::trace_processor::RowMap"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %19, i64 12, i1 false) #15
  %55 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 0
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 1
  %59 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %24, i64 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = icmp eq i32* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %14
  %63 = ptrtoint i32* %60 to i64
  store i64 %63, i64* %27, align 8
  %64 = bitcast i32* %60 to i8*
  call void @_ZdlPv(i8* %64) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  br label %65

65:                                               ; preds = %62, %14
  %66 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 1, i32 0, i32 1
  %67 = bitcast i32** %66 to i64*
  %68 = bitcast %"class.std::__1::vector.2"* %58 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8
  %70 = bitcast %"class.std::__1::vector.2"* %24 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast i32** %71 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %34, align 8
  %74 = bitcast %"class.std::__1::vector.2"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #15
  %75 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 2
  %76 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %40, i64 0, i32 0, i32 0
  %77 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %76, align 8
  %78 = icmp eq %"class.perfetto::trace_processor::BitVector::Block"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %65
  %80 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %77 to i64
  store i64 %80, i64* %42, align 8
  %81 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %77 to i8*
  call void @_ZdlPv(i8* %81) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #15
  br label %82

82:                                               ; preds = %79, %65
  %83 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 2, i32 0, i32 1
  %84 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %83 to i64*
  %85 = bitcast %"class.std::__1::vector.5"* %75 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8
  %87 = bitcast %"class.std::__1::vector.5"* %40 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %87, align 8
  %88 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 2, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %49, align 8
  %91 = bitcast %"class.std::__1::vector.5"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #15
  %92 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5
  %93 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 5
  %94 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %92, i64 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp eq i32* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %82
  %98 = ptrtoint i32* %95 to i64
  %99 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 1
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i32* %95 to i8*
  call void @_ZdlPv(i8* %101) #16
  %102 = bitcast %"class.std::__1::vector.2"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #15
  br label %103

103:                                              ; preds = %82, %97
  %104 = bitcast %"class.std::__1::vector.2"* %93 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8
  %106 = bitcast %"class.std::__1::vector.2"* %92 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %106, align 8
  %107 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast i32** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = bitcast %"class.std::__1::vector.2"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #15
  %113 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 6
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 6
  store i32 %114, i32* %115, align 8
  %116 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 2, i32 0, i32 0
  %117 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %116, align 8
  %118 = icmp eq %"class.perfetto::trace_processor::BitVector::Block"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %103
  %120 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %117 to i8*
  %121 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %117 to i64
  store i64 %121, i64* %84, align 8
  call void @_ZdlPv(i8* %120) #16
  br label %122

122:                                              ; preds = %119, %103
  %123 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 1, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = icmp eq i32* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %122
  %127 = ptrtoint i32* %124 to i64
  store i64 %127, i64* %67, align 8
  %128 = bitcast i32* %124 to i8*
  call void @_ZdlPv(i8* %128) #16
  br label %129

129:                                              ; preds = %122, %126
  %130 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 2, i32 0, i32 0
  %131 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %130, align 8
  %132 = icmp eq %"class.perfetto::trace_processor::BitVector::Block"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %129
  %134 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %131 to i64
  store i64 %134, i64* %46, align 8
  %135 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %131 to i8*
  call void @_ZdlPv(i8* %135) #16
  br label %136

136:                                              ; preds = %133, %129
  %137 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 1, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  %141 = ptrtoint i32* %138 to i64
  store i64 %141, i64* %31, align 8
  %142 = bitcast i32* %138 to i8*
  call void @_ZdlPv(i8* %142) #16
  br label %143

143:                                              ; preds = %136, %140
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %19) #15
  %144 = load i32, i32* %3, align 4
  %145 = load i32, i32* %21, align 8
  %146 = icmp ugt i32 %145, %144
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = add i32 %144, 1
  call void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"* %15, i32 %148, i1 zeroext false) #15
  br label %149

149:                                              ; preds = %147, %143
  %150 = lshr i32 %144, 9
  %151 = lshr i32 %144, 6
  %152 = and i32 %151, 7
  %153 = zext i32 %152 to i64
  %154 = and i32 %144, 63
  %155 = zext i32 %154 to i64
  %156 = zext i32 %150 to i64
  %157 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %158 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %157, align 8
  %159 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %158, i64 %156, i32 0, i32 0, i64 %153, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = shl i64 1, %155
  %162 = and i64 %160, %161
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %315, !prof !7

164:                                              ; preds = %149
  %165 = or i64 %160, %161
  store i64 %165, i64* %159, align 8
  %166 = load i64, i64* %27, align 8
  %167 = load i64, i64* %25, align 8
  %168 = sub i64 %166, %167
  %169 = lshr exact i64 %168, 2
  %170 = trunc i64 %169 to i32
  %171 = add nuw nsw i32 %150, 1
  %172 = icmp ult i32 %171, %170
  br i1 %172, label %173, label %315

173:                                              ; preds = %164
  %174 = inttoptr i64 %167 to i32*
  %175 = zext i32 %171 to i64
  %176 = getelementptr inbounds i32, i32* %174, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %176, align 4
  %179 = add nuw nsw i32 %150, 2
  %180 = icmp eq i32 %179, %170
  br i1 %180, label %315, label %181

181:                                              ; preds = %173
  %182 = sub i32 %170, %150
  %183 = add i32 %170, -3
  %184 = and i32 %182, 1
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %193, label %186

186:                                              ; preds = %181
  %187 = add nuw nsw i64 %175, 1
  %188 = load i32*, i32** %59, align 8
  %189 = getelementptr inbounds i32, i32* %188, i64 %187
  %190 = load i32, i32* %189, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %189, align 4
  %192 = add nuw nsw i32 %150, 3
  br label %193

193:                                              ; preds = %181, %186
  %194 = phi i32 [ %179, %181 ], [ %192, %186 ]
  %195 = phi i64 [ %175, %181 ], [ %187, %186 ]
  %196 = icmp eq i32 %183, %150
  br i1 %196, label %315, label %197

197:                                              ; preds = %193, %197
  %198 = phi i32 [ %210, %197 ], [ %194, %193 ]
  %199 = phi i64 [ %205, %197 ], [ %195, %193 ]
  %200 = add i64 %199, 1
  %201 = load i32*, i32** %59, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 %200
  %203 = load i32, i32* %202, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %202, align 4
  %205 = add i64 %199, 2
  %206 = load i32*, i32** %59, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %205
  %208 = load i32, i32* %207, align 4
  %209 = add i32 %208, 1
  store i32 %209, i32* %207, align 4
  %210 = add i32 %198, 2
  %211 = icmp eq i32 %210, %170
  br i1 %211, label %315, label %197

212:                                              ; preds = %2
  %213 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4
  %214 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %213, i64 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = icmp ugt i32 %215, %1
  br i1 %216, label %219, label %217

217:                                              ; preds = %212
  %218 = add i32 %1, 1
  tail call void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"* %213, i32 %218, i1 zeroext false) #15
  br label %219

219:                                              ; preds = %217, %212
  %220 = lshr i32 %1, 9
  %221 = lshr i32 %1, 6
  %222 = and i32 %221, 7
  %223 = zext i32 %222 to i64
  %224 = and i32 %1, 63
  %225 = zext i32 %224 to i64
  %226 = zext i32 %220 to i64
  %227 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %228 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %227, align 8
  %229 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %228, i64 %226, i32 0, i32 0, i64 %223, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = shl i64 1, %225
  %232 = and i64 %230, %231
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %315, !prof !7

234:                                              ; preds = %219
  %235 = or i64 %230, %231
  store i64 %235, i64* %229, align 8
  %236 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1
  %237 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %238 = bitcast i32** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.std::__1::vector.2"* %236 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = sub i64 %239, %241
  %243 = lshr exact i64 %242, 2
  %244 = trunc i64 %243 to i32
  %245 = add nuw nsw i32 %220, 1
  %246 = icmp ult i32 %245, %244
  br i1 %246, label %247, label %315

247:                                              ; preds = %234
  %248 = inttoptr i64 %241 to i32*
  %249 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %236, i64 0, i32 0, i32 0
  %250 = zext i32 %245 to i64
  %251 = getelementptr inbounds i32, i32* %248, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, 1
  store i32 %253, i32* %251, align 4
  %254 = add nuw nsw i32 %220, 2
  %255 = icmp eq i32 %254, %244
  br i1 %255, label %315, label %256

256:                                              ; preds = %247
  %257 = sub i32 %244, %220
  %258 = add i32 %244, -3
  %259 = and i32 %257, 1
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %268, label %261

261:                                              ; preds = %256
  %262 = add nuw nsw i64 %250, 1
  %263 = load i32*, i32** %249, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 %262
  %265 = load i32, i32* %264, align 4
  %266 = add i32 %265, 1
  store i32 %266, i32* %264, align 4
  %267 = add nuw nsw i32 %220, 3
  br label %268

268:                                              ; preds = %256, %261
  %269 = phi i32 [ %254, %256 ], [ %267, %261 ]
  %270 = phi i64 [ %250, %256 ], [ %262, %261 ]
  %271 = icmp eq i32 %258, %220
  br i1 %271, label %315, label %272

272:                                              ; preds = %268, %272
  %273 = phi i32 [ %285, %272 ], [ %269, %268 ]
  %274 = phi i64 [ %280, %272 ], [ %270, %268 ]
  %275 = add i64 %274, 1
  %276 = load i32*, i32** %249, align 8
  %277 = getelementptr inbounds i32, i32* %276, i64 %275
  %278 = load i32, i32* %277, align 4
  %279 = add i32 %278, 1
  store i32 %279, i32* %277, align 4
  %280 = add i64 %274, 2
  %281 = load i32*, i32** %249, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 %280
  %283 = load i32, i32* %282, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %282, align 4
  %285 = add i32 %273, 2
  %286 = icmp eq i32 %285, %244
  br i1 %286, label %315, label %272

287:                                              ; preds = %2
  %288 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5
  %289 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %288, i64 0, i32 0, i32 0
  %290 = load i32*, i32** %289, align 8
  %291 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 1
  %292 = bitcast i32** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = ptrtoint i32* %290 to i64
  %295 = sub i64 %293, %294
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %312, label %297

297:                                              ; preds = %287
  %298 = ashr exact i64 %295, 2
  br label %299

299:                                              ; preds = %299, %297
  %300 = phi i32* [ %290, %297 ], [ %310, %299 ]
  %301 = phi i64 [ %298, %297 ], [ %309, %299 ]
  %302 = lshr i64 %301, 1
  %303 = getelementptr inbounds i32, i32* %300, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = icmp ugt i32 %304, %1
  %306 = getelementptr inbounds i32, i32* %303, i64 1
  %307 = xor i64 %302, -1
  %308 = add i64 %301, %307
  %309 = select i1 %305, i64 %302, i64 %308
  %310 = select i1 %305, i32* %300, i32* %306
  %311 = icmp eq i64 %309, 0
  br i1 %311, label %312, label %299

312:                                              ; preds = %299, %287
  %313 = phi i32* [ %290, %287 ], [ %310, %299 ]
  %314 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_(%"class.std::__1::vector.2"* %288, i32* %313, i32* nonnull dereferenceable(4) %3)
  br label %315

315:                                              ; preds = %268, %272, %193, %197, %247, %234, %219, %173, %164, %149, %12, %2, %312
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.perfetto::trace_processor::StringPool::Id"*, align 8
  %3 = alloca %"struct.perfetto::trace_processor::StringPool::Id"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.362", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %12 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %11, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %14, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %17, align 8
  %19 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %16, %18
  %20 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %18 to i64
  %21 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %23, align 8
  %25 = icmp ugt %"struct.perfetto::trace_processor::StringPool::Id"** %14, %24
  %26 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %14, i64 %32
  %34 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %33 to i8*
  %40 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #15
  %41 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %33, i64 %36
  store %"struct.perfetto::trace_processor::StringPool::Id"** %44, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  %45 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %43, i64 %32
  store %"struct.perfetto::trace_processor::StringPool::Id"** %45, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %46 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #16
  %60 = bitcast i8* %59 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %60, i64 %57
  %63 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %62 to i64
  %64 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %60, i64 %53
  %65 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %64 to i64
  %66 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %14 to i64
  %67 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %79, i64 1
  %87 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %86 to i64
  %88 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !20

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 1
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 1
  %107 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 2
  %111 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 2
  %112 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 3
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 3
  %117 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 4
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 4
  %122 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 5
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 5
  %127 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 6
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 6
  %132 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 7
  %136 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 7
  %137 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 8
  %141 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %140 to i64
  %142 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 8
  %143 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %70 to i64
  %146 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  %156 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  %161 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %160, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %161, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %181 = inttoptr i64 %169 to %"struct.perfetto::trace_processor::StringPool::Id"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #15
  %186 = tail call i8* @_Znwm(i64 4096) #16
  %187 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* %163, %"struct.perfetto::trace_processor::StringPool::Id"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #15
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #15
  %190 = tail call i8* @_Znwm(i64 4096) #16
  %191 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"* %163, %"struct.perfetto::trace_processor::StringPool::Id"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #15
  %192 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %193 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %192, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %195, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %196 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  %197 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %172, align 8
  %198 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %196, %197
  %199 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %197 to i64
  %200 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %202, align 8
  %204 = icmp ugt %"struct.perfetto::trace_processor::StringPool::Id"** %195, %203
  %205 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %195, i64 %211
  %213 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %212 to i8*
  %219 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #15
  %220 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %212, i64 %215
  store %"struct.perfetto::trace_processor::StringPool::Id"** %223, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  %224 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %222, i64 %211
  store %"struct.perfetto::trace_processor::StringPool::Id"** %224, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %225 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #17
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #16
  %237 = bitcast i8* %236 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %237, i64 %234
  %240 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %239 to i64
  %241 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %237, i64 %230
  %242 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %241 to i64
  %243 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %195 to i64
  %244 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %256, i64 1
  %264 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %263 to i64
  %265 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !21

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 1
  %283 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 1
  %284 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 2
  %288 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 2
  %289 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 3
  %293 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 3
  %294 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 4
  %298 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 4
  %299 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 5
  %303 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 5
  %304 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 6
  %308 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 6
  %309 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 7
  %313 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 7
  %314 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 8
  %318 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %317 to i64
  %319 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 8
  %320 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %247 to i64
  %323 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %325 to i8*
  call void @_ZdlPv(i8* %330) #16
  %331 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  %336 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %335, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %336, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.362"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #15
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.362", %"struct.std::__1::__split_buffer.362"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.362", %"struct.std::__1::__split_buffer.362"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.362", %"struct.std::__1::__split_buffer.362"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.362", %"struct.std::__1::__split_buffer.362"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.362"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.perfetto::trace_processor::StringPool::Id"** null, %"struct.perfetto::trace_processor::StringPool::Id"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.86"** %342 to %"class.std::__1::__compressed_pair.83"**
  store %"class.std::__1::__compressed_pair.83"* %346, %"class.std::__1::__compressed_pair.83"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #17
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #16
  %354 = bitcast i8* %353 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %355 = bitcast %"struct.std::__1::__split_buffer.362"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %354, i64 %171
  store %"struct.perfetto::trace_processor::StringPool::Id"** %356, %"struct.perfetto::trace_processor::StringPool::Id"*** %340, align 8
  store %"struct.perfetto::trace_processor::StringPool::Id"** %356, %"struct.perfetto::trace_processor::StringPool::Id"*** %339, align 8
  %357 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %354, i64 %345
  store %"struct.perfetto::trace_processor::StringPool::Id"** %357, %"struct.perfetto::trace_processor::StringPool::Id"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #16
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.perfetto::trace_processor::StringPool::Id"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %356, i64 %370
  store %"struct.perfetto::trace_processor::StringPool::Id"** %371, %"struct.perfetto::trace_processor::StringPool::Id"*** %340, align 8
  store %"struct.perfetto::trace_processor::StringPool::Id"** %371, %"struct.perfetto::trace_processor::StringPool::Id"*** %339, align 8
  %372 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #17
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.362"* %4 to i64*
  %382 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #16
  %386 = bitcast i8* %385 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %386, i64 %383
  %389 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %388 to i64
  %390 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %386, i64 %377
  %391 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #16
  %394 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  %395 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %396 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %395 to i64
  %397 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %406, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %408, %"struct.perfetto::trace_processor::StringPool::Id"*** %340, align 8
  %409 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.362"* %4 to i64*
  %413 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %339 to i64*
  %414 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %340 to i64*
  %415 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.362"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %441 = inttoptr i64 %434 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %442 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %441, i64 -1
  %445 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %441, i64 %448
  store %"struct.perfetto::trace_processor::StringPool::Id"** %449, %"struct.perfetto::trace_processor::StringPool::Id"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #16
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #15
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.362"* nonnull %4, %"struct.perfetto::trace_processor::StringPool::Id"** dereferenceable(8) %457)
  %458 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %459 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"struct.perfetto::trace_processor::StringPool::Id"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  %7 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %4, %6
  %8 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %6 to i64
  %9 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %13, align 8
  %15 = icmp ugt %"struct.perfetto::trace_processor::StringPool::Id"** %12, %14
  %16 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %12, i64 %22
  %24 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %23 to i8*
  %30 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %23, i64 %26
  store %"struct.perfetto::trace_processor::StringPool::Id"** %34, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %35 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %33, i64 %22
  store %"struct.perfetto::trace_processor::StringPool::Id"** %35, %"struct.perfetto::trace_processor::StringPool::Id"*** %11, align 8
  %36 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %50, i64 %47
  %53 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %52 to i64
  %54 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %50, i64 %43
  %55 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %54 to i64
  %56 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %12 to i64
  %57 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %69, i64 1
  %77 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %76 to i64
  %78 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !22

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 1
  %96 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 1
  %97 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 2
  %101 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 2
  %102 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 3
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 3
  %107 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 4
  %111 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 4
  %112 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 5
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 5
  %117 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 6
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 6
  %122 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 7
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 7
  %127 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 8
  %131 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %130 to i64
  %132 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 8
  %133 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %60 to i64
  %136 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %153 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %152, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %153, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"*, %"struct.perfetto::trace_processor::StringPool::Id"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  %7 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %4, %6
  %8 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %12, align 8
  %14 = icmp ult %"struct.perfetto::trace_processor::StringPool::Id"** %11, %13
  %15 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %12 to i64*
  %16 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %11, i64 %22
  %24 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %23, i64 %29
  %31 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %30 to i8*
  %32 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.perfetto::trace_processor::StringPool::Id"** %36, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %37 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %35, i64 %22
  store %"struct.perfetto::trace_processor::StringPool::Id"** %37, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %51, i64 %48
  %54 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %53 to i64
  %55 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %51, i64 %43
  %56 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %55 to i64
  %57 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %58 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %70, i64 1
  %78 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %77 to i64
  %79 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !23

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 1
  %97 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 1
  %98 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 2
  %102 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 2
  %103 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 3
  %107 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 3
  %108 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 4
  %112 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 4
  %113 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 5
  %117 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 5
  %118 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 6
  %122 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 6
  %123 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 7
  %127 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 7
  %128 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 8
  %132 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %131 to i64
  %133 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 8
  %134 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %61 to i64
  %137 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %148, i64 -1
  %150 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %154 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %153, i64 -1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %154, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.362"*, %"struct.perfetto::trace_processor::StringPool::Id"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.362", %"struct.std::__1::__split_buffer.362"* %0, i64 0, i32 1
  %4 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.362", %"struct.std::__1::__split_buffer.362"* %0, i64 0, i32 0
  %6 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  %7 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %4, %6
  %8 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.362", %"struct.std::__1::__split_buffer.362"* %0, i64 0, i32 2
  %11 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.362", %"struct.std::__1::__split_buffer.362"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %12, align 8
  %14 = icmp ult %"struct.perfetto::trace_processor::StringPool::Id"** %11, %13
  %15 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %12 to i64*
  %16 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %11, i64 %22
  %24 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %23, i64 %29
  %31 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %30 to i8*
  %32 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.perfetto::trace_processor::StringPool::Id"** %36, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %37 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %35, i64 %22
  store %"struct.perfetto::trace_processor::StringPool::Id"** %37, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.362"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %51, i64 %48
  %54 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %53 to i64
  %55 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %51, i64 %43
  %56 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %55 to i64
  %57 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %58 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %70, i64 1
  %78 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %77 to i64
  %79 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !24

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 1
  %97 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 1
  %98 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 2
  %102 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 2
  %103 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 3
  %107 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 3
  %108 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 4
  %112 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 4
  %113 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 5
  %117 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 5
  %118 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 6
  %122 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 6
  %123 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 7
  %127 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 7
  %128 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 8
  %132 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %131 to i64
  %133 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 8
  %134 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %61 to i64
  %137 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %148, i64 -1
  %150 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %154 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %153, i64 -1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %154, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.perfetto::trace_processor::BitVector::Address"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.perfetto::trace_processor::BitVector::Address"*
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %278, label %11

11:                                               ; preds = %3
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %13, label %24

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::vector.5"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1
  %20 = bitcast %"class.std::__1::vector.2"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast i32** %22 to i64*
  store i64 %21, i64* %23, align 8
  store i32 0, i32* %8, align 8
  br label %278

24:                                               ; preds = %11
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  %26 = bitcast i64* %4 to i32*
  %27 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %5, i64 0, i32 1, i32 0
  %28 = add i32 %1, -1
  %29 = lshr i32 %28, 9
  %30 = lshr i32 %28, 6
  %31 = and i32 %30, 7
  %32 = zext i32 %31 to i64
  %33 = and i32 %28, 63
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 48
  %36 = shl nuw nsw i64 %32, 32
  %37 = zext i32 %29 to i64
  %38 = or i64 %35, %37
  %39 = or i64 %38, %36
  store i64 %39, i64* %4, align 8
  %40 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.2"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = lshr exact i64 %46, 2
  %48 = trunc i64 %47 to i32
  %49 = add nuw nsw i32 %29, 1
  %50 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2
  %51 = zext i32 %49 to i64
  %52 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 1
  %53 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.5"* %50 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 6
  %59 = icmp ult i64 %58, %51
  %60 = inttoptr i64 %56 to %"class.perfetto::trace_processor::BitVector::Block"*
  br i1 %59, label %61, label %66

61:                                               ; preds = %24
  %62 = sub nsw i64 %51, %58
  tail call void @_ZNSt3__16vectorIN8perfetto15trace_processor9BitVector5BlockENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.5"* %50, i64 %62) #15
  %63 = load i64, i64* %42, align 8
  %64 = load i64, i64* %44, align 8
  %65 = sub i64 %63, %64
  br label %70

66:                                               ; preds = %24
  %67 = icmp ugt i64 %58, %51
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %60, i64 %51
  store %"class.perfetto::trace_processor::BitVector::Block"* %69, %"class.perfetto::trace_processor::BitVector::Block"** %52, align 8
  br label %70

70:                                               ; preds = %61, %66, %68
  %71 = phi i64 [ %65, %61 ], [ %46, %66 ], [ %46, %68 ]
  %72 = phi i64 [ %64, %61 ], [ %45, %66 ], [ %45, %68 ]
  %73 = ashr exact i64 %71, 2
  %74 = icmp ult i64 %73, %51
  %75 = inttoptr i64 %72 to i32*
  br i1 %74, label %76, label %78

76:                                               ; preds = %70
  %77 = sub nsw i64 %51, %73
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.2"* %40, i64 %77) #15
  br label %82

78:                                               ; preds = %70
  %79 = icmp ugt i64 %73, %51
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = getelementptr inbounds i32, i32* %75, i64 %51
  store i32* %81, i32** %41, align 8
  br label %82

82:                                               ; preds = %76, %78, %80
  %83 = icmp ult i32 %9, %1
  br i1 %83, label %84, label %251

84:                                               ; preds = %82
  br i1 %2, label %85, label %173

85:                                               ; preds = %84
  %86 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #15
  %87 = lshr i32 %9, 9
  %88 = lshr i32 %9, 6
  %89 = and i32 %88, 7
  %90 = zext i32 %89 to i64
  %91 = and i32 %9, 63
  %92 = zext i32 %91 to i64
  %93 = shl nuw nsw i64 %92, 48
  %94 = shl nuw nsw i64 %90, 32
  %95 = zext i32 %87 to i64
  %96 = or i64 %93, %95
  %97 = or i64 %96, %94
  store i64 %97, i64* %6, align 8
  call void @_ZN8perfetto15trace_processor9BitVector3SetERKNS1_7AddressES4_(%"class.perfetto::trace_processor::BitVector"* %0, %"struct.perfetto::trace_processor::BitVector::Address"* nonnull dereferenceable(8) %7, %"struct.perfetto::trace_processor::BitVector::Address"* nonnull dereferenceable(8) %5)
  %98 = bitcast i64* %6 to i32*
  %99 = load i32, i32* %98, align 8
  %100 = shl i32 %99, 9
  %101 = or i32 %100, 511
  %102 = load i64, i64* %6, align 8
  %103 = trunc i64 %102 to i32
  %104 = lshr i64 %102, 48
  %105 = trunc i64 %104 to i32
  %106 = lshr i64 %102, 26
  %107 = trunc i64 %106 to i32
  %108 = and i32 %107, 4194240
  %109 = mul i32 %103, -512
  %110 = load i32, i32* %8, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %150, label %112

112:                                              ; preds = %85
  %113 = add i32 %110, -1
  %114 = lshr i32 %113, 9
  %115 = lshr i32 %113, 6
  %116 = and i32 %115, 7
  %117 = zext i32 %116 to i64
  %118 = and i32 %113, 63
  %119 = zext i32 %114 to i64
  %120 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 %119
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 0
  %125 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %124, align 8
  %126 = icmp eq i32 %116, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %112
  %128 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = call i64 @llvm.ctpop.i64(i64 %129) #15, !range !5
  %131 = trunc i64 %130 to i32
  %132 = icmp eq i32 %116, 1
  br i1 %132, label %133, label %279

133:                                              ; preds = %127, %279, %286, %293, %300, %307, %314, %112
  %134 = phi i32 [ 0, %112 ], [ %131, %127 ], [ %284, %279 ], [ %291, %286 ], [ %298, %293 ], [ %305, %300 ], [ %312, %307 ], [ %319, %314 ]
  %135 = add nuw nsw i32 %118, 1
  %136 = and i32 %135, 63
  %137 = zext i32 %136 to i64
  %138 = shl i64 1, %137
  %139 = lshr i32 %135, 6
  %140 = zext i32 %139 to i64
  %141 = lshr i64 %138, %140
  %142 = add i64 %141, -1
  %143 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 %117, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %142
  %146 = call i64 @llvm.ctpop.i64(i64 %145) #15, !range !5
  %147 = trunc i64 %146 to i32
  %148 = add i32 %134, %123
  %149 = add i32 %148, %147
  br label %150

150:                                              ; preds = %85, %133
  %151 = phi i32 [ %149, %133 ], [ 0, %85 ]
  %152 = add i32 %99, 1
  %153 = load i32, i32* %26, align 8
  %154 = icmp ugt i32 %152, %153
  br i1 %154, label %162, label %155

155:                                              ; preds = %150
  %156 = add i32 %101, 1
  %157 = sub i32 %156, %105
  %158 = add i32 %157, %109
  %159 = sub i32 %158, %108
  %160 = add i32 %159, %151
  %161 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %40, i64 0, i32 0, i32 0
  br label %163

162:                                              ; preds = %163, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #15
  br label %277

163:                                              ; preds = %155, %163
  %164 = phi i32 [ %152, %155 ], [ %170, %163 ]
  %165 = phi i32 [ %160, %155 ], [ %169, %163 ]
  %166 = zext i32 %164 to i64
  %167 = load i32*, i32** %161, align 8
  %168 = getelementptr inbounds i32, i32* %167, i64 %166
  store i32 %165, i32* %168, align 4
  %169 = add i32 %165, 512
  %170 = add i32 %164, 1
  %171 = load i32, i32* %26, align 8
  %172 = icmp ugt i32 %170, %171
  br i1 %172, label %162, label %163

173:                                              ; preds = %84
  %174 = icmp ult i32 %29, %48
  br i1 %174, label %277, label %175

175:                                              ; preds = %173
  %176 = load i32, i32* %8, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %216, label %178

178:                                              ; preds = %175
  %179 = add i32 %176, -1
  %180 = lshr i32 %179, 9
  %181 = lshr i32 %179, 6
  %182 = and i32 %181, 7
  %183 = zext i32 %182 to i64
  %184 = and i32 %179, 63
  %185 = zext i32 %180 to i64
  %186 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 %185
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 0
  %191 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %190, align 8
  %192 = icmp eq i32 %182, 0
  br i1 %192, label %199, label %193

193:                                              ; preds = %178
  %194 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = tail call i64 @llvm.ctpop.i64(i64 %195) #15, !range !5
  %197 = trunc i64 %196 to i32
  %198 = icmp eq i32 %182, 1
  br i1 %198, label %199, label %320

199:                                              ; preds = %193, %320, %327, %334, %341, %348, %355, %178
  %200 = phi i32 [ 0, %178 ], [ %197, %193 ], [ %325, %320 ], [ %332, %327 ], [ %339, %334 ], [ %346, %341 ], [ %353, %348 ], [ %360, %355 ]
  %201 = add nuw nsw i32 %184, 1
  %202 = and i32 %201, 63
  %203 = zext i32 %202 to i64
  %204 = shl i64 1, %203
  %205 = lshr i32 %201, 6
  %206 = zext i32 %205 to i64
  %207 = lshr i64 %204, %206
  %208 = add i64 %207, -1
  %209 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 %183, i32 0
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, %208
  %212 = tail call i64 @llvm.ctpop.i64(i64 %211) #15, !range !5
  %213 = trunc i64 %212 to i32
  %214 = add i32 %200, %189
  %215 = add i32 %214, %213
  br label %216

216:                                              ; preds = %199, %175
  %217 = phi i32 [ %215, %199 ], [ 0, %175 ]
  %218 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %40, i64 0, i32 0, i32 0
  %219 = and i64 %47, 4294967295
  %220 = sub nsw i64 %51, %47
  %221 = xor i64 %219, -1
  %222 = add nsw i64 %221, %51
  %223 = and i64 %220, 3
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %233, label %225

225:                                              ; preds = %216, %225
  %226 = phi i64 [ %230, %225 ], [ %219, %216 ]
  %227 = phi i64 [ %231, %225 ], [ %223, %216 ]
  %228 = load i32*, i32** %218, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 %226
  store i32 %217, i32* %229, align 4
  %230 = add nuw nsw i64 %226, 1
  %231 = add i64 %227, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %225, !llvm.loop !25

233:                                              ; preds = %225, %216
  %234 = phi i64 [ %219, %216 ], [ %230, %225 ]
  %235 = icmp ult i64 %222, 3
  br i1 %235, label %277, label %236

236:                                              ; preds = %233, %236
  %237 = phi i64 [ %249, %236 ], [ %234, %233 ]
  %238 = load i32*, i32** %218, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %237
  store i32 %217, i32* %239, align 4
  %240 = add nuw nsw i64 %237, 1
  %241 = load i32*, i32** %218, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 %240
  store i32 %217, i32* %242, align 4
  %243 = add nuw nsw i64 %237, 2
  %244 = load i32*, i32** %218, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 %243
  store i32 %217, i32* %245, align 4
  %246 = add nuw nsw i64 %237, 3
  %247 = load i32*, i32** %218, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 %246
  store i32 %217, i32* %248, align 4
  %249 = add nuw nsw i64 %237, 4
  %250 = icmp eq i64 %249, %51
  br i1 %250, label %277, label %236

251:                                              ; preds = %82
  %252 = zext i32 %29 to i64
  %253 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %50, i64 0, i32 0, i32 0
  %254 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %253, align 8
  %255 = add nuw nsw i32 %33, 1
  %256 = and i32 %255, 63
  %257 = zext i32 %256 to i64
  %258 = shl i64 1, %257
  %259 = lshr i32 %255, 6
  %260 = zext i32 %259 to i64
  %261 = lshr i64 %258, %260
  %262 = add i64 %261, -1
  %263 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %254, i64 %252, i32 0, i32 0, i64 %32, i32 0
  %264 = load i64, i64* %263, align 8
  %265 = and i64 %262, %264
  store i64 %265, i64* %263, align 8
  %266 = load i16, i16* %27, align 4
  %267 = icmp ult i16 %266, 7
  br i1 %267, label %268, label %277

268:                                              ; preds = %251
  %269 = zext i16 %266 to i64
  %270 = add nuw nsw i64 %269, 1
  %271 = getelementptr %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %254, i64 %252, i32 0, i32 0, i64 %270
  %272 = bitcast %"class.perfetto::trace_processor::BitVector::BitWord"* %271 to i8*
  %273 = shl nuw nsw i64 %269, 3
  %274 = sub nuw nsw i64 48, %273
  %275 = and i64 %274, 34359738360
  %276 = add nuw nsw i64 %275, 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 %276, i1 false) #15
  br label %277

277:                                              ; preds = %233, %236, %173, %268, %251, %162
  store i32 %1, i32* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  br label %278

278:                                              ; preds = %3, %277, %13
  ret void

279:                                              ; preds = %127
  %280 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 1, i32 0
  %281 = load i64, i64* %280, align 8
  %282 = call i64 @llvm.ctpop.i64(i64 %281) #15, !range !5
  %283 = trunc i64 %282 to i32
  %284 = add nuw nsw i32 %131, %283
  %285 = icmp eq i32 %116, 2
  br i1 %285, label %133, label %286

286:                                              ; preds = %279
  %287 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 2, i32 0
  %288 = load i64, i64* %287, align 8
  %289 = call i64 @llvm.ctpop.i64(i64 %288) #15, !range !5
  %290 = trunc i64 %289 to i32
  %291 = add nuw nsw i32 %284, %290
  %292 = icmp eq i32 %116, 3
  br i1 %292, label %133, label %293

293:                                              ; preds = %286
  %294 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 3, i32 0
  %295 = load i64, i64* %294, align 8
  %296 = call i64 @llvm.ctpop.i64(i64 %295) #15, !range !5
  %297 = trunc i64 %296 to i32
  %298 = add nuw nsw i32 %291, %297
  %299 = icmp eq i32 %116, 4
  br i1 %299, label %133, label %300

300:                                              ; preds = %293
  %301 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 4, i32 0
  %302 = load i64, i64* %301, align 8
  %303 = call i64 @llvm.ctpop.i64(i64 %302) #15, !range !5
  %304 = trunc i64 %303 to i32
  %305 = add nuw nsw i32 %298, %304
  %306 = icmp eq i32 %116, 5
  br i1 %306, label %133, label %307

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 5, i32 0
  %309 = load i64, i64* %308, align 8
  %310 = call i64 @llvm.ctpop.i64(i64 %309) #15, !range !5
  %311 = trunc i64 %310 to i32
  %312 = add nuw nsw i32 %305, %311
  %313 = icmp eq i32 %116, 6
  br i1 %313, label %133, label %314

314:                                              ; preds = %307
  %315 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 6, i32 0
  %316 = load i64, i64* %315, align 8
  %317 = call i64 @llvm.ctpop.i64(i64 %316) #15, !range !5
  %318 = trunc i64 %317 to i32
  %319 = add i32 %312, %318
  br label %133

320:                                              ; preds = %193
  %321 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 1, i32 0
  %322 = load i64, i64* %321, align 8
  %323 = tail call i64 @llvm.ctpop.i64(i64 %322) #15, !range !5
  %324 = trunc i64 %323 to i32
  %325 = add nuw nsw i32 %197, %324
  %326 = icmp eq i32 %182, 2
  br i1 %326, label %199, label %327

327:                                              ; preds = %320
  %328 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 2, i32 0
  %329 = load i64, i64* %328, align 8
  %330 = tail call i64 @llvm.ctpop.i64(i64 %329) #15, !range !5
  %331 = trunc i64 %330 to i32
  %332 = add nuw nsw i32 %325, %331
  %333 = icmp eq i32 %182, 3
  br i1 %333, label %199, label %334

334:                                              ; preds = %327
  %335 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 3, i32 0
  %336 = load i64, i64* %335, align 8
  %337 = tail call i64 @llvm.ctpop.i64(i64 %336) #15, !range !5
  %338 = trunc i64 %337 to i32
  %339 = add nuw nsw i32 %332, %338
  %340 = icmp eq i32 %182, 4
  br i1 %340, label %199, label %341

341:                                              ; preds = %334
  %342 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 4, i32 0
  %343 = load i64, i64* %342, align 8
  %344 = tail call i64 @llvm.ctpop.i64(i64 %343) #15, !range !5
  %345 = trunc i64 %344 to i32
  %346 = add nuw nsw i32 %339, %345
  %347 = icmp eq i32 %182, 5
  br i1 %347, label %199, label %348

348:                                              ; preds = %341
  %349 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 5, i32 0
  %350 = load i64, i64* %349, align 8
  %351 = tail call i64 @llvm.ctpop.i64(i64 %350) #15, !range !5
  %352 = trunc i64 %351 to i32
  %353 = add nuw nsw i32 %346, %352
  %354 = icmp eq i32 %182, 6
  br i1 %354, label %199, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 6, i32 0
  %357 = load i64, i64* %356, align 8
  %358 = tail call i64 @llvm.ctpop.i64(i64 %357) #15, !range !5
  %359 = trunc i64 %358 to i32
  %360 = add i32 %353, %359
  br label %199
}

declare void @_ZN8perfetto15trace_processor6RowMapC1ENS0_9BitVectorE(%"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::BitVector"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_(%"class.std::__1::vector.2"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = bitcast i32* %1 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %166

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = load i32, i32* %2, align 4
  store i32 %17, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %410

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %149

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !26
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !26
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !29, !noalias !26
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !29, !noalias !26
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !26
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !26
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !29, !noalias !26
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !29, !noalias !26
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !26
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !26
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !29, !noalias !26
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !29, !noalias !26
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !26
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !26
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !29, !noalias !26
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !29, !noalias !26
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !31

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !26
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !26
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !29, !noalias !26
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !29, !noalias !26
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !33

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %149, %137
  %140 = phi i32* [ %60, %137 ], [ %154, %149 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %5, i64 %24, i1 false) #15
  br label %156

149:                                              ; preds = %39, %149
  %150 = phi i32* [ %154, %149 ], [ %40, %39 ]
  %151 = phi i32* [ %153, %149 ], [ %41, %39 ]
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds i32, i32* %151, i64 1
  %154 = getelementptr inbounds i32, i32* %150, i64 1
  %155 = icmp ult i32* %153, %8
  br i1 %155, label %149, label %139, !llvm.loop !34

156:                                              ; preds = %142, %145
  %157 = icmp ugt i32* %1, %2
  br i1 %157, label %163, label %158

158:                                              ; preds = %156
  %159 = load i32*, i32** %7, align 8
  %160 = icmp ugt i32* %159, %2
  %161 = getelementptr inbounds i32, i32* %2, i64 1
  %162 = select i1 %160, i32* %161, i32* %2
  br label %163

163:                                              ; preds = %158, %156
  %164 = phi i32* [ %2, %156 ], [ %162, %158 ]
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %1, align 4
  br label %410

166:                                              ; preds = %3
  %167 = bitcast i32** %7 to i64*
  %168 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %166
  %175 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #17
  unreachable

176:                                              ; preds = %166
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %184, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  br label %194

184:                                              ; preds = %176
  %185 = ashr exact i64 %178, 1
  %186 = icmp ult i64 %185, %172
  %187 = select i1 %186, i64 %172, i64 %185
  %188 = sub i64 %4, %169
  %189 = ashr exact i64 %188, 2
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %200, label %191

191:                                              ; preds = %184
  %192 = icmp ugt i64 %187, 4611686018427387903
  br i1 %192, label %193, label %194

193:                                              ; preds = %191
  tail call void @abort() #17
  unreachable

194:                                              ; preds = %181, %191
  %195 = phi i64 [ 4611686018427387903, %181 ], [ %187, %191 ]
  %196 = phi i64 [ %183, %181 ], [ %189, %191 ]
  %197 = shl i64 %195, 2
  %198 = tail call i8* @_Znwm(i64 %197) #16
  %199 = bitcast i8* %198 to i32*
  br label %200

200:                                              ; preds = %184, %194
  %201 = phi i64 [ %196, %194 ], [ %189, %184 ]
  %202 = phi i64 [ %195, %194 ], [ 0, %184 ]
  %203 = phi i8* [ %198, %194 ], [ null, %184 ]
  %204 = phi i32* [ %199, %194 ], [ null, %184 ]
  %205 = getelementptr inbounds i32, i32* %204, i64 %201
  %206 = getelementptr inbounds i32, i32* %204, i64 %202
  %207 = ptrtoint i32* %206 to i64
  %208 = icmp eq i64 %201, %202
  br i1 %208, label %209, label %231

209:                                              ; preds = %200
  %210 = icmp sgt i64 %201, 0
  br i1 %210, label %211, label %215

211:                                              ; preds = %209
  %212 = add nuw nsw i64 %201, 1
  %213 = sdiv i64 %212, -2
  %214 = getelementptr inbounds i32, i32* %205, i64 %213
  br label %231

215:                                              ; preds = %209
  %216 = shl nsw i64 %201, 1
  %217 = icmp eq i64 %201, 0
  %218 = select i1 %217, i64 1, i64 %216
  %219 = icmp ugt i64 %218, 4611686018427387903
  br i1 %219, label %220, label %221

220:                                              ; preds = %215
  tail call void @abort() #17
  unreachable

221:                                              ; preds = %215
  %222 = lshr i64 %218, 2
  %223 = shl i64 %218, 2
  %224 = tail call i8* @_Znwm(i64 %223) #16
  %225 = bitcast i8* %224 to i32*
  %226 = getelementptr inbounds i32, i32* %225, i64 %222
  %227 = getelementptr inbounds i32, i32* %225, i64 %218
  %228 = ptrtoint i32* %227 to i64
  %229 = icmp eq i32* %204, null
  br i1 %229, label %231, label %230

230:                                              ; preds = %221
  tail call void @_ZdlPv(i8* %203) #16
  br label %231

231:                                              ; preds = %200, %211, %221, %230
  %232 = phi i32* [ %214, %211 ], [ %226, %221 ], [ %226, %230 ], [ %205, %200 ]
  %233 = phi i64 [ %207, %211 ], [ %228, %221 ], [ %228, %230 ], [ %207, %200 ]
  %234 = load i32, i32* %2, align 4
  store i32 %234, i32* %232, align 4
  %235 = getelementptr inbounds i32, i32* %232, i64 1
  %236 = load i32*, i32** %6, align 8
  %237 = ptrtoint i32* %236 to i64
  %238 = sub i64 %4, %237
  %239 = ashr exact i64 %238, 2
  %240 = sub nsw i64 0, %239
  %241 = getelementptr inbounds i32, i32* %232, i64 %240
  %242 = ptrtoint i32* %241 to i64
  %243 = icmp sgt i64 %238, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %231
  %245 = bitcast i32* %241 to i8*
  %246 = bitcast i32* %236 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* align 4 %246, i64 %238, i1 false) #15
  br label %247

247:                                              ; preds = %244, %231
  %248 = load i32*, i32** %7, align 8
  %249 = icmp eq i32* %248, %1
  br i1 %249, label %403, label %250

250:                                              ; preds = %247
  %251 = getelementptr i32, i32* %248, i64 -1
  %252 = ptrtoint i32* %251 to i64
  %253 = sub i64 %252, %4
  %254 = lshr i64 %253, 2
  %255 = add nuw nsw i64 %254, 1
  %256 = icmp ult i64 %255, 8
  br i1 %256, label %350, label %257

257:                                              ; preds = %250
  %258 = getelementptr i32, i32* %248, i64 -1
  %259 = ptrtoint i32* %258 to i64
  %260 = sub i64 %259, %4
  %261 = lshr i64 %260, 2
  %262 = add nuw nsw i64 %261, 2
  %263 = getelementptr i32, i32* %232, i64 %262
  %264 = add nuw nsw i64 %261, 1
  %265 = getelementptr i32, i32* %1, i64 %264
  %266 = icmp ult i32* %235, %265
  %267 = icmp ugt i32* %263, %1
  %268 = and i1 %266, %267
  br i1 %268, label %350, label %269

269:                                              ; preds = %257
  %270 = and i64 %255, 9223372036854775800
  %271 = getelementptr i32, i32* %235, i64 %270
  %272 = getelementptr i32, i32* %1, i64 %270
  %273 = add nsw i64 %270, -8
  %274 = lshr exact i64 %273, 3
  %275 = add nuw nsw i64 %274, 1
  %276 = and i64 %275, 3
  %277 = icmp ult i64 %273, 24
  br i1 %277, label %329, label %278

278:                                              ; preds = %269
  %279 = sub nsw i64 %275, %276
  br label %280

280:                                              ; preds = %280, %278
  %281 = phi i64 [ 0, %278 ], [ %326, %280 ]
  %282 = phi i64 [ %279, %278 ], [ %327, %280 ]
  %283 = getelementptr i32, i32* %235, i64 %281
  %284 = getelementptr i32, i32* %1, i64 %281
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4, !alias.scope !35
  %287 = getelementptr i32, i32* %284, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4, !alias.scope !35
  %290 = bitcast i32* %283 to <4 x i32>*
  store <4 x i32> %286, <4 x i32>* %290, align 4, !alias.scope !38, !noalias !35
  %291 = getelementptr i32, i32* %283, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  store <4 x i32> %289, <4 x i32>* %292, align 4, !alias.scope !38, !noalias !35
  %293 = or i64 %281, 8
  %294 = getelementptr i32, i32* %235, i64 %293
  %295 = getelementptr i32, i32* %1, i64 %293
  %296 = bitcast i32* %295 to <4 x i32>*
  %297 = load <4 x i32>, <4 x i32>* %296, align 4, !alias.scope !35
  %298 = getelementptr i32, i32* %295, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  %300 = load <4 x i32>, <4 x i32>* %299, align 4, !alias.scope !35
  %301 = bitcast i32* %294 to <4 x i32>*
  store <4 x i32> %297, <4 x i32>* %301, align 4, !alias.scope !38, !noalias !35
  %302 = getelementptr i32, i32* %294, i64 4
  %303 = bitcast i32* %302 to <4 x i32>*
  store <4 x i32> %300, <4 x i32>* %303, align 4, !alias.scope !38, !noalias !35
  %304 = or i64 %281, 16
  %305 = getelementptr i32, i32* %235, i64 %304
  %306 = getelementptr i32, i32* %1, i64 %304
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4, !alias.scope !35
  %309 = getelementptr i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4, !alias.scope !35
  %312 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %308, <4 x i32>* %312, align 4, !alias.scope !38, !noalias !35
  %313 = getelementptr i32, i32* %305, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  store <4 x i32> %311, <4 x i32>* %314, align 4, !alias.scope !38, !noalias !35
  %315 = or i64 %281, 24
  %316 = getelementptr i32, i32* %235, i64 %315
  %317 = getelementptr i32, i32* %1, i64 %315
  %318 = bitcast i32* %317 to <4 x i32>*
  %319 = load <4 x i32>, <4 x i32>* %318, align 4, !alias.scope !35
  %320 = getelementptr i32, i32* %317, i64 4
  %321 = bitcast i32* %320 to <4 x i32>*
  %322 = load <4 x i32>, <4 x i32>* %321, align 4, !alias.scope !35
  %323 = bitcast i32* %316 to <4 x i32>*
  store <4 x i32> %319, <4 x i32>* %323, align 4, !alias.scope !38, !noalias !35
  %324 = getelementptr i32, i32* %316, i64 4
  %325 = bitcast i32* %324 to <4 x i32>*
  store <4 x i32> %322, <4 x i32>* %325, align 4, !alias.scope !38, !noalias !35
  %326 = add i64 %281, 32
  %327 = add i64 %282, -4
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %280, !llvm.loop !40

329:                                              ; preds = %280, %269
  %330 = phi i64 [ 0, %269 ], [ %326, %280 ]
  %331 = icmp eq i64 %276, 0
  br i1 %331, label %348, label %332

332:                                              ; preds = %329, %332
  %333 = phi i64 [ %345, %332 ], [ %330, %329 ]
  %334 = phi i64 [ %346, %332 ], [ %276, %329 ]
  %335 = getelementptr i32, i32* %235, i64 %333
  %336 = getelementptr i32, i32* %1, i64 %333
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4, !alias.scope !35
  %339 = getelementptr i32, i32* %336, i64 4
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 4, !alias.scope !35
  %342 = bitcast i32* %335 to <4 x i32>*
  store <4 x i32> %338, <4 x i32>* %342, align 4, !alias.scope !38, !noalias !35
  %343 = getelementptr i32, i32* %335, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  store <4 x i32> %341, <4 x i32>* %344, align 4, !alias.scope !38, !noalias !35
  %345 = add i64 %333, 8
  %346 = add i64 %334, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %332, !llvm.loop !41

348:                                              ; preds = %332, %329
  %349 = icmp eq i64 %255, %270
  br i1 %349, label %403, label %350

350:                                              ; preds = %348, %257, %250
  %351 = phi i32* [ %235, %257 ], [ %235, %250 ], [ %271, %348 ]
  %352 = phi i32* [ %1, %257 ], [ %1, %250 ], [ %272, %348 ]
  %353 = ptrtoint i32* %352 to i64
  %354 = getelementptr i32, i32* %248, i64 -1
  %355 = ptrtoint i32* %354 to i64
  %356 = sub i64 %355, %353
  %357 = lshr i64 %356, 2
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 7
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %370, label %361

361:                                              ; preds = %350, %361
  %362 = phi i32* [ %367, %361 ], [ %351, %350 ]
  %363 = phi i32* [ %366, %361 ], [ %352, %350 ]
  %364 = phi i64 [ %368, %361 ], [ %359, %350 ]
  %365 = load i32, i32* %363, align 4
  store i32 %365, i32* %362, align 4
  %366 = getelementptr inbounds i32, i32* %363, i64 1
  %367 = getelementptr inbounds i32, i32* %362, i64 1
  %368 = add i64 %364, -1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %370, label %361, !llvm.loop !42

370:                                              ; preds = %361, %350
  %371 = phi i32* [ undef, %350 ], [ %367, %361 ]
  %372 = phi i32* [ %351, %350 ], [ %367, %361 ]
  %373 = phi i32* [ %352, %350 ], [ %366, %361 ]
  %374 = icmp ult i64 %356, 28
  br i1 %374, label %403, label %375

375:                                              ; preds = %370, %375
  %376 = phi i32* [ %401, %375 ], [ %372, %370 ]
  %377 = phi i32* [ %400, %375 ], [ %373, %370 ]
  %378 = load i32, i32* %377, align 4
  store i32 %378, i32* %376, align 4
  %379 = getelementptr inbounds i32, i32* %377, i64 1
  %380 = getelementptr inbounds i32, i32* %376, i64 1
  %381 = load i32, i32* %379, align 4
  store i32 %381, i32* %380, align 4
  %382 = getelementptr inbounds i32, i32* %377, i64 2
  %383 = getelementptr inbounds i32, i32* %376, i64 2
  %384 = load i32, i32* %382, align 4
  store i32 %384, i32* %383, align 4
  %385 = getelementptr inbounds i32, i32* %377, i64 3
  %386 = getelementptr inbounds i32, i32* %376, i64 3
  %387 = load i32, i32* %385, align 4
  store i32 %387, i32* %386, align 4
  %388 = getelementptr inbounds i32, i32* %377, i64 4
  %389 = getelementptr inbounds i32, i32* %376, i64 4
  %390 = load i32, i32* %388, align 4
  store i32 %390, i32* %389, align 4
  %391 = getelementptr inbounds i32, i32* %377, i64 5
  %392 = getelementptr inbounds i32, i32* %376, i64 5
  %393 = load i32, i32* %391, align 4
  store i32 %393, i32* %392, align 4
  %394 = getelementptr inbounds i32, i32* %377, i64 6
  %395 = getelementptr inbounds i32, i32* %376, i64 6
  %396 = load i32, i32* %394, align 4
  store i32 %396, i32* %395, align 4
  %397 = getelementptr inbounds i32, i32* %377, i64 7
  %398 = getelementptr inbounds i32, i32* %376, i64 7
  %399 = load i32, i32* %397, align 4
  store i32 %399, i32* %398, align 4
  %400 = getelementptr inbounds i32, i32* %377, i64 8
  %401 = getelementptr inbounds i32, i32* %376, i64 8
  %402 = icmp eq i32* %400, %248
  br i1 %402, label %403, label %375, !llvm.loop !43

403:                                              ; preds = %370, %375, %348, %247
  %404 = phi i32* [ %235, %247 ], [ %271, %348 ], [ %371, %370 ], [ %401, %375 ]
  %405 = ptrtoint i32* %404 to i64
  %406 = load i32*, i32** %6, align 8
  store i64 %242, i64* %168, align 8
  store i64 %405, i64* %167, align 8
  store i64 %233, i64* %177, align 8
  %407 = icmp eq i32* %406, null
  br i1 %407, label %410, label %408

408:                                              ; preds = %403
  %409 = bitcast i32* %406 to i8*
  tail call void @_ZdlPv(i8* %409) #16
  br label %410

410:                                              ; preds = %408, %403, %16, %163
  %411 = phi i32* [ %1, %16 ], [ %1, %163 ], [ %232, %403 ], [ %232, %408 ]
  ret i32* %411
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor9BitVector3SetERKNS1_7AddressES4_(%"class.perfetto::trace_processor::BitVector"*, %"struct.perfetto::trace_processor::BitVector::Address"* dereferenceable(8), %"struct.perfetto::trace_processor::BitVector::Address"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %10, align 8
  %12 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %1, i64 0, i32 1, i32 0
  %13 = load i16, i16* %12, align 2
  br i1 %8, label %14, label %85

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %13, %16
  %18 = zext i16 %13 to i64
  %19 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %18
  %20 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %1, i64 0, i32 1, i32 1
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  br i1 %17, label %23, label %39

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = sub nsw i32 %26, %22
  %28 = add nsw i32 %27, 1
  %29 = and i32 %28, 63
  %30 = zext i32 %29 to i64
  %31 = shl i64 1, %30
  %32 = lshr i32 %28, 6
  %33 = zext i32 %32 to i64
  %34 = lshr i64 %31, %33
  %35 = add i64 %34, -1
  %36 = zext i16 %21 to i64
  %37 = shl i64 %35, %36
  %38 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::BitWord", %"class.perfetto::trace_processor::BitVector::BitWord"* %19, i64 0, i32 0
  br label %190

39:                                               ; preds = %14
  %40 = sub nsw i32 64, %22
  %41 = and i32 %40, 63
  %42 = zext i32 %41 to i64
  %43 = shl i64 1, %42
  %44 = lshr i32 %40, 6
  %45 = zext i32 %44 to i64
  %46 = lshr i64 %43, %45
  %47 = add i64 %46, -1
  %48 = zext i16 %21 to i64
  %49 = shl i64 %47, %48
  %50 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::BitWord", %"class.perfetto::trace_processor::BitVector::BitWord"* %19, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, %49
  store i64 %52, i64* %50, align 8
  %53 = load i16, i16* %12, align 2
  %54 = zext i16 %53 to i32
  %55 = add nuw nsw i32 %54, 1
  %56 = load i16, i16* %15, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp ult i32 %55, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %39
  %60 = zext i16 %53 to i64
  br label %76

61:                                               ; preds = %76, %39
  %62 = phi i16 [ %56, %39 ], [ %82, %76 ]
  %63 = zext i16 %62 to i64
  %64 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 1
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = add nuw nsw i32 %66, 1
  %68 = and i32 %67, 63
  %69 = zext i32 %68 to i64
  %70 = shl i64 1, %69
  %71 = lshr i32 %67, 6
  %72 = zext i32 %71 to i64
  %73 = lshr i64 %70, %72
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %63, i32 0
  br label %190

76:                                               ; preds = %76, %59
  %77 = phi i64 [ %60, %59 ], [ %79, %76 ]
  %78 = phi i32 [ %55, %59 ], [ %81, %76 ]
  %79 = add nuw nsw i64 %77, 1
  %80 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %79, i32 0
  store i64 -1, i64* %80, align 8
  %81 = add nuw i32 %78, 1
  %82 = load i16, i16* %15, align 2
  %83 = zext i16 %82 to i32
  %84 = icmp ult i32 %81, %83
  br i1 %84, label %76, label %61

85:                                               ; preds = %3
  %86 = icmp eq i16 %13, 7
  %87 = zext i16 %13 to i64
  %88 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %1, i64 0, i32 1, i32 1
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = sub nsw i32 64, %90
  %92 = and i32 %91, 63
  %93 = zext i32 %92 to i64
  %94 = shl i64 1, %93
  %95 = lshr i32 %91, 6
  %96 = zext i32 %95 to i64
  %97 = lshr i64 %94, %96
  %98 = add i64 %97, -1
  %99 = zext i16 %89 to i64
  %100 = shl i64 %98, %99
  %101 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %87, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = or i64 %100, %102
  store i64 %103, i64* %101, align 8
  br i1 %86, label %119, label %104

104:                                              ; preds = %85
  %105 = load i16, i16* %12, align 2
  %106 = icmp ult i16 %105, 6
  br i1 %106, label %107, label %117

107:                                              ; preds = %104
  %108 = zext i16 %105 to i64
  %109 = zext i16 %105 to i64
  %110 = add nuw nsw i64 %109, 1
  %111 = getelementptr %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %110
  %112 = bitcast %"class.perfetto::trace_processor::BitVector::BitWord"* %111 to i8*
  %113 = shl nuw nsw i64 %108, 3
  %114 = sub nuw nsw i64 40, %113
  %115 = and i64 %114, 34359738360
  %116 = add nuw nsw i64 %115, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 -1, i64 %116, i1 false)
  br label %117

117:                                              ; preds = %107, %104
  %118 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 7, i32 0
  store i64 -1, i64* %118, align 8
  br label %119

119:                                              ; preds = %85, %117
  %120 = load i32, i32* %4, align 4
  %121 = add i32 %120, 1
  %122 = load i32, i32* %6, align 4
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = zext i32 %121 to i64
  br label %175

126:                                              ; preds = %175, %119
  %127 = phi i32 [ %122, %119 ], [ %186, %175 ]
  %128 = zext i32 %127 to i64
  %129 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %10, align 8
  %130 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %129, i64 %128
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 0
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %134, label %147

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 1
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %136 to i32
  %138 = add nuw nsw i32 %137, 1
  %139 = and i32 %138, 63
  %140 = zext i32 %139 to i64
  %141 = shl i64 1, %140
  %142 = lshr i32 %138, 6
  %143 = zext i32 %142 to i64
  %144 = lshr i64 %141, %143
  %145 = add i64 %144, -1
  %146 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %130, i64 0, i32 0, i32 0, i64 0, i32 0
  br label %190

147:                                              ; preds = %126
  %148 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %130, i64 0, i32 0, i32 0, i64 0, i32 0
  store i64 -1, i64* %148, align 8
  %149 = load i16, i16* %131, align 2
  %150 = icmp ugt i16 %149, 1
  br i1 %150, label %166, label %151

151:                                              ; preds = %166, %147
  %152 = phi i16 [ %149, %147 ], [ %172, %166 ]
  %153 = zext i16 %152 to i64
  %154 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 1
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = add nuw nsw i32 %156, 1
  %158 = and i32 %157, 63
  %159 = zext i32 %158 to i64
  %160 = shl i64 1, %159
  %161 = lshr i32 %157, 6
  %162 = zext i32 %161 to i64
  %163 = lshr i64 %160, %162
  %164 = add i64 %163, -1
  %165 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %129, i64 %128, i32 0, i32 0, i64 %153, i32 0
  br label %190

166:                                              ; preds = %147, %166
  %167 = phi i64 [ %169, %166 ], [ 0, %147 ]
  %168 = phi i32 [ %171, %166 ], [ 1, %147 ]
  %169 = add nuw nsw i64 %167, 1
  %170 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %129, i64 %128, i32 0, i32 0, i64 %169, i32 0
  store i64 -1, i64* %170, align 8
  %171 = add nuw nsw i32 %168, 1
  %172 = load i16, i16* %131, align 2
  %173 = zext i16 %172 to i32
  %174 = icmp ult i32 %171, %173
  br i1 %174, label %166, label %151

175:                                              ; preds = %124, %175
  %176 = phi i64 [ %125, %124 ], [ %189, %175 ]
  %177 = phi i64 [ 0, %124 ], [ %188, %175 ]
  %178 = phi i32 [ %121, %124 ], [ %185, %175 ]
  %179 = add nuw nsw i64 %177, %125
  %180 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %10, align 8
  %181 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %180, i64 %176, i32 0, i32 0, i64 0, i32 0
  store i64 -1, i64* %181, align 8
  %182 = getelementptr %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %180, i64 %179, i32 0, i32 0, i64 1
  %183 = bitcast %"class.perfetto::trace_processor::BitVector::BitWord"* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 -1, i64 48, i1 false)
  %184 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %180, i64 %176, i32 0, i32 0, i64 7, i32 0
  store i64 -1, i64* %184, align 8
  %185 = add nuw i32 %178, 1
  %186 = load i32, i32* %6, align 4
  %187 = icmp ult i32 %185, %186
  %188 = add nuw nsw i64 %177, 1
  %189 = add nuw nsw i64 %176, 1
  br i1 %187, label %175, label %126

190:                                              ; preds = %151, %134, %61, %23
  %191 = phi i64* [ %165, %151 ], [ %146, %134 ], [ %75, %61 ], [ %38, %23 ]
  %192 = phi i64 [ %164, %151 ], [ %145, %134 ], [ %74, %61 ], [ %37, %23 ]
  %193 = load i64, i64* %191, align 8
  %194 = or i64 %192, %193
  store i64 %194, i64* %191, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8perfetto15trace_processor9BitVector5BlockENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.5"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 6
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.perfetto::trace_processor::BitVector::Block"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %13, i64 %18, i32 0, i32 0, i64 0, i32 0
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 64
  %25 = and i64 %24, -64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #15
  %26 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.5"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 6
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 288230376151711743
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.5"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #17
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 6
  %41 = icmp ult i64 %40, 144115188075855871
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 5
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 288230376151711743
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 288230376151711743, %38 ]
  %52 = shl i64 %51, 6
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to %"class.perfetto::trace_processor::BitVector::Block"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.perfetto::trace_processor::BitVector::Block"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %57, i64 %33
  %59 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %58 to i8*
  %60 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %57, i64 %56
  %61 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %58, i64 %1
  %62 = shl nsw i64 %1, 6
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %60 to i64
  %64 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 6
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %58, i64 %71
  %73 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %72 to i8*
  %77 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #15
  %78 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.perfetto::trace_processor::BitVector::Block"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.perfetto::trace_processor::BitVector::Block"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.2"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #15
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #17
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #15
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #15
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare i32 @_ZN8perfetto15trace_processor10StringPool12InsertStringENS_4base10StringViewEm(%"class.perfetto::trace_processor::StringPool"*, i8*, i64, i64) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8perfetto15trace_processor6RowMap4sizeEv(%"class.perfetto::trace_processor::RowMap"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %62 [
    i32 0, label %4
    i32 1, label %10
    i32 2, label %52
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sub i32 %6, %8
  br label %67

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %67, label %14

14:                                               ; preds = %10
  %15 = add i32 %12, -1
  %16 = lshr i32 %15, 9
  %17 = lshr i32 %15, 6
  %18 = and i32 %17, 7
  %19 = zext i32 %18 to i64
  %20 = and i32 %15, 63
  %21 = zext i32 %16 to i64
  %22 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %27 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %26, align 8
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = tail call i64 @llvm.ctpop.i64(i64 %31) #15, !range !5
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %18, 1
  br i1 %34, label %35, label %69

35:                                               ; preds = %29, %69, %76, %83, %90, %97, %104, %14
  %36 = phi i32 [ 0, %14 ], [ %33, %29 ], [ %74, %69 ], [ %81, %76 ], [ %88, %83 ], [ %95, %90 ], [ %102, %97 ], [ %109, %104 ]
  %37 = add nuw nsw i32 %20, 1
  %38 = and i32 %37, 63
  %39 = zext i32 %38 to i64
  %40 = shl i64 1, %39
  %41 = lshr i32 %37, 6
  %42 = zext i32 %41 to i64
  %43 = lshr i64 %40, %42
  %44 = add i64 %43, -1
  %45 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 %19, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, %44
  %48 = tail call i64 @llvm.ctpop.i64(i64 %47) #15, !range !5
  %49 = trunc i64 %48 to i32
  %50 = add i32 %36, %25
  %51 = add i32 %50, %49
  br label %67

52:                                               ; preds = %1
  %53 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5
  %54 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 1
  %55 = bitcast i32** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.2"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = lshr exact i64 %59, 2
  %61 = trunc i64 %60 to i32
  br label %67

62:                                               ; preds = %1
  %63 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0))
  %64 = tail call i32* @__errno_location() #18
  %65 = load i32, i32* %64, align 4
  %66 = tail call i8* @strerror(i32 %65) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %63, i32 251, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i32 %65, i8* %66) #15
  tail call void @llvm.trap()
  unreachable

67:                                               ; preds = %35, %10, %52, %4
  %68 = phi i32 [ %61, %52 ], [ %9, %4 ], [ %51, %35 ], [ 0, %10 ]
  ret i32 %68

69:                                               ; preds = %29
  %70 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 1, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = tail call i64 @llvm.ctpop.i64(i64 %71) #15, !range !5
  %73 = trunc i64 %72 to i32
  %74 = add nuw nsw i32 %33, %73
  %75 = icmp eq i32 %18, 2
  br i1 %75, label %35, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 2, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = tail call i64 @llvm.ctpop.i64(i64 %78) #15, !range !5
  %80 = trunc i64 %79 to i32
  %81 = add nuw nsw i32 %74, %80
  %82 = icmp eq i32 %18, 3
  br i1 %82, label %35, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 3, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #15, !range !5
  %87 = trunc i64 %86 to i32
  %88 = add nuw nsw i32 %81, %87
  %89 = icmp eq i32 %18, 4
  br i1 %89, label %35, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 4, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #15, !range !5
  %94 = trunc i64 %93 to i32
  %95 = add nuw nsw i32 %88, %94
  %96 = icmp eq i32 %18, 5
  br i1 %96, label %35, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 5, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #15, !range !5
  %101 = trunc i64 %100 to i32
  %102 = add nuw nsw i32 %95, %101
  %103 = icmp eq i32 %18, 6
  br i1 %103, label %35, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 6, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = tail call i64 @llvm.ctpop.i64(i64 %106) #15, !range !5
  %108 = trunc i64 %107 to i32
  %109 = add i32 %102, %108
  br label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.107"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.381", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #15
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.107"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #16
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !44

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.107"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #15
  %186 = tail call i8* @_Znwm(i64 4096) #16
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.109"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #15
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #15
  %190 = tail call i8* @_Znwm(i64 4096) #16
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.109"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #15
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #15
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #17
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #16
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !45

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #16
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.381"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #15
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.381", %"struct.std::__1::__split_buffer.381"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.381", %"struct.std::__1::__split_buffer.381"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.381", %"struct.std::__1::__split_buffer.381"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.381", %"struct.std::__1::__split_buffer.381"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.381"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.113"** %342 to %"class.std::__1::__compressed_pair.110"**
  store %"class.std::__1::__compressed_pair.110"* %346, %"class.std::__1::__compressed_pair.110"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #17
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #16
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.381"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #16
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #17
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.381"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #16
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #16
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.381"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.381"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #16
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #15
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.381"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.109"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.109"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !46

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.109"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.109"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !47

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.381"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.381", %"struct.std::__1::__split_buffer.381"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.381", %"struct.std::__1::__split_buffer.381"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.381", %"struct.std::__1::__split_buffer.381"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.381", %"struct.std::__1::__split_buffer.381"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.381"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !48

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor14NullableVectorIlE6AppendENS_4base8OptionalIlEE(%"class.perfetto::trace_processor::NullableVector.92"*, %"class.perfetto::base::Optional"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !6
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %54, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %10 = bitcast i64*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %13 = bitcast i64*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = icmp eq i64 %15, 0
  %17 = shl i64 %15, 6
  %18 = add i64 %17, -1
  %19 = select i1 %16, i64 0, i64 %18
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %21
  %25 = icmp eq i64 %19, %24
  %26 = inttoptr i64 %14 to i64**
  %27 = inttoptr i64 %11 to i64**
  br i1 %25, label %28, label %35

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIlNS_9allocatorIlEEE19__add_back_capacityEv(%"class.std::__1::deque.93"* %29) #15
  %30 = load i64, i64* %22, align 8
  %31 = load i64, i64* %20, align 8
  %32 = load i64**, i64*** %12, align 8
  %33 = load i64**, i64*** %9, align 8
  %34 = add i64 %31, %30
  br label %35

35:                                               ; preds = %28, %6
  %36 = phi i64 [ %34, %28 ], [ %24, %6 ]
  %37 = phi i64** [ %33, %28 ], [ %27, %6 ]
  %38 = phi i64** [ %32, %28 ], [ %26, %6 ]
  %39 = icmp eq i64** %37, %38
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = lshr i64 %36, 9
  %42 = getelementptr inbounds i64*, i64** %38, i64 %41
  %43 = load i64*, i64** %42, align 8
  %44 = and i64 %36, 511
  %45 = getelementptr inbounds i64, i64* %43, i64 %44
  br label %46

46:                                               ; preds = %35, %40
  %47 = phi i64* [ %45, %40 ], [ null, %35 ]
  store i64 %8, i64* %47, align 8
  %48 = load i64, i64* %22, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %22, align 8
  %50 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 5
  %52 = load i32, i32* %51, align 8
  %53 = add i32 %52, 1
  store i32 %53, i32* %51, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %50, i32 %52) #15
  br label %104

54:                                               ; preds = %2
  %55 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %100

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %60 = bitcast i64*** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %63 = bitcast i64*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = icmp eq i64 %65, 0
  %67 = shl i64 %65, 6
  %68 = add i64 %67, -1
  %69 = select i1 %66, i64 0, i64 %68
  %70 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, %71
  %75 = icmp eq i64 %69, %74
  %76 = inttoptr i64 %64 to i64**
  %77 = inttoptr i64 %61 to i64**
  br i1 %75, label %78, label %85

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIlNS_9allocatorIlEEE19__add_back_capacityEv(%"class.std::__1::deque.93"* %79) #15
  %80 = load i64, i64* %72, align 8
  %81 = load i64, i64* %70, align 8
  %82 = load i64**, i64*** %62, align 8
  %83 = load i64**, i64*** %59, align 8
  %84 = add i64 %81, %80
  br label %85

85:                                               ; preds = %78, %58
  %86 = phi i64 [ %84, %78 ], [ %74, %58 ]
  %87 = phi i64** [ %83, %78 ], [ %77, %58 ]
  %88 = phi i64** [ %82, %78 ], [ %76, %58 ]
  %89 = icmp eq i64** %87, %88
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = lshr i64 %86, 9
  %92 = getelementptr inbounds i64*, i64** %88, i64 %91
  %93 = load i64*, i64** %92, align 8
  %94 = and i64 %86, 511
  %95 = getelementptr inbounds i64, i64* %93, i64 %94
  br label %96

96:                                               ; preds = %90, %85
  %97 = phi i64* [ %95, %90 ], [ null, %85 ]
  store i64 0, i64* %97, align 8
  %98 = load i64, i64* %72, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %72, align 8
  br label %100

100:                                              ; preds = %54, %96
  %101 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 5
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %102, 1
  store i32 %103, i32* %101, align 8
  br label %104

104:                                              ; preds = %100, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIlNS_9allocatorIlEEE19__add_back_capacityEv(%"class.std::__1::deque.93"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.391", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i64**, i64*** %10, align 8
  %12 = bitcast i64** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i64*, i64** %11, i64 1
  store i64** %14, i64*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i64**, i64*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i64**, i64*** %17, align 8
  %19 = icmp eq i64** %16, %18
  %20 = ptrtoint i64** %18 to i64
  %21 = bitcast i64** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i64**, i64*** %23, align 8
  %25 = icmp ugt i64** %14, %24
  %26 = ptrtoint i64** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i64** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i64*, i64** %14, i64 %32
  %34 = ptrtoint i64** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i64** %33 to i8*
  %40 = bitcast i64** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #15
  %41 = load i64**, i64*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i64** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i64*, i64** %33, i64 %36
  store i64** %44, i64*** %15, align 8
  %45 = getelementptr inbounds i64*, i64** %43, i64 %32
  store i64** %45, i64*** %10, align 8
  %46 = bitcast i64** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i64*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.93"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #16
  %60 = bitcast i8* %59 to i64**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i64*, i64** %60, i64 %57
  %63 = ptrtoint i64** %62 to i64
  %64 = getelementptr inbounds i64*, i64** %60, i64 %53
  %65 = ptrtoint i64** %64 to i64
  %66 = ptrtoint i64** %14 to i64
  %67 = ptrtoint i64** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i64*, i64** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i64** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i64** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i64** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i64*, i64** %79, i64 1
  %87 = ptrtoint i64** %86 to i64
  %88 = getelementptr inbounds i64*, i64** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !49

91:                                               ; preds = %78
  %92 = ptrtoint i64** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i64** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i64** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i64** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i64** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i64** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i64*, i64** %99, i64 1
  %106 = getelementptr inbounds i64*, i64** %101, i64 1
  %107 = bitcast i64** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i64** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i64*, i64** %99, i64 2
  %111 = getelementptr inbounds i64*, i64** %101, i64 2
  %112 = bitcast i64** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i64** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i64*, i64** %99, i64 3
  %116 = getelementptr inbounds i64*, i64** %101, i64 3
  %117 = bitcast i64** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i64** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i64*, i64** %99, i64 4
  %121 = getelementptr inbounds i64*, i64** %101, i64 4
  %122 = bitcast i64** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i64** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i64*, i64** %99, i64 5
  %126 = getelementptr inbounds i64*, i64** %101, i64 5
  %127 = bitcast i64** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i64** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i64*, i64** %99, i64 6
  %131 = getelementptr inbounds i64*, i64** %101, i64 6
  %132 = bitcast i64** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i64** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i64*, i64** %99, i64 7
  %136 = getelementptr inbounds i64*, i64** %101, i64 7
  %137 = bitcast i64** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i64** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i64*, i64** %99, i64 8
  %141 = ptrtoint i64** %140 to i64
  %142 = getelementptr inbounds i64*, i64** %101, i64 8
  %143 = icmp eq i64** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i64** %70 to i64
  %146 = load i64**, i64*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i64** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i64*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i64*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i64** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i64** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  %156 = bitcast i64*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i64**, i64*** %15, align 8
  %161 = getelementptr inbounds i64*, i64** %160, i64 1
  store i64** %161, i64*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i64*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i64*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i64*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.93"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i64**
  %181 = inttoptr i64 %169 to i64**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i64** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #15
  %186 = tail call i8* @_Znwm(i64 4096) #16
  %187 = bitcast i64** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.95"* %163, i64** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #15
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i64** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #15
  %190 = tail call i8* @_Znwm(i64 4096) #16
  %191 = bitcast i64** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.95"* %163, i64** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #15
  %192 = load i64**, i64*** %167, align 8
  %193 = bitcast i64** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i64*, i64** %192, i64 1
  store i64** %195, i64*** %167, align 8
  %196 = load i64**, i64*** %164, align 8
  %197 = load i64**, i64*** %172, align 8
  %198 = icmp eq i64** %196, %197
  %199 = ptrtoint i64** %197 to i64
  %200 = bitcast i64** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i64**, i64*** %202, align 8
  %204 = icmp ugt i64** %195, %203
  %205 = ptrtoint i64** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i64** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i64*, i64** %195, i64 %211
  %213 = ptrtoint i64** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i64** %212 to i8*
  %219 = bitcast i64** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #15
  %220 = load i64**, i64*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i64** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i64*, i64** %212, i64 %215
  store i64** %223, i64*** %164, align 8
  %224 = getelementptr inbounds i64*, i64** %222, i64 %211
  store i64** %224, i64*** %167, align 8
  %225 = bitcast i64** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #17
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #16
  %237 = bitcast i8* %236 to i64**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i64*, i64** %237, i64 %234
  %240 = ptrtoint i64** %239 to i64
  %241 = getelementptr inbounds i64*, i64** %237, i64 %230
  %242 = ptrtoint i64** %241 to i64
  %243 = ptrtoint i64** %195 to i64
  %244 = ptrtoint i64** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i64*, i64** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i64** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i64** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i64** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i64*, i64** %256, i64 1
  %264 = ptrtoint i64** %263 to i64
  %265 = getelementptr inbounds i64*, i64** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !50

268:                                              ; preds = %255
  %269 = ptrtoint i64** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i64** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i64** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i64** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i64** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i64** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i64*, i64** %276, i64 1
  %283 = getelementptr inbounds i64*, i64** %278, i64 1
  %284 = bitcast i64** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i64** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i64*, i64** %276, i64 2
  %288 = getelementptr inbounds i64*, i64** %278, i64 2
  %289 = bitcast i64** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i64** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i64*, i64** %276, i64 3
  %293 = getelementptr inbounds i64*, i64** %278, i64 3
  %294 = bitcast i64** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i64** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i64*, i64** %276, i64 4
  %298 = getelementptr inbounds i64*, i64** %278, i64 4
  %299 = bitcast i64** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i64** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i64*, i64** %276, i64 5
  %303 = getelementptr inbounds i64*, i64** %278, i64 5
  %304 = bitcast i64** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i64** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i64*, i64** %276, i64 6
  %308 = getelementptr inbounds i64*, i64** %278, i64 6
  %309 = bitcast i64** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i64** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i64*, i64** %276, i64 7
  %313 = getelementptr inbounds i64*, i64** %278, i64 7
  %314 = bitcast i64** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i64** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i64*, i64** %276, i64 8
  %318 = ptrtoint i64** %317 to i64
  %319 = getelementptr inbounds i64*, i64** %278, i64 8
  %320 = icmp eq i64** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i64** %247 to i64
  %323 = load i64**, i64*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i64** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i64** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i64** %325 to i8*
  call void @_ZdlPv(i8* %330) #16
  %331 = bitcast i64*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i64**, i64*** %164, align 8
  %336 = getelementptr inbounds i64*, i64** %335, i64 1
  store i64** %336, i64*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.391"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #15
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.391"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i64** null, i64*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.99"** %342 to %"class.std::__1::__compressed_pair.96"**
  store %"class.std::__1::__compressed_pair.96"* %346, %"class.std::__1::__compressed_pair.96"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #17
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #16
  %354 = bitcast i8* %353 to i64**
  %355 = bitcast %"struct.std::__1::__split_buffer.391"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i64*, i64** %354, i64 %171
  store i64** %356, i64*** %340, align 8
  store i64** %356, i64*** %339, align 8
  %357 = getelementptr inbounds i64*, i64** %354, i64 %345
  store i64** %357, i64*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #16
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i64** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i64** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i64** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i64*, i64** %356, i64 %370
  store i64** %371, i64*** %340, align 8
  store i64** %371, i64*** %339, align 8
  %372 = ptrtoint i64** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #17
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.391"* %4 to i64*
  %382 = bitcast i64*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #16
  %386 = bitcast i8* %385 to i64**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i64*, i64** %386, i64 %383
  %389 = ptrtoint i64** %388 to i64
  %390 = getelementptr inbounds i64*, i64** %386, i64 %377
  %391 = ptrtoint i64** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i64*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i64*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #16
  %394 = load i64**, i64*** %164, align 8
  %395 = load i64**, i64*** %167, align 8
  %396 = ptrtoint i64** %395 to i64
  %397 = ptrtoint i64** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i64** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i64** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i64** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i64** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i64*, i64** %406, i64 1
  store i64** %408, i64*** %340, align 8
  %409 = icmp eq i64** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i64** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.391"* %4 to i64*
  %413 = bitcast i64*** %339 to i64*
  %414 = bitcast i64*** %340 to i64*
  %415 = bitcast i64*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i64** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.391"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i64*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i64*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i64*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i64**
  %441 = inttoptr i64 %434 to i64**
  %442 = icmp eq i64** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i64*, i64** %441, i64 -1
  %445 = ptrtoint i64** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i64*, i64** %441, i64 %448
  store i64** %449, i64*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #16
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #15
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i64** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i64*, i64** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPlRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.391"* nonnull %4, i64** dereferenceable(8) %457)
  %458 = load i64**, i64*** %167, align 8
  %459 = icmp eq i64** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.95"*, i64** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 2
  %4 = load i64**, i64*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64**, i64*** %5, align 8
  %7 = icmp eq i64** %4, %6
  %8 = ptrtoint i64** %6 to i64
  %9 = bitcast i64** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 1
  %12 = load i64**, i64*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 0
  %14 = load i64**, i64*** %13, align 8
  %15 = icmp ugt i64** %12, %14
  %16 = ptrtoint i64** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i64** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i64*, i64** %12, i64 %22
  %24 = ptrtoint i64** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i64** %23 to i8*
  %30 = bitcast i64** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load i64**, i64*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i64** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i64*, i64** %23, i64 %26
  store i64** %34, i64*** %3, align 8
  %35 = getelementptr inbounds i64*, i64** %33, i64 %22
  store i64** %35, i64*** %11, align 8
  %36 = bitcast i64** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i64*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.95"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to i64**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i64*, i64** %50, i64 %47
  %53 = ptrtoint i64** %52 to i64
  %54 = getelementptr inbounds i64*, i64** %50, i64 %43
  %55 = ptrtoint i64** %54 to i64
  %56 = ptrtoint i64** %12 to i64
  %57 = ptrtoint i64** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i64*, i64** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i64** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i64** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i64** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i64*, i64** %69, i64 1
  %77 = ptrtoint i64** %76 to i64
  %78 = getelementptr inbounds i64*, i64** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !51

81:                                               ; preds = %68
  %82 = ptrtoint i64** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i64** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i64** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i64** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i64** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i64** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i64*, i64** %89, i64 1
  %96 = getelementptr inbounds i64*, i64** %91, i64 1
  %97 = bitcast i64** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i64** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i64*, i64** %89, i64 2
  %101 = getelementptr inbounds i64*, i64** %91, i64 2
  %102 = bitcast i64** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i64** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i64*, i64** %89, i64 3
  %106 = getelementptr inbounds i64*, i64** %91, i64 3
  %107 = bitcast i64** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i64** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i64*, i64** %89, i64 4
  %111 = getelementptr inbounds i64*, i64** %91, i64 4
  %112 = bitcast i64** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i64** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i64*, i64** %89, i64 5
  %116 = getelementptr inbounds i64*, i64** %91, i64 5
  %117 = bitcast i64** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i64** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i64*, i64** %89, i64 6
  %121 = getelementptr inbounds i64*, i64** %91, i64 6
  %122 = bitcast i64** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i64** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i64*, i64** %89, i64 7
  %126 = getelementptr inbounds i64*, i64** %91, i64 7
  %127 = bitcast i64** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i64** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i64*, i64** %89, i64 8
  %131 = ptrtoint i64** %130 to i64
  %132 = getelementptr inbounds i64*, i64** %91, i64 8
  %133 = icmp eq i64** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i64** %60 to i64
  %136 = load i64**, i64*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i64** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i64*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i64*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i64** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i64** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = bitcast i64*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i64** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i64**, i64*** %3, align 8
  %153 = getelementptr inbounds i64*, i64** %152, i64 1
  store i64** %153, i64*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.95"*, i64** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 1
  %4 = load i64**, i64*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 0
  %6 = load i64**, i64*** %5, align 8
  %7 = icmp eq i64** %4, %6
  %8 = ptrtoint i64** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 2
  %11 = load i64**, i64*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i64**, i64*** %12, align 8
  %14 = icmp ult i64** %11, %13
  %15 = bitcast i64*** %12 to i64*
  %16 = ptrtoint i64** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i64** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i64*, i64** %11, i64 %22
  %24 = ptrtoint i64** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i64*, i64** %23, i64 %29
  %31 = bitcast i64** %30 to i8*
  %32 = bitcast i64** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i64**, i64*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i64** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i64** [ %30, %27 ], [ %23, %17 ]
  store i64** %36, i64*** %3, align 8
  %37 = getelementptr inbounds i64*, i64** %35, i64 %22
  store i64** %37, i64*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.95"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i64**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i64*, i64** %51, i64 %48
  %54 = ptrtoint i64** %53 to i64
  %55 = getelementptr inbounds i64*, i64** %51, i64 %43
  %56 = ptrtoint i64** %55 to i64
  %57 = ptrtoint i64** %4 to i64
  %58 = ptrtoint i64** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i64*, i64** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i64** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i64** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i64** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i64*, i64** %70, i64 1
  %78 = ptrtoint i64** %77 to i64
  %79 = getelementptr inbounds i64*, i64** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !52

82:                                               ; preds = %69
  %83 = ptrtoint i64** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i64** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i64** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i64** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i64** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i64** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i64*, i64** %90, i64 1
  %97 = getelementptr inbounds i64*, i64** %92, i64 1
  %98 = bitcast i64** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i64** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i64*, i64** %90, i64 2
  %102 = getelementptr inbounds i64*, i64** %92, i64 2
  %103 = bitcast i64** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i64** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i64*, i64** %90, i64 3
  %107 = getelementptr inbounds i64*, i64** %92, i64 3
  %108 = bitcast i64** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i64** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i64*, i64** %90, i64 4
  %112 = getelementptr inbounds i64*, i64** %92, i64 4
  %113 = bitcast i64** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i64** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i64*, i64** %90, i64 5
  %117 = getelementptr inbounds i64*, i64** %92, i64 5
  %118 = bitcast i64** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i64** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i64*, i64** %90, i64 6
  %122 = getelementptr inbounds i64*, i64** %92, i64 6
  %123 = bitcast i64** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i64** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i64*, i64** %90, i64 7
  %127 = getelementptr inbounds i64*, i64** %92, i64 7
  %128 = bitcast i64** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i64** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i64*, i64** %90, i64 8
  %132 = ptrtoint i64** %131 to i64
  %133 = getelementptr inbounds i64*, i64** %92, i64 8
  %134 = icmp eq i64** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i64** %61 to i64
  %137 = load i64**, i64*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i64** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i64*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i64*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i64** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i64** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i64**, i64*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i64** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i64*, i64** %148, i64 -1
  %150 = bitcast i64** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i64** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i64**, i64*** %3, align 8
  %154 = getelementptr inbounds i64*, i64** %153, i64 -1
  store i64** %154, i64*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPlRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.391"*, i64** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %0, i64 0, i32 1
  %4 = load i64**, i64*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %0, i64 0, i32 0
  %6 = load i64**, i64*** %5, align 8
  %7 = icmp eq i64** %4, %6
  %8 = ptrtoint i64** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %0, i64 0, i32 2
  %11 = load i64**, i64*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.391", %"struct.std::__1::__split_buffer.391"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i64**, i64*** %12, align 8
  %14 = icmp ult i64** %11, %13
  %15 = bitcast i64*** %12 to i64*
  %16 = ptrtoint i64** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i64** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i64*, i64** %11, i64 %22
  %24 = ptrtoint i64** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i64*, i64** %23, i64 %29
  %31 = bitcast i64** %30 to i8*
  %32 = bitcast i64** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i64**, i64*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i64** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i64** [ %30, %27 ], [ %23, %17 ]
  store i64** %36, i64*** %3, align 8
  %37 = getelementptr inbounds i64*, i64** %35, i64 %22
  store i64** %37, i64*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.391"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i64**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i64*, i64** %51, i64 %48
  %54 = ptrtoint i64** %53 to i64
  %55 = getelementptr inbounds i64*, i64** %51, i64 %43
  %56 = ptrtoint i64** %55 to i64
  %57 = ptrtoint i64** %4 to i64
  %58 = ptrtoint i64** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i64*, i64** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i64** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i64** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i64** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i64*, i64** %70, i64 1
  %78 = ptrtoint i64** %77 to i64
  %79 = getelementptr inbounds i64*, i64** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !53

82:                                               ; preds = %69
  %83 = ptrtoint i64** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i64** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i64** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i64** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i64** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i64** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i64*, i64** %90, i64 1
  %97 = getelementptr inbounds i64*, i64** %92, i64 1
  %98 = bitcast i64** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i64** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i64*, i64** %90, i64 2
  %102 = getelementptr inbounds i64*, i64** %92, i64 2
  %103 = bitcast i64** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i64** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i64*, i64** %90, i64 3
  %107 = getelementptr inbounds i64*, i64** %92, i64 3
  %108 = bitcast i64** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i64** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i64*, i64** %90, i64 4
  %112 = getelementptr inbounds i64*, i64** %92, i64 4
  %113 = bitcast i64** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i64** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i64*, i64** %90, i64 5
  %117 = getelementptr inbounds i64*, i64** %92, i64 5
  %118 = bitcast i64** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i64** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i64*, i64** %90, i64 6
  %122 = getelementptr inbounds i64*, i64** %92, i64 6
  %123 = bitcast i64** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i64** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i64*, i64** %90, i64 7
  %127 = getelementptr inbounds i64*, i64** %92, i64 7
  %128 = bitcast i64** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i64** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i64*, i64** %90, i64 8
  %132 = ptrtoint i64** %131 to i64
  %133 = getelementptr inbounds i64*, i64** %92, i64 8
  %134 = icmp eq i64** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i64** %61 to i64
  %137 = load i64**, i64*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i64** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i64*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i64*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i64** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i64** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i64**, i64*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i64** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i64*, i64** %148, i64 -1
  %150 = bitcast i64** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i64** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i64**, i64*** %3, align 8
  %154 = getelementptr inbounds i64*, i64** %153, i64 -1
  store i64** %154, i64*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor14NullableVectorIdE6AppendENS_4base8OptionalIdEE(%"class.perfetto::trace_processor::NullableVector.131"*, %"class.perfetto::base::Optional.342"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.perfetto::base::Optional.342", %"class.perfetto::base::Optional.342"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !6
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.perfetto::base::Optional.342", %"class.perfetto::base::Optional.342"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast double* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %11 = bitcast double*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %14 = bitcast double*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %12, %15
  %17 = icmp eq i64 %16, 0
  %18 = shl i64 %16, 6
  %19 = add i64 %18, -1
  %20 = select i1 %17, i64 0, i64 %19
  %21 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %22
  %26 = icmp eq i64 %20, %25
  %27 = inttoptr i64 %15 to double**
  %28 = inttoptr i64 %12 to double**
  br i1 %26, label %29, label %36

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIdNS_9allocatorIdEEE19__add_back_capacityEv(%"class.std::__1::deque.132"* %30) #15
  %31 = load i64, i64* %23, align 8
  %32 = load i64, i64* %21, align 8
  %33 = load double**, double*** %13, align 8
  %34 = load double**, double*** %10, align 8
  %35 = add i64 %32, %31
  br label %36

36:                                               ; preds = %29, %6
  %37 = phi i64 [ %35, %29 ], [ %25, %6 ]
  %38 = phi double** [ %34, %29 ], [ %28, %6 ]
  %39 = phi double** [ %33, %29 ], [ %27, %6 ]
  %40 = icmp eq double** %38, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = lshr i64 %37, 9
  %43 = getelementptr inbounds double*, double** %39, i64 %42
  %44 = load double*, double** %43, align 8
  %45 = and i64 %37, 511
  %46 = getelementptr inbounds double, double* %44, i64 %45
  %47 = bitcast double* %46 to i64*
  br label %48

48:                                               ; preds = %36, %41
  %49 = phi i64* [ %47, %41 ], [ null, %36 ]
  store i64 %9, i64* %49, align 8
  %50 = load i64, i64* %23, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %23, align 8
  %52 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 4
  %53 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = add i32 %54, 1
  store i32 %55, i32* %53, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %52, i32 %54) #15
  br label %106

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %102

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %62 = bitcast double*** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %65 = bitcast double*** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %63, %66
  %68 = icmp eq i64 %67, 0
  %69 = shl i64 %67, 6
  %70 = add i64 %69, -1
  %71 = select i1 %68, i64 0, i64 %70
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, %73
  %77 = icmp eq i64 %71, %76
  %78 = inttoptr i64 %66 to double**
  %79 = inttoptr i64 %63 to double**
  br i1 %77, label %80, label %87

80:                                               ; preds = %60
  %81 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIdNS_9allocatorIdEEE19__add_back_capacityEv(%"class.std::__1::deque.132"* %81) #15
  %82 = load i64, i64* %74, align 8
  %83 = load i64, i64* %72, align 8
  %84 = load double**, double*** %64, align 8
  %85 = load double**, double*** %61, align 8
  %86 = add i64 %83, %82
  br label %87

87:                                               ; preds = %80, %60
  %88 = phi i64 [ %86, %80 ], [ %76, %60 ]
  %89 = phi double** [ %85, %80 ], [ %79, %60 ]
  %90 = phi double** [ %84, %80 ], [ %78, %60 ]
  %91 = icmp eq double** %89, %90
  br i1 %91, label %98, label %92

92:                                               ; preds = %87
  %93 = lshr i64 %88, 9
  %94 = getelementptr inbounds double*, double** %90, i64 %93
  %95 = load double*, double** %94, align 8
  %96 = and i64 %88, 511
  %97 = getelementptr inbounds double, double* %95, i64 %96
  br label %98

98:                                               ; preds = %92, %87
  %99 = phi double* [ %97, %92 ], [ null, %87 ]
  store double 0.000000e+00, double* %99, align 8
  %100 = load i64, i64* %74, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %74, align 8
  br label %102

102:                                              ; preds = %56, %98
  %103 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 5
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 8
  br label %106

106:                                              ; preds = %102, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIdNS_9allocatorIdEEE19__add_back_capacityEv(%"class.std::__1::deque.132"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca double*, align 8
  %3 = alloca double*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.402", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load double**, double*** %10, align 8
  %12 = bitcast double** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds double*, double** %11, i64 1
  store double** %14, double*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load double**, double*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load double**, double*** %17, align 8
  %19 = icmp eq double** %16, %18
  %20 = ptrtoint double** %18 to i64
  %21 = bitcast double** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double**, double*** %23, align 8
  %25 = icmp ugt double** %14, %24
  %26 = ptrtoint double** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint double** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds double*, double** %14, i64 %32
  %34 = ptrtoint double** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast double** %33 to i8*
  %40 = bitcast double** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #15
  %41 = load double**, double*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi double** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds double*, double** %33, i64 %36
  store double** %44, double*** %15, align 8
  %45 = getelementptr inbounds double*, double** %43, i64 %32
  store double** %45, double*** %10, align 8
  %46 = bitcast double** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast double*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.132"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #16
  %60 = bitcast i8* %59 to double**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds double*, double** %60, i64 %57
  %63 = ptrtoint double** %62 to i64
  %64 = getelementptr inbounds double*, double** %60, i64 %53
  %65 = ptrtoint double** %64 to i64
  %66 = ptrtoint double** %14 to i64
  %67 = ptrtoint double** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds double*, double** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi double** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi double** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast double** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds double*, double** %79, i64 1
  %87 = ptrtoint double** %86 to i64
  %88 = getelementptr inbounds double*, double** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !54

91:                                               ; preds = %78
  %92 = ptrtoint double** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi double** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi double** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi double** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi double** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast double** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds double*, double** %99, i64 1
  %106 = getelementptr inbounds double*, double** %101, i64 1
  %107 = bitcast double** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast double** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds double*, double** %99, i64 2
  %111 = getelementptr inbounds double*, double** %101, i64 2
  %112 = bitcast double** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast double** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds double*, double** %99, i64 3
  %116 = getelementptr inbounds double*, double** %101, i64 3
  %117 = bitcast double** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast double** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds double*, double** %99, i64 4
  %121 = getelementptr inbounds double*, double** %101, i64 4
  %122 = bitcast double** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast double** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds double*, double** %99, i64 5
  %126 = getelementptr inbounds double*, double** %101, i64 5
  %127 = bitcast double** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast double** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds double*, double** %99, i64 6
  %131 = getelementptr inbounds double*, double** %101, i64 6
  %132 = bitcast double** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast double** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds double*, double** %99, i64 7
  %136 = getelementptr inbounds double*, double** %101, i64 7
  %137 = bitcast double** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast double** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds double*, double** %99, i64 8
  %141 = ptrtoint double** %140 to i64
  %142 = getelementptr inbounds double*, double** %101, i64 8
  %143 = icmp eq double** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint double** %70 to i64
  %146 = load double**, double*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi double** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast double*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast double*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq double** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast double** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  %156 = bitcast double*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load double**, double*** %15, align 8
  %161 = getelementptr inbounds double*, double** %160, i64 1
  store double** %161, double*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast double*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast double*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast double*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.132"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to double**
  %181 = inttoptr i64 %169 to double**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast double** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #15
  %186 = tail call i8* @_Znwm(i64 4096) #16
  %187 = bitcast double** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.134"* %163, double** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #15
  br label %460

188:                                              ; preds = %182
  %189 = bitcast double** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #15
  %190 = tail call i8* @_Znwm(i64 4096) #16
  %191 = bitcast double** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.134"* %163, double** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #15
  %192 = load double**, double*** %167, align 8
  %193 = bitcast double** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds double*, double** %192, i64 1
  store double** %195, double*** %167, align 8
  %196 = load double**, double*** %164, align 8
  %197 = load double**, double*** %172, align 8
  %198 = icmp eq double** %196, %197
  %199 = ptrtoint double** %197 to i64
  %200 = bitcast double** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load double**, double*** %202, align 8
  %204 = icmp ugt double** %195, %203
  %205 = ptrtoint double** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint double** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds double*, double** %195, i64 %211
  %213 = ptrtoint double** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast double** %212 to i8*
  %219 = bitcast double** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #15
  %220 = load double**, double*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi double** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds double*, double** %212, i64 %215
  store double** %223, double*** %164, align 8
  %224 = getelementptr inbounds double*, double** %222, i64 %211
  store double** %224, double*** %167, align 8
  %225 = bitcast double** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #17
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #16
  %237 = bitcast i8* %236 to double**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds double*, double** %237, i64 %234
  %240 = ptrtoint double** %239 to i64
  %241 = getelementptr inbounds double*, double** %237, i64 %230
  %242 = ptrtoint double** %241 to i64
  %243 = ptrtoint double** %195 to i64
  %244 = ptrtoint double** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds double*, double** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi double** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi double** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast double** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds double*, double** %256, i64 1
  %264 = ptrtoint double** %263 to i64
  %265 = getelementptr inbounds double*, double** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !55

268:                                              ; preds = %255
  %269 = ptrtoint double** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi double** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi double** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi double** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi double** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast double** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds double*, double** %276, i64 1
  %283 = getelementptr inbounds double*, double** %278, i64 1
  %284 = bitcast double** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast double** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds double*, double** %276, i64 2
  %288 = getelementptr inbounds double*, double** %278, i64 2
  %289 = bitcast double** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast double** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds double*, double** %276, i64 3
  %293 = getelementptr inbounds double*, double** %278, i64 3
  %294 = bitcast double** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast double** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds double*, double** %276, i64 4
  %298 = getelementptr inbounds double*, double** %278, i64 4
  %299 = bitcast double** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast double** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds double*, double** %276, i64 5
  %303 = getelementptr inbounds double*, double** %278, i64 5
  %304 = bitcast double** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast double** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds double*, double** %276, i64 6
  %308 = getelementptr inbounds double*, double** %278, i64 6
  %309 = bitcast double** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast double** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds double*, double** %276, i64 7
  %313 = getelementptr inbounds double*, double** %278, i64 7
  %314 = bitcast double** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast double** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds double*, double** %276, i64 8
  %318 = ptrtoint double** %317 to i64
  %319 = getelementptr inbounds double*, double** %278, i64 8
  %320 = icmp eq double** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint double** %247 to i64
  %323 = load double**, double*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi double** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq double** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast double** %325 to i8*
  call void @_ZdlPv(i8* %330) #16
  %331 = bitcast double*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load double**, double*** %164, align 8
  %336 = getelementptr inbounds double*, double** %335, i64 1
  store double** %336, double*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.402"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #15
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.402", %"struct.std::__1::__split_buffer.402"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.402", %"struct.std::__1::__split_buffer.402"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.402", %"struct.std::__1::__split_buffer.402"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.402", %"struct.std::__1::__split_buffer.402"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.402"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store double** null, double*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.138"** %342 to %"class.std::__1::__compressed_pair.135"**
  store %"class.std::__1::__compressed_pair.135"* %346, %"class.std::__1::__compressed_pair.135"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #17
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #16
  %354 = bitcast i8* %353 to double**
  %355 = bitcast %"struct.std::__1::__split_buffer.402"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds double*, double** %354, i64 %171
  store double** %356, double*** %340, align 8
  store double** %356, double*** %339, align 8
  %357 = getelementptr inbounds double*, double** %354, i64 %345
  store double** %357, double*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #16
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint double** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint double** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt double** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds double*, double** %356, i64 %370
  store double** %371, double*** %340, align 8
  store double** %371, double*** %339, align 8
  %372 = ptrtoint double** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #17
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.402"* %4 to i64*
  %382 = bitcast double*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #16
  %386 = bitcast i8* %385 to double**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds double*, double** %386, i64 %383
  %389 = ptrtoint double** %388 to i64
  %390 = getelementptr inbounds double*, double** %386, i64 %377
  %391 = ptrtoint double** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast double*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast double*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #16
  %394 = load double**, double*** %164, align 8
  %395 = load double**, double*** %167, align 8
  %396 = ptrtoint double** %395 to i64
  %397 = ptrtoint double** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi double** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi double** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi double** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast double** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds double*, double** %406, i64 1
  store double** %408, double*** %340, align 8
  %409 = icmp eq double** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint double** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.402"* %4 to i64*
  %413 = bitcast double*** %339 to i64*
  %414 = bitcast double*** %340 to i64*
  %415 = bitcast double*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint double** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.402"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast double*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast double*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast double*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to double**
  %441 = inttoptr i64 %434 to double**
  %442 = icmp eq double** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr double*, double** %441, i64 -1
  %445 = ptrtoint double** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr double*, double** %441, i64 %448
  store double** %449, double*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #16
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #15
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi double** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds double*, double** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPdRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.402"* nonnull %4, double** dereferenceable(8) %457)
  %458 = load double**, double*** %167, align 8
  %459 = icmp eq double** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.134"*, double** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 2
  %4 = load double**, double*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load double**, double*** %5, align 8
  %7 = icmp eq double** %4, %6
  %8 = ptrtoint double** %6 to i64
  %9 = bitcast double** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 1
  %12 = load double**, double*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 0
  %14 = load double**, double*** %13, align 8
  %15 = icmp ugt double** %12, %14
  %16 = ptrtoint double** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint double** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds double*, double** %12, i64 %22
  %24 = ptrtoint double** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast double** %23 to i8*
  %30 = bitcast double** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load double**, double*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi double** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds double*, double** %23, i64 %26
  store double** %34, double*** %3, align 8
  %35 = getelementptr inbounds double*, double** %33, i64 %22
  store double** %35, double*** %11, align 8
  %36 = bitcast double** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast double*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.134"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to double**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds double*, double** %50, i64 %47
  %53 = ptrtoint double** %52 to i64
  %54 = getelementptr inbounds double*, double** %50, i64 %43
  %55 = ptrtoint double** %54 to i64
  %56 = ptrtoint double** %12 to i64
  %57 = ptrtoint double** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds double*, double** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi double** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi double** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast double** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds double*, double** %69, i64 1
  %77 = ptrtoint double** %76 to i64
  %78 = getelementptr inbounds double*, double** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !56

81:                                               ; preds = %68
  %82 = ptrtoint double** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi double** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi double** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi double** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi double** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast double** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds double*, double** %89, i64 1
  %96 = getelementptr inbounds double*, double** %91, i64 1
  %97 = bitcast double** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast double** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds double*, double** %89, i64 2
  %101 = getelementptr inbounds double*, double** %91, i64 2
  %102 = bitcast double** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast double** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds double*, double** %89, i64 3
  %106 = getelementptr inbounds double*, double** %91, i64 3
  %107 = bitcast double** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast double** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds double*, double** %89, i64 4
  %111 = getelementptr inbounds double*, double** %91, i64 4
  %112 = bitcast double** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast double** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds double*, double** %89, i64 5
  %116 = getelementptr inbounds double*, double** %91, i64 5
  %117 = bitcast double** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast double** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds double*, double** %89, i64 6
  %121 = getelementptr inbounds double*, double** %91, i64 6
  %122 = bitcast double** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast double** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds double*, double** %89, i64 7
  %126 = getelementptr inbounds double*, double** %91, i64 7
  %127 = bitcast double** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast double** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds double*, double** %89, i64 8
  %131 = ptrtoint double** %130 to i64
  %132 = getelementptr inbounds double*, double** %91, i64 8
  %133 = icmp eq double** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint double** %60 to i64
  %136 = load double**, double*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi double** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast double*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast double*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq double** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast double** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = bitcast double*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast double** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load double**, double*** %3, align 8
  %153 = getelementptr inbounds double*, double** %152, i64 1
  store double** %153, double*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.134"*, double** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 1
  %4 = load double**, double*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 0
  %6 = load double**, double*** %5, align 8
  %7 = icmp eq double** %4, %6
  %8 = ptrtoint double** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 2
  %11 = load double**, double*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load double**, double*** %12, align 8
  %14 = icmp ult double** %11, %13
  %15 = bitcast double*** %12 to i64*
  %16 = ptrtoint double** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint double** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds double*, double** %11, i64 %22
  %24 = ptrtoint double** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds double*, double** %23, i64 %29
  %31 = bitcast double** %30 to i8*
  %32 = bitcast double** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load double**, double*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi double** [ %33, %27 ], [ %11, %17 ]
  %36 = phi double** [ %30, %27 ], [ %23, %17 ]
  store double** %36, double*** %3, align 8
  %37 = getelementptr inbounds double*, double** %35, i64 %22
  store double** %37, double*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.134"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to double**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds double*, double** %51, i64 %48
  %54 = ptrtoint double** %53 to i64
  %55 = getelementptr inbounds double*, double** %51, i64 %43
  %56 = ptrtoint double** %55 to i64
  %57 = ptrtoint double** %4 to i64
  %58 = ptrtoint double** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds double*, double** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi double** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi double** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast double** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds double*, double** %70, i64 1
  %78 = ptrtoint double** %77 to i64
  %79 = getelementptr inbounds double*, double** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !57

82:                                               ; preds = %69
  %83 = ptrtoint double** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi double** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi double** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi double** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi double** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast double** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds double*, double** %90, i64 1
  %97 = getelementptr inbounds double*, double** %92, i64 1
  %98 = bitcast double** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast double** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds double*, double** %90, i64 2
  %102 = getelementptr inbounds double*, double** %92, i64 2
  %103 = bitcast double** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast double** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds double*, double** %90, i64 3
  %107 = getelementptr inbounds double*, double** %92, i64 3
  %108 = bitcast double** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast double** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds double*, double** %90, i64 4
  %112 = getelementptr inbounds double*, double** %92, i64 4
  %113 = bitcast double** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast double** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds double*, double** %90, i64 5
  %117 = getelementptr inbounds double*, double** %92, i64 5
  %118 = bitcast double** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast double** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds double*, double** %90, i64 6
  %122 = getelementptr inbounds double*, double** %92, i64 6
  %123 = bitcast double** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast double** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds double*, double** %90, i64 7
  %127 = getelementptr inbounds double*, double** %92, i64 7
  %128 = bitcast double** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast double** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds double*, double** %90, i64 8
  %132 = ptrtoint double** %131 to i64
  %133 = getelementptr inbounds double*, double** %92, i64 8
  %134 = icmp eq double** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint double** %61 to i64
  %137 = load double**, double*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi double** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast double*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast double*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq double** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast double** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load double**, double*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi double** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds double*, double** %148, i64 -1
  %150 = bitcast double** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast double** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load double**, double*** %3, align 8
  %154 = getelementptr inbounds double*, double** %153, i64 -1
  store double** %154, double*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPdRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.402"*, double** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.402", %"struct.std::__1::__split_buffer.402"* %0, i64 0, i32 1
  %4 = load double**, double*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.402", %"struct.std::__1::__split_buffer.402"* %0, i64 0, i32 0
  %6 = load double**, double*** %5, align 8
  %7 = icmp eq double** %4, %6
  %8 = ptrtoint double** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.402", %"struct.std::__1::__split_buffer.402"* %0, i64 0, i32 2
  %11 = load double**, double*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.402", %"struct.std::__1::__split_buffer.402"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load double**, double*** %12, align 8
  %14 = icmp ult double** %11, %13
  %15 = bitcast double*** %12 to i64*
  %16 = ptrtoint double** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint double** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds double*, double** %11, i64 %22
  %24 = ptrtoint double** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds double*, double** %23, i64 %29
  %31 = bitcast double** %30 to i8*
  %32 = bitcast double** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load double**, double*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi double** [ %33, %27 ], [ %11, %17 ]
  %36 = phi double** [ %30, %27 ], [ %23, %17 ]
  store double** %36, double*** %3, align 8
  %37 = getelementptr inbounds double*, double** %35, i64 %22
  store double** %37, double*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.402"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to double**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds double*, double** %51, i64 %48
  %54 = ptrtoint double** %53 to i64
  %55 = getelementptr inbounds double*, double** %51, i64 %43
  %56 = ptrtoint double** %55 to i64
  %57 = ptrtoint double** %4 to i64
  %58 = ptrtoint double** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds double*, double** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi double** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi double** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast double** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds double*, double** %70, i64 1
  %78 = ptrtoint double** %77 to i64
  %79 = getelementptr inbounds double*, double** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !58

82:                                               ; preds = %69
  %83 = ptrtoint double** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi double** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi double** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi double** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi double** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast double** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds double*, double** %90, i64 1
  %97 = getelementptr inbounds double*, double** %92, i64 1
  %98 = bitcast double** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast double** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds double*, double** %90, i64 2
  %102 = getelementptr inbounds double*, double** %92, i64 2
  %103 = bitcast double** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast double** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds double*, double** %90, i64 3
  %107 = getelementptr inbounds double*, double** %92, i64 3
  %108 = bitcast double** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast double** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds double*, double** %90, i64 4
  %112 = getelementptr inbounds double*, double** %92, i64 4
  %113 = bitcast double** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast double** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds double*, double** %90, i64 5
  %117 = getelementptr inbounds double*, double** %92, i64 5
  %118 = bitcast double** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast double** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds double*, double** %90, i64 6
  %122 = getelementptr inbounds double*, double** %92, i64 6
  %123 = bitcast double** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast double** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds double*, double** %90, i64 7
  %127 = getelementptr inbounds double*, double** %92, i64 7
  %128 = bitcast double** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast double** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds double*, double** %90, i64 8
  %132 = ptrtoint double** %131 to i64
  %133 = getelementptr inbounds double*, double** %92, i64 8
  %134 = icmp eq double** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint double** %61 to i64
  %137 = load double**, double*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi double** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast double*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast double*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq double** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast double** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load double**, double*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi double** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds double*, double** %148, i64 -1
  %150 = bitcast double** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast double** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load double**, double*** %3, align 8
  %154 = getelementptr inbounds double*, double** %153, i64 -1
  store double** %154, double*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor14NullableVectorIiE3SetEji(%"class.perfetto::trace_processor::NullableVector.117"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.perfetto::base::Optional.412"*
  %7 = alloca %"class.perfetto::base::Optional.412", align 4
  store i32 %2, i32* %4, align 4
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 4
  %13 = tail call zeroext i1 @_ZNK8perfetto15trace_processor6RowMap8ContainsEj(%"class.perfetto::trace_processor::RowMap"* %12, i32 %1)
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %12, i32 %1)
  br label %15

15:                                               ; preds = %14, %11
  %16 = zext i32 %1 to i64
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %21 = load i32**, i32*** %20, align 8
  %22 = lshr i64 %19, 10
  %23 = getelementptr inbounds i32*, i32** %21, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %19, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  store i32 %2, i32* %26, align 4
  br label %113

27:                                               ; preds = %3
  %28 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i64 -6148914691236517206, i64* %5, align 8
  %29 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 4
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* nonnull sret %6, %"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %30 = load i8, i8* %28, align 8, !range !6
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %46, label %32, !prof !7

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %40 = load i32**, i32*** %39, align 8
  %41 = lshr i64 %38, 10
  %42 = getelementptr inbounds i32*, i32** %40, i64 %41
  %43 = load i32*, i32** %42, align 8
  %44 = and i64 %38, 1023
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  store i32 %2, i32* %45, align 4
  br label %112

46:                                               ; preds = %27
  call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %47 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* nonnull sret %7, %"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %48 = load i8, i8* %47, align 4, !range !6
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = load i8, i8* %28, align 8, !range !6
  %53 = icmp eq i8 %52, 0
  %54 = load i32, i32* %51, align 4
  br i1 %53, label %55, label %56

55:                                               ; preds = %50
  store i8 1, i8* %28, align 8
  br label %56

56:                                               ; preds = %55, %50
  %57 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %54, i32* %57, align 4
  br label %62

58:                                               ; preds = %46
  %59 = load i8, i8* %28, align 8, !range !6
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  store i8 0, i8* %28, align 8
  br label %62

62:                                               ; preds = %56, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  %63 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 3
  %64 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %65 = load i32**, i32*** %64, align 8
  %66 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 3, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = lshr i64 %67, 10
  %69 = getelementptr inbounds i32*, i32** %65, i64 %68
  %70 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.117", %"class.perfetto::trace_processor::NullableVector.117"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %71 = load i32**, i32*** %70, align 8
  %72 = icmp eq i32** %71, %65
  br i1 %72, label %78, label %73

73:                                               ; preds = %62
  %74 = load i32*, i32** %69, align 8
  %75 = and i64 %67, 1023
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  %77 = ptrtoint i32* %76 to i64
  br label %78

78:                                               ; preds = %62, %73
  %79 = phi i64 [ %77, %73 ], [ 0, %62 ]
  %80 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %107, label %83

83:                                               ; preds = %78
  %84 = zext i32 %81 to i64
  %85 = bitcast i32** %69 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %79, %86
  %88 = ashr exact i64 %87, 2
  %89 = add nsw i64 %88, %84
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = lshr i64 %89, 10
  %93 = getelementptr inbounds i32*, i32** %69, i64 %92
  %94 = load i32*, i32** %93, align 8
  %95 = and i64 %89, 1023
  %96 = getelementptr inbounds i32, i32* %94, i64 %95
  %97 = ptrtoint i32* %96 to i64
  br label %107

98:                                               ; preds = %83
  %99 = sub nsw i64 1023, %89
  %100 = sdiv i64 %99, -1024
  %101 = getelementptr inbounds i32*, i32** %69, i64 %100
  %102 = load i32*, i32** %101, align 8
  %103 = srem i64 %99, 1024
  %104 = sub nuw nsw i64 1023, %103
  %105 = getelementptr inbounds i32, i32* %102, i64 %104
  %106 = ptrtoint i32* %105 to i64
  br label %107

107:                                              ; preds = %78, %91, %98
  %108 = phi i64 [ %79, %78 ], [ %97, %91 ], [ %106, %98 ]
  %109 = phi i32** [ %69, %78 ], [ %93, %91 ], [ %101, %98 ]
  %110 = inttoptr i64 %108 to i32*
  %111 = call { i32**, i32* } @_ZNSt3__15dequeIiNS_9allocatorIiEEE6insertENS_16__deque_iteratorIiPKiRS5_PKS6_lLl0EEES7_(%"class.std::__1::deque.118"* %63, i32** %109, i32* %110, i32* nonnull dereferenceable(4) %4)
  br label %112

112:                                              ; preds = %107, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %113

113:                                              ; preds = %112, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor14NullableVectorIjE3SetEjj(%"class.perfetto::trace_processor::NullableVector.106"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.perfetto::base::Optional.412"*
  %7 = alloca %"class.perfetto::base::Optional.412", align 4
  store i32 %2, i32* %4, align 4
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 4
  %13 = tail call zeroext i1 @_ZNK8perfetto15trace_processor6RowMap8ContainsEj(%"class.perfetto::trace_processor::RowMap"* %12, i32 %1)
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %12, i32 %1)
  br label %15

15:                                               ; preds = %14, %11
  %16 = zext i32 %1 to i64
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %21 = load i32**, i32*** %20, align 8
  %22 = lshr i64 %19, 10
  %23 = getelementptr inbounds i32*, i32** %21, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %19, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  store i32 %2, i32* %26, align 4
  br label %113

27:                                               ; preds = %3
  %28 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i64 -6148914691236517206, i64* %5, align 8
  %29 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 4
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* nonnull sret %6, %"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %30 = load i8, i8* %28, align 8, !range !6
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %46, label %32, !prof !7

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %40 = load i32**, i32*** %39, align 8
  %41 = lshr i64 %38, 10
  %42 = getelementptr inbounds i32*, i32** %40, i64 %41
  %43 = load i32*, i32** %42, align 8
  %44 = and i64 %38, 1023
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  store i32 %2, i32* %45, align 4
  br label %112

46:                                               ; preds = %27
  call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %47 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* nonnull sret %7, %"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %48 = load i8, i8* %47, align 4, !range !6
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = load i8, i8* %28, align 8, !range !6
  %53 = icmp eq i8 %52, 0
  %54 = load i32, i32* %51, align 4
  br i1 %53, label %55, label %56

55:                                               ; preds = %50
  store i8 1, i8* %28, align 8
  br label %56

56:                                               ; preds = %55, %50
  %57 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %54, i32* %57, align 4
  br label %62

58:                                               ; preds = %46
  %59 = load i8, i8* %28, align 8, !range !6
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  store i8 0, i8* %28, align 8
  br label %62

62:                                               ; preds = %56, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  %63 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 3
  %64 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %65 = load i32**, i32*** %64, align 8
  %66 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 3, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = lshr i64 %67, 10
  %69 = getelementptr inbounds i32*, i32** %65, i64 %68
  %70 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.106", %"class.perfetto::trace_processor::NullableVector.106"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %71 = load i32**, i32*** %70, align 8
  %72 = icmp eq i32** %71, %65
  br i1 %72, label %78, label %73

73:                                               ; preds = %62
  %74 = load i32*, i32** %69, align 8
  %75 = and i64 %67, 1023
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  %77 = ptrtoint i32* %76 to i64
  br label %78

78:                                               ; preds = %62, %73
  %79 = phi i64 [ %77, %73 ], [ 0, %62 ]
  %80 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %107, label %83

83:                                               ; preds = %78
  %84 = zext i32 %81 to i64
  %85 = bitcast i32** %69 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %79, %86
  %88 = ashr exact i64 %87, 2
  %89 = add nsw i64 %88, %84
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = lshr i64 %89, 10
  %93 = getelementptr inbounds i32*, i32** %69, i64 %92
  %94 = load i32*, i32** %93, align 8
  %95 = and i64 %89, 1023
  %96 = getelementptr inbounds i32, i32* %94, i64 %95
  %97 = ptrtoint i32* %96 to i64
  br label %107

98:                                               ; preds = %83
  %99 = sub nsw i64 1023, %89
  %100 = sdiv i64 %99, -1024
  %101 = getelementptr inbounds i32*, i32** %69, i64 %100
  %102 = load i32*, i32** %101, align 8
  %103 = srem i64 %99, 1024
  %104 = sub nuw nsw i64 1023, %103
  %105 = getelementptr inbounds i32, i32* %102, i64 %104
  %106 = ptrtoint i32* %105 to i64
  br label %107

107:                                              ; preds = %78, %91, %98
  %108 = phi i64 [ %79, %78 ], [ %97, %91 ], [ %106, %98 ]
  %109 = phi i32** [ %69, %78 ], [ %93, %91 ], [ %101, %98 ]
  %110 = inttoptr i64 %108 to i32*
  %111 = call { i32**, i32* } @_ZNSt3__15dequeIjNS_9allocatorIjEEE6insertENS_16__deque_iteratorIjPKjRS5_PKS6_lLl0EEES7_(%"class.std::__1::deque.107"* %63, i32** %109, i32* %110, i32* nonnull dereferenceable(4) %4)
  br label %112

112:                                              ; preds = %107, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %113

113:                                              ; preds = %112, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor14NullableVectorIlE3SetEjl(%"class.perfetto::trace_processor::NullableVector.92"*, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.perfetto::base::Optional.412"*
  %7 = alloca %"class.perfetto::base::Optional.412", align 4
  store i64 %2, i64* %4, align 8
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 4
  %13 = tail call zeroext i1 @_ZNK8perfetto15trace_processor6RowMap8ContainsEj(%"class.perfetto::trace_processor::RowMap"* %12, i32 %1)
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %12, i32 %1)
  br label %15

15:                                               ; preds = %14, %11
  %16 = zext i32 %1 to i64
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %21 = load i64**, i64*** %20, align 8
  %22 = lshr i64 %19, 9
  %23 = getelementptr inbounds i64*, i64** %21, i64 %22
  %24 = load i64*, i64** %23, align 8
  %25 = and i64 %19, 511
  %26 = getelementptr inbounds i64, i64* %24, i64 %25
  store i64 %2, i64* %26, align 8
  br label %113

27:                                               ; preds = %3
  %28 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i64 -6148914691236517206, i64* %5, align 8
  %29 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 4
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* nonnull sret %6, %"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %30 = load i8, i8* %28, align 8, !range !6
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %46, label %32, !prof !7

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %40 = load i64**, i64*** %39, align 8
  %41 = lshr i64 %38, 9
  %42 = getelementptr inbounds i64*, i64** %40, i64 %41
  %43 = load i64*, i64** %42, align 8
  %44 = and i64 %38, 511
  %45 = getelementptr inbounds i64, i64* %43, i64 %44
  store i64 %2, i64* %45, align 8
  br label %112

46:                                               ; preds = %27
  call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %47 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* nonnull sret %7, %"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %48 = load i8, i8* %47, align 4, !range !6
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = load i8, i8* %28, align 8, !range !6
  %53 = icmp eq i8 %52, 0
  %54 = load i32, i32* %51, align 4
  br i1 %53, label %55, label %56

55:                                               ; preds = %50
  store i8 1, i8* %28, align 8
  br label %56

56:                                               ; preds = %55, %50
  %57 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %54, i32* %57, align 4
  br label %62

58:                                               ; preds = %46
  %59 = load i8, i8* %28, align 8, !range !6
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  store i8 0, i8* %28, align 8
  br label %62

62:                                               ; preds = %56, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  %63 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3
  %64 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %65 = load i64**, i64*** %64, align 8
  %66 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = lshr i64 %67, 9
  %69 = getelementptr inbounds i64*, i64** %65, i64 %68
  %70 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.92", %"class.perfetto::trace_processor::NullableVector.92"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %71 = load i64**, i64*** %70, align 8
  %72 = icmp eq i64** %71, %65
  br i1 %72, label %78, label %73

73:                                               ; preds = %62
  %74 = load i64*, i64** %69, align 8
  %75 = and i64 %67, 511
  %76 = getelementptr inbounds i64, i64* %74, i64 %75
  %77 = ptrtoint i64* %76 to i64
  br label %78

78:                                               ; preds = %62, %73
  %79 = phi i64 [ %77, %73 ], [ 0, %62 ]
  %80 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %107, label %83

83:                                               ; preds = %78
  %84 = zext i32 %81 to i64
  %85 = bitcast i64** %69 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %79, %86
  %88 = ashr exact i64 %87, 3
  %89 = add nsw i64 %88, %84
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = lshr i64 %89, 9
  %93 = getelementptr inbounds i64*, i64** %69, i64 %92
  %94 = load i64*, i64** %93, align 8
  %95 = and i64 %89, 511
  %96 = getelementptr inbounds i64, i64* %94, i64 %95
  %97 = ptrtoint i64* %96 to i64
  br label %107

98:                                               ; preds = %83
  %99 = sub nsw i64 511, %89
  %100 = sdiv i64 %99, -512
  %101 = getelementptr inbounds i64*, i64** %69, i64 %100
  %102 = load i64*, i64** %101, align 8
  %103 = srem i64 %99, 512
  %104 = sub nuw nsw i64 511, %103
  %105 = getelementptr inbounds i64, i64* %102, i64 %104
  %106 = ptrtoint i64* %105 to i64
  br label %107

107:                                              ; preds = %78, %91, %98
  %108 = phi i64 [ %79, %78 ], [ %97, %91 ], [ %106, %98 ]
  %109 = phi i64** [ %69, %78 ], [ %93, %91 ], [ %101, %98 ]
  %110 = inttoptr i64 %108 to i64*
  %111 = call { i64**, i64* } @_ZNSt3__15dequeIlNS_9allocatorIlEEE6insertENS_16__deque_iteratorIlPKlRS5_PKS6_lLl0EEES7_(%"class.std::__1::deque.93"* %63, i64** %109, i64* %110, i64* nonnull dereferenceable(8) %4)
  br label %112

112:                                              ; preds = %107, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %113

113:                                              ; preds = %112, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor14NullableVectorIdE3SetEjd(%"class.perfetto::trace_processor::NullableVector.131"*, i32, double) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca double, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.perfetto::base::Optional.412"*
  %7 = alloca %"class.perfetto::base::Optional.412", align 4
  store double %2, double* %4, align 8
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 4
  %13 = tail call zeroext i1 @_ZNK8perfetto15trace_processor6RowMap8ContainsEj(%"class.perfetto::trace_processor::RowMap"* %12, i32 %1)
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %12, i32 %1)
  br label %15

15:                                               ; preds = %14, %11
  %16 = zext i32 %1 to i64
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %21 = load double**, double*** %20, align 8
  %22 = lshr i64 %19, 9
  %23 = getelementptr inbounds double*, double** %21, i64 %22
  %24 = load double*, double** %23, align 8
  %25 = and i64 %19, 511
  %26 = getelementptr inbounds double, double* %24, i64 %25
  store double %2, double* %26, align 8
  br label %113

27:                                               ; preds = %3
  %28 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i64 -6148914691236517206, i64* %5, align 8
  %29 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 4
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* nonnull sret %6, %"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %30 = load i8, i8* %28, align 8, !range !6
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %46, label %32, !prof !7

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %40 = load double**, double*** %39, align 8
  %41 = lshr i64 %38, 9
  %42 = getelementptr inbounds double*, double** %40, i64 %41
  %43 = load double*, double** %42, align 8
  %44 = and i64 %38, 511
  %45 = getelementptr inbounds double, double* %43, i64 %44
  store double %2, double* %45, align 8
  br label %112

46:                                               ; preds = %27
  call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %47 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* nonnull sret %7, %"class.perfetto::trace_processor::RowMap"* %29, i32 %1)
  %48 = load i8, i8* %47, align 4, !range !6
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = load i8, i8* %28, align 8, !range !6
  %53 = icmp eq i8 %52, 0
  %54 = load i32, i32* %51, align 4
  br i1 %53, label %55, label %56

55:                                               ; preds = %50
  store i8 1, i8* %28, align 8
  br label %56

56:                                               ; preds = %55, %50
  %57 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %54, i32* %57, align 4
  br label %62

58:                                               ; preds = %46
  %59 = load i8, i8* %28, align 8, !range !6
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  store i8 0, i8* %28, align 8
  br label %62

62:                                               ; preds = %56, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  %63 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3
  %64 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %65 = load double**, double*** %64, align 8
  %66 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = lshr i64 %67, 9
  %69 = getelementptr inbounds double*, double** %65, i64 %68
  %70 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.131", %"class.perfetto::trace_processor::NullableVector.131"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %71 = load double**, double*** %70, align 8
  %72 = icmp eq double** %71, %65
  br i1 %72, label %78, label %73

73:                                               ; preds = %62
  %74 = load double*, double** %69, align 8
  %75 = and i64 %67, 511
  %76 = getelementptr inbounds double, double* %74, i64 %75
  %77 = ptrtoint double* %76 to i64
  br label %78

78:                                               ; preds = %62, %73
  %79 = phi i64 [ %77, %73 ], [ 0, %62 ]
  %80 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %107, label %83

83:                                               ; preds = %78
  %84 = zext i32 %81 to i64
  %85 = bitcast double** %69 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %79, %86
  %88 = ashr exact i64 %87, 3
  %89 = add nsw i64 %88, %84
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %83
  %92 = lshr i64 %89, 9
  %93 = getelementptr inbounds double*, double** %69, i64 %92
  %94 = load double*, double** %93, align 8
  %95 = and i64 %89, 511
  %96 = getelementptr inbounds double, double* %94, i64 %95
  %97 = ptrtoint double* %96 to i64
  br label %107

98:                                               ; preds = %83
  %99 = sub nsw i64 511, %89
  %100 = sdiv i64 %99, -512
  %101 = getelementptr inbounds double*, double** %69, i64 %100
  %102 = load double*, double** %101, align 8
  %103 = srem i64 %99, 512
  %104 = sub nuw nsw i64 511, %103
  %105 = getelementptr inbounds double, double* %102, i64 %104
  %106 = ptrtoint double* %105 to i64
  br label %107

107:                                              ; preds = %78, %91, %98
  %108 = phi i64 [ %79, %78 ], [ %97, %91 ], [ %106, %98 ]
  %109 = phi double** [ %69, %78 ], [ %93, %91 ], [ %101, %98 ]
  %110 = inttoptr i64 %108 to double*
  %111 = call { double**, double* } @_ZNSt3__15dequeIdNS_9allocatorIdEEE6insertENS_16__deque_iteratorIdPKdRS5_PKS6_lLl0EEES7_(%"class.std::__1::deque.132"* %63, double** %109, double* %110, double* nonnull dereferenceable(8) %4)
  br label %112

112:                                              ; preds = %107, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %113

113:                                              ; preds = %112, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8perfetto15trace_processor6RowMap8ContainsEj(%"class.perfetto::trace_processor::RowMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %48 [
    i32 0, label %5
    i32 1, label %13
    i32 2, label %32
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, %1
  br i1 %8, label %53, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %11, %1
  br label %53

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp ugt i32 %15, %1
  br i1 %16, label %17, label %53

17:                                               ; preds = %13
  %18 = lshr i32 %1, 9
  %19 = lshr i32 %1, 6
  %20 = and i32 %19, 7
  %21 = zext i32 %20 to i64
  %22 = and i32 %1, 63
  %23 = zext i32 %22 to i64
  %24 = zext i32 %18 to i64
  %25 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %26 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %25, align 8
  %27 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %26, i64 %24, i32 0, i32 0, i64 %21, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = shl i64 1, %23
  %30 = and i64 %28, %29
  %31 = icmp ne i64 %30, 0
  br label %53

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %34, %36
  br i1 %37, label %45, label %38

38:                                               ; preds = %32, %42
  %39 = phi i32* [ %43, %42 ], [ %34, %32 ]
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %1
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds i32, i32* %39, i64 1
  %44 = icmp eq i32* %43, %36
  br i1 %44, label %45, label %38

45:                                               ; preds = %38, %42, %32
  %46 = phi i32* [ %34, %32 ], [ %39, %38 ], [ %36, %42 ]
  %47 = icmp ne i32* %46, %36
  br label %53

48:                                               ; preds = %2
  %49 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0))
  %50 = tail call i32* @__errno_location() #18
  %51 = load i32, i32* %50, align 4
  %52 = tail call i8* @strerror(i32 %51) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %49, i32 285, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i32 %51, i8* %52) #15
  tail call void @llvm.trap()
  unreachable

53:                                               ; preds = %13, %17, %9, %5, %45
  %54 = phi i1 [ %47, %45 ], [ false, %5 ], [ %12, %9 ], [ false, %13 ], [ %31, %17 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.412"* noalias sret, %"class.perfetto::trace_processor::RowMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %115 [
    i32 0, label %6
    i32 1, label %22
    i32 2, label %87
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %2
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, %2
  br i1 %13, label %18, label %14

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.416* %16 to i8*
  store i8 0, i8* %17, align 4
  br label %120

18:                                               ; preds = %10
  %19 = sub i32 %2, %8
  %20 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %19, i32* %21, align 4
  br label %120

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 4, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ugt i32 %24, %2
  br i1 %25, label %26, label %83

26:                                               ; preds = %22
  %27 = lshr i32 %2, 9
  %28 = lshr i32 %2, 6
  %29 = and i32 %28, 7
  %30 = zext i32 %29 to i64
  %31 = and i32 %2, 63
  %32 = zext i32 %31 to i64
  %33 = zext i32 %27 to i64
  %34 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 4, i32 2, i32 0, i32 0
  %35 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %34, align 8
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %33, i32 0, i32 0, i64 %30, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = shl i64 1, %32
  %39 = and i64 %37, %38
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %83, label %41

41:                                               ; preds = %26
  %42 = icmp eq i32 %2, 0
  br i1 %42, label %79, label %43

43:                                               ; preds = %41
  %44 = add i32 %2, -1
  %45 = lshr i32 %44, 9
  %46 = lshr i32 %44, 6
  %47 = and i32 %46, 7
  %48 = zext i32 %47 to i64
  %49 = and i32 %44, 63
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 4, i32 1, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 %50
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %47, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = tail call i64 @llvm.ctpop.i64(i64 %58) #15, !range !5
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %47, 1
  br i1 %61, label %62, label %121

62:                                               ; preds = %56, %121, %128, %135, %142, %149, %156, %43
  %63 = phi i32 [ 0, %43 ], [ %60, %56 ], [ %126, %121 ], [ %133, %128 ], [ %140, %135 ], [ %147, %142 ], [ %154, %149 ], [ %161, %156 ]
  %64 = add nuw nsw i32 %49, 1
  %65 = and i32 %64, 63
  %66 = zext i32 %65 to i64
  %67 = shl i64 1, %66
  %68 = lshr i32 %64, 6
  %69 = zext i32 %68 to i64
  %70 = lshr i64 %67, %69
  %71 = add i64 %70, -1
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 %48, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, %71
  %75 = tail call i64 @llvm.ctpop.i64(i64 %74) #15, !range !5
  %76 = trunc i64 %75 to i32
  %77 = add i32 %63, %54
  %78 = add i32 %77, %76
  br label %79

79:                                               ; preds = %41, %62
  %80 = phi i32 [ %78, %62 ], [ 0, %41 ]
  %81 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %81, align 4, !alias.scope !59
  %82 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %80, i32* %82, align 4, !alias.scope !59
  br label %120

83:                                               ; preds = %26, %22
  %84 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %84, align 4
  %85 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %union.anon.416* %85 to i8*
  store i8 0, i8* %86, align 4
  br label %120

87:                                               ; preds = %3
  %88 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 5, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 5, i32 0, i32 1
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %89, %91
  br i1 %92, label %100, label %93

93:                                               ; preds = %87, %97
  %94 = phi i32* [ %98, %97 ], [ %89, %87 ]
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, %2
  br i1 %96, label %100, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds i32, i32* %94, i64 1
  %99 = icmp eq i32* %98, %91
  br i1 %99, label %111, label %93

100:                                              ; preds = %93, %87
  %101 = phi i32* [ %89, %87 ], [ %94, %93 ]
  %102 = icmp eq i32* %101, %91
  br i1 %102, label %111, label %103

103:                                              ; preds = %100
  %104 = ptrtoint i32* %89 to i64
  %105 = ptrtoint i32* %101 to i64
  %106 = sub i64 %105, %104
  %107 = lshr exact i64 %106, 2
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %109, align 4, !alias.scope !62
  %110 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %108, i32* %110, align 4, !alias.scope !62
  br label %120

111:                                              ; preds = %97, %100
  %112 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %112, align 4
  %113 = getelementptr inbounds %"class.perfetto::base::Optional.412", %"class.perfetto::base::Optional.412"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %114 = bitcast %union.anon.416* %113 to i8*
  store i8 0, i8* %114, align 4
  br label %120

115:                                              ; preds = %3
  %116 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0))
  %117 = tail call i32* @__errno_location() #18
  %118 = load i32, i32* %117, align 4
  %119 = tail call i8* @strerror(i32 %118) #15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %116, i32 309, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i32 %118, i8* %119) #15
  tail call void @llvm.trap()
  unreachable

120:                                              ; preds = %103, %111, %79, %83, %18, %14
  ret void

121:                                              ; preds = %56
  %122 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 1, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = tail call i64 @llvm.ctpop.i64(i64 %123) #15, !range !5
  %125 = trunc i64 %124 to i32
  %126 = add nuw nsw i32 %60, %125
  %127 = icmp eq i32 %47, 2
  br i1 %127, label %62, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 2, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = tail call i64 @llvm.ctpop.i64(i64 %130) #15, !range !5
  %132 = trunc i64 %131 to i32
  %133 = add nuw nsw i32 %126, %132
  %134 = icmp eq i32 %47, 3
  br i1 %134, label %62, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 3, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = tail call i64 @llvm.ctpop.i64(i64 %137) #15, !range !5
  %139 = trunc i64 %138 to i32
  %140 = add nuw nsw i32 %133, %139
  %141 = icmp eq i32 %47, 4
  br i1 %141, label %62, label %142

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 4, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = tail call i64 @llvm.ctpop.i64(i64 %144) #15, !range !5
  %146 = trunc i64 %145 to i32
  %147 = add nuw nsw i32 %140, %146
  %148 = icmp eq i32 %47, 5
  br i1 %148, label %62, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 5, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = tail call i64 @llvm.ctpop.i64(i64 %151) #15, !range !5
  %153 = trunc i64 %152 to i32
  %154 = add nuw nsw i32 %147, %153
  %155 = icmp eq i32 %47, 6
  br i1 %155, label %62, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 6, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = tail call i64 @llvm.ctpop.i64(i64 %158) #15, !range !5
  %160 = trunc i64 %159 to i32
  %161 = add i32 %154, %160
  br label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__15dequeIiNS_9allocatorIiEEE6insertENS_16__deque_iteratorIiPKiRS5_PKS6_lLl0EEES7_(%"class.std::__1::deque.118"*, i32**, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::__1::__deque_iterator.417", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::__1::__deque_iterator.417", align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32**, i32*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 10
  %14 = getelementptr inbounds i32*, i32** %10, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = icmp eq i32** %16, %10
  %18 = ptrtoint i32** %16 to i64
  %19 = ptrtoint i32** %10 to i64
  br i1 %17, label %24, label %20

20:                                               ; preds = %4
  %21 = load i32*, i32** %14, align 8
  %22 = and i64 %12, 1023
  %23 = getelementptr inbounds i32, i32* %21, i64 %22
  br label %24

24:                                               ; preds = %4, %20
  %25 = phi i32* [ %23, %20 ], [ null, %4 ]
  %26 = icmp eq i32* %25, %2
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = ptrtoint i32* %25 to i64
  %29 = ptrtoint i32** %14 to i64
  %30 = ptrtoint i32* %2 to i64
  %31 = ptrtoint i32** %1 to i64
  %32 = sub i64 %31, %29
  %33 = shl i64 %32, 7
  %34 = bitcast i32** %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %30, %35
  %37 = ashr exact i64 %36, 2
  %38 = add nsw i64 %37, %33
  %39 = bitcast i32** %14 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %28, %40
  %42 = ashr exact i64 %41, 2
  %43 = sub i64 %38, %42
  br label %44

44:                                               ; preds = %24, %27
  %45 = phi i64 [ %43, %27 ], [ 0, %24 ]
  %46 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ult i64 %45, %48
  br i1 %49, label %50, label %181

50:                                               ; preds = %44
  %51 = icmp eq i64 %12, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @_ZNSt3__15dequeIiNS_9allocatorIiEEE20__add_front_capacityEv(%"class.std::__1::deque.118"* %0)
  br label %53

53:                                               ; preds = %52, %50
  %54 = icmp eq i64 %45, 0
  br i1 %54, label %55, label %79

55:                                               ; preds = %53
  %56 = load i32**, i32*** %9, align 8
  %57 = load i64, i64* %11, align 8
  %58 = lshr i64 %57, 10
  %59 = getelementptr inbounds i32*, i32** %56, i64 %58
  %60 = load i32**, i32*** %15, align 8
  %61 = icmp eq i32** %60, %56
  %62 = load i32*, i32** %59, align 8
  %63 = and i64 %57, 1023
  %64 = getelementptr inbounds i32, i32* %62, i64 %63
  %65 = select i1 %61, i32* null, i32* %64
  %66 = icmp eq i32* %65, %62
  br i1 %66, label %67, label %71

67:                                               ; preds = %55
  %68 = getelementptr inbounds i32*, i32** %59, i64 -1
  %69 = load i32*, i32** %68, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 1024
  br label %71

71:                                               ; preds = %55, %67
  %72 = phi i32* [ %70, %67 ], [ %65, %55 ]
  %73 = getelementptr inbounds i32, i32* %72, i64 -1
  %74 = load i32, i32* %3, align 4
  store i32 %74, i32* %73, align 4
  %75 = bitcast i64* %11 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = add <2 x i64> %76, <i64 -1, i64 1>
  %78 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 8
  br label %308

79:                                               ; preds = %53
  %80 = bitcast i32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #15
  store i32* %3, i32** %5, align 8
  %81 = load i32**, i32*** %9, align 8
  %82 = load i64, i64* %11, align 8
  %83 = lshr i64 %82, 10
  %84 = getelementptr inbounds i32*, i32** %81, i64 %83
  %85 = load i32**, i32*** %15, align 8
  %86 = icmp eq i32** %85, %81
  br i1 %86, label %87, label %90

87:                                               ; preds = %79
  %88 = bitcast i32** %84 to i64*
  %89 = load i64, i64* %88, align 8
  br label %96

90:                                               ; preds = %79
  %91 = load i32*, i32** %84, align 8
  %92 = and i64 %82, 1023
  %93 = getelementptr inbounds i32, i32* %91, i64 %92
  %94 = ptrtoint i32* %91 to i64
  %95 = bitcast i32** %84 to i64*
  br label %96

96:                                               ; preds = %87, %90
  %97 = phi i64* [ %88, %87 ], [ %95, %90 ]
  %98 = phi i64 [ %89, %87 ], [ %94, %90 ]
  %99 = phi i32* [ null, %87 ], [ %93, %90 ]
  %100 = ptrtoint i32* %99 to i64
  %101 = sub i64 %100, %98
  %102 = ashr exact i64 %101, 2
  %103 = add nsw i64 %102, -1
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %96
  %106 = lshr i64 %103, 10
  %107 = getelementptr inbounds i32*, i32** %84, i64 %106
  %108 = load i32*, i32** %107, align 8
  %109 = and i64 %103, 1023
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  br label %119

111:                                              ; preds = %96
  %112 = sub nsw i64 1024, %102
  %113 = sdiv i64 %112, -1024
  %114 = getelementptr inbounds i32*, i32** %84, i64 %113
  %115 = load i32*, i32** %114, align 8
  %116 = srem i64 %112, 1024
  %117 = sub nuw nsw i64 1023, %116
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  br label %119

119:                                              ; preds = %105, %111
  %120 = phi i32* [ %110, %105 ], [ %118, %111 ]
  %121 = icmp eq i32* %99, %3
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  store i32* %120, i32** %5, align 8
  br label %123

123:                                              ; preds = %122, %119
  %124 = load i32, i32* %99, align 4
  store i32 %124, i32* %120, align 4
  %125 = bitcast i64* %11 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8
  %127 = add <2 x i64> %126, <i64 -1, i64 1>
  %128 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %128, align 8
  %129 = icmp ugt i64 %45, 1
  br i1 %129, label %130, label %177

130:                                              ; preds = %123
  %131 = load i64, i64* %97, align 8
  %132 = sub i64 %100, %131
  %133 = ashr exact i64 %132, 2
  %134 = add nsw i64 %133, 1
  %135 = icmp sgt i64 %132, -4
  br i1 %135, label %136, label %142

136:                                              ; preds = %130
  %137 = lshr i64 %134, 10
  %138 = getelementptr inbounds i32*, i32** %84, i64 %137
  %139 = load i32*, i32** %138, align 8
  %140 = and i64 %134, 1023
  %141 = getelementptr inbounds i32, i32* %139, i64 %140
  br label %150

142:                                              ; preds = %130
  %143 = sub nsw i64 1022, %133
  %144 = sdiv i64 %143, -1024
  %145 = getelementptr inbounds i32*, i32** %84, i64 %144
  %146 = load i32*, i32** %145, align 8
  %147 = srem i64 %143, 1024
  %148 = sub nuw nsw i64 1023, %147
  %149 = getelementptr inbounds i32, i32* %146, i64 %148
  br label %150

150:                                              ; preds = %142, %136
  %151 = phi i32* [ %141, %136 ], [ %149, %142 ]
  %152 = phi i32** [ %138, %136 ], [ %145, %142 ]
  %153 = add nsw i64 %133, %45
  %154 = icmp sgt i64 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %150
  %156 = lshr i64 %153, 10
  %157 = getelementptr inbounds i32*, i32** %84, i64 %156
  %158 = load i32*, i32** %157, align 8
  %159 = and i64 %153, 1023
  %160 = getelementptr inbounds i32, i32* %158, i64 %159
  br label %169

161:                                              ; preds = %150
  %162 = sub nsw i64 1023, %153
  %163 = sdiv i64 %162, -1024
  %164 = getelementptr inbounds i32*, i32** %84, i64 %163
  %165 = load i32*, i32** %164, align 8
  %166 = srem i64 %162, 1024
  %167 = sub nsw i64 1023, %166
  %168 = getelementptr inbounds i32, i32* %165, i64 %167
  br label %169

169:                                              ; preds = %155, %161
  %170 = phi i32* [ %160, %155 ], [ %168, %161 ]
  %171 = phi i32** [ %157, %155 ], [ %164, %161 ]
  %172 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %6, i64 0, i32 0
  store i32** %84, i32*** %172, align 8
  %173 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %6, i64 0, i32 1
  %174 = bitcast i32** %173 to i64*
  store i64 %100, i64* %174, align 8
  %175 = call { i32**, i32* } @_ZNSt3__15dequeIiNS_9allocatorIiEEE16__move_and_checkENS_16__deque_iteratorIiPiRiPS5_lLl0EEES8_S8_RPKi(%"class.std::__1::deque.118"* %0, i32** %152, i32* %151, i32** %171, i32* %170, %"class.std::__1::__deque_iterator.417"* nonnull byval(%"class.std::__1::__deque_iterator.417") align 8 %6, i32** nonnull dereferenceable(8) %5)
  %176 = extractvalue { i32**, i32* } %175, 1
  br label %177

177:                                              ; preds = %169, %123
  %178 = phi i32* [ %176, %169 ], [ %99, %123 ]
  %179 = load i32*, i32** %5, align 8
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %178, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #15
  br label %308

181:                                              ; preds = %44
  %182 = sub i64 %18, %19
  %183 = icmp eq i64 %182, 0
  %184 = shl i64 %182, 7
  %185 = add i64 %184, -1
  %186 = select i1 %183, i64 0, i64 %185
  %187 = add i64 %47, %12
  %188 = icmp eq i64 %186, %187
  br i1 %188, label %189, label %191

189:                                              ; preds = %181
  tail call void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.118"* %0)
  %190 = load i64, i64* %46, align 8
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i64 [ %190, %189 ], [ %47, %181 ]
  %193 = sub i64 %192, %45
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %212

195:                                              ; preds = %191
  %196 = load i64, i64* %11, align 8
  %197 = add i64 %196, %192
  %198 = load i32**, i32*** %9, align 8
  %199 = load i32**, i32*** %15, align 8
  %200 = icmp eq i32** %199, %198
  br i1 %200, label %207, label %201

201:                                              ; preds = %195
  %202 = lshr i64 %197, 10
  %203 = getelementptr inbounds i32*, i32** %198, i64 %202
  %204 = load i32*, i32** %203, align 8
  %205 = and i64 %197, 1023
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  br label %207

207:                                              ; preds = %195, %201
  %208 = phi i32* [ %206, %201 ], [ null, %195 ]
  %209 = load i32, i32* %3, align 4
  store i32 %209, i32* %208, align 4
  %210 = load i64, i64* %46, align 8
  %211 = add i64 %210, 1
  store i64 %211, i64* %46, align 8
  br label %308

212:                                              ; preds = %191
  %213 = bitcast i32** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #15
  store i32* %3, i32** %7, align 8
  %214 = load i64, i64* %11, align 8
  %215 = add i64 %214, %192
  %216 = load i32**, i32*** %9, align 8
  %217 = lshr i64 %215, 10
  %218 = getelementptr inbounds i32*, i32** %216, i64 %217
  %219 = load i32**, i32*** %15, align 8
  %220 = icmp eq i32** %219, %216
  br i1 %220, label %221, label %224

221:                                              ; preds = %212
  %222 = bitcast i32** %218 to i64*
  %223 = load i64, i64* %222, align 8
  br label %230

224:                                              ; preds = %212
  %225 = load i32*, i32** %218, align 8
  %226 = and i64 %215, 1023
  %227 = getelementptr inbounds i32, i32* %225, i64 %226
  %228 = ptrtoint i32* %225 to i64
  %229 = bitcast i32** %218 to i64*
  br label %230

230:                                              ; preds = %221, %224
  %231 = phi i64* [ %222, %221 ], [ %229, %224 ]
  %232 = phi i64 [ %223, %221 ], [ %228, %224 ]
  %233 = phi i32* [ null, %221 ], [ %227, %224 ]
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %232
  %236 = ashr exact i64 %235, 2
  %237 = add nsw i64 %236, -1
  %238 = icmp sgt i64 %237, 0
  br i1 %238, label %239, label %245

239:                                              ; preds = %230
  %240 = lshr i64 %237, 10
  %241 = getelementptr inbounds i32*, i32** %218, i64 %240
  %242 = load i32*, i32** %241, align 8
  %243 = and i64 %237, 1023
  %244 = getelementptr inbounds i32, i32* %242, i64 %243
  br label %253

245:                                              ; preds = %230
  %246 = sub nsw i64 1024, %236
  %247 = sdiv i64 %246, -1024
  %248 = getelementptr inbounds i32*, i32** %218, i64 %247
  %249 = load i32*, i32** %248, align 8
  %250 = srem i64 %246, 1024
  %251 = sub nuw nsw i64 1023, %250
  %252 = getelementptr inbounds i32, i32* %249, i64 %251
  br label %253

253:                                              ; preds = %239, %245
  %254 = phi i32* [ %244, %239 ], [ %252, %245 ]
  %255 = phi i32** [ %241, %239 ], [ %248, %245 ]
  %256 = icmp eq i32* %254, %3
  br i1 %256, label %257, label %258

257:                                              ; preds = %253
  store i32* %233, i32** %7, align 8
  br label %258

258:                                              ; preds = %257, %253
  %259 = load i32, i32* %254, align 4
  store i32 %259, i32* %233, align 4
  %260 = load i64, i64* %46, align 8
  %261 = add i64 %260, 1
  store i64 %261, i64* %46, align 8
  %262 = icmp ugt i64 %193, 1
  br i1 %262, label %263, label %293

263:                                              ; preds = %258
  %264 = load i64, i64* %231, align 8
  %265 = sub i64 %234, %264
  %266 = ashr exact i64 %265, 2
  %267 = sub i64 %266, %193
  %268 = icmp sgt i64 %267, 0
  br i1 %268, label %269, label %275

269:                                              ; preds = %263
  %270 = lshr i64 %267, 10
  %271 = getelementptr inbounds i32*, i32** %218, i64 %270
  %272 = load i32*, i32** %271, align 8
  %273 = and i64 %267, 1023
  %274 = getelementptr inbounds i32, i32* %272, i64 %273
  br label %283

275:                                              ; preds = %263
  %276 = sub nsw i64 1023, %267
  %277 = sdiv i64 %276, -1024
  %278 = getelementptr inbounds i32*, i32** %218, i64 %277
  %279 = load i32*, i32** %278, align 8
  %280 = srem i64 %276, 1024
  %281 = sub nsw i64 1023, %280
  %282 = getelementptr inbounds i32, i32* %279, i64 %281
  br label %283

283:                                              ; preds = %269, %275
  %284 = phi i32* [ %274, %269 ], [ %282, %275 ]
  %285 = phi i32** [ %271, %269 ], [ %278, %275 ]
  %286 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %8, i64 0, i32 0
  store i32** %218, i32*** %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %8, i64 0, i32 1
  %288 = bitcast i32** %287 to i64*
  store i64 %234, i64* %288, align 8
  %289 = call { i32**, i32* } @_ZNSt3__15dequeIiNS_9allocatorIiEEE25__move_backward_and_checkENS_16__deque_iteratorIiPiRiPS5_lLl0EEES8_S8_RPKi(%"class.std::__1::deque.118"* %0, i32** %285, i32* %284, i32** %255, i32* %254, %"class.std::__1::__deque_iterator.417"* nonnull byval(%"class.std::__1::__deque_iterator.417") align 8 %8, i32** nonnull dereferenceable(8) %7)
  %290 = extractvalue { i32**, i32* } %289, 0
  %291 = extractvalue { i32**, i32* } %289, 1
  %292 = ptrtoint i32* %291 to i64
  br label %293

293:                                              ; preds = %283, %258
  %294 = phi i64 [ %292, %283 ], [ %234, %258 ]
  %295 = phi i32** [ %290, %283 ], [ %218, %258 ]
  %296 = load i32*, i32** %7, align 8
  %297 = load i32, i32* %296, align 4
  %298 = inttoptr i64 %294 to i32*
  %299 = load i32*, i32** %295, align 8
  %300 = icmp eq i32* %299, %298
  br i1 %300, label %301, label %305

301:                                              ; preds = %293
  %302 = getelementptr inbounds i32*, i32** %295, i64 -1
  %303 = load i32*, i32** %302, align 8
  %304 = getelementptr inbounds i32, i32* %303, i64 1024
  br label %305

305:                                              ; preds = %293, %301
  %306 = phi i32* [ %304, %301 ], [ %298, %293 ]
  %307 = getelementptr inbounds i32, i32* %306, i64 -1
  store i32 %297, i32* %307, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #15
  br label %308

308:                                              ; preds = %207, %305, %71, %177
  %309 = load i32**, i32*** %9, align 8
  %310 = load i64, i64* %11, align 8
  %311 = lshr i64 %310, 10
  %312 = getelementptr inbounds i32*, i32** %309, i64 %311
  %313 = load i32**, i32*** %15, align 8
  %314 = icmp eq i32** %313, %309
  br i1 %314, label %320, label %315

315:                                              ; preds = %308
  %316 = load i32*, i32** %312, align 8
  %317 = and i64 %310, 1023
  %318 = getelementptr inbounds i32, i32* %316, i64 %317
  %319 = ptrtoint i32* %318 to i64
  br label %320

320:                                              ; preds = %308, %315
  %321 = phi i64 [ %319, %315 ], [ 0, %308 ]
  %322 = icmp eq i64 %45, 0
  br i1 %322, label %346, label %323

323:                                              ; preds = %320
  %324 = bitcast i32** %312 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = sub i64 %321, %325
  %327 = ashr exact i64 %326, 2
  %328 = add nsw i64 %327, %45
  %329 = icmp sgt i64 %328, 0
  br i1 %329, label %330, label %337

330:                                              ; preds = %323
  %331 = lshr i64 %328, 10
  %332 = getelementptr inbounds i32*, i32** %312, i64 %331
  %333 = load i32*, i32** %332, align 8
  %334 = and i64 %328, 1023
  %335 = getelementptr inbounds i32, i32* %333, i64 %334
  %336 = ptrtoint i32* %335 to i64
  br label %346

337:                                              ; preds = %323
  %338 = sub nsw i64 1023, %328
  %339 = sdiv i64 %338, -1024
  %340 = getelementptr inbounds i32*, i32** %312, i64 %339
  %341 = load i32*, i32** %340, align 8
  %342 = srem i64 %338, 1024
  %343 = sub nsw i64 1023, %342
  %344 = getelementptr inbounds i32, i32* %341, i64 %343
  %345 = ptrtoint i32* %344 to i64
  br label %346

346:                                              ; preds = %320, %330, %337
  %347 = phi i64 [ %321, %320 ], [ %336, %330 ], [ %345, %337 ]
  %348 = phi i32** [ %312, %320 ], [ %332, %330 ], [ %340, %337 ]
  %349 = insertvalue { i32**, i32* } undef, i32** %348, 0
  %350 = inttoptr i64 %347 to i32*
  %351 = insertvalue { i32**, i32* } %349, i32* %350, 1
  ret { i32**, i32* } %351
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIiNS_9allocatorIiEEE20__add_front_capacityEv(%"class.std::__1::deque.118"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast i32*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = icmp eq i64 %12, 0
  %14 = shl i64 %12, 7
  %15 = add i64 %14, -1
  %16 = select i1 %13, i64 0, i64 %15
  %17 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  %22 = sub i64 %16, %21
  %23 = icmp ugt i64 %22, 1023
  %24 = inttoptr i64 %11 to i32**
  %25 = inttoptr i64 %8 to i32**
  br i1 %23, label %26, label %34

26:                                               ; preds = %1
  %27 = add i64 %18, 1024
  store i64 %27, i64* %17, align 8
  %28 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %2, align 8
  %29 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr i32*, i32** %25, i64 -1
  %31 = bitcast i32** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i32** %2 to i64*
  store i64 %32, i64* %33, align 8
  store i32** %30, i32*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.120"* %29, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %282

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = bitcast i32*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::deque.118"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp ult i64 %12, %41
  br i1 %42, label %43, label %70

43:                                               ; preds = %34
  %44 = icmp eq i64 %11, %40
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  %47 = tail call i8* @_Znwm(i64 4096) #16
  %48 = bitcast i32** %3 to i8**
  store i8* %47, i8** %48, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.120"* %35, i32** nonnull dereferenceable(8) %3)
  br label %59

49:                                               ; preds = %43
  %50 = bitcast i32** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #15
  %51 = tail call i8* @_Znwm(i64 4096) #16
  %52 = bitcast i32** %4 to i8**
  store i8* %51, i8** %52, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.120"* %35, i32** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #15
  %53 = bitcast i32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #15
  store i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %5, align 8
  %54 = load i32**, i32*** %6, align 8
  %55 = getelementptr i32*, i32** %54, i64 -1
  %56 = bitcast i32** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i32** %5 to i64*
  store i64 %57, i64* %58, align 8
  store i32** %55, i32*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.120"* %35, i32** nonnull dereferenceable(8) %5)
  br label %59

59:                                               ; preds = %49, %45
  %60 = phi i8* [ %53, %49 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  %61 = load i64, i64* %7, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 8
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = load i64, i64* %17, align 8
  %67 = add i64 %66, 1024
  br label %68

68:                                               ; preds = %59, %65
  %69 = phi i64 [ %67, %65 ], [ 512, %59 ]
  store i64 %69, i64* %17, align 8
  br label %282

70:                                               ; preds = %34
  %71 = ashr exact i64 %41, 2
  %72 = icmp eq i64 %41, 0
  %73 = select i1 %72, i64 1, i64 %71
  %74 = icmp ugt i64 %73, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  tail call void @abort() #17
  unreachable

76:                                               ; preds = %70
  %77 = shl i64 %73, 3
  %78 = tail call i8* @_Znwm(i64 %77) #16
  %79 = bitcast i8* %78 to i32**
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds i32*, i32** %79, i64 %73
  %82 = ptrtoint i32** %81 to i64
  %83 = tail call i8* @_Znwm(i64 4096) #16
  %84 = ptrtoint i8* %83 to i64
  %85 = icmp eq i32** %81, %79
  %86 = bitcast i8* %78 to i64*
  br i1 %85, label %87, label %107

87:                                               ; preds = %76
  %88 = sub i64 %82, %80
  %89 = ashr exact i64 %88, 2
  %90 = icmp eq i64 %88, 0
  %91 = select i1 %90, i64 1, i64 %89
  %92 = icmp ugt i64 %91, 2305843009213693951
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  tail call void @abort() #17
  unreachable

94:                                               ; preds = %87
  %95 = lshr i64 %91, 2
  %96 = shl i64 %91, 3
  %97 = tail call i8* @_Znwm(i64 %96) #16
  %98 = bitcast i8* %97 to i32**
  %99 = ptrtoint i8* %97 to i64
  %100 = getelementptr inbounds i32*, i32** %98, i64 %95
  %101 = ptrtoint i32** %100 to i64
  %102 = getelementptr inbounds i32*, i32** %98, i64 %91
  %103 = ptrtoint i32** %102 to i64
  %104 = bitcast i32** %100 to i64*
  tail call void @_ZdlPv(i8* nonnull %78) #16
  %105 = load i32**, i32*** %9, align 8
  %106 = load i32**, i32*** %6, align 8
  br label %107

107:                                              ; preds = %76, %94
  %108 = phi i32** [ %106, %94 ], [ %25, %76 ]
  %109 = phi i32** [ %105, %94 ], [ %24, %76 ]
  %110 = phi i64 [ %103, %94 ], [ %82, %76 ]
  %111 = phi i64 [ %101, %94 ], [ %80, %76 ]
  %112 = phi i64 [ %99, %94 ], [ %80, %76 ]
  %113 = phi i64* [ %104, %94 ], [ %86, %76 ]
  store i64 %84, i64* %113, align 8
  %114 = inttoptr i64 %111 to i32**
  %115 = getelementptr inbounds i32*, i32** %114, i64 1
  %116 = ptrtoint i32** %115 to i64
  %117 = icmp eq i32** %109, %108
  br i1 %117, label %120, label %129

118:                                              ; preds = %261
  %119 = ptrtoint i32** %270 to i64
  br label %120

120:                                              ; preds = %118, %107
  %121 = phi i64 [ %110, %107 ], [ %262, %118 ]
  %122 = phi i64 [ %111, %107 ], [ %264, %118 ]
  %123 = phi i64 [ %112, %107 ], [ %265, %118 ]
  %124 = phi i64 [ %116, %107 ], [ %119, %118 ]
  %125 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 0
  %126 = load i32**, i32*** %125, align 8
  store i64 %123, i64* %39, align 8
  store i64 %122, i64* %10, align 8
  store i64 %124, i64* %7, align 8
  store i64 %121, i64* %37, align 8
  %127 = sub i64 %124, %122
  %128 = icmp eq i64 %127, 8
  br i1 %128, label %277, label %274

129:                                              ; preds = %107, %261
  %130 = phi i64 [ %271, %261 ], [ %116, %107 ]
  %131 = phi i32** [ %270, %261 ], [ %115, %107 ]
  %132 = phi i32** [ %269, %261 ], [ %109, %107 ]
  %133 = phi i64 [ %265, %261 ], [ %112, %107 ]
  %134 = phi i64 [ %264, %261 ], [ %111, %107 ]
  %135 = phi i64 [ %262, %261 ], [ %110, %107 ]
  %136 = inttoptr i64 %135 to i32**
  %137 = icmp eq i32** %131, %136
  %138 = bitcast i32** %131 to i64*
  br i1 %137, label %139, label %261

139:                                              ; preds = %129
  %140 = inttoptr i64 %134 to i32**
  %141 = inttoptr i64 %133 to i32**
  %142 = icmp ugt i32** %140, %141
  br i1 %142, label %143, label %159

143:                                              ; preds = %139
  %144 = sub i64 %134, %133
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = sdiv i64 %146, -2
  %148 = getelementptr inbounds i32*, i32** %140, i64 %147
  %149 = sub i64 %130, %134
  %150 = ashr exact i64 %149, 3
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %143
  %153 = bitcast i32** %148 to i8*
  %154 = inttoptr i64 %134 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %149, i1 false) #15
  br label %155

155:                                              ; preds = %152, %143
  %156 = getelementptr inbounds i32*, i32** %148, i64 %150
  %157 = ptrtoint i32** %148 to i64
  %158 = bitcast i32** %156 to i64*
  br label %261

159:                                              ; preds = %139
  %160 = sub i64 %135, %133
  %161 = ashr exact i64 %160, 2
  %162 = icmp eq i64 %160, 0
  %163 = select i1 %162, i64 1, i64 %161
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %166

165:                                              ; preds = %159
  tail call void @abort() #17
  unreachable

166:                                              ; preds = %159
  %167 = lshr i64 %163, 2
  %168 = shl i64 %163, 3
  %169 = tail call i8* @_Znwm(i64 %168) #16
  %170 = bitcast i8* %169 to i32**
  %171 = ptrtoint i8* %169 to i64
  %172 = getelementptr inbounds i32*, i32** %170, i64 %167
  %173 = ptrtoint i32** %172 to i64
  %174 = getelementptr inbounds i32*, i32** %170, i64 %163
  %175 = ptrtoint i32** %174 to i64
  %176 = sub i64 %130, %134
  %177 = ashr exact i64 %176, 3
  %178 = getelementptr inbounds i32*, i32** %172, i64 %177
  %179 = icmp eq i64 %176, 0
  br i1 %179, label %254, label %180

180:                                              ; preds = %166
  %181 = add i64 %176, -8
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %201, label %186

186:                                              ; preds = %180, %186
  %187 = phi i32** [ %194, %186 ], [ %172, %180 ]
  %188 = phi i64 [ %195, %186 ], [ %173, %180 ]
  %189 = phi i32** [ %196, %186 ], [ %140, %180 ]
  %190 = phi i64 [ %197, %186 ], [ %184, %180 ]
  %191 = bitcast i32** %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = inttoptr i64 %188 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds i32*, i32** %187, i64 1
  %195 = ptrtoint i32** %194 to i64
  %196 = getelementptr inbounds i32*, i32** %189, i64 1
  %197 = add i64 %190, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %186, !llvm.loop !65

199:                                              ; preds = %186
  %200 = ptrtoint i32** %194 to i64
  br label %201

201:                                              ; preds = %180, %199
  %202 = phi i32** [ %172, %180 ], [ %194, %199 ]
  %203 = phi i64 [ %173, %180 ], [ %200, %199 ]
  %204 = phi i32** [ %140, %180 ], [ %196, %199 ]
  %205 = icmp ult i64 %181, 56
  br i1 %205, label %252, label %206

206:                                              ; preds = %201, %206
  %207 = phi i32** [ %248, %206 ], [ %202, %201 ]
  %208 = phi i64 [ %249, %206 ], [ %203, %201 ]
  %209 = phi i32** [ %250, %206 ], [ %204, %201 ]
  %210 = bitcast i32** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = inttoptr i64 %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds i32*, i32** %207, i64 1
  %214 = getelementptr inbounds i32*, i32** %209, i64 1
  %215 = bitcast i32** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast i32** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds i32*, i32** %207, i64 2
  %219 = getelementptr inbounds i32*, i32** %209, i64 2
  %220 = bitcast i32** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast i32** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds i32*, i32** %207, i64 3
  %224 = getelementptr inbounds i32*, i32** %209, i64 3
  %225 = bitcast i32** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast i32** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds i32*, i32** %207, i64 4
  %229 = getelementptr inbounds i32*, i32** %209, i64 4
  %230 = bitcast i32** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast i32** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds i32*, i32** %207, i64 5
  %234 = getelementptr inbounds i32*, i32** %209, i64 5
  %235 = bitcast i32** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast i32** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds i32*, i32** %207, i64 6
  %239 = getelementptr inbounds i32*, i32** %209, i64 6
  %240 = bitcast i32** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast i32** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds i32*, i32** %207, i64 7
  %244 = getelementptr inbounds i32*, i32** %209, i64 7
  %245 = bitcast i32** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast i32** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds i32*, i32** %207, i64 8
  %249 = ptrtoint i32** %248 to i64
  %250 = getelementptr inbounds i32*, i32** %209, i64 8
  %251 = icmp eq i32** %178, %248
  br i1 %251, label %252, label %206

252:                                              ; preds = %206, %201
  %253 = ptrtoint i32** %178 to i64
  br label %254

254:                                              ; preds = %252, %166
  %255 = phi i64 [ %253, %252 ], [ %173, %166 ]
  %256 = inttoptr i64 %255 to i32**
  %257 = icmp eq i64 %133, 0
  %258 = inttoptr i64 %255 to i64*
  br i1 %257, label %261, label %259

259:                                              ; preds = %254
  %260 = inttoptr i64 %133 to i8*
  tail call void @_ZdlPv(i8* %260) #16
  br label %261

261:                                              ; preds = %129, %155, %254, %259
  %262 = phi i64 [ %135, %155 ], [ %175, %254 ], [ %175, %259 ], [ %135, %129 ]
  %263 = phi i32** [ %156, %155 ], [ %256, %254 ], [ %256, %259 ], [ %131, %129 ]
  %264 = phi i64 [ %157, %155 ], [ %173, %254 ], [ %173, %259 ], [ %134, %129 ]
  %265 = phi i64 [ %133, %155 ], [ %171, %254 ], [ %171, %259 ], [ %133, %129 ]
  %266 = phi i64* [ %158, %155 ], [ %258, %254 ], [ %258, %259 ], [ %138, %129 ]
  %267 = bitcast i32** %132 to i64*
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %266, align 8
  %269 = getelementptr inbounds i32*, i32** %132, i64 1
  %270 = getelementptr inbounds i32*, i32** %263, i64 1
  %271 = ptrtoint i32** %270 to i64
  %272 = load i32**, i32*** %6, align 8
  %273 = icmp eq i32** %269, %272
  br i1 %273, label %118, label %129

274:                                              ; preds = %120
  %275 = load i64, i64* %17, align 8
  %276 = add i64 %275, 1024
  br label %277

277:                                              ; preds = %274, %120
  %278 = phi i64 [ %276, %274 ], [ 512, %120 ]
  store i64 %278, i64* %17, align 8
  %279 = icmp eq i32** %126, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = bitcast i32** %126 to i8*
  tail call void @_ZdlPv(i8* %281) #16
  br label %282

282:                                              ; preds = %280, %277, %68, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__15dequeIiNS_9allocatorIiEEE16__move_and_checkENS_16__deque_iteratorIiPiRiPS5_lLl0EEES8_S8_RPKi(%"class.std::__1::deque.118"*, i32**, i32*, i32**, i32*, %"class.std::__1::__deque_iterator.417"* byval(%"class.std::__1::__deque_iterator.417") align 8, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = ptrtoint i32* %2 to i64
  %9 = icmp eq i32* %4, %2
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = ptrtoint i32* %4 to i64
  %12 = ptrtoint i32** %3 to i64
  %13 = ptrtoint i32** %1 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 7
  %16 = bitcast i32** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %17
  %19 = ashr exact i64 %18, 2
  %20 = add nsw i64 %19, %15
  %21 = bitcast i32** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %8, %22
  %24 = ashr exact i64 %23, 2
  %25 = sub i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %7, %10
  %28 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %5, i64 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %5, i64 0, i32 1
  %31 = load i32*, i32** %30, align 8
  br label %195

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %5, i64 0, i32 0
  %35 = bitcast i32** %6 to i64*
  %36 = bitcast i32** %33 to i64*
  br label %37

37:                                               ; preds = %32, %189
  %38 = phi i64 [ %25, %32 ], [ %164, %189 ]
  %39 = phi i64 [ %8, %32 ], [ %191, %189 ]
  %40 = phi i32** [ %1, %32 ], [ %190, %189 ]
  %41 = inttoptr i64 %39 to i32*
  %42 = load i32*, i32** %40, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 1024
  %44 = ptrtoint i32* %43 to i64
  %45 = sub i64 %44, %39
  %46 = ashr exact i64 %45, 2
  %47 = icmp sgt i64 %46, %38
  %48 = getelementptr inbounds i32, i32* %41, i64 %38
  %49 = select i1 %47, i64 %38, i64 %46
  %50 = select i1 %47, i32* %48, i32* %43
  %51 = load i32*, i32** %6, align 8
  %52 = icmp uge i32* %51, %41
  %53 = icmp ult i32* %51, %50
  %54 = and i1 %52, %53
  %55 = ptrtoint i32* %42 to i64
  br i1 %54, label %58, label %56

56:                                               ; preds = %37
  %57 = load i64, i64* %36, align 8
  br label %103

58:                                               ; preds = %37
  %59 = load i32*, i32** %33, align 8
  %60 = icmp eq i32* %59, %41
  %61 = ptrtoint i32* %59 to i64
  br i1 %60, label %62, label %64

62:                                               ; preds = %58
  %63 = ptrtoint i32* %51 to i64
  br label %101

64:                                               ; preds = %58
  %65 = load i32**, i32*** %34, align 8
  %66 = ptrtoint i32** %40 to i64
  %67 = ptrtoint i32** %65 to i64
  %68 = sub i64 %66, %67
  %69 = shl i64 %68, 7
  %70 = sub i64 %39, %55
  %71 = ashr exact i64 %70, 2
  %72 = add nsw i64 %71, %69
  %73 = bitcast i32** %65 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %61, %74
  %76 = ashr exact i64 %75, 2
  %77 = sub i64 %72, %76
  %78 = ptrtoint i32* %51 to i64
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %101, label %80

80:                                               ; preds = %64
  %81 = sub i64 %78, %55
  %82 = ashr exact i64 %81, 2
  %83 = sub i64 %82, %77
  %84 = icmp sgt i64 %83, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %80
  %86 = lshr i64 %83, 10
  %87 = getelementptr inbounds i32*, i32** %40, i64 %86
  %88 = load i32*, i32** %87, align 8
  %89 = and i64 %83, 1023
  %90 = getelementptr inbounds i32, i32* %88, i64 %89
  %91 = ptrtoint i32* %90 to i64
  br label %101

92:                                               ; preds = %80
  %93 = sub nsw i64 1023, %83
  %94 = sdiv i64 %93, -1024
  %95 = getelementptr inbounds i32*, i32** %40, i64 %94
  %96 = load i32*, i32** %95, align 8
  %97 = srem i64 %93, 1024
  %98 = sub nsw i64 1023, %97
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = ptrtoint i32* %99 to i64
  br label %101

101:                                              ; preds = %62, %64, %85, %92
  %102 = phi i64 [ %78, %64 ], [ %91, %85 ], [ %100, %92 ], [ %63, %62 ]
  store i64 %102, i64* %35, align 8
  br label %103

103:                                              ; preds = %56, %101
  %104 = phi i64 [ %57, %56 ], [ %61, %101 ]
  %105 = load i32**, i32*** %34, align 8
  %106 = icmp eq i32* %50, %41
  br i1 %106, label %160, label %107

107:                                              ; preds = %103
  %108 = ptrtoint i32* %50 to i64
  br label %109

109:                                              ; preds = %156, %107
  %110 = phi i32* [ %41, %107 ], [ %124, %156 ]
  %111 = phi i32** [ %105, %107 ], [ %158, %156 ]
  %112 = phi i64 [ %104, %107 ], [ %157, %156 ]
  %113 = load i32*, i32** %111, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 1024
  %115 = ptrtoint i32* %114 to i64
  %116 = sub i64 %115, %112
  %117 = ashr exact i64 %116, 2
  %118 = ptrtoint i32* %110 to i64
  %119 = sub i64 %108, %118
  %120 = ashr exact i64 %119, 2
  %121 = icmp sgt i64 %120, %117
  %122 = getelementptr inbounds i32, i32* %110, i64 %117
  %123 = select i1 %121, i64 %117, i64 %120
  %124 = select i1 %121, i32* %122, i32* %50
  %125 = ptrtoint i32* %124 to i64
  %126 = sub i64 %125, %118
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %109
  %129 = inttoptr i64 %112 to i8*
  %130 = bitcast i32* %110 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %129, i8* align 4 %130, i64 %126, i1 false) #15
  br label %131

131:                                              ; preds = %128, %109
  %132 = icmp eq i64 %123, 0
  br i1 %132, label %156, label %133

133:                                              ; preds = %131
  %134 = bitcast i32** %111 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %112, %135
  %137 = ashr exact i64 %136, 2
  %138 = add nsw i64 %137, %123
  %139 = icmp sgt i64 %138, 0
  br i1 %139, label %140, label %147

140:                                              ; preds = %133
  %141 = lshr i64 %138, 10
  %142 = getelementptr inbounds i32*, i32** %111, i64 %141
  %143 = load i32*, i32** %142, align 8
  %144 = and i64 %138, 1023
  %145 = getelementptr inbounds i32, i32* %143, i64 %144
  %146 = ptrtoint i32* %145 to i64
  br label %156

147:                                              ; preds = %133
  %148 = sub nsw i64 1023, %138
  %149 = sdiv i64 %148, -1024
  %150 = getelementptr inbounds i32*, i32** %111, i64 %149
  %151 = load i32*, i32** %150, align 8
  %152 = srem i64 %148, 1024
  %153 = sub nuw nsw i64 1023, %152
  %154 = getelementptr inbounds i32, i32* %151, i64 %153
  %155 = ptrtoint i32* %154 to i64
  br label %156

156:                                              ; preds = %147, %140, %131
  %157 = phi i64 [ %112, %131 ], [ %146, %140 ], [ %155, %147 ]
  %158 = phi i32** [ %111, %131 ], [ %142, %140 ], [ %150, %147 ]
  %159 = icmp eq i32* %124, %50
  br i1 %159, label %160, label %109

160:                                              ; preds = %156, %103
  %161 = phi i64 [ %104, %103 ], [ %157, %156 ]
  %162 = phi i32** [ %105, %103 ], [ %158, %156 ]
  %163 = inttoptr i64 %161 to i32*
  store i32** %162, i32*** %34, align 8
  store i32* %163, i32** %33, align 8
  %164 = sub nsw i64 %38, %49
  %165 = icmp eq i64 %49, 0
  br i1 %165, label %189, label %166

166:                                              ; preds = %160
  %167 = bitcast i32** %40 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %39, %168
  %170 = ashr exact i64 %169, 2
  %171 = add nsw i64 %170, %49
  %172 = icmp sgt i64 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %166
  %174 = lshr i64 %171, 10
  %175 = getelementptr inbounds i32*, i32** %40, i64 %174
  %176 = load i32*, i32** %175, align 8
  %177 = and i64 %171, 1023
  %178 = getelementptr inbounds i32, i32* %176, i64 %177
  %179 = ptrtoint i32* %178 to i64
  br label %189

180:                                              ; preds = %166
  %181 = sub nsw i64 1023, %171
  %182 = sdiv i64 %181, -1024
  %183 = getelementptr inbounds i32*, i32** %40, i64 %182
  %184 = load i32*, i32** %183, align 8
  %185 = srem i64 %181, 1024
  %186 = sub nsw i64 1023, %185
  %187 = getelementptr inbounds i32, i32* %184, i64 %186
  %188 = ptrtoint i32* %187 to i64
  br label %189

189:                                              ; preds = %160, %173, %180
  %190 = phi i32** [ %40, %160 ], [ %175, %173 ], [ %183, %180 ]
  %191 = phi i64 [ %39, %160 ], [ %179, %173 ], [ %188, %180 ]
  %192 = icmp sgt i64 %164, 0
  br i1 %192, label %37, label %193

193:                                              ; preds = %189
  %194 = inttoptr i64 %161 to i32*
  br label %195

195:                                              ; preds = %193, %27
  %196 = phi i32* [ %31, %27 ], [ %194, %193 ]
  %197 = phi i32** [ %29, %27 ], [ %162, %193 ]
  %198 = insertvalue { i32**, i32* } undef, i32** %197, 0
  %199 = insertvalue { i32**, i32* } %198, i32* %196, 1
  ret { i32**, i32* } %199
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.118"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.419", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #15
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.118"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #16
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !66

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.118"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #15
  %186 = tail call i8* @_Znwm(i64 4096) #16
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.120"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #15
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #15
  %190 = tail call i8* @_Znwm(i64 4096) #16
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.120"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #15
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #15
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #17
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #16
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !67

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #16
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.419"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #15
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.419", %"struct.std::__1::__split_buffer.419"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.419", %"struct.std::__1::__split_buffer.419"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.419", %"struct.std::__1::__split_buffer.419"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.419", %"struct.std::__1::__split_buffer.419"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.118", %"class.std::__1::deque.118"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.419"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.124"** %342 to %"class.std::__1::__compressed_pair.121"**
  store %"class.std::__1::__compressed_pair.121"* %346, %"class.std::__1::__compressed_pair.121"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #17
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #16
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.419"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #16
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #17
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.419"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #16
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #16
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.419"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.419"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #16
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #15
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPiRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.419"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__15dequeIiNS_9allocatorIiEEE25__move_backward_and_checkENS_16__deque_iteratorIiPiRiPS5_lLl0EEES8_S8_RPKi(%"class.std::__1::deque.118"*, i32**, i32*, i32**, i32*, %"class.std::__1::__deque_iterator.417"* byval(%"class.std::__1::__deque_iterator.417") align 8, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = ptrtoint i32* %4 to i64
  %9 = icmp eq i32* %4, %2
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = ptrtoint i32* %2 to i64
  %12 = ptrtoint i32** %3 to i64
  %13 = ptrtoint i32** %1 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 7
  %16 = bitcast i32** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 2
  %20 = add nsw i64 %19, %15
  %21 = bitcast i32** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %11, %22
  %24 = ashr exact i64 %23, 2
  %25 = sub i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %7, %10
  %28 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %5, i64 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %5, i64 0, i32 1
  %31 = load i32*, i32** %30, align 8
  br label %242

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__deque_iterator.417", %"class.std::__1::__deque_iterator.417"* %5, i64 0, i32 0
  %35 = bitcast i32** %6 to i64*
  %36 = bitcast i32** %33 to i64*
  br label %37

37:                                               ; preds = %32, %236
  %38 = phi i64 [ %25, %32 ], [ %210, %236 ]
  %39 = phi i32** [ %3, %32 ], [ %238, %236 ]
  %40 = phi i64 [ %8, %32 ], [ %237, %236 ]
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32*, i32** %39, align 8
  %43 = icmp eq i32* %42, %41
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = getelementptr inbounds i32*, i32** %39, i64 -1
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 1024
  br label %48

48:                                               ; preds = %37, %44
  %49 = phi i32* [ %46, %44 ], [ %42, %37 ]
  %50 = phi i32** [ %45, %44 ], [ %39, %37 ]
  %51 = phi i32* [ %47, %44 ], [ %41, %37 ]
  %52 = getelementptr inbounds i32, i32* %51, i64 -1
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %51 to i64
  %55 = ptrtoint i32* %49 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = icmp sgt i64 %57, %38
  %59 = sub nsw i64 0, %38
  %60 = getelementptr inbounds i32, i32* %51, i64 %59
  %61 = select i1 %58, i64 %38, i64 %57
  %62 = select i1 %58, i32* %60, i32* %49
  %63 = load i32*, i32** %6, align 8
  %64 = icmp ule i32* %62, %63
  %65 = icmp ult i32* %63, %51
  %66 = and i1 %65, %64
  br i1 %66, label %69, label %67

67:                                               ; preds = %48
  %68 = load i64, i64* %36, align 8
  br label %122

69:                                               ; preds = %48
  %70 = load i32*, i32** %33, align 8
  %71 = icmp eq i32* %70, %52
  %72 = ptrtoint i32* %70 to i64
  br i1 %71, label %73, label %77

73:                                               ; preds = %69
  %74 = ptrtoint i32* %63 to i64
  %75 = bitcast i32** %50 to i64*
  %76 = load i64, i64* %75, align 8
  br label %96

77:                                               ; preds = %69
  %78 = load i32**, i32*** %34, align 8
  %79 = ptrtoint i32** %78 to i64
  %80 = ptrtoint i32** %50 to i64
  %81 = sub i64 %79, %80
  %82 = shl i64 %81, 7
  %83 = bitcast i32** %78 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %72, %84
  %86 = ashr exact i64 %85, 2
  %87 = add nsw i64 %86, %82
  %88 = bitcast i32** %50 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %53, %89
  %91 = ashr exact i64 %90, 2
  %92 = xor i64 %91, -1
  %93 = add i64 %87, %92
  %94 = ptrtoint i32* %63 to i64
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %120, label %96

96:                                               ; preds = %73, %77
  %97 = phi i64 [ %76, %73 ], [ %89, %77 ]
  %98 = phi i64 [ %74, %73 ], [ %94, %77 ]
  %99 = phi i64 [ -1, %73 ], [ %93, %77 ]
  %100 = sub i64 %98, %97
  %101 = ashr exact i64 %100, 2
  %102 = add nsw i64 %101, %99
  %103 = icmp sgt i64 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %96
  %105 = lshr i64 %102, 10
  %106 = getelementptr inbounds i32*, i32** %50, i64 %105
  %107 = load i32*, i32** %106, align 8
  %108 = and i64 %102, 1023
  %109 = getelementptr inbounds i32, i32* %107, i64 %108
  %110 = ptrtoint i32* %109 to i64
  br label %120

111:                                              ; preds = %96
  %112 = sub nsw i64 1023, %102
  %113 = sdiv i64 %112, -1024
  %114 = getelementptr inbounds i32*, i32** %50, i64 %113
  %115 = load i32*, i32** %114, align 8
  %116 = srem i64 %112, 1024
  %117 = sub nsw i64 1023, %116
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  %119 = ptrtoint i32* %118 to i64
  br label %120

120:                                              ; preds = %77, %104, %111
  %121 = phi i64 [ %94, %77 ], [ %110, %104 ], [ %119, %111 ]
  store i64 %121, i64* %35, align 8
  br label %122

122:                                              ; preds = %67, %120
  %123 = phi i64 [ %68, %67 ], [ %72, %120 ]
  %124 = load i32**, i32*** %34, align 8
  %125 = icmp eq i32* %51, %62
  br i1 %125, label %206, label %126

126:                                              ; preds = %122
  %127 = ptrtoint i32* %62 to i64
  br label %128

128:                                              ; preds = %202, %126
  %129 = phi i32* [ %51, %126 ], [ %168, %202 ]
  %130 = phi i32** [ %124, %126 ], [ %204, %202 ]
  %131 = phi i64 [ %123, %126 ], [ %203, %202 ]
  %132 = bitcast i32** %130 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 2
  %136 = add nsw i64 %135, -1
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %144

138:                                              ; preds = %128
  %139 = lshr i64 %136, 10
  %140 = getelementptr inbounds i32*, i32** %130, i64 %139
  %141 = load i32*, i32** %140, align 8
  %142 = and i64 %136, 1023
  %143 = getelementptr inbounds i32, i32* %141, i64 %142
  br label %152

144:                                              ; preds = %128
  %145 = sub nsw i64 1024, %135
  %146 = sdiv i64 %145, -1024
  %147 = getelementptr inbounds i32*, i32** %130, i64 %146
  %148 = load i32*, i32** %147, align 8
  %149 = srem i64 %145, 1024
  %150 = sub nuw nsw i64 1023, %149
  %151 = getelementptr inbounds i32, i32* %148, i64 %150
  br label %152

152:                                              ; preds = %144, %138
  %153 = phi i32* [ %143, %138 ], [ %151, %144 ]
  %154 = phi i32** [ %140, %138 ], [ %147, %144 ]
  %155 = bitcast i32** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds i32, i32* %153, i64 1
  %158 = ptrtoint i32* %157 to i64
  %159 = sub i64 %158, %156
  %160 = ashr exact i64 %159, 2
  %161 = ptrtoint i32* %129 to i64
  %162 = sub i64 %161, %127
  %163 = ashr exact i64 %162, 2
  %164 = icmp sgt i64 %163, %160
  %165 = sub nsw i64 0, %160
  %166 = getelementptr inbounds i32, i32* %129, i64 %165
  %167 = select i1 %164, i64 %160, i64 %163
  %168 = select i1 %164, i32* %166, i32* %62
  %169 = ptrtoint i32* %168 to i64
  %170 = sub i64 %161, %169
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %152
  %173 = ashr exact i64 %170, 2
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds i32, i32* %157, i64 %174
  %176 = bitcast i32* %175 to i8*
  %177 = bitcast i32* %168 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %176, i8* align 4 %177, i64 %170, i1 false) #15
  br label %178

178:                                              ; preds = %172, %152
  %179 = icmp eq i64 %167, 0
  br i1 %179, label %202, label %180

180:                                              ; preds = %178
  %181 = load i64, i64* %132, align 8
  %182 = sub i64 %131, %181
  %183 = ashr exact i64 %182, 2
  %184 = sub nsw i64 %183, %167
  %185 = icmp sgt i64 %184, 0
  br i1 %185, label %186, label %193

186:                                              ; preds = %180
  %187 = lshr i64 %184, 10
  %188 = getelementptr inbounds i32*, i32** %130, i64 %187
  %189 = load i32*, i32** %188, align 8
  %190 = and i64 %184, 1023
  %191 = getelementptr inbounds i32, i32* %189, i64 %190
  %192 = ptrtoint i32* %191 to i64
  br label %202

193:                                              ; preds = %180
  %194 = sub nsw i64 1023, %184
  %195 = sdiv i64 %194, -1024
  %196 = getelementptr inbounds i32*, i32** %130, i64 %195
  %197 = load i32*, i32** %196, align 8
  %198 = srem i64 %194, 1024
  %199 = sub nuw nsw i64 1023, %198
  %200 = getelementptr inbounds i32, i32* %197, i64 %199
  %201 = ptrtoint i32* %200 to i64
  br label %202

202:                                              ; preds = %193, %186, %178
  %203 = phi i64 [ %131, %178 ], [ %192, %186 ], [ %201, %193 ]
  %204 = phi i32** [ %130, %178 ], [ %188, %186 ], [ %196, %193 ]
  %205 = icmp eq i32* %168, %62
  br i1 %205, label %206, label %128

206:                                              ; preds = %202, %122
  %207 = phi i64 [ %123, %122 ], [ %203, %202 ]
  %208 = phi i32** [ %124, %122 ], [ %204, %202 ]
  %209 = inttoptr i64 %207 to i32*
  store i32** %208, i32*** %34, align 8
  store i32* %209, i32** %33, align 8
  %210 = sub nsw i64 %38, %61
  %211 = add nsw i64 %61, -1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %236, label %213

213:                                              ; preds = %206
  %214 = bitcast i32** %50 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %53, %215
  %217 = ashr exact i64 %216, 2
  %218 = sub i64 %217, %211
  %219 = icmp sgt i64 %218, 0
  br i1 %219, label %220, label %227

220:                                              ; preds = %213
  %221 = lshr i64 %218, 10
  %222 = getelementptr inbounds i32*, i32** %50, i64 %221
  %223 = load i32*, i32** %222, align 8
  %224 = and i64 %218, 1023
  %225 = getelementptr inbounds i32, i32* %223, i64 %224
  %226 = ptrtoint i32* %225 to i64
  br label %236

227:                                              ; preds = %213
  %228 = sub nsw i64 1023, %218
  %229 = sdiv i64 %228, -1024
  %230 = getelementptr inbounds i32*, i32** %50, i64 %229
  %231 = load i32*, i32** %230, align 8
  %232 = srem i64 %228, 1024
  %233 = sub nsw i64 1023, %232
  %234 = getelementptr inbounds i32, i32* %231, i64 %233
  %235 = ptrtoint i32* %234 to i64
  br label %236

236:                                              ; preds = %206, %220, %227
  %237 = phi i64 [ %53, %206 ], [ %226, %220 ], [ %235, %227 ]
  %238 = phi i32** [ %50, %206 ], [ %222, %220 ], [ %230, %227 ]
  %239 = icmp sgt i64 %210, 0
  br i1 %239, label %37, label %240

240:                                              ; preds = %236
  %241 = inttoptr i64 %207 to i32*
  br label %242

242:                                              ; preds = %240, %27
  %243 = phi i32* [ %31, %27 ], [ %241, %240 ]
  %244 = phi i32** [ %29, %27 ], [ %208, %240 ]
  %245 = insertvalue { i32**, i32* } undef, i32** %244, 0
  %246 = insertvalue { i32**, i32* } %245, i32* %243, 1
  ret { i32**, i32* } %246
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.120"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.120"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !68

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.120"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.120"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !69

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.120"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.120", %"struct.std::__1::__split_buffer.120"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #15
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.120"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #16
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !70

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.419"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.419", %"struct.std::__1::__split_buffer.419"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.419", %"struct.std::__1::__split_buffer.419"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.419", %"struct.std::__1::__split_buffer.419"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.419", %"struct.std::__1::__split_buffer.419"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.419"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !71

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__15dequeIjNS_9allocatorIjEEE6insertENS_16__deque_iteratorIjPKjRS5_PKS6_lLl0EEES7_(%"class.std::__1::deque.107"*, i32**, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::__1::__deque_iterator.380", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::__1::__deque_iterator.380", align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32**, i32*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 10
  %14 = getelementptr inbounds i32*, i32** %10, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = icmp eq i32** %16, %10
  %18 = ptrtoint i32** %16 to i64
  %19 = ptrtoint i32** %10 to i64
  br i1 %17, label %24, label %20

20:                                               ; preds = %4
  %21 = load i32*, i32** %14, align 8
  %22 = and i64 %12, 1023
  %23 = getelementptr inbounds i32, i32* %21, i64 %22
  br label %24

24:                                               ; preds = %4, %20
  %25 = phi i32* [ %23, %20 ], [ null, %4 ]
  %26 = icmp eq i32* %25, %2
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = ptrtoint i32* %25 to i64
  %29 = ptrtoint i32** %14 to i64
  %30 = ptrtoint i32* %2 to i64
  %31 = ptrtoint i32** %1 to i64
  %32 = sub i64 %31, %29
  %33 = shl i64 %32, 7
  %34 = bitcast i32** %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %30, %35
  %37 = ashr exact i64 %36, 2
  %38 = add nsw i64 %37, %33
  %39 = bitcast i32** %14 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %28, %40
  %42 = ashr exact i64 %41, 2
  %43 = sub i64 %38, %42
  br label %44

44:                                               ; preds = %24, %27
  %45 = phi i64 [ %43, %27 ], [ 0, %24 ]
  %46 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ult i64 %45, %48
  br i1 %49, label %50, label %181

50:                                               ; preds = %44
  %51 = icmp eq i64 %12, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE20__add_front_capacityEv(%"class.std::__1::deque.107"* %0)
  br label %53

53:                                               ; preds = %52, %50
  %54 = icmp eq i64 %45, 0
  br i1 %54, label %55, label %79

55:                                               ; preds = %53
  %56 = load i32**, i32*** %9, align 8
  %57 = load i64, i64* %11, align 8
  %58 = lshr i64 %57, 10
  %59 = getelementptr inbounds i32*, i32** %56, i64 %58
  %60 = load i32**, i32*** %15, align 8
  %61 = icmp eq i32** %60, %56
  %62 = load i32*, i32** %59, align 8
  %63 = and i64 %57, 1023
  %64 = getelementptr inbounds i32, i32* %62, i64 %63
  %65 = select i1 %61, i32* null, i32* %64
  %66 = icmp eq i32* %65, %62
  br i1 %66, label %67, label %71

67:                                               ; preds = %55
  %68 = getelementptr inbounds i32*, i32** %59, i64 -1
  %69 = load i32*, i32** %68, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 1024
  br label %71

71:                                               ; preds = %55, %67
  %72 = phi i32* [ %70, %67 ], [ %65, %55 ]
  %73 = getelementptr inbounds i32, i32* %72, i64 -1
  %74 = load i32, i32* %3, align 4
  store i32 %74, i32* %73, align 4
  %75 = bitcast i64* %11 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = add <2 x i64> %76, <i64 -1, i64 1>
  %78 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 8
  br label %308

79:                                               ; preds = %53
  %80 = bitcast i32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #15
  store i32* %3, i32** %5, align 8
  %81 = load i32**, i32*** %9, align 8
  %82 = load i64, i64* %11, align 8
  %83 = lshr i64 %82, 10
  %84 = getelementptr inbounds i32*, i32** %81, i64 %83
  %85 = load i32**, i32*** %15, align 8
  %86 = icmp eq i32** %85, %81
  br i1 %86, label %87, label %90

87:                                               ; preds = %79
  %88 = bitcast i32** %84 to i64*
  %89 = load i64, i64* %88, align 8
  br label %96

90:                                               ; preds = %79
  %91 = load i32*, i32** %84, align 8
  %92 = and i64 %82, 1023
  %93 = getelementptr inbounds i32, i32* %91, i64 %92
  %94 = ptrtoint i32* %91 to i64
  %95 = bitcast i32** %84 to i64*
  br label %96

96:                                               ; preds = %87, %90
  %97 = phi i64* [ %88, %87 ], [ %95, %90 ]
  %98 = phi i64 [ %89, %87 ], [ %94, %90 ]
  %99 = phi i32* [ null, %87 ], [ %93, %90 ]
  %100 = ptrtoint i32* %99 to i64
  %101 = sub i64 %100, %98
  %102 = ashr exact i64 %101, 2
  %103 = add nsw i64 %102, -1
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %96
  %106 = lshr i64 %103, 10
  %107 = getelementptr inbounds i32*, i32** %84, i64 %106
  %108 = load i32*, i32** %107, align 8
  %109 = and i64 %103, 1023
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  br label %119

111:                                              ; preds = %96
  %112 = sub nsw i64 1024, %102
  %113 = sdiv i64 %112, -1024
  %114 = getelementptr inbounds i32*, i32** %84, i64 %113
  %115 = load i32*, i32** %114, align 8
  %116 = srem i64 %112, 1024
  %117 = sub nuw nsw i64 1023, %116
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  br label %119

119:                                              ; preds = %105, %111
  %120 = phi i32* [ %110, %105 ], [ %118, %111 ]
  %121 = icmp eq i32* %99, %3
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  store i32* %120, i32** %5, align 8
  br label %123

123:                                              ; preds = %122, %119
  %124 = load i32, i32* %99, align 4
  store i32 %124, i32* %120, align 4
  %125 = bitcast i64* %11 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8
  %127 = add <2 x i64> %126, <i64 -1, i64 1>
  %128 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %128, align 8
  %129 = icmp ugt i64 %45, 1
  br i1 %129, label %130, label %177

130:                                              ; preds = %123
  %131 = load i64, i64* %97, align 8
  %132 = sub i64 %100, %131
  %133 = ashr exact i64 %132, 2
  %134 = add nsw i64 %133, 1
  %135 = icmp sgt i64 %132, -4
  br i1 %135, label %136, label %142

136:                                              ; preds = %130
  %137 = lshr i64 %134, 10
  %138 = getelementptr inbounds i32*, i32** %84, i64 %137
  %139 = load i32*, i32** %138, align 8
  %140 = and i64 %134, 1023
  %141 = getelementptr inbounds i32, i32* %139, i64 %140
  br label %150

142:                                              ; preds = %130
  %143 = sub nsw i64 1022, %133
  %144 = sdiv i64 %143, -1024
  %145 = getelementptr inbounds i32*, i32** %84, i64 %144
  %146 = load i32*, i32** %145, align 8
  %147 = srem i64 %143, 1024
  %148 = sub nuw nsw i64 1023, %147
  %149 = getelementptr inbounds i32, i32* %146, i64 %148
  br label %150

150:                                              ; preds = %142, %136
  %151 = phi i32* [ %141, %136 ], [ %149, %142 ]
  %152 = phi i32** [ %138, %136 ], [ %145, %142 ]
  %153 = add nsw i64 %133, %45
  %154 = icmp sgt i64 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %150
  %156 = lshr i64 %153, 10
  %157 = getelementptr inbounds i32*, i32** %84, i64 %156
  %158 = load i32*, i32** %157, align 8
  %159 = and i64 %153, 1023
  %160 = getelementptr inbounds i32, i32* %158, i64 %159
  br label %169

161:                                              ; preds = %150
  %162 = sub nsw i64 1023, %153
  %163 = sdiv i64 %162, -1024
  %164 = getelementptr inbounds i32*, i32** %84, i64 %163
  %165 = load i32*, i32** %164, align 8
  %166 = srem i64 %162, 1024
  %167 = sub nsw i64 1023, %166
  %168 = getelementptr inbounds i32, i32* %165, i64 %167
  br label %169

169:                                              ; preds = %155, %161
  %170 = phi i32* [ %160, %155 ], [ %168, %161 ]
  %171 = phi i32** [ %157, %155 ], [ %164, %161 ]
  %172 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %6, i64 0, i32 0
  store i32** %84, i32*** %172, align 8
  %173 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %6, i64 0, i32 1
  %174 = bitcast i32** %173 to i64*
  store i64 %100, i64* %174, align 8
  %175 = call { i32**, i32* } @_ZNSt3__15dequeIjNS_9allocatorIjEEE16__move_and_checkENS_16__deque_iteratorIjPjRjPS5_lLl0EEES8_S8_RPKj(%"class.std::__1::deque.107"* %0, i32** %152, i32* %151, i32** %171, i32* %170, %"class.std::__1::__deque_iterator.380"* nonnull byval(%"class.std::__1::__deque_iterator.380") align 8 %6, i32** nonnull dereferenceable(8) %5)
  %176 = extractvalue { i32**, i32* } %175, 1
  br label %177

177:                                              ; preds = %169, %123
  %178 = phi i32* [ %176, %169 ], [ %99, %123 ]
  %179 = load i32*, i32** %5, align 8
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %178, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #15
  br label %308

181:                                              ; preds = %44
  %182 = sub i64 %18, %19
  %183 = icmp eq i64 %182, 0
  %184 = shl i64 %182, 7
  %185 = add i64 %184, -1
  %186 = select i1 %183, i64 0, i64 %185
  %187 = add i64 %47, %12
  %188 = icmp eq i64 %186, %187
  br i1 %188, label %189, label %191

189:                                              ; preds = %181
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.107"* %0)
  %190 = load i64, i64* %46, align 8
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i64 [ %190, %189 ], [ %47, %181 ]
  %193 = sub i64 %192, %45
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %212

195:                                              ; preds = %191
  %196 = load i64, i64* %11, align 8
  %197 = add i64 %196, %192
  %198 = load i32**, i32*** %9, align 8
  %199 = load i32**, i32*** %15, align 8
  %200 = icmp eq i32** %199, %198
  br i1 %200, label %207, label %201

201:                                              ; preds = %195
  %202 = lshr i64 %197, 10
  %203 = getelementptr inbounds i32*, i32** %198, i64 %202
  %204 = load i32*, i32** %203, align 8
  %205 = and i64 %197, 1023
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  br label %207

207:                                              ; preds = %195, %201
  %208 = phi i32* [ %206, %201 ], [ null, %195 ]
  %209 = load i32, i32* %3, align 4
  store i32 %209, i32* %208, align 4
  %210 = load i64, i64* %46, align 8
  %211 = add i64 %210, 1
  store i64 %211, i64* %46, align 8
  br label %308

212:                                              ; preds = %191
  %213 = bitcast i32** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #15
  store i32* %3, i32** %7, align 8
  %214 = load i64, i64* %11, align 8
  %215 = add i64 %214, %192
  %216 = load i32**, i32*** %9, align 8
  %217 = lshr i64 %215, 10
  %218 = getelementptr inbounds i32*, i32** %216, i64 %217
  %219 = load i32**, i32*** %15, align 8
  %220 = icmp eq i32** %219, %216
  br i1 %220, label %221, label %224

221:                                              ; preds = %212
  %222 = bitcast i32** %218 to i64*
  %223 = load i64, i64* %222, align 8
  br label %230

224:                                              ; preds = %212
  %225 = load i32*, i32** %218, align 8
  %226 = and i64 %215, 1023
  %227 = getelementptr inbounds i32, i32* %225, i64 %226
  %228 = ptrtoint i32* %225 to i64
  %229 = bitcast i32** %218 to i64*
  br label %230

230:                                              ; preds = %221, %224
  %231 = phi i64* [ %222, %221 ], [ %229, %224 ]
  %232 = phi i64 [ %223, %221 ], [ %228, %224 ]
  %233 = phi i32* [ null, %221 ], [ %227, %224 ]
  %234 = ptrtoint i32* %233 to i64
  %235 = sub i64 %234, %232
  %236 = ashr exact i64 %235, 2
  %237 = add nsw i64 %236, -1
  %238 = icmp sgt i64 %237, 0
  br i1 %238, label %239, label %245

239:                                              ; preds = %230
  %240 = lshr i64 %237, 10
  %241 = getelementptr inbounds i32*, i32** %218, i64 %240
  %242 = load i32*, i32** %241, align 8
  %243 = and i64 %237, 1023
  %244 = getelementptr inbounds i32, i32* %242, i64 %243
  br label %253

245:                                              ; preds = %230
  %246 = sub nsw i64 1024, %236
  %247 = sdiv i64 %246, -1024
  %248 = getelementptr inbounds i32*, i32** %218, i64 %247
  %249 = load i32*, i32** %248, align 8
  %250 = srem i64 %246, 1024
  %251 = sub nuw nsw i64 1023, %250
  %252 = getelementptr inbounds i32, i32* %249, i64 %251
  br label %253

253:                                              ; preds = %239, %245
  %254 = phi i32* [ %244, %239 ], [ %252, %245 ]
  %255 = phi i32** [ %241, %239 ], [ %248, %245 ]
  %256 = icmp eq i32* %254, %3
  br i1 %256, label %257, label %258

257:                                              ; preds = %253
  store i32* %233, i32** %7, align 8
  br label %258

258:                                              ; preds = %257, %253
  %259 = load i32, i32* %254, align 4
  store i32 %259, i32* %233, align 4
  %260 = load i64, i64* %46, align 8
  %261 = add i64 %260, 1
  store i64 %261, i64* %46, align 8
  %262 = icmp ugt i64 %193, 1
  br i1 %262, label %263, label %293

263:                                              ; preds = %258
  %264 = load i64, i64* %231, align 8
  %265 = sub i64 %234, %264
  %266 = ashr exact i64 %265, 2
  %267 = sub i64 %266, %193
  %268 = icmp sgt i64 %267, 0
  br i1 %268, label %269, label %275

269:                                              ; preds = %263
  %270 = lshr i64 %267, 10
  %271 = getelementptr inbounds i32*, i32** %218, i64 %270
  %272 = load i32*, i32** %271, align 8
  %273 = and i64 %267, 1023
  %274 = getelementptr inbounds i32, i32* %272, i64 %273
  br label %283

275:                                              ; preds = %263
  %276 = sub nsw i64 1023, %267
  %277 = sdiv i64 %276, -1024
  %278 = getelementptr inbounds i32*, i32** %218, i64 %277
  %279 = load i32*, i32** %278, align 8
  %280 = srem i64 %276, 1024
  %281 = sub nsw i64 1023, %280
  %282 = getelementptr inbounds i32, i32* %279, i64 %281
  br label %283

283:                                              ; preds = %269, %275
  %284 = phi i32* [ %274, %269 ], [ %282, %275 ]
  %285 = phi i32** [ %271, %269 ], [ %278, %275 ]
  %286 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %8, i64 0, i32 0
  store i32** %218, i32*** %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %8, i64 0, i32 1
  %288 = bitcast i32** %287 to i64*
  store i64 %234, i64* %288, align 8
  %289 = call { i32**, i32* } @_ZNSt3__15dequeIjNS_9allocatorIjEEE25__move_backward_and_checkENS_16__deque_iteratorIjPjRjPS5_lLl0EEES8_S8_RPKj(%"class.std::__1::deque.107"* %0, i32** %285, i32* %284, i32** %255, i32* %254, %"class.std::__1::__deque_iterator.380"* nonnull byval(%"class.std::__1::__deque_iterator.380") align 8 %8, i32** nonnull dereferenceable(8) %7)
  %290 = extractvalue { i32**, i32* } %289, 0
  %291 = extractvalue { i32**, i32* } %289, 1
  %292 = ptrtoint i32* %291 to i64
  br label %293

293:                                              ; preds = %283, %258
  %294 = phi i64 [ %292, %283 ], [ %234, %258 ]
  %295 = phi i32** [ %290, %283 ], [ %218, %258 ]
  %296 = load i32*, i32** %7, align 8
  %297 = load i32, i32* %296, align 4
  %298 = inttoptr i64 %294 to i32*
  %299 = load i32*, i32** %295, align 8
  %300 = icmp eq i32* %299, %298
  br i1 %300, label %301, label %305

301:                                              ; preds = %293
  %302 = getelementptr inbounds i32*, i32** %295, i64 -1
  %303 = load i32*, i32** %302, align 8
  %304 = getelementptr inbounds i32, i32* %303, i64 1024
  br label %305

305:                                              ; preds = %293, %301
  %306 = phi i32* [ %304, %301 ], [ %298, %293 ]
  %307 = getelementptr inbounds i32, i32* %306, i64 -1
  store i32 %297, i32* %307, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #15
  br label %308

308:                                              ; preds = %207, %305, %71, %177
  %309 = load i32**, i32*** %9, align 8
  %310 = load i64, i64* %11, align 8
  %311 = lshr i64 %310, 10
  %312 = getelementptr inbounds i32*, i32** %309, i64 %311
  %313 = load i32**, i32*** %15, align 8
  %314 = icmp eq i32** %313, %309
  br i1 %314, label %320, label %315

315:                                              ; preds = %308
  %316 = load i32*, i32** %312, align 8
  %317 = and i64 %310, 1023
  %318 = getelementptr inbounds i32, i32* %316, i64 %317
  %319 = ptrtoint i32* %318 to i64
  br label %320

320:                                              ; preds = %308, %315
  %321 = phi i64 [ %319, %315 ], [ 0, %308 ]
  %322 = icmp eq i64 %45, 0
  br i1 %322, label %346, label %323

323:                                              ; preds = %320
  %324 = bitcast i32** %312 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = sub i64 %321, %325
  %327 = ashr exact i64 %326, 2
  %328 = add nsw i64 %327, %45
  %329 = icmp sgt i64 %328, 0
  br i1 %329, label %330, label %337

330:                                              ; preds = %323
  %331 = lshr i64 %328, 10
  %332 = getelementptr inbounds i32*, i32** %312, i64 %331
  %333 = load i32*, i32** %332, align 8
  %334 = and i64 %328, 1023
  %335 = getelementptr inbounds i32, i32* %333, i64 %334
  %336 = ptrtoint i32* %335 to i64
  br label %346

337:                                              ; preds = %323
  %338 = sub nsw i64 1023, %328
  %339 = sdiv i64 %338, -1024
  %340 = getelementptr inbounds i32*, i32** %312, i64 %339
  %341 = load i32*, i32** %340, align 8
  %342 = srem i64 %338, 1024
  %343 = sub nsw i64 1023, %342
  %344 = getelementptr inbounds i32, i32* %341, i64 %343
  %345 = ptrtoint i32* %344 to i64
  br label %346

346:                                              ; preds = %320, %330, %337
  %347 = phi i64 [ %321, %320 ], [ %336, %330 ], [ %345, %337 ]
  %348 = phi i32** [ %312, %320 ], [ %332, %330 ], [ %340, %337 ]
  %349 = insertvalue { i32**, i32* } undef, i32** %348, 0
  %350 = inttoptr i64 %347 to i32*
  %351 = insertvalue { i32**, i32* } %349, i32* %350, 1
  ret { i32**, i32* } %351
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE20__add_front_capacityEv(%"class.std::__1::deque.107"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast i32*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = icmp eq i64 %12, 0
  %14 = shl i64 %12, 7
  %15 = add i64 %14, -1
  %16 = select i1 %13, i64 0, i64 %15
  %17 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  %22 = sub i64 %16, %21
  %23 = icmp ugt i64 %22, 1023
  %24 = inttoptr i64 %11 to i32**
  %25 = inttoptr i64 %8 to i32**
  br i1 %23, label %26, label %34

26:                                               ; preds = %1
  %27 = add i64 %18, 1024
  store i64 %27, i64* %17, align 8
  %28 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %2, align 8
  %29 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr i32*, i32** %25, i64 -1
  %31 = bitcast i32** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i32** %2 to i64*
  store i64 %32, i64* %33, align 8
  store i32** %30, i32*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.109"* %29, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %282

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = bitcast i32*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::deque.107"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp ult i64 %12, %41
  br i1 %42, label %43, label %70

43:                                               ; preds = %34
  %44 = icmp eq i64 %11, %40
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  %47 = tail call i8* @_Znwm(i64 4096) #16
  %48 = bitcast i32** %3 to i8**
  store i8* %47, i8** %48, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.109"* %35, i32** nonnull dereferenceable(8) %3)
  br label %59

49:                                               ; preds = %43
  %50 = bitcast i32** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #15
  %51 = tail call i8* @_Znwm(i64 4096) #16
  %52 = bitcast i32** %4 to i8**
  store i8* %51, i8** %52, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.109"* %35, i32** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #15
  %53 = bitcast i32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #15
  store i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %5, align 8
  %54 = load i32**, i32*** %6, align 8
  %55 = getelementptr i32*, i32** %54, i64 -1
  %56 = bitcast i32** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i32** %5 to i64*
  store i64 %57, i64* %58, align 8
  store i32** %55, i32*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.109"* %35, i32** nonnull dereferenceable(8) %5)
  br label %59

59:                                               ; preds = %49, %45
  %60 = phi i8* [ %53, %49 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  %61 = load i64, i64* %7, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 8
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = load i64, i64* %17, align 8
  %67 = add i64 %66, 1024
  br label %68

68:                                               ; preds = %59, %65
  %69 = phi i64 [ %67, %65 ], [ 512, %59 ]
  store i64 %69, i64* %17, align 8
  br label %282

70:                                               ; preds = %34
  %71 = ashr exact i64 %41, 2
  %72 = icmp eq i64 %41, 0
  %73 = select i1 %72, i64 1, i64 %71
  %74 = icmp ugt i64 %73, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  tail call void @abort() #17
  unreachable

76:                                               ; preds = %70
  %77 = shl i64 %73, 3
  %78 = tail call i8* @_Znwm(i64 %77) #16
  %79 = bitcast i8* %78 to i32**
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds i32*, i32** %79, i64 %73
  %82 = ptrtoint i32** %81 to i64
  %83 = tail call i8* @_Znwm(i64 4096) #16
  %84 = ptrtoint i8* %83 to i64
  %85 = icmp eq i32** %81, %79
  %86 = bitcast i8* %78 to i64*
  br i1 %85, label %87, label %107

87:                                               ; preds = %76
  %88 = sub i64 %82, %80
  %89 = ashr exact i64 %88, 2
  %90 = icmp eq i64 %88, 0
  %91 = select i1 %90, i64 1, i64 %89
  %92 = icmp ugt i64 %91, 2305843009213693951
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  tail call void @abort() #17
  unreachable

94:                                               ; preds = %87
  %95 = lshr i64 %91, 2
  %96 = shl i64 %91, 3
  %97 = tail call i8* @_Znwm(i64 %96) #16
  %98 = bitcast i8* %97 to i32**
  %99 = ptrtoint i8* %97 to i64
  %100 = getelementptr inbounds i32*, i32** %98, i64 %95
  %101 = ptrtoint i32** %100 to i64
  %102 = getelementptr inbounds i32*, i32** %98, i64 %91
  %103 = ptrtoint i32** %102 to i64
  %104 = bitcast i32** %100 to i64*
  tail call void @_ZdlPv(i8* nonnull %78) #16
  %105 = load i32**, i32*** %9, align 8
  %106 = load i32**, i32*** %6, align 8
  br label %107

107:                                              ; preds = %76, %94
  %108 = phi i32** [ %106, %94 ], [ %25, %76 ]
  %109 = phi i32** [ %105, %94 ], [ %24, %76 ]
  %110 = phi i64 [ %103, %94 ], [ %82, %76 ]
  %111 = phi i64 [ %101, %94 ], [ %80, %76 ]
  %112 = phi i64 [ %99, %94 ], [ %80, %76 ]
  %113 = phi i64* [ %104, %94 ], [ %86, %76 ]
  store i64 %84, i64* %113, align 8
  %114 = inttoptr i64 %111 to i32**
  %115 = getelementptr inbounds i32*, i32** %114, i64 1
  %116 = ptrtoint i32** %115 to i64
  %117 = icmp eq i32** %109, %108
  br i1 %117, label %120, label %129

118:                                              ; preds = %261
  %119 = ptrtoint i32** %270 to i64
  br label %120

120:                                              ; preds = %118, %107
  %121 = phi i64 [ %110, %107 ], [ %262, %118 ]
  %122 = phi i64 [ %111, %107 ], [ %264, %118 ]
  %123 = phi i64 [ %112, %107 ], [ %265, %118 ]
  %124 = phi i64 [ %116, %107 ], [ %119, %118 ]
  %125 = getelementptr inbounds %"class.std::__1::deque.107", %"class.std::__1::deque.107"* %0, i64 0, i32 0, i32 0, i32 0
  %126 = load i32**, i32*** %125, align 8
  store i64 %123, i64* %39, align 8
  store i64 %122, i64* %10, align 8
  store i64 %124, i64* %7, align 8
  store i64 %121, i64* %37, align 8
  %127 = sub i64 %124, %122
  %128 = icmp eq i64 %127, 8
  br i1 %128, label %277, label %274

129:                                              ; preds = %107, %261
  %130 = phi i64 [ %271, %261 ], [ %116, %107 ]
  %131 = phi i32** [ %270, %261 ], [ %115, %107 ]
  %132 = phi i32** [ %269, %261 ], [ %109, %107 ]
  %133 = phi i64 [ %265, %261 ], [ %112, %107 ]
  %134 = phi i64 [ %264, %261 ], [ %111, %107 ]
  %135 = phi i64 [ %262, %261 ], [ %110, %107 ]
  %136 = inttoptr i64 %135 to i32**
  %137 = icmp eq i32** %131, %136
  %138 = bitcast i32** %131 to i64*
  br i1 %137, label %139, label %261

139:                                              ; preds = %129
  %140 = inttoptr i64 %134 to i32**
  %141 = inttoptr i64 %133 to i32**
  %142 = icmp ugt i32** %140, %141
  br i1 %142, label %143, label %159

143:                                              ; preds = %139
  %144 = sub i64 %134, %133
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = sdiv i64 %146, -2
  %148 = getelementptr inbounds i32*, i32** %140, i64 %147
  %149 = sub i64 %130, %134
  %150 = ashr exact i64 %149, 3
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %143
  %153 = bitcast i32** %148 to i8*
  %154 = inttoptr i64 %134 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %149, i1 false) #15
  br label %155

155:                                              ; preds = %152, %143
  %156 = getelementptr inbounds i32*, i32** %148, i64 %150
  %157 = ptrtoint i32** %148 to i64
  %158 = bitcast i32** %156 to i64*
  br label %261

159:                                              ; preds = %139
  %160 = sub i64 %135, %133
  %161 = ashr exact i64 %160, 2
  %162 = icmp eq i64 %160, 0
  %163 = select i1 %162, i64 1, i64 %161
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %166

165:                                              ; preds = %159
  tail call void @abort() #17
  unreachable

166:                                              ; preds = %159
  %167 = lshr i64 %163, 2
  %168 = shl i64 %163, 3
  %169 = tail call i8* @_Znwm(i64 %168) #16
  %170 = bitcast i8* %169 to i32**
  %171 = ptrtoint i8* %169 to i64
  %172 = getelementptr inbounds i32*, i32** %170, i64 %167
  %173 = ptrtoint i32** %172 to i64
  %174 = getelementptr inbounds i32*, i32** %170, i64 %163
  %175 = ptrtoint i32** %174 to i64
  %176 = sub i64 %130, %134
  %177 = ashr exact i64 %176, 3
  %178 = getelementptr inbounds i32*, i32** %172, i64 %177
  %179 = icmp eq i64 %176, 0
  br i1 %179, label %254, label %180

180:                                              ; preds = %166
  %181 = add i64 %176, -8
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %201, label %186

186:                                              ; preds = %180, %186
  %187 = phi i32** [ %194, %186 ], [ %172, %180 ]
  %188 = phi i64 [ %195, %186 ], [ %173, %180 ]
  %189 = phi i32** [ %196, %186 ], [ %140, %180 ]
  %190 = phi i64 [ %197, %186 ], [ %184, %180 ]
  %191 = bitcast i32** %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = inttoptr i64 %188 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds i32*, i32** %187, i64 1
  %195 = ptrtoint i32** %194 to i64
  %196 = getelementptr inbounds i32*, i32** %189, i64 1
  %197 = add i64 %190, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %186, !llvm.loop !72

199:                                              ; preds = %186
  %200 = ptrtoint i32** %194 to i64
  br label %201

201:                                              ; preds = %180, %199
  %202 = phi i32** [ %172, %180 ], [ %194, %199 ]
  %203 = phi i64 [ %173, %180 ], [ %200, %199 ]
  %204 = phi i32** [ %140, %180 ], [ %196, %199 ]
  %205 = icmp ult i64 %181, 56
  br i1 %205, label %252, label %206

206:                                              ; preds = %201, %206
  %207 = phi i32** [ %248, %206 ], [ %202, %201 ]
  %208 = phi i64 [ %249, %206 ], [ %203, %201 ]
  %209 = phi i32** [ %250, %206 ], [ %204, %201 ]
  %210 = bitcast i32** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = inttoptr i64 %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds i32*, i32** %207, i64 1
  %214 = getelementptr inbounds i32*, i32** %209, i64 1
  %215 = bitcast i32** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast i32** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds i32*, i32** %207, i64 2
  %219 = getelementptr inbounds i32*, i32** %209, i64 2
  %220 = bitcast i32** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast i32** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds i32*, i32** %207, i64 3
  %224 = getelementptr inbounds i32*, i32** %209, i64 3
  %225 = bitcast i32** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast i32** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds i32*, i32** %207, i64 4
  %229 = getelementptr inbounds i32*, i32** %209, i64 4
  %230 = bitcast i32** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast i32** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds i32*, i32** %207, i64 5
  %234 = getelementptr inbounds i32*, i32** %209, i64 5
  %235 = bitcast i32** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast i32** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds i32*, i32** %207, i64 6
  %239 = getelementptr inbounds i32*, i32** %209, i64 6
  %240 = bitcast i32** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast i32** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds i32*, i32** %207, i64 7
  %244 = getelementptr inbounds i32*, i32** %209, i64 7
  %245 = bitcast i32** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast i32** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds i32*, i32** %207, i64 8
  %249 = ptrtoint i32** %248 to i64
  %250 = getelementptr inbounds i32*, i32** %209, i64 8
  %251 = icmp eq i32** %178, %248
  br i1 %251, label %252, label %206

252:                                              ; preds = %206, %201
  %253 = ptrtoint i32** %178 to i64
  br label %254

254:                                              ; preds = %252, %166
  %255 = phi i64 [ %253, %252 ], [ %173, %166 ]
  %256 = inttoptr i64 %255 to i32**
  %257 = icmp eq i64 %133, 0
  %258 = inttoptr i64 %255 to i64*
  br i1 %257, label %261, label %259

259:                                              ; preds = %254
  %260 = inttoptr i64 %133 to i8*
  tail call void @_ZdlPv(i8* %260) #16
  br label %261

261:                                              ; preds = %129, %155, %254, %259
  %262 = phi i64 [ %135, %155 ], [ %175, %254 ], [ %175, %259 ], [ %135, %129 ]
  %263 = phi i32** [ %156, %155 ], [ %256, %254 ], [ %256, %259 ], [ %131, %129 ]
  %264 = phi i64 [ %157, %155 ], [ %173, %254 ], [ %173, %259 ], [ %134, %129 ]
  %265 = phi i64 [ %133, %155 ], [ %171, %254 ], [ %171, %259 ], [ %133, %129 ]
  %266 = phi i64* [ %158, %155 ], [ %258, %254 ], [ %258, %259 ], [ %138, %129 ]
  %267 = bitcast i32** %132 to i64*
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %266, align 8
  %269 = getelementptr inbounds i32*, i32** %132, i64 1
  %270 = getelementptr inbounds i32*, i32** %263, i64 1
  %271 = ptrtoint i32** %270 to i64
  %272 = load i32**, i32*** %6, align 8
  %273 = icmp eq i32** %269, %272
  br i1 %273, label %118, label %129

274:                                              ; preds = %120
  %275 = load i64, i64* %17, align 8
  %276 = add i64 %275, 1024
  br label %277

277:                                              ; preds = %274, %120
  %278 = phi i64 [ %276, %274 ], [ 512, %120 ]
  store i64 %278, i64* %17, align 8
  %279 = icmp eq i32** %126, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = bitcast i32** %126 to i8*
  tail call void @_ZdlPv(i8* %281) #16
  br label %282

282:                                              ; preds = %280, %277, %68, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__15dequeIjNS_9allocatorIjEEE16__move_and_checkENS_16__deque_iteratorIjPjRjPS5_lLl0EEES8_S8_RPKj(%"class.std::__1::deque.107"*, i32**, i32*, i32**, i32*, %"class.std::__1::__deque_iterator.380"* byval(%"class.std::__1::__deque_iterator.380") align 8, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = ptrtoint i32* %2 to i64
  %9 = icmp eq i32* %4, %2
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = ptrtoint i32* %4 to i64
  %12 = ptrtoint i32** %3 to i64
  %13 = ptrtoint i32** %1 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 7
  %16 = bitcast i32** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %17
  %19 = ashr exact i64 %18, 2
  %20 = add nsw i64 %19, %15
  %21 = bitcast i32** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %8, %22
  %24 = ashr exact i64 %23, 2
  %25 = sub i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %7, %10
  %28 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %5, i64 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %5, i64 0, i32 1
  %31 = load i32*, i32** %30, align 8
  br label %195

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %5, i64 0, i32 0
  %35 = bitcast i32** %6 to i64*
  %36 = bitcast i32** %33 to i64*
  br label %37

37:                                               ; preds = %32, %189
  %38 = phi i64 [ %25, %32 ], [ %164, %189 ]
  %39 = phi i64 [ %8, %32 ], [ %191, %189 ]
  %40 = phi i32** [ %1, %32 ], [ %190, %189 ]
  %41 = inttoptr i64 %39 to i32*
  %42 = load i32*, i32** %40, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 1024
  %44 = ptrtoint i32* %43 to i64
  %45 = sub i64 %44, %39
  %46 = ashr exact i64 %45, 2
  %47 = icmp sgt i64 %46, %38
  %48 = getelementptr inbounds i32, i32* %41, i64 %38
  %49 = select i1 %47, i64 %38, i64 %46
  %50 = select i1 %47, i32* %48, i32* %43
  %51 = load i32*, i32** %6, align 8
  %52 = icmp uge i32* %51, %41
  %53 = icmp ult i32* %51, %50
  %54 = and i1 %52, %53
  %55 = ptrtoint i32* %42 to i64
  br i1 %54, label %58, label %56

56:                                               ; preds = %37
  %57 = load i64, i64* %36, align 8
  br label %103

58:                                               ; preds = %37
  %59 = load i32*, i32** %33, align 8
  %60 = icmp eq i32* %59, %41
  %61 = ptrtoint i32* %59 to i64
  br i1 %60, label %62, label %64

62:                                               ; preds = %58
  %63 = ptrtoint i32* %51 to i64
  br label %101

64:                                               ; preds = %58
  %65 = load i32**, i32*** %34, align 8
  %66 = ptrtoint i32** %40 to i64
  %67 = ptrtoint i32** %65 to i64
  %68 = sub i64 %66, %67
  %69 = shl i64 %68, 7
  %70 = sub i64 %39, %55
  %71 = ashr exact i64 %70, 2
  %72 = add nsw i64 %71, %69
  %73 = bitcast i32** %65 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %61, %74
  %76 = ashr exact i64 %75, 2
  %77 = sub i64 %72, %76
  %78 = ptrtoint i32* %51 to i64
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %101, label %80

80:                                               ; preds = %64
  %81 = sub i64 %78, %55
  %82 = ashr exact i64 %81, 2
  %83 = sub i64 %82, %77
  %84 = icmp sgt i64 %83, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %80
  %86 = lshr i64 %83, 10
  %87 = getelementptr inbounds i32*, i32** %40, i64 %86
  %88 = load i32*, i32** %87, align 8
  %89 = and i64 %83, 1023
  %90 = getelementptr inbounds i32, i32* %88, i64 %89
  %91 = ptrtoint i32* %90 to i64
  br label %101

92:                                               ; preds = %80
  %93 = sub nsw i64 1023, %83
  %94 = sdiv i64 %93, -1024
  %95 = getelementptr inbounds i32*, i32** %40, i64 %94
  %96 = load i32*, i32** %95, align 8
  %97 = srem i64 %93, 1024
  %98 = sub nsw i64 1023, %97
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = ptrtoint i32* %99 to i64
  br label %101

101:                                              ; preds = %62, %64, %85, %92
  %102 = phi i64 [ %78, %64 ], [ %91, %85 ], [ %100, %92 ], [ %63, %62 ]
  store i64 %102, i64* %35, align 8
  br label %103

103:                                              ; preds = %56, %101
  %104 = phi i64 [ %57, %56 ], [ %61, %101 ]
  %105 = load i32**, i32*** %34, align 8
  %106 = icmp eq i32* %50, %41
  br i1 %106, label %160, label %107

107:                                              ; preds = %103
  %108 = ptrtoint i32* %50 to i64
  br label %109

109:                                              ; preds = %156, %107
  %110 = phi i32* [ %41, %107 ], [ %124, %156 ]
  %111 = phi i32** [ %105, %107 ], [ %158, %156 ]
  %112 = phi i64 [ %104, %107 ], [ %157, %156 ]
  %113 = load i32*, i32** %111, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 1024
  %115 = ptrtoint i32* %114 to i64
  %116 = sub i64 %115, %112
  %117 = ashr exact i64 %116, 2
  %118 = ptrtoint i32* %110 to i64
  %119 = sub i64 %108, %118
  %120 = ashr exact i64 %119, 2
  %121 = icmp sgt i64 %120, %117
  %122 = getelementptr inbounds i32, i32* %110, i64 %117
  %123 = select i1 %121, i64 %117, i64 %120
  %124 = select i1 %121, i32* %122, i32* %50
  %125 = ptrtoint i32* %124 to i64
  %126 = sub i64 %125, %118
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %109
  %129 = inttoptr i64 %112 to i8*
  %130 = bitcast i32* %110 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %129, i8* align 4 %130, i64 %126, i1 false) #15
  br label %131

131:                                              ; preds = %128, %109
  %132 = icmp eq i64 %123, 0
  br i1 %132, label %156, label %133

133:                                              ; preds = %131
  %134 = bitcast i32** %111 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %112, %135
  %137 = ashr exact i64 %136, 2
  %138 = add nsw i64 %137, %123
  %139 = icmp sgt i64 %138, 0
  br i1 %139, label %140, label %147

140:                                              ; preds = %133
  %141 = lshr i64 %138, 10
  %142 = getelementptr inbounds i32*, i32** %111, i64 %141
  %143 = load i32*, i32** %142, align 8
  %144 = and i64 %138, 1023
  %145 = getelementptr inbounds i32, i32* %143, i64 %144
  %146 = ptrtoint i32* %145 to i64
  br label %156

147:                                              ; preds = %133
  %148 = sub nsw i64 1023, %138
  %149 = sdiv i64 %148, -1024
  %150 = getelementptr inbounds i32*, i32** %111, i64 %149
  %151 = load i32*, i32** %150, align 8
  %152 = srem i64 %148, 1024
  %153 = sub nuw nsw i64 1023, %152
  %154 = getelementptr inbounds i32, i32* %151, i64 %153
  %155 = ptrtoint i32* %154 to i64
  br label %156

156:                                              ; preds = %147, %140, %131
  %157 = phi i64 [ %112, %131 ], [ %146, %140 ], [ %155, %147 ]
  %158 = phi i32** [ %111, %131 ], [ %142, %140 ], [ %150, %147 ]
  %159 = icmp eq i32* %124, %50
  br i1 %159, label %160, label %109

160:                                              ; preds = %156, %103
  %161 = phi i64 [ %104, %103 ], [ %157, %156 ]
  %162 = phi i32** [ %105, %103 ], [ %158, %156 ]
  %163 = inttoptr i64 %161 to i32*
  store i32** %162, i32*** %34, align 8
  store i32* %163, i32** %33, align 8
  %164 = sub nsw i64 %38, %49
  %165 = icmp eq i64 %49, 0
  br i1 %165, label %189, label %166

166:                                              ; preds = %160
  %167 = bitcast i32** %40 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %39, %168
  %170 = ashr exact i64 %169, 2
  %171 = add nsw i64 %170, %49
  %172 = icmp sgt i64 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %166
  %174 = lshr i64 %171, 10
  %175 = getelementptr inbounds i32*, i32** %40, i64 %174
  %176 = load i32*, i32** %175, align 8
  %177 = and i64 %171, 1023
  %178 = getelementptr inbounds i32, i32* %176, i64 %177
  %179 = ptrtoint i32* %178 to i64
  br label %189

180:                                              ; preds = %166
  %181 = sub nsw i64 1023, %171
  %182 = sdiv i64 %181, -1024
  %183 = getelementptr inbounds i32*, i32** %40, i64 %182
  %184 = load i32*, i32** %183, align 8
  %185 = srem i64 %181, 1024
  %186 = sub nsw i64 1023, %185
  %187 = getelementptr inbounds i32, i32* %184, i64 %186
  %188 = ptrtoint i32* %187 to i64
  br label %189

189:                                              ; preds = %160, %173, %180
  %190 = phi i32** [ %40, %160 ], [ %175, %173 ], [ %183, %180 ]
  %191 = phi i64 [ %39, %160 ], [ %179, %173 ], [ %188, %180 ]
  %192 = icmp sgt i64 %164, 0
  br i1 %192, label %37, label %193

193:                                              ; preds = %189
  %194 = inttoptr i64 %161 to i32*
  br label %195

195:                                              ; preds = %193, %27
  %196 = phi i32* [ %31, %27 ], [ %194, %193 ]
  %197 = phi i32** [ %29, %27 ], [ %162, %193 ]
  %198 = insertvalue { i32**, i32* } undef, i32** %197, 0
  %199 = insertvalue { i32**, i32* } %198, i32* %196, 1
  ret { i32**, i32* } %199
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32**, i32* } @_ZNSt3__15dequeIjNS_9allocatorIjEEE25__move_backward_and_checkENS_16__deque_iteratorIjPjRjPS5_lLl0EEES8_S8_RPKj(%"class.std::__1::deque.107"*, i32**, i32*, i32**, i32*, %"class.std::__1::__deque_iterator.380"* byval(%"class.std::__1::__deque_iterator.380") align 8, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = ptrtoint i32* %4 to i64
  %9 = icmp eq i32* %4, %2
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = ptrtoint i32* %2 to i64
  %12 = ptrtoint i32** %3 to i64
  %13 = ptrtoint i32** %1 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 7
  %16 = bitcast i32** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 2
  %20 = add nsw i64 %19, %15
  %21 = bitcast i32** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %11, %22
  %24 = ashr exact i64 %23, 2
  %25 = sub i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %7, %10
  %28 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %5, i64 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %5, i64 0, i32 1
  %31 = load i32*, i32** %30, align 8
  br label %242

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__deque_iterator.380", %"class.std::__1::__deque_iterator.380"* %5, i64 0, i32 0
  %35 = bitcast i32** %6 to i64*
  %36 = bitcast i32** %33 to i64*
  br label %37

37:                                               ; preds = %32, %236
  %38 = phi i64 [ %25, %32 ], [ %210, %236 ]
  %39 = phi i32** [ %3, %32 ], [ %238, %236 ]
  %40 = phi i64 [ %8, %32 ], [ %237, %236 ]
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32*, i32** %39, align 8
  %43 = icmp eq i32* %42, %41
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = getelementptr inbounds i32*, i32** %39, i64 -1
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 1024
  br label %48

48:                                               ; preds = %37, %44
  %49 = phi i32* [ %46, %44 ], [ %42, %37 ]
  %50 = phi i32** [ %45, %44 ], [ %39, %37 ]
  %51 = phi i32* [ %47, %44 ], [ %41, %37 ]
  %52 = getelementptr inbounds i32, i32* %51, i64 -1
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %51 to i64
  %55 = ptrtoint i32* %49 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = icmp sgt i64 %57, %38
  %59 = sub nsw i64 0, %38
  %60 = getelementptr inbounds i32, i32* %51, i64 %59
  %61 = select i1 %58, i64 %38, i64 %57
  %62 = select i1 %58, i32* %60, i32* %49
  %63 = load i32*, i32** %6, align 8
  %64 = icmp ule i32* %62, %63
  %65 = icmp ult i32* %63, %51
  %66 = and i1 %65, %64
  br i1 %66, label %69, label %67

67:                                               ; preds = %48
  %68 = load i64, i64* %36, align 8
  br label %122

69:                                               ; preds = %48
  %70 = load i32*, i32** %33, align 8
  %71 = icmp eq i32* %70, %52
  %72 = ptrtoint i32* %70 to i64
  br i1 %71, label %73, label %77

73:                                               ; preds = %69
  %74 = ptrtoint i32* %63 to i64
  %75 = bitcast i32** %50 to i64*
  %76 = load i64, i64* %75, align 8
  br label %96

77:                                               ; preds = %69
  %78 = load i32**, i32*** %34, align 8
  %79 = ptrtoint i32** %78 to i64
  %80 = ptrtoint i32** %50 to i64
  %81 = sub i64 %79, %80
  %82 = shl i64 %81, 7
  %83 = bitcast i32** %78 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %72, %84
  %86 = ashr exact i64 %85, 2
  %87 = add nsw i64 %86, %82
  %88 = bitcast i32** %50 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %53, %89
  %91 = ashr exact i64 %90, 2
  %92 = xor i64 %91, -1
  %93 = add i64 %87, %92
  %94 = ptrtoint i32* %63 to i64
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %120, label %96

96:                                               ; preds = %73, %77
  %97 = phi i64 [ %76, %73 ], [ %89, %77 ]
  %98 = phi i64 [ %74, %73 ], [ %94, %77 ]
  %99 = phi i64 [ -1, %73 ], [ %93, %77 ]
  %100 = sub i64 %98, %97
  %101 = ashr exact i64 %100, 2
  %102 = add nsw i64 %101, %99
  %103 = icmp sgt i64 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %96
  %105 = lshr i64 %102, 10
  %106 = getelementptr inbounds i32*, i32** %50, i64 %105
  %107 = load i32*, i32** %106, align 8
  %108 = and i64 %102, 1023
  %109 = getelementptr inbounds i32, i32* %107, i64 %108
  %110 = ptrtoint i32* %109 to i64
  br label %120

111:                                              ; preds = %96
  %112 = sub nsw i64 1023, %102
  %113 = sdiv i64 %112, -1024
  %114 = getelementptr inbounds i32*, i32** %50, i64 %113
  %115 = load i32*, i32** %114, align 8
  %116 = srem i64 %112, 1024
  %117 = sub nsw i64 1023, %116
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  %119 = ptrtoint i32* %118 to i64
  br label %120

120:                                              ; preds = %77, %104, %111
  %121 = phi i64 [ %94, %77 ], [ %110, %104 ], [ %119, %111 ]
  store i64 %121, i64* %35, align 8
  br label %122

122:                                              ; preds = %67, %120
  %123 = phi i64 [ %68, %67 ], [ %72, %120 ]
  %124 = load i32**, i32*** %34, align 8
  %125 = icmp eq i32* %51, %62
  br i1 %125, label %206, label %126

126:                                              ; preds = %122
  %127 = ptrtoint i32* %62 to i64
  br label %128

128:                                              ; preds = %202, %126
  %129 = phi i32* [ %51, %126 ], [ %168, %202 ]
  %130 = phi i32** [ %124, %126 ], [ %204, %202 ]
  %131 = phi i64 [ %123, %126 ], [ %203, %202 ]
  %132 = bitcast i32** %130 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 2
  %136 = add nsw i64 %135, -1
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %144

138:                                              ; preds = %128
  %139 = lshr i64 %136, 10
  %140 = getelementptr inbounds i32*, i32** %130, i64 %139
  %141 = load i32*, i32** %140, align 8
  %142 = and i64 %136, 1023
  %143 = getelementptr inbounds i32, i32* %141, i64 %142
  br label %152

144:                                              ; preds = %128
  %145 = sub nsw i64 1024, %135
  %146 = sdiv i64 %145, -1024
  %147 = getelementptr inbounds i32*, i32** %130, i64 %146
  %148 = load i32*, i32** %147, align 8
  %149 = srem i64 %145, 1024
  %150 = sub nuw nsw i64 1023, %149
  %151 = getelementptr inbounds i32, i32* %148, i64 %150
  br label %152

152:                                              ; preds = %144, %138
  %153 = phi i32* [ %143, %138 ], [ %151, %144 ]
  %154 = phi i32** [ %140, %138 ], [ %147, %144 ]
  %155 = bitcast i32** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds i32, i32* %153, i64 1
  %158 = ptrtoint i32* %157 to i64
  %159 = sub i64 %158, %156
  %160 = ashr exact i64 %159, 2
  %161 = ptrtoint i32* %129 to i64
  %162 = sub i64 %161, %127
  %163 = ashr exact i64 %162, 2
  %164 = icmp sgt i64 %163, %160
  %165 = sub nsw i64 0, %160
  %166 = getelementptr inbounds i32, i32* %129, i64 %165
  %167 = select i1 %164, i64 %160, i64 %163
  %168 = select i1 %164, i32* %166, i32* %62
  %169 = ptrtoint i32* %168 to i64
  %170 = sub i64 %161, %169
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %152
  %173 = ashr exact i64 %170, 2
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds i32, i32* %157, i64 %174
  %176 = bitcast i32* %175 to i8*
  %177 = bitcast i32* %168 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %176, i8* align 4 %177, i64 %170, i1 false) #15
  br label %178

178:                                              ; preds = %172, %152
  %179 = icmp eq i64 %167, 0
  br i1 %179, label %202, label %180

180:                                              ; preds = %178
  %181 = load i64, i64* %132, align 8
  %182 = sub i64 %131, %181
  %183 = ashr exact i64 %182, 2
  %184 = sub nsw i64 %183, %167
  %185 = icmp sgt i64 %184, 0
  br i1 %185, label %186, label %193

186:                                              ; preds = %180
  %187 = lshr i64 %184, 10
  %188 = getelementptr inbounds i32*, i32** %130, i64 %187
  %189 = load i32*, i32** %188, align 8
  %190 = and i64 %184, 1023
  %191 = getelementptr inbounds i32, i32* %189, i64 %190
  %192 = ptrtoint i32* %191 to i64
  br label %202

193:                                              ; preds = %180
  %194 = sub nsw i64 1023, %184
  %195 = sdiv i64 %194, -1024
  %196 = getelementptr inbounds i32*, i32** %130, i64 %195
  %197 = load i32*, i32** %196, align 8
  %198 = srem i64 %194, 1024
  %199 = sub nuw nsw i64 1023, %198
  %200 = getelementptr inbounds i32, i32* %197, i64 %199
  %201 = ptrtoint i32* %200 to i64
  br label %202

202:                                              ; preds = %193, %186, %178
  %203 = phi i64 [ %131, %178 ], [ %192, %186 ], [ %201, %193 ]
  %204 = phi i32** [ %130, %178 ], [ %188, %186 ], [ %196, %193 ]
  %205 = icmp eq i32* %168, %62
  br i1 %205, label %206, label %128

206:                                              ; preds = %202, %122
  %207 = phi i64 [ %123, %122 ], [ %203, %202 ]
  %208 = phi i32** [ %124, %122 ], [ %204, %202 ]
  %209 = inttoptr i64 %207 to i32*
  store i32** %208, i32*** %34, align 8
  store i32* %209, i32** %33, align 8
  %210 = sub nsw i64 %38, %61
  %211 = add nsw i64 %61, -1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %236, label %213

213:                                              ; preds = %206
  %214 = bitcast i32** %50 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %53, %215
  %217 = ashr exact i64 %216, 2
  %218 = sub i64 %217, %211
  %219 = icmp sgt i64 %218, 0
  br i1 %219, label %220, label %227

220:                                              ; preds = %213
  %221 = lshr i64 %218, 10
  %222 = getelementptr inbounds i32*, i32** %50, i64 %221
  %223 = load i32*, i32** %222, align 8
  %224 = and i64 %218, 1023
  %225 = getelementptr inbounds i32, i32* %223, i64 %224
  %226 = ptrtoint i32* %225 to i64
  br label %236

227:                                              ; preds = %213
  %228 = sub nsw i64 1023, %218
  %229 = sdiv i64 %228, -1024
  %230 = getelementptr inbounds i32*, i32** %50, i64 %229
  %231 = load i32*, i32** %230, align 8
  %232 = srem i64 %228, 1024
  %233 = sub nsw i64 1023, %232
  %234 = getelementptr inbounds i32, i32* %231, i64 %233
  %235 = ptrtoint i32* %234 to i64
  br label %236

236:                                              ; preds = %206, %220, %227
  %237 = phi i64 [ %53, %206 ], [ %226, %220 ], [ %235, %227 ]
  %238 = phi i32** [ %50, %206 ], [ %222, %220 ], [ %230, %227 ]
  %239 = icmp sgt i64 %210, 0
  br i1 %239, label %37, label %240

240:                                              ; preds = %236
  %241 = inttoptr i64 %207 to i32*
  br label %242

242:                                              ; preds = %240, %27
  %243 = phi i32* [ %31, %27 ], [ %241, %240 ]
  %244 = phi i32** [ %29, %27 ], [ %208, %240 ]
  %245 = insertvalue { i32**, i32* } undef, i32** %244, 0
  %246 = insertvalue { i32**, i32* } %245, i32* %243, 1
  ret { i32**, i32* } %246
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.109"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.109", %"struct.std::__1::__split_buffer.109"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.109"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !73

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64**, i64* } @_ZNSt3__15dequeIlNS_9allocatorIlEEE6insertENS_16__deque_iteratorIlPKlRS5_PKS6_lLl0EEES7_(%"class.std::__1::deque.93"*, i64**, i64*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::__1::__deque_iterator.390", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::__1::__deque_iterator.390", align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i64**, i64*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 9
  %14 = getelementptr inbounds i64*, i64** %10, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i64**, i64*** %15, align 8
  %17 = icmp eq i64** %16, %10
  %18 = ptrtoint i64** %16 to i64
  %19 = ptrtoint i64** %10 to i64
  br i1 %17, label %24, label %20

20:                                               ; preds = %4
  %21 = load i64*, i64** %14, align 8
  %22 = and i64 %12, 511
  %23 = getelementptr inbounds i64, i64* %21, i64 %22
  br label %24

24:                                               ; preds = %4, %20
  %25 = phi i64* [ %23, %20 ], [ null, %4 ]
  %26 = icmp eq i64* %25, %2
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = ptrtoint i64* %25 to i64
  %29 = ptrtoint i64** %14 to i64
  %30 = ptrtoint i64* %2 to i64
  %31 = ptrtoint i64** %1 to i64
  %32 = sub i64 %31, %29
  %33 = shl i64 %32, 6
  %34 = bitcast i64** %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %30, %35
  %37 = ashr exact i64 %36, 3
  %38 = add nsw i64 %37, %33
  %39 = bitcast i64** %14 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %28, %40
  %42 = ashr exact i64 %41, 3
  %43 = sub i64 %38, %42
  br label %44

44:                                               ; preds = %24, %27
  %45 = phi i64 [ %43, %27 ], [ 0, %24 ]
  %46 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ult i64 %45, %48
  br i1 %49, label %50, label %181

50:                                               ; preds = %44
  %51 = icmp eq i64 %12, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @_ZNSt3__15dequeIlNS_9allocatorIlEEE20__add_front_capacityEv(%"class.std::__1::deque.93"* %0)
  br label %53

53:                                               ; preds = %52, %50
  %54 = icmp eq i64 %45, 0
  br i1 %54, label %55, label %79

55:                                               ; preds = %53
  %56 = load i64**, i64*** %9, align 8
  %57 = load i64, i64* %11, align 8
  %58 = lshr i64 %57, 9
  %59 = getelementptr inbounds i64*, i64** %56, i64 %58
  %60 = load i64**, i64*** %15, align 8
  %61 = icmp eq i64** %60, %56
  %62 = load i64*, i64** %59, align 8
  %63 = and i64 %57, 511
  %64 = getelementptr inbounds i64, i64* %62, i64 %63
  %65 = select i1 %61, i64* null, i64* %64
  %66 = icmp eq i64* %65, %62
  br i1 %66, label %67, label %71

67:                                               ; preds = %55
  %68 = getelementptr inbounds i64*, i64** %59, i64 -1
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 512
  br label %71

71:                                               ; preds = %55, %67
  %72 = phi i64* [ %70, %67 ], [ %65, %55 ]
  %73 = getelementptr inbounds i64, i64* %72, i64 -1
  %74 = load i64, i64* %3, align 8
  store i64 %74, i64* %73, align 8
  %75 = bitcast i64* %11 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = add <2 x i64> %76, <i64 -1, i64 1>
  %78 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 8
  br label %308

79:                                               ; preds = %53
  %80 = bitcast i64** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #15
  store i64* %3, i64** %5, align 8
  %81 = load i64**, i64*** %9, align 8
  %82 = load i64, i64* %11, align 8
  %83 = lshr i64 %82, 9
  %84 = getelementptr inbounds i64*, i64** %81, i64 %83
  %85 = load i64**, i64*** %15, align 8
  %86 = icmp eq i64** %85, %81
  br i1 %86, label %87, label %90

87:                                               ; preds = %79
  %88 = bitcast i64** %84 to i64*
  %89 = load i64, i64* %88, align 8
  br label %96

90:                                               ; preds = %79
  %91 = load i64*, i64** %84, align 8
  %92 = and i64 %82, 511
  %93 = getelementptr inbounds i64, i64* %91, i64 %92
  %94 = ptrtoint i64* %91 to i64
  %95 = bitcast i64** %84 to i64*
  br label %96

96:                                               ; preds = %87, %90
  %97 = phi i64* [ %88, %87 ], [ %95, %90 ]
  %98 = phi i64 [ %89, %87 ], [ %94, %90 ]
  %99 = phi i64* [ null, %87 ], [ %93, %90 ]
  %100 = ptrtoint i64* %99 to i64
  %101 = sub i64 %100, %98
  %102 = ashr exact i64 %101, 3
  %103 = add nsw i64 %102, -1
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %96
  %106 = lshr i64 %103, 9
  %107 = getelementptr inbounds i64*, i64** %84, i64 %106
  %108 = load i64*, i64** %107, align 8
  %109 = and i64 %103, 511
  %110 = getelementptr inbounds i64, i64* %108, i64 %109
  br label %119

111:                                              ; preds = %96
  %112 = sub nsw i64 512, %102
  %113 = sdiv i64 %112, -512
  %114 = getelementptr inbounds i64*, i64** %84, i64 %113
  %115 = load i64*, i64** %114, align 8
  %116 = srem i64 %112, 512
  %117 = sub nuw nsw i64 511, %116
  %118 = getelementptr inbounds i64, i64* %115, i64 %117
  br label %119

119:                                              ; preds = %105, %111
  %120 = phi i64* [ %110, %105 ], [ %118, %111 ]
  %121 = icmp eq i64* %99, %3
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  store i64* %120, i64** %5, align 8
  br label %123

123:                                              ; preds = %122, %119
  %124 = load i64, i64* %99, align 8
  store i64 %124, i64* %120, align 8
  %125 = bitcast i64* %11 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8
  %127 = add <2 x i64> %126, <i64 -1, i64 1>
  %128 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %128, align 8
  %129 = icmp ugt i64 %45, 1
  br i1 %129, label %130, label %177

130:                                              ; preds = %123
  %131 = load i64, i64* %97, align 8
  %132 = sub i64 %100, %131
  %133 = ashr exact i64 %132, 3
  %134 = add nsw i64 %133, 1
  %135 = icmp sgt i64 %132, -8
  br i1 %135, label %136, label %142

136:                                              ; preds = %130
  %137 = lshr i64 %134, 9
  %138 = getelementptr inbounds i64*, i64** %84, i64 %137
  %139 = load i64*, i64** %138, align 8
  %140 = and i64 %134, 511
  %141 = getelementptr inbounds i64, i64* %139, i64 %140
  br label %150

142:                                              ; preds = %130
  %143 = sub nsw i64 510, %133
  %144 = sdiv i64 %143, -512
  %145 = getelementptr inbounds i64*, i64** %84, i64 %144
  %146 = load i64*, i64** %145, align 8
  %147 = srem i64 %143, 512
  %148 = sub nuw nsw i64 511, %147
  %149 = getelementptr inbounds i64, i64* %146, i64 %148
  br label %150

150:                                              ; preds = %142, %136
  %151 = phi i64* [ %141, %136 ], [ %149, %142 ]
  %152 = phi i64** [ %138, %136 ], [ %145, %142 ]
  %153 = add nsw i64 %133, %45
  %154 = icmp sgt i64 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %150
  %156 = lshr i64 %153, 9
  %157 = getelementptr inbounds i64*, i64** %84, i64 %156
  %158 = load i64*, i64** %157, align 8
  %159 = and i64 %153, 511
  %160 = getelementptr inbounds i64, i64* %158, i64 %159
  br label %169

161:                                              ; preds = %150
  %162 = sub nsw i64 511, %153
  %163 = sdiv i64 %162, -512
  %164 = getelementptr inbounds i64*, i64** %84, i64 %163
  %165 = load i64*, i64** %164, align 8
  %166 = srem i64 %162, 512
  %167 = sub nsw i64 511, %166
  %168 = getelementptr inbounds i64, i64* %165, i64 %167
  br label %169

169:                                              ; preds = %155, %161
  %170 = phi i64* [ %160, %155 ], [ %168, %161 ]
  %171 = phi i64** [ %157, %155 ], [ %164, %161 ]
  %172 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %6, i64 0, i32 0
  store i64** %84, i64*** %172, align 8
  %173 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %6, i64 0, i32 1
  %174 = bitcast i64** %173 to i64*
  store i64 %100, i64* %174, align 8
  %175 = call { i64**, i64* } @_ZNSt3__15dequeIlNS_9allocatorIlEEE16__move_and_checkENS_16__deque_iteratorIlPlRlPS5_lLl0EEES8_S8_RPKl(%"class.std::__1::deque.93"* %0, i64** %152, i64* %151, i64** %171, i64* %170, %"class.std::__1::__deque_iterator.390"* nonnull byval(%"class.std::__1::__deque_iterator.390") align 8 %6, i64** nonnull dereferenceable(8) %5)
  %176 = extractvalue { i64**, i64* } %175, 1
  br label %177

177:                                              ; preds = %169, %123
  %178 = phi i64* [ %176, %169 ], [ %99, %123 ]
  %179 = load i64*, i64** %5, align 8
  %180 = load i64, i64* %179, align 8
  store i64 %180, i64* %178, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #15
  br label %308

181:                                              ; preds = %44
  %182 = sub i64 %18, %19
  %183 = icmp eq i64 %182, 0
  %184 = shl i64 %182, 6
  %185 = add i64 %184, -1
  %186 = select i1 %183, i64 0, i64 %185
  %187 = add i64 %47, %12
  %188 = icmp eq i64 %186, %187
  br i1 %188, label %189, label %191

189:                                              ; preds = %181
  tail call void @_ZNSt3__15dequeIlNS_9allocatorIlEEE19__add_back_capacityEv(%"class.std::__1::deque.93"* %0)
  %190 = load i64, i64* %46, align 8
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i64 [ %190, %189 ], [ %47, %181 ]
  %193 = sub i64 %192, %45
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %212

195:                                              ; preds = %191
  %196 = load i64, i64* %11, align 8
  %197 = add i64 %196, %192
  %198 = load i64**, i64*** %9, align 8
  %199 = load i64**, i64*** %15, align 8
  %200 = icmp eq i64** %199, %198
  br i1 %200, label %207, label %201

201:                                              ; preds = %195
  %202 = lshr i64 %197, 9
  %203 = getelementptr inbounds i64*, i64** %198, i64 %202
  %204 = load i64*, i64** %203, align 8
  %205 = and i64 %197, 511
  %206 = getelementptr inbounds i64, i64* %204, i64 %205
  br label %207

207:                                              ; preds = %195, %201
  %208 = phi i64* [ %206, %201 ], [ null, %195 ]
  %209 = load i64, i64* %3, align 8
  store i64 %209, i64* %208, align 8
  %210 = load i64, i64* %46, align 8
  %211 = add i64 %210, 1
  store i64 %211, i64* %46, align 8
  br label %308

212:                                              ; preds = %191
  %213 = bitcast i64** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #15
  store i64* %3, i64** %7, align 8
  %214 = load i64, i64* %11, align 8
  %215 = add i64 %214, %192
  %216 = load i64**, i64*** %9, align 8
  %217 = lshr i64 %215, 9
  %218 = getelementptr inbounds i64*, i64** %216, i64 %217
  %219 = load i64**, i64*** %15, align 8
  %220 = icmp eq i64** %219, %216
  br i1 %220, label %221, label %224

221:                                              ; preds = %212
  %222 = bitcast i64** %218 to i64*
  %223 = load i64, i64* %222, align 8
  br label %230

224:                                              ; preds = %212
  %225 = load i64*, i64** %218, align 8
  %226 = and i64 %215, 511
  %227 = getelementptr inbounds i64, i64* %225, i64 %226
  %228 = ptrtoint i64* %225 to i64
  %229 = bitcast i64** %218 to i64*
  br label %230

230:                                              ; preds = %221, %224
  %231 = phi i64* [ %222, %221 ], [ %229, %224 ]
  %232 = phi i64 [ %223, %221 ], [ %228, %224 ]
  %233 = phi i64* [ null, %221 ], [ %227, %224 ]
  %234 = ptrtoint i64* %233 to i64
  %235 = sub i64 %234, %232
  %236 = ashr exact i64 %235, 3
  %237 = add nsw i64 %236, -1
  %238 = icmp sgt i64 %237, 0
  br i1 %238, label %239, label %245

239:                                              ; preds = %230
  %240 = lshr i64 %237, 9
  %241 = getelementptr inbounds i64*, i64** %218, i64 %240
  %242 = load i64*, i64** %241, align 8
  %243 = and i64 %237, 511
  %244 = getelementptr inbounds i64, i64* %242, i64 %243
  br label %253

245:                                              ; preds = %230
  %246 = sub nsw i64 512, %236
  %247 = sdiv i64 %246, -512
  %248 = getelementptr inbounds i64*, i64** %218, i64 %247
  %249 = load i64*, i64** %248, align 8
  %250 = srem i64 %246, 512
  %251 = sub nuw nsw i64 511, %250
  %252 = getelementptr inbounds i64, i64* %249, i64 %251
  br label %253

253:                                              ; preds = %239, %245
  %254 = phi i64* [ %244, %239 ], [ %252, %245 ]
  %255 = phi i64** [ %241, %239 ], [ %248, %245 ]
  %256 = icmp eq i64* %254, %3
  br i1 %256, label %257, label %258

257:                                              ; preds = %253
  store i64* %233, i64** %7, align 8
  br label %258

258:                                              ; preds = %257, %253
  %259 = load i64, i64* %254, align 8
  store i64 %259, i64* %233, align 8
  %260 = load i64, i64* %46, align 8
  %261 = add i64 %260, 1
  store i64 %261, i64* %46, align 8
  %262 = icmp ugt i64 %193, 1
  br i1 %262, label %263, label %293

263:                                              ; preds = %258
  %264 = load i64, i64* %231, align 8
  %265 = sub i64 %234, %264
  %266 = ashr exact i64 %265, 3
  %267 = sub i64 %266, %193
  %268 = icmp sgt i64 %267, 0
  br i1 %268, label %269, label %275

269:                                              ; preds = %263
  %270 = lshr i64 %267, 9
  %271 = getelementptr inbounds i64*, i64** %218, i64 %270
  %272 = load i64*, i64** %271, align 8
  %273 = and i64 %267, 511
  %274 = getelementptr inbounds i64, i64* %272, i64 %273
  br label %283

275:                                              ; preds = %263
  %276 = sub nsw i64 511, %267
  %277 = sdiv i64 %276, -512
  %278 = getelementptr inbounds i64*, i64** %218, i64 %277
  %279 = load i64*, i64** %278, align 8
  %280 = srem i64 %276, 512
  %281 = sub nsw i64 511, %280
  %282 = getelementptr inbounds i64, i64* %279, i64 %281
  br label %283

283:                                              ; preds = %269, %275
  %284 = phi i64* [ %274, %269 ], [ %282, %275 ]
  %285 = phi i64** [ %271, %269 ], [ %278, %275 ]
  %286 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %8, i64 0, i32 0
  store i64** %218, i64*** %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %8, i64 0, i32 1
  %288 = bitcast i64** %287 to i64*
  store i64 %234, i64* %288, align 8
  %289 = call { i64**, i64* } @_ZNSt3__15dequeIlNS_9allocatorIlEEE25__move_backward_and_checkENS_16__deque_iteratorIlPlRlPS5_lLl0EEES8_S8_RPKl(%"class.std::__1::deque.93"* %0, i64** %285, i64* %284, i64** %255, i64* %254, %"class.std::__1::__deque_iterator.390"* nonnull byval(%"class.std::__1::__deque_iterator.390") align 8 %8, i64** nonnull dereferenceable(8) %7)
  %290 = extractvalue { i64**, i64* } %289, 0
  %291 = extractvalue { i64**, i64* } %289, 1
  %292 = ptrtoint i64* %291 to i64
  br label %293

293:                                              ; preds = %283, %258
  %294 = phi i64 [ %292, %283 ], [ %234, %258 ]
  %295 = phi i64** [ %290, %283 ], [ %218, %258 ]
  %296 = load i64*, i64** %7, align 8
  %297 = load i64, i64* %296, align 8
  %298 = inttoptr i64 %294 to i64*
  %299 = load i64*, i64** %295, align 8
  %300 = icmp eq i64* %299, %298
  br i1 %300, label %301, label %305

301:                                              ; preds = %293
  %302 = getelementptr inbounds i64*, i64** %295, i64 -1
  %303 = load i64*, i64** %302, align 8
  %304 = getelementptr inbounds i64, i64* %303, i64 512
  br label %305

305:                                              ; preds = %293, %301
  %306 = phi i64* [ %304, %301 ], [ %298, %293 ]
  %307 = getelementptr inbounds i64, i64* %306, i64 -1
  store i64 %297, i64* %307, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #15
  br label %308

308:                                              ; preds = %207, %305, %71, %177
  %309 = load i64**, i64*** %9, align 8
  %310 = load i64, i64* %11, align 8
  %311 = lshr i64 %310, 9
  %312 = getelementptr inbounds i64*, i64** %309, i64 %311
  %313 = load i64**, i64*** %15, align 8
  %314 = icmp eq i64** %313, %309
  br i1 %314, label %320, label %315

315:                                              ; preds = %308
  %316 = load i64*, i64** %312, align 8
  %317 = and i64 %310, 511
  %318 = getelementptr inbounds i64, i64* %316, i64 %317
  %319 = ptrtoint i64* %318 to i64
  br label %320

320:                                              ; preds = %308, %315
  %321 = phi i64 [ %319, %315 ], [ 0, %308 ]
  %322 = icmp eq i64 %45, 0
  br i1 %322, label %346, label %323

323:                                              ; preds = %320
  %324 = bitcast i64** %312 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = sub i64 %321, %325
  %327 = ashr exact i64 %326, 3
  %328 = add nsw i64 %327, %45
  %329 = icmp sgt i64 %328, 0
  br i1 %329, label %330, label %337

330:                                              ; preds = %323
  %331 = lshr i64 %328, 9
  %332 = getelementptr inbounds i64*, i64** %312, i64 %331
  %333 = load i64*, i64** %332, align 8
  %334 = and i64 %328, 511
  %335 = getelementptr inbounds i64, i64* %333, i64 %334
  %336 = ptrtoint i64* %335 to i64
  br label %346

337:                                              ; preds = %323
  %338 = sub nsw i64 511, %328
  %339 = sdiv i64 %338, -512
  %340 = getelementptr inbounds i64*, i64** %312, i64 %339
  %341 = load i64*, i64** %340, align 8
  %342 = srem i64 %338, 512
  %343 = sub nsw i64 511, %342
  %344 = getelementptr inbounds i64, i64* %341, i64 %343
  %345 = ptrtoint i64* %344 to i64
  br label %346

346:                                              ; preds = %320, %330, %337
  %347 = phi i64 [ %321, %320 ], [ %336, %330 ], [ %345, %337 ]
  %348 = phi i64** [ %312, %320 ], [ %332, %330 ], [ %340, %337 ]
  %349 = insertvalue { i64**, i64* } undef, i64** %348, 0
  %350 = inttoptr i64 %347 to i64*
  %351 = insertvalue { i64**, i64* } %349, i64* %350, 1
  ret { i64**, i64* } %351
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIlNS_9allocatorIlEEE20__add_front_capacityEv(%"class.std::__1::deque.93"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast i64*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i64*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = icmp eq i64 %12, 0
  %14 = shl i64 %12, 6
  %15 = add i64 %14, -1
  %16 = select i1 %13, i64 0, i64 %15
  %17 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  %22 = sub i64 %16, %21
  %23 = icmp ugt i64 %22, 511
  %24 = inttoptr i64 %11 to i64**
  %25 = inttoptr i64 %8 to i64**
  br i1 %23, label %26, label %34

26:                                               ; preds = %1
  %27 = add i64 %18, 512
  store i64 %27, i64* %17, align 8
  %28 = bitcast i64** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i64* inttoptr (i64 -6148914691236517206 to i64*), i64** %2, align 8
  %29 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr i64*, i64** %25, i64 -1
  %31 = bitcast i64** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i64** %2 to i64*
  store i64 %32, i64* %33, align 8
  store i64** %30, i64*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.95"* %29, i64** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %282

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = bitcast i64*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::deque.93"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp ult i64 %12, %41
  br i1 %42, label %43, label %70

43:                                               ; preds = %34
  %44 = icmp eq i64 %11, %40
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = bitcast i64** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  %47 = tail call i8* @_Znwm(i64 4096) #16
  %48 = bitcast i64** %3 to i8**
  store i8* %47, i8** %48, align 8
  call void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.95"* %35, i64** nonnull dereferenceable(8) %3)
  br label %59

49:                                               ; preds = %43
  %50 = bitcast i64** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #15
  %51 = tail call i8* @_Znwm(i64 4096) #16
  %52 = bitcast i64** %4 to i8**
  store i8* %51, i8** %52, align 8
  call void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.95"* %35, i64** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #15
  %53 = bitcast i64** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #15
  store i64* inttoptr (i64 -6148914691236517206 to i64*), i64** %5, align 8
  %54 = load i64**, i64*** %6, align 8
  %55 = getelementptr i64*, i64** %54, i64 -1
  %56 = bitcast i64** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i64** %5 to i64*
  store i64 %57, i64* %58, align 8
  store i64** %55, i64*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.95"* %35, i64** nonnull dereferenceable(8) %5)
  br label %59

59:                                               ; preds = %49, %45
  %60 = phi i8* [ %53, %49 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  %61 = load i64, i64* %7, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 8
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = load i64, i64* %17, align 8
  %67 = add i64 %66, 512
  br label %68

68:                                               ; preds = %59, %65
  %69 = phi i64 [ %67, %65 ], [ 256, %59 ]
  store i64 %69, i64* %17, align 8
  br label %282

70:                                               ; preds = %34
  %71 = ashr exact i64 %41, 2
  %72 = icmp eq i64 %41, 0
  %73 = select i1 %72, i64 1, i64 %71
  %74 = icmp ugt i64 %73, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  tail call void @abort() #17
  unreachable

76:                                               ; preds = %70
  %77 = shl i64 %73, 3
  %78 = tail call i8* @_Znwm(i64 %77) #16
  %79 = bitcast i8* %78 to i64**
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds i64*, i64** %79, i64 %73
  %82 = ptrtoint i64** %81 to i64
  %83 = tail call i8* @_Znwm(i64 4096) #16
  %84 = ptrtoint i8* %83 to i64
  %85 = icmp eq i64** %81, %79
  %86 = bitcast i8* %78 to i64*
  br i1 %85, label %87, label %107

87:                                               ; preds = %76
  %88 = sub i64 %82, %80
  %89 = ashr exact i64 %88, 2
  %90 = icmp eq i64 %88, 0
  %91 = select i1 %90, i64 1, i64 %89
  %92 = icmp ugt i64 %91, 2305843009213693951
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  tail call void @abort() #17
  unreachable

94:                                               ; preds = %87
  %95 = lshr i64 %91, 2
  %96 = shl i64 %91, 3
  %97 = tail call i8* @_Znwm(i64 %96) #16
  %98 = bitcast i8* %97 to i64**
  %99 = ptrtoint i8* %97 to i64
  %100 = getelementptr inbounds i64*, i64** %98, i64 %95
  %101 = ptrtoint i64** %100 to i64
  %102 = getelementptr inbounds i64*, i64** %98, i64 %91
  %103 = ptrtoint i64** %102 to i64
  %104 = bitcast i64** %100 to i64*
  tail call void @_ZdlPv(i8* nonnull %78) #16
  %105 = load i64**, i64*** %9, align 8
  %106 = load i64**, i64*** %6, align 8
  br label %107

107:                                              ; preds = %76, %94
  %108 = phi i64** [ %106, %94 ], [ %25, %76 ]
  %109 = phi i64** [ %105, %94 ], [ %24, %76 ]
  %110 = phi i64 [ %103, %94 ], [ %82, %76 ]
  %111 = phi i64 [ %101, %94 ], [ %80, %76 ]
  %112 = phi i64 [ %99, %94 ], [ %80, %76 ]
  %113 = phi i64* [ %104, %94 ], [ %86, %76 ]
  store i64 %84, i64* %113, align 8
  %114 = inttoptr i64 %111 to i64**
  %115 = getelementptr inbounds i64*, i64** %114, i64 1
  %116 = ptrtoint i64** %115 to i64
  %117 = icmp eq i64** %109, %108
  br i1 %117, label %120, label %129

118:                                              ; preds = %261
  %119 = ptrtoint i64** %270 to i64
  br label %120

120:                                              ; preds = %118, %107
  %121 = phi i64 [ %110, %107 ], [ %262, %118 ]
  %122 = phi i64 [ %111, %107 ], [ %264, %118 ]
  %123 = phi i64 [ %112, %107 ], [ %265, %118 ]
  %124 = phi i64 [ %116, %107 ], [ %119, %118 ]
  %125 = getelementptr inbounds %"class.std::__1::deque.93", %"class.std::__1::deque.93"* %0, i64 0, i32 0, i32 0, i32 0
  %126 = load i64**, i64*** %125, align 8
  store i64 %123, i64* %39, align 8
  store i64 %122, i64* %10, align 8
  store i64 %124, i64* %7, align 8
  store i64 %121, i64* %37, align 8
  %127 = sub i64 %124, %122
  %128 = icmp eq i64 %127, 8
  br i1 %128, label %277, label %274

129:                                              ; preds = %107, %261
  %130 = phi i64 [ %271, %261 ], [ %116, %107 ]
  %131 = phi i64** [ %270, %261 ], [ %115, %107 ]
  %132 = phi i64** [ %269, %261 ], [ %109, %107 ]
  %133 = phi i64 [ %265, %261 ], [ %112, %107 ]
  %134 = phi i64 [ %264, %261 ], [ %111, %107 ]
  %135 = phi i64 [ %262, %261 ], [ %110, %107 ]
  %136 = inttoptr i64 %135 to i64**
  %137 = icmp eq i64** %131, %136
  %138 = bitcast i64** %131 to i64*
  br i1 %137, label %139, label %261

139:                                              ; preds = %129
  %140 = inttoptr i64 %134 to i64**
  %141 = inttoptr i64 %133 to i64**
  %142 = icmp ugt i64** %140, %141
  br i1 %142, label %143, label %159

143:                                              ; preds = %139
  %144 = sub i64 %134, %133
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = sdiv i64 %146, -2
  %148 = getelementptr inbounds i64*, i64** %140, i64 %147
  %149 = sub i64 %130, %134
  %150 = ashr exact i64 %149, 3
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %143
  %153 = bitcast i64** %148 to i8*
  %154 = inttoptr i64 %134 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %149, i1 false) #15
  br label %155

155:                                              ; preds = %152, %143
  %156 = getelementptr inbounds i64*, i64** %148, i64 %150
  %157 = ptrtoint i64** %148 to i64
  %158 = bitcast i64** %156 to i64*
  br label %261

159:                                              ; preds = %139
  %160 = sub i64 %135, %133
  %161 = ashr exact i64 %160, 2
  %162 = icmp eq i64 %160, 0
  %163 = select i1 %162, i64 1, i64 %161
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %166

165:                                              ; preds = %159
  tail call void @abort() #17
  unreachable

166:                                              ; preds = %159
  %167 = lshr i64 %163, 2
  %168 = shl i64 %163, 3
  %169 = tail call i8* @_Znwm(i64 %168) #16
  %170 = bitcast i8* %169 to i64**
  %171 = ptrtoint i8* %169 to i64
  %172 = getelementptr inbounds i64*, i64** %170, i64 %167
  %173 = ptrtoint i64** %172 to i64
  %174 = getelementptr inbounds i64*, i64** %170, i64 %163
  %175 = ptrtoint i64** %174 to i64
  %176 = sub i64 %130, %134
  %177 = ashr exact i64 %176, 3
  %178 = getelementptr inbounds i64*, i64** %172, i64 %177
  %179 = icmp eq i64 %176, 0
  br i1 %179, label %254, label %180

180:                                              ; preds = %166
  %181 = add i64 %176, -8
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %201, label %186

186:                                              ; preds = %180, %186
  %187 = phi i64** [ %194, %186 ], [ %172, %180 ]
  %188 = phi i64 [ %195, %186 ], [ %173, %180 ]
  %189 = phi i64** [ %196, %186 ], [ %140, %180 ]
  %190 = phi i64 [ %197, %186 ], [ %184, %180 ]
  %191 = bitcast i64** %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = inttoptr i64 %188 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds i64*, i64** %187, i64 1
  %195 = ptrtoint i64** %194 to i64
  %196 = getelementptr inbounds i64*, i64** %189, i64 1
  %197 = add i64 %190, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %186, !llvm.loop !74

199:                                              ; preds = %186
  %200 = ptrtoint i64** %194 to i64
  br label %201

201:                                              ; preds = %180, %199
  %202 = phi i64** [ %172, %180 ], [ %194, %199 ]
  %203 = phi i64 [ %173, %180 ], [ %200, %199 ]
  %204 = phi i64** [ %140, %180 ], [ %196, %199 ]
  %205 = icmp ult i64 %181, 56
  br i1 %205, label %252, label %206

206:                                              ; preds = %201, %206
  %207 = phi i64** [ %248, %206 ], [ %202, %201 ]
  %208 = phi i64 [ %249, %206 ], [ %203, %201 ]
  %209 = phi i64** [ %250, %206 ], [ %204, %201 ]
  %210 = bitcast i64** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = inttoptr i64 %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds i64*, i64** %207, i64 1
  %214 = getelementptr inbounds i64*, i64** %209, i64 1
  %215 = bitcast i64** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast i64** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds i64*, i64** %207, i64 2
  %219 = getelementptr inbounds i64*, i64** %209, i64 2
  %220 = bitcast i64** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast i64** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds i64*, i64** %207, i64 3
  %224 = getelementptr inbounds i64*, i64** %209, i64 3
  %225 = bitcast i64** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast i64** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds i64*, i64** %207, i64 4
  %229 = getelementptr inbounds i64*, i64** %209, i64 4
  %230 = bitcast i64** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast i64** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds i64*, i64** %207, i64 5
  %234 = getelementptr inbounds i64*, i64** %209, i64 5
  %235 = bitcast i64** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast i64** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds i64*, i64** %207, i64 6
  %239 = getelementptr inbounds i64*, i64** %209, i64 6
  %240 = bitcast i64** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast i64** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds i64*, i64** %207, i64 7
  %244 = getelementptr inbounds i64*, i64** %209, i64 7
  %245 = bitcast i64** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast i64** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds i64*, i64** %207, i64 8
  %249 = ptrtoint i64** %248 to i64
  %250 = getelementptr inbounds i64*, i64** %209, i64 8
  %251 = icmp eq i64** %178, %248
  br i1 %251, label %252, label %206

252:                                              ; preds = %206, %201
  %253 = ptrtoint i64** %178 to i64
  br label %254

254:                                              ; preds = %252, %166
  %255 = phi i64 [ %253, %252 ], [ %173, %166 ]
  %256 = inttoptr i64 %255 to i64**
  %257 = icmp eq i64 %133, 0
  %258 = inttoptr i64 %255 to i64*
  br i1 %257, label %261, label %259

259:                                              ; preds = %254
  %260 = inttoptr i64 %133 to i8*
  tail call void @_ZdlPv(i8* %260) #16
  br label %261

261:                                              ; preds = %129, %155, %254, %259
  %262 = phi i64 [ %135, %155 ], [ %175, %254 ], [ %175, %259 ], [ %135, %129 ]
  %263 = phi i64** [ %156, %155 ], [ %256, %254 ], [ %256, %259 ], [ %131, %129 ]
  %264 = phi i64 [ %157, %155 ], [ %173, %254 ], [ %173, %259 ], [ %134, %129 ]
  %265 = phi i64 [ %133, %155 ], [ %171, %254 ], [ %171, %259 ], [ %133, %129 ]
  %266 = phi i64* [ %158, %155 ], [ %258, %254 ], [ %258, %259 ], [ %138, %129 ]
  %267 = bitcast i64** %132 to i64*
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %266, align 8
  %269 = getelementptr inbounds i64*, i64** %132, i64 1
  %270 = getelementptr inbounds i64*, i64** %263, i64 1
  %271 = ptrtoint i64** %270 to i64
  %272 = load i64**, i64*** %6, align 8
  %273 = icmp eq i64** %269, %272
  br i1 %273, label %118, label %129

274:                                              ; preds = %120
  %275 = load i64, i64* %17, align 8
  %276 = add i64 %275, 512
  br label %277

277:                                              ; preds = %274, %120
  %278 = phi i64 [ %276, %274 ], [ 256, %120 ]
  store i64 %278, i64* %17, align 8
  %279 = icmp eq i64** %126, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = bitcast i64** %126 to i8*
  tail call void @_ZdlPv(i8* %281) #16
  br label %282

282:                                              ; preds = %280, %277, %68, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64**, i64* } @_ZNSt3__15dequeIlNS_9allocatorIlEEE16__move_and_checkENS_16__deque_iteratorIlPlRlPS5_lLl0EEES8_S8_RPKl(%"class.std::__1::deque.93"*, i64**, i64*, i64**, i64*, %"class.std::__1::__deque_iterator.390"* byval(%"class.std::__1::__deque_iterator.390") align 8, i64** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = ptrtoint i64* %2 to i64
  %9 = icmp eq i64* %4, %2
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = ptrtoint i64* %4 to i64
  %12 = ptrtoint i64** %3 to i64
  %13 = ptrtoint i64** %1 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 6
  %16 = bitcast i64** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %17
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, %15
  %21 = bitcast i64** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %8, %22
  %24 = ashr exact i64 %23, 3
  %25 = sub i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %7, %10
  %28 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %5, i64 0, i32 0
  %29 = load i64**, i64*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %5, i64 0, i32 1
  %31 = load i64*, i64** %30, align 8
  br label %195

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %5, i64 0, i32 0
  %35 = bitcast i64** %6 to i64*
  %36 = bitcast i64** %33 to i64*
  br label %37

37:                                               ; preds = %32, %189
  %38 = phi i64 [ %25, %32 ], [ %164, %189 ]
  %39 = phi i64 [ %8, %32 ], [ %191, %189 ]
  %40 = phi i64** [ %1, %32 ], [ %190, %189 ]
  %41 = inttoptr i64 %39 to i64*
  %42 = load i64*, i64** %40, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 512
  %44 = ptrtoint i64* %43 to i64
  %45 = sub i64 %44, %39
  %46 = ashr exact i64 %45, 3
  %47 = icmp sgt i64 %46, %38
  %48 = getelementptr inbounds i64, i64* %41, i64 %38
  %49 = select i1 %47, i64 %38, i64 %46
  %50 = select i1 %47, i64* %48, i64* %43
  %51 = load i64*, i64** %6, align 8
  %52 = icmp uge i64* %51, %41
  %53 = icmp ult i64* %51, %50
  %54 = and i1 %52, %53
  %55 = ptrtoint i64* %42 to i64
  br i1 %54, label %58, label %56

56:                                               ; preds = %37
  %57 = load i64, i64* %36, align 8
  br label %103

58:                                               ; preds = %37
  %59 = load i64*, i64** %33, align 8
  %60 = icmp eq i64* %59, %41
  %61 = ptrtoint i64* %59 to i64
  br i1 %60, label %62, label %64

62:                                               ; preds = %58
  %63 = ptrtoint i64* %51 to i64
  br label %101

64:                                               ; preds = %58
  %65 = load i64**, i64*** %34, align 8
  %66 = ptrtoint i64** %40 to i64
  %67 = ptrtoint i64** %65 to i64
  %68 = sub i64 %66, %67
  %69 = shl i64 %68, 6
  %70 = sub i64 %39, %55
  %71 = ashr exact i64 %70, 3
  %72 = add nsw i64 %71, %69
  %73 = bitcast i64** %65 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %61, %74
  %76 = ashr exact i64 %75, 3
  %77 = sub i64 %72, %76
  %78 = ptrtoint i64* %51 to i64
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %101, label %80

80:                                               ; preds = %64
  %81 = sub i64 %78, %55
  %82 = ashr exact i64 %81, 3
  %83 = sub i64 %82, %77
  %84 = icmp sgt i64 %83, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %80
  %86 = lshr i64 %83, 9
  %87 = getelementptr inbounds i64*, i64** %40, i64 %86
  %88 = load i64*, i64** %87, align 8
  %89 = and i64 %83, 511
  %90 = getelementptr inbounds i64, i64* %88, i64 %89
  %91 = ptrtoint i64* %90 to i64
  br label %101

92:                                               ; preds = %80
  %93 = sub nsw i64 511, %83
  %94 = sdiv i64 %93, -512
  %95 = getelementptr inbounds i64*, i64** %40, i64 %94
  %96 = load i64*, i64** %95, align 8
  %97 = srem i64 %93, 512
  %98 = sub nsw i64 511, %97
  %99 = getelementptr inbounds i64, i64* %96, i64 %98
  %100 = ptrtoint i64* %99 to i64
  br label %101

101:                                              ; preds = %62, %64, %85, %92
  %102 = phi i64 [ %78, %64 ], [ %91, %85 ], [ %100, %92 ], [ %63, %62 ]
  store i64 %102, i64* %35, align 8
  br label %103

103:                                              ; preds = %56, %101
  %104 = phi i64 [ %57, %56 ], [ %61, %101 ]
  %105 = load i64**, i64*** %34, align 8
  %106 = icmp eq i64* %50, %41
  br i1 %106, label %160, label %107

107:                                              ; preds = %103
  %108 = ptrtoint i64* %50 to i64
  br label %109

109:                                              ; preds = %156, %107
  %110 = phi i64* [ %41, %107 ], [ %124, %156 ]
  %111 = phi i64** [ %105, %107 ], [ %158, %156 ]
  %112 = phi i64 [ %104, %107 ], [ %157, %156 ]
  %113 = load i64*, i64** %111, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 512
  %115 = ptrtoint i64* %114 to i64
  %116 = sub i64 %115, %112
  %117 = ashr exact i64 %116, 3
  %118 = ptrtoint i64* %110 to i64
  %119 = sub i64 %108, %118
  %120 = ashr exact i64 %119, 3
  %121 = icmp sgt i64 %120, %117
  %122 = getelementptr inbounds i64, i64* %110, i64 %117
  %123 = select i1 %121, i64 %117, i64 %120
  %124 = select i1 %121, i64* %122, i64* %50
  %125 = ptrtoint i64* %124 to i64
  %126 = sub i64 %125, %118
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %109
  %129 = inttoptr i64 %112 to i8*
  %130 = bitcast i64* %110 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 %126, i1 false) #15
  br label %131

131:                                              ; preds = %128, %109
  %132 = icmp eq i64 %123, 0
  br i1 %132, label %156, label %133

133:                                              ; preds = %131
  %134 = bitcast i64** %111 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %112, %135
  %137 = ashr exact i64 %136, 3
  %138 = add nsw i64 %137, %123
  %139 = icmp sgt i64 %138, 0
  br i1 %139, label %140, label %147

140:                                              ; preds = %133
  %141 = lshr i64 %138, 9
  %142 = getelementptr inbounds i64*, i64** %111, i64 %141
  %143 = load i64*, i64** %142, align 8
  %144 = and i64 %138, 511
  %145 = getelementptr inbounds i64, i64* %143, i64 %144
  %146 = ptrtoint i64* %145 to i64
  br label %156

147:                                              ; preds = %133
  %148 = sub nsw i64 511, %138
  %149 = sdiv i64 %148, -512
  %150 = getelementptr inbounds i64*, i64** %111, i64 %149
  %151 = load i64*, i64** %150, align 8
  %152 = srem i64 %148, 512
  %153 = sub nuw nsw i64 511, %152
  %154 = getelementptr inbounds i64, i64* %151, i64 %153
  %155 = ptrtoint i64* %154 to i64
  br label %156

156:                                              ; preds = %147, %140, %131
  %157 = phi i64 [ %112, %131 ], [ %146, %140 ], [ %155, %147 ]
  %158 = phi i64** [ %111, %131 ], [ %142, %140 ], [ %150, %147 ]
  %159 = icmp eq i64* %124, %50
  br i1 %159, label %160, label %109

160:                                              ; preds = %156, %103
  %161 = phi i64 [ %104, %103 ], [ %157, %156 ]
  %162 = phi i64** [ %105, %103 ], [ %158, %156 ]
  %163 = inttoptr i64 %161 to i64*
  store i64** %162, i64*** %34, align 8
  store i64* %163, i64** %33, align 8
  %164 = sub nsw i64 %38, %49
  %165 = icmp eq i64 %49, 0
  br i1 %165, label %189, label %166

166:                                              ; preds = %160
  %167 = bitcast i64** %40 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %39, %168
  %170 = ashr exact i64 %169, 3
  %171 = add nsw i64 %170, %49
  %172 = icmp sgt i64 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %166
  %174 = lshr i64 %171, 9
  %175 = getelementptr inbounds i64*, i64** %40, i64 %174
  %176 = load i64*, i64** %175, align 8
  %177 = and i64 %171, 511
  %178 = getelementptr inbounds i64, i64* %176, i64 %177
  %179 = ptrtoint i64* %178 to i64
  br label %189

180:                                              ; preds = %166
  %181 = sub nsw i64 511, %171
  %182 = sdiv i64 %181, -512
  %183 = getelementptr inbounds i64*, i64** %40, i64 %182
  %184 = load i64*, i64** %183, align 8
  %185 = srem i64 %181, 512
  %186 = sub nsw i64 511, %185
  %187 = getelementptr inbounds i64, i64* %184, i64 %186
  %188 = ptrtoint i64* %187 to i64
  br label %189

189:                                              ; preds = %160, %173, %180
  %190 = phi i64** [ %40, %160 ], [ %175, %173 ], [ %183, %180 ]
  %191 = phi i64 [ %39, %160 ], [ %179, %173 ], [ %188, %180 ]
  %192 = icmp sgt i64 %164, 0
  br i1 %192, label %37, label %193

193:                                              ; preds = %189
  %194 = inttoptr i64 %161 to i64*
  br label %195

195:                                              ; preds = %193, %27
  %196 = phi i64* [ %31, %27 ], [ %194, %193 ]
  %197 = phi i64** [ %29, %27 ], [ %162, %193 ]
  %198 = insertvalue { i64**, i64* } undef, i64** %197, 0
  %199 = insertvalue { i64**, i64* } %198, i64* %196, 1
  ret { i64**, i64* } %199
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64**, i64* } @_ZNSt3__15dequeIlNS_9allocatorIlEEE25__move_backward_and_checkENS_16__deque_iteratorIlPlRlPS5_lLl0EEES8_S8_RPKl(%"class.std::__1::deque.93"*, i64**, i64*, i64**, i64*, %"class.std::__1::__deque_iterator.390"* byval(%"class.std::__1::__deque_iterator.390") align 8, i64** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = ptrtoint i64* %4 to i64
  %9 = icmp eq i64* %4, %2
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = ptrtoint i64* %2 to i64
  %12 = ptrtoint i64** %3 to i64
  %13 = ptrtoint i64** %1 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 6
  %16 = bitcast i64** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, %15
  %21 = bitcast i64** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %11, %22
  %24 = ashr exact i64 %23, 3
  %25 = sub i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %7, %10
  %28 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %5, i64 0, i32 0
  %29 = load i64**, i64*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %5, i64 0, i32 1
  %31 = load i64*, i64** %30, align 8
  br label %242

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__deque_iterator.390", %"class.std::__1::__deque_iterator.390"* %5, i64 0, i32 0
  %35 = bitcast i64** %6 to i64*
  %36 = bitcast i64** %33 to i64*
  br label %37

37:                                               ; preds = %32, %236
  %38 = phi i64 [ %25, %32 ], [ %210, %236 ]
  %39 = phi i64** [ %3, %32 ], [ %238, %236 ]
  %40 = phi i64 [ %8, %32 ], [ %237, %236 ]
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64*, i64** %39, align 8
  %43 = icmp eq i64* %42, %41
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = getelementptr inbounds i64*, i64** %39, i64 -1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 512
  br label %48

48:                                               ; preds = %37, %44
  %49 = phi i64* [ %46, %44 ], [ %42, %37 ]
  %50 = phi i64** [ %45, %44 ], [ %39, %37 ]
  %51 = phi i64* [ %47, %44 ], [ %41, %37 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 -1
  %53 = ptrtoint i64* %52 to i64
  %54 = ptrtoint i64* %51 to i64
  %55 = ptrtoint i64* %49 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp sgt i64 %57, %38
  %59 = sub nsw i64 0, %38
  %60 = getelementptr inbounds i64, i64* %51, i64 %59
  %61 = select i1 %58, i64 %38, i64 %57
  %62 = select i1 %58, i64* %60, i64* %49
  %63 = load i64*, i64** %6, align 8
  %64 = icmp ule i64* %62, %63
  %65 = icmp ult i64* %63, %51
  %66 = and i1 %65, %64
  br i1 %66, label %69, label %67

67:                                               ; preds = %48
  %68 = load i64, i64* %36, align 8
  br label %122

69:                                               ; preds = %48
  %70 = load i64*, i64** %33, align 8
  %71 = icmp eq i64* %70, %52
  %72 = ptrtoint i64* %70 to i64
  br i1 %71, label %73, label %77

73:                                               ; preds = %69
  %74 = ptrtoint i64* %63 to i64
  %75 = bitcast i64** %50 to i64*
  %76 = load i64, i64* %75, align 8
  br label %96

77:                                               ; preds = %69
  %78 = load i64**, i64*** %34, align 8
  %79 = ptrtoint i64** %78 to i64
  %80 = ptrtoint i64** %50 to i64
  %81 = sub i64 %79, %80
  %82 = shl i64 %81, 6
  %83 = bitcast i64** %78 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %72, %84
  %86 = ashr exact i64 %85, 3
  %87 = add nsw i64 %86, %82
  %88 = bitcast i64** %50 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %53, %89
  %91 = ashr exact i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add i64 %87, %92
  %94 = ptrtoint i64* %63 to i64
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %120, label %96

96:                                               ; preds = %73, %77
  %97 = phi i64 [ %76, %73 ], [ %89, %77 ]
  %98 = phi i64 [ %74, %73 ], [ %94, %77 ]
  %99 = phi i64 [ -1, %73 ], [ %93, %77 ]
  %100 = sub i64 %98, %97
  %101 = ashr exact i64 %100, 3
  %102 = add nsw i64 %101, %99
  %103 = icmp sgt i64 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %96
  %105 = lshr i64 %102, 9
  %106 = getelementptr inbounds i64*, i64** %50, i64 %105
  %107 = load i64*, i64** %106, align 8
  %108 = and i64 %102, 511
  %109 = getelementptr inbounds i64, i64* %107, i64 %108
  %110 = ptrtoint i64* %109 to i64
  br label %120

111:                                              ; preds = %96
  %112 = sub nsw i64 511, %102
  %113 = sdiv i64 %112, -512
  %114 = getelementptr inbounds i64*, i64** %50, i64 %113
  %115 = load i64*, i64** %114, align 8
  %116 = srem i64 %112, 512
  %117 = sub nsw i64 511, %116
  %118 = getelementptr inbounds i64, i64* %115, i64 %117
  %119 = ptrtoint i64* %118 to i64
  br label %120

120:                                              ; preds = %77, %104, %111
  %121 = phi i64 [ %94, %77 ], [ %110, %104 ], [ %119, %111 ]
  store i64 %121, i64* %35, align 8
  br label %122

122:                                              ; preds = %67, %120
  %123 = phi i64 [ %68, %67 ], [ %72, %120 ]
  %124 = load i64**, i64*** %34, align 8
  %125 = icmp eq i64* %51, %62
  br i1 %125, label %206, label %126

126:                                              ; preds = %122
  %127 = ptrtoint i64* %62 to i64
  br label %128

128:                                              ; preds = %202, %126
  %129 = phi i64* [ %51, %126 ], [ %168, %202 ]
  %130 = phi i64** [ %124, %126 ], [ %204, %202 ]
  %131 = phi i64 [ %123, %126 ], [ %203, %202 ]
  %132 = bitcast i64** %130 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 3
  %136 = add nsw i64 %135, -1
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %144

138:                                              ; preds = %128
  %139 = lshr i64 %136, 9
  %140 = getelementptr inbounds i64*, i64** %130, i64 %139
  %141 = load i64*, i64** %140, align 8
  %142 = and i64 %136, 511
  %143 = getelementptr inbounds i64, i64* %141, i64 %142
  br label %152

144:                                              ; preds = %128
  %145 = sub nsw i64 512, %135
  %146 = sdiv i64 %145, -512
  %147 = getelementptr inbounds i64*, i64** %130, i64 %146
  %148 = load i64*, i64** %147, align 8
  %149 = srem i64 %145, 512
  %150 = sub nuw nsw i64 511, %149
  %151 = getelementptr inbounds i64, i64* %148, i64 %150
  br label %152

152:                                              ; preds = %144, %138
  %153 = phi i64* [ %143, %138 ], [ %151, %144 ]
  %154 = phi i64** [ %140, %138 ], [ %147, %144 ]
  %155 = bitcast i64** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds i64, i64* %153, i64 1
  %158 = ptrtoint i64* %157 to i64
  %159 = sub i64 %158, %156
  %160 = ashr exact i64 %159, 3
  %161 = ptrtoint i64* %129 to i64
  %162 = sub i64 %161, %127
  %163 = ashr exact i64 %162, 3
  %164 = icmp sgt i64 %163, %160
  %165 = sub nsw i64 0, %160
  %166 = getelementptr inbounds i64, i64* %129, i64 %165
  %167 = select i1 %164, i64 %160, i64 %163
  %168 = select i1 %164, i64* %166, i64* %62
  %169 = ptrtoint i64* %168 to i64
  %170 = sub i64 %161, %169
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %152
  %173 = ashr exact i64 %170, 3
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds i64, i64* %157, i64 %174
  %176 = bitcast i64* %175 to i8*
  %177 = bitcast i64* %168 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 %170, i1 false) #15
  br label %178

178:                                              ; preds = %172, %152
  %179 = icmp eq i64 %167, 0
  br i1 %179, label %202, label %180

180:                                              ; preds = %178
  %181 = load i64, i64* %132, align 8
  %182 = sub i64 %131, %181
  %183 = ashr exact i64 %182, 3
  %184 = sub nsw i64 %183, %167
  %185 = icmp sgt i64 %184, 0
  br i1 %185, label %186, label %193

186:                                              ; preds = %180
  %187 = lshr i64 %184, 9
  %188 = getelementptr inbounds i64*, i64** %130, i64 %187
  %189 = load i64*, i64** %188, align 8
  %190 = and i64 %184, 511
  %191 = getelementptr inbounds i64, i64* %189, i64 %190
  %192 = ptrtoint i64* %191 to i64
  br label %202

193:                                              ; preds = %180
  %194 = sub nsw i64 511, %184
  %195 = sdiv i64 %194, -512
  %196 = getelementptr inbounds i64*, i64** %130, i64 %195
  %197 = load i64*, i64** %196, align 8
  %198 = srem i64 %194, 512
  %199 = sub nuw nsw i64 511, %198
  %200 = getelementptr inbounds i64, i64* %197, i64 %199
  %201 = ptrtoint i64* %200 to i64
  br label %202

202:                                              ; preds = %193, %186, %178
  %203 = phi i64 [ %131, %178 ], [ %192, %186 ], [ %201, %193 ]
  %204 = phi i64** [ %130, %178 ], [ %188, %186 ], [ %196, %193 ]
  %205 = icmp eq i64* %168, %62
  br i1 %205, label %206, label %128

206:                                              ; preds = %202, %122
  %207 = phi i64 [ %123, %122 ], [ %203, %202 ]
  %208 = phi i64** [ %124, %122 ], [ %204, %202 ]
  %209 = inttoptr i64 %207 to i64*
  store i64** %208, i64*** %34, align 8
  store i64* %209, i64** %33, align 8
  %210 = sub nsw i64 %38, %61
  %211 = add nsw i64 %61, -1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %236, label %213

213:                                              ; preds = %206
  %214 = bitcast i64** %50 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %53, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub i64 %217, %211
  %219 = icmp sgt i64 %218, 0
  br i1 %219, label %220, label %227

220:                                              ; preds = %213
  %221 = lshr i64 %218, 9
  %222 = getelementptr inbounds i64*, i64** %50, i64 %221
  %223 = load i64*, i64** %222, align 8
  %224 = and i64 %218, 511
  %225 = getelementptr inbounds i64, i64* %223, i64 %224
  %226 = ptrtoint i64* %225 to i64
  br label %236

227:                                              ; preds = %213
  %228 = sub nsw i64 511, %218
  %229 = sdiv i64 %228, -512
  %230 = getelementptr inbounds i64*, i64** %50, i64 %229
  %231 = load i64*, i64** %230, align 8
  %232 = srem i64 %228, 512
  %233 = sub nsw i64 511, %232
  %234 = getelementptr inbounds i64, i64* %231, i64 %233
  %235 = ptrtoint i64* %234 to i64
  br label %236

236:                                              ; preds = %206, %220, %227
  %237 = phi i64 [ %53, %206 ], [ %226, %220 ], [ %235, %227 ]
  %238 = phi i64** [ %50, %206 ], [ %222, %220 ], [ %230, %227 ]
  %239 = icmp sgt i64 %210, 0
  br i1 %239, label %37, label %240

240:                                              ; preds = %236
  %241 = inttoptr i64 %207 to i64*
  br label %242

242:                                              ; preds = %240, %27
  %243 = phi i64* [ %31, %27 ], [ %241, %240 ]
  %244 = phi i64** [ %29, %27 ], [ %208, %240 ]
  %245 = insertvalue { i64**, i64* } undef, i64** %244, 0
  %246 = insertvalue { i64**, i64* } %245, i64* %243, 1
  ret { i64**, i64* } %246
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPlNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.95"*, i64** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 1
  %4 = load i64**, i64*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 0
  %6 = load i64**, i64*** %5, align 8
  %7 = icmp eq i64** %4, %6
  %8 = ptrtoint i64** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 2
  %11 = load i64**, i64*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.95", %"struct.std::__1::__split_buffer.95"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i64**, i64*** %12, align 8
  %14 = icmp ult i64** %11, %13
  %15 = bitcast i64*** %12 to i64*
  %16 = ptrtoint i64** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i64** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i64*, i64** %11, i64 %22
  %24 = ptrtoint i64** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i64*, i64** %23, i64 %29
  %31 = bitcast i64** %30 to i8*
  %32 = bitcast i64** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load i64**, i64*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i64** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i64** [ %30, %27 ], [ %23, %17 ]
  store i64** %36, i64*** %3, align 8
  %37 = getelementptr inbounds i64*, i64** %35, i64 %22
  store i64** %37, i64*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.95"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to i64**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i64*, i64** %51, i64 %48
  %54 = ptrtoint i64** %53 to i64
  %55 = getelementptr inbounds i64*, i64** %51, i64 %43
  %56 = ptrtoint i64** %55 to i64
  %57 = ptrtoint i64** %4 to i64
  %58 = ptrtoint i64** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i64*, i64** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i64** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i64** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i64** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i64*, i64** %70, i64 1
  %78 = ptrtoint i64** %77 to i64
  %79 = getelementptr inbounds i64*, i64** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !75

82:                                               ; preds = %69
  %83 = ptrtoint i64** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i64** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i64** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i64** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i64** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i64** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i64*, i64** %90, i64 1
  %97 = getelementptr inbounds i64*, i64** %92, i64 1
  %98 = bitcast i64** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i64** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i64*, i64** %90, i64 2
  %102 = getelementptr inbounds i64*, i64** %92, i64 2
  %103 = bitcast i64** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i64** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i64*, i64** %90, i64 3
  %107 = getelementptr inbounds i64*, i64** %92, i64 3
  %108 = bitcast i64** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i64** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i64*, i64** %90, i64 4
  %112 = getelementptr inbounds i64*, i64** %92, i64 4
  %113 = bitcast i64** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i64** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i64*, i64** %90, i64 5
  %117 = getelementptr inbounds i64*, i64** %92, i64 5
  %118 = bitcast i64** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i64** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i64*, i64** %90, i64 6
  %122 = getelementptr inbounds i64*, i64** %92, i64 6
  %123 = bitcast i64** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i64** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i64*, i64** %90, i64 7
  %127 = getelementptr inbounds i64*, i64** %92, i64 7
  %128 = bitcast i64** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i64** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i64*, i64** %90, i64 8
  %132 = ptrtoint i64** %131 to i64
  %133 = getelementptr inbounds i64*, i64** %92, i64 8
  %134 = icmp eq i64** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i64** %61 to i64
  %137 = load i64**, i64*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i64** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i64*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i64*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i64** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i64** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load i64**, i64*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i64** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i64*, i64** %148, i64 -1
  %150 = bitcast i64** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i64** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i64**, i64*** %3, align 8
  %154 = getelementptr inbounds i64*, i64** %153, i64 -1
  store i64** %154, i64*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { double**, double* } @_ZNSt3__15dequeIdNS_9allocatorIdEEE6insertENS_16__deque_iteratorIdPKdRS5_PKS6_lLl0EEES7_(%"class.std::__1::deque.132"*, double**, double*, double* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca double*, align 8
  %6 = alloca %"class.std::__1::__deque_iterator.401", align 8
  %7 = alloca double*, align 8
  %8 = alloca %"class.std::__1::__deque_iterator.401", align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load double**, double*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 9
  %14 = getelementptr inbounds double*, double** %10, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load double**, double*** %15, align 8
  %17 = icmp eq double** %16, %10
  %18 = ptrtoint double** %16 to i64
  %19 = ptrtoint double** %10 to i64
  br i1 %17, label %24, label %20

20:                                               ; preds = %4
  %21 = load double*, double** %14, align 8
  %22 = and i64 %12, 511
  %23 = getelementptr inbounds double, double* %21, i64 %22
  br label %24

24:                                               ; preds = %4, %20
  %25 = phi double* [ %23, %20 ], [ null, %4 ]
  %26 = icmp eq double* %25, %2
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = ptrtoint double* %25 to i64
  %29 = ptrtoint double** %14 to i64
  %30 = ptrtoint double* %2 to i64
  %31 = ptrtoint double** %1 to i64
  %32 = sub i64 %31, %29
  %33 = shl i64 %32, 6
  %34 = bitcast double** %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %30, %35
  %37 = ashr exact i64 %36, 3
  %38 = add nsw i64 %37, %33
  %39 = bitcast double** %14 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %28, %40
  %42 = ashr exact i64 %41, 3
  %43 = sub i64 %38, %42
  br label %44

44:                                               ; preds = %24, %27
  %45 = phi i64 [ %43, %27 ], [ 0, %24 ]
  %46 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ult i64 %45, %48
  br i1 %49, label %50, label %188

50:                                               ; preds = %44
  %51 = icmp eq i64 %12, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @_ZNSt3__15dequeIdNS_9allocatorIdEEE20__add_front_capacityEv(%"class.std::__1::deque.132"* %0)
  br label %53

53:                                               ; preds = %52, %50
  %54 = icmp eq i64 %45, 0
  br i1 %54, label %55, label %81

55:                                               ; preds = %53
  %56 = load double**, double*** %9, align 8
  %57 = load i64, i64* %11, align 8
  %58 = lshr i64 %57, 9
  %59 = getelementptr inbounds double*, double** %56, i64 %58
  %60 = load double**, double*** %15, align 8
  %61 = icmp eq double** %60, %56
  %62 = load double*, double** %59, align 8
  %63 = and i64 %57, 511
  %64 = getelementptr inbounds double, double* %62, i64 %63
  %65 = select i1 %61, double* null, double* %64
  %66 = icmp eq double* %65, %62
  br i1 %66, label %67, label %71

67:                                               ; preds = %55
  %68 = getelementptr inbounds double*, double** %59, i64 -1
  %69 = load double*, double** %68, align 8
  %70 = getelementptr inbounds double, double* %69, i64 512
  br label %71

71:                                               ; preds = %55, %67
  %72 = phi double* [ %70, %67 ], [ %65, %55 ]
  %73 = getelementptr inbounds double, double* %72, i64 -1
  %74 = bitcast double* %3 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast double* %73 to i64*
  store i64 %75, i64* %76, align 8
  %77 = bitcast i64* %11 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8
  %79 = add <2 x i64> %78, <i64 -1, i64 1>
  %80 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %80, align 8
  br label %321

81:                                               ; preds = %53
  %82 = bitcast double** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #15
  store double* %3, double** %5, align 8
  %83 = load double**, double*** %9, align 8
  %84 = load i64, i64* %11, align 8
  %85 = lshr i64 %84, 9
  %86 = getelementptr inbounds double*, double** %83, i64 %85
  %87 = load double**, double*** %15, align 8
  %88 = icmp eq double** %87, %83
  br i1 %88, label %89, label %92

89:                                               ; preds = %81
  %90 = bitcast double** %86 to i64*
  %91 = load i64, i64* %90, align 8
  br label %98

92:                                               ; preds = %81
  %93 = load double*, double** %86, align 8
  %94 = and i64 %84, 511
  %95 = getelementptr inbounds double, double* %93, i64 %94
  %96 = ptrtoint double* %93 to i64
  %97 = bitcast double** %86 to i64*
  br label %98

98:                                               ; preds = %89, %92
  %99 = phi i64* [ %90, %89 ], [ %97, %92 ]
  %100 = phi i64 [ %91, %89 ], [ %96, %92 ]
  %101 = phi double* [ null, %89 ], [ %95, %92 ]
  %102 = ptrtoint double* %101 to i64
  %103 = sub i64 %102, %100
  %104 = ashr exact i64 %103, 3
  %105 = add nsw i64 %104, -1
  %106 = icmp sgt i64 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %98
  %108 = lshr i64 %105, 9
  %109 = getelementptr inbounds double*, double** %86, i64 %108
  %110 = load double*, double** %109, align 8
  %111 = and i64 %105, 511
  %112 = getelementptr inbounds double, double* %110, i64 %111
  br label %121

113:                                              ; preds = %98
  %114 = sub nsw i64 512, %104
  %115 = sdiv i64 %114, -512
  %116 = getelementptr inbounds double*, double** %86, i64 %115
  %117 = load double*, double** %116, align 8
  %118 = srem i64 %114, 512
  %119 = sub nuw nsw i64 511, %118
  %120 = getelementptr inbounds double, double* %117, i64 %119
  br label %121

121:                                              ; preds = %107, %113
  %122 = phi double* [ %112, %107 ], [ %120, %113 ]
  %123 = icmp eq double* %101, %3
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  store double* %122, double** %5, align 8
  br label %125

125:                                              ; preds = %124, %121
  %126 = bitcast double* %101 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast double* %122 to i64*
  store i64 %127, i64* %128, align 8
  %129 = bitcast i64* %11 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8
  %131 = add <2 x i64> %130, <i64 -1, i64 1>
  %132 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %132, align 8
  %133 = icmp ugt i64 %45, 1
  br i1 %133, label %134, label %182

134:                                              ; preds = %125
  %135 = load i64, i64* %99, align 8
  %136 = sub i64 %102, %135
  %137 = ashr exact i64 %136, 3
  %138 = add nsw i64 %137, 1
  %139 = icmp sgt i64 %136, -8
  br i1 %139, label %140, label %146

140:                                              ; preds = %134
  %141 = lshr i64 %138, 9
  %142 = getelementptr inbounds double*, double** %86, i64 %141
  %143 = load double*, double** %142, align 8
  %144 = and i64 %138, 511
  %145 = getelementptr inbounds double, double* %143, i64 %144
  br label %154

146:                                              ; preds = %134
  %147 = sub nsw i64 510, %137
  %148 = sdiv i64 %147, -512
  %149 = getelementptr inbounds double*, double** %86, i64 %148
  %150 = load double*, double** %149, align 8
  %151 = srem i64 %147, 512
  %152 = sub nuw nsw i64 511, %151
  %153 = getelementptr inbounds double, double* %150, i64 %152
  br label %154

154:                                              ; preds = %146, %140
  %155 = phi double* [ %145, %140 ], [ %153, %146 ]
  %156 = phi double** [ %142, %140 ], [ %149, %146 ]
  %157 = add nsw i64 %137, %45
  %158 = icmp sgt i64 %157, 0
  br i1 %158, label %159, label %165

159:                                              ; preds = %154
  %160 = lshr i64 %157, 9
  %161 = getelementptr inbounds double*, double** %86, i64 %160
  %162 = load double*, double** %161, align 8
  %163 = and i64 %157, 511
  %164 = getelementptr inbounds double, double* %162, i64 %163
  br label %173

165:                                              ; preds = %154
  %166 = sub nsw i64 511, %157
  %167 = sdiv i64 %166, -512
  %168 = getelementptr inbounds double*, double** %86, i64 %167
  %169 = load double*, double** %168, align 8
  %170 = srem i64 %166, 512
  %171 = sub nsw i64 511, %170
  %172 = getelementptr inbounds double, double* %169, i64 %171
  br label %173

173:                                              ; preds = %159, %165
  %174 = phi double* [ %164, %159 ], [ %172, %165 ]
  %175 = phi double** [ %161, %159 ], [ %168, %165 ]
  %176 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %6, i64 0, i32 0
  store double** %86, double*** %176, align 8
  %177 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %6, i64 0, i32 1
  %178 = bitcast double** %177 to i64*
  store i64 %102, i64* %178, align 8
  %179 = call { double**, double* } @_ZNSt3__15dequeIdNS_9allocatorIdEEE16__move_and_checkENS_16__deque_iteratorIdPdRdPS5_lLl0EEES8_S8_RPKd(%"class.std::__1::deque.132"* %0, double** %156, double* %155, double** %175, double* %174, %"class.std::__1::__deque_iterator.401"* nonnull byval(%"class.std::__1::__deque_iterator.401") align 8 %6, double** nonnull dereferenceable(8) %5)
  %180 = extractvalue { double**, double* } %179, 1
  %181 = ptrtoint double* %180 to i64
  br label %182

182:                                              ; preds = %173, %125
  %183 = phi i64 [ %181, %173 ], [ %102, %125 ]
  %184 = bitcast double** %5 to i64**
  %185 = load i64*, i64** %184, align 8
  %186 = load i64, i64* %185, align 8
  %187 = inttoptr i64 %183 to i64*
  store i64 %186, i64* %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #15
  br label %321

188:                                              ; preds = %44
  %189 = sub i64 %18, %19
  %190 = icmp eq i64 %189, 0
  %191 = shl i64 %189, 6
  %192 = add i64 %191, -1
  %193 = select i1 %190, i64 0, i64 %192
  %194 = add i64 %47, %12
  %195 = icmp eq i64 %193, %194
  br i1 %195, label %196, label %198

196:                                              ; preds = %188
  tail call void @_ZNSt3__15dequeIdNS_9allocatorIdEEE19__add_back_capacityEv(%"class.std::__1::deque.132"* %0)
  %197 = load i64, i64* %46, align 8
  br label %198

198:                                              ; preds = %196, %188
  %199 = phi i64 [ %197, %196 ], [ %47, %188 ]
  %200 = sub i64 %199, %45
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %221

202:                                              ; preds = %198
  %203 = load i64, i64* %11, align 8
  %204 = add i64 %203, %199
  %205 = load double**, double*** %9, align 8
  %206 = load double**, double*** %15, align 8
  %207 = icmp eq double** %206, %205
  br i1 %207, label %215, label %208

208:                                              ; preds = %202
  %209 = lshr i64 %204, 9
  %210 = getelementptr inbounds double*, double** %205, i64 %209
  %211 = load double*, double** %210, align 8
  %212 = and i64 %204, 511
  %213 = getelementptr inbounds double, double* %211, i64 %212
  %214 = bitcast double* %213 to i64*
  br label %215

215:                                              ; preds = %202, %208
  %216 = phi i64* [ %214, %208 ], [ null, %202 ]
  %217 = bitcast double* %3 to i64*
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %216, align 8
  %219 = load i64, i64* %46, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %46, align 8
  br label %321

221:                                              ; preds = %198
  %222 = bitcast double** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #15
  store double* %3, double** %7, align 8
  %223 = load i64, i64* %11, align 8
  %224 = add i64 %223, %199
  %225 = load double**, double*** %9, align 8
  %226 = lshr i64 %224, 9
  %227 = getelementptr inbounds double*, double** %225, i64 %226
  %228 = load double**, double*** %15, align 8
  %229 = icmp eq double** %228, %225
  br i1 %229, label %230, label %233

230:                                              ; preds = %221
  %231 = bitcast double** %227 to i64*
  %232 = load i64, i64* %231, align 8
  br label %239

233:                                              ; preds = %221
  %234 = load double*, double** %227, align 8
  %235 = and i64 %224, 511
  %236 = getelementptr inbounds double, double* %234, i64 %235
  %237 = ptrtoint double* %234 to i64
  %238 = bitcast double** %227 to i64*
  br label %239

239:                                              ; preds = %230, %233
  %240 = phi i64* [ %231, %230 ], [ %238, %233 ]
  %241 = phi i64 [ %232, %230 ], [ %237, %233 ]
  %242 = phi double* [ null, %230 ], [ %236, %233 ]
  %243 = ptrtoint double* %242 to i64
  %244 = sub i64 %243, %241
  %245 = ashr exact i64 %244, 3
  %246 = add nsw i64 %245, -1
  %247 = icmp sgt i64 %246, 0
  br i1 %247, label %248, label %254

248:                                              ; preds = %239
  %249 = lshr i64 %246, 9
  %250 = getelementptr inbounds double*, double** %227, i64 %249
  %251 = load double*, double** %250, align 8
  %252 = and i64 %246, 511
  %253 = getelementptr inbounds double, double* %251, i64 %252
  br label %262

254:                                              ; preds = %239
  %255 = sub nsw i64 512, %245
  %256 = sdiv i64 %255, -512
  %257 = getelementptr inbounds double*, double** %227, i64 %256
  %258 = load double*, double** %257, align 8
  %259 = srem i64 %255, 512
  %260 = sub nuw nsw i64 511, %259
  %261 = getelementptr inbounds double, double* %258, i64 %260
  br label %262

262:                                              ; preds = %248, %254
  %263 = phi double* [ %253, %248 ], [ %261, %254 ]
  %264 = phi double** [ %250, %248 ], [ %257, %254 ]
  %265 = icmp eq double* %263, %3
  br i1 %265, label %266, label %267

266:                                              ; preds = %262
  store double* %242, double** %7, align 8
  br label %267

267:                                              ; preds = %266, %262
  %268 = bitcast double* %263 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast double* %242 to i64*
  store i64 %269, i64* %270, align 8
  %271 = load i64, i64* %46, align 8
  %272 = add i64 %271, 1
  store i64 %272, i64* %46, align 8
  %273 = icmp ugt i64 %200, 1
  br i1 %273, label %274, label %304

274:                                              ; preds = %267
  %275 = load i64, i64* %240, align 8
  %276 = sub i64 %243, %275
  %277 = ashr exact i64 %276, 3
  %278 = sub i64 %277, %200
  %279 = icmp sgt i64 %278, 0
  br i1 %279, label %280, label %286

280:                                              ; preds = %274
  %281 = lshr i64 %278, 9
  %282 = getelementptr inbounds double*, double** %227, i64 %281
  %283 = load double*, double** %282, align 8
  %284 = and i64 %278, 511
  %285 = getelementptr inbounds double, double* %283, i64 %284
  br label %294

286:                                              ; preds = %274
  %287 = sub nsw i64 511, %278
  %288 = sdiv i64 %287, -512
  %289 = getelementptr inbounds double*, double** %227, i64 %288
  %290 = load double*, double** %289, align 8
  %291 = srem i64 %287, 512
  %292 = sub nsw i64 511, %291
  %293 = getelementptr inbounds double, double* %290, i64 %292
  br label %294

294:                                              ; preds = %280, %286
  %295 = phi double* [ %285, %280 ], [ %293, %286 ]
  %296 = phi double** [ %282, %280 ], [ %289, %286 ]
  %297 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %8, i64 0, i32 0
  store double** %227, double*** %297, align 8
  %298 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %8, i64 0, i32 1
  %299 = bitcast double** %298 to i64*
  store i64 %243, i64* %299, align 8
  %300 = call { double**, double* } @_ZNSt3__15dequeIdNS_9allocatorIdEEE25__move_backward_and_checkENS_16__deque_iteratorIdPdRdPS5_lLl0EEES8_S8_RPKd(%"class.std::__1::deque.132"* %0, double** %296, double* %295, double** %264, double* %263, %"class.std::__1::__deque_iterator.401"* nonnull byval(%"class.std::__1::__deque_iterator.401") align 8 %8, double** nonnull dereferenceable(8) %7)
  %301 = extractvalue { double**, double* } %300, 0
  %302 = extractvalue { double**, double* } %300, 1
  %303 = ptrtoint double* %302 to i64
  br label %304

304:                                              ; preds = %294, %267
  %305 = phi i64 [ %303, %294 ], [ %243, %267 ]
  %306 = phi double** [ %301, %294 ], [ %227, %267 ]
  %307 = bitcast double** %7 to i64**
  %308 = load i64*, i64** %307, align 8
  %309 = load i64, i64* %308, align 8
  %310 = inttoptr i64 %305 to double*
  %311 = load double*, double** %306, align 8
  %312 = icmp eq double* %311, %310
  br i1 %312, label %313, label %317

313:                                              ; preds = %304
  %314 = getelementptr inbounds double*, double** %306, i64 -1
  %315 = load double*, double** %314, align 8
  %316 = getelementptr inbounds double, double* %315, i64 512
  br label %317

317:                                              ; preds = %304, %313
  %318 = phi double* [ %316, %313 ], [ %310, %304 ]
  %319 = getelementptr inbounds double, double* %318, i64 -1
  %320 = bitcast double* %319 to i64*
  store i64 %309, i64* %320, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #15
  br label %321

321:                                              ; preds = %215, %317, %71, %182
  %322 = load double**, double*** %9, align 8
  %323 = load i64, i64* %11, align 8
  %324 = lshr i64 %323, 9
  %325 = getelementptr inbounds double*, double** %322, i64 %324
  %326 = load double**, double*** %15, align 8
  %327 = icmp eq double** %326, %322
  br i1 %327, label %333, label %328

328:                                              ; preds = %321
  %329 = load double*, double** %325, align 8
  %330 = and i64 %323, 511
  %331 = getelementptr inbounds double, double* %329, i64 %330
  %332 = ptrtoint double* %331 to i64
  br label %333

333:                                              ; preds = %321, %328
  %334 = phi i64 [ %332, %328 ], [ 0, %321 ]
  %335 = icmp eq i64 %45, 0
  br i1 %335, label %359, label %336

336:                                              ; preds = %333
  %337 = bitcast double** %325 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = sub i64 %334, %338
  %340 = ashr exact i64 %339, 3
  %341 = add nsw i64 %340, %45
  %342 = icmp sgt i64 %341, 0
  br i1 %342, label %343, label %350

343:                                              ; preds = %336
  %344 = lshr i64 %341, 9
  %345 = getelementptr inbounds double*, double** %325, i64 %344
  %346 = load double*, double** %345, align 8
  %347 = and i64 %341, 511
  %348 = getelementptr inbounds double, double* %346, i64 %347
  %349 = ptrtoint double* %348 to i64
  br label %359

350:                                              ; preds = %336
  %351 = sub nsw i64 511, %341
  %352 = sdiv i64 %351, -512
  %353 = getelementptr inbounds double*, double** %325, i64 %352
  %354 = load double*, double** %353, align 8
  %355 = srem i64 %351, 512
  %356 = sub nsw i64 511, %355
  %357 = getelementptr inbounds double, double* %354, i64 %356
  %358 = ptrtoint double* %357 to i64
  br label %359

359:                                              ; preds = %333, %343, %350
  %360 = phi i64 [ %334, %333 ], [ %349, %343 ], [ %358, %350 ]
  %361 = phi double** [ %325, %333 ], [ %345, %343 ], [ %353, %350 ]
  %362 = insertvalue { double**, double* } undef, double** %361, 0
  %363 = inttoptr i64 %360 to double*
  %364 = insertvalue { double**, double* } %362, double* %363, 1
  ret { double**, double* } %364
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIdNS_9allocatorIdEEE20__add_front_capacityEv(%"class.std::__1::deque.132"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca double*, align 8
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast double*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast double*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = icmp eq i64 %12, 0
  %14 = shl i64 %12, 6
  %15 = add i64 %14, -1
  %16 = select i1 %13, i64 0, i64 %15
  %17 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  %22 = sub i64 %16, %21
  %23 = icmp ugt i64 %22, 511
  %24 = inttoptr i64 %11 to double**
  %25 = inttoptr i64 %8 to double**
  br i1 %23, label %26, label %34

26:                                               ; preds = %1
  %27 = add i64 %18, 512
  store i64 %27, i64* %17, align 8
  %28 = bitcast double** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store double* inttoptr (i64 -6148914691236517206 to double*), double** %2, align 8
  %29 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr double*, double** %25, i64 -1
  %31 = bitcast double** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast double** %2 to i64*
  store i64 %32, i64* %33, align 8
  store double** %30, double*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.134"* %29, double** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %282

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = bitcast double*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::deque.132"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp ult i64 %12, %41
  br i1 %42, label %43, label %70

43:                                               ; preds = %34
  %44 = icmp eq i64 %11, %40
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = bitcast double** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  %47 = tail call i8* @_Znwm(i64 4096) #16
  %48 = bitcast double** %3 to i8**
  store i8* %47, i8** %48, align 8
  call void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.134"* %35, double** nonnull dereferenceable(8) %3)
  br label %59

49:                                               ; preds = %43
  %50 = bitcast double** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #15
  %51 = tail call i8* @_Znwm(i64 4096) #16
  %52 = bitcast double** %4 to i8**
  store i8* %51, i8** %52, align 8
  call void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.134"* %35, double** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #15
  %53 = bitcast double** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #15
  store double* inttoptr (i64 -6148914691236517206 to double*), double** %5, align 8
  %54 = load double**, double*** %6, align 8
  %55 = getelementptr double*, double** %54, i64 -1
  %56 = bitcast double** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast double** %5 to i64*
  store i64 %57, i64* %58, align 8
  store double** %55, double*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.134"* %35, double** nonnull dereferenceable(8) %5)
  br label %59

59:                                               ; preds = %49, %45
  %60 = phi i8* [ %53, %49 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  %61 = load i64, i64* %7, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 8
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = load i64, i64* %17, align 8
  %67 = add i64 %66, 512
  br label %68

68:                                               ; preds = %59, %65
  %69 = phi i64 [ %67, %65 ], [ 256, %59 ]
  store i64 %69, i64* %17, align 8
  br label %282

70:                                               ; preds = %34
  %71 = ashr exact i64 %41, 2
  %72 = icmp eq i64 %41, 0
  %73 = select i1 %72, i64 1, i64 %71
  %74 = icmp ugt i64 %73, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  tail call void @abort() #17
  unreachable

76:                                               ; preds = %70
  %77 = shl i64 %73, 3
  %78 = tail call i8* @_Znwm(i64 %77) #16
  %79 = bitcast i8* %78 to double**
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds double*, double** %79, i64 %73
  %82 = ptrtoint double** %81 to i64
  %83 = tail call i8* @_Znwm(i64 4096) #16
  %84 = ptrtoint i8* %83 to i64
  %85 = icmp eq double** %81, %79
  %86 = bitcast i8* %78 to i64*
  br i1 %85, label %87, label %107

87:                                               ; preds = %76
  %88 = sub i64 %82, %80
  %89 = ashr exact i64 %88, 2
  %90 = icmp eq i64 %88, 0
  %91 = select i1 %90, i64 1, i64 %89
  %92 = icmp ugt i64 %91, 2305843009213693951
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  tail call void @abort() #17
  unreachable

94:                                               ; preds = %87
  %95 = lshr i64 %91, 2
  %96 = shl i64 %91, 3
  %97 = tail call i8* @_Znwm(i64 %96) #16
  %98 = bitcast i8* %97 to double**
  %99 = ptrtoint i8* %97 to i64
  %100 = getelementptr inbounds double*, double** %98, i64 %95
  %101 = ptrtoint double** %100 to i64
  %102 = getelementptr inbounds double*, double** %98, i64 %91
  %103 = ptrtoint double** %102 to i64
  %104 = bitcast double** %100 to i64*
  tail call void @_ZdlPv(i8* nonnull %78) #16
  %105 = load double**, double*** %9, align 8
  %106 = load double**, double*** %6, align 8
  br label %107

107:                                              ; preds = %76, %94
  %108 = phi double** [ %106, %94 ], [ %25, %76 ]
  %109 = phi double** [ %105, %94 ], [ %24, %76 ]
  %110 = phi i64 [ %103, %94 ], [ %82, %76 ]
  %111 = phi i64 [ %101, %94 ], [ %80, %76 ]
  %112 = phi i64 [ %99, %94 ], [ %80, %76 ]
  %113 = phi i64* [ %104, %94 ], [ %86, %76 ]
  store i64 %84, i64* %113, align 8
  %114 = inttoptr i64 %111 to double**
  %115 = getelementptr inbounds double*, double** %114, i64 1
  %116 = ptrtoint double** %115 to i64
  %117 = icmp eq double** %109, %108
  br i1 %117, label %120, label %129

118:                                              ; preds = %261
  %119 = ptrtoint double** %270 to i64
  br label %120

120:                                              ; preds = %118, %107
  %121 = phi i64 [ %110, %107 ], [ %262, %118 ]
  %122 = phi i64 [ %111, %107 ], [ %264, %118 ]
  %123 = phi i64 [ %112, %107 ], [ %265, %118 ]
  %124 = phi i64 [ %116, %107 ], [ %119, %118 ]
  %125 = getelementptr inbounds %"class.std::__1::deque.132", %"class.std::__1::deque.132"* %0, i64 0, i32 0, i32 0, i32 0
  %126 = load double**, double*** %125, align 8
  store i64 %123, i64* %39, align 8
  store i64 %122, i64* %10, align 8
  store i64 %124, i64* %7, align 8
  store i64 %121, i64* %37, align 8
  %127 = sub i64 %124, %122
  %128 = icmp eq i64 %127, 8
  br i1 %128, label %277, label %274

129:                                              ; preds = %107, %261
  %130 = phi i64 [ %271, %261 ], [ %116, %107 ]
  %131 = phi double** [ %270, %261 ], [ %115, %107 ]
  %132 = phi double** [ %269, %261 ], [ %109, %107 ]
  %133 = phi i64 [ %265, %261 ], [ %112, %107 ]
  %134 = phi i64 [ %264, %261 ], [ %111, %107 ]
  %135 = phi i64 [ %262, %261 ], [ %110, %107 ]
  %136 = inttoptr i64 %135 to double**
  %137 = icmp eq double** %131, %136
  %138 = bitcast double** %131 to i64*
  br i1 %137, label %139, label %261

139:                                              ; preds = %129
  %140 = inttoptr i64 %134 to double**
  %141 = inttoptr i64 %133 to double**
  %142 = icmp ugt double** %140, %141
  br i1 %142, label %143, label %159

143:                                              ; preds = %139
  %144 = sub i64 %134, %133
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = sdiv i64 %146, -2
  %148 = getelementptr inbounds double*, double** %140, i64 %147
  %149 = sub i64 %130, %134
  %150 = ashr exact i64 %149, 3
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %143
  %153 = bitcast double** %148 to i8*
  %154 = inttoptr i64 %134 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %149, i1 false) #15
  br label %155

155:                                              ; preds = %152, %143
  %156 = getelementptr inbounds double*, double** %148, i64 %150
  %157 = ptrtoint double** %148 to i64
  %158 = bitcast double** %156 to i64*
  br label %261

159:                                              ; preds = %139
  %160 = sub i64 %135, %133
  %161 = ashr exact i64 %160, 2
  %162 = icmp eq i64 %160, 0
  %163 = select i1 %162, i64 1, i64 %161
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %166

165:                                              ; preds = %159
  tail call void @abort() #17
  unreachable

166:                                              ; preds = %159
  %167 = lshr i64 %163, 2
  %168 = shl i64 %163, 3
  %169 = tail call i8* @_Znwm(i64 %168) #16
  %170 = bitcast i8* %169 to double**
  %171 = ptrtoint i8* %169 to i64
  %172 = getelementptr inbounds double*, double** %170, i64 %167
  %173 = ptrtoint double** %172 to i64
  %174 = getelementptr inbounds double*, double** %170, i64 %163
  %175 = ptrtoint double** %174 to i64
  %176 = sub i64 %130, %134
  %177 = ashr exact i64 %176, 3
  %178 = getelementptr inbounds double*, double** %172, i64 %177
  %179 = icmp eq i64 %176, 0
  br i1 %179, label %254, label %180

180:                                              ; preds = %166
  %181 = add i64 %176, -8
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %201, label %186

186:                                              ; preds = %180, %186
  %187 = phi double** [ %194, %186 ], [ %172, %180 ]
  %188 = phi i64 [ %195, %186 ], [ %173, %180 ]
  %189 = phi double** [ %196, %186 ], [ %140, %180 ]
  %190 = phi i64 [ %197, %186 ], [ %184, %180 ]
  %191 = bitcast double** %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = inttoptr i64 %188 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds double*, double** %187, i64 1
  %195 = ptrtoint double** %194 to i64
  %196 = getelementptr inbounds double*, double** %189, i64 1
  %197 = add i64 %190, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %186, !llvm.loop !76

199:                                              ; preds = %186
  %200 = ptrtoint double** %194 to i64
  br label %201

201:                                              ; preds = %180, %199
  %202 = phi double** [ %172, %180 ], [ %194, %199 ]
  %203 = phi i64 [ %173, %180 ], [ %200, %199 ]
  %204 = phi double** [ %140, %180 ], [ %196, %199 ]
  %205 = icmp ult i64 %181, 56
  br i1 %205, label %252, label %206

206:                                              ; preds = %201, %206
  %207 = phi double** [ %248, %206 ], [ %202, %201 ]
  %208 = phi i64 [ %249, %206 ], [ %203, %201 ]
  %209 = phi double** [ %250, %206 ], [ %204, %201 ]
  %210 = bitcast double** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = inttoptr i64 %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds double*, double** %207, i64 1
  %214 = getelementptr inbounds double*, double** %209, i64 1
  %215 = bitcast double** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast double** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds double*, double** %207, i64 2
  %219 = getelementptr inbounds double*, double** %209, i64 2
  %220 = bitcast double** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast double** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds double*, double** %207, i64 3
  %224 = getelementptr inbounds double*, double** %209, i64 3
  %225 = bitcast double** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast double** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds double*, double** %207, i64 4
  %229 = getelementptr inbounds double*, double** %209, i64 4
  %230 = bitcast double** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast double** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds double*, double** %207, i64 5
  %234 = getelementptr inbounds double*, double** %209, i64 5
  %235 = bitcast double** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast double** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds double*, double** %207, i64 6
  %239 = getelementptr inbounds double*, double** %209, i64 6
  %240 = bitcast double** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast double** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds double*, double** %207, i64 7
  %244 = getelementptr inbounds double*, double** %209, i64 7
  %245 = bitcast double** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast double** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds double*, double** %207, i64 8
  %249 = ptrtoint double** %248 to i64
  %250 = getelementptr inbounds double*, double** %209, i64 8
  %251 = icmp eq double** %178, %248
  br i1 %251, label %252, label %206

252:                                              ; preds = %206, %201
  %253 = ptrtoint double** %178 to i64
  br label %254

254:                                              ; preds = %252, %166
  %255 = phi i64 [ %253, %252 ], [ %173, %166 ]
  %256 = inttoptr i64 %255 to double**
  %257 = icmp eq i64 %133, 0
  %258 = inttoptr i64 %255 to i64*
  br i1 %257, label %261, label %259

259:                                              ; preds = %254
  %260 = inttoptr i64 %133 to i8*
  tail call void @_ZdlPv(i8* %260) #16
  br label %261

261:                                              ; preds = %129, %155, %254, %259
  %262 = phi i64 [ %135, %155 ], [ %175, %254 ], [ %175, %259 ], [ %135, %129 ]
  %263 = phi double** [ %156, %155 ], [ %256, %254 ], [ %256, %259 ], [ %131, %129 ]
  %264 = phi i64 [ %157, %155 ], [ %173, %254 ], [ %173, %259 ], [ %134, %129 ]
  %265 = phi i64 [ %133, %155 ], [ %171, %254 ], [ %171, %259 ], [ %133, %129 ]
  %266 = phi i64* [ %158, %155 ], [ %258, %254 ], [ %258, %259 ], [ %138, %129 ]
  %267 = bitcast double** %132 to i64*
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %266, align 8
  %269 = getelementptr inbounds double*, double** %132, i64 1
  %270 = getelementptr inbounds double*, double** %263, i64 1
  %271 = ptrtoint double** %270 to i64
  %272 = load double**, double*** %6, align 8
  %273 = icmp eq double** %269, %272
  br i1 %273, label %118, label %129

274:                                              ; preds = %120
  %275 = load i64, i64* %17, align 8
  %276 = add i64 %275, 512
  br label %277

277:                                              ; preds = %274, %120
  %278 = phi i64 [ %276, %274 ], [ 256, %120 ]
  store i64 %278, i64* %17, align 8
  %279 = icmp eq double** %126, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = bitcast double** %126 to i8*
  tail call void @_ZdlPv(i8* %281) #16
  br label %282

282:                                              ; preds = %280, %277, %68, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { double**, double* } @_ZNSt3__15dequeIdNS_9allocatorIdEEE16__move_and_checkENS_16__deque_iteratorIdPdRdPS5_lLl0EEES8_S8_RPKd(%"class.std::__1::deque.132"*, double**, double*, double**, double*, %"class.std::__1::__deque_iterator.401"* byval(%"class.std::__1::__deque_iterator.401") align 8, double** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = ptrtoint double* %2 to i64
  %9 = icmp eq double* %4, %2
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = ptrtoint double* %4 to i64
  %12 = ptrtoint double** %3 to i64
  %13 = ptrtoint double** %1 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 6
  %16 = bitcast double** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %11, %17
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, %15
  %21 = bitcast double** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %8, %22
  %24 = ashr exact i64 %23, 3
  %25 = sub i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %7, %10
  %28 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %5, i64 0, i32 0
  %29 = load double**, double*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %5, i64 0, i32 1
  %31 = load double*, double** %30, align 8
  br label %195

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %5, i64 0, i32 0
  %35 = bitcast double** %6 to i64*
  %36 = bitcast double** %33 to i64*
  br label %37

37:                                               ; preds = %32, %189
  %38 = phi i64 [ %25, %32 ], [ %164, %189 ]
  %39 = phi i64 [ %8, %32 ], [ %191, %189 ]
  %40 = phi double** [ %1, %32 ], [ %190, %189 ]
  %41 = inttoptr i64 %39 to double*
  %42 = load double*, double** %40, align 8
  %43 = getelementptr inbounds double, double* %42, i64 512
  %44 = ptrtoint double* %43 to i64
  %45 = sub i64 %44, %39
  %46 = ashr exact i64 %45, 3
  %47 = icmp sgt i64 %46, %38
  %48 = getelementptr inbounds double, double* %41, i64 %38
  %49 = select i1 %47, i64 %38, i64 %46
  %50 = select i1 %47, double* %48, double* %43
  %51 = load double*, double** %6, align 8
  %52 = icmp uge double* %51, %41
  %53 = icmp ult double* %51, %50
  %54 = and i1 %52, %53
  %55 = ptrtoint double* %42 to i64
  br i1 %54, label %58, label %56

56:                                               ; preds = %37
  %57 = load i64, i64* %36, align 8
  br label %103

58:                                               ; preds = %37
  %59 = load double*, double** %33, align 8
  %60 = icmp eq double* %59, %41
  %61 = ptrtoint double* %59 to i64
  br i1 %60, label %62, label %64

62:                                               ; preds = %58
  %63 = ptrtoint double* %51 to i64
  br label %101

64:                                               ; preds = %58
  %65 = load double**, double*** %34, align 8
  %66 = ptrtoint double** %40 to i64
  %67 = ptrtoint double** %65 to i64
  %68 = sub i64 %66, %67
  %69 = shl i64 %68, 6
  %70 = sub i64 %39, %55
  %71 = ashr exact i64 %70, 3
  %72 = add nsw i64 %71, %69
  %73 = bitcast double** %65 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %61, %74
  %76 = ashr exact i64 %75, 3
  %77 = sub i64 %72, %76
  %78 = ptrtoint double* %51 to i64
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %101, label %80

80:                                               ; preds = %64
  %81 = sub i64 %78, %55
  %82 = ashr exact i64 %81, 3
  %83 = sub i64 %82, %77
  %84 = icmp sgt i64 %83, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %80
  %86 = lshr i64 %83, 9
  %87 = getelementptr inbounds double*, double** %40, i64 %86
  %88 = load double*, double** %87, align 8
  %89 = and i64 %83, 511
  %90 = getelementptr inbounds double, double* %88, i64 %89
  %91 = ptrtoint double* %90 to i64
  br label %101

92:                                               ; preds = %80
  %93 = sub nsw i64 511, %83
  %94 = sdiv i64 %93, -512
  %95 = getelementptr inbounds double*, double** %40, i64 %94
  %96 = load double*, double** %95, align 8
  %97 = srem i64 %93, 512
  %98 = sub nsw i64 511, %97
  %99 = getelementptr inbounds double, double* %96, i64 %98
  %100 = ptrtoint double* %99 to i64
  br label %101

101:                                              ; preds = %62, %64, %85, %92
  %102 = phi i64 [ %78, %64 ], [ %91, %85 ], [ %100, %92 ], [ %63, %62 ]
  store i64 %102, i64* %35, align 8
  br label %103

103:                                              ; preds = %56, %101
  %104 = phi i64 [ %57, %56 ], [ %61, %101 ]
  %105 = load double**, double*** %34, align 8
  %106 = icmp eq double* %50, %41
  br i1 %106, label %160, label %107

107:                                              ; preds = %103
  %108 = ptrtoint double* %50 to i64
  br label %109

109:                                              ; preds = %156, %107
  %110 = phi double* [ %41, %107 ], [ %124, %156 ]
  %111 = phi double** [ %105, %107 ], [ %158, %156 ]
  %112 = phi i64 [ %104, %107 ], [ %157, %156 ]
  %113 = load double*, double** %111, align 8
  %114 = getelementptr inbounds double, double* %113, i64 512
  %115 = ptrtoint double* %114 to i64
  %116 = sub i64 %115, %112
  %117 = ashr exact i64 %116, 3
  %118 = ptrtoint double* %110 to i64
  %119 = sub i64 %108, %118
  %120 = ashr exact i64 %119, 3
  %121 = icmp sgt i64 %120, %117
  %122 = getelementptr inbounds double, double* %110, i64 %117
  %123 = select i1 %121, i64 %117, i64 %120
  %124 = select i1 %121, double* %122, double* %50
  %125 = ptrtoint double* %124 to i64
  %126 = sub i64 %125, %118
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %109
  %129 = inttoptr i64 %112 to i8*
  %130 = bitcast double* %110 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 %126, i1 false) #15
  br label %131

131:                                              ; preds = %128, %109
  %132 = icmp eq i64 %123, 0
  br i1 %132, label %156, label %133

133:                                              ; preds = %131
  %134 = bitcast double** %111 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %112, %135
  %137 = ashr exact i64 %136, 3
  %138 = add nsw i64 %137, %123
  %139 = icmp sgt i64 %138, 0
  br i1 %139, label %140, label %147

140:                                              ; preds = %133
  %141 = lshr i64 %138, 9
  %142 = getelementptr inbounds double*, double** %111, i64 %141
  %143 = load double*, double** %142, align 8
  %144 = and i64 %138, 511
  %145 = getelementptr inbounds double, double* %143, i64 %144
  %146 = ptrtoint double* %145 to i64
  br label %156

147:                                              ; preds = %133
  %148 = sub nsw i64 511, %138
  %149 = sdiv i64 %148, -512
  %150 = getelementptr inbounds double*, double** %111, i64 %149
  %151 = load double*, double** %150, align 8
  %152 = srem i64 %148, 512
  %153 = sub nuw nsw i64 511, %152
  %154 = getelementptr inbounds double, double* %151, i64 %153
  %155 = ptrtoint double* %154 to i64
  br label %156

156:                                              ; preds = %147, %140, %131
  %157 = phi i64 [ %112, %131 ], [ %146, %140 ], [ %155, %147 ]
  %158 = phi double** [ %111, %131 ], [ %142, %140 ], [ %150, %147 ]
  %159 = icmp eq double* %124, %50
  br i1 %159, label %160, label %109

160:                                              ; preds = %156, %103
  %161 = phi i64 [ %104, %103 ], [ %157, %156 ]
  %162 = phi double** [ %105, %103 ], [ %158, %156 ]
  %163 = inttoptr i64 %161 to double*
  store double** %162, double*** %34, align 8
  store double* %163, double** %33, align 8
  %164 = sub nsw i64 %38, %49
  %165 = icmp eq i64 %49, 0
  br i1 %165, label %189, label %166

166:                                              ; preds = %160
  %167 = bitcast double** %40 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %39, %168
  %170 = ashr exact i64 %169, 3
  %171 = add nsw i64 %170, %49
  %172 = icmp sgt i64 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %166
  %174 = lshr i64 %171, 9
  %175 = getelementptr inbounds double*, double** %40, i64 %174
  %176 = load double*, double** %175, align 8
  %177 = and i64 %171, 511
  %178 = getelementptr inbounds double, double* %176, i64 %177
  %179 = ptrtoint double* %178 to i64
  br label %189

180:                                              ; preds = %166
  %181 = sub nsw i64 511, %171
  %182 = sdiv i64 %181, -512
  %183 = getelementptr inbounds double*, double** %40, i64 %182
  %184 = load double*, double** %183, align 8
  %185 = srem i64 %181, 512
  %186 = sub nsw i64 511, %185
  %187 = getelementptr inbounds double, double* %184, i64 %186
  %188 = ptrtoint double* %187 to i64
  br label %189

189:                                              ; preds = %160, %173, %180
  %190 = phi double** [ %40, %160 ], [ %175, %173 ], [ %183, %180 ]
  %191 = phi i64 [ %39, %160 ], [ %179, %173 ], [ %188, %180 ]
  %192 = icmp sgt i64 %164, 0
  br i1 %192, label %37, label %193

193:                                              ; preds = %189
  %194 = inttoptr i64 %161 to double*
  br label %195

195:                                              ; preds = %193, %27
  %196 = phi double* [ %31, %27 ], [ %194, %193 ]
  %197 = phi double** [ %29, %27 ], [ %162, %193 ]
  %198 = insertvalue { double**, double* } undef, double** %197, 0
  %199 = insertvalue { double**, double* } %198, double* %196, 1
  ret { double**, double* } %199
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { double**, double* } @_ZNSt3__15dequeIdNS_9allocatorIdEEE25__move_backward_and_checkENS_16__deque_iteratorIdPdRdPS5_lLl0EEES8_S8_RPKd(%"class.std::__1::deque.132"*, double**, double*, double**, double*, %"class.std::__1::__deque_iterator.401"* byval(%"class.std::__1::__deque_iterator.401") align 8, double** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = ptrtoint double* %4 to i64
  %9 = icmp eq double* %4, %2
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = ptrtoint double* %2 to i64
  %12 = ptrtoint double** %3 to i64
  %13 = ptrtoint double** %1 to i64
  %14 = sub i64 %12, %13
  %15 = shl i64 %14, 6
  %16 = bitcast double** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, %15
  %21 = bitcast double** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %11, %22
  %24 = ashr exact i64 %23, 3
  %25 = sub i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %7, %10
  %28 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %5, i64 0, i32 0
  %29 = load double**, double*** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %5, i64 0, i32 1
  %31 = load double*, double** %30, align 8
  br label %242

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %5, i64 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::__deque_iterator.401", %"class.std::__1::__deque_iterator.401"* %5, i64 0, i32 0
  %35 = bitcast double** %6 to i64*
  %36 = bitcast double** %33 to i64*
  br label %37

37:                                               ; preds = %32, %236
  %38 = phi i64 [ %25, %32 ], [ %210, %236 ]
  %39 = phi double** [ %3, %32 ], [ %238, %236 ]
  %40 = phi i64 [ %8, %32 ], [ %237, %236 ]
  %41 = inttoptr i64 %40 to double*
  %42 = load double*, double** %39, align 8
  %43 = icmp eq double* %42, %41
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = getelementptr inbounds double*, double** %39, i64 -1
  %46 = load double*, double** %45, align 8
  %47 = getelementptr inbounds double, double* %46, i64 512
  br label %48

48:                                               ; preds = %37, %44
  %49 = phi double* [ %46, %44 ], [ %42, %37 ]
  %50 = phi double** [ %45, %44 ], [ %39, %37 ]
  %51 = phi double* [ %47, %44 ], [ %41, %37 ]
  %52 = getelementptr inbounds double, double* %51, i64 -1
  %53 = ptrtoint double* %52 to i64
  %54 = ptrtoint double* %51 to i64
  %55 = ptrtoint double* %49 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp sgt i64 %57, %38
  %59 = sub nsw i64 0, %38
  %60 = getelementptr inbounds double, double* %51, i64 %59
  %61 = select i1 %58, i64 %38, i64 %57
  %62 = select i1 %58, double* %60, double* %49
  %63 = load double*, double** %6, align 8
  %64 = icmp ule double* %62, %63
  %65 = icmp ult double* %63, %51
  %66 = and i1 %65, %64
  br i1 %66, label %69, label %67

67:                                               ; preds = %48
  %68 = load i64, i64* %36, align 8
  br label %122

69:                                               ; preds = %48
  %70 = load double*, double** %33, align 8
  %71 = icmp eq double* %70, %52
  %72 = ptrtoint double* %70 to i64
  br i1 %71, label %73, label %77

73:                                               ; preds = %69
  %74 = ptrtoint double* %63 to i64
  %75 = bitcast double** %50 to i64*
  %76 = load i64, i64* %75, align 8
  br label %96

77:                                               ; preds = %69
  %78 = load double**, double*** %34, align 8
  %79 = ptrtoint double** %78 to i64
  %80 = ptrtoint double** %50 to i64
  %81 = sub i64 %79, %80
  %82 = shl i64 %81, 6
  %83 = bitcast double** %78 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %72, %84
  %86 = ashr exact i64 %85, 3
  %87 = add nsw i64 %86, %82
  %88 = bitcast double** %50 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %53, %89
  %91 = ashr exact i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add i64 %87, %92
  %94 = ptrtoint double* %63 to i64
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %120, label %96

96:                                               ; preds = %73, %77
  %97 = phi i64 [ %76, %73 ], [ %89, %77 ]
  %98 = phi i64 [ %74, %73 ], [ %94, %77 ]
  %99 = phi i64 [ -1, %73 ], [ %93, %77 ]
  %100 = sub i64 %98, %97
  %101 = ashr exact i64 %100, 3
  %102 = add nsw i64 %101, %99
  %103 = icmp sgt i64 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %96
  %105 = lshr i64 %102, 9
  %106 = getelementptr inbounds double*, double** %50, i64 %105
  %107 = load double*, double** %106, align 8
  %108 = and i64 %102, 511
  %109 = getelementptr inbounds double, double* %107, i64 %108
  %110 = ptrtoint double* %109 to i64
  br label %120

111:                                              ; preds = %96
  %112 = sub nsw i64 511, %102
  %113 = sdiv i64 %112, -512
  %114 = getelementptr inbounds double*, double** %50, i64 %113
  %115 = load double*, double** %114, align 8
  %116 = srem i64 %112, 512
  %117 = sub nsw i64 511, %116
  %118 = getelementptr inbounds double, double* %115, i64 %117
  %119 = ptrtoint double* %118 to i64
  br label %120

120:                                              ; preds = %77, %104, %111
  %121 = phi i64 [ %94, %77 ], [ %110, %104 ], [ %119, %111 ]
  store i64 %121, i64* %35, align 8
  br label %122

122:                                              ; preds = %67, %120
  %123 = phi i64 [ %68, %67 ], [ %72, %120 ]
  %124 = load double**, double*** %34, align 8
  %125 = icmp eq double* %51, %62
  br i1 %125, label %206, label %126

126:                                              ; preds = %122
  %127 = ptrtoint double* %62 to i64
  br label %128

128:                                              ; preds = %202, %126
  %129 = phi double* [ %51, %126 ], [ %168, %202 ]
  %130 = phi double** [ %124, %126 ], [ %204, %202 ]
  %131 = phi i64 [ %123, %126 ], [ %203, %202 ]
  %132 = bitcast double** %130 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 3
  %136 = add nsw i64 %135, -1
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %144

138:                                              ; preds = %128
  %139 = lshr i64 %136, 9
  %140 = getelementptr inbounds double*, double** %130, i64 %139
  %141 = load double*, double** %140, align 8
  %142 = and i64 %136, 511
  %143 = getelementptr inbounds double, double* %141, i64 %142
  br label %152

144:                                              ; preds = %128
  %145 = sub nsw i64 512, %135
  %146 = sdiv i64 %145, -512
  %147 = getelementptr inbounds double*, double** %130, i64 %146
  %148 = load double*, double** %147, align 8
  %149 = srem i64 %145, 512
  %150 = sub nuw nsw i64 511, %149
  %151 = getelementptr inbounds double, double* %148, i64 %150
  br label %152

152:                                              ; preds = %144, %138
  %153 = phi double* [ %143, %138 ], [ %151, %144 ]
  %154 = phi double** [ %140, %138 ], [ %147, %144 ]
  %155 = bitcast double** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds double, double* %153, i64 1
  %158 = ptrtoint double* %157 to i64
  %159 = sub i64 %158, %156
  %160 = ashr exact i64 %159, 3
  %161 = ptrtoint double* %129 to i64
  %162 = sub i64 %161, %127
  %163 = ashr exact i64 %162, 3
  %164 = icmp sgt i64 %163, %160
  %165 = sub nsw i64 0, %160
  %166 = getelementptr inbounds double, double* %129, i64 %165
  %167 = select i1 %164, i64 %160, i64 %163
  %168 = select i1 %164, double* %166, double* %62
  %169 = ptrtoint double* %168 to i64
  %170 = sub i64 %161, %169
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %152
  %173 = ashr exact i64 %170, 3
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds double, double* %157, i64 %174
  %176 = bitcast double* %175 to i8*
  %177 = bitcast double* %168 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 %170, i1 false) #15
  br label %178

178:                                              ; preds = %172, %152
  %179 = icmp eq i64 %167, 0
  br i1 %179, label %202, label %180

180:                                              ; preds = %178
  %181 = load i64, i64* %132, align 8
  %182 = sub i64 %131, %181
  %183 = ashr exact i64 %182, 3
  %184 = sub nsw i64 %183, %167
  %185 = icmp sgt i64 %184, 0
  br i1 %185, label %186, label %193

186:                                              ; preds = %180
  %187 = lshr i64 %184, 9
  %188 = getelementptr inbounds double*, double** %130, i64 %187
  %189 = load double*, double** %188, align 8
  %190 = and i64 %184, 511
  %191 = getelementptr inbounds double, double* %189, i64 %190
  %192 = ptrtoint double* %191 to i64
  br label %202

193:                                              ; preds = %180
  %194 = sub nsw i64 511, %184
  %195 = sdiv i64 %194, -512
  %196 = getelementptr inbounds double*, double** %130, i64 %195
  %197 = load double*, double** %196, align 8
  %198 = srem i64 %194, 512
  %199 = sub nuw nsw i64 511, %198
  %200 = getelementptr inbounds double, double* %197, i64 %199
  %201 = ptrtoint double* %200 to i64
  br label %202

202:                                              ; preds = %193, %186, %178
  %203 = phi i64 [ %131, %178 ], [ %192, %186 ], [ %201, %193 ]
  %204 = phi double** [ %130, %178 ], [ %188, %186 ], [ %196, %193 ]
  %205 = icmp eq double* %168, %62
  br i1 %205, label %206, label %128

206:                                              ; preds = %202, %122
  %207 = phi i64 [ %123, %122 ], [ %203, %202 ]
  %208 = phi double** [ %124, %122 ], [ %204, %202 ]
  %209 = inttoptr i64 %207 to double*
  store double** %208, double*** %34, align 8
  store double* %209, double** %33, align 8
  %210 = sub nsw i64 %38, %61
  %211 = add nsw i64 %61, -1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %236, label %213

213:                                              ; preds = %206
  %214 = bitcast double** %50 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %53, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub i64 %217, %211
  %219 = icmp sgt i64 %218, 0
  br i1 %219, label %220, label %227

220:                                              ; preds = %213
  %221 = lshr i64 %218, 9
  %222 = getelementptr inbounds double*, double** %50, i64 %221
  %223 = load double*, double** %222, align 8
  %224 = and i64 %218, 511
  %225 = getelementptr inbounds double, double* %223, i64 %224
  %226 = ptrtoint double* %225 to i64
  br label %236

227:                                              ; preds = %213
  %228 = sub nsw i64 511, %218
  %229 = sdiv i64 %228, -512
  %230 = getelementptr inbounds double*, double** %50, i64 %229
  %231 = load double*, double** %230, align 8
  %232 = srem i64 %228, 512
  %233 = sub nsw i64 511, %232
  %234 = getelementptr inbounds double, double* %231, i64 %233
  %235 = ptrtoint double* %234 to i64
  br label %236

236:                                              ; preds = %206, %220, %227
  %237 = phi i64 [ %53, %206 ], [ %226, %220 ], [ %235, %227 ]
  %238 = phi double** [ %50, %206 ], [ %222, %220 ], [ %230, %227 ]
  %239 = icmp sgt i64 %210, 0
  br i1 %239, label %37, label %240

240:                                              ; preds = %236
  %241 = inttoptr i64 %207 to double*
  br label %242

242:                                              ; preds = %240, %27
  %243 = phi double* [ %31, %27 ], [ %241, %240 ]
  %244 = phi double** [ %29, %27 ], [ %208, %240 ]
  %245 = insertvalue { double**, double* } undef, double** %244, 0
  %246 = insertvalue { double**, double* } %245, double* %243, 1
  ret { double**, double* } %246
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPdNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.134"*, double** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 1
  %4 = load double**, double*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 0
  %6 = load double**, double*** %5, align 8
  %7 = icmp eq double** %4, %6
  %8 = ptrtoint double** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 2
  %11 = load double**, double*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.134", %"struct.std::__1::__split_buffer.134"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load double**, double*** %12, align 8
  %14 = icmp ult double** %11, %13
  %15 = bitcast double*** %12 to i64*
  %16 = ptrtoint double** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint double** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds double*, double** %11, i64 %22
  %24 = ptrtoint double** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds double*, double** %23, i64 %29
  %31 = bitcast double** %30 to i8*
  %32 = bitcast double** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #15
  %33 = load double**, double*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi double** [ %33, %27 ], [ %11, %17 ]
  %36 = phi double** [ %30, %27 ], [ %23, %17 ]
  store double** %36, double*** %3, align 8
  %37 = getelementptr inbounds double*, double** %35, i64 %22
  store double** %37, double*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.134"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #17
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = bitcast i8* %50 to double**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds double*, double** %51, i64 %48
  %54 = ptrtoint double** %53 to i64
  %55 = getelementptr inbounds double*, double** %51, i64 %43
  %56 = ptrtoint double** %55 to i64
  %57 = ptrtoint double** %4 to i64
  %58 = ptrtoint double** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds double*, double** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi double** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi double** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast double** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds double*, double** %70, i64 1
  %78 = ptrtoint double** %77 to i64
  %79 = getelementptr inbounds double*, double** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !77

82:                                               ; preds = %69
  %83 = ptrtoint double** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi double** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi double** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi double** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi double** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast double** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds double*, double** %90, i64 1
  %97 = getelementptr inbounds double*, double** %92, i64 1
  %98 = bitcast double** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast double** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds double*, double** %90, i64 2
  %102 = getelementptr inbounds double*, double** %92, i64 2
  %103 = bitcast double** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast double** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds double*, double** %90, i64 3
  %107 = getelementptr inbounds double*, double** %92, i64 3
  %108 = bitcast double** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast double** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds double*, double** %90, i64 4
  %112 = getelementptr inbounds double*, double** %92, i64 4
  %113 = bitcast double** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast double** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds double*, double** %90, i64 5
  %117 = getelementptr inbounds double*, double** %92, i64 5
  %118 = bitcast double** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast double** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds double*, double** %90, i64 6
  %122 = getelementptr inbounds double*, double** %92, i64 6
  %123 = bitcast double** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast double** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds double*, double** %90, i64 7
  %127 = getelementptr inbounds double*, double** %92, i64 7
  %128 = bitcast double** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast double** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds double*, double** %90, i64 8
  %132 = ptrtoint double** %131 to i64
  %133 = getelementptr inbounds double*, double** %92, i64 8
  %134 = icmp eq double** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint double** %61 to i64
  %137 = load double**, double*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi double** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast double*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast double*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq double** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast double** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #16
  %146 = load double**, double*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi double** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds double*, double** %148, i64 -1
  %150 = bitcast double** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast double** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load double**, double*** %3, align 8
  %154 = getelementptr inbounds double*, double** %153, i64 -1
  store double** %154, double*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJPN8perfetto15trace_processor6ColumnEjNS4_10StringPool2IdEEEEmEENS_19__map_value_compareIS9_SA_NS_4lessIS9_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.322"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJPN8perfetto15trace_processor6ColumnEjNS4_10StringPool2IdEEEEmEENS_19__map_value_compareIS9_SA_NS_4lessIS9_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.322"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJPN8perfetto15trace_processor6ColumnEjNS4_10StringPool2IdEEEEmEENS_19__map_value_compareIS9_SA_NS_4lessIS9_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.322"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__113__stable_sortIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %class.anon* dereferenceable(1), i64, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, i64) unnamed_addr #0 {
  %7 = alloca %"struct.perfetto::trace_processor::Variadic", align 8
  %8 = alloca %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", align 8
  switch i64 %3, label %36 [
    i64 0, label %164
    i64 1, label %164
    i64 2, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 -1, i32 3
  %12 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %11, align 8
  %13 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 0, i32 3
  %14 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %13, align 8
  %15 = icmp eq %"class.perfetto::trace_processor::Column"* %12, %14
  br i1 %15, label %16, label %30

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 -1, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 -1, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp ult i32 %24, %26
  br i1 %27, label %32, label %164

28:                                               ; preds = %16
  %29 = icmp ult i32 %18, %20
  br i1 %29, label %32, label %164

30:                                               ; preds = %9
  %31 = icmp ult %"class.perfetto::trace_processor::Column"* %12, %14
  br i1 %31, label %32, label %164

32:                                               ; preds = %28, %22, %30
  %33 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33)
  %34 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %34, i64 40, i1 false) #15
  %35 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 40, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %33, i64 40, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33)
  br label %164

36:                                               ; preds = %6
  %37 = icmp slt i64 %3, 129
  br i1 %37, label %38, label %94

38:                                               ; preds = %36
  %39 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, %1
  br i1 %39, label %164, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 1
  %42 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %41, %1
  br i1 %42, label %164, label %43

43:                                               ; preds = %40
  %44 = bitcast %"struct.perfetto::trace_processor::Variadic"* %7 to i8*
  br label %45

45:                                               ; preds = %79, %43
  %46 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %41, %43 ], [ %88, %79 ]
  %47 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %0, %43 ], [ %46, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  %48 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %46, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %47, i64 1, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %47, i64 1, i32 2
  %53 = bitcast %"struct.perfetto::trace_processor::Variadic"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 16, i1 false) #15
  %54 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %47, i64 1, i32 3
  %55 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %54, align 8
  %56 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %47, i64 1, i32 4
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %47, i64 1, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %46, %0
  br i1 %60, label %79, label %61

61:                                               ; preds = %45, %90
  %62 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %63, %90 ], [ %46, %45 ]
  %63 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %62, i64 -1
  %64 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %62, i64 -1, i32 3
  %65 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %64, align 8
  %66 = icmp eq %"class.perfetto::trace_processor::Column"* %55, %65
  br i1 %66, label %67, label %77

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %62, i64 -1, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %57, %69
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %62, i64 -1, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp ult i32 %51, %73
  br i1 %74, label %90, label %79

75:                                               ; preds = %67
  %76 = icmp ult i32 %57, %69
  br i1 %76, label %90, label %79

77:                                               ; preds = %61
  %78 = icmp ult %"class.perfetto::trace_processor::Column"* %55, %65
  br i1 %78, label %90, label %79

79:                                               ; preds = %90, %77, %75, %71, %45
  %80 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %0, %45 ], [ %62, %77 ], [ %62, %71 ], [ %62, %75 ], [ %0, %90 ]
  %81 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %80, i64 0, i32 0, i32 0
  store i32 %49, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %80, i64 0, i32 1, i32 0
  store i32 %51, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %80, i64 0, i32 2
  %84 = bitcast %"struct.perfetto::trace_processor::Variadic"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %44, i64 16, i1 false) #15
  %85 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %80, i64 0, i32 3
  store %"class.perfetto::trace_processor::Column"* %55, %"class.perfetto::trace_processor::Column"** %85, align 8
  %86 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %80, i64 0, i32 4
  store i32 %57, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %80, i64 0, i32 5
  store i32 %59, i32* %87, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44)
  %88 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %46, i64 1
  %89 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %88, %1
  br i1 %89, label %164, label %45

90:                                               ; preds = %77, %75, %71
  %91 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %62 to i8*
  %92 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 40, i1 false) #15
  %93 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %63, %0
  br i1 %93, label %79, label %61

94:                                               ; preds = %36
  %95 = lshr i64 %3, 1
  %96 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 %95
  %97 = icmp sgt i64 %3, %5
  br i1 %97, label %162, label %98

98:                                               ; preds = %94
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %96, %class.anon* dereferenceable(1) %2, i64 %95, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4)
  %99 = sub nsw i64 %3, %95
  %100 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 %95
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %96, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, %class.anon* dereferenceable(1) %2, i64 %99, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %100)
  %101 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 %3
  br label %104

102:                                              ; preds = %149
  %103 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %150, %101
  br i1 %103, label %164, label %154

104:                                              ; preds = %98, %149
  %105 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %151, %149 ], [ %4, %98 ]
  %106 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %150, %149 ], [ %100, %98 ]
  %107 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %152, %149 ], [ %0, %98 ]
  %108 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %106, %101
  br i1 %108, label %109, label %119

109:                                              ; preds = %104
  %110 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %105, %100
  br i1 %110, label %164, label %111

111:                                              ; preds = %109, %111
  %112 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %116, %111 ], [ %105, %109 ]
  %113 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %117, %111 ], [ %107, %109 ]
  %114 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %113 to i8*
  %115 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 40, i1 false) #15
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %112, i64 1
  %117 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %113, i64 1
  %118 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %116, %100
  br i1 %118, label %164, label %111

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %106, i64 0, i32 3
  %121 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %120, align 8
  %122 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %105, i64 0, i32 3
  %123 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %122, align 8
  %124 = icmp eq %"class.perfetto::trace_processor::Column"* %121, %123
  br i1 %124, label %125, label %139

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %106, i64 0, i32 4
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %105, i64 0, i32 4
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %127, %129
  br i1 %130, label %131, label %137

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %106, i64 0, i32 1, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %105, i64 0, i32 1, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp ult i32 %133, %135
  br i1 %136, label %141, label %145

137:                                              ; preds = %125
  %138 = icmp ult i32 %127, %129
  br i1 %138, label %141, label %145

139:                                              ; preds = %119
  %140 = icmp ult %"class.perfetto::trace_processor::Column"* %121, %123
  br i1 %140, label %141, label %145

141:                                              ; preds = %139, %137, %131
  %142 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %107 to i8*
  %143 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 40, i1 false) #15
  %144 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %106, i64 1
  br label %149

145:                                              ; preds = %139, %137, %131
  %146 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %107 to i8*
  %147 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 40, i1 false) #15
  %148 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %105, i64 1
  br label %149

149:                                              ; preds = %145, %141
  %150 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %144, %141 ], [ %106, %145 ]
  %151 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %105, %141 ], [ %148, %145 ]
  %152 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %107, i64 1
  %153 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %151, %100
  br i1 %153, label %102, label %104

154:                                              ; preds = %102, %154
  %155 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %159, %154 ], [ %150, %102 ]
  %156 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %160, %154 ], [ %152, %102 ]
  %157 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %156 to i8*
  %158 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 40, i1 false) #15
  %159 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %155, i64 1
  %160 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %156, i64 1
  %161 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %159, %101
  br i1 %161, label %164, label %154

162:                                              ; preds = %94
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %96, %class.anon* dereferenceable(1) %2, i64 %95, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 %5)
  %163 = sub nsw i64 %3, %95
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %96, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, %class.anon* dereferenceable(1) %2, i64 %163, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 %5)
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %96, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, %class.anon* dereferenceable(1) %2, i64 %95, i64 %163, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 %5)
  br label %164

164:                                              ; preds = %154, %111, %79, %109, %102, %40, %38, %28, %22, %162, %30, %32, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__118__stable_sort_moveIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %class.anon* dereferenceable(1), i64, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*) unnamed_addr #0 {
  switch i64 %3, label %47 [
    i64 0, label %196
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4 to i8*
  %8 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false)
  br label %196

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 -1, i32 3
  %12 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %11, align 8
  %13 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 0, i32 3
  %14 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %13, align 8
  %15 = icmp eq %"class.perfetto::trace_processor::Column"* %12, %14
  br i1 %15, label %16, label %32

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 -1, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %29

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, i64 -1, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp ult i32 %24, %26
  %28 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4 to i8*
  br i1 %27, label %35, label %41

29:                                               ; preds = %16
  %30 = icmp ult i32 %18, %20
  %31 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4 to i8*
  br i1 %30, label %35, label %41

32:                                               ; preds = %9
  %33 = icmp ult %"class.perfetto::trace_processor::Column"* %12, %14
  %34 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4 to i8*
  br i1 %33, label %35, label %41

35:                                               ; preds = %29, %22, %32
  %36 = phi i8* [ %28, %22 ], [ %34, %32 ], [ %31, %29 ]
  %37 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 40, i1 false)
  %38 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 1
  %39 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %38 to i8*
  %40 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 40, i1 false)
  br label %196

41:                                               ; preds = %29, %22, %32
  %42 = phi i8* [ %28, %22 ], [ %34, %32 ], [ %31, %29 ]
  %43 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 40, i1 false)
  %44 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 1
  %45 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %44 to i8*
  %46 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 40, i1 false)
  br label %196

47:                                               ; preds = %5
  %48 = icmp slt i64 %3, 9
  br i1 %48, label %49, label %125

49:                                               ; preds = %47
  %50 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, %1
  br i1 %50, label %196, label %51

51:                                               ; preds = %49
  %52 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4 to i8*
  %53 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 40, i1 false) #15
  %54 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 1
  %55 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %54, %1
  br i1 %55, label %196, label %56

56:                                               ; preds = %51, %120
  %57 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %123, %120 ], [ %54, %51 ]
  %58 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %60, %120 ], [ %4, %51 ]
  %59 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %57, %120 ], [ %0, %51 ]
  %60 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %58, i64 1
  %61 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %59, i64 1, i32 3
  %62 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %61, align 8
  %63 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %58, i64 0, i32 3
  %64 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %63, align 8
  %65 = icmp eq %"class.perfetto::trace_processor::Column"* %62, %64
  br i1 %65, label %66, label %82

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %59, i64 1, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %58, i64 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %72, label %79

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %59, i64 1, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %58, i64 0, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp ult i32 %74, %76
  %78 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %60 to i8*
  br i1 %77, label %85, label %120

79:                                               ; preds = %66
  %80 = icmp ult i32 %68, %70
  %81 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %60 to i8*
  br i1 %80, label %85, label %120

82:                                               ; preds = %56
  %83 = icmp ult %"class.perfetto::trace_processor::Column"* %62, %64
  %84 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %60 to i8*
  br i1 %83, label %85, label %120

85:                                               ; preds = %82, %79, %72
  %86 = phi i8* [ %78, %72 ], [ %84, %82 ], [ %81, %79 ]
  %87 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 40, i1 false) #15
  %88 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %59, i64 1, i32 1, i32 0
  %89 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %58, %4
  br i1 %89, label %120, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %59, i64 1, i32 4
  br label %92

92:                                               ; preds = %113, %90
  %93 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %58, %90 ], [ %94, %113 ]
  %94 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %93, i64 -1
  %95 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %61, align 8
  %96 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %93, i64 -1, i32 3
  %97 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %96, align 8
  %98 = icmp eq %"class.perfetto::trace_processor::Column"* %95, %97
  br i1 %98, label %99, label %111

99:                                               ; preds = %92
  %100 = load i32, i32* %91, align 8
  %101 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %93, i64 -1, i32 4
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %99
  %105 = load i32, i32* %88, align 4
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %93, i64 -1, i32 1, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp ult i32 %105, %107
  br i1 %108, label %113, label %117

109:                                              ; preds = %99
  %110 = icmp ult i32 %100, %102
  br i1 %110, label %113, label %117

111:                                              ; preds = %92
  %112 = icmp ult %"class.perfetto::trace_processor::Column"* %95, %97
  br i1 %112, label %113, label %117

113:                                              ; preds = %111, %109, %104
  %114 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %93 to i8*
  %115 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 40, i1 false) #15
  %116 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %94, %4
  br i1 %116, label %117, label %92

117:                                              ; preds = %113, %111, %109, %104
  %118 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %93, %111 ], [ %4, %113 ], [ %93, %104 ], [ %93, %109 ]
  %119 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %118 to i8*
  br label %120

120:                                              ; preds = %72, %79, %82, %85, %117
  %121 = phi i8* [ %119, %117 ], [ %52, %85 ], [ %78, %72 ], [ %84, %82 ], [ %81, %79 ]
  %122 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 40, i1 false) #15
  %123 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %57, i64 1
  %124 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %123, %1
  br i1 %124, label %196, label %56

125:                                              ; preds = %47
  %126 = lshr i64 %3, 1
  %127 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, i64 %126
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %127, %class.anon* dereferenceable(1) %2, i64 %126, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 %126)
  %128 = sub nsw i64 %3, %126
  %129 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %4, i64 %126
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %127, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1, %class.anon* dereferenceable(1) %2, i64 %128, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %129, i64 %128)
  %130 = icmp eq i64 %126, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %191, %125
  %132 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %127, %125 ], [ %192, %191 ]
  %133 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %4, %125 ], [ %194, %191 ]
  %134 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %132, %1
  br i1 %134, label %196, label %135

135:                                              ; preds = %131, %135
  %136 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %141, %135 ], [ %133, %131 ]
  %137 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %140, %135 ], [ %132, %131 ]
  %138 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %136 to i8*
  %139 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 40, i1 false) #15
  %140 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %137, i64 1
  %141 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %136, i64 1
  %142 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %140, %1
  br i1 %142, label %196, label %135

143:                                              ; preds = %125, %191
  %144 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %194, %191 ], [ %4, %125 ]
  %145 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %193, %191 ], [ %0, %125 ]
  %146 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %192, %191 ], [ %127, %125 ]
  %147 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %146, %1
  br i1 %147, label %148, label %158

148:                                              ; preds = %143
  %149 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %145, %127
  br i1 %149, label %196, label %150

150:                                              ; preds = %148, %150
  %151 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %156, %150 ], [ %144, %148 ]
  %152 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %155, %150 ], [ %145, %148 ]
  %153 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %151 to i8*
  %154 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 40, i1 false) #15
  %155 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %152, i64 1
  %156 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %151, i64 1
  %157 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %155, %127
  br i1 %157, label %196, label %150

158:                                              ; preds = %143
  %159 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %146, i64 0, i32 3
  %160 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %159, align 8
  %161 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %145, i64 0, i32 3
  %162 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %161, align 8
  %163 = icmp eq %"class.perfetto::trace_processor::Column"* %160, %162
  br i1 %163, label %164, label %180

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %146, i64 0, i32 4
  %166 = load i32, i32* %165, align 8
  %167 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %145, i64 0, i32 4
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %166, %168
  br i1 %169, label %170, label %177

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %146, i64 0, i32 1, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %145, i64 0, i32 1, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp ult i32 %172, %174
  %176 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %144 to i8*
  br i1 %175, label %183, label %187

177:                                              ; preds = %164
  %178 = icmp ult i32 %166, %168
  %179 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %144 to i8*
  br i1 %178, label %183, label %187

180:                                              ; preds = %158
  %181 = icmp ult %"class.perfetto::trace_processor::Column"* %160, %162
  %182 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %144 to i8*
  br i1 %181, label %183, label %187

183:                                              ; preds = %180, %177, %170
  %184 = phi i8* [ %176, %170 ], [ %182, %180 ], [ %179, %177 ]
  %185 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 40, i1 false) #15
  %186 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %146, i64 1
  br label %191

187:                                              ; preds = %180, %177, %170
  %188 = phi i8* [ %176, %170 ], [ %182, %180 ], [ %179, %177 ]
  %189 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 40, i1 false) #15
  %190 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %145, i64 1
  br label %191

191:                                              ; preds = %187, %183
  %192 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %186, %183 ], [ %146, %187 ]
  %193 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %145, %183 ], [ %190, %187 ]
  %194 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %144, i64 1
  %195 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %193, %127
  br i1 %195, label %131, label %143

196:                                              ; preds = %150, %135, %120, %148, %131, %51, %49, %35, %41, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__115__inplace_mergeIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %class.anon* readnone dereferenceable(1), i64, i64, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, i64) unnamed_addr #0 {
  %9 = alloca %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", align 8
  %10 = alloca %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", align 8
  %11 = alloca %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", align 8
  %12 = alloca %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", align 8
  %13 = alloca %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", align 8
  %14 = icmp eq i64 %5, 0
  br i1 %14, label %399, label %15

15:                                               ; preds = %8
  %16 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %1 to i64
  %17 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %0 to i64
  %18 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %13 to i8*
  %19 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %12 to i8*
  %20 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %11 to i8*
  %21 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %10 to i8*
  br label %22

22:                                               ; preds = %15, %392
  %23 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %2, %15 ], [ %397, %392 ]
  %24 = phi i64 [ %4, %15 ], [ %396, %392 ]
  %25 = phi i64 [ %5, %15 ], [ %395, %392 ]
  %26 = phi i64 [ %16, %15 ], [ %394, %392 ]
  %27 = phi i64 [ %17, %15 ], [ %393, %392 ]
  %28 = icmp sgt i64 %24, %7
  %29 = icmp sgt i64 %25, %7
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %39

31:                                               ; preds = %22
  %32 = icmp eq i64 %24, 0
  br i1 %32, label %399, label %33

33:                                               ; preds = %31
  %34 = inttoptr i64 %26 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  %35 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 0, i32 3
  %36 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %35, align 8
  %37 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 0, i32 4
  %38 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 0, i32 1, i32 0
  br label %162

39:                                               ; preds = %22
  %40 = inttoptr i64 %27 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  %41 = inttoptr i64 %26 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  %42 = icmp sgt i64 %24, %25
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %40, %41
  br i1 %44, label %399, label %97

45:                                               ; preds = %39
  %46 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %23, %41
  br i1 %46, label %399, label %154

47:                                               ; preds = %97
  %48 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %103, %6
  br i1 %48, label %399, label %49

49:                                               ; preds = %47, %92
  %50 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %94, %92 ], [ %6, %47 ]
  %51 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %95, %92 ], [ %40, %47 ]
  %52 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %93, %92 ], [ %41, %47 ]
  %53 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, %23
  br i1 %53, label %54, label %62

54:                                               ; preds = %49
  %55 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %103 to i64
  %56 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50 to i64
  %57 = sub i64 %55, %56
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %399, label %59

59:                                               ; preds = %54
  %60 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %51 to i8*
  %61 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 %57, i1 false) #15
  br label %399

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, i64 0, i32 3
  %64 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %63, align 8
  %65 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50, i64 0, i32 3
  %66 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %65, align 8
  %67 = icmp eq %"class.perfetto::trace_processor::Column"* %64, %66
  br i1 %67, label %68, label %82

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, i64 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, i64 0, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50, i64 0, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp ult i32 %76, %78
  br i1 %79, label %84, label %88

80:                                               ; preds = %68
  %81 = icmp ult i32 %70, %72
  br i1 %81, label %84, label %88

82:                                               ; preds = %62
  %83 = icmp ult %"class.perfetto::trace_processor::Column"* %64, %66
  br i1 %83, label %84, label %88

84:                                               ; preds = %82, %80, %74
  %85 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %51 to i8*
  %86 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 40, i1 false) #15
  %87 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %52, i64 1
  br label %92

88:                                               ; preds = %82, %80, %74
  %89 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %51 to i8*
  %90 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 40, i1 false) #15
  %91 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %50, i64 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %87, %84 ], [ %52, %88 ]
  %94 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %50, %84 ], [ %91, %88 ]
  %95 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %51, i64 1
  %96 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %94, %103
  br i1 %96, label %399, label %49

97:                                               ; preds = %43, %97
  %98 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %103, %97 ], [ %6, %43 ]
  %99 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %102, %97 ], [ %40, %43 ]
  %100 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %98 to i8*
  %101 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 40, i1 false) #15
  %102 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %99, i64 1
  %103 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %98, i64 1
  %104 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %102, %41
  br i1 %104, label %47, label %97

105:                                              ; preds = %154
  %106 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %160, %6
  br i1 %106, label %399, label %107

107:                                              ; preds = %105, %145
  %108 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %152, %145 ], [ %23, %105 ]
  %109 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %148, %145 ], [ %160, %105 ]
  %110 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %147, %145 ], [ %41, %105 ]
  %111 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %110, %40
  br i1 %111, label %112, label %120

112:                                              ; preds = %107, %112
  %113 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %115, %112 ], [ %109, %107 ]
  %114 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %116, %112 ], [ %108, %107 ]
  %115 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %113, i64 -1
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %114, i64 -1
  %117 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %116 to i8*
  %118 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 40, i1 false) #15
  %119 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %115, %6
  br i1 %119, label %399, label %112

120:                                              ; preds = %107
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %110, i64 -1
  %122 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %109, i64 -1
  %123 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %109, i64 -1, i32 3
  %124 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %123, align 8
  %125 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %110, i64 -1, i32 3
  %126 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %125, align 8
  %127 = icmp eq %"class.perfetto::trace_processor::Column"* %124, %126
  br i1 %127, label %128, label %142

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %109, i64 -1, i32 4
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %110, i64 -1, i32 4
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %130, %132
  br i1 %133, label %134, label %140

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %109, i64 -1, i32 1, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %110, i64 -1, i32 1, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp ult i32 %136, %138
  br i1 %139, label %145, label %144

140:                                              ; preds = %128
  %141 = icmp ult i32 %130, %132
  br i1 %141, label %145, label %144

142:                                              ; preds = %120
  %143 = icmp ult %"class.perfetto::trace_processor::Column"* %124, %126
  br i1 %143, label %145, label %144

144:                                              ; preds = %142, %140, %134
  br label %145

145:                                              ; preds = %134, %140, %142, %144
  %146 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %122, %144 ], [ %121, %142 ], [ %121, %140 ], [ %121, %134 ]
  %147 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %110, %144 ], [ %121, %142 ], [ %121, %140 ], [ %121, %134 ]
  %148 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %122, %144 ], [ %109, %142 ], [ %109, %140 ], [ %109, %134 ]
  %149 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %108, i64 -1
  %150 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %149 to i8*
  %151 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 40, i1 false) #15
  %152 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %108, i64 -1
  %153 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %148, %6
  br i1 %153, label %399, label %107

154:                                              ; preds = %45, %154
  %155 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %160, %154 ], [ %6, %45 ]
  %156 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %159, %154 ], [ %41, %45 ]
  %157 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %155 to i8*
  %158 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 40, i1 false) #15
  %159 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %156, i64 1
  %160 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %155, i64 1
  %161 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %159, %23
  br i1 %161, label %105, label %154

162:                                              ; preds = %33, %183
  %163 = phi i64 [ %24, %33 ], [ %186, %183 ]
  %164 = phi i64 [ %27, %33 ], [ %185, %183 ]
  %165 = inttoptr i64 %164 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  %166 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %165, i64 0, i32 3
  %167 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %166, align 8
  %168 = icmp eq %"class.perfetto::trace_processor::Column"* %36, %167
  br i1 %168, label %169, label %181

169:                                              ; preds = %162
  %170 = load i32, i32* %37, align 8
  %171 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %165, i64 0, i32 4
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %170, %172
  br i1 %173, label %174, label %179

174:                                              ; preds = %169
  %175 = load i32, i32* %38, align 4
  %176 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %165, i64 0, i32 1, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = icmp ult i32 %175, %177
  br i1 %178, label %188, label %183

179:                                              ; preds = %169
  %180 = icmp ult i32 %170, %172
  br i1 %180, label %188, label %183

181:                                              ; preds = %162
  %182 = icmp ult %"class.perfetto::trace_processor::Column"* %36, %167
  br i1 %182, label %188, label %183

183:                                              ; preds = %179, %174, %181
  %184 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %165, i64 1
  %185 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %184 to i64
  %186 = add nsw i64 %163, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %399, label %162

188:                                              ; preds = %179, %174, %181
  %189 = inttoptr i64 %164 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  %190 = icmp slt i64 %163, %25
  br i1 %190, label %191, label %236

191:                                              ; preds = %188
  %192 = sdiv i64 %25, 2
  %193 = sub i64 %26, %164
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %231, label %195

195:                                              ; preds = %191
  %196 = sdiv exact i64 %193, 40
  %197 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 %192, i32 3
  %198 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %197, align 8
  %199 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 %192, i32 4
  %200 = load i32, i32* %199, align 8
  %201 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 %192, i32 1, i32 0
  %202 = load i32, i32* %201, align 4
  br label %203

203:                                              ; preds = %227, %195
  %204 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %189, %195 ], [ %229, %227 ]
  %205 = phi i64 [ %196, %195 ], [ %228, %227 ]
  %206 = lshr i64 %205, 1
  %207 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %204, i64 1
  %208 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %204, i64 %206, i32 3
  %209 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %208, align 8
  %210 = icmp eq %"class.perfetto::trace_processor::Column"* %198, %209
  br i1 %210, label %211, label %221

211:                                              ; preds = %203
  %212 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %204, i64 %206, i32 4
  %213 = load i32, i32* %212, align 8
  %214 = icmp eq i32 %200, %213
  br i1 %214, label %215, label %219

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %204, i64 %206, i32 1, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp ult i32 %202, %217
  br i1 %218, label %227, label %223

219:                                              ; preds = %211
  %220 = icmp ult i32 %200, %213
  br i1 %220, label %227, label %223

221:                                              ; preds = %203
  %222 = icmp ult %"class.perfetto::trace_processor::Column"* %198, %209
  br i1 %222, label %227, label %223

223:                                              ; preds = %221, %219, %215
  %224 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %207, i64 %206
  %225 = xor i64 %206, -1
  %226 = add i64 %205, %225
  br label %227

227:                                              ; preds = %223, %221, %219, %215
  %228 = phi i64 [ %226, %223 ], [ %206, %221 ], [ %206, %215 ], [ %206, %219 ]
  %229 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %224, %223 ], [ %204, %221 ], [ %204, %215 ], [ %204, %219 ]
  %230 = icmp eq i64 %228, 0
  br i1 %230, label %231, label %203

231:                                              ; preds = %227, %191
  %232 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %189, %191 ], [ %229, %227 ]
  %233 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %232 to i64
  %234 = sub i64 %233, %164
  %235 = sdiv exact i64 %234, 40
  br label %292

236:                                              ; preds = %188
  %237 = icmp eq i64 %163, 1
  br i1 %237, label %238, label %242

238:                                              ; preds = %236
  %239 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %239)
  %240 = inttoptr i64 %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %239, i8* align 8 %240, i64 40, i1 false) #15
  %241 = inttoptr i64 %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %241, i64 40, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* nonnull align 8 %239, i64 40, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %239)
  br label %399

242:                                              ; preds = %236
  %243 = sdiv i64 %163, 2
  %244 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %189, i64 %243
  %245 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %244 to i64
  %246 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %23 to i64
  %247 = sub i64 %246, %26
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %286, label %249

249:                                              ; preds = %242
  %250 = sdiv exact i64 %247, 40
  %251 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %189, i64 %243, i32 3
  %252 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %251, align 8
  %253 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %189, i64 %243, i32 4
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %189, i64 %243, i32 1, i32 0
  %256 = load i32, i32* %255, align 4
  br label %257

257:                                              ; preds = %282, %249
  %258 = phi i64 [ 0, %249 ], [ %284, %282 ]
  %259 = phi i64 [ %250, %249 ], [ %283, %282 ]
  %260 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 %258
  %261 = lshr i64 %259, 1
  %262 = add nsw i64 %258, 1
  %263 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %260, i64 %261, i32 3
  %264 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %263, align 8
  %265 = icmp eq %"class.perfetto::trace_processor::Column"* %264, %252
  br i1 %265, label %266, label %276

266:                                              ; preds = %257
  %267 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %260, i64 %261, i32 4
  %268 = load i32, i32* %267, align 8
  %269 = icmp eq i32 %268, %254
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %260, i64 %261, i32 1, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp ult i32 %272, %256
  br i1 %273, label %278, label %282

274:                                              ; preds = %266
  %275 = icmp ult i32 %268, %254
  br i1 %275, label %278, label %282

276:                                              ; preds = %257
  %277 = icmp ult %"class.perfetto::trace_processor::Column"* %264, %252
  br i1 %277, label %278, label %282

278:                                              ; preds = %276, %274, %270
  %279 = add nsw i64 %262, %261
  %280 = xor i64 %261, -1
  %281 = add i64 %259, %280
  br label %282

282:                                              ; preds = %278, %276, %274, %270
  %283 = phi i64 [ %281, %278 ], [ %261, %276 ], [ %261, %270 ], [ %261, %274 ]
  %284 = phi i64 [ %279, %278 ], [ %258, %276 ], [ %258, %270 ], [ %258, %274 ]
  %285 = icmp eq i64 %283, 0
  br i1 %285, label %286, label %257

286:                                              ; preds = %282, %242
  %287 = phi i64 [ 0, %242 ], [ %284, %282 ]
  %288 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 %287
  %289 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %288 to i64
  %290 = sub i64 %289, %26
  %291 = sdiv exact i64 %290, 40
  br label %292

292:                                              ; preds = %286, %231
  %293 = phi i64 [ %233, %231 ], [ %245, %286 ]
  %294 = phi i64 [ %192, %231 ], [ %287, %286 ]
  %295 = phi i64 [ %192, %231 ], [ %291, %286 ]
  %296 = phi i64 [ %235, %231 ], [ %243, %286 ]
  %297 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %34, i64 %294
  %298 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %297 to i64
  %299 = sub nsw i64 %163, %296
  %300 = sub nsw i64 %25, %295
  %301 = inttoptr i64 %293 to %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*
  %302 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %301, %34
  br i1 %302, label %384, label %303

303:                                              ; preds = %292
  %304 = icmp eq i64 %294, 0
  br i1 %304, label %384, label %305

305:                                              ; preds = %303
  %306 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %301, i64 1
  %307 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %306, %34
  br i1 %307, label %308, label %318

308:                                              ; preds = %305
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21)
  %309 = inttoptr i64 %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %309, i64 40, i1 false) #15
  %310 = sub i64 %298, %26
  %311 = sdiv exact i64 %310, 40
  %312 = icmp eq i64 %310, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %308
  %314 = inttoptr i64 %26 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %309, i8* align 8 %314, i64 %310, i1 false) #15
  br label %315

315:                                              ; preds = %313, %308
  %316 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %301, i64 %311
  %317 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %316 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* nonnull align 8 %21, i64 40, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21)
  br label %384

318:                                              ; preds = %305
  %319 = icmp eq i64 %294, 1
  br i1 %319, label %320, label %336

320:                                              ; preds = %318
  %321 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %297, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20)
  %322 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %321 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %322, i64 40, i1 false) #15
  %323 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %321 to i64
  %324 = sub i64 %323, %293
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %326, label %328

326:                                              ; preds = %320
  %327 = inttoptr i64 %293 to i8*
  br label %333

328:                                              ; preds = %320
  %329 = sdiv exact i64 %324, -40
  %330 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %297, i64 %329
  %331 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %330 to i8*
  %332 = inttoptr i64 %293 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %331, i8* align 8 %332, i64 %324, i1 false) #15
  br label %333

333:                                              ; preds = %328, %326
  %334 = phi i8* [ %327, %326 ], [ %332, %328 ]
  %335 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %297, %326 ], [ %330, %328 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* nonnull align 8 %20, i64 40, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20)
  br label %384

336:                                              ; preds = %318
  %337 = sub i64 %26, %293
  %338 = sdiv exact i64 %337, 40
  %339 = sub i64 %298, %26
  %340 = sdiv exact i64 %339, 40
  %341 = icmp eq i64 %338, %340
  br i1 %341, label %342, label %350

342:                                              ; preds = %336, %342
  %343 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %348, %342 ], [ %34, %336 ]
  %344 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %347, %342 ], [ %301, %336 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19)
  %345 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %344 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %345, i64 40, i1 false) #15
  %346 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %343 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %345, i8* align 8 %346, i64 40, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %346, i8* nonnull align 8 %19, i64 40, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19)
  %347 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %344, i64 1
  %348 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %343, i64 1
  %349 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %347, %34
  br i1 %349, label %384, label %342

350:                                              ; preds = %336, %350
  %351 = phi i64 [ %353, %350 ], [ %340, %336 ]
  %352 = phi i64 [ %351, %350 ], [ %338, %336 ]
  %353 = srem i64 %352, %351
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %355, label %350

355:                                              ; preds = %350
  %356 = icmp eq i64 %351, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %355
  %358 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %301, i64 %351
  br label %361

359:                                              ; preds = %381, %355
  %360 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %301, i64 %340
  br label %384

361:                                              ; preds = %381, %357
  %362 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %358, %357 ], [ %363, %381 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18)
  %363 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %362, i64 -1
  %364 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %363 to i64
  %365 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %365, i64 40, i1 false) #15
  %366 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %363, i64 %338
  br label %367

367:                                              ; preds = %367, %361
  %368 = phi i64 [ %364, %361 ], [ %370, %367 ]
  %369 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %366, %361 ], [ %379, %367 ]
  %370 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %369 to i64
  %371 = inttoptr i64 %368 to i8*
  %372 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %369 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %371, i8* align 8 %372, i64 40, i1 false) #15
  %373 = sub i64 %298, %370
  %374 = sdiv exact i64 %373, 40
  %375 = icmp slt i64 %338, %374
  %376 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %369, i64 %338
  %377 = sub nsw i64 %338, %374
  %378 = getelementptr inbounds %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg", %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %301, i64 %377
  %379 = select i1 %375, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %376, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %378
  %380 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %379, %363
  br i1 %380, label %381, label %367

381:                                              ; preds = %367
  %382 = bitcast %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %369 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %382, i8* nonnull align 8 %18, i64 40, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18)
  %383 = icmp eq %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %363, %301
  br i1 %383, label %359, label %361

384:                                              ; preds = %342, %359, %333, %315, %292, %303
  %385 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %301, %303 ], [ %297, %292 ], [ %316, %315 ], [ %335, %333 ], [ %360, %359 ], [ %34, %342 ]
  %386 = add nsw i64 %296, %295
  %387 = add nsw i64 %299, %300
  %388 = icmp slt i64 %386, %387
  br i1 %388, label %389, label %391

389:                                              ; preds = %384
  %390 = ptrtoint %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %385 to i64
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %189, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %301, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %385, %class.anon* dereferenceable(1) %3, i64 %296, i64 %295, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %6, i64 %7)
  br label %392

391:                                              ; preds = %384
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN8perfetto15trace_processor11ArgsTracker5FlushEvE3$_0NS_11__wrap_iterIPNS2_17GlobalArgsTracker3ArgEEEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl"(%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %385, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %297, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %23, %class.anon* dereferenceable(1) %3, i64 %299, i64 %300, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* %6, i64 %7)
  br label %392

392:                                              ; preds = %389, %391
  %393 = phi i64 [ %390, %389 ], [ %164, %391 ]
  %394 = phi i64 [ %298, %389 ], [ %293, %391 ]
  %395 = phi i64 [ %300, %389 ], [ %295, %391 ]
  %396 = phi i64 [ %299, %389 ], [ %296, %391 ]
  %397 = phi %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* [ %23, %389 ], [ %385, %391 ]
  %398 = icmp eq i64 %395, 0
  br i1 %398, label %399, label %22

399:                                              ; preds = %392, %31, %183, %92, %145, %112, %8, %238, %105, %59, %54, %47, %45, %43
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readnone }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8perfetto15trace_processor8SqlValue4LongEl: argument 0"}
!4 = distinct !{!4, !"_ZN8perfetto15trace_processor8SqlValue4LongEl"}
!5 = !{i64 0, i64 65}
!6 = !{i8 0, i8 2}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN8perfetto15trace_processor11tc_internal10SerializerIlvE9SerializeENS_4base8OptionalIlEE: argument 0"}
!10 = distinct !{!10, !"_ZN8perfetto15trace_processor11tc_internal10SerializerIlvE9SerializeENS_4base8OptionalIlEE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN8perfetto15trace_processor11tc_internal10SerializerIdvE9SerializeENS_4base8OptionalIdEE: argument 0"}
!13 = distinct !{!13, !"_ZN8perfetto15trace_processor11tc_internal10SerializerIdvE9SerializeENS_4base8OptionalIdEE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRmJjEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImjEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRmJjEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISJ_EEEEEEmOT_DpOT0_"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !18}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !18}
!22 = distinct !{!22, !18}
!23 = distinct !{!23, !18}
!24 = distinct !{!24, !18}
!25 = distinct !{!25, !18}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.isvectorized", i32 1}
!33 = distinct !{!33, !18}
!34 = distinct !{!34, !32}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !32}
!41 = distinct !{!41, !18}
!42 = distinct !{!42, !18}
!43 = distinct !{!43, !32}
!44 = distinct !{!44, !18}
!45 = distinct !{!45, !18}
!46 = distinct !{!46, !18}
!47 = distinct !{!47, !18}
!48 = distinct !{!48, !18}
!49 = distinct !{!49, !18}
!50 = distinct !{!50, !18}
!51 = distinct !{!51, !18}
!52 = distinct !{!52, !18}
!53 = distinct !{!53, !18}
!54 = distinct !{!54, !18}
!55 = distinct !{!55, !18}
!56 = distinct !{!56, !18}
!57 = distinct !{!57, !18}
!58 = distinct !{!58, !18}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN8perfetto4base13make_optionalIjEENS0_8OptionalINSt3__15decayIT_E4typeEEEOS5_: argument 0"}
!61 = distinct !{!61, !"_ZN8perfetto4base13make_optionalIjEENS0_8OptionalINSt3__15decayIT_E4typeEEEOS5_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN8perfetto4base13make_optionalIjEENS0_8OptionalINSt3__15decayIT_E4typeEEEOS5_: argument 0"}
!64 = distinct !{!64, !"_ZN8perfetto4base13make_optionalIjEENS0_8OptionalINSt3__15decayIT_E4typeEEEOS5_"}
!65 = distinct !{!65, !18}
!66 = distinct !{!66, !18}
!67 = distinct !{!67, !18}
!68 = distinct !{!68, !18}
!69 = distinct !{!69, !18}
!70 = distinct !{!70, !18}
!71 = distinct !{!71, !18}
!72 = distinct !{!72, !18}
!73 = distinct !{!73, !18}
!74 = distinct !{!74, !18}
!75 = distinct !{!75, !18}
!76 = distinct !{!76, !18}
!77 = distinct !{!77, !18}
