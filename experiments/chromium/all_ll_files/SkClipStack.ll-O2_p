; ModuleID = '../../third_party/skia/src/core/SkClipStack.cpp'
source_filename = "../../third_party/skia/src/core/SkClipStack.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.sk_sp.13 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type opaque
%class.SkTArray = type { %class.GrUniqueKey*, i64 }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.15, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp.15 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.16, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.16 = type { %"struct.std::__1::atomic" }
%"class.SkClipStack::Element" = type { %class.SkTLazy, %class.SkRRect, %class.sk_sp.13, i32, i32, i32, i8, i32, %struct.SkRect, i8, i32, %class.GrProxyProvider*, %class.SkTArray }
%class.SkClipStack = type <{ %class.SkDeque, i32, %struct.SkRect, [4 x i8] }>
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkClipStack::Iter" = type { %class.SkClipStack*, %"class.SkDeque::Iter" }
%"class.SkDeque::Iter" = type { %"struct.SkDeque::Block"*, i8*, i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.17", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.23, %class.sk_sp.24, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.29" }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%class.sk_sp.24 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.25 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.25 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.26, void (i8*)*, i8* }
%class.SkNVRefCnt.26 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.27, i32, [4 x i8] }
%union.anon.27 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.24, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type opaque
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i64 }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkMatrix = type { [9 x float], i32 }
%"class.SkDeque::F2BIter" = type { %"class.SkDeque::Iter" }
%struct.SkIRect = type { i32, i32, i32, i32 }

$_ZN8SkTArrayI11GrUniqueKeyLb0EED2Ev = comdat any

@_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty = internal constant %struct.SkRect zeroinitializer, align 4
@_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite = internal global %struct.SkRect zeroinitializer, align 8
@_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite = internal global i64 0, align 8
@.str = private unnamed_addr constant [48 x i8] c"../../third_party/skia/src/core/SkClipStack.cpp\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"SkClipOp error\0A\00", align 1
@__const._ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE.element = private unnamed_addr constant { %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray } { %class.SkTLazy { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*) }, %class.SkRRect { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.13 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.GrProxyProvider* inttoptr (i64 -6148914691236517206 to %class.GrProxyProvider*), %class.SkTArray { %class.GrUniqueKey* inttoptr (i64 -6148914691236517206 to %class.GrUniqueKey*), i64 -6148914691236517206 } }, align 8
@_ZZN11SkClipStack12GetNextGenIDEvE6nextID = internal global { { i32 } } { { i32 } { i32 3 } }, align 4

@_ZN11SkClipStack7ElementC1ERKS0_ = hidden unnamed_addr alias void (%"class.SkClipStack::Element"*, %"class.SkClipStack::Element"*), void (%"class.SkClipStack::Element"*, %"class.SkClipStack::Element"*)* @_ZN11SkClipStack7ElementC2ERKS0_
@_ZN11SkClipStack7ElementD1Ev = hidden unnamed_addr alias void (%"class.SkClipStack::Element"*), void (%"class.SkClipStack::Element"*)* @_ZN11SkClipStack7ElementD2Ev
@_ZN11SkClipStackC1Ev = hidden unnamed_addr alias void (%class.SkClipStack*), void (%class.SkClipStack*)* @_ZN11SkClipStackC2Ev
@_ZN11SkClipStackC1EPvm = hidden unnamed_addr alias void (%class.SkClipStack*, i8*, i64), void (%class.SkClipStack*, i8*, i64)* @_ZN11SkClipStackC2EPvm
@_ZN11SkClipStackC1ERKS_ = hidden unnamed_addr alias void (%class.SkClipStack*, %class.SkClipStack*), void (%class.SkClipStack*, %class.SkClipStack*)* @_ZN11SkClipStackC2ERKS_
@_ZN11SkClipStackD1Ev = hidden unnamed_addr alias void (%class.SkClipStack*), void (%class.SkClipStack*)* @_ZN11SkClipStackD2Ev
@_ZN11SkClipStack4IterC1Ev = hidden unnamed_addr alias void (%"class.SkClipStack::Iter"*), void (%"class.SkClipStack::Iter"*)* @_ZN11SkClipStack4IterC2Ev
@_ZN11SkClipStack4IterC1ERKS_NS0_9IterStartE = hidden unnamed_addr alias void (%"class.SkClipStack::Iter"*, %class.SkClipStack*, i32), void (%"class.SkClipStack::Iter"*, %class.SkClipStack*, i32)* @_ZN11SkClipStack4IterC2ERKS_NS0_9IterStartE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7ElementC2ERKS0_(%"class.SkClipStack::Element"*, %"class.SkClipStack::Element"* readonly dereferenceable(160)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %5 = bitcast %class.SkRRect* %4 to i8*
  %6 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 2, i32 0
  store %class.SkShader* null, %class.SkShader** %6, align 8
  %7 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 12, i32 1
  %9 = bitcast %class.SkPath** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 60, i1 false)
  %10 = bitcast %class.GrProxyProvider** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  store i64 1, i64* %8, align 8
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %45 [
    i32 0, label %13
    i32 1, label %14
    i32 2, label %14
    i32 3, label %17
    i32 4, label %23
  ]

13:                                               ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 52, i1 false) #7
  store %class.SkShader* null, %class.SkShader** %6, align 8
  br label %45

14:                                               ; preds = %2, %2
  store %class.SkShader* null, %class.SkShader** %6, align 8
  %15 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1
  %16 = bitcast %class.SkRRect* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 4 %16, i64 52, i1 false)
  br label %45

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %6, align 8
  %19 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 0, i32 1
  %20 = load %class.SkPath*, %class.SkPath** %19, align 8
  %21 = bitcast %"class.SkClipStack::Element"* %0 to %class.SkPath*
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %21, %class.SkPath* dereferenceable(16) %20) #7
  %22 = bitcast %class.SkPath** %3 to %class.SkTLazy**
  store %class.SkTLazy* %18, %class.SkTLazy** %22, align 8
  br label %45

23:                                               ; preds = %2
  %24 = icmp eq %"class.SkClipStack::Element"* %0, %1
  br i1 %24, label %45, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 2, i32 0
  %27 = load %class.SkShader*, %class.SkShader** %26, align 8
  %28 = icmp eq %class.SkShader* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  store %class.SkShader* %27, %class.SkShader** %6, align 8
  br label %45

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.SkShader, %class.SkShader* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  %33 = load %class.SkShader*, %class.SkShader** %6, align 8
  %34 = bitcast %class.SkShader* %33 to %class.SkRefCntBase*
  store %class.SkShader* %27, %class.SkShader** %6, align 8
  %35 = icmp eq %class.SkShader* %33, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %class.SkShader, %class.SkShader* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %45

40:                                               ; preds = %36
  %41 = bitcast %class.SkShader* %33 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  tail call void %44(%class.SkRefCntBase* nonnull %34) #7
  br label %45

45:                                               ; preds = %29, %13, %40, %36, %30, %23, %17, %2, %14
  %46 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 %50, i32* %51, align 4
  %52 = load i32, i32* %11, align 8
  %53 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 6
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 %55, i8* %56, align 4
  %57 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 7
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 %58, i32* %59, align 8
  %60 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 8
  %61 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %62 = bitcast %struct.SkRect* %61 to i8*
  %63 = bitcast %struct.SkRect* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 16, i1 false)
  %64 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 9
  %65 = load i8, i8* %64, align 4, !range !2
  %66 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 9
  store i8 %65, i8* %66, align 4
  %67 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 10
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 %68, i32* %69, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7ElementD2Ev(%"class.SkClipStack::Element"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 12, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 11
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 0
  br label %30

10:                                               ; preds = %30, %1
  tail call void @_ZN8SkTArrayI11GrUniqueKeyLb0EED2Ev(%class.SkTArray* %2) #7
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 2, i32 0
  %12 = load %class.SkShader*, %class.SkShader** %11, align 8
  %13 = icmp eq %class.SkShader* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkShader, %class.SkShader* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = bitcast %class.SkShader* %12 to %class.SkRefCntBase*
  %20 = bitcast %class.SkShader* %12 to void (%class.SkRefCntBase*)***
  %21 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, i64 2
  %23 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, align 8
  tail call void %23(%class.SkRefCntBase* nonnull %19) #7
  br label %24

24:                                               ; preds = %10, %14, %18
  %25 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %26 = load %class.SkPath*, %class.SkPath** %25, align 8
  %27 = icmp eq %class.SkPath* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %26) #7
  store %class.SkPath* null, %class.SkPath** %25, align 8
  br label %29

29:                                               ; preds = %24, %28
  ret void

30:                                               ; preds = %7, %30
  %31 = phi i64 [ 0, %7 ], [ %35, %30 ]
  %32 = load %class.GrProxyProvider*, %class.GrProxyProvider** %8, align 8
  %33 = load %class.GrUniqueKey*, %class.GrUniqueKey** %9, align 8
  %34 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %33, i64 %31
  tail call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %32, %class.GrUniqueKey* dereferenceable(56) %34, %class.GrTextureProxy* null, i1 zeroext true) #7
  %35 = add nuw nsw i64 %31, 1
  %36 = load i64, i64* %3, align 8
  %37 = lshr i64 %36, 1
  %38 = and i64 %37, 2147483647
  %39 = icmp ult i64 %35, %38
  br i1 %39, label %30, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), %class.GrTextureProxy*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI11GrUniqueKeyLb0EED2Ev(%class.SkTArray*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 4294967294
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %12

8:                                                ; preds = %31, %1
  %9 = phi i64 [ %3, %1 ], [ %33, %31 ]
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %40, label %37

12:                                               ; preds = %6, %31
  %13 = phi i64 [ 0, %6 ], [ %32, %31 ]
  %14 = load %class.GrUniqueKey*, %class.GrUniqueKey** %7, align 8
  %15 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %14, i64 %13, i32 1, i32 0
  %16 = load %class.SkData*, %class.SkData** %15, align 8
  %17 = icmp eq %class.SkData* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %16) #7
  %23 = bitcast %class.SkData* %16 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %23) #7
  br label %24

24:                                               ; preds = %22, %18, %12
  %25 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %14, i64 %13, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %14, i64 %13, i32 0, i32 0, i32 1, i32 0, i64 0
  %28 = icmp eq i32* %26, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = bitcast i32* %26 to i8*
  tail call void @_Z7sk_freePv(i8* %30) #7
  br label %31

31:                                               ; preds = %24, %29
  %32 = add nuw nsw i64 %13, 1
  %33 = load i64, i64* %2, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = icmp ult i64 %32, %35
  br i1 %36, label %12, label %8

37:                                               ; preds = %8
  %38 = bitcast %class.SkTArray* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_Z7sk_freePv(i8* %39) #7
  br label %40

40:                                               ; preds = %8, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStack7ElementeqERKS0_(%"class.SkClipStack::Element"* readonly, %"class.SkClipStack::Element"* readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.SkClipStack::Element"* %0, %1
  br i1 %3, label %140, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %140

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %140

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 6
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %18, %20
  br i1 %21, label %22, label %140

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %140

28:                                               ; preds = %22
  switch i32 %12, label %139 [
    i32 4, label %29
    i32 3, label %35
    i32 2, label %41
    i32 1, label %114
    i32 0, label %140
  ]

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 2, i32 0
  %31 = load %class.SkShader*, %class.SkShader** %30, align 8
  %32 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 2, i32 0
  %33 = load %class.SkShader*, %class.SkShader** %32, align 8
  %34 = icmp eq %class.SkShader* %31, %33
  br label %140

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %37 = load %class.SkPath*, %class.SkPath** %36, align 8
  %38 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 0, i32 1
  %39 = load %class.SkPath*, %class.SkPath** %38, align 8
  %40 = tail call zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* dereferenceable(16) %37, %class.SkPath* dereferenceable(16) %39) #7
  br label %140

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 0
  %43 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 0
  %44 = load float, float* %42, align 4
  %45 = load float, float* %43, align 4
  %46 = fcmp une float %44, %45
  br i1 %46, label %140, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds float, float* %42, i64 1
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds float, float* %43, i64 1
  %51 = load float, float* %50, align 4
  %52 = fcmp une float %49, %51
  br i1 %52, label %140, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds float, float* %42, i64 2
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds float, float* %43, i64 2
  %57 = load float, float* %56, align 4
  %58 = fcmp une float %55, %57
  br i1 %58, label %140, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds float, float* %42, i64 3
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds float, float* %43, i64 3
  %63 = load float, float* %62, align 4
  %64 = fcmp une float %61, %63
  br i1 %64, label %140, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 1, i64 0, i32 0
  %67 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 1, i64 0, i32 0
  %68 = load float, float* %66, align 4
  %69 = load float, float* %67, align 4
  %70 = fcmp une float %68, %69
  br i1 %70, label %140, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds float, float* %66, i64 1
  %73 = load float, float* %72, align 4
  %74 = getelementptr inbounds float, float* %67, i64 1
  %75 = load float, float* %74, align 4
  %76 = fcmp une float %73, %75
  br i1 %76, label %140, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds float, float* %66, i64 2
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds float, float* %67, i64 2
  %81 = load float, float* %80, align 4
  %82 = fcmp une float %79, %81
  br i1 %82, label %140, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds float, float* %66, i64 3
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds float, float* %67, i64 3
  %87 = load float, float* %86, align 4
  %88 = fcmp une float %85, %87
  br i1 %88, label %140, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds float, float* %66, i64 4
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds float, float* %67, i64 4
  %93 = load float, float* %92, align 4
  %94 = fcmp une float %91, %93
  br i1 %94, label %140, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds float, float* %66, i64 5
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds float, float* %67, i64 5
  %99 = load float, float* %98, align 4
  %100 = fcmp une float %97, %99
  br i1 %100, label %140, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds float, float* %66, i64 6
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds float, float* %67, i64 6
  %105 = load float, float* %104, align 4
  %106 = fcmp une float %103, %105
  br i1 %106, label %140, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds float, float* %66, i64 7
  %109 = load float, float* %108, align 4
  %110 = getelementptr inbounds float, float* %67, i64 7
  %111 = load float, float* %110, align 4
  %112 = fcmp une float %109, %111
  br i1 %112, label %140, label %113

113:                                              ; preds = %107
  br label %140

114:                                              ; preds = %28
  %115 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 0
  %116 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 0
  %117 = load float, float* %115, align 4
  %118 = load float, float* %116, align 4
  %119 = fcmp une float %117, %118
  br i1 %119, label %140, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds float, float* %115, i64 1
  %122 = load float, float* %121, align 4
  %123 = getelementptr inbounds float, float* %116, i64 1
  %124 = load float, float* %123, align 4
  %125 = fcmp une float %122, %124
  br i1 %125, label %140, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds float, float* %115, i64 2
  %128 = load float, float* %127, align 4
  %129 = getelementptr inbounds float, float* %116, i64 2
  %130 = load float, float* %129, align 4
  %131 = fcmp une float %128, %130
  br i1 %131, label %140, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds float, float* %115, i64 3
  %134 = load float, float* %133, align 4
  %135 = getelementptr inbounds float, float* %116, i64 3
  %136 = load float, float* %135, align 4
  %137 = fcmp une float %134, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %132
  br label %140

139:                                              ; preds = %28
  br label %140

140:                                              ; preds = %138, %132, %126, %120, %114, %113, %107, %101, %95, %89, %83, %77, %71, %65, %59, %53, %47, %41, %28, %4, %10, %16, %22, %2, %139, %35, %29
  %141 = phi i1 [ false, %139 ], [ %40, %35 ], [ %34, %29 ], [ true, %2 ], [ false, %22 ], [ false, %16 ], [ false, %10 ], [ false, %4 ], [ true, %28 ], [ false, %41 ], [ false, %47 ], [ false, %53 ], [ false, %59 ], [ false, %65 ], [ false, %71 ], [ false, %77 ], [ false, %83 ], [ false, %89 ], [ false, %95 ], [ false, %101 ], [ false, %107 ], [ true, %113 ], [ false, %114 ], [ false, %120 ], [ false, %126 ], [ false, %132 ], [ true, %138 ]
  ret i1 %141
}

declare zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %struct.SkRect* @_ZNK11SkClipStack7Element9getBoundsEv(%"class.SkClipStack::Element"* readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store <2 x float> <float 0xC1C0000000000000, float 0xC1C0000000000000>, <2 x float>* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to <2 x float>*), align 8
  store <2 x float> <float 0x41C0000000000000, float 0x41C0000000000000>, <2 x float>* bitcast (float* getelementptr inbounds (%struct.SkRect, %struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, i64 0, i32 2) to <2 x float>*), align 8
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %34 [
    i32 1, label %12
    i32 2, label %12
    i32 3, label %14
    i32 4, label %35
    i32 0, label %33
  ]

12:                                               ; preds = %9, %9
  %13 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0
  br label %35

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %16 = load %class.SkPath*, %class.SkPath** %15, align 8
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %16, i64 0, i32 0, i32 0
  %18 = load %class.SkPathRef*, %class.SkPathRef** %17, align 8
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %18, i64 0, i32 9
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %18, i64 0, i32 1
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %18, i64 0, i32 3, i32 0
  %25 = load %struct.SkPoint*, %struct.SkPoint** %24, align 8
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %18, i64 0, i32 3, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %23, %struct.SkPoint* %25, i32 %27) #7
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %18, i64 0, i32 10
  %30 = zext i1 %28 to i8
  store i8 %30, i8* %29, align 1
  store i8 0, i8* %19, align 8
  br label %31

31:                                               ; preds = %14, %22
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %18, i64 0, i32 1
  br label %35

33:                                               ; preds = %9
  br label %35

34:                                               ; preds = %9
  br label %35

35:                                               ; preds = %9, %34, %33, %31, %12
  %36 = phi %struct.SkRect* [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %34 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %33 ], [ %32, %31 ], [ %13, %12 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, %9 ]
  ret %struct.SkRect* %36
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStack7Element8containsERK6SkRect(%"class.SkClipStack::Element"*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %44 [
    i32 1, label %5
    i32 2, label %37
    i32 3, label %40
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %9 = load float, float* %8, align 4
  %10 = fcmp olt float %7, %9
  br i1 %10, label %11, label %44

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %15 = load float, float* %14, align 4
  %16 = fcmp uge float %13, %15
  br i1 %16, label %44, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = fcmp olt float %19, %21
  br i1 %22, label %23, label %44

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = fcmp uge float %25, %27
  %29 = fcmp ugt float %19, %7
  %30 = or i1 %29, %28
  br i1 %30, label %44, label %31

31:                                               ; preds = %23
  %32 = fcmp ole float %25, %13
  %33 = fcmp oge float %21, %9
  %34 = fcmp oge float %27, %15
  %35 = and i1 %33, %32
  %36 = and i1 %34, %35
  br label %44

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %39 = tail call zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect* %38, %struct.SkRect* dereferenceable(16) %1) #7
  br label %44

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %42 = load %class.SkPath*, %class.SkPath** %41, align 8
  %43 = tail call zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath* %42, %struct.SkRect* dereferenceable(16) %1) #7
  br label %44

44:                                               ; preds = %31, %23, %17, %11, %5, %2, %40, %37
  %45 = phi i1 [ %43, %40 ], [ %39, %37 ], [ false, %2 ], [ %36, %31 ], [ false, %23 ], [ false, %17 ], [ false, %11 ], [ false, %5 ]
  ret i1 %45
}

declare zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStack7Element8containsERK7SkRRect(%"class.SkClipStack::Element"*, %class.SkRRect* dereferenceable(52)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %119 [
    i32 1, label %5
    i32 2, label %37
    i32 3, label %114
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 2
  %9 = load float, float* %8, align 4
  %10 = fcmp olt float %7, %9
  br i1 %10, label %11, label %119

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 3
  %15 = load float, float* %14, align 4
  %16 = fcmp uge float %13, %15
  br i1 %16, label %119, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = fcmp olt float %19, %21
  br i1 %22, label %23, label %119

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = fcmp uge float %25, %27
  %29 = fcmp ugt float %19, %7
  %30 = or i1 %29, %28
  br i1 %30, label %119, label %31

31:                                               ; preds = %23
  %32 = fcmp ole float %25, %13
  %33 = fcmp oge float %21, %9
  %34 = fcmp oge float %27, %15
  %35 = and i1 %33, %32
  %36 = and i1 %34, %35
  br label %119

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  %40 = tail call zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect* %38, %struct.SkRect* dereferenceable(16) %39) #7
  br i1 %40, label %119, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %38, i64 0, i32 0, i32 0
  %44 = load float, float* %42, align 4
  %45 = load float, float* %43, align 4
  %46 = fcmp une float %44, %45
  br i1 %46, label %119, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds float, float* %42, i64 1
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds float, float* %43, i64 1
  %51 = load float, float* %50, align 4
  %52 = fcmp une float %49, %51
  br i1 %52, label %119, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds float, float* %42, i64 2
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds float, float* %43, i64 2
  %57 = load float, float* %56, align 4
  %58 = fcmp une float %55, %57
  br i1 %58, label %119, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds float, float* %42, i64 3
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds float, float* %43, i64 3
  %63 = load float, float* %62, align 4
  %64 = fcmp une float %61, %63
  br i1 %64, label %119, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 0, i32 0
  %67 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 1, i64 0, i32 0
  %68 = load float, float* %66, align 4
  %69 = load float, float* %67, align 4
  %70 = fcmp une float %68, %69
  br i1 %70, label %119, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds float, float* %66, i64 1
  %73 = load float, float* %72, align 4
  %74 = getelementptr inbounds float, float* %67, i64 1
  %75 = load float, float* %74, align 4
  %76 = fcmp une float %73, %75
  br i1 %76, label %119, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds float, float* %66, i64 2
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds float, float* %67, i64 2
  %81 = load float, float* %80, align 4
  %82 = fcmp une float %79, %81
  br i1 %82, label %119, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds float, float* %66, i64 3
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds float, float* %67, i64 3
  %87 = load float, float* %86, align 4
  %88 = fcmp une float %85, %87
  br i1 %88, label %119, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds float, float* %66, i64 4
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds float, float* %67, i64 4
  %93 = load float, float* %92, align 4
  %94 = fcmp une float %91, %93
  br i1 %94, label %119, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds float, float* %66, i64 5
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds float, float* %67, i64 5
  %99 = load float, float* %98, align 4
  %100 = fcmp une float %97, %99
  br i1 %100, label %119, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds float, float* %66, i64 6
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds float, float* %67, i64 6
  %105 = load float, float* %104, align 4
  %106 = fcmp une float %103, %105
  br i1 %106, label %119, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds float, float* %66, i64 7
  %109 = load float, float* %108, align 4
  %110 = getelementptr inbounds float, float* %67, i64 7
  %111 = load float, float* %110, align 4
  %112 = fcmp une float %109, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %107
  br label %119

114:                                              ; preds = %2
  %115 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %116 = load %class.SkPath*, %class.SkPath** %115, align 8
  %117 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  %118 = tail call zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath* %116, %struct.SkRect* dereferenceable(16) %117) #7
  br label %119

119:                                              ; preds = %113, %107, %101, %95, %89, %83, %77, %71, %65, %59, %53, %47, %41, %31, %23, %17, %11, %5, %2, %37, %114
  %120 = phi i1 [ %118, %114 ], [ true, %37 ], [ false, %2 ], [ %36, %31 ], [ false, %23 ], [ false, %17 ], [ false, %11 ], [ false, %5 ], [ false, %41 ], [ false, %47 ], [ false, %53 ], [ false, %59 ], [ false, %65 ], [ false, %71 ], [ false, %77 ], [ false, %83 ], [ false, %89 ], [ false, %95 ], [ false, %101 ], [ false, %107 ], [ true, %113 ]
  ret i1 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element19invertShapeFillTypeEv(%"class.SkClipStack::Element"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.13, align 8
  %3 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %77 [
    i32 1, label %5
    i32 2, label %20
    i32 3, label %35
    i32 4, label %41
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %8 = load %class.SkPath*, %class.SkPath** %7, align 8
  %9 = icmp eq %class.SkPath* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #7
  store %class.SkPath* null, %class.SkPath** %7, align 8
  br label %11

11:                                               ; preds = %5, %10
  %12 = bitcast %"class.SkClipStack::Element"* %0 to %class.SkPath*
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %12) #7
  %13 = bitcast %class.SkPath** %7 to %class.SkTLazy**
  store %class.SkTLazy* %6, %class.SkTLazy** %13, align 8
  %14 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0
  %15 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %12, %struct.SkRect* dereferenceable(16) %14, i32 0, i32 0) #7
  %16 = load %class.SkPath*, %class.SkPath** %7, align 8
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %16, i64 0, i32 4
  %18 = load i8, i8* %17, align 2
  %19 = or i8 %18, 3
  store i8 %19, i8* %17, align 2
  store i32 3, i32* %3, align 8
  br label %77

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0
  %22 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %23 = load %class.SkPath*, %class.SkPath** %22, align 8
  %24 = icmp eq %class.SkPath* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %23) #7
  store %class.SkPath* null, %class.SkPath** %22, align 8
  br label %26

26:                                               ; preds = %20, %25
  %27 = bitcast %"class.SkClipStack::Element"* %0 to %class.SkPath*
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %27) #7
  %28 = bitcast %class.SkPath** %22 to %class.SkTLazy**
  store %class.SkTLazy* %21, %class.SkTLazy** %28, align 8
  %29 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %30 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* %27, %class.SkRRect* dereferenceable(52) %29, i32 0) #7
  %31 = load %class.SkPath*, %class.SkPath** %22, align 8
  %32 = getelementptr inbounds %class.SkPath, %class.SkPath* %31, i64 0, i32 4
  %33 = load i8, i8* %32, align 2
  %34 = or i8 %33, 3
  store i8 %34, i8* %32, align 2
  store i32 3, i32* %3, align 8
  br label %77

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %37 = load %class.SkPath*, %class.SkPath** %36, align 8
  %38 = getelementptr inbounds %class.SkPath, %class.SkPath* %37, i64 0, i32 4
  %39 = load i8, i8* %38, align 2
  %40 = xor i8 %39, 2
  store i8 %40, i8* %38, align 2
  br label %77

41:                                               ; preds = %1
  %42 = bitcast %class.sk_sp.13* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7
  %43 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 2
  %44 = bitcast %class.sk_sp.13* %43 to %class.SkShaderBase**
  %45 = load %class.SkShaderBase*, %class.SkShaderBase** %44, align 8
  call void @_ZNK12SkShaderBase15makeInvertAlphaEv(%class.sk_sp.13* nonnull sret %2, %class.SkShaderBase* %45) #7
  %46 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %2, i64 0, i32 0
  %47 = bitcast %class.sk_sp.13* %2 to i64*
  %48 = load i64, i64* %47, align 8
  store %class.SkShader* null, %class.SkShader** %46, align 8
  %49 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %43, i64 0, i32 0
  %50 = load %class.SkShader*, %class.SkShader** %49, align 8
  %51 = bitcast %class.sk_sp.13* %43 to i64*
  store i64 %48, i64* %51, align 8
  %52 = icmp eq %class.SkShader* %50, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %class.SkShader, %class.SkShader* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkShader* %50 to %class.SkRefCntBase*
  %59 = bitcast %class.SkShader* %50 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #7
  br label %63

63:                                               ; preds = %41, %53, %57
  %64 = load %class.SkShader*, %class.SkShader** %46, align 8
  %65 = icmp eq %class.SkShader* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.SkShader, %class.SkShader* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkShader* %64 to %class.SkRefCntBase*
  %72 = bitcast %class.SkShader* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  call void %75(%class.SkRefCntBase* nonnull %71) #7
  br label %76

76:                                               ; preds = %63, %66, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7
  br label %77

77:                                               ; preds = %1, %76, %35, %26, %11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath*, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #2

declare void @_ZNK12SkShaderBase15makeInvertAlphaEv(%class.sk_sp.13* sret, %class.SkShaderBase*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element10initCommonEi8SkClipOpb(%"class.SkClipStack::Element"* nocapture, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 %5, i8* %8, align 4
  %9 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 0, i32* %11, align 8
  %12 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element8initRectEiRK6SkRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"*, i32, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca %class.SkPath, align 8
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = trunc i32 %10 to i8
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %6
  %14 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %3) #7
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %9, align 4
  br label %16

16:                                               ; preds = %6, %13
  %17 = phi i32 [ %15, %13 ], [ %10, %6 ]
  %18 = and i32 %17, 16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %40, label %20

20:                                               ; preds = %16
  %21 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7
  %22 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -1, i64 16, i1 false)
  %23 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %3, %struct.SkRect* nonnull %7, %struct.SkRect* dereferenceable(16) %2, i32 1) #7
  %24 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %25 = call zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect* %24, %struct.SkRect* nonnull dereferenceable(16) %7) #7
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 1, i64 0
  %28 = bitcast %struct.SkPoint* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 32, i1 false) #7
  %29 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 2
  store i32 1, i32* %29, align 4
  br label %30

30:                                               ; preds = %20, %26
  %31 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  store i32 1, i32* %31, align 8
  %32 = zext i1 %5 to i8
  %33 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %1, i32* %33, align 8
  %34 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 %4, i32* %34, align 4
  %35 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 %32, i8* %35, align 4
  %36 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 1, i32* %36, align 8
  %37 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %38 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 0, i32* %38, align 8
  %39 = bitcast %struct.SkRect* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 17, i1 false) #7
  br label %68

40:                                               ; preds = %16
  %41 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #7
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 4
  %43 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %8) #7
  %44 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull %8, %struct.SkRect* dereferenceable(16) %2, i32 0, i32 0) #7
  %45 = load i8, i8* %42, align 2
  %46 = or i8 %45, 4
  store i8 %46, i8* %42, align 2
  %47 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0
  %48 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %49 = load %class.SkPath*, %class.SkPath** %48, align 8
  %50 = icmp eq %class.SkPath* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %40
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %49) #7
  store %class.SkPath* null, %class.SkPath** %48, align 8
  br label %52

52:                                               ; preds = %40, %51
  %53 = bitcast %"class.SkClipStack::Element"* %0 to %class.SkPath*
  call void @_ZN6SkPathC1Ev(%class.SkPath* %53) #7
  %54 = bitcast %class.SkPath** %48 to %class.SkTLazy**
  store %class.SkTLazy* %47, %class.SkTLazy** %54, align 8
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %8, %class.SkMatrix* dereferenceable(40) %3, %class.SkPath* %53, i32 1) #7
  %55 = load %class.SkPath*, %class.SkPath** %48, align 8
  %56 = getelementptr inbounds %class.SkPath, %class.SkPath* %55, i64 0, i32 4
  %57 = load i8, i8* %56, align 2
  %58 = or i8 %57, 4
  store i8 %58, i8* %56, align 2
  %59 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  store i32 3, i32* %59, align 8
  %60 = zext i1 %5 to i8
  %61 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %1, i32* %61, align 8
  %62 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 %4, i32* %62, align 4
  %63 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 %60, i8* %63, align 4
  %64 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 1, i32* %64, align 8
  %65 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %66 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 0, i32* %66, align 8
  %67 = bitcast %struct.SkRect* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 17, i1 false) #7
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #7
  br label %68

68:                                               ; preds = %52, %30
  %69 = phi i8* [ %41, %52 ], [ %21, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #7
  ret void
}

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element10initAsPathEiRK6SkPathRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"*, i32, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %9 = load %class.SkPath*, %class.SkPath** %8, align 8
  %10 = icmp eq %class.SkPath* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %9) #7
  store %class.SkPath* null, %class.SkPath** %8, align 8
  br label %12

12:                                               ; preds = %6, %11
  %13 = bitcast %"class.SkClipStack::Element"* %0 to %class.SkPath*
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %13) #7
  %14 = bitcast %class.SkPath** %8 to %class.SkTLazy**
  store %class.SkTLazy* %7, %class.SkTLazy** %14, align 8
  tail call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %2, %class.SkMatrix* dereferenceable(40) %3, %class.SkPath* %13, i32 1) #7
  %15 = load %class.SkPath*, %class.SkPath** %8, align 8
  %16 = getelementptr inbounds %class.SkPath, %class.SkPath* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 2
  %18 = or i8 %17, 4
  store i8 %18, i8* %16, align 2
  %19 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  store i32 3, i32* %19, align 8
  %20 = zext i1 %5 to i8
  %21 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %1, i32* %21, align 8
  %22 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 %4, i32* %22, align 4
  %23 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 %20, i8* %23, align 4
  %24 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %26 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 0, i32* %26, align 8
  %27 = bitcast %struct.SkRect* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 17, i1 false) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element9initRRectEiRK7SkRRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"*, i32, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPath, align 8
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %9 = tail call zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect* %2, %class.SkMatrix* dereferenceable(40) %3, %class.SkRRect* %8) #7
  br i1 %9, label %10, label %24

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %12, 2
  %14 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  %15 = select i1 %13, i32 1, i32 2
  store i32 %15, i32* %14, align 8
  %16 = zext i1 %5 to i8
  %17 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %1, i32* %17, align 8
  %18 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 %4, i32* %18, align 4
  %19 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 %16, i8* %19, align 4
  %20 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %22 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 0, i32* %22, align 8
  %23 = bitcast %struct.SkRect* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 17, i1 false) #7
  br label %52

24:                                               ; preds = %6
  %25 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #7
  %26 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 4
  %27 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #7
  %28 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* nonnull %7, %class.SkRRect* dereferenceable(52) %2, i32 0) #7
  %29 = load i8, i8* %26, align 2
  %30 = or i8 %29, 4
  store i8 %30, i8* %26, align 2
  %31 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %33 = load %class.SkPath*, %class.SkPath** %32, align 8
  %34 = icmp eq %class.SkPath* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %24
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %33) #7
  store %class.SkPath* null, %class.SkPath** %32, align 8
  br label %36

36:                                               ; preds = %24, %35
  %37 = bitcast %"class.SkClipStack::Element"* %0 to %class.SkPath*
  call void @_ZN6SkPathC1Ev(%class.SkPath* %37) #7
  %38 = bitcast %class.SkPath** %32 to %class.SkTLazy**
  store %class.SkTLazy* %31, %class.SkTLazy** %38, align 8
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %7, %class.SkMatrix* dereferenceable(40) %3, %class.SkPath* %37, i32 1) #7
  %39 = load %class.SkPath*, %class.SkPath** %32, align 8
  %40 = getelementptr inbounds %class.SkPath, %class.SkPath* %39, i64 0, i32 4
  %41 = load i8, i8* %40, align 2
  %42 = or i8 %41, 4
  store i8 %42, i8* %40, align 2
  %43 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  store i32 3, i32* %43, align 8
  %44 = zext i1 %5 to i8
  %45 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %1, i32* %45, align 8
  %46 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 %4, i32* %46, align 4
  %47 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 %44, i8* %47, align 4
  %48 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 1, i32* %48, align 8
  %49 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %50 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 0, i32* %50, align 8
  %51 = bitcast %struct.SkRect* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 17, i1 false) #7
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #7
  br label %52

52:                                               ; preds = %36, %10
  ret void
}

declare zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect*, %class.SkMatrix* dereferenceable(40), %class.SkRRect*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element8initPathEiRK6SkPathRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"*, i32, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca %struct.SkRect, align 4
  %9 = alloca %class.SkRRect, align 4
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 4
  %11 = load i8, i8* %10, align 2
  %12 = and i8 %11, 2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %6
  %15 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7
  %16 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -1, i64 16, i1 false)
  %17 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %2, %struct.SkRect* nonnull %7, i8* null, i32* null) #7
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  call void @_ZN11SkClipStack7Element8initRectEiRK6SkRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"* %0, i32 %1, %struct.SkRect* nonnull dereferenceable(16) %7, %class.SkMatrix* dereferenceable(40) %3, i32 %4, i1 zeroext %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  br label %48

19:                                               ; preds = %14
  %20 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #7
  %21 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -1, i64 16, i1 false)
  %22 = call zeroext i1 @_ZNK6SkPath6isOvalEP6SkRect(%class.SkPath* %2, %struct.SkRect* nonnull %8) #7
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  br label %26

24:                                               ; preds = %19
  %25 = bitcast %class.SkRRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %25) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 0, i64 52, i1 false) #7
  call void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %8) #7
  call void @_ZN11SkClipStack7Element9initRRectEiRK7SkRRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"* %0, i32 %1, %class.SkRRect* nonnull dereferenceable(52) %9, %class.SkMatrix* dereferenceable(40) %3, i32 %4, i1 zeroext %5)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %25) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  br label %48

26:                                               ; preds = %6, %23
  %27 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0
  %28 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %29 = load %class.SkPath*, %class.SkPath** %28, align 8
  %30 = icmp eq %class.SkPath* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %29) #7
  store %class.SkPath* null, %class.SkPath** %28, align 8
  br label %32

32:                                               ; preds = %26, %31
  %33 = bitcast %"class.SkClipStack::Element"* %0 to %class.SkPath*
  call void @_ZN6SkPathC1Ev(%class.SkPath* %33) #7
  %34 = bitcast %class.SkPath** %28 to %class.SkTLazy**
  store %class.SkTLazy* %27, %class.SkTLazy** %34, align 8
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %2, %class.SkMatrix* dereferenceable(40) %3, %class.SkPath* %33, i32 1) #7
  %35 = load %class.SkPath*, %class.SkPath** %28, align 8
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %35, i64 0, i32 4
  %37 = load i8, i8* %36, align 2
  %38 = or i8 %37, 4
  store i8 %38, i8* %36, align 2
  %39 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  store i32 3, i32* %39, align 8
  %40 = zext i1 %5 to i8
  %41 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %1, i32* %41, align 8
  %42 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 %4, i32* %42, align 4
  %43 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 %40, i8* %43, align 4
  %44 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 1, i32* %44, align 8
  %45 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %46 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 0, i32* %46, align 8
  %47 = bitcast %struct.SkRect* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 17, i1 false) #7
  br label %48

48:                                               ; preds = %24, %18, %32
  ret void
}

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZNK6SkPath6isOvalEP6SkRect(%class.SkPath*, %struct.SkRect*) local_unnamed_addr #2

declare void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element10initShaderEi5sk_spI8SkShaderE(%"class.SkClipStack::Element"* nocapture, i32, %class.sk_sp.13* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  store i32 4, i32* %4, align 8
  %5 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %2, i64 0, i32 0
  %7 = bitcast %class.sk_sp.13* %2 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkShader* null, %class.SkShader** %6, align 8
  %9 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %5, i64 0, i32 0
  %10 = load %class.SkShader*, %class.SkShader** %9, align 8
  %11 = bitcast %class.sk_sp.13* %5 to i64*
  store i64 %8, i64* %11, align 8
  %12 = icmp eq %class.SkShader* %10, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkShader, %class.SkShader* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = bitcast %class.SkShader* %10 to %class.SkRefCntBase*
  %19 = bitcast %class.SkShader* %10 to void (%class.SkRefCntBase*)***
  %20 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, i64 2
  %22 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, align 8
  tail call void %22(%class.SkRefCntBase* nonnull %18) #7
  br label %23

23:                                               ; preds = %3, %13, %17
  %24 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 3
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  store i32 1, i32* %25, align 4
  %26 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %29 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 0, i32* %29, align 8
  %30 = bitcast %struct.SkRect* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 17, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11SkClipStack7Element17asDeviceSpacePathEP6SkPath(%"class.SkClipStack::Element"*, %class.SkPath*) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %27 [
    i32 0, label %6
    i32 1, label %8
    i32 2, label %12
    i32 3, label %16
    i32 4, label %20
  ]

6:                                                ; preds = %2
  %7 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %1) #7
  br label %27

8:                                                ; preds = %2
  %9 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %1) #7
  %10 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0
  %11 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %1, %struct.SkRect* dereferenceable(16) %10, i32 0, i32 0) #7
  br label %27

12:                                               ; preds = %2
  %13 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %1) #7
  %14 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %15 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* %1, %class.SkRRect* dereferenceable(52) %14, i32 0) #7
  br label %27

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %18 = load %class.SkPath*, %class.SkPath** %17, align 8
  %19 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %18) #7
  br label %27

20:                                               ; preds = %2
  %21 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %22 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %1) #7
  %23 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> <float 0xC1C0000000000000, float 0xC1C0000000000000>, <2 x float>* %24, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> <float 0x41C0000000000000, float 0x41C0000000000000>, <2 x float>* %25, align 8
  %26 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %1, %struct.SkRect* nonnull dereferenceable(16) %21, i32 0, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #7
  br label %27

27:                                               ; preds = %2, %20, %16, %12, %8, %6
  %28 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %29 = load i8, i8* %28, align 2
  %30 = or i8 %29, 4
  store i8 %30, i8* %28, align 2
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element8setEmptyEv(%"class.SkClipStack::Element"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %5 = bitcast %class.SkRRect* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 52, i1 false) #7
  %6 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 21, i1 false)
  %8 = load %class.SkPath*, %class.SkPath** %6, align 8
  %9 = icmp eq %class.SkPath* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #7
  store %class.SkPath* null, %class.SkPath** %6, align 8
  br label %11

11:                                               ; preds = %1, %10
  %12 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 2, i32 0
  %13 = load %class.SkShader*, %class.SkShader** %12, align 8
  store %class.SkShader* null, %class.SkShader** %12, align 8
  %14 = icmp eq %class.SkShader* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkShader, %class.SkShader* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkShader* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkShader* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #7
  br label %25

25:                                               ; preds = %11, %15, %19
  %26 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 1, i32* %26, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStack7Element24rectRectIntersectAllowedERK6SkRectb(%"class.SkClipStack::Element"* nocapture readonly, %struct.SkRect* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = zext i8 %5 to i32
  %7 = zext i1 %2 to i32
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 3
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %25 = load float, float* %24, align 4
  %26 = fcmp olt float %11, %19
  %27 = select i1 %26, float %19, float %11
  %28 = fcmp olt float %23, %15
  %29 = select i1 %28, float %23, float %15
  %30 = fcmp olt float %13, %21
  %31 = select i1 %30, float %21, float %13
  %32 = fcmp olt float %25, %17
  %33 = fcmp olt float %27, %29
  %34 = select i1 %32, float %25, float %17
  %35 = fcmp olt float %31, %34
  %36 = and i1 %33, %35
  br i1 %36, label %37, label %53

37:                                               ; preds = %9
  %38 = fcmp olt float %19, %23
  %39 = fcmp olt float %21, %25
  %40 = and i1 %38, %39
  %41 = fcmp olt float %11, %15
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %53

43:                                               ; preds = %37
  %44 = fcmp uge float %13, %17
  %45 = fcmp ugt float %11, %19
  %46 = or i1 %44, %45
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = fcmp ole float %13, %21
  %49 = fcmp oge float %15, %23
  %50 = fcmp oge float %17, %25
  %51 = and i1 %48, %49
  %52 = and i1 %50, %51
  ret i1 %52

53:                                               ; preds = %37, %43, %9, %3
  %54 = phi i1 [ true, %3 ], [ true, %9 ], [ false, %43 ], [ false, %37 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7Element19updateBoundAndGenIDEPKS0_(%"class.SkClipStack::Element"*, %"class.SkClipStack::Element"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect, align 4
  br label %4

4:                                                ; preds = %4, %2
  %5 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN11SkClipStack12GetNextGenIDEvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %4, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 10
  store i32 %5, i32* %8, align 8
  %9 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 9
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %124 [
    i32 1, label %12
    i32 2, label %81
    i32 3, label %87
    i32 4, label %118
  ]

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %15 = bitcast %struct.SkRect* %14 to i8*
  %16 = bitcast %struct.SkRect* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %80, label %21

21:                                               ; preds = %12
  %22 = icmp eq i32 %19, 1
  %23 = icmp eq %"class.SkClipStack::Element"* %1, null
  %24 = and i1 %23, %22
  br i1 %24, label %80, label %25

25:                                               ; preds = %21
  br i1 %22, label %26, label %124

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 9
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %124, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 6
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 6
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, %32
  br i1 %35, label %80, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 2
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 3
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 1
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 2
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0, i32 3
  %52 = load float, float* %51, align 4
  %53 = fcmp olt float %38, %46
  %54 = select i1 %53, float %46, float %38
  %55 = fcmp olt float %50, %42
  %56 = select i1 %55, float %50, float %42
  %57 = fcmp olt float %40, %48
  %58 = select i1 %57, float %48, float %40
  %59 = fcmp olt float %52, %44
  %60 = fcmp olt float %54, %56
  %61 = select i1 %59, float %52, float %44
  %62 = fcmp olt float %58, %61
  %63 = and i1 %60, %62
  br i1 %63, label %64, label %80

64:                                               ; preds = %36
  %65 = fcmp olt float %46, %50
  %66 = fcmp olt float %48, %52
  %67 = and i1 %65, %66
  %68 = fcmp olt float %38, %42
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %124

70:                                               ; preds = %64
  %71 = fcmp uge float %40, %44
  %72 = fcmp ugt float %38, %46
  %73 = or i1 %71, %72
  br i1 %73, label %124, label %74

74:                                               ; preds = %70
  %75 = fcmp ole float %40, %48
  %76 = fcmp oge float %42, %50
  %77 = fcmp oge float %44, %52
  %78 = and i1 %75, %76
  %79 = and i1 %77, %78
  br i1 %79, label %80, label %124

80:                                               ; preds = %36, %30, %21, %74, %12
  store i8 1, i8* %9, align 4
  br label %124

81:                                               ; preds = %7
  %82 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %84 = bitcast %struct.SkRect* %83 to i8*
  %85 = bitcast %struct.SkRect* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 16, i1 false)
  %86 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 0, i32* %86, align 8
  br label %124

87:                                               ; preds = %7
  %88 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %89 = load %class.SkPath*, %class.SkPath** %88, align 8
  %90 = getelementptr inbounds %class.SkPath, %class.SkPath* %89, i64 0, i32 0, i32 0
  %91 = load %class.SkPathRef*, %class.SkPathRef** %90, align 8
  %92 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %91, i64 0, i32 9
  %93 = load i8, i8* %92, align 8
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %91, i64 0, i32 1
  %97 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %91, i64 0, i32 3, i32 0
  %98 = load %struct.SkPoint*, %struct.SkPoint** %97, align 8
  %99 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %91, i64 0, i32 3, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %96, %struct.SkPoint* %98, i32 %100) #7
  %102 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %91, i64 0, i32 10
  %103 = zext i1 %101 to i8
  store i8 %103, i8* %102, align 1
  store i8 0, i8* %92, align 8
  %104 = load %class.SkPath*, %class.SkPath** %88, align 8
  br label %105

105:                                              ; preds = %87, %95
  %106 = phi %class.SkPath* [ %89, %87 ], [ %104, %95 ]
  %107 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %91, i64 0, i32 1
  %108 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %109 = bitcast %struct.SkRect* %108 to i8*
  %110 = bitcast %struct.SkRect* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 16, i1 false)
  %111 = getelementptr inbounds %class.SkPath, %class.SkPath* %106, i64 0, i32 4
  %112 = load i8, i8* %111, align 2
  %113 = and i8 %112, 2
  %114 = icmp eq i8 %113, 0
  %115 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  br i1 %114, label %117, label %116

116:                                              ; preds = %105
  store i32 1, i32* %115, align 8
  br label %124

117:                                              ; preds = %105
  store i32 0, i32* %115, align 8
  br label %124

118:                                              ; preds = %7
  %119 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %120 = bitcast %struct.SkRect* %119 to <2 x float>*
  store <2 x float> <float 0xC1C0000000000000, float 0xC1C0000000000000>, <2 x float>* %120, align 4
  %121 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8, i32 2
  %122 = bitcast float* %121 to <2 x float>*
  store <2 x float> <float 0x41C0000000000000, float 0x41C0000000000000>, <2 x float>* %122, align 4
  %123 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  store i32 0, i32* %123, align 8
  br label %124

124:                                              ; preds = %64, %70, %26, %116, %117, %25, %74, %80, %7, %118, %81
  %125 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #7
  %126 = icmp eq %"class.SkClipStack::Element"* %1, null
  %127 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -1, i64 16, i1 false)
  br i1 %126, label %128, label %133

128:                                              ; preds = %124
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %125, i8 0, i64 16, i1 false) #7
  %129 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 1
  %132 = zext i1 %131 to i32
  br label %143

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 8
  %135 = bitcast %struct.SkRect* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %125, i8* align 4 %135, i64 16, i1 false)
  %136 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 7
  %137 = load i32, i32* %136, align 8
  %138 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 7
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 1
  %141 = zext i1 %140 to i32
  %142 = icmp eq i32 %137, 1
  br i1 %142, label %143, label %147

143:                                              ; preds = %128, %133
  %144 = phi i32 [ %132, %128 ], [ %141, %133 ]
  %145 = phi i32* [ %129, %128 ], [ %138, %133 ]
  %146 = or i32 %144, 2
  br label %147

147:                                              ; preds = %133, %143
  %148 = phi i32* [ %145, %143 ], [ %138, %133 ]
  %149 = phi i32 [ %146, %143 ], [ %141, %133 ]
  %150 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 4
  %151 = load i32, i32* %150, align 4
  switch i32 %151, label %247 [
    i32 0, label %152
    i32 3, label %165
    i32 2, label %170
    i32 1, label %182
    i32 4, label %214
    i32 5, label %248
  ]

152:                                              ; preds = %147
  switch i32 %149, label %248 [
    i32 3, label %153
    i32 2, label %154
    i32 1, label %156
    i32 0, label %162
  ]

153:                                              ; preds = %152
  store i32 0, i32* %148, align 8
  br label %248

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %155, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  store i32 1, i32* %148, align 8
  br label %248

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %158 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* %157, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = bitcast %struct.SkRect* %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %160, i8 0, i64 16, i1 false) #7
  store i32 1, i32* %8, align 8
  br label %161

161:                                              ; preds = %159, %156
  store i32 0, i32* %148, align 8
  br label %248

162:                                              ; preds = %152
  %163 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %164 = bitcast %struct.SkRect* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* nonnull align 4 %125, i64 16, i1 false) #7
  br label %248

165:                                              ; preds = %147
  switch i32 %149, label %248 [
    i32 2, label %166
    i32 1, label %166
    i32 3, label %168
    i32 0, label %168
  ]

166:                                              ; preds = %165, %165
  %167 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %167, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  store i32 1, i32* %148, align 8
  br label %248

168:                                              ; preds = %165, %165
  %169 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %169, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  store i32 0, i32* %148, align 8
  br label %248

170:                                              ; preds = %147
  switch i32 %149, label %248 [
    i32 3, label %171
    i32 2, label %177
    i32 0, label %180
  ]

171:                                              ; preds = %170
  %172 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %173 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* %172, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = bitcast %struct.SkRect* %172 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %175, i8 0, i64 16, i1 false) #7
  store i32 2, i32* %8, align 8
  br label %176

176:                                              ; preds = %174, %171
  store i32 1, i32* %148, align 8
  br label %248

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %179 = bitcast %struct.SkRect* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %179, i8* nonnull align 4 %125, i64 16, i1 false) #7
  store i32 1, i32* %148, align 8
  br label %248

180:                                              ; preds = %170
  %181 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %181, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  br label %248

182:                                              ; preds = %147
  switch i32 %149, label %248 [
    i32 3, label %183
    i32 0, label %188
    i32 1, label %185
  ]

183:                                              ; preds = %182
  %184 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %184, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  store i32 1, i32* %148, align 8
  br label %248

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %187 = bitcast %struct.SkRect* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* nonnull align 4 %125, i64 16, i1 false) #7
  store i32 0, i32* %148, align 8
  br label %248

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %190 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* %189, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  br i1 %190, label %248, label %191

191:                                              ; preds = %188
  store i32 0, i32* %10, align 8
  %192 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %193 = bitcast %class.SkRRect* %192 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %193, i8 0, i64 52, i1 false) #7
  %194 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %195 = bitcast i32* %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 21, i1 false) #7
  %196 = load %class.SkPath*, %class.SkPath** %194, align 8
  %197 = icmp eq %class.SkPath* %196, null
  br i1 %197, label %199, label %198

198:                                              ; preds = %191
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %196) #7
  store %class.SkPath* null, %class.SkPath** %194, align 8
  br label %199

199:                                              ; preds = %198, %191
  %200 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 2, i32 0
  %201 = load %class.SkShader*, %class.SkShader** %200, align 8
  store %class.SkShader* null, %class.SkShader** %200, align 8
  %202 = icmp eq %class.SkShader* %201, null
  br i1 %202, label %213, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %class.SkShader, %class.SkShader* %201, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw add i32* %204, i32 -1 acq_rel
  %206 = icmp eq i32 %205, 1
  br i1 %206, label %207, label %213

207:                                              ; preds = %203
  %208 = bitcast %class.SkShader* %201 to %class.SkRefCntBase*
  %209 = bitcast %class.SkShader* %201 to void (%class.SkRefCntBase*)***
  %210 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %209, align 8
  %211 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %210, i64 2
  %212 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %211, align 8
  call void %212(%class.SkRefCntBase* nonnull %208) #7
  br label %213

213:                                              ; preds = %207, %203, %199
  store i32 1, i32* %8, align 8
  br label %248

214:                                              ; preds = %147
  switch i32 %149, label %248 [
    i32 3, label %215
    i32 2, label %218
    i32 1, label %245
  ]

215:                                              ; preds = %214
  %216 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %217 = bitcast %struct.SkRect* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* nonnull align 4 %125, i64 16, i1 false) #7
  store i32 0, i32* %148, align 8
  br label %248

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  %220 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* %219, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  br i1 %220, label %244, label %221

221:                                              ; preds = %218
  store i32 0, i32* %10, align 8
  %222 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 1
  %223 = bitcast %class.SkRRect* %222 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %223, i8 0, i64 52, i1 false) #7
  %224 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 0, i32 1
  %225 = bitcast i32* %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 21, i1 false) #7
  %226 = load %class.SkPath*, %class.SkPath** %224, align 8
  %227 = icmp eq %class.SkPath* %226, null
  br i1 %227, label %229, label %228

228:                                              ; preds = %221
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %226) #7
  store %class.SkPath* null, %class.SkPath** %224, align 8
  br label %229

229:                                              ; preds = %228, %221
  %230 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 2, i32 0
  %231 = load %class.SkShader*, %class.SkShader** %230, align 8
  store %class.SkShader* null, %class.SkShader** %230, align 8
  %232 = icmp eq %class.SkShader* %231, null
  br i1 %232, label %243, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %class.SkShader, %class.SkShader* %231, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = atomicrmw add i32* %234, i32 -1 acq_rel
  %236 = icmp eq i32 %235, 1
  br i1 %236, label %237, label %243

237:                                              ; preds = %233
  %238 = bitcast %class.SkShader* %231 to %class.SkRefCntBase*
  %239 = bitcast %class.SkShader* %231 to void (%class.SkRefCntBase*)***
  %240 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %239, align 8
  %241 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %240, i64 2
  %242 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %241, align 8
  call void %242(%class.SkRefCntBase* nonnull %238) #7
  br label %243

243:                                              ; preds = %237, %233, %229
  store i32 1, i32* %8, align 8
  br label %248

244:                                              ; preds = %218
  store i32 0, i32* %148, align 8
  br label %248

245:                                              ; preds = %214
  %246 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %0, i64 0, i32 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %246, %struct.SkRect* nonnull dereferenceable(16) %3) #7
  store i32 1, i32* %148, align 8
  br label %248

247:                                              ; preds = %147
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 603, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %248

248:                                              ; preds = %245, %244, %243, %215, %214, %213, %188, %185, %183, %182, %180, %177, %176, %170, %168, %166, %165, %162, %161, %154, %153, %152, %247, %147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN11SkClipStack12GetNextGenIDEv() local_unnamed_addr #6 align 2 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN11SkClipStack12GetNextGenIDEvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %3 = icmp ult i32 %2, 3
  br i1 %3, label %1, label %4

4:                                                ; preds = %1
  ret i32 %2
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStackC2Ev(%class.SkClipStack*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  tail call void @_ZN7SkDequeC1Emi(%class.SkDeque* %2, i64 160, i32 8) #7
  %3 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  ret void
}

declare void @_ZN7SkDequeC1Emi(%class.SkDeque*, i64, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStackC2EPvm(%class.SkClipStack*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %4, i64 160, i8* %1, i64 %2, i32 8) #7
  %5 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false)
  ret void
}

declare void @_ZN7SkDequeC1EmPvmi(%class.SkDeque*, i64, i8*, i64, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStackC2ERKS_(%class.SkClipStack*, %class.SkClipStack* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  tail call void @_ZN7SkDequeC1Emi(%class.SkDeque* %3, i64 160, i32 8) #7
  %4 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2
  %5 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 16, i1 false)
  %6 = tail call dereferenceable(80) %class.SkClipStack* @_ZN11SkClipStackaSERKS_(%class.SkClipStack* %0, %class.SkClipStack* dereferenceable(80) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %class.SkClipStack* @_ZN11SkClipStackaSERKS_(%class.SkClipStack* returned, %class.SkClipStack* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkDeque::F2BIter", align 8
  %4 = icmp eq %class.SkClipStack* %0, %1
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  tail call void @_ZN11SkClipStack5resetEv(%class.SkClipStack* %0)
  %6 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 8
  %9 = bitcast %"class.SkDeque::F2BIter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"class.SkDeque::F2BIter", %"class.SkDeque::F2BIter"* %3, i64 0, i32 0
  %12 = bitcast %"class.SkDeque::F2BIter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN7SkDeque4IterC2ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* nonnull %11, %class.SkDeque* dereferenceable(56) %10, i32 0) #7
  %13 = call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* nonnull %11) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  br label %18

17:                                               ; preds = %18, %5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  br label %25

18:                                               ; preds = %15, %18
  %19 = phi i8* [ %13, %15 ], [ %23, %18 ]
  %20 = bitcast i8* %19 to %"class.SkClipStack::Element"*
  %21 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %16) #7
  %22 = bitcast i8* %21 to %"class.SkClipStack::Element"*
  call void @_ZN11SkClipStack7ElementC2ERKS0_(%"class.SkClipStack::Element"* %22, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %20)
  %23 = call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* nonnull %11) #7
  %24 = icmp eq i8* %23, null
  br i1 %24, label %17, label %18

25:                                               ; preds = %2, %17
  ret %class.SkClipStack* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStackD2Ev(%class.SkClipStack*) unnamed_addr #0 align 2 {
  tail call void @_ZN11SkClipStack5resetEv(%class.SkClipStack* %0)
  %2 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  tail call void @_ZN7SkDequeD1Ev(%class.SkDeque* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack5resetEv(%class.SkClipStack*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  %3 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %51, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %8 = bitcast i8** %7 to %"class.SkClipStack::Element"**
  br label %9

9:                                                ; preds = %6, %48
  %10 = load %"class.SkClipStack::Element"*, %"class.SkClipStack::Element"** %8, align 8
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %10, i64 0, i32 12
  %12 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %10, i64 0, i32 12, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 4294967294
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %10, i64 0, i32 11
  %18 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %11, i64 0, i32 0
  br label %38

19:                                               ; preds = %38, %9
  tail call void @_ZN8SkTArrayI11GrUniqueKeyLb0EED2Ev(%class.SkTArray* %11) #7
  %20 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %10, i64 0, i32 2, i32 0
  %21 = load %class.SkShader*, %class.SkShader** %20, align 8
  %22 = icmp eq %class.SkShader* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkShader, %class.SkShader* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkShader* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkShader* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #7
  br label %33

33:                                               ; preds = %27, %23, %19
  %34 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %10, i64 0, i32 0, i32 1
  %35 = load %class.SkPath*, %class.SkPath** %34, align 8
  %36 = icmp eq %class.SkPath* %35, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %33
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %35) #7
  store %class.SkPath* null, %class.SkPath** %34, align 8
  br label %48

38:                                               ; preds = %38, %16
  %39 = phi i64 [ 0, %16 ], [ %43, %38 ]
  %40 = load %class.GrProxyProvider*, %class.GrProxyProvider** %17, align 8
  %41 = load %class.GrUniqueKey*, %class.GrUniqueKey** %18, align 8
  %42 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %41, i64 %39
  tail call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %40, %class.GrUniqueKey* dereferenceable(56) %42, %class.GrTextureProxy* null, i1 zeroext true) #7
  %43 = add nuw nsw i64 %39, 1
  %44 = load i64, i64* %12, align 8
  %45 = lshr i64 %44, 1
  %46 = and i64 %45, 2147483647
  %47 = icmp ult i64 %43, %46
  br i1 %47, label %38, label %19

48:                                               ; preds = %33, %37
  tail call void @_ZN7SkDeque8pop_backEv(%class.SkDeque* %2) #7
  %49 = load i32, i32* %3, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %9

51:                                               ; preds = %48, %1
  %52 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  store i32 0, i32* %52, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkDequeD1Ev(%class.SkDeque*) unnamed_addr #4

declare i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"*) local_unnamed_addr #2

declare i8* @_ZN7SkDeque9push_backEv(%class.SkDeque*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStackeqERKS_(%class.SkClipStack*, %class.SkClipStack* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkDeque::F2BIter", align 8
  %4 = alloca %"class.SkDeque::F2BIter", align 8
  %5 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 104
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %36

15:                                               ; preds = %8
  %16 = getelementptr inbounds i8, i8* %10, i64 108
  %17 = bitcast i8* %16 to float*
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds i8, i8* %10, i64 116
  %20 = bitcast i8* %19 to float*
  %21 = load float, float* %20, align 4
  %22 = fcmp olt float %18, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %15
  %24 = getelementptr inbounds i8, i8* %10, i64 112
  %25 = bitcast i8* %24 to float*
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds i8, i8* %10, i64 120
  %28 = bitcast i8* %27 to float*
  %29 = load float, float* %28, align 4
  %30 = fcmp uge float %26, %29
  br i1 %30, label %31, label %36

31:                                               ; preds = %23, %15
  %32 = getelementptr inbounds i8, i8* %10, i64 96
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 4
  br i1 %35, label %36, label %40

36:                                               ; preds = %31, %23, %8
  %37 = getelementptr inbounds i8, i8* %10, i64 128
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 8
  br label %40

40:                                               ; preds = %2, %31, %36
  %41 = phi i32 [ 2, %2 ], [ %39, %36 ], [ 2, %31 ]
  %42 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %1, i64 0, i32 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %77, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %1, i64 0, i32 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 104
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %73

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %47, i64 108
  %54 = bitcast i8* %53 to float*
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds i8, i8* %47, i64 116
  %57 = bitcast i8* %56 to float*
  %58 = load float, float* %57, align 4
  %59 = fcmp olt float %55, %58
  br i1 %59, label %60, label %68

60:                                               ; preds = %52
  %61 = getelementptr inbounds i8, i8* %47, i64 112
  %62 = bitcast i8* %61 to float*
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds i8, i8* %47, i64 120
  %65 = bitcast i8* %64 to float*
  %66 = load float, float* %65, align 4
  %67 = fcmp uge float %63, %66
  br i1 %67, label %68, label %73

68:                                               ; preds = %60, %52
  %69 = getelementptr inbounds i8, i8* %47, i64 96
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 4
  br i1 %72, label %73, label %77

73:                                               ; preds = %68, %60, %45
  %74 = getelementptr inbounds i8, i8* %47, i64 128
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 8
  br label %77

77:                                               ; preds = %40, %68, %73
  %78 = phi i32 [ 2, %40 ], [ %76, %73 ], [ 2, %68 ]
  %79 = icmp eq i32 %41, %78
  br i1 %79, label %122, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %1, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %82, %84
  %86 = icmp eq i32 %6, %43
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %122

88:                                               ; preds = %80
  %89 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %1, i64 0, i32 0
  %90 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  %91 = bitcast %"class.SkDeque::F2BIter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #7
  %92 = getelementptr inbounds %"class.SkDeque::F2BIter", %"class.SkDeque::F2BIter"* %3, i64 0, i32 0
  %93 = bitcast %"class.SkDeque::F2BIter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false)
  call void @_ZN7SkDeque4IterC2ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* nonnull %92, %class.SkDeque* dereferenceable(56) %90, i32 0) #7
  %94 = bitcast %"class.SkDeque::F2BIter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #7
  %95 = getelementptr inbounds %"class.SkDeque::F2BIter", %"class.SkDeque::F2BIter"* %4, i64 0, i32 0
  %96 = bitcast %"class.SkDeque::F2BIter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 24, i1 false)
  call void @_ZN7SkDeque4IterC2ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* nonnull %95, %class.SkDeque* dereferenceable(56) %89, i32 0) #7
  %97 = call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* nonnull %92) #7
  %98 = call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* nonnull %95) #7
  %99 = icmp ne i8* %97, null
  %100 = icmp ne i8* %98, null
  %101 = and i1 %99, %100
  br i1 %101, label %102, label %114

102:                                              ; preds = %88, %108
  %103 = phi i8* [ %110, %108 ], [ %98, %88 ]
  %104 = phi i8* [ %109, %108 ], [ %97, %88 ]
  %105 = bitcast i8* %103 to %"class.SkClipStack::Element"*
  %106 = bitcast i8* %104 to %"class.SkClipStack::Element"*
  %107 = call zeroext i1 @_ZNK11SkClipStack7ElementeqERKS0_(%"class.SkClipStack::Element"* nonnull %106, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %105) #7
  br i1 %107, label %108, label %120

108:                                              ; preds = %102
  %109 = call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* nonnull %92) #7
  %110 = call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* nonnull %95) #7
  %111 = icmp ne i8* %109, null
  %112 = icmp ne i8* %110, null
  %113 = and i1 %111, %112
  br i1 %113, label %102, label %114

114:                                              ; preds = %108, %88
  %115 = phi i8* [ %97, %88 ], [ %109, %108 ]
  %116 = phi i8* [ %98, %88 ], [ %110, %108 ]
  %117 = icmp eq i8* %115, null
  %118 = icmp eq i8* %116, null
  %119 = and i1 %117, %118
  br label %120

120:                                              ; preds = %102, %114
  %121 = phi i1 [ %119, %114 ], [ false, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #7
  br label %122

122:                                              ; preds = %80, %77, %120
  %123 = phi i1 [ %121, %120 ], [ true, %77 ], [ false, %80 ]
  ret i1 %123
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11SkClipStack15getTopmostGenIDEv(%class.SkClipStack* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 104
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %33

12:                                               ; preds = %5
  %13 = getelementptr inbounds i8, i8* %7, i64 108
  %14 = bitcast i8* %13 to float*
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds i8, i8* %7, i64 116
  %17 = bitcast i8* %16 to float*
  %18 = load float, float* %17, align 4
  %19 = fcmp olt float %15, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %12
  %21 = getelementptr inbounds i8, i8* %7, i64 112
  %22 = bitcast i8* %21 to float*
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds i8, i8* %7, i64 120
  %25 = bitcast i8* %24 to float*
  %26 = load float, float* %25, align 4
  %27 = fcmp uge float %23, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %12, %20
  %29 = getelementptr inbounds i8, i8* %7, i64 96
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 4
  br i1 %32, label %33, label %37

33:                                               ; preds = %28, %20, %5
  %34 = getelementptr inbounds i8, i8* %7, i64 128
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 8
  br label %37

37:                                               ; preds = %33, %28, %1
  %38 = phi i32 [ 2, %1 ], [ %36, %33 ], [ 2, %28 ]
  ret i32 %38
}

declare void @_ZN7SkDeque8pop_backEv(%class.SkDeque*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11SkClipStack4saveEv(%class.SkClipStack* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack7restoreEv(%class.SkClipStack*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  tail call void @_ZN11SkClipStack9restoreToEi(%class.SkClipStack* %0, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack9restoreToEi(%class.SkClipStack*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %60, label %8

8:                                                ; preds = %2, %57
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 88
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %14, label %60

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %9, i64 144
  %16 = bitcast i8* %15 to %class.SkTArray*
  %17 = getelementptr inbounds i8, i8* %9, i64 152
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds i8, i8* %9, i64 136
  %24 = bitcast i8* %23 to %class.GrProxyProvider**
  %25 = bitcast i8* %15 to %class.GrUniqueKey**
  br label %47

26:                                               ; preds = %47, %14
  tail call void @_ZN8SkTArrayI11GrUniqueKeyLb0EED2Ev(%class.SkTArray* %16) #7
  %27 = getelementptr inbounds i8, i8* %9, i64 80
  %28 = bitcast i8* %27 to %class.SkShader**
  %29 = load %class.SkShader*, %class.SkShader** %28, align 8
  %30 = icmp eq %class.SkShader* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkShader, %class.SkShader* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkShader* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkShader* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #7
  br label %41

41:                                               ; preds = %35, %31, %26
  %42 = getelementptr inbounds i8, i8* %9, i64 16
  %43 = bitcast i8* %42 to %class.SkPath**
  %44 = load %class.SkPath*, %class.SkPath** %43, align 8
  %45 = icmp eq %class.SkPath* %44, null
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %44) #7
  store %class.SkPath* null, %class.SkPath** %43, align 8
  br label %57

47:                                               ; preds = %47, %22
  %48 = phi i64 [ 0, %22 ], [ %52, %47 ]
  %49 = load %class.GrProxyProvider*, %class.GrProxyProvider** %24, align 8
  %50 = load %class.GrUniqueKey*, %class.GrUniqueKey** %25, align 8
  %51 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %50, i64 %48
  tail call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %49, %class.GrUniqueKey* dereferenceable(56) %51, %class.GrTextureProxy* null, i1 zeroext true) #7
  %52 = add nuw nsw i64 %48, 1
  %53 = load i64, i64* %18, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = icmp ult i64 %52, %55
  br i1 %56, label %47, label %26

57:                                               ; preds = %41, %46
  tail call void @_ZN7SkDeque8pop_backEv(%class.SkDeque* %4) #7
  %58 = load i32, i32* %5, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %8

60:                                               ; preds = %57, %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect, align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %8 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -1, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #7
  br label %18

12:                                               ; preds = %2
  %13 = getelementptr inbounds i8, i8* %9, i64 108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %13, i64 16, i1 false) #7
  %14 = getelementptr inbounds i8, i8* %9, i64 104
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %35

18:                                               ; preds = %11, %12
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to float
  %22 = insertelement <2 x float> undef, float %21, i32 0
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = insertelement <2 x float> %22, float %25, i32 1
  %27 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = sitofp i32 %28 to float
  %30 = insertelement <2 x float> undef, float %29, i32 0
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = sitofp i32 %32 to float
  %34 = insertelement <2 x float> %30, float %33, i32 1
  br label %63

35:                                               ; preds = %12
  %36 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %37 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #7
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %39 to float
  %41 = insertelement <2 x float> undef, float %40, i32 0
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sitofp i32 %43 to float
  %45 = insertelement <2 x float> %41, float %44, i32 1
  %46 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  %49 = insertelement <2 x float> undef, float %48, i32 0
  %50 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = sitofp i32 %51 to float
  %53 = insertelement <2 x float> %49, float %52, i32 1
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %45, <2 x float>* %54, align 8
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %53, <2 x float>* %55, align 8
  %56 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %3, %struct.SkRect* nonnull dereferenceable(16) %36) #7
  %57 = bitcast %struct.SkRect* %3 to <2 x float>*
  %58 = load <2 x float>, <2 x float>* %57, align 8
  %59 = bitcast float* %6 to <2 x float>*
  %60 = load <2 x float>, <2 x float>* %59, align 8
  %61 = select i1 %56, <2 x float> %58, <2 x float> zeroinitializer
  %62 = select i1 %56, <2 x float> %60, <2 x float> zeroinitializer
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #7
  br label %63

63:                                               ; preds = %35, %18
  %64 = phi <2 x float> [ %26, %18 ], [ %61, %35 ]
  %65 = phi <2 x float> [ %34, %18 ], [ %62, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  %66 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %64, 0
  %67 = insertvalue { <2 x float>, <2 x float> } %66, <2 x float> %65, 1
  ret { <2 x float>, <2 x float> } %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11SkClipStack9getBoundsEP6SkRectPNS_10BoundsTypeEPb(%class.SkClipStack* nocapture readonly, %struct.SkRect* nocapture, i32* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 16, i1 false) #7
  store i32 1, i32* %2, align 4
  %10 = icmp eq i8* %3, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %8
  store i8 0, i8* %3, align 1
  br label %22

12:                                               ; preds = %4
  %13 = getelementptr inbounds i8, i8* %6, i64 108
  %14 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %13, i64 16, i1 false)
  %15 = getelementptr inbounds i8, i8* %6, i64 104
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %2, align 4
  %18 = icmp eq i8* %3, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %6, i64 124
  %21 = load i8, i8* %20, align 4, !range !2
  store i8 %21, i8* %3, align 1
  br label %22

22:                                               ; preds = %19, %12, %11, %8
  ret void
}

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect, align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -1, i64 16, i1 false) #7
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #7
  br label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %8, i64 108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %12, i64 16, i1 false) #7
  %13 = getelementptr inbounds i8, i8* %8, i64 104
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %34

17:                                               ; preds = %11, %10
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = insertelement <2 x float> undef, float %20, i32 0
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sitofp i32 %23 to float
  %25 = insertelement <2 x float> %21, float %24, i32 1
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = insertelement <2 x float> undef, float %28, i32 0
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = sitofp i32 %31 to float
  %33 = insertelement <2 x float> %29, float %32, i32 1
  br label %62

34:                                               ; preds = %11
  %35 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %36 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #7
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sitofp i32 %38 to float
  %40 = insertelement <2 x float> undef, float %39, i32 0
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  %44 = insertelement <2 x float> %40, float %43, i32 1
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = sitofp i32 %46 to float
  %48 = insertelement <2 x float> undef, float %47, i32 0
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %50 to float
  %52 = insertelement <2 x float> %48, float %51, i32 1
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %44, <2 x float>* %53, align 8
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %52, <2 x float>* %54, align 8
  %55 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %3, %struct.SkRect* nonnull dereferenceable(16) %35) #7
  %56 = bitcast %struct.SkRect* %3 to <2 x float>*
  %57 = load <2 x float>, <2 x float>* %56, align 8
  %58 = bitcast float* %6 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 8
  %60 = select i1 %55, <2 x float> %57, <2 x float> zeroinitializer
  %61 = select i1 %55, <2 x float> %59, <2 x float> zeroinitializer
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #7
  br label %62

62:                                               ; preds = %17, %34
  %63 = phi <2 x float> [ %25, %17 ], [ %60, %34 ]
  %64 = phi <2 x float> [ %33, %17 ], [ %61, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  %65 = extractelement <2 x float> %63, i32 0
  %66 = extractelement <2 x float> %64, i32 0
  %67 = fcmp olt float %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %62
  %69 = extractelement <2 x float> %63, i32 1
  %70 = extractelement <2 x float> %64, i32 1
  %71 = fcmp uge float %69, %70
  br label %72

72:                                               ; preds = %62, %68
  %73 = phi i1 [ true, %62 ], [ %71, %68 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStack21internalQuickContainsERK6SkRect(%class.SkClipStack*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkClipStack::Iter", align 8
  %4 = bitcast %"class.SkClipStack::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %3, i64 0, i32 1
  %7 = bitcast %"class.SkDeque::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  store %class.SkClipStack* %0, %class.SkClipStack** %5, align 8
  %8 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %3, i64 0, i32 1
  call void @_ZN7SkDeque4IterC1Ev(%"class.SkDeque::Iter"* %8) #7
  store %class.SkClipStack* %0, %class.SkClipStack** %5, align 8
  %9 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  call void @_ZN7SkDeque4Iter5resetERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* %8, %class.SkDeque* dereferenceable(56) %9, i32 1) #7
  %10 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* %8) #7
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %13 = icmp eq i8* %10, null
  br i1 %13, label %136, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  br label %17

17:                                               ; preds = %14, %133
  %18 = phi i8* [ %10, %14 ], [ %134, %133 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 92
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %136 [
    i32 1, label %22
    i32 5, label %22
  ]

22:                                               ; preds = %17, %17
  %23 = getelementptr inbounds i8, i8* %18, i64 96
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 8
  switch i32 %25, label %136 [
    i32 3, label %26
    i32 1, label %92
    i32 2, label %118
  ]

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %18, i64 16
  %28 = bitcast i8* %27 to %class.SkPath**
  %29 = load %class.SkPath*, %class.SkPath** %28, align 8
  %30 = getelementptr inbounds %class.SkPath, %class.SkPath* %29, i64 0, i32 4
  %31 = load i8, i8* %30, align 2
  %32 = and i8 %31, 2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %122, label %34

34:                                               ; preds = %26
  %35 = load atomic i8, i8* bitcast (i64* @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*) acquire, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %42, !prof !3

37:                                               ; preds = %34
  %38 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  store <2 x float> <float 0xC1C0000000000000, float 0xC1C0000000000000>, <2 x float>* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to <2 x float>*), align 8
  store <2 x float> <float 0x41C0000000000000, float 0x41C0000000000000>, <2 x float>* bitcast (float* getelementptr inbounds (%struct.SkRect, %struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, i64 0, i32 2) to <2 x float>*), align 8
  %41 = call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*)) #7
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  br label %42

42:                                               ; preds = %40, %37, %34
  %43 = load i32, i32* %24, align 8
  switch i32 %43, label %66 [
    i32 1, label %44
    i32 2, label %44
    i32 3, label %47
    i32 4, label %67
    i32 0, label %65
  ]

44:                                               ; preds = %42, %42
  %45 = getelementptr inbounds i8, i8* %18, i64 24
  %46 = bitcast i8* %45 to %struct.SkRect*
  br label %67

47:                                               ; preds = %42
  %48 = load %class.SkPath*, %class.SkPath** %28, align 8
  %49 = getelementptr inbounds %class.SkPath, %class.SkPath* %48, i64 0, i32 0, i32 0
  %50 = load %class.SkPathRef*, %class.SkPathRef** %49, align 8
  %51 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %50, i64 0, i32 9
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %50, i64 0, i32 1
  %56 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %50, i64 0, i32 3, i32 0
  %57 = load %struct.SkPoint*, %struct.SkPoint** %56, align 8
  %58 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %50, i64 0, i32 3, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %55, %struct.SkPoint* %57, i32 %59) #7
  %61 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %50, i64 0, i32 10
  %62 = zext i1 %60 to i8
  store i8 %62, i8* %61, align 1
  store i8 0, i8* %51, align 8
  br label %63

63:                                               ; preds = %54, %47
  %64 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %50, i64 0, i32 1
  br label %67

65:                                               ; preds = %42
  br label %67

66:                                               ; preds = %42
  br label %67

67:                                               ; preds = %42, %44, %63, %65, %66
  %68 = phi %struct.SkRect* [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %66 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %65 ], [ %64, %63 ], [ %46, %44 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, %42 ]
  %69 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %68, i64 0, i32 0
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %68, i64 0, i32 1
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %68, i64 0, i32 2
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %68, i64 0, i32 3
  %76 = load float, float* %75, align 4
  %77 = load float, float* %11, align 4
  %78 = load float, float* %12, align 4
  %79 = load float, float* %15, align 4
  %80 = load float, float* %16, align 4
  %81 = fcmp olt float %70, %77
  %82 = select i1 %81, float %77, float %70
  %83 = fcmp olt float %79, %74
  %84 = select i1 %83, float %79, float %74
  %85 = fcmp olt float %72, %78
  %86 = select i1 %85, float %78, float %72
  %87 = fcmp olt float %80, %76
  %88 = fcmp olt float %82, %84
  %89 = select i1 %87, float %80, float %76
  %90 = fcmp olt float %86, %89
  %91 = and i1 %88, %90
  br i1 %91, label %136, label %130

92:                                               ; preds = %22
  %93 = load float, float* %11, align 4
  %94 = load float, float* %15, align 4
  %95 = fcmp olt float %93, %94
  br i1 %95, label %96, label %136

96:                                               ; preds = %92
  %97 = load float, float* %12, align 4
  %98 = load float, float* %16, align 4
  %99 = fcmp uge float %97, %98
  br i1 %99, label %136, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds i8, i8* %18, i64 24
  %102 = bitcast i8* %101 to float*
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds i8, i8* %18, i64 32
  %105 = bitcast i8* %104 to float*
  %106 = load float, float* %105, align 4
  %107 = fcmp olt float %103, %106
  br i1 %107, label %108, label %136

108:                                              ; preds = %100
  %109 = getelementptr inbounds i8, i8* %18, i64 28
  %110 = bitcast i8* %109 to float*
  %111 = load float, float* %110, align 4
  %112 = getelementptr inbounds i8, i8* %18, i64 36
  %113 = bitcast i8* %112 to float*
  %114 = load float, float* %113, align 4
  %115 = fcmp uge float %111, %114
  %116 = fcmp ugt float %103, %93
  %117 = or i1 %116, %115
  br i1 %117, label %136, label %124

118:                                              ; preds = %22
  %119 = getelementptr inbounds i8, i8* %18, i64 24
  %120 = bitcast i8* %119 to %class.SkRRect*
  %121 = call zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect* %120, %struct.SkRect* dereferenceable(16) %1) #7
  br i1 %121, label %130, label %136

122:                                              ; preds = %26
  %123 = call zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath* %29, %struct.SkRect* dereferenceable(16) %1) #7
  br i1 %123, label %130, label %136

124:                                              ; preds = %108
  %125 = fcmp ole float %111, %97
  %126 = fcmp oge float %106, %94
  %127 = fcmp oge float %114, %98
  %128 = and i1 %126, %125
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %136

130:                                              ; preds = %118, %122, %124, %67
  %131 = load i32, i32* %20, align 4
  %132 = icmp eq i32 %131, 5
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  %134 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* %8) #7
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %17

136:                                              ; preds = %67, %124, %133, %130, %122, %118, %108, %100, %96, %92, %17, %22, %2
  %137 = phi i1 [ true, %2 ], [ false, %22 ], [ false, %17 ], [ false, %92 ], [ false, %96 ], [ false, %100 ], [ false, %108 ], [ false, %118 ], [ false, %122 ], [ true, %130 ], [ true, %133 ], [ false, %124 ], [ false, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4prevEv(%"class.SkClipStack::Iter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 1
  %3 = tail call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* %2) #7
  %4 = bitcast i8* %3 to %"class.SkClipStack::Element"*
  ret %"class.SkClipStack::Element"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStack21internalQuickContainsERK7SkRRect(%class.SkClipStack*, %class.SkRRect* dereferenceable(52)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkClipStack::Iter", align 8
  %4 = bitcast %"class.SkClipStack::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %3, i64 0, i32 1
  %7 = bitcast %"class.SkDeque::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  store %class.SkClipStack* %0, %class.SkClipStack** %5, align 8
  %8 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %3, i64 0, i32 1
  call void @_ZN7SkDeque4IterC1Ev(%"class.SkDeque::Iter"* %8) #7
  store %class.SkClipStack* %0, %class.SkClipStack** %5, align 8
  %9 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  call void @_ZN7SkDeque4Iter5resetERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* %8, %class.SkDeque* dereferenceable(56) %9, i32 1) #7
  %10 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* %8) #7
  %11 = icmp eq i8* %10, null
  br i1 %11, label %102, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 3
  br label %17

17:                                               ; preds = %12, %99
  %18 = phi i8* [ %10, %12 ], [ %100, %99 ]
  %19 = bitcast i8* %18 to %"class.SkClipStack::Element"*
  %20 = getelementptr inbounds i8, i8* %18, i64 92
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  switch i32 %22, label %102 [
    i32 1, label %23
    i32 5, label %23
  ]

23:                                               ; preds = %17, %17
  %24 = getelementptr inbounds i8, i8* %18, i64 96
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %94

28:                                               ; preds = %23
  %29 = getelementptr inbounds i8, i8* %18, i64 16
  %30 = bitcast i8* %29 to %class.SkPath**
  %31 = load %class.SkPath*, %class.SkPath** %30, align 8
  %32 = getelementptr inbounds %class.SkPath, %class.SkPath* %31, i64 0, i32 4
  %33 = load i8, i8* %32, align 2
  %34 = and i8 %33, 2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %94, label %36

36:                                               ; preds = %28
  %37 = load atomic i8, i8* bitcast (i64* @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*) acquire, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %44, !prof !3

39:                                               ; preds = %36
  %40 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  store <2 x float> <float 0xC1C0000000000000, float 0xC1C0000000000000>, <2 x float>* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to <2 x float>*), align 8
  store <2 x float> <float 0x41C0000000000000, float 0x41C0000000000000>, <2 x float>* bitcast (float* getelementptr inbounds (%struct.SkRect, %struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, i64 0, i32 2) to <2 x float>*), align 8
  %43 = call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*)) #7
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  br label %44

44:                                               ; preds = %42, %39, %36
  %45 = load i32, i32* %25, align 8
  switch i32 %45, label %68 [
    i32 1, label %46
    i32 2, label %46
    i32 3, label %49
    i32 4, label %69
    i32 0, label %67
  ]

46:                                               ; preds = %44, %44
  %47 = getelementptr inbounds i8, i8* %18, i64 24
  %48 = bitcast i8* %47 to %struct.SkRect*
  br label %69

49:                                               ; preds = %44
  %50 = load %class.SkPath*, %class.SkPath** %30, align 8
  %51 = getelementptr inbounds %class.SkPath, %class.SkPath* %50, i64 0, i32 0, i32 0
  %52 = load %class.SkPathRef*, %class.SkPathRef** %51, align 8
  %53 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 9
  %54 = load i8, i8* %53, align 8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 1
  %58 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 3, i32 0
  %59 = load %struct.SkPoint*, %struct.SkPoint** %58, align 8
  %60 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 3, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %57, %struct.SkPoint* %59, i32 %61) #7
  %63 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 10
  %64 = zext i1 %62 to i8
  store i8 %64, i8* %63, align 1
  store i8 0, i8* %53, align 8
  br label %65

65:                                               ; preds = %56, %49
  %66 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 1
  br label %69

67:                                               ; preds = %44
  br label %69

68:                                               ; preds = %44
  br label %69

69:                                               ; preds = %44, %46, %65, %67, %68
  %70 = phi %struct.SkRect* [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %68 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %67 ], [ %66, %65 ], [ %48, %46 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, %44 ]
  %71 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %70, i64 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %70, i64 0, i32 1
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %70, i64 0, i32 2
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %70, i64 0, i32 3
  %78 = load float, float* %77, align 4
  %79 = load float, float* %13, align 4
  %80 = load float, float* %14, align 4
  %81 = load float, float* %15, align 4
  %82 = load float, float* %16, align 4
  %83 = fcmp olt float %72, %79
  %84 = select i1 %83, float %79, float %72
  %85 = fcmp olt float %81, %76
  %86 = select i1 %85, float %81, float %76
  %87 = fcmp olt float %74, %80
  %88 = select i1 %87, float %80, float %74
  %89 = fcmp olt float %82, %78
  %90 = fcmp olt float %84, %86
  %91 = select i1 %89, float %82, float %78
  %92 = fcmp olt float %88, %91
  %93 = and i1 %90, %92
  br i1 %93, label %102, label %96

94:                                               ; preds = %28, %23
  %95 = call zeroext i1 @_ZNK11SkClipStack7Element8containsERK7SkRRect(%"class.SkClipStack::Element"* nonnull %19, %class.SkRRect* dereferenceable(52) %1)
  br i1 %95, label %96, label %102

96:                                               ; preds = %94, %69
  %97 = load i32, i32* %21, align 4
  %98 = icmp eq i32 %97, 5
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* %8) #7
  %101 = icmp eq i8* %100, null
  br i1 %101, label %102, label %17

102:                                              ; preds = %69, %94, %99, %96, %17, %2
  %103 = phi i1 [ true, %2 ], [ false, %17 ], [ true, %96 ], [ true, %99 ], [ false, %94 ], [ false, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7
  ret i1 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack11pushElementERKNS_7ElementE(%class.SkClipStack*, %"class.SkClipStack::Element"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkDeque::Iter", align 8
  %4 = alloca %class.sk_sp.13, align 8
  %5 = alloca %class.sk_sp.13, align 8
  %6 = alloca %class.sk_sp.13, align 8
  %7 = alloca %struct.SkRect, align 4
  %8 = bitcast %"class.SkDeque::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  %10 = bitcast %"class.SkDeque::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN7SkDeque4IterC1ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* nonnull %3, %class.SkDeque* dereferenceable(56) %9, i32 1) #7
  %11 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* nonnull %3) #7
  %12 = bitcast i8* %11 to %"class.SkClipStack::Element"*
  %13 = icmp eq i8* %11, null
  br i1 %13, label %354, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds i8, i8* %11, i64 96
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %23 = icmp ult i32 %18, 2
  %24 = and i1 %23, %22
  br i1 %24, label %358, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds i8, i8* %11, i64 88
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, %16
  %30 = icmp eq i32 %18, 1
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %347

32:                                               ; preds = %25
  %33 = getelementptr inbounds i8, i8* %11, i64 92
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = or i32 %35, 4
  %37 = icmp eq i32 %36, 5
  br i1 %37, label %38, label %354

38:                                               ; preds = %32
  switch i32 %21, label %222 [
    i32 0, label %358
    i32 4, label %39
    i32 1, label %120
  ]

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 4
  br i1 %42, label %43, label %354

43:                                               ; preds = %39
  %44 = bitcast %class.sk_sp.13* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #7
  %45 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %5, i64 0, i32 0
  %46 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 2, i32 0
  %47 = load %class.SkShader*, %class.SkShader** %46, align 8
  %48 = icmp eq %class.SkShader* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %class.SkShader, %class.SkShader* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  br label %52

52:                                               ; preds = %43, %49
  store %class.SkShader* %47, %class.SkShader** %45, align 8
  %53 = getelementptr inbounds i8, i8* %11, i64 80
  %54 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %6, i64 0, i32 0
  %55 = bitcast i8* %53 to %class.SkShader**
  %56 = load %class.SkShader*, %class.SkShader** %55, align 8
  %57 = icmp eq %class.SkShader* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %class.SkShader, %class.SkShader* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic
  br label %61

61:                                               ; preds = %52, %58
  store %class.SkShader* %56, %class.SkShader** %54, align 8
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.13* nonnull sret %4, i32 5, %class.sk_sp.13* nonnull %5, %class.sk_sp.13* nonnull %6) #7
  %62 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %4, i64 0, i32 0
  %63 = bitcast %class.sk_sp.13* %4 to i64*
  %64 = load i64, i64* %63, align 8
  store %class.SkShader* null, %class.SkShader** %62, align 8
  %65 = load %class.SkShader*, %class.SkShader** %55, align 8
  %66 = bitcast i8* %53 to i64*
  store i64 %64, i64* %66, align 8
  %67 = icmp eq %class.SkShader* %65, null
  br i1 %67, label %91, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %class.SkShader, %class.SkShader* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkShader* %65 to %class.SkRefCntBase*
  %74 = bitcast %class.SkShader* %65 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #7
  br label %78

78:                                               ; preds = %68, %72
  %79 = load %class.SkShader*, %class.SkShader** %62, align 8
  %80 = icmp eq %class.SkShader* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.SkShader, %class.SkShader* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %class.SkShader* %79 to %class.SkRefCntBase*
  %87 = bitcast %class.SkShader* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8
  call void %90(%class.SkRefCntBase* nonnull %86) #7
  br label %91

91:                                               ; preds = %61, %78, %81, %85
  %92 = load %class.SkShader*, %class.SkShader** %54, align 8
  %93 = icmp eq %class.SkShader* %92, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %class.SkShader, %class.SkShader* %92, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = bitcast %class.SkShader* %92 to %class.SkRefCntBase*
  %100 = bitcast %class.SkShader* %92 to void (%class.SkRefCntBase*)***
  %101 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, i64 2
  %103 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, align 8
  call void %103(%class.SkRefCntBase* nonnull %99) #7
  br label %104

104:                                              ; preds = %91, %94, %98
  %105 = load %class.SkShader*, %class.SkShader** %45, align 8
  %106 = icmp eq %class.SkShader* %105, null
  br i1 %106, label %117, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %class.SkShader, %class.SkShader* %105, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 -1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %117

111:                                              ; preds = %107
  %112 = bitcast %class.SkShader* %105 to %class.SkRefCntBase*
  %113 = bitcast %class.SkShader* %105 to void (%class.SkRefCntBase*)***
  %114 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %113, align 8
  %115 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, i64 2
  %116 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %115, align 8
  call void %116(%class.SkRefCntBase* nonnull %112) #7
  br label %117

117:                                              ; preds = %104, %107, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #7
  %118 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* nonnull %3) #7
  %119 = bitcast i8* %118 to %"class.SkClipStack::Element"*
  call void @_ZN11SkClipStack7Element19updateBoundAndGenIDEPKS0_(%"class.SkClipStack::Element"* nonnull %12, %"class.SkClipStack::Element"* %119)
  br label %358

120:                                              ; preds = %38
  %121 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 5
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %124, label %222

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0
  %126 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 6
  %127 = load i8, i8* %126, align 4, !range !2
  %128 = getelementptr inbounds i8, i8* %11, i64 100
  %129 = load i8, i8* %128, align 4, !range !2
  %130 = icmp eq i8 %129, %127
  br i1 %130, label %179, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds i8, i8* %11, i64 24
  %133 = bitcast i8* %132 to float*
  %134 = load float, float* %133, align 4
  %135 = getelementptr inbounds i8, i8* %11, i64 28
  %136 = bitcast i8* %135 to float*
  %137 = load float, float* %136, align 4
  %138 = getelementptr inbounds i8, i8* %11, i64 32
  %139 = bitcast i8* %138 to float*
  %140 = load float, float* %139, align 4
  %141 = getelementptr inbounds i8, i8* %11, i64 36
  %142 = bitcast i8* %141 to float*
  %143 = load float, float* %142, align 4
  %144 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %125, i64 0, i32 0
  %145 = load float, float* %144, align 4
  %146 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 1
  %147 = load float, float* %146, align 4
  %148 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 2
  %149 = load float, float* %148, align 4
  %150 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0, i32 3
  %151 = load float, float* %150, align 4
  %152 = fcmp olt float %134, %145
  %153 = select i1 %152, float %145, float %134
  %154 = fcmp olt float %149, %140
  %155 = select i1 %154, float %149, float %140
  %156 = fcmp olt float %137, %147
  %157 = select i1 %156, float %147, float %137
  %158 = fcmp olt float %151, %143
  %159 = fcmp olt float %153, %155
  %160 = select i1 %158, float %151, float %143
  %161 = fcmp olt float %157, %160
  %162 = and i1 %159, %161
  br i1 %162, label %163, label %179

163:                                              ; preds = %131
  %164 = fcmp olt float %145, %149
  %165 = fcmp olt float %147, %151
  %166 = and i1 %164, %165
  %167 = fcmp olt float %134, %140
  %168 = and i1 %167, %166
  br i1 %168, label %169, label %354

169:                                              ; preds = %163
  %170 = fcmp uge float %137, %143
  %171 = fcmp ugt float %134, %145
  %172 = or i1 %170, %171
  br i1 %172, label %354, label %173

173:                                              ; preds = %169
  %174 = fcmp ole float %137, %147
  %175 = fcmp oge float %140, %149
  %176 = fcmp oge float %143, %151
  %177 = and i1 %174, %175
  %178 = and i1 %176, %177
  br i1 %178, label %179, label %354

179:                                              ; preds = %131, %124, %173
  %180 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #7
  %181 = getelementptr inbounds i8, i8* %11, i64 24
  %182 = bitcast i8* %181 to %struct.SkRect*
  %183 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %183, i8 -1, i64 16, i1 false)
  %184 = call zeroext i1 @_ZN6SkRect9intersectERKS_S1_(%struct.SkRect* nonnull %7, %struct.SkRect* dereferenceable(16) %182, %struct.SkRect* dereferenceable(16) %125) #7
  br i1 %184, label %210, label %185

185:                                              ; preds = %179
  store i32 0, i32* %20, align 8
  %186 = getelementptr inbounds i8, i8* %11, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 4 %181, i8 0, i64 52, i1 false) #7
  %187 = getelementptr inbounds i8, i8* %11, i64 16
  %188 = bitcast i8* %187 to %class.SkPath**
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 21, i1 false) #7
  %189 = load %class.SkPath*, %class.SkPath** %188, align 8
  %190 = icmp eq %class.SkPath* %189, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %185
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %189) #7
  store %class.SkPath* null, %class.SkPath** %188, align 8
  br label %192

192:                                              ; preds = %191, %185
  %193 = getelementptr inbounds i8, i8* %11, i64 80
  %194 = bitcast i8* %193 to %class.SkShader**
  %195 = load %class.SkShader*, %class.SkShader** %194, align 8
  store %class.SkShader* null, %class.SkShader** %194, align 8
  %196 = icmp eq %class.SkShader* %195, null
  br i1 %196, label %207, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %class.SkShader, %class.SkShader* %195, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 -1 acq_rel
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %207

201:                                              ; preds = %197
  %202 = bitcast %class.SkShader* %195 to %class.SkRefCntBase*
  %203 = bitcast %class.SkShader* %195 to void (%class.SkRefCntBase*)***
  %204 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %203, align 8
  %205 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %204, i64 2
  %206 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %205, align 8
  call void %206(%class.SkRefCntBase* nonnull %202) #7
  br label %207

207:                                              ; preds = %192, %197, %201
  %208 = getelementptr inbounds i8, i8* %11, i64 128
  %209 = bitcast i8* %208 to i32*
  store i32 1, i32* %209, align 8
  br label %221

210:                                              ; preds = %179
  %211 = bitcast i8* %181 to %class.SkRRect*
  %212 = call zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect* %211, %struct.SkRect* nonnull dereferenceable(16) %7) #7
  br i1 %212, label %213, label %217

213:                                              ; preds = %210
  %214 = getelementptr inbounds i8, i8* %11, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 4 %214, i8 0, i64 32, i1 false) #7
  %215 = getelementptr inbounds i8, i8* %11, i64 72
  %216 = bitcast i8* %215 to i32*
  store i32 1, i32* %216, align 4
  br label %217

217:                                              ; preds = %210, %213
  %218 = load i8, i8* %126, align 4, !range !2
  store i8 %218, i8* %128, align 4
  %219 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* nonnull %3) #7
  %220 = bitcast i8* %219 to %"class.SkClipStack::Element"*
  call void @_ZN11SkClipStack7Element19updateBoundAndGenIDEPKS0_(%"class.SkClipStack::Element"* nonnull %12, %"class.SkClipStack::Element"* %220)
  br label %221

221:                                              ; preds = %217, %207
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #7
  br label %358

222:                                              ; preds = %120, %38
  %223 = load atomic i8, i8* bitcast (i64* @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*) acquire, align 8
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %225, label %230, !prof !3

225:                                              ; preds = %222
  %226 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %230, label %228

228:                                              ; preds = %225
  store <2 x float> <float 0xC1C0000000000000, float 0xC1C0000000000000>, <2 x float>* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to <2 x float>*), align 8
  store <2 x float> <float 0x41C0000000000000, float 0x41C0000000000000>, <2 x float>* bitcast (float* getelementptr inbounds (%struct.SkRect, %struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, i64 0, i32 2) to <2 x float>*), align 8
  %229 = call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*)) #7
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  br label %230

230:                                              ; preds = %228, %225, %222
  %231 = load i32, i32* %20, align 8
  switch i32 %231, label %256 [
    i32 1, label %232
    i32 2, label %232
    i32 3, label %235
    i32 4, label %257
    i32 0, label %255
  ]

232:                                              ; preds = %230, %230
  %233 = getelementptr inbounds i8, i8* %11, i64 24
  %234 = bitcast i8* %233 to %struct.SkRect*
  br label %257

235:                                              ; preds = %230
  %236 = getelementptr inbounds i8, i8* %11, i64 16
  %237 = bitcast i8* %236 to %class.SkPath**
  %238 = load %class.SkPath*, %class.SkPath** %237, align 8
  %239 = getelementptr inbounds %class.SkPath, %class.SkPath* %238, i64 0, i32 0, i32 0
  %240 = load %class.SkPathRef*, %class.SkPathRef** %239, align 8
  %241 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 9
  %242 = load i8, i8* %241, align 8
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %253, label %244

244:                                              ; preds = %235
  %245 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 1
  %246 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 3, i32 0
  %247 = load %struct.SkPoint*, %struct.SkPoint** %246, align 8
  %248 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 3, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %245, %struct.SkPoint* %247, i32 %249) #7
  %251 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 10
  %252 = zext i1 %250 to i8
  store i8 %252, i8* %251, align 1
  store i8 0, i8* %241, align 8
  br label %253

253:                                              ; preds = %244, %235
  %254 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 1
  br label %257

255:                                              ; preds = %230
  br label %257

256:                                              ; preds = %230
  br label %257

257:                                              ; preds = %230, %232, %253, %255, %256
  %258 = phi %struct.SkRect* [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %256 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %255 ], [ %254, %253 ], [ %234, %232 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, %230 ]
  %259 = load atomic i8, i8* bitcast (i64* @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*) acquire, align 8
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %261, label %266, !prof !3

261:                                              ; preds = %257
  %262 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %266, label %264

264:                                              ; preds = %261
  store <2 x float> <float 0xC1C0000000000000, float 0xC1C0000000000000>, <2 x float>* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to <2 x float>*), align 8
  store <2 x float> <float 0x41C0000000000000, float 0x41C0000000000000>, <2 x float>* bitcast (float* getelementptr inbounds (%struct.SkRect, %struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, i64 0, i32 2) to <2 x float>*), align 8
  %265 = call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%struct.SkRect* @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite to i8*)) #7
  call void @__cxa_guard_release(i64* nonnull @_ZGVZNK11SkClipStack7Element9getBoundsEvE9kInfinite) #7
  br label %266

266:                                              ; preds = %264, %261, %257
  %267 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 5
  %268 = load i32, i32* %267, align 8
  switch i32 %268, label %291 [
    i32 1, label %269
    i32 2, label %269
    i32 3, label %271
    i32 4, label %292
    i32 0, label %290
  ]

269:                                              ; preds = %266, %266
  %270 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 1, i32 0
  br label %292

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %1, i64 0, i32 0, i32 1
  %273 = load %class.SkPath*, %class.SkPath** %272, align 8
  %274 = getelementptr inbounds %class.SkPath, %class.SkPath* %273, i64 0, i32 0, i32 0
  %275 = load %class.SkPathRef*, %class.SkPathRef** %274, align 8
  %276 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %275, i64 0, i32 9
  %277 = load i8, i8* %276, align 8
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %288, label %279

279:                                              ; preds = %271
  %280 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %275, i64 0, i32 1
  %281 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %275, i64 0, i32 3, i32 0
  %282 = load %struct.SkPoint*, %struct.SkPoint** %281, align 8
  %283 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %275, i64 0, i32 3, i32 2
  %284 = load i32, i32* %283, align 4
  %285 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %280, %struct.SkPoint* %282, i32 %284) #7
  %286 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %275, i64 0, i32 10
  %287 = zext i1 %285 to i8
  store i8 %287, i8* %286, align 1
  store i8 0, i8* %276, align 8
  br label %288

288:                                              ; preds = %279, %271
  %289 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %275, i64 0, i32 1
  br label %292

290:                                              ; preds = %266
  br label %292

291:                                              ; preds = %266
  br label %292

292:                                              ; preds = %266, %269, %288, %290, %291
  %293 = phi %struct.SkRect* [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %291 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE6kEmpty, %290 ], [ %289, %288 ], [ %270, %269 ], [ @_ZZNK11SkClipStack7Element9getBoundsEvE9kInfinite, %266 ]
  %294 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %258, i64 0, i32 0
  %295 = load float, float* %294, align 4
  %296 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %258, i64 0, i32 1
  %297 = load float, float* %296, align 4
  %298 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %258, i64 0, i32 2
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %258, i64 0, i32 3
  %301 = load float, float* %300, align 4
  %302 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %293, i64 0, i32 0
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %293, i64 0, i32 1
  %305 = load float, float* %304, align 4
  %306 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %293, i64 0, i32 2
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %293, i64 0, i32 3
  %309 = load float, float* %308, align 4
  %310 = fcmp olt float %295, %303
  %311 = select i1 %310, float %303, float %295
  %312 = fcmp olt float %307, %299
  %313 = select i1 %312, float %307, float %299
  %314 = fcmp olt float %297, %305
  %315 = select i1 %314, float %305, float %297
  %316 = fcmp olt float %309, %301
  %317 = fcmp olt float %311, %313
  %318 = select i1 %316, float %309, float %301
  %319 = fcmp olt float %315, %318
  %320 = and i1 %317, %319
  br i1 %320, label %354, label %321

321:                                              ; preds = %292
  store i32 0, i32* %20, align 8
  %322 = getelementptr inbounds i8, i8* %11, i64 104
  %323 = getelementptr inbounds i8, i8* %11, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 4 %323, i8 0, i64 52, i1 false) #7
  %324 = getelementptr inbounds i8, i8* %11, i64 16
  %325 = bitcast i8* %324 to %class.SkPath**
  call void @llvm.memset.p0i8.i64(i8* align 8 %322, i8 0, i64 21, i1 false) #7
  %326 = load %class.SkPath*, %class.SkPath** %325, align 8
  %327 = icmp eq %class.SkPath* %326, null
  br i1 %327, label %329, label %328

328:                                              ; preds = %321
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %326) #7
  store %class.SkPath* null, %class.SkPath** %325, align 8
  br label %329

329:                                              ; preds = %328, %321
  %330 = getelementptr inbounds i8, i8* %11, i64 80
  %331 = bitcast i8* %330 to %class.SkShader**
  %332 = load %class.SkShader*, %class.SkShader** %331, align 8
  store %class.SkShader* null, %class.SkShader** %331, align 8
  %333 = icmp eq %class.SkShader* %332, null
  br i1 %333, label %344, label %334

334:                                              ; preds = %329
  %335 = getelementptr inbounds %class.SkShader, %class.SkShader* %332, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = atomicrmw add i32* %335, i32 -1 acq_rel
  %337 = icmp eq i32 %336, 1
  br i1 %337, label %338, label %344

338:                                              ; preds = %334
  %339 = bitcast %class.SkShader* %332 to %class.SkRefCntBase*
  %340 = bitcast %class.SkShader* %332 to void (%class.SkRefCntBase*)***
  %341 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %340, align 8
  %342 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %341, i64 2
  %343 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %342, align 8
  call void %343(%class.SkRefCntBase* nonnull %339) #7
  br label %344

344:                                              ; preds = %329, %334, %338
  %345 = getelementptr inbounds i8, i8* %11, i64 128
  %346 = bitcast i8* %345 to i32*
  store i32 1, i32* %346, align 8
  br label %358

347:                                              ; preds = %25
  %348 = icmp eq i32 %18, 5
  br i1 %348, label %349, label %354

349:                                              ; preds = %347
  %350 = add nsw i32 %16, -1
  call void @_ZN11SkClipStack9restoreToEi(%class.SkClipStack* %0, i32 %350)
  %351 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %352 = bitcast i8** %351 to %"class.SkClipStack::Element"**
  %353 = load %"class.SkClipStack::Element"*, %"class.SkClipStack::Element"** %352, align 8
  br label %354

354:                                              ; preds = %163, %169, %32, %2, %292, %173, %39, %349, %347
  %355 = phi %"class.SkClipStack::Element"* [ %12, %292 ], [ %12, %173 ], [ %12, %39 ], [ %353, %349 ], [ %12, %347 ], [ null, %2 ], [ %12, %32 ], [ %12, %169 ], [ %12, %163 ]
  %356 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %9) #7
  %357 = bitcast i8* %356 to %"class.SkClipStack::Element"*
  call void @_ZN11SkClipStack7ElementC2ERKS0_(%"class.SkClipStack::Element"* %357, %"class.SkClipStack::Element"* dereferenceable(160) %1)
  call void @_ZN11SkClipStack7Element19updateBoundAndGenIDEPKS0_(%"class.SkClipStack::Element"* %357, %"class.SkClipStack::Element"* %355)
  br label %358

358:                                              ; preds = %14, %38, %354, %344, %221, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret void
}

declare void @_ZN7SkDeque4IterC1ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"*, %class.SkDeque* dereferenceable(56), i32) unnamed_addr #2

declare i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"*) local_unnamed_addr #2

declare void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.13* sret, i32, %class.sk_sp.13*, %class.sk_sp.13*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_S1_(%struct.SkRect*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack9clipRRectERK7SkRRectRK8SkMatrix8SkClipOpb(%class.SkClipStack*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkClipStack::Element", align 8
  %7 = alloca %"class.SkClipStack::Element", align 8
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %8) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 getelementptr inbounds ({ %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }, { %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }* @__const._ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE.element, i64 0, i32 0, i32 0, i64 0), i64 136, i1 false)
  %9 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 2, i32 0
  store %class.SkShader* null, %class.SkShader** %12, align 8
  %13 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 11
  %14 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 12, i32 1
  %15 = bitcast %class.SkPath** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 60, i1 false) #7
  %16 = bitcast %class.GrProxyProvider** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #7
  store i64 1, i64* %14, align 8
  call void @_ZN11SkClipStack7Element9initRRectEiRK7SkRRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"* nonnull %6, i32 %10, %class.SkRRect* dereferenceable(52) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, i1 zeroext %4) #7
  call void @_ZN11SkClipStack11pushElementERKNS_7ElementE(%class.SkClipStack* %0, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %6)
  %17 = icmp sgt i32 %3, 1
  br i1 %17, label %18, label %112

18:                                               ; preds = %5
  %19 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 2
  %22 = load float, float* %21, align 4
  %23 = fcmp olt float %20, %22
  br i1 %23, label %24, label %112

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 1
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 3
  %28 = load float, float* %27, align 4
  %29 = fcmp olt float %26, %28
  br i1 %29, label %30, label %112

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %31) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 getelementptr inbounds ({ %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }, { %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }* @__const._ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE.element, i64 0, i32 0, i32 0, i64 0), i64 160, i1 false)
  %32 = load i32, i32* %9, align 8
  %33 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2
  %34 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #7
  %35 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 2, i32 0
  store %class.SkShader* null, %class.SkShader** %36, align 8
  %37 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 11
  %38 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 12, i32 1
  %39 = bitcast %class.SkPath** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 60, i1 false) #7
  %40 = bitcast %class.GrProxyProvider** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #7
  store i64 1, i64* %38, align 8
  call void @_ZN11SkClipStack7Element8initRectEiRK6SkRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"* nonnull %7, i32 %32, %struct.SkRect* dereferenceable(16) %33, %class.SkMatrix* dereferenceable(40) %34, i32 1, i1 zeroext false) #7
  call void @_ZN11SkClipStack11pushElementERKNS_7ElementE(%class.SkClipStack* %0, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %7)
  %41 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 12
  %42 = load i64, i64* %38, align 8
  %43 = and i64 %42, 4294967294
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %30
  %46 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %41, i64 0, i32 0
  br label %101

47:                                               ; preds = %101
  %48 = and i64 %107, 4294967294
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %41, i64 0, i32 0
  br label %56

52:                                               ; preds = %75, %30, %47
  %53 = phi i64 [ %107, %47 ], [ %42, %30 ], [ %77, %75 ]
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %84, label %81

56:                                               ; preds = %75, %50
  %57 = phi i64 [ 0, %50 ], [ %76, %75 ]
  %58 = load %class.GrUniqueKey*, %class.GrUniqueKey** %51, align 8
  %59 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 1, i32 0
  %60 = load %class.SkData*, %class.SkData** %59, align 8
  %61 = icmp eq %class.SkData* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.SkData, %class.SkData* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %60) #7
  %67 = bitcast %class.SkData* %60 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %67) #7
  br label %68

68:                                               ; preds = %66, %62, %56
  %69 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 0, i32 0, i32 1, i32 0, i64 0
  %72 = icmp eq i32* %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = bitcast i32* %70 to i8*
  call void @_Z7sk_freePv(i8* %74) #7
  br label %75

75:                                               ; preds = %73, %68
  %76 = add nuw nsw i64 %57, 1
  %77 = load i64, i64* %38, align 8
  %78 = lshr i64 %77, 1
  %79 = and i64 %78, 2147483647
  %80 = icmp ult i64 %76, %79
  br i1 %80, label %56, label %52

81:                                               ; preds = %52
  %82 = bitcast %class.SkTArray* %41 to i8**
  %83 = load i8*, i8** %82, align 8
  call void @_Z7sk_freePv(i8* %83) #7
  br label %84

84:                                               ; preds = %52, %81
  %85 = load %class.SkShader*, %class.SkShader** %36, align 8
  %86 = icmp eq %class.SkShader* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %class.SkShader, %class.SkShader* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkShader* %85 to %class.SkRefCntBase*
  %93 = bitcast %class.SkShader* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #7
  br label %97

97:                                               ; preds = %91, %87, %84
  %98 = load %class.SkPath*, %class.SkPath** %35, align 8
  %99 = icmp eq %class.SkPath* %98, null
  br i1 %99, label %111, label %100

100:                                              ; preds = %97
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %98) #7
  store %class.SkPath* null, %class.SkPath** %35, align 8
  br label %111

101:                                              ; preds = %101, %45
  %102 = phi i64 [ 0, %45 ], [ %106, %101 ]
  %103 = load %class.GrProxyProvider*, %class.GrProxyProvider** %37, align 8
  %104 = load %class.GrUniqueKey*, %class.GrUniqueKey** %46, align 8
  %105 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %104, i64 %102
  call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %103, %class.GrUniqueKey* dereferenceable(56) %105, %class.GrTextureProxy* null, i1 zeroext true) #7
  %106 = add nuw nsw i64 %102, 1
  %107 = load i64, i64* %38, align 8
  %108 = lshr i64 %107, 1
  %109 = and i64 %108, 2147483647
  %110 = icmp ult i64 %106, %109
  br i1 %110, label %101, label %47

111:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %31) #7
  br label %112

112:                                              ; preds = %18, %5, %111, %24
  %113 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 12
  %114 = load i64, i64* %14, align 8
  %115 = and i64 %114, 4294967294
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %113, i64 0, i32 0
  br label %173

119:                                              ; preds = %173
  %120 = and i64 %179, 4294967294
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %113, i64 0, i32 0
  br label %128

124:                                              ; preds = %147, %112, %119
  %125 = phi i64 [ %179, %119 ], [ %114, %112 ], [ %149, %147 ]
  %126 = and i64 %125, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %156, label %153

128:                                              ; preds = %147, %122
  %129 = phi i64 [ 0, %122 ], [ %148, %147 ]
  %130 = load %class.GrUniqueKey*, %class.GrUniqueKey** %123, align 8
  %131 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 1, i32 0
  %132 = load %class.SkData*, %class.SkData** %131, align 8
  %133 = icmp eq %class.SkData* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %class.SkData, %class.SkData* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw add i32* %135, i32 -1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %132) #7
  %139 = bitcast %class.SkData* %132 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %139) #7
  br label %140

140:                                              ; preds = %138, %134, %128
  %141 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 0, i32 0, i32 0
  %142 = load i32*, i32** %141, align 8
  %143 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 0, i32 0, i32 1, i32 0, i64 0
  %144 = icmp eq i32* %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %140
  %146 = bitcast i32* %142 to i8*
  call void @_Z7sk_freePv(i8* %146) #7
  br label %147

147:                                              ; preds = %145, %140
  %148 = add nuw nsw i64 %129, 1
  %149 = load i64, i64* %14, align 8
  %150 = lshr i64 %149, 1
  %151 = and i64 %150, 2147483647
  %152 = icmp ult i64 %148, %151
  br i1 %152, label %128, label %124

153:                                              ; preds = %124
  %154 = bitcast %class.SkTArray* %113 to i8**
  %155 = load i8*, i8** %154, align 8
  call void @_Z7sk_freePv(i8* %155) #7
  br label %156

156:                                              ; preds = %124, %153
  %157 = load %class.SkShader*, %class.SkShader** %12, align 8
  %158 = icmp eq %class.SkShader* %157, null
  br i1 %158, label %169, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %class.SkShader, %class.SkShader* %157, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = bitcast %class.SkShader* %157 to %class.SkRefCntBase*
  %165 = bitcast %class.SkShader* %157 to void (%class.SkRefCntBase*)***
  %166 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, i64 2
  %168 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, align 8
  call void %168(%class.SkRefCntBase* nonnull %164) #7
  br label %169

169:                                              ; preds = %163, %159, %156
  %170 = load %class.SkPath*, %class.SkPath** %11, align 8
  %171 = icmp eq %class.SkPath* %170, null
  br i1 %171, label %183, label %172

172:                                              ; preds = %169
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %170) #7
  store %class.SkPath* null, %class.SkPath** %11, align 8
  br label %183

173:                                              ; preds = %173, %117
  %174 = phi i64 [ 0, %117 ], [ %178, %173 ]
  %175 = load %class.GrProxyProvider*, %class.GrProxyProvider** %13, align 8
  %176 = load %class.GrUniqueKey*, %class.GrUniqueKey** %118, align 8
  %177 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %176, i64 %174
  call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %175, %class.GrUniqueKey* dereferenceable(56) %177, %class.GrTextureProxy* null, i1 zeroext true) #7
  %178 = add nuw nsw i64 %174, 1
  %179 = load i64, i64* %14, align 8
  %180 = lshr i64 %179, 1
  %181 = and i64 %180, 2147483647
  %182 = icmp ult i64 %178, %181
  br i1 %182, label %173, label %119

183:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %8) #7
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack8clipRectERK6SkRectRK8SkMatrix8SkClipOpb(%class.SkClipStack*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkClipStack::Element", align 8
  %7 = alloca %"class.SkClipStack::Element", align 8
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %8) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 getelementptr inbounds ({ %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }, { %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }* @__const._ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE.element, i64 0, i32 0, i32 0, i64 0), i64 136, i1 false)
  %9 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 2, i32 0
  store %class.SkShader* null, %class.SkShader** %12, align 8
  %13 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 11
  %14 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 12, i32 1
  %15 = bitcast %class.SkPath** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 60, i1 false) #7
  %16 = bitcast %class.GrProxyProvider** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #7
  store i64 1, i64* %14, align 8
  call void @_ZN11SkClipStack7Element8initRectEiRK6SkRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"* nonnull %6, i32 %10, %struct.SkRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, i1 zeroext %4) #7
  call void @_ZN11SkClipStack11pushElementERKNS_7ElementE(%class.SkClipStack* %0, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %6)
  %17 = icmp sgt i32 %3, 1
  br i1 %17, label %18, label %112

18:                                               ; preds = %5
  %19 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 2
  %22 = load float, float* %21, align 4
  %23 = fcmp olt float %20, %22
  br i1 %23, label %24, label %112

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 1
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 3
  %28 = load float, float* %27, align 4
  %29 = fcmp olt float %26, %28
  br i1 %29, label %30, label %112

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %31) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 getelementptr inbounds ({ %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }, { %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }* @__const._ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE.element, i64 0, i32 0, i32 0, i64 0), i64 160, i1 false)
  %32 = load i32, i32* %9, align 8
  %33 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2
  %34 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #7
  %35 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 2, i32 0
  store %class.SkShader* null, %class.SkShader** %36, align 8
  %37 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 11
  %38 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 12, i32 1
  %39 = bitcast %class.SkPath** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 60, i1 false) #7
  %40 = bitcast %class.GrProxyProvider** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #7
  store i64 1, i64* %38, align 8
  call void @_ZN11SkClipStack7Element8initRectEiRK6SkRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"* nonnull %7, i32 %32, %struct.SkRect* dereferenceable(16) %33, %class.SkMatrix* dereferenceable(40) %34, i32 1, i1 zeroext false) #7
  call void @_ZN11SkClipStack11pushElementERKNS_7ElementE(%class.SkClipStack* %0, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %7)
  %41 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 12
  %42 = load i64, i64* %38, align 8
  %43 = and i64 %42, 4294967294
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %30
  %46 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %41, i64 0, i32 0
  br label %101

47:                                               ; preds = %101
  %48 = and i64 %107, 4294967294
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %41, i64 0, i32 0
  br label %56

52:                                               ; preds = %75, %30, %47
  %53 = phi i64 [ %107, %47 ], [ %42, %30 ], [ %77, %75 ]
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %84, label %81

56:                                               ; preds = %75, %50
  %57 = phi i64 [ 0, %50 ], [ %76, %75 ]
  %58 = load %class.GrUniqueKey*, %class.GrUniqueKey** %51, align 8
  %59 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 1, i32 0
  %60 = load %class.SkData*, %class.SkData** %59, align 8
  %61 = icmp eq %class.SkData* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.SkData, %class.SkData* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %60) #7
  %67 = bitcast %class.SkData* %60 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %67) #7
  br label %68

68:                                               ; preds = %66, %62, %56
  %69 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 0, i32 0, i32 1, i32 0, i64 0
  %72 = icmp eq i32* %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = bitcast i32* %70 to i8*
  call void @_Z7sk_freePv(i8* %74) #7
  br label %75

75:                                               ; preds = %73, %68
  %76 = add nuw nsw i64 %57, 1
  %77 = load i64, i64* %38, align 8
  %78 = lshr i64 %77, 1
  %79 = and i64 %78, 2147483647
  %80 = icmp ult i64 %76, %79
  br i1 %80, label %56, label %52

81:                                               ; preds = %52
  %82 = bitcast %class.SkTArray* %41 to i8**
  %83 = load i8*, i8** %82, align 8
  call void @_Z7sk_freePv(i8* %83) #7
  br label %84

84:                                               ; preds = %52, %81
  %85 = load %class.SkShader*, %class.SkShader** %36, align 8
  %86 = icmp eq %class.SkShader* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %class.SkShader, %class.SkShader* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkShader* %85 to %class.SkRefCntBase*
  %93 = bitcast %class.SkShader* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #7
  br label %97

97:                                               ; preds = %91, %87, %84
  %98 = load %class.SkPath*, %class.SkPath** %35, align 8
  %99 = icmp eq %class.SkPath* %98, null
  br i1 %99, label %111, label %100

100:                                              ; preds = %97
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %98) #7
  store %class.SkPath* null, %class.SkPath** %35, align 8
  br label %111

101:                                              ; preds = %101, %45
  %102 = phi i64 [ 0, %45 ], [ %106, %101 ]
  %103 = load %class.GrProxyProvider*, %class.GrProxyProvider** %37, align 8
  %104 = load %class.GrUniqueKey*, %class.GrUniqueKey** %46, align 8
  %105 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %104, i64 %102
  call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %103, %class.GrUniqueKey* dereferenceable(56) %105, %class.GrTextureProxy* null, i1 zeroext true) #7
  %106 = add nuw nsw i64 %102, 1
  %107 = load i64, i64* %38, align 8
  %108 = lshr i64 %107, 1
  %109 = and i64 %108, 2147483647
  %110 = icmp ult i64 %106, %109
  br i1 %110, label %101, label %47

111:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %31) #7
  br label %112

112:                                              ; preds = %18, %5, %111, %24
  %113 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 12
  %114 = load i64, i64* %14, align 8
  %115 = and i64 %114, 4294967294
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %113, i64 0, i32 0
  br label %173

119:                                              ; preds = %173
  %120 = and i64 %179, 4294967294
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %113, i64 0, i32 0
  br label %128

124:                                              ; preds = %147, %112, %119
  %125 = phi i64 [ %179, %119 ], [ %114, %112 ], [ %149, %147 ]
  %126 = and i64 %125, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %156, label %153

128:                                              ; preds = %147, %122
  %129 = phi i64 [ 0, %122 ], [ %148, %147 ]
  %130 = load %class.GrUniqueKey*, %class.GrUniqueKey** %123, align 8
  %131 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 1, i32 0
  %132 = load %class.SkData*, %class.SkData** %131, align 8
  %133 = icmp eq %class.SkData* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %class.SkData, %class.SkData* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw add i32* %135, i32 -1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %132) #7
  %139 = bitcast %class.SkData* %132 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %139) #7
  br label %140

140:                                              ; preds = %138, %134, %128
  %141 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 0, i32 0, i32 0
  %142 = load i32*, i32** %141, align 8
  %143 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 0, i32 0, i32 1, i32 0, i64 0
  %144 = icmp eq i32* %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %140
  %146 = bitcast i32* %142 to i8*
  call void @_Z7sk_freePv(i8* %146) #7
  br label %147

147:                                              ; preds = %145, %140
  %148 = add nuw nsw i64 %129, 1
  %149 = load i64, i64* %14, align 8
  %150 = lshr i64 %149, 1
  %151 = and i64 %150, 2147483647
  %152 = icmp ult i64 %148, %151
  br i1 %152, label %128, label %124

153:                                              ; preds = %124
  %154 = bitcast %class.SkTArray* %113 to i8**
  %155 = load i8*, i8** %154, align 8
  call void @_Z7sk_freePv(i8* %155) #7
  br label %156

156:                                              ; preds = %124, %153
  %157 = load %class.SkShader*, %class.SkShader** %12, align 8
  %158 = icmp eq %class.SkShader* %157, null
  br i1 %158, label %169, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %class.SkShader, %class.SkShader* %157, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = bitcast %class.SkShader* %157 to %class.SkRefCntBase*
  %165 = bitcast %class.SkShader* %157 to void (%class.SkRefCntBase*)***
  %166 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, i64 2
  %168 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, align 8
  call void %168(%class.SkRefCntBase* nonnull %164) #7
  br label %169

169:                                              ; preds = %163, %159, %156
  %170 = load %class.SkPath*, %class.SkPath** %11, align 8
  %171 = icmp eq %class.SkPath* %170, null
  br i1 %171, label %183, label %172

172:                                              ; preds = %169
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %170) #7
  store %class.SkPath* null, %class.SkPath** %11, align 8
  br label %183

173:                                              ; preds = %173, %117
  %174 = phi i64 [ 0, %117 ], [ %178, %173 ]
  %175 = load %class.GrProxyProvider*, %class.GrProxyProvider** %13, align 8
  %176 = load %class.GrUniqueKey*, %class.GrUniqueKey** %118, align 8
  %177 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %176, i64 %174
  call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %175, %class.GrUniqueKey* dereferenceable(56) %177, %class.GrTextureProxy* null, i1 zeroext true) #7
  %178 = add nuw nsw i64 %174, 1
  %179 = load i64, i64* %14, align 8
  %180 = lshr i64 %179, 1
  %181 = and i64 %180, 2147483647
  %182 = icmp ult i64 %178, %181
  br i1 %182, label %173, label %119

183:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack8clipPathERK6SkPathRK8SkMatrix8SkClipOpb(%class.SkClipStack*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkClipStack::Element", align 8
  %7 = alloca %"class.SkClipStack::Element", align 8
  %8 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %8) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 getelementptr inbounds ({ %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }, { %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }* @__const._ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE.element, i64 0, i32 0, i32 0, i64 0), i64 136, i1 false)
  %9 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 2, i32 0
  store %class.SkShader* null, %class.SkShader** %12, align 8
  %13 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 11
  %14 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 12, i32 1
  %15 = bitcast %class.SkPath** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 60, i1 false) #7
  %16 = bitcast %class.GrProxyProvider** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #7
  store i64 1, i64* %14, align 8
  call void @_ZN11SkClipStack7Element8initPathEiRK6SkPathRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"* nonnull %6, i32 %10, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 %3, i1 zeroext %4) #7
  call void @_ZN11SkClipStack11pushElementERKNS_7ElementE(%class.SkClipStack* %0, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %6)
  %17 = icmp sgt i32 %3, 1
  br i1 %17, label %18, label %112

18:                                               ; preds = %5
  %19 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 2
  %22 = load float, float* %21, align 4
  %23 = fcmp olt float %20, %22
  br i1 %23, label %24, label %112

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 1
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2, i32 3
  %28 = load float, float* %27, align 4
  %29 = fcmp olt float %26, %28
  br i1 %29, label %30, label %112

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %31) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 getelementptr inbounds ({ %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }, { %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }* @__const._ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE.element, i64 0, i32 0, i32 0, i64 0), i64 160, i1 false)
  %32 = load i32, i32* %9, align 8
  %33 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 2
  %34 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #7
  %35 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 2, i32 0
  store %class.SkShader* null, %class.SkShader** %36, align 8
  %37 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 11
  %38 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 12, i32 1
  %39 = bitcast %class.SkPath** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 60, i1 false) #7
  %40 = bitcast %class.GrProxyProvider** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #7
  store i64 1, i64* %38, align 8
  call void @_ZN11SkClipStack7Element8initRectEiRK6SkRectRK8SkMatrix8SkClipOpb(%"class.SkClipStack::Element"* nonnull %7, i32 %32, %struct.SkRect* dereferenceable(16) %33, %class.SkMatrix* dereferenceable(40) %34, i32 1, i1 zeroext false) #7
  call void @_ZN11SkClipStack11pushElementERKNS_7ElementE(%class.SkClipStack* %0, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %7)
  %41 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %7, i64 0, i32 12
  %42 = load i64, i64* %38, align 8
  %43 = and i64 %42, 4294967294
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %30
  %46 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %41, i64 0, i32 0
  br label %101

47:                                               ; preds = %101
  %48 = and i64 %107, 4294967294
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %41, i64 0, i32 0
  br label %56

52:                                               ; preds = %75, %30, %47
  %53 = phi i64 [ %107, %47 ], [ %42, %30 ], [ %77, %75 ]
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %84, label %81

56:                                               ; preds = %75, %50
  %57 = phi i64 [ 0, %50 ], [ %76, %75 ]
  %58 = load %class.GrUniqueKey*, %class.GrUniqueKey** %51, align 8
  %59 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 1, i32 0
  %60 = load %class.SkData*, %class.SkData** %59, align 8
  %61 = icmp eq %class.SkData* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.SkData, %class.SkData* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %60) #7
  %67 = bitcast %class.SkData* %60 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %67) #7
  br label %68

68:                                               ; preds = %66, %62, %56
  %69 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %58, i64 %57, i32 0, i32 0, i32 1, i32 0, i64 0
  %72 = icmp eq i32* %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = bitcast i32* %70 to i8*
  call void @_Z7sk_freePv(i8* %74) #7
  br label %75

75:                                               ; preds = %73, %68
  %76 = add nuw nsw i64 %57, 1
  %77 = load i64, i64* %38, align 8
  %78 = lshr i64 %77, 1
  %79 = and i64 %78, 2147483647
  %80 = icmp ult i64 %76, %79
  br i1 %80, label %56, label %52

81:                                               ; preds = %52
  %82 = bitcast %class.SkTArray* %41 to i8**
  %83 = load i8*, i8** %82, align 8
  call void @_Z7sk_freePv(i8* %83) #7
  br label %84

84:                                               ; preds = %52, %81
  %85 = load %class.SkShader*, %class.SkShader** %36, align 8
  %86 = icmp eq %class.SkShader* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %class.SkShader, %class.SkShader* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkShader* %85 to %class.SkRefCntBase*
  %93 = bitcast %class.SkShader* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #7
  br label %97

97:                                               ; preds = %91, %87, %84
  %98 = load %class.SkPath*, %class.SkPath** %35, align 8
  %99 = icmp eq %class.SkPath* %98, null
  br i1 %99, label %111, label %100

100:                                              ; preds = %97
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %98) #7
  store %class.SkPath* null, %class.SkPath** %35, align 8
  br label %111

101:                                              ; preds = %101, %45
  %102 = phi i64 [ 0, %45 ], [ %106, %101 ]
  %103 = load %class.GrProxyProvider*, %class.GrProxyProvider** %37, align 8
  %104 = load %class.GrUniqueKey*, %class.GrUniqueKey** %46, align 8
  %105 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %104, i64 %102
  call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %103, %class.GrUniqueKey* dereferenceable(56) %105, %class.GrTextureProxy* null, i1 zeroext true) #7
  %106 = add nuw nsw i64 %102, 1
  %107 = load i64, i64* %38, align 8
  %108 = lshr i64 %107, 1
  %109 = and i64 %108, 2147483647
  %110 = icmp ult i64 %106, %109
  br i1 %110, label %101, label %47

111:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %31) #7
  br label %112

112:                                              ; preds = %18, %5, %111, %24
  %113 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %6, i64 0, i32 12
  %114 = load i64, i64* %14, align 8
  %115 = and i64 %114, 4294967294
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %113, i64 0, i32 0
  br label %173

119:                                              ; preds = %173
  %120 = and i64 %179, 4294967294
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %113, i64 0, i32 0
  br label %128

124:                                              ; preds = %147, %112, %119
  %125 = phi i64 [ %179, %119 ], [ %114, %112 ], [ %149, %147 ]
  %126 = and i64 %125, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %156, label %153

128:                                              ; preds = %147, %122
  %129 = phi i64 [ 0, %122 ], [ %148, %147 ]
  %130 = load %class.GrUniqueKey*, %class.GrUniqueKey** %123, align 8
  %131 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 1, i32 0
  %132 = load %class.SkData*, %class.SkData** %131, align 8
  %133 = icmp eq %class.SkData* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %class.SkData, %class.SkData* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw add i32* %135, i32 -1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %132) #7
  %139 = bitcast %class.SkData* %132 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %139) #7
  br label %140

140:                                              ; preds = %138, %134, %128
  %141 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 0, i32 0, i32 0
  %142 = load i32*, i32** %141, align 8
  %143 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %130, i64 %129, i32 0, i32 0, i32 1, i32 0, i64 0
  %144 = icmp eq i32* %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %140
  %146 = bitcast i32* %142 to i8*
  call void @_Z7sk_freePv(i8* %146) #7
  br label %147

147:                                              ; preds = %145, %140
  %148 = add nuw nsw i64 %129, 1
  %149 = load i64, i64* %14, align 8
  %150 = lshr i64 %149, 1
  %151 = and i64 %150, 2147483647
  %152 = icmp ult i64 %148, %151
  br i1 %152, label %128, label %124

153:                                              ; preds = %124
  %154 = bitcast %class.SkTArray* %113 to i8**
  %155 = load i8*, i8** %154, align 8
  call void @_Z7sk_freePv(i8* %155) #7
  br label %156

156:                                              ; preds = %124, %153
  %157 = load %class.SkShader*, %class.SkShader** %12, align 8
  %158 = icmp eq %class.SkShader* %157, null
  br i1 %158, label %169, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %class.SkShader, %class.SkShader* %157, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = bitcast %class.SkShader* %157 to %class.SkRefCntBase*
  %165 = bitcast %class.SkShader* %157 to void (%class.SkRefCntBase*)***
  %166 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, i64 2
  %168 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, align 8
  call void %168(%class.SkRefCntBase* nonnull %164) #7
  br label %169

169:                                              ; preds = %163, %159, %156
  %170 = load %class.SkPath*, %class.SkPath** %11, align 8
  %171 = icmp eq %class.SkPath* %170, null
  br i1 %171, label %183, label %172

172:                                              ; preds = %169
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %170) #7
  store %class.SkPath* null, %class.SkPath** %11, align 8
  br label %183

173:                                              ; preds = %173, %117
  %174 = phi i64 [ 0, %117 ], [ %178, %173 ]
  %175 = load %class.GrProxyProvider*, %class.GrProxyProvider** %13, align 8
  %176 = load %class.GrUniqueKey*, %class.GrUniqueKey** %118, align 8
  %177 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %176, i64 %174
  call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %175, %class.GrUniqueKey* dereferenceable(56) %177, %class.GrTextureProxy* null, i1 zeroext true) #7
  %178 = add nuw nsw i64 %174, 1
  %179 = load i64, i64* %14, align 8
  %180 = lshr i64 %179, 1
  %181 = and i64 %180, 2147483647
  %182 = icmp ult i64 %178, %181
  br i1 %182, label %173, label %119

183:                                              ; preds = %169, %172
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE(%class.SkClipStack*, %class.sk_sp.13* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkClipStack::Element", align 8
  %4 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %4) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 getelementptr inbounds ({ %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }, { %class.SkTLazy, %class.SkRRect, [4 x i8], %class.sk_sp.13, i32, i32, i32, i8, [3 x i8], i32, %struct.SkRect, i8, [3 x i8], i32, [4 x i8], %class.GrProxyProvider*, %class.SkTArray }* @__const._ZN11SkClipStack10clipShaderE5sk_spI8SkShaderE.element, i64 0, i32 0, i32 0, i64 0), i64 136, i1 false)
  %5 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp.13* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkShader* null, %class.SkShader** %7, align 8
  %10 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 2
  %12 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 11
  %13 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 12, i32 1
  %14 = bitcast %class.SkPath** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 60, i1 false) #7
  %15 = bitcast %class.GrProxyProvider** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #7
  store i64 1, i64* %13, align 8
  %16 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 5
  store i32 4, i32* %16, align 8
  %17 = bitcast %class.sk_sp.13* %11 to i64*
  store i64 %9, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 3
  store i32 %6, i32* %18, align 8
  %19 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 4
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 6
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 7
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 8
  %23 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 10
  store i32 0, i32* %23, align 8
  %24 = bitcast %struct.SkRect* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 17, i1 false) #7
  call void @_ZN11SkClipStack11pushElementERKNS_7ElementE(%class.SkClipStack* %0, %"class.SkClipStack::Element"* nonnull dereferenceable(160) %3)
  %25 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 12
  %26 = load i64, i64* %13, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %25, i64 0, i32 0
  br label %86

31:                                               ; preds = %86
  %32 = and i64 %92, 4294967294
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %25, i64 0, i32 0
  br label %40

36:                                               ; preds = %59, %2, %31
  %37 = phi i64 [ %92, %31 ], [ %26, %2 ], [ %61, %59 ]
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %68, label %65

40:                                               ; preds = %59, %34
  %41 = phi i64 [ 0, %34 ], [ %60, %59 ]
  %42 = load %class.GrUniqueKey*, %class.GrUniqueKey** %35, align 8
  %43 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %42, i64 %41, i32 1, i32 0
  %44 = load %class.SkData*, %class.SkData** %43, align 8
  %45 = icmp eq %class.SkData* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %class.SkData, %class.SkData* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %44) #7
  %51 = bitcast %class.SkData* %44 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %51) #7
  br label %52

52:                                               ; preds = %50, %46, %40
  %53 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %42, i64 %41, i32 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %42, i64 %41, i32 0, i32 0, i32 1, i32 0, i64 0
  %56 = icmp eq i32* %54, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = bitcast i32* %54 to i8*
  call void @_Z7sk_freePv(i8* %58) #7
  br label %59

59:                                               ; preds = %57, %52
  %60 = add nuw nsw i64 %41, 1
  %61 = load i64, i64* %13, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = icmp ult i64 %60, %63
  br i1 %64, label %40, label %36

65:                                               ; preds = %36
  %66 = bitcast %class.SkTArray* %25 to i8**
  %67 = load i8*, i8** %66, align 8
  call void @_Z7sk_freePv(i8* %67) #7
  br label %68

68:                                               ; preds = %36, %65
  %69 = getelementptr inbounds %"class.SkClipStack::Element", %"class.SkClipStack::Element"* %3, i64 0, i32 2, i32 0
  %70 = load %class.SkShader*, %class.SkShader** %69, align 8
  %71 = icmp eq %class.SkShader* %70, null
  br i1 %71, label %82, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.SkShader, %class.SkShader* %70, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %class.SkShader* %70 to %class.SkRefCntBase*
  %78 = bitcast %class.SkShader* %70 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8
  call void %81(%class.SkRefCntBase* nonnull %77) #7
  br label %82

82:                                               ; preds = %76, %72, %68
  %83 = load %class.SkPath*, %class.SkPath** %10, align 8
  %84 = icmp eq %class.SkPath* %83, null
  br i1 %84, label %96, label %85

85:                                               ; preds = %82
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %83) #7
  store %class.SkPath* null, %class.SkPath** %10, align 8
  br label %96

86:                                               ; preds = %86, %29
  %87 = phi i64 [ 0, %29 ], [ %91, %86 ]
  %88 = load %class.GrProxyProvider*, %class.GrProxyProvider** %12, align 8
  %89 = load %class.GrUniqueKey*, %class.GrUniqueKey** %30, align 8
  %90 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %89, i64 %87
  call void @_ZN15GrProxyProvider23processInvalidUniqueKeyERK11GrUniqueKeyP14GrTextureProxyNS_21InvalidateGPUResourceE(%class.GrProxyProvider* %88, %class.GrUniqueKey* dereferenceable(56) %90, %class.GrTextureProxy* null, i1 zeroext true) #7
  %91 = add nuw nsw i64 %87, 1
  %92 = load i64, i64* %13, align 8
  %93 = lshr i64 %92, 1
  %94 = and i64 %93, 2147483647
  %95 = icmp ult i64 %91, %94
  br i1 %95, label %86, label %31

96:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack9clipEmptyEv(%class.SkClipStack*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  %3 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %50, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %4, i64 96
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 88
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %13
  br i1 %17, label %18, label %50

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %4, i64 92
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = or i32 %21, 4
  %23 = icmp eq i32 %22, 5
  br i1 %23, label %24, label %50

24:                                               ; preds = %6, %18
  store i32 0, i32* %8, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 104
  %26 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 52, i1 false) #7
  %27 = getelementptr inbounds i8, i8* %4, i64 16
  %28 = bitcast i8* %27 to %class.SkPath**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 21, i1 false) #7
  %29 = load %class.SkPath*, %class.SkPath** %28, align 8
  %30 = icmp eq %class.SkPath* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %29) #7
  store %class.SkPath* null, %class.SkPath** %28, align 8
  br label %32

32:                                               ; preds = %31, %24
  %33 = getelementptr inbounds i8, i8* %4, i64 80
  %34 = bitcast i8* %33 to %class.SkShader**
  %35 = load %class.SkShader*, %class.SkShader** %34, align 8
  store %class.SkShader* null, %class.SkShader** %34, align 8
  %36 = icmp eq %class.SkShader* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.SkShader, %class.SkShader* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkShader* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkShader* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  tail call void %46(%class.SkRefCntBase* nonnull %42) #7
  br label %47

47:                                               ; preds = %32, %37, %41
  %48 = getelementptr inbounds i8, i8* %4, i64 128
  %49 = bitcast i8* %48 to i32*
  store i32 1, i32* %49, align 8
  br label %50

50:                                               ; preds = %11, %1, %47, %18
  %51 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %2) #7
  %52 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds i8, i8* %51, i64 16
  %55 = getelementptr inbounds i8, i8* %51, i64 24
  %56 = getelementptr inbounds i8, i8* %51, i64 80
  %57 = bitcast i8* %56 to %class.SkShader**
  %58 = getelementptr inbounds i8, i8* %51, i64 136
  %59 = getelementptr inbounds i8, i8* %51, i64 152
  %60 = bitcast i8* %59 to i64*
  %61 = bitcast i8* %54 to i64*
  store i64 0, i64* %61, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #7
  store i64 1, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %51, i64 88
  %63 = bitcast i8* %62 to i32*
  store i32 %53, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %51, i64 92
  %65 = bitcast i8* %64 to i32*
  store i32 5, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %51, i64 100
  store i8 0, i8* %66, align 4
  %67 = getelementptr inbounds i8, i8* %51, i64 104
  %68 = getelementptr inbounds i8, i8* %51, i64 128
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds i8, i8* %51, i64 96
  %71 = bitcast i8* %70 to i32*
  store i32 0, i32* %71, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 0, i64 52, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 21, i1 false) #7
  store %class.SkShader* null, %class.SkShader** %57, align 8
  store i32 1, i32* %69, align 8
  %72 = load i8*, i8** %3, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 128
  %74 = bitcast i8* %73 to i32*
  store i32 1, i32* %74, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack4IterC2Ev(%"class.SkClipStack::Iter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 0
  store %class.SkClipStack* null, %class.SkClipStack** %2, align 8
  %3 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 1
  tail call void @_ZN7SkDeque4IterC1Ev(%"class.SkDeque::Iter"* %3) #7
  ret void
}

declare void @_ZN7SkDeque4IterC1Ev(%"class.SkDeque::Iter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack4IterC2ERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"*, %class.SkClipStack* dereferenceable(80), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 0
  store %class.SkClipStack* %1, %class.SkClipStack** %4, align 8
  %5 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 1
  tail call void @_ZN7SkDeque4IterC1Ev(%"class.SkDeque::Iter"* %5) #7
  store %class.SkClipStack* %1, %class.SkClipStack** %4, align 8
  %6 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %1, i64 0, i32 0
  tail call void @_ZN7SkDeque4Iter5resetERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* %5, %class.SkDeque* dereferenceable(56) %6, i32 %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkClipStack4Iter5resetERKS_NS0_9IterStartE(%"class.SkClipStack::Iter"*, %class.SkClipStack* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 0
  store %class.SkClipStack* %1, %class.SkClipStack** %4, align 8
  %5 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %1, i64 0, i32 0
  tail call void @_ZN7SkDeque4Iter5resetERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* %5, %class.SkDeque* dereferenceable(56) %6, i32 %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter4nextEv(%"class.SkClipStack::Iter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 1
  %3 = tail call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* %2) #7
  %4 = bitcast i8* %3 to %"class.SkClipStack::Element"*
  ret %"class.SkClipStack::Element"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkClipStack::Element"* @_ZN11SkClipStack4Iter13skipToTopmostE8SkClipOp(%"class.SkClipStack::Iter"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 0
  %4 = load %class.SkClipStack*, %class.SkClipStack** %3, align 8
  %5 = icmp eq %class.SkClipStack* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkClipStack::Iter", %"class.SkClipStack::Iter"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %4, i64 0, i32 0
  tail call void @_ZN7SkDeque4Iter5resetERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* %7, %class.SkDeque* dereferenceable(56) %8, i32 1) #7
  %9 = tail call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* %7) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %6, %20
  %12 = phi i8* [ %21, %20 ], [ %9, %6 ]
  %13 = getelementptr inbounds i8, i8* %12, i64 92
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, %1
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = tail call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* %7) #7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %26

20:                                               ; preds = %11
  %21 = tail call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* %7) #7
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %11

23:                                               ; preds = %20, %6, %17
  %24 = load %class.SkClipStack*, %class.SkClipStack** %3, align 8
  %25 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %24, i64 0, i32 0
  tail call void @_ZN7SkDeque4Iter5resetERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* %7, %class.SkDeque* dereferenceable(56) %25, i32 0) #7
  br label %26

26:                                               ; preds = %23, %17
  %27 = tail call i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* %7) #7
  %28 = bitcast i8* %27 to %"class.SkClipStack::Element"*
  br label %29

29:                                               ; preds = %2, %26
  %30 = phi %"class.SkClipStack::Element"* [ %28, %26 ], [ null, %2 ]
  ret %"class.SkClipStack::Element"* %30
}

declare void @_ZN7SkDeque4Iter5resetERKS_NS0_9IterStartE(%"class.SkDeque::Iter"*, %class.SkDeque* dereferenceable(56), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11SkClipStack21getConservativeBoundsEiiiiP6SkRectPb(%class.SkClipStack* nocapture readonly, i32, i32, i32, i32, %struct.SkRect*, i8*) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.SkRect, align 4
  %9 = sitofp i32 %3 to float
  %10 = sitofp i32 %4 to float
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 0
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 1
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 2
  store float %9, float* %13, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 3
  store float %10, float* %14, align 4
  %15 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 0
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 1
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 2
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 3
  %20 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %21 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -1, i64 16, i1 false)
  %22 = load i8*, i8** %20, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 16, i1 false) #7
  %25 = icmp eq i8* %6, null
  br i1 %25, label %52, label %26

26:                                               ; preds = %24
  store i8 0, i8* %6, align 1
  br label %52

27:                                               ; preds = %7
  %28 = getelementptr inbounds i8, i8* %22, i64 108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %28, i64 16, i1 false) #7
  %29 = getelementptr inbounds i8, i8* %22, i64 104
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i8* %6, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8, i8* %22, i64 124
  %35 = load i8, i8* %34, align 4, !range !2
  store i8 %35, i8* %6, align 1
  br label %36

36:                                               ; preds = %27, %33
  %37 = icmp eq i32 %31, 1
  br i1 %37, label %52, label %38

38:                                               ; preds = %36
  %39 = sitofp i32 %1 to float
  %40 = sitofp i32 %2 to float
  %41 = load float, float* %16, align 4
  %42 = fadd float %41, %39
  store float %42, float* %16, align 4
  %43 = load float, float* %17, align 4
  %44 = fadd float %43, %40
  store float %44, float* %17, align 4
  %45 = load float, float* %18, align 4
  %46 = fadd float %45, %39
  store float %46, float* %18, align 4
  %47 = load float, float* %19, align 4
  %48 = fadd float %47, %40
  store float %48, float* %19, align 4
  %49 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* %5, %struct.SkRect* nonnull dereferenceable(16) %8) #7
  br i1 %49, label %52, label %50

50:                                               ; preds = %38
  %51 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 16, i1 false) #7
  br label %52

52:                                               ; preds = %26, %24, %38, %50, %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkClipStack7isRRectERK6SkRectP7SkRRectPb(%class.SkClipStack*, %struct.SkRect* dereferenceable(16), %class.SkRRect*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkRect, align 4
  %6 = alloca %"class.SkDeque::Iter", align 8
  %7 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %129, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds i8, i8* %9, i64 124
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %9, i64 104
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %31

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8, i8* %9, i64 108
  %22 = bitcast i8* %21 to %struct.SkRect*
  %23 = tail call zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect* %2, %struct.SkRect* dereferenceable(16) %22) #7
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %2, i64 0, i32 1, i64 0
  %26 = bitcast %struct.SkPoint* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 32, i1 false) #7
  %27 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %2, i64 0, i32 2
  store i32 1, i32* %27, align 4
  br label %28

28:                                               ; preds = %20, %24
  %29 = getelementptr inbounds i8, i8* %9, i64 100
  %30 = load i8, i8* %29, align 4, !range !2
  store i8 %30, i8* %3, align 1
  br label %129

31:                                               ; preds = %11, %15
  %32 = getelementptr inbounds i8, i8* %9, i64 96
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, -1
  %36 = icmp ult i32 %35, 2
  br i1 %36, label %37, label %129

37:                                               ; preds = %31
  %38 = getelementptr inbounds i8, i8* %9, i64 92
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  switch i32 %40, label %129 [
    i32 5, label %41
    i32 1, label %46
  ]

41:                                               ; preds = %37
  %42 = getelementptr inbounds i8, i8* %9, i64 24
  %43 = bitcast %class.SkRRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %42, i64 52, i1 false)
  %44 = getelementptr inbounds i8, i8* %9, i64 100
  %45 = load i8, i8* %44, align 4, !range !2
  store i8 %45, i8* %3, align 1
  br label %129

46:                                               ; preds = %37
  %47 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #7
  %48 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 0
  %49 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 1
  %50 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 2
  %51 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 3
  %52 = getelementptr inbounds i8, i8* %9, i64 24
  %53 = bitcast i8* %52 to %struct.SkRect*
  %54 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %54, i8 -1, i64 16, i1 false)
  %55 = call zeroext i1 @_ZN6SkRect9intersectERKS_S1_(%struct.SkRect* nonnull %5, %struct.SkRect* dereferenceable(16) %1, %struct.SkRect* dereferenceable(16) %53) #7
  br i1 %55, label %56, label %127

56:                                               ; preds = %46
  %57 = getelementptr inbounds %class.SkClipStack, %class.SkClipStack* %0, i64 0, i32 0, i32 6
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, 17
  br i1 %59, label %127, label %60

60:                                               ; preds = %56
  %61 = icmp sgt i32 %58, 1
  br i1 %61, label %62, label %123

62:                                               ; preds = %60
  %63 = bitcast %"class.SkDeque::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #7
  %64 = bitcast %"class.SkDeque::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  call void @_ZN7SkDeque4IterC1ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* nonnull %6, %class.SkDeque* dereferenceable(56) %7, i32 1) #7
  %65 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* nonnull %6) #7
  br label %66

66:                                               ; preds = %118, %62
  %67 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* nonnull %6) #7
  %68 = icmp eq i8* %67, null
  br i1 %68, label %121, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds i8, i8* %67, i64 92
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 4
  switch i32 %72, label %122 [
    i32 1, label %73
    i32 5, label %73
  ]

73:                                               ; preds = %69, %69
  %74 = getelementptr inbounds i8, i8* %67, i64 96
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 8
  switch i32 %76, label %122 [
    i32 1, label %77
    i32 2, label %103
    i32 3, label %107
  ]

77:                                               ; preds = %73
  %78 = load float, float* %48, align 4
  %79 = load float, float* %50, align 4
  %80 = fcmp olt float %78, %79
  br i1 %80, label %81, label %122

81:                                               ; preds = %77
  %82 = load float, float* %49, align 4
  %83 = load float, float* %51, align 4
  %84 = fcmp uge float %82, %83
  br i1 %84, label %122, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds i8, i8* %67, i64 24
  %87 = bitcast i8* %86 to float*
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds i8, i8* %67, i64 32
  %90 = bitcast i8* %89 to float*
  %91 = load float, float* %90, align 4
  %92 = fcmp olt float %88, %91
  br i1 %92, label %93, label %122

93:                                               ; preds = %85
  %94 = getelementptr inbounds i8, i8* %67, i64 28
  %95 = bitcast i8* %94 to float*
  %96 = load float, float* %95, align 4
  %97 = getelementptr inbounds i8, i8* %67, i64 36
  %98 = bitcast i8* %97 to float*
  %99 = load float, float* %98, align 4
  %100 = fcmp uge float %96, %99
  %101 = fcmp ugt float %88, %78
  %102 = or i1 %101, %100
  br i1 %102, label %122, label %112

103:                                              ; preds = %73
  %104 = getelementptr inbounds i8, i8* %67, i64 24
  %105 = bitcast i8* %104 to %class.SkRRect*
  %106 = call zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect* %105, %struct.SkRect* nonnull dereferenceable(16) %5) #7
  br i1 %106, label %118, label %122

107:                                              ; preds = %73
  %108 = getelementptr inbounds i8, i8* %67, i64 16
  %109 = bitcast i8* %108 to %class.SkPath**
  %110 = load %class.SkPath*, %class.SkPath** %109, align 8
  %111 = call zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath* %110, %struct.SkRect* nonnull dereferenceable(16) %5) #7
  br i1 %111, label %118, label %122

112:                                              ; preds = %93
  %113 = fcmp ole float %96, %82
  %114 = fcmp oge float %91, %79
  %115 = fcmp oge float %99, %83
  %116 = and i1 %114, %113
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %103, %107, %112
  %119 = load i32, i32* %71, align 4
  %120 = icmp eq i32 %119, 5
  br i1 %120, label %121, label %66

121:                                              ; preds = %66, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #7
  br label %123

122:                                              ; preds = %69, %77, %81, %85, %93, %73, %112, %107, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #7
  br label %127

123:                                              ; preds = %121, %60
  %124 = bitcast %class.SkRRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %52, i64 52, i1 false)
  %125 = getelementptr inbounds i8, i8* %9, i64 100
  %126 = load i8, i8* %125, align 4, !range !2
  store i8 %126, i8* %3, align 1
  br label %127

127:                                              ; preds = %122, %123, %56, %46
  %128 = phi i1 [ false, %46 ], [ true, %123 ], [ false, %122 ], [ false, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #7
  br label %129

129:                                              ; preds = %31, %37, %4, %127, %41, %28
  %130 = phi i1 [ true, %28 ], [ true, %41 ], [ %128, %127 ], [ false, %4 ], [ false, %31 ], [ false, %37 ]
  ret i1 %130
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN7SkDeque4IterC2ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"*, %class.SkDeque* dereferenceable(56), i32) unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
