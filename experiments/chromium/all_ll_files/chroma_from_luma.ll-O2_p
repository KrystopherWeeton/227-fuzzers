; ModuleID = '../../third_party/libjxl/src/lib/jxl/chroma_from_luma.cc'
source_filename = "../../third_party/libjxl/src/lib/jxl/chroma_from_luma.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.jxl::ColorCorrelationMap" = type { %"class.jxl::Plane", %"class.jxl::Plane", [4 x float], i32, float, float, float, i32, i32 }
%"class.jxl::Plane" = type { %"struct.jxl::PlaneBase" }
%"struct.jxl::PlaneBase" = type { i32, i32, i32, i32, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

@_ZN3jxl19ColorCorrelationMapC1Emmb = hidden unnamed_addr alias void (%"struct.jxl::ColorCorrelationMap"*, i64, i64, i1), void (%"struct.jxl::ColorCorrelationMap"*, i64, i64, i1)* @_ZN3jxl19ColorCorrelationMapC2Emmb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl19ColorCorrelationMapC2Emmb(%"struct.jxl::ColorCorrelationMap"*, i64, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = add i64 %1, 63
  %6 = lshr i64 %5, 6
  %7 = add i64 %2, 63
  %8 = lshr i64 %7, 6
  %9 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %9, i64 %6, i64 %8, i64 1) #3
  %10 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %10, i64 0, i32 0
  tail call void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"* %11, i64 %6, i64 %8, i64 1) #3
  %12 = getelementptr %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 2, i64 0
  %13 = bitcast float* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false)
  %14 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 3
  store i32 84, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 4
  store float 0x3F88618620000000, float* %15, align 4
  %16 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 5
  store float 0.000000e+00, float* %16, align 8
  %17 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 6
  store float 1.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 7
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 8
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %52, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 0, i32 0, i32 4
  %30 = load i8*, i8** %28, align 8
  %31 = ptrtoint i8* %30 to i64
  %32 = and i64 %31, 63
  %33 = icmp eq i64 %32, 0
  tail call void @llvm.assume(i1 %33) #3
  %34 = zext i32 %21 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %30, i8 0, i64 %34, i1 false) #3
  %35 = load i32, i32* %24, align 4
  %36 = icmp ugt i32 %35, 1
  br i1 %36, label %37, label %52

37:                                               ; preds = %27, %37
  %38 = phi i64 [ %48, %37 ], [ 1, %27 ]
  %39 = load i32, i32* %20, align 8
  %40 = load i8*, i8** %28, align 8
  %41 = load i64, i64* %29, align 8
  %42 = mul i64 %41, %38
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = ptrtoint i8* %43 to i64
  %45 = and i64 %44, 63
  %46 = icmp eq i64 %45, 0
  tail call void @llvm.assume(i1 %46) #3
  %47 = zext i32 %39 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %43, i8 0, i64 %47, i1 false) #3
  %48 = add nuw nsw i64 %38, 1
  %49 = load i32, i32* %24, align 4
  %50 = zext i32 %49 to i64
  %51 = icmp ult i64 %48, %50
  br i1 %51, label %37, label %52

52:                                               ; preds = %37, %27, %4, %23
  %53 = getelementptr inbounds %"class.jxl::Plane", %"class.jxl::Plane"* %10, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %85, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 1, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %85, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 1, i32 0, i32 5, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 1, i32 0, i32 4
  %63 = load i8*, i8** %61, align 8
  %64 = ptrtoint i8* %63 to i64
  %65 = and i64 %64, 63
  %66 = icmp eq i64 %65, 0
  tail call void @llvm.assume(i1 %66) #3
  %67 = zext i32 %54 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %63, i8 0, i64 %67, i1 false) #3
  %68 = load i32, i32* %57, align 4
  %69 = icmp ugt i32 %68, 1
  br i1 %69, label %70, label %85

70:                                               ; preds = %60, %70
  %71 = phi i64 [ %81, %70 ], [ 1, %60 ]
  %72 = load i32, i32* %53, align 8
  %73 = load i8*, i8** %61, align 8
  %74 = load i64, i64* %62, align 8
  %75 = mul i64 %74, %71
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  %77 = ptrtoint i8* %76 to i64
  %78 = and i64 %77, 63
  %79 = icmp eq i64 %78, 0
  tail call void @llvm.assume(i1 %79) #3
  %80 = zext i32 %72 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 64 %76, i8 0, i64 %80, i1 false) #3
  %81 = add nuw nsw i64 %71, 1
  %82 = load i32, i32* %57, align 4
  %83 = zext i32 %82 to i64
  %84 = icmp ult i64 %81, %83
  br i1 %84, label %70, label %85

85:                                               ; preds = %70, %60, %52, %56
  br i1 %3, label %86, label %88

86:                                               ; preds = %85
  %87 = load float, float* %17, align 4
  br label %89

88:                                               ; preds = %85
  store float 0.000000e+00, float* %17, align 4
  br label %89

89:                                               ; preds = %86, %88
  %90 = phi float [ %87, %86 ], [ 0.000000e+00, %88 ]
  %91 = load i32, i32* %18, align 8
  %92 = load float, float* %16, align 8
  %93 = sitofp i32 %91 to float
  %94 = load float, float* %15, align 4
  %95 = fmul float %94, %93
  %96 = fadd float %92, %95
  store float %96, float* %12, align 8
  %97 = load i32, i32* %19, align 4
  %98 = sitofp i32 %97 to float
  %99 = fmul float %94, %98
  %100 = fadd float %90, %99
  %101 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %0, i64 0, i32 2, i64 2
  store float %100, float* %101, align 8
  ret void
}

declare void @_ZN3jxl9PlaneBaseC2Emmm(%"struct.jxl::PlaneBase"*, i64, i64, i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
