; ModuleID = '../../third_party/blink/renderer/modules/webdatabase/quota_tracker.cc'
source_filename = "../../third_party/blink/renderer/modules/webdatabase/quota_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::QuotaTracker>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::QuotaTracker>::InstanceStorage" = type { %"class.blink::QuotaTracker"* }
%"class.blink::QuotaTracker" = type { %"class.WTF::HashMap", %"class.WTF::Mutex" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.WTF::HashMap.1" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::HashMap.1" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"struct.WTF::KeyValuePair.5"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.5" = type { %"class.WTF::String", i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.8 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.8 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::WebDatabaseHost" = type { %"class.mojo::PendingRemote", %"class.mojo::SharedRemote", %class.scoped_refptr.10 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::SharedRemote" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type opaque
%class.scoped_refptr.10 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E4findERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E6insertINS_17HashMapTranslatorISE_S4_S8_EES1_S9_EENS_18HashTableAddResultISF_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E8RehashToEPSA_jSG_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RmEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

@_ZZN5blink12QuotaTracker8InstanceEvE9s_tracker = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12QuotaTracker8InstanceEvE9s_tracker = internal global i64 0, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_7HashMapIS2_mNS_10StringHashENS_10HashTraitsIS2_EENS5_ImEENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [225 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::HashMap<WTF::String, unsigned long, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<unsigned long>, WTF::PartitionAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEmEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, unsigned long>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.blink::QuotaTracker"* @_ZN5blink12QuotaTracker8InstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12QuotaTracker8InstanceEvE9s_tracker to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12QuotaTracker8InstanceEvE9s_tracker) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 64) #8
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  %9 = bitcast i8* %8 to %"class.WTF::MutexBase"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 64, i1 false) #8
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %9, i1 zeroext false) #8
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12QuotaTracker8InstanceEvE9s_tracker to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12QuotaTracker8InstanceEvE9s_tracker) #8
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load %"class.blink::QuotaTracker"*, %"class.blink::QuotaTracker"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12QuotaTracker8InstanceEvE9s_tracker, i64 0, i32 0, i32 0), align 8
  ret %"class.blink::QuotaTracker"* %11
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12QuotaTracker40GetDatabaseSizeAndSpaceAvailableToOriginEPKNS_14SecurityOriginERKN3WTF6StringEPmS8_(%"class.blink::QuotaTracker"*, %"class.blink::SecurityOrigin"*, %"class.WTF::String"* dereferenceable(8), i64* nocapture, i64* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::QuotaTracker", %"class.blink::QuotaTracker"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %7) #8
  %8 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin11ToRawStringEv(%"class.blink::SecurityOrigin"* %1) #8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::QuotaTracker", %"class.blink::QuotaTracker"* %0, i64 0, i32 0, i32 0
  %12 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E4findERKS1_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %13 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %12, 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #8
  br label %29

29:                                               ; preds = %5, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 1, i32 0
  %31 = call %"struct.WTF::KeyValuePair.5"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.2"* %30, %"class.WTF::String"* dereferenceable(8) %2) #8
  %32 = icmp eq %"struct.WTF::KeyValuePair.5"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %31, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %29, %33
  %37 = phi i64 [ %35, %33 ], [ 0, %29 ]
  store i64 %37, i64* %3, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %7) #8
  %38 = call dereferenceable(24) %"class.blink::WebDatabaseHost"* @_ZN5blink15WebDatabaseHost11GetInstanceEv() #8
  %39 = call i64 @_ZN5blink15WebDatabaseHost26GetSpaceAvailableForOriginERKNS_14SecurityOriginE(%"class.blink::WebDatabaseHost"* %38, %"class.blink::SecurityOrigin"* dereferenceable(96) %1) #8
  store i64 %39, i64* %4, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin11ToRawStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::WebDatabaseHost"* @_ZN5blink15WebDatabaseHost11GetInstanceEv() local_unnamed_addr #3

declare i64 @_ZN5blink15WebDatabaseHost26GetSpaceAvailableForOriginERKNS_14SecurityOriginE(%"class.blink::WebDatabaseHost"*, %"class.blink::SecurityOrigin"* dereferenceable(96)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12QuotaTracker18UpdateDatabaseSizeEPKNS_14SecurityOriginERKN3WTF6StringEm(%"class.blink::QuotaTracker"*, %"class.blink::SecurityOrigin"*, %"class.WTF::String"* dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::HashMap.1", align 8
  store i64 %3, i64* %5, align 8
  %8 = getelementptr inbounds %"class.blink::QuotaTracker", %"class.blink::QuotaTracker"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #8
  %9 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin11ToRawStringEv(%"class.blink::SecurityOrigin"* %1) #8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.WTF::HashMap.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 20, i1 false) #8
  %13 = getelementptr inbounds %"class.blink::QuotaTracker", %"class.blink::QuotaTracker"* %0, i64 0, i32 0, i32 0
  %14 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E6insertINS_17HashMapTranslatorISE_S4_S8_EES1_S9_EENS_18HashTableAddResultISF_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %13, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::HashMap.1"* nonnull dereferenceable(24) %7) #8
  %15 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %7, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair.5"* %17, null
  br i1 %18, label %51, label %19, !prof !3

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %7, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %49, label %23

23:                                               ; preds = %19
  %24 = zext i32 %21 to i64
  br label %25

25:                                               ; preds = %46, %23
  %26 = phi i64 [ 0, %23 ], [ %47, %46 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %17, i64 %26
  %28 = bitcast %"struct.WTF::KeyValuePair.5"* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast i8* %29 to %"class.WTF::StringImpl"*
  %31 = ptrtoint i8* %29 to i64
  switch i64 %31, label %32 [
    i64 -1, label %46
    i64 0, label %46
  ]

32:                                               ; preds = %25
  %33 = getelementptr inbounds i8, i8* %29, i64 8
  %34 = bitcast i8* %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = bitcast i8* %29 to i32*
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %32
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %32
  %43 = phi i32 [ %41, %40 ], [ %39, %32 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #8
  br label %46

46:                                               ; preds = %45, %42, %25, %25
  %47 = add nuw nsw i64 %26, 1
  %48 = icmp eq i64 %47, %24
  br i1 %48, label %49, label %25

49:                                               ; preds = %46, %19
  %50 = bitcast %"struct.WTF::KeyValuePair.5"* %17 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #8
  store %"struct.WTF::KeyValuePair.5"* null, %"struct.WTF::KeyValuePair.5"** %16, align 8
  br label %51

51:                                               ; preds = %4, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %51, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 0
  %69 = call { %"struct.WTF::KeyValuePair.5"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RmEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.2"* %68, %"class.WTF::String"* dereferenceable(8) %2, i64* nonnull dereferenceable(8) %5) #8
  %70 = extractvalue { %"struct.WTF::KeyValuePair.5"*, i8 } %69, 1
  %71 = and i8 %70, 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %67
  %74 = extractvalue { %"struct.WTF::KeyValuePair.5"*, i8 } %69, 0
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %74, i64 0, i32 1
  %76 = load i64, i64* %5, align 8
  store i64 %76, i64* %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #8
  ret void
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #8
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #8
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.5"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.2"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.5"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #8
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.5"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.5"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #8
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.5"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.5"* %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E6insertINS_17HashMapTranslatorISE_S4_S8_EES1_S9_EENS_18HashTableAddResultISF_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::HashMap.1"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %70, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %143, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %24, %68
  %71 = phi %"struct.WTF::KeyValuePair"* [ %64, %68 ], [ %28, %24 ]
  %72 = bitcast %"struct.WTF::KeyValuePair"* %71 to i64*
  br label %86

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 2
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 3
  %78 = bitcast %"class.WTF::HashMap.1"* %74 to i64*
  %79 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  store i64 0, i64* %79, align 8
  store atomic i64 0, i64* %78 monotonic, align 8
  store i32 0, i32* %75, align 4
  store i32 0, i32* %76, align 4
  store i32 0, i32* %77, align 8
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %70, %73
  %87 = phi i64* [ %72, %70 ], [ %79, %73 ]
  %88 = phi %"struct.WTF::KeyValuePair"* [ %71, %70 ], [ %59, %73 ]
  %89 = bitcast %"class.WTF::String"* %1 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  store i64 %90, i64* %87, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #8
  br label %107

107:                                              ; preds = %86, %103, %106
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1
  %109 = bitcast %"class.WTF::HashMap.1"* %2 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.WTF::HashMap.1"* %108 to i64*
  %112 = load i64, i64* %111, align 8
  store atomic i64 %112, i64* %109 monotonic, align 8
  store atomic i64 %110, i64* %111 monotonic, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %2, i64 0, i32 0, i32 1
  %115 = load i32, i32* %113, align 4
  %116 = load i32, i32* %114, align 4
  store i32 %116, i32* %113, align 4
  store i32 %115, i32* %114, align 4
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 0, i32 2
  %118 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %2, i64 0, i32 0, i32 2
  %119 = load i32, i32* %117, align 4
  %120 = load i32, i32* %118, align 4
  store i32 %120, i32* %117, align 4
  store i32 %119, i32* %118, align 4
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1, i32 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, 2147483647
  %124 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %2, i64 0, i32 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 2147483647
  %127 = and i32 %122, -2147483648
  %128 = or i32 %126, %127
  store i32 %128, i32* %121, align 8
  %129 = load i32, i32* %124, align 8
  %130 = and i32 %129, -2147483648
  %131 = or i32 %130, %123
  store i32 %131, i32* %124, align 8
  %132 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  %135 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, %134
  %138 = shl i32 %137, 1
  %139 = load i32, i32* %12, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %107
  %142 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %88)
  br label %143

143:                                              ; preds = %54, %107, %141
  %144 = phi i8 [ 1, %107 ], [ 1, %141 ], [ 0, %54 ]
  %145 = phi %"struct.WTF::KeyValuePair"* [ %88, %107 ], [ %142, %141 ], [ %47, %54 ]
  %146 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %145, 0
  %147 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %146, i8 %144, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E6ExpandEPSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([225 x i8], [225 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_7HashMapIS2_mNS_10StringHashENS_10HashTraitsIS2_EENS5_ImEENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %49, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %47, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 1
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 1, i32 0, i32 2
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 1, i32 0, i32 3
  %45 = bitcast %"class.WTF::HashMap.1"* %41 to i64*
  %46 = bitcast %"struct.WTF::KeyValuePair"* %40 to i64*
  store i64 0, i64* %46, align 8
  store atomic i64 0, i64* %45 monotonic, align 8
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %44, align 8
  %47 = add nuw nsw i64 %39, 1
  %48 = icmp eq i64 %47, %33
  br i1 %48, label %49, label %38

49:                                               ; preds = %38, %31
  %50 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E8RehashToEPSA_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %50
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E8RehashToEPSA_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %111

24:                                               ; preds = %212
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %213, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %216, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %214, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %107, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %105, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %102, %39
  %42 = phi i64 [ 0, %39 ], [ %103, %102 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %102, label %47

47:                                               ; preds = %41
  %48 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0
  %50 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %49, align 8
  %51 = icmp eq %"struct.WTF::KeyValuePair.5"* %50, null
  br i1 %51, label %86, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %82, label %56

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  br label %58

58:                                               ; preds = %79, %56
  %59 = phi i64 [ 0, %56 ], [ %80, %79 ]
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %50, i64 %59
  %61 = bitcast %"struct.WTF::KeyValuePair.5"* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast i8* %62 to %"class.WTF::StringImpl"*
  %64 = ptrtoint i8* %62 to i64
  switch i64 %64, label %65 [
    i64 -1, label %79
    i64 0, label %79
  ]

65:                                               ; preds = %58
  %66 = getelementptr inbounds i8, i8* %62, i64 8
  %67 = bitcast i8* %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = bitcast i8* %62 to i32*
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %65
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %65
  %76 = phi i32 [ %74, %73 ], [ %72, %65 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #8
  br label %79

79:                                               ; preds = %78, %75, %58, %58
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %57
  br i1 %81, label %82, label %58

82:                                               ; preds = %79, %52
  %83 = bitcast %"struct.WTF::KeyValuePair.5"* %50 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #8
  store %"struct.WTF::KeyValuePair.5"* null, %"struct.WTF::KeyValuePair.5"** %49, align 8
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  br label %86

86:                                               ; preds = %82, %47
  %87 = phi %"class.WTF::StringImpl"* [ %85, %82 ], [ %48, %47 ]
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #8
  br label %102

102:                                              ; preds = %101, %98, %86, %41
  %103 = add nuw nsw i64 %42, 1
  %104 = icmp eq i64 %103, %40
  br i1 %104, label %105, label %41

105:                                              ; preds = %102, %37
  %106 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %106) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %107

107:                                              ; preds = %28, %105
  %108 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = and i32 %109, -2147483648
  store i32 %110, i32* %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %33

111:                                              ; preds = %21, %212
  %112 = phi i64 [ %213, %212 ], [ %23, %21 ]
  %113 = phi i32 [ %214, %212 ], [ %13, %21 ]
  %114 = phi %"struct.WTF::KeyValuePair"* [ %215, %212 ], [ %22, %21 ]
  %115 = phi %"struct.WTF::KeyValuePair"* [ %216, %212 ], [ null, %21 ]
  %116 = phi i32 [ %217, %212 ], [ 0, %21 ]
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = bitcast %"struct.WTF::KeyValuePair"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  switch i64 %121, label %122 [
    i64 -1, label %212
    i64 0, label %212
  ]

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %118, i64 0, i32 0
  %124 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %123) #8
  %125 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %124, 0
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 1, i32 0, i32 0
  %127 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %126, align 8
  %128 = icmp eq %"struct.WTF::KeyValuePair.5"* %127, null
  br i1 %128, label %161, label %129, !prof !3

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 1, i32 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %159, label %133

133:                                              ; preds = %129
  %134 = zext i32 %131 to i64
  br label %135

135:                                              ; preds = %156, %133
  %136 = phi i64 [ 0, %133 ], [ %157, %156 ]
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %127, i64 %136
  %138 = bitcast %"struct.WTF::KeyValuePair.5"* %137 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = bitcast i8* %139 to %"class.WTF::StringImpl"*
  %141 = ptrtoint i8* %139 to i64
  switch i64 %141, label %142 [
    i64 -1, label %156
    i64 0, label %156
  ]

142:                                              ; preds = %135
  %143 = getelementptr inbounds i8, i8* %139, i64 8
  %144 = bitcast i8* %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = bitcast i8* %139 to i32*
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %142
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %142
  %153 = phi i32 [ %151, %150 ], [ %149, %142 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #8
  br label %156

156:                                              ; preds = %155, %152, %135, %135
  %157 = add nuw nsw i64 %136, 1
  %158 = icmp eq i64 %157, %134
  br i1 %158, label %159, label %135

159:                                              ; preds = %156, %129
  %160 = bitcast %"struct.WTF::KeyValuePair.5"* %127 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %160) #8
  store %"struct.WTF::KeyValuePair.5"* null, %"struct.WTF::KeyValuePair.5"** %126, align 8
  br label %161

161:                                              ; preds = %159, %122
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 0, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #8
  br label %178

178:                                              ; preds = %161, %174, %177
  %179 = load i64, i64* %120, align 8
  %180 = bitcast %"struct.WTF::KeyValuePair"* %125 to i64*
  store i64 %179, i64* %180, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 1
  %182 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %117, i32 1
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 1, i32 0, i32 1
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 1, i32 0, i32 2
  %185 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 1, i32 0, i32 3
  %186 = bitcast %"class.WTF::HashMap.1"* %182 to i64*
  %187 = bitcast %"class.WTF::HashMap.1"* %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 20, i1 false) #8
  %188 = load i64, i64* %186, align 8
  %189 = bitcast %"class.WTF::HashMap.1"* %181 to i64*
  store atomic i64 0, i64* %186 monotonic, align 8
  store atomic i64 %188, i64* %189 monotonic, align 8
  %190 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %117, i32 1, i32 0, i32 1
  %191 = load i32, i32* %183, align 4
  %192 = load i32, i32* %190, align 4
  store i32 %192, i32* %183, align 4
  store i32 %191, i32* %190, align 4
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %117, i32 1, i32 0, i32 2
  %194 = load i32, i32* %184, align 4
  %195 = load i32, i32* %193, align 4
  store i32 %195, i32* %184, align 4
  store i32 %194, i32* %193, align 4
  %196 = load i32, i32* %185, align 8
  %197 = and i32 %196, 2147483647
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %117, i32 1, i32 0, i32 3
  %199 = load i32, i32* %198, align 8
  %200 = and i32 %199, 2147483647
  %201 = and i32 %196, -2147483648
  %202 = or i32 %200, %201
  store i32 %202, i32* %185, align 8
  %203 = load i32, i32* %198, align 8
  %204 = and i32 %203, -2147483648
  %205 = or i32 %204, %197
  store i32 %205, i32* %198, align 8
  %206 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %206, i64 %117
  %208 = icmp eq %"struct.WTF::KeyValuePair"* %207, %3
  %209 = select i1 %208, %"struct.WTF::KeyValuePair"* %125, %"struct.WTF::KeyValuePair"* %115
  %210 = load i32, i32* %12, align 8
  %211 = ptrtoint %"struct.WTF::KeyValuePair"* %206 to i64
  br label %212

212:                                              ; preds = %111, %111, %178
  %213 = phi i64 [ %112, %111 ], [ %211, %178 ], [ %112, %111 ]
  %214 = phi i32 [ %113, %111 ], [ %210, %178 ], [ %113, %111 ]
  %215 = phi %"struct.WTF::KeyValuePair"* [ %114, %111 ], [ %206, %178 ], [ %114, %111 ]
  %216 = phi %"struct.WTF::KeyValuePair"* [ %115, %111 ], [ %209, %178 ], [ %115, %111 ]
  %217 = add i32 %116, 1
  %218 = icmp eq i32 %217, %214
  br i1 %218, label %24, label %111
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashMapIS1_mNS_10StringHashENS_10HashTraitsIS1_EENS5_ImEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS9_EEEES6_S8_E16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #8
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.5"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RmEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.2"*, %"class.WTF::String"* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.5"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2"* %0, %"struct.WTF::KeyValuePair.5"* null)
  %9 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.5"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.5"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.5"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.5"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.5"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.5"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.5"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.5"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #8
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !4

96:                                               ; preds = %87
  tail call void @llvm.trap() #8
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.5"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #8
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %79, i64 0, i32 1
  %120 = load i64, i64* %2, align 8
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2"* %0, %"struct.WTF::KeyValuePair.5"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.5"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.5"*, i8 } undef, %"struct.WTF::KeyValuePair.5"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.5"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.5"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.2"*, %"struct.WTF::KeyValuePair.5"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEmEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.5"*
  %37 = call %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.2"* %0, %"struct.WTF::KeyValuePair.5"* %36, i32 %32, %"struct.WTF::KeyValuePair.5"* %1) #8
  ret %"struct.WTF::KeyValuePair.5"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.2"*, %"struct.WTF::KeyValuePair.5"*, i32, %"struct.WTF::KeyValuePair.5"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2", align 8
  %6 = bitcast %"class.WTF::HashTable.2"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.5"* %1, %"struct.WTF::KeyValuePair.5"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.5"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.5"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable.2"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.5"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.5"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.5"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #8
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.5"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.5"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.5"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.5"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.5"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #8
  %85 = extractvalue { %"struct.WTF::KeyValuePair.5"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #8
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.5"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %74, i64 %77, i32 1
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair.5"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.5"* %85, %"struct.WTF::KeyValuePair.5"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.5"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair.5"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.5"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.5"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_mEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_ImEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.5"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.5"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.5"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.5"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.5"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.5"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.5"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.5"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #8
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.5"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.5"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.5"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.5"*, i8 } undef, %"struct.WTF::KeyValuePair.5"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.5"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.5"*, i8 } %77
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
