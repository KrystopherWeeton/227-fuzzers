; ModuleID = '../../third_party/blink/renderer/core/layout/layout_flexible_box.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_flexible_box.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::LayoutFlexibleBox" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.WTF::HashMap.2292", %"class.WTF::HashSet.2297", %"class.blink::OrderIterator", i32, i32, i8, [7 x i8] }>
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1820", %"class.std::__1::unique_ptr.1825", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1846, %"class.blink::Persistent.1847" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2417 }
%class.scoped_refptr.2417 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2418", %"class.WTF::Vector.630", %"class.WTF::Vector.2420", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2418" = type { %"class.base::RefCounted.2419" }
%"class.base::RefCounted.2419" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2420" = type { %"class.WTF::VectorBuffer.2421" }
%"class.WTF::VectorBuffer.2421" = type { %"class.WTF::VectorBufferBase.2422" }
%"class.WTF::VectorBufferBase.2422" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2423 }
%union.anon.2423 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2408" }
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2410" }
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.2184", %"class.std::__1::map.2193"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1625" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2176", %"class.std::__1::__compressed_pair.2181" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2176" = type { %"struct.std::__1::__compressed_pair_elem.2177" }
%"struct.std::__1::__compressed_pair_elem.2177" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2181" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2184" = type { %"class.std::__1::__tree.2185" }
%"class.std::__1::__tree.2185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2186", %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.2177" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2193" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2431 }
%class.scoped_refptr.2431 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2441" }
%"class.blink::Member.2441" = type { %"class.blink::MemberBase.2442" }
%"class.blink::MemberBase.2442" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2437" }
%"class.blink::MemberBase.2437" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2438" }
%"class.blink::MemberBase.2438" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2439" }
%"class.blink::MemberBase.2439" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2440" }
%"class.blink::MemberBase.2440" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2432", %"class.WTF::Vector.2432" }
%"class.WTF::Vector.2432" = type { %"class.WTF::VectorBuffer.2433" }
%"class.WTF::VectorBuffer.2433" = type { %"class.WTF::VectorBufferBase.2434" }
%"class.WTF::VectorBufferBase.2434" = type { %class.scoped_refptr.2431*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1904", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2124", %"class.std::__1::unique_ptr.2130", %"class.std::__1::unique_ptr.2136", %class.scoped_refptr.1900, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2142", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1863", %"class.std::__1::unique_ptr.1873" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::Persistent.1863" = type { %"class.blink::PersistentBase.1864" }
%"class.blink::PersistentBase.1864" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1867", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1867" = type { %"class.std::__1::__compressed_pair.1868" }
%"class.std::__1::__compressed_pair.1868" = type { %"struct.std::__1::__compressed_pair_elem.1869" }
%"struct.std::__1::__compressed_pair_elem.1869" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1873" = type { %"class.std::__1::__compressed_pair.1874" }
%"class.std::__1::__compressed_pair.1874" = type { %"struct.std::__1::__compressed_pair_elem.1875" }
%"struct.std::__1::__compressed_pair_elem.1875" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1876", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1876" = type { %"class.WTF::HashTable.1879", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1879" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1882", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1882" = type { %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.1884" }
%"struct.std::__1::__compressed_pair_elem.1884" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1885, %"class.std::__1::unique_ptr.1886", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1885 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2171", i16, %class.scoped_refptr.1885 }
%"class.WTF::ThreadSafeRefCounted.2171" = type { %"class.base::RefCountedThreadSafe.2172" }
%"class.base::RefCountedThreadSafe.2172" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"class.WTF::Vector.1889"* }
%"class.WTF::Vector.1889" = type { %"class.WTF::VectorBuffer.1890" }
%"class.WTF::VectorBuffer.1890" = type { %"class.WTF::VectorBufferBase.1891" }
%"class.WTF::VectorBufferBase.1891" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1900, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1908", %"class.blink::Member.1913", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1915", i8, i32, %"class.blink::Color", %"class.absl::optional.1918", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1923", %"class.blink::Member.1925", %"class.blink::Member.1925", %"class.std::__1::unique_ptr.1928", i32, [4 x i8], %"class.WTF::HashSet.1931", %"class.blink::Member.1938", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1940", %"class.blink::HeapHashSet.1947", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1955", i8, %"class.blink::Member.1961", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1973", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1987", i8, %"class.std::__1::unique_ptr.1993", %"class.std::__1::unique_ptr.2074", %"class.WTF::Vector.2080", i32, %class.scoped_refptr.2085, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2086", %"class.blink::Member.2088", %"class.blink::Member.2090", %"class.blink::HeapHashSet.2092", %"class.blink::HeapHashSet.2099", %"class.std::__1::unique_ptr.2106", %"class.std::__1::unique_ptr.2113", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1908" = type { %"class.WTF::HashTable.1909" }
%"class.WTF::HashTable.1909" = type <{ %class.scoped_refptr.1912*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1912 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1913" = type { %"class.blink::MemberBase.1914" }
%"class.blink::MemberBase.1914" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1915" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1916", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1918" = type { %"class.absl::optional_internal::optional_data.1919" }
%"class.absl::optional_internal::optional_data.1919" = type { %"class.absl::optional_internal::optional_data_base.1920" }
%"class.absl::optional_internal::optional_data_base.1920" = type { %"class.absl::optional_internal::optional_data_dtor_base.1921" }
%"class.absl::optional_internal::optional_data_dtor_base.1921" = type { i8, %union.anon.1922 }
%union.anon.1922 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::HeapHashSet.1927"* }
%"class.blink::HeapHashSet.1927" = type opaque
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.WTF::HashSet.1931"* }
%"class.WTF::HashSet.1931" = type { %"class.WTF::HashTable.1932" }
%"class.WTF::HashTable.1932" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1940" = type { %"class.WTF::HashSet.1943" }
%"class.WTF::HashSet.1943" = type { %"class.WTF::HashTable.1944" }
%"class.WTF::HashTable.1944" = type <{ %"class.blink::Member.1946"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1946" = type opaque
%"class.blink::HeapHashSet.1947" = type { %"class.WTF::HashSet.1950" }
%"class.WTF::HashSet.1950" = type { %"class.WTF::HashTable.1951" }
%"class.WTF::HashTable.1951" = type <{ %"class.blink::Member.1953"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1953" = type { %"class.blink::MemberBase.1954" }
%"class.blink::MemberBase.1954" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2159", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2169", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2159" = type { %"class.blink::MemberBase.2160" }
%"class.blink::MemberBase.2160" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2161", %"class.blink::Member.2163", %"class.blink::Member.2165", %"class.blink::Member.2167", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2161" = type { %"class.blink::MemberBase.2162" }
%"class.blink::MemberBase.2162" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2163" = type { %"class.blink::MemberBase.2164" }
%"class.blink::MemberBase.2164" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2167" = type { %"class.blink::MemberBase.2168" }
%"class.blink::MemberBase.2168" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2169" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2170", { i64, i64 } }
%"class.blink::WeakMember.2170" = type { %"class.blink::MemberBase.1954" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1955" = type { %"class.std::__1::__compressed_pair.1956" }
%"class.std::__1::__compressed_pair.1956" = type { %"struct.std::__1::__compressed_pair_elem.1957" }
%"struct.std::__1::__compressed_pair_elem.1957" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1965", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1965" = type { %"class.WTF::HashTable.1966" }
%"class.WTF::HashTable.1966" = type <{ %"struct.WTF::KeyValuePair.1968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1968" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1969", i32, i32 }
%"class.WTF::Vector.1969" = type { %"class.WTF::VectorBuffer.1970" }
%"class.WTF::VectorBuffer.1970" = type { %"class.WTF::VectorBufferBase.1971" }
%"class.WTF::VectorBufferBase.1971" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1973" = type { %"class.WTF::LinkedHashSet.1976" }
%"class.WTF::LinkedHashSet.1976" = type { %"class.WTF::HashMap.1977", %"class.WTF::VectorBackedLinkedList.1981" }
%"class.WTF::HashMap.1977" = type { %"class.WTF::HashTable.1978" }
%"class.WTF::HashTable.1978" = type <{ %"struct.WTF::KeyValuePair.1980"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1980" = type opaque
%"class.WTF::VectorBackedLinkedList.1981" = type { %"class.WTF::Vector.1982", i32, i32 }
%"class.WTF::Vector.1982" = type { %"class.WTF::VectorBuffer.1983" }
%"class.WTF::VectorBuffer.1983" = type { %"class.WTF::VectorBufferBase.1984" }
%"class.WTF::VectorBufferBase.1984" = type { %"class.WTF::VectorBackedLinkedListNode.1985"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1985" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1987" = type { %"class.std::__1::__compressed_pair.1988" }
%"class.std::__1::__compressed_pair.1988" = type { %"struct.std::__1::__compressed_pair_elem.1989" }
%"struct.std::__1::__compressed_pair_elem.1989" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1993" = type { %"class.std::__1::__compressed_pair.1994" }
%"class.std::__1::__compressed_pair.1994" = type { %"struct.std::__1::__compressed_pair_elem.1995" }
%"struct.std::__1::__compressed_pair_elem.1995" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1996, %class.scoped_refptr.1996, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2051", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2056", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1996 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1997", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2004" }
%"class.WTF::RefCounted.1997" = type { %"class.base::RefCounted.1998" }
%"class.base::RefCounted.1998" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1999", i32, [4 x i8] }>
%"class.WTF::Vector.1999" = type { %"class.WTF::VectorBuffer.2000" }
%"class.WTF::VectorBuffer.2000" = type { %"class.WTF::VectorBufferBase.2001" }
%"class.WTF::VectorBufferBase.2001" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2004" = type { %"class.WTF::VectorBuffer.2005" }
%"class.WTF::VectorBuffer.2005" = type { %"class.WTF::VectorBufferBase.2006" }
%"class.WTF::VectorBufferBase.2006" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2007", %"class.std::__1::unique_ptr.2023", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2007" = type { %"class.std::__1::__compressed_pair.2008" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2010", %"class.WTF::Vector.2015", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012" }
%"class.WTF::VectorBufferBase.2012" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2015" = type { %"class.WTF::VectorBuffer.2016" }
%"class.WTF::VectorBuffer.2016" = type { %"class.WTF::VectorBufferBase.2017" }
%"class.WTF::VectorBufferBase.2017" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2023" = type { %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2026", %"class.absl::optional.2026" }
%"class.absl::optional.2026" = type { %"class.absl::optional_internal::optional_data.2027" }
%"class.absl::optional_internal::optional_data.2027" = type { %"class.absl::optional_internal::optional_data_base.2028" }
%"class.absl::optional_internal::optional_data_base.2028" = type { %"class.absl::optional_internal::optional_data_dtor_base.2029" }
%"class.absl::optional_internal::optional_data_dtor_base.2029" = type { i8, [3 x i8], %union.anon.2030 }
%union.anon.2030 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2004"*, %"class.absl::optional.2036", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2036" = type { %"class.absl::optional_internal::optional_data.2037" }
%"class.absl::optional_internal::optional_data.2037" = type { %"class.absl::optional_internal::optional_data_base.2038" }
%"class.absl::optional_internal::optional_data_base.2038" = type { %"class.absl::optional_internal::optional_data_dtor_base.2039" }
%"class.absl::optional_internal::optional_data_dtor_base.2039" = type { i8, %union.anon.2040 }
%union.anon.2040 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2041", %"class.WTF::Vector.2046" }
%"class.WTF::Vector.2041" = type { %"class.WTF::VectorBuffer.2042" }
%"class.WTF::VectorBuffer.2042" = type { %"class.WTF::VectorBufferBase.2043", [128 x i8] }
%"class.WTF::VectorBufferBase.2043" = type { i32*, i32, i32 }
%"class.WTF::Vector.2046" = type { %"class.WTF::VectorBuffer.2047" }
%"class.WTF::VectorBuffer.2047" = type { %"class.WTF::VectorBufferBase.2048", [128 x i8] }
%"class.WTF::VectorBufferBase.2048" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2051" = type { %"class.WTF::VectorBuffer.2052" }
%"class.WTF::VectorBuffer.2052" = type { %"class.WTF::VectorBufferBase.2053" }
%"class.WTF::VectorBufferBase.2053" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2056" = type { %"class.WTF::HashTable.2057" }
%"class.WTF::HashTable.2057" = type <{ %"struct.WTF::KeyValuePair.2060"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2060" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2061", %"class.WTF::Vector.2066" }
%"class.WTF::HashMap.2061" = type { %"class.WTF::HashTable.2062" }
%"class.WTF::HashTable.2062" = type <{ %"struct.WTF::KeyValuePair.2065"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2065" = type opaque
%"class.WTF::Vector.2066" = type { %"class.WTF::VectorBuffer.2067" }
%"class.WTF::VectorBuffer.2067" = type { %"class.WTF::VectorBufferBase.2068" }
%"class.WTF::VectorBufferBase.2068" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2074" = type { %"class.std::__1::__compressed_pair.2075" }
%"class.std::__1::__compressed_pair.2075" = type { %"struct.std::__1::__compressed_pair_elem.2076" }
%"struct.std::__1::__compressed_pair_elem.2076" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2080" = type { %"class.WTF::VectorBuffer.2081" }
%"class.WTF::VectorBuffer.2081" = type { %"class.WTF::VectorBufferBase.2082" }
%"class.WTF::VectorBufferBase.2082" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2085 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2088" = type { %"class.blink::MemberBase.2089" }
%"class.blink::MemberBase.2089" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2092" = type { %"class.WTF::HashSet.2095" }
%"class.WTF::HashSet.2095" = type { %"class.WTF::HashTable.2096" }
%"class.WTF::HashTable.2096" = type <{ %"class.blink::WeakMember.2098"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2098" = type opaque
%"class.blink::HeapHashSet.2099" = type { %"class.WTF::HashSet.2102" }
%"class.WTF::HashSet.2102" = type { %"class.WTF::HashTable.2103" }
%"class.WTF::HashTable.2103" = type <{ %"class.blink::WeakMember.2105"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2105" = type opaque
%"class.std::__1::unique_ptr.2106" = type { %"class.std::__1::__compressed_pair.2107" }
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2109" }
%"class.base::time_internal::TimeBase.2109" = type { i64 }
%"class.std::__1::unique_ptr.2113" = type { %"class.std::__1::__compressed_pair.2114" }
%"class.std::__1::__compressed_pair.2114" = type { %"struct.std::__1::__compressed_pair_elem.2115" }
%"struct.std::__1::__compressed_pair_elem.2115" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2116", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2116" = type { %"class.absl::optional_internal::optional_data.2117" }
%"class.absl::optional_internal::optional_data.2117" = type { %"class.absl::optional_internal::optional_data_base.2118" }
%"class.absl::optional_internal::optional_data_base.2118" = type { %"class.absl::optional_internal::optional_data_dtor_base.2119" }
%"class.absl::optional_internal::optional_data_dtor_base.2119" = type { i8, %union.anon.2120 }
%union.anon.2120 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2124" = type { %"class.std::__1::__compressed_pair.2125" }
%"class.std::__1::__compressed_pair.2125" = type { %"struct.std::__1::__compressed_pair_elem.2126" }
%"struct.std::__1::__compressed_pair_elem.2126" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2130" = type { %"class.std::__1::__compressed_pair.2131" }
%"class.std::__1::__compressed_pair.2131" = type { %"struct.std::__1::__compressed_pair_elem.2132" }
%"struct.std::__1::__compressed_pair_elem.2132" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2136" = type { %"class.std::__1::__compressed_pair.2137" }
%"class.std::__1::__compressed_pair.2137" = type { %"struct.std::__1::__compressed_pair_elem.2138" }
%"struct.std::__1::__compressed_pair_elem.2138" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1900 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2142" = type { %"class.blink::PersistentBase.2143" }
%"class.blink::PersistentBase.2143" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2146", i64 }
%"class.blink::HeapVector.2146" = type { %"class.WTF::Vector.2149" }
%"class.WTF::Vector.2149" = type { %"class.WTF::VectorBuffer.2150" }
%"class.WTF::VectorBuffer.2150" = type { %"class.WTF::VectorBufferBase.2151", [368 x i8] }
%"class.WTF::VectorBufferBase.2151" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1953", i8, %"class.blink::Member.2152", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2152" = type { %"class.blink::MemberBase.2153" }
%"class.blink::MemberBase.2153" = type { %"class.blink::HeapLinkedHashSet.2154"* }
%"class.blink::HeapLinkedHashSet.2154" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type <{ %"class.blink::Member.2196", %"class.blink::LayoutBlock"*, %"class.WTF::Vector.2198", %"class.blink::TextAutosizer::FingerprintMapper", %"struct.blink::TextAutosizer::PageInfo", i8, i8, [2 x i8] }>
%"class.blink::Member.2196" = type { %"class.blink::MemberBase.2197" }
%"class.blink::MemberBase.2197" = type { %"class.blink::Document"* }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.WTF::Vector.2198" = type { %"class.WTF::VectorBuffer.2199" }
%"class.WTF::VectorBuffer.2199" = type { %"class.WTF::VectorBufferBase.2200" }
%"class.WTF::VectorBufferBase.2200" = type { %"class.std::__1::unique_ptr.2201"*, i32, i32 }
%"class.std::__1::unique_ptr.2201" = type opaque
%"class.blink::TextAutosizer::FingerprintMapper" = type { %"class.WTF::HashMap.2204", %"class.WTF::HashMap.2209", %"class.WTF::HashMap.2214", %"class.WTF::HashSet.2219" }
%"class.WTF::HashMap.2204" = type { %"class.WTF::HashTable.2205" }
%"class.WTF::HashTable.2205" = type <{ %"struct.WTF::KeyValuePair.2208"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2208" = type opaque
%"class.WTF::HashMap.2209" = type { %"class.WTF::HashTable.2210" }
%"class.WTF::HashTable.2210" = type <{ %"struct.WTF::KeyValuePair.2213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2213" = type opaque
%"class.WTF::HashMap.2214" = type { %"class.WTF::HashTable.2215" }
%"class.WTF::HashTable.2215" = type <{ %"struct.WTF::KeyValuePair.2218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2218" = type opaque
%"class.WTF::HashSet.2219" = type { %"class.WTF::HashTable.2220" }
%"class.WTF::HashTable.2220" = type <{ %"struct.blink::TextAutosizer::Supercluster"**, i32, i32, i32, [4 x i8] }>
%"struct.blink::TextAutosizer::Supercluster" = type <{ %"class.WTF::HashSet.2223"*, i32, float, i32, [4 x i8] }>
%"class.WTF::HashSet.2223" = type opaque
%"struct.blink::TextAutosizer::PageInfo" = type <{ %"class.blink::mojom::blink::TextAutosizerPageInfo", float, i8, i8, i8, i8 }>
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2412" }
%"class.WTF::Vector.2412" = type { %"class.WTF::VectorBuffer.2413" }
%"class.WTF::VectorBuffer.2413" = type { %"class.WTF::VectorBufferBase.2414" }
%"class.WTF::VectorBufferBase.2414" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1641", %"class.absl::optional.1641", %"class.absl::optional.1641" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2427" }
%"class.WTF::VectorBuffer.2427" = type { %"class.WTF::VectorBufferBase.2428", [32 x i8] }
%"class.WTF::VectorBufferBase.2428" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2224", %"class.blink::Persistent.2230", %"class.std::__1::unique_ptr.2254", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2270" }
%"class.std::__1::unique_ptr.2224" = type { %"class.std::__1::__compressed_pair.2225" }
%"class.std::__1::__compressed_pair.2225" = type { %"struct.std::__1::__compressed_pair_elem.2226" }
%"struct.std::__1::__compressed_pair_elem.2226" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.2230" = type { %"class.blink::PersistentBase.2231" }
%"class.blink::PersistentBase.2231" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2236", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2249" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2234", %"class.blink::Member.1953", %"class.blink::Member.1953", i8, [7 x i8] }>
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2159", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2239", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.2015" }
%"class.WTF::HashMap.2239" = type { %"class.WTF::HashTable.2240" }
%"class.WTF::HashTable.2240" = type <{ %"struct.WTF::KeyValuePair.2243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2243" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2247" }
%"class.blink::Member.2247" = type { %"class.blink::MemberBase.2248" }
%"class.blink::MemberBase.2248" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2247" }
%"class.absl::optional.2249" = type { %"class.absl::optional_internal::optional_data.2250" }
%"class.absl::optional_internal::optional_data.2250" = type { %"class.absl::optional_internal::optional_data_base.2251" }
%"class.absl::optional_internal::optional_data_base.2251" = type { %"class.absl::optional_internal::optional_data_dtor_base.2252" }
%"class.absl::optional_internal::optional_data_dtor_base.2252" = type { i8, %union.anon.2253 }
%union.anon.2253 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2254" = type { %"class.std::__1::__compressed_pair.2255" }
%"class.std::__1::__compressed_pair.2255" = type { %"struct.std::__1::__compressed_pair_elem.2256" }
%"struct.std::__1::__compressed_pair_elem.2256" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2257", %"class.WTF::Vector.2257", %"class.WTF::HashMap.2262", %"class.WTF::Vector.2257", i8, [7 x i8] }>
%"class.WTF::HashMap.2262" = type { %"class.WTF::HashTable.2263" }
%"class.WTF::HashTable.2263" = type <{ %"struct.WTF::KeyValuePair.2266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2266" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2257" }
%"class.WTF::Vector.2257" = type { %"class.WTF::VectorBuffer.2258" }
%"class.WTF::VectorBuffer.2258" = type { %"class.WTF::VectorBufferBase.2259" }
%"class.WTF::VectorBufferBase.2259" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2270" = type { %"class.std::__1::__compressed_pair.2271" }
%"class.std::__1::__compressed_pair.2271" = type { %"struct.std::__1::__compressed_pair_elem.2272" }
%"struct.std::__1::__compressed_pair_elem.2272" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2273", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2279", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2285", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.2279" = type { %"class.std::__1::__compressed_pair.2280" }
%"class.std::__1::__compressed_pair.2280" = type { %"struct.std::__1::__compressed_pair_elem.2281" }
%"struct.std::__1::__compressed_pair_elem.2281" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.2285" = type { %"class.blink::PersistentBase.2286" }
%"class.blink::PersistentBase.2286" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1779, %union.anon.1796, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1634, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1634 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1635 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1635 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1670", [4 x i8], %"class.std::__1::unique_ptr.1672", i64, %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.WTF::Vector.1687", %"class.WTF::Vector.1705", %class.scoped_refptr.1546, %"class.WTF::HashMap.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1676", %"class.WTF::Vector.1721", %"class.WTF::HashMap.1726", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1670" = type { %"class.base::RefCountedThreadSafe.1671" }
%"class.base::RefCountedThreadSafe.1671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { i8* }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [8 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %class.scoped_refptr.1684*, i32, i32 }
%class.scoped_refptr.1684 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1691", %"class.std::__1::unique_ptr.1697" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1708", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1708" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type opaque
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718" }
%"class.WTF::VectorBufferBase.1718" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [16 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.2449", i32 }
%"class.mojo::ScopedHandleBase.2449" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type { i8**, %"class.std::__1::unique_ptr.2443" }
%"class.std::__1::unique_ptr.2443" = type { %"class.std::__1::__compressed_pair.2444" }
%"class.std::__1::__compressed_pair.2444" = type { %"struct.std::__1::__compressed_pair_elem.2445" }
%"struct.std::__1::__compressed_pair_elem.2445" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1734, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1751" }
%class.scoped_refptr.1734 = type { %"class.base::RefCountedData.1735"* }
%"class.base::RefCountedData.1735" = type { %"class.base::RefCountedThreadSafe.1736", %"class.WTF::Vector.1737" }
%"class.base::RefCountedThreadSafe.1736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %class.scoped_refptr.1740*, i32, i32 }
%class.scoped_refptr.1740 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1741", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1743" }
%"class.WTF::RefCounted.1741" = type { %"class.base::RefCounted.1742" }
%"class.base::RefCounted.1742" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1754", %"class.WTF::Vector.1767", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756", [320 x i8] }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1757", %"class.WTF::Vector.1757", %class.scoped_refptr.1762, i8, [7 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [8 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1762 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1763", %"class.WTF::Vector.1737", %"class.WTF::Vector.1737" }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [288 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1757", %"class.WTF::Vector.1757" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1770 }
%class.scoped_refptr.1770 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1779 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1780", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1782, %"class.std::__1::unique_ptr.1785" }
%"class.WTF::RefCounted.1780" = type { %"class.base::RefCounted.1781" }
%"class.base::RefCounted.1781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1782 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.WTF::Vector.1788"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type opaque
%union.anon.1796 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1636", %class.scoped_refptr.1797, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1798, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1669, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1799", %"class.absl::optional.1815" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1797 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2173", [4 x i8], %union.anon.2175, %class.scoped_refptr.1797, i32, [4 x i8] }>
%"class.WTF::RefCounted.2173" = type { %"class.base::RefCounted.2174" }
%"class.base::RefCounted.2174" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2175 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1798 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1799" = type { %"class.std::__1::__compressed_pair.1800" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1802", %"class.WTF::Vector.1807", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1802" = type { %"class.WTF::VectorBuffer.1803" }
%"class.WTF::VectorBuffer.1803" = type { %"class.WTF::VectorBufferBase.1804" }
%"class.WTF::VectorBufferBase.1804" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1807" = type { %"class.WTF::VectorBuffer.1808" }
%"class.WTF::VectorBuffer.1808" = type { %"class.WTF::VectorBufferBase.1809" }
%"class.WTF::VectorBufferBase.1809" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1815" = type { %"class.absl::optional_internal::optional_data.1816" }
%"class.absl::optional_internal::optional_data.1816" = type { %"class.absl::optional_internal::optional_data_base.1817" }
%"class.absl::optional_internal::optional_data_base.1817" = type { %"class.absl::optional_internal::optional_data_dtor_base.1818" }
%"class.absl::optional_internal::optional_data_dtor_base.1818" = type { i8, %union.anon.1819 }
%union.anon.1819 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1820" = type { %"class.WTF::VectorBuffer.1821" }
%"class.WTF::VectorBuffer.1821" = type { %"class.WTF::VectorBufferBase.1822", [8 x i8] }
%"class.WTF::VectorBufferBase.1822" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1825" = type { %"class.std::__1::__compressed_pair.1826" }
%"class.std::__1::__compressed_pair.1826" = type { %"struct.std::__1::__compressed_pair_elem.1827" }
%"struct.std::__1::__compressed_pair_elem.1827" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1828", %"class.absl::optional.1833", %"class.absl::optional.1838" }
%"class.absl::optional.1828" = type { %"class.absl::optional_internal::optional_data.1829" }
%"class.absl::optional_internal::optional_data.1829" = type { %"class.absl::optional_internal::optional_data_base.1830" }
%"class.absl::optional_internal::optional_data_base.1830" = type { %"class.absl::optional_internal::optional_data_dtor_base.1831" }
%"class.absl::optional_internal::optional_data_dtor_base.1831" = type { i8, %union.anon.1832 }
%union.anon.1832 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1833" = type { %"class.absl::optional_internal::optional_data.1834" }
%"class.absl::optional_internal::optional_data.1834" = type { %"class.absl::optional_internal::optional_data_base.1835" }
%"class.absl::optional_internal::optional_data_base.1835" = type { %"class.absl::optional_internal::optional_data_dtor_base.1836" }
%"class.absl::optional_internal::optional_data_dtor_base.1836" = type { i8, [3 x i8], %union.anon.1837 }
%union.anon.1837 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1838" = type { %"class.absl::optional_internal::optional_data.1839" }
%"class.absl::optional_internal::optional_data.1839" = type { %"class.absl::optional_internal::optional_data_base.1840" }
%"class.absl::optional_internal::optional_data_base.1840" = type { %"class.absl::optional_internal::optional_data_dtor_base.1841" }
%"class.absl::optional_internal::optional_data_dtor_base.1841" = type { i8, %union.anon.1842 }
%union.anon.1842 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1846 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1847" = type { %"class.blink::PersistentBase.1848" }
%"class.blink::PersistentBase.1848" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1851", %"struct.blink::PhysicalRect", %"class.blink::Member.1861" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.std::__1::unique_ptr.1851" = type { %"class.std::__1::__compressed_pair.1852" }
%"class.std::__1::__compressed_pair.1852" = type { %"struct.std::__1::__compressed_pair_elem.1853" }
%"struct.std::__1::__compressed_pair_elem.1853" = type { %"class.WTF::HashSet.1854"* }
%"class.WTF::HashSet.1854" = type { %"class.WTF::HashTable.1855" }
%"class.WTF::HashTable.1855" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1861" = type { %"class.blink::MemberBase.1862" }
%"class.blink::MemberBase.1862" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.WTF::HashMap.2292" = type { %"class.WTF::HashTable.2293" }
%"class.WTF::HashTable.2293" = type <{ %"struct.WTF::KeyValuePair.2296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2296" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutUnit", [4 x i8] }>
%"class.WTF::HashSet.2297" = type { %"class.WTF::HashTable.2298" }
%"class.WTF::HashTable.2298" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::OrderIterator" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.std::__1::set", %"class.std::__1::__tree_const_iterator", i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.2301" }
%"class.std::__1::__tree.2301" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2302", %"class.std::__1::__compressed_pair.2306" }
%"class.std::__1::__compressed_pair.2302" = type { %"struct.std::__1::__compressed_pair_elem.2177" }
%"class.std::__1::__compressed_pair.2306" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.2316", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.2340", %"class.blink::Member.2340", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.2344", i32, [4 x i8] }>
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.2310", %"class.blink::Member.2312", %"class.blink::Member.2314", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.2310" = type { %"class.blink::MemberBase.2311" }
%"class.blink::MemberBase.2311" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.2312" = type { %"class.blink::MemberBase.2313" }
%"class.blink::MemberBase.2313" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.2314" = type { %"class.blink::MemberBase.2315" }
%"class.blink::MemberBase.2315" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.2316" = type { %"class.WTF::Vector.2319" }
%"class.WTF::Vector.2319" = type { %"class.WTF::VectorBuffer.2320" }
%"class.WTF::VectorBuffer.2320" = type { %"class.WTF::VectorBufferBase.2321" }
%"class.WTF::VectorBufferBase.2321" = type { %"class.blink::Member.2322"*, i32, i32 }
%"class.blink::Member.2322" = type opaque
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.2324", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.absl::optional.2324" = type { %"class.absl::optional_internal::optional_data.2325" }
%"class.absl::optional_internal::optional_data.2325" = type { %"class.absl::optional_internal::optional_data_base.2326" }
%"class.absl::optional_internal::optional_data_base.2326" = type { %"class.absl::optional_internal::optional_data_dtor_base.2327" }
%"class.absl::optional_internal::optional_data_dtor_base.2327" = type { i8, %union.anon.2328 }
%union.anon.2328 = type { %"class.base::TimeTicks" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2329, i32, i8, i8, [2 x i8] }>
%union.anon.2329 = type { %"class.WTF::Vector.2330" }
%"class.WTF::Vector.2330" = type { %"class.WTF::VectorBuffer.2331" }
%"class.WTF::VectorBuffer.2331" = type { %"class.WTF::VectorBufferBase.2332", [16 x i8] }
%"class.WTF::VectorBufferBase.2332" = type { i8*, i32, i32 }
%"class.blink::Member.2340" = type { %"class.blink::MemberBase.2341" }
%"class.blink::MemberBase.2341" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.2342", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope" = type { i8 }
%"class.blink::TextAutosizer::LayoutScope" = type { %"class.blink::TextAutosizer"*, %"class.blink::LayoutBlock"* }
%"class.blink::OrderIteratorPopulator" = type { %"class.blink::OrderIterator"* }
%"class.blink::PaintLayerScrollableArea::PreventRelayoutScope" = type { i8 }
%"class.blink::FlexLayoutAlgorithm" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::ComputedStyle"*, %"class.blink::LayoutUnit", %"class.WTF::Vector.2356", %"class.WTF::Vector.2366", i64 }
%"class.WTF::Vector.2356" = type { %"class.WTF::VectorBuffer.2357" }
%"class.WTF::VectorBuffer.2357" = type { %"class.WTF::VectorBufferBase.2358", [1152 x i8] }
%"class.WTF::VectorBufferBase.2358" = type { %"class.blink::FlexItem"*, i32, i32 }
%"class.blink::FlexItem" = type { %"class.blink::FlexLayoutAlgorithm"*, i32, %"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.absl::optional.2359", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutPoint", i8, i8, i8, i8, %"class.blink::NGBlockNode", %class.scoped_refptr.1631 }
%"class.absl::optional.2359" = type { %"class.absl::optional_internal::optional_data.2360" }
%"class.absl::optional_internal::optional_data.2360" = type { %"class.absl::optional_internal::optional_data_base.2361" }
%"class.absl::optional_internal::optional_data_base.2361" = type { %"class.absl::optional_internal::optional_data_dtor_base.2362" }
%"class.absl::optional_internal::optional_data_dtor_base.2362" = type { i8, %union.anon.2363 }
%union.anon.2363 = type { %"struct.blink::MinMaxSizes" }
%"struct.blink::NGPhysicalBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::Vector.2366" = type { %"class.WTF::VectorBuffer.2367" }
%"class.WTF::VectorBuffer.2367" = type { %"class.WTF::VectorBufferBase.2368" }
%"class.WTF::VectorBufferBase.2368" = type { %"class.blink::FlexLine"*, i32, i32 }
%"class.blink::FlexLine" = type { %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::FlexItemVectorView", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", double, double, double, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FlexItemVectorView" = type { %"class.WTF::Vector.2356"*, i32, i32 }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2454", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2455", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2454" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2455" = type { %"class.absl::optional_internal::optional_data.2456" }
%"class.absl::optional_internal::optional_data.2456" = type { %"class.absl::optional_internal::optional_data_base.2457" }
%"class.absl::optional_internal::optional_data_base.2457" = type { %"class.absl::optional_internal::optional_data_dtor_base.2458" }
%"class.absl::optional_internal::optional_data_dtor_base.2458" = type { i8, %union.anon.2459 }
%union.anon.2459 = type { %"class.blink::FloatSize" }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::BlockPainter" = type { %"class.blink::LayoutBlock"* }
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.2374", float, i8, %class.scoped_refptr.2376, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type opaque
%class.scoped_refptr.2376 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.2377", i8, %class.scoped_refptr.2379, %"class.blink::WeakPersistent.2393", i32, i8, %"class.std::__1::unique_ptr.2395" }
%"class.WTF::ThreadSafeRefCounted.2377" = type { %"class.base::RefCountedThreadSafe.2378" }
%"class.base::RefCountedThreadSafe.2378" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.2379 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2380", i64, %"class.WTF::Vector.2382", %"class.WTF::Vector.2387" }
%"class.WTF::RefCounted.2380" = type { %"class.base::RefCounted.2381" }
%"class.base::RefCounted.2381" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2382" = type { %"class.WTF::VectorBuffer.2383" }
%"class.WTF::VectorBuffer.2383" = type { %"class.WTF::VectorBufferBase.2384" }
%"class.WTF::VectorBufferBase.2384" = type { i8*, i32, i32 }
%"class.WTF::Vector.2387" = type { %"class.WTF::VectorBuffer.2388" }
%"class.WTF::VectorBuffer.2388" = type { %"class.WTF::VectorBufferBase.2389" }
%"class.WTF::VectorBufferBase.2389" = type { %"class.std::__1::unique_ptr.2390"*, i32, i32 }
%"class.std::__1::unique_ptr.2390" = type opaque
%"class.blink::WeakPersistent.2393" = type { %"class.blink::PersistentBase.2394" }
%"class.blink::PersistentBase.2394" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.2395" = type { %"class.std::__1::__compressed_pair.2396" }
%"class.std::__1::__compressed_pair.2396" = type { %"struct.std::__1::__compressed_pair_elem.2397" }
%"struct.std::__1::__compressed_pair_elem.2397" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2401" }
%"class.WTF::HashMap.2401" = type { %"class.WTF::HashTable.2402" }
%"class.WTF::HashTable.2402" = type <{ %"struct.WTF::KeyValuePair.2405"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2405" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.WTF::Vector.2406" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.2273", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.WTF::Vector.2407" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv = comdat any

$_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZNK5blink9LayoutBox19ClientLogicalBottomEv = comdat any

$_ZNK5blink9LayoutBox11ContentLeftEv = comdat any

$_ZNK5blink9LayoutBox10ContentTopEv = comdat any

$_ZNK5blink9LayoutBox20ContentLogicalHeightEv = comdat any

$_ZNK5blink11LayoutBlock21StartOffsetForContentEv = comdat any

$_ZNK5blink17LayoutFlexibleBox7GetNameEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink17LayoutFlexibleBox13IsFlexibleBoxEv = comdat any

$_ZNK5blink17LayoutFlexibleBox37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink17LayoutFlexibleBox24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE = comdat any

$_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv = comdat any

$_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink9LayoutBox20CollapsedMarginAfterEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZN3WTF12VectorBufferIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPKNS1_9LayoutBoxERS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPKNS1_9LayoutBoxESH_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FlexItemEEEmm = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_9LayoutBoxERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

@_ZTVN5blink17LayoutFlexibleBoxE = hidden unnamed_addr constant { [214 x i8*], [7 x i8*] } { [214 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutFlexibleBox"*)* @_ZN5blink17LayoutFlexibleBoxD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutFlexibleBox"*)* @_ZN5blink17LayoutFlexibleBoxD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutFlexibleBox"*)* @_ZNK5blink17LayoutFlexibleBox7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink17LayoutFlexibleBox14IsChildAllowedEPNS_12LayoutObjectERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutObject"*)* @_ZN5blink17LayoutFlexibleBox11RemoveChildEPNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.2406"*, i32)* @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlexibleBox"*)* @_ZNK5blink17LayoutFlexibleBox13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlexibleBox"*)* @_ZNK5blink17LayoutFlexibleBox37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlexibleBox"*)* @_ZNK5blink17LayoutFlexibleBox24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.WTF::Vector.2407"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8)* @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutFlexibleBox"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink17LayoutFlexibleBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutFlexibleBox"*, i32, i1, i32, i32)* @_ZNK5blink17LayoutFlexibleBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2406"*, i32)* @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2406"*)* @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlexibleBox"*)* @_ZNK5blink17LayoutFlexibleBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlexibleBox"*)* @_ZNK5blink17LayoutFlexibleBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutFlexibleBox"*)* @_ZNK5blink17LayoutFlexibleBox20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutFlexibleBox"*, i32)* @_ZNK5blink17LayoutFlexibleBox19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutFlexibleBox"*)* @_ZNK5blink17LayoutFlexibleBox29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutFlexibleBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink17LayoutFlexibleBox15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutFlexibleBox"*, i1)* @_ZN5blink17LayoutFlexibleBox17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i1, i32)* @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i32)* @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutFlexibleBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink17LayoutFlexibleBox13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1)* @_ZN5blink11LayoutBlock21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, i1)* @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutFlexibleBox"*)* @_ZThn8_N5blink17LayoutFlexibleBoxD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutFlexibleBox"*)* @_ZThn8_N5blink17LayoutFlexibleBoxD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@_ZN5blink16input_type_names6kRangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScope6count_E = external local_unnamed_addr global i32, align 4
@_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScope16relayout_needed_E = external local_unnamed_addr global i8, align 1
@_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E = external local_unnamed_addr global i32, align 4
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"LayoutFlexibleBox\00", align 1
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENS2_10LayoutUnitEEEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutObject *, blink::LayoutUnit>]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink12LayoutObjectEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::LayoutObject *]\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FlexItemEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FlexItem]\00", align 1

@_ZN5blink17LayoutFlexibleBoxC1EPNS_7ElementE = hidden unnamed_addr alias void (%"class.blink::LayoutFlexibleBox"*, %"class.blink::Element"*), void (%"class.blink::LayoutFlexibleBox"*, %"class.blink::Element"*)* @_ZN5blink17LayoutFlexibleBoxC2EPNS_7ElementE
@_ZN5blink17LayoutFlexibleBoxD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutFlexibleBox"*), void (%"class.blink::LayoutFlexibleBox"*)* @_ZN5blink17LayoutFlexibleBoxD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBoxC2EPNS_7ElementE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"* %3, %"class.blink::ContainerNode"* %4) #11
  %5 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2
  %7 = bitcast %"class.WTF::HashMap.2292"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3
  %9 = bitcast %"class.WTF::HashSet.2297"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #11
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13OrderIteratorC1EPKNS_9LayoutBoxE(%"class.blink::OrderIterator"* %10, %"class.blink::LayoutBox"* %11) #11
  %12 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 5
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  store i32 2, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 7
  store i8 0, i8* %14, align 8
  ret void
}

declare void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"*, %"class.blink::ContainerNode"*) unnamed_addr #1

declare void @_ZN5blink13OrderIteratorC1EPKNS_9LayoutBoxE(%"class.blink::OrderIterator"*, %"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBoxD2Ev(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4, i32 2, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.2301"* %3, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"** %8, null
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::LayoutObject"** %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #11
  store %"class.blink::LayoutObject"** null, %"class.blink::LayoutObject"*** %7, align 8
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %13, align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair.2296"* %14, null
  br i1 %15, label %18, label %16, !prof !2

16:                                               ; preds = %12
  %17 = bitcast %"struct.WTF::KeyValuePair.2296"* %14 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #11
  store %"struct.WTF::KeyValuePair.2296"* null, %"struct.WTF::KeyValuePair.2296"** %13, align 8
  br label %18

18:                                               ; preds = %12, %16
  %19 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"* %19) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17LayoutFlexibleBoxD1Ev(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 -1, i32 7
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 304
  %5 = bitcast i8* %4 to %"class.std::__1::__tree.2301"*
  %6 = getelementptr inbounds i8, i8* %2, i64 312
  %7 = bitcast i8* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.2301"* %5, %"class.std::__1::__tree_node"* %8) #11
  %9 = getelementptr inbounds i8, i8* %2, i64 264
  %10 = bitcast i8* %9 to %"class.blink::LayoutObject"***
  %11 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %10, align 8
  %12 = icmp eq %"class.blink::LayoutObject"** %11, null
  br i1 %12, label %15, label %13, !prof !2

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::LayoutObject"** %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #11
  store %"class.blink::LayoutObject"** null, %"class.blink::LayoutObject"*** %10, align 8
  br label %15

15:                                               ; preds = %13, %1
  %16 = getelementptr inbounds i8, i8* %2, i64 240
  %17 = bitcast i8* %16 to %"struct.WTF::KeyValuePair.2296"**
  %18 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair.2296"* %18, null
  br i1 %19, label %22, label %20, !prof !2

20:                                               ; preds = %15
  %21 = bitcast %"struct.WTF::KeyValuePair.2296"* %18 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #11
  store %"struct.WTF::KeyValuePair.2296"* null, %"struct.WTF::KeyValuePair.2296"** %17, align 8
  br label %22

22:                                               ; preds = %15, %20
  %23 = bitcast i8* %2 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"* %23) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBoxD0Ev(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4, i32 2, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.2301"* %3, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"** %8, null
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::LayoutObject"** %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #11
  store %"class.blink::LayoutObject"** null, %"class.blink::LayoutObject"*** %7, align 8
  br label %12

12:                                               ; preds = %10, %1
  %13 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %13, align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair.2296"* %14, null
  br i1 %15, label %18, label %16, !prof !2

16:                                               ; preds = %12
  %17 = bitcast %"struct.WTF::KeyValuePair.2296"* %14 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #11
  store %"struct.WTF::KeyValuePair.2296"* null, %"struct.WTF::KeyValuePair.2296"** %13, align 8
  br label %18

18:                                               ; preds = %12, %16
  %19 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"* %19) #11
  %20 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %20) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17LayoutFlexibleBoxD0Ev(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 -1, i32 7
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink17LayoutFlexibleBoxE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 304
  %5 = bitcast i8* %4 to %"class.std::__1::__tree.2301"*
  %6 = getelementptr inbounds i8, i8* %2, i64 312
  %7 = bitcast i8* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.2301"* %5, %"class.std::__1::__tree_node"* %8) #11
  %9 = getelementptr inbounds i8, i8* %2, i64 264
  %10 = bitcast i8* %9 to %"class.blink::LayoutObject"***
  %11 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %10, align 8
  %12 = icmp eq %"class.blink::LayoutObject"** %11, null
  br i1 %12, label %15, label %13, !prof !2

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::LayoutObject"** %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #11
  store %"class.blink::LayoutObject"** null, %"class.blink::LayoutObject"*** %10, align 8
  br label %15

15:                                               ; preds = %13, %1
  %16 = getelementptr inbounds i8, i8* %2, i64 240
  %17 = bitcast i8* %16 to %"struct.WTF::KeyValuePair.2296"**
  %18 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair.2296"* %18, null
  br i1 %19, label %22, label %20, !prof !2

20:                                               ; preds = %15
  %21 = bitcast %"struct.WTF::KeyValuePair.2296"* %18 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #11
  store %"struct.WTF::KeyValuePair.2296"* null, %"struct.WTF::KeyValuePair.2296"** %17, align 8
  br label %22

22:                                               ; preds = %15, %20
  %23 = bitcast i8* %2 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"* %23) #11
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox14IsChildAllowedEPNS_12LayoutObjectERKNS_13ComputedStyleE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutObject"* nocapture readonly, %"class.blink::ComputedStyle"* nocapture readnone dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 16777216
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %50

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 48
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %50

18:                                               ; preds = %13
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 1, i32 2
  %23 = bitcast %"class.blink::Member.318"* %22 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %26, %28
  %30 = bitcast %"class.blink::Node"* %11 to %"class.blink::HTMLSelectElement"*
  br i1 %29, label %31, label %50

31:                                               ; preds = %18
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 5, i32 0, i32 0, i32 1
  %33 = bitcast %"class.blink::TraceWrapperV8Reference"* %32 to i8*
  %34 = load i8, i8* %33, align 8, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %50, label %36, !prof !2

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = load i96, i96* %38, align 4
  %40 = and i96 %39, 16777216
  %41 = icmp eq i96 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  br label %45

45:                                               ; preds = %36, %42
  %46 = phi %"class.blink::Node"* [ %44, %42 ], [ null, %36 ]
  %47 = tail call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"* nonnull %30) #11
  %48 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %47, i64 0, i32 0, i32 0
  %49 = icmp eq %"class.blink::Node"* %46, %48
  br label %50

50:                                               ; preds = %31, %18, %3, %9, %13, %45
  %51 = phi i1 [ %49, %45 ], [ true, %31 ], [ true, %18 ], [ true, %13 ], [ true, %9 ], [ true, %3 ]
  ret i1 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink17LayoutFlexibleBox29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::LayoutUnit", align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %9)
  %11 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %12 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %11)
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %16, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %16) #11
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !4
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %22) #11
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !4
  %29 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = and i160 %33, 15211807202738752817960438464512
  %35 = icmp eq i160 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %1
  %37 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %11) #11
  br i1 %37, label %40, label %59

38:                                               ; preds = %1
  %39 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %11) #11
  br i1 %39, label %40, label %59

40:                                               ; preds = %36, %38
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8
  %45 = and i160 %44, 15211807202738752817960438464512
  %46 = icmp eq i160 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %11) #11
  br label %51

49:                                               ; preds = %40
  %50 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %11) #11
  br label %51

51:                                               ; preds = %47, %49
  %52 = phi i32 [ %48, %47 ], [ %50, %49 ]
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %52) #11
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !4
  br label %444

59:                                               ; preds = %36, %38
  %60 = tail call i32 @_ZNK5blink9LayoutBox33DefaultIntrinsicContentInlineSizeEv(%"class.blink::LayoutBox"* %11) #11
  %61 = icmp eq i32 %60, -64
  br i1 %61, label %83, label %62

62:                                               ; preds = %59
  %63 = icmp slt i32 %60, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %60) #11
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !4
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %71 = bitcast [20 x i8]* %70 to i160*
  %72 = load i160, i160* %71, align 8
  %73 = and i160 %72, 15211807202738752817960438464512
  %74 = icmp eq i160 %73, 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 5, i32 0, i32 0
  %76 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %76, i64 0, i32 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %76, i64 0, i32 3
  %79 = select i1 %74, %"class.blink::Length"* %77, %"class.blink::Length"* %78
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 1
  switch i8 %81, label %82 [
    i8 8, label %444
    i8 1, label %444
  ]

82:                                               ; preds = %62
  br label %444

83:                                               ; preds = %59
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 3, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %86, i64 0, i32 2, i32 0, i32 0
  %88 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %88, i64 0, i32 2, i32 0, i32 0
  %90 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %90, i64 0, i32 45
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 24
  %94 = icmp eq i32 %93, 24
  br i1 %94, label %95, label %142

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %97 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %96 to i96*
  %98 = load i96, i96* %97, align 4
  %99 = and i96 %98, 1207959552
  %100 = icmp eq i96 %99, 134217728
  br i1 %100, label %142, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %104 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, i64 92
  %105 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %104, align 8
  %106 = tail call zeroext i1 %105(%"class.blink::LayoutObject"* %8, i32 43) #11
  br i1 %106, label %142, label %107

107:                                              ; preds = %101
  %108 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %109 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %108, i64 92
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.blink::LayoutObject"* %8, i32 46) #11
  br i1 %111, label %132, label %112

112:                                              ; preds = %107
  %113 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %114 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %113, i64 92
  %115 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %114, align 8
  %116 = tail call zeroext i1 %115(%"class.blink::LayoutObject"* %8, i32 48) #11
  br i1 %116, label %132, label %117

117:                                              ; preds = %112
  %118 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %119 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, i64 92
  %120 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %119, align 8
  %121 = tail call zeroext i1 %120(%"class.blink::LayoutObject"* %8, i32 45) #11
  br i1 %121, label %132, label %122

122:                                              ; preds = %117
  %123 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %124 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %123, i64 92
  %125 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %124, align 8
  %126 = tail call zeroext i1 %125(%"class.blink::LayoutObject"* %8, i32 49) #11
  br i1 %126, label %132, label %127

127:                                              ; preds = %122
  %128 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %128, i64 92
  %130 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %129, align 8
  %131 = tail call zeroext i1 %130(%"class.blink::LayoutObject"* %8, i32 50) #11
  br i1 %131, label %132, label %137

132:                                              ; preds = %127, %122, %117, %112, %107
  %133 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %134 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %133, i64 92
  %135 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %134, align 8
  %136 = tail call zeroext i1 %135(%"class.blink::LayoutObject"* %8, i32 45) #11
  br i1 %136, label %137, label %142

137:                                              ; preds = %127, %132
  %138 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %139 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %138, i64 92
  %140 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %139, align 8
  %141 = tail call zeroext i1 %140(%"class.blink::LayoutObject"* %8, i32 44) #11
  br i1 %141, label %142, label %444

142:                                              ; preds = %137, %95, %101, %132, %83
  %143 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143)
  %144 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144)
  store i32 0, i32* %2, align 8
  store i32 0, i32* %3, align 4
  %145 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %146 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %145, align 8
  %147 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %146, i64 13
  %148 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %147, align 8
  %149 = tail call %"class.blink::LayoutObjectChildList"* %148(%"class.blink::LayoutObject"* %8) #11
  %150 = icmp eq %"class.blink::LayoutObjectChildList"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %142
  %152 = bitcast %"class.blink::LayoutObjectChildList"* %149 to %"class.blink::LayoutBox"**
  %153 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %152, align 8
  %154 = icmp eq %"class.blink::LayoutBox"* %153, null
  br i1 %154, label %164, label %155

155:                                              ; preds = %151
  %156 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %157 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  %158 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %159 = bitcast %"class.blink::LayoutUnit"* %5 to i8*
  %160 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %161 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %162 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %163 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br label %198

164:                                              ; preds = %355, %142, %151
  %165 = phi i32 [ 0, %151 ], [ 0, %142 ], [ %356, %355 ]
  %166 = phi i32 [ 0, %151 ], [ 0, %142 ], [ %357, %355 ]
  %167 = phi i32 [ 0, %151 ], [ 0, %142 ], [ %358, %355 ]
  %168 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %168, i64 0, i32 0, i32 9
  %170 = bitcast [20 x i8]* %169 to i160*
  %171 = load i160, i160* %170, align 8
  %172 = lshr i160 %171, 32
  %173 = trunc i160 %172 to i32
  %174 = and i32 %173, 30
  %175 = or i32 %174, 1
  %176 = icmp eq i32 %175, 15
  %177 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %168, i64 0, i32 0, i32 3, i32 0, i32 0
  %178 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %177, align 8
  br i1 %176, label %179, label %186

179:                                              ; preds = %164
  %180 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %178, i64 0, i32 2, i32 0, i32 0
  %181 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %181, i64 0, i32 13
  %183 = bitcast [3 x i8]* %182 to i24*
  %184 = load i24, i24* %183, align 8
  %185 = icmp slt i24 %184, 0
  br label %193

186:                                              ; preds = %164
  %187 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %178, i64 0, i32 12
  %188 = load i16, i16* %187, align 4
  %189 = lshr i16 %188, 5
  %190 = and i16 %189, 2
  %191 = or i16 %190, 1
  %192 = icmp eq i16 %191, 3
  br label %193

193:                                              ; preds = %179, %186
  %194 = phi i1 [ %185, %179 ], [ %192, %186 ]
  %195 = xor i1 %194, true
  %196 = icmp sgt i32 %167, 0
  %197 = and i1 %196, %195
  br i1 %197, label %364, label %411

198:                                              ; preds = %155, %355
  %199 = phi i32 [ 0, %155 ], [ %356, %355 ]
  %200 = phi i32 [ 0, %155 ], [ %357, %355 ]
  %201 = phi float [ -1.000000e+00, %155 ], [ %359, %355 ]
  %202 = phi i32 [ 0, %155 ], [ %358, %355 ]
  %203 = phi %"class.blink::LayoutBox"* [ %153, %155 ], [ %362, %355 ]
  %204 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %203, i64 0, i32 0, i32 0
  %205 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %203, i64 0, i32 0, i32 0, i32 4
  %206 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %205 to i96*
  %207 = load i96, i96* %206, align 4
  %208 = and i96 %207, 113336795588871485128704
  %209 = icmp eq i96 %208, 75557863725914323419136
  br i1 %209, label %355, label %210

210:                                              ; preds = %198
  %211 = bitcast %"class.blink::LayoutBox"* %203 to i1 (%"class.blink::LayoutBox"*)***
  %212 = add nsw i32 %202, 1
  %213 = call i32 @_ZNK5blink11LayoutBlock35MarginIntrinsicLogicalWidthForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %156, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %203) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #11
  store i32 0, i32* %158, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %159) #11
  store i32 0, i32* %160, align 4
  %214 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %211, align 8
  %215 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %214, i64 183
  %216 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %215, align 8
  %217 = call zeroext i1 %216(%"class.blink::LayoutBox"* nonnull %203) #11
  br i1 %217, label %218, label %219

218:                                              ; preds = %210
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %204, i32 1) #11
  br label %219

219:                                              ; preds = %218, %210
  call void @_ZNK5blink11LayoutBlock34ComputeChildPreferredLogicalWidthsERNS_12LayoutObjectERNS_10LayoutUnitES4_(%"class.blink::LayoutBlock"* %156, %"class.blink::LayoutObject"* dereferenceable(88) %204, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %5) #11
  %220 = load i32, i32* %158, align 4
  %221 = icmp slt i32 %213, 0
  %222 = select i1 %221, i32 -2147483648, i32 2147483647
  %223 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %220, i32 %213) #11
  %224 = extractvalue { i32, i1 } %223, 1
  %225 = extractvalue { i32, i1 } %223, 0
  %226 = select i1 %224, i32 %222, i32 %225, !prof !4
  store i32 %226, i32* %158, align 4
  %227 = load i32, i32* %160, align 4
  %228 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %227, i32 %213) #11
  %229 = extractvalue { i32, i1 } %228, 1
  %230 = extractvalue { i32, i1 } %228, 0
  %231 = select i1 %229, i32 %222, i32 %230, !prof !4
  store i32 %231, i32* %160, align 4
  %232 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %233 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %232, i64 0, i32 0, i32 9
  %234 = bitcast [20 x i8]* %233 to i160*
  %235 = load i160, i160* %234, align 8
  %236 = lshr i160 %235, 32
  %237 = trunc i160 %236 to i32
  %238 = and i32 %237, 30
  %239 = or i32 %238, 1
  %240 = icmp eq i32 %239, 15
  %241 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %232, i64 0, i32 0, i32 3, i32 0, i32 0
  %242 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %241, align 8
  br i1 %240, label %243, label %253

243:                                              ; preds = %219
  %244 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %242, i64 0, i32 2, i32 0, i32 0
  %245 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %244, align 8
  %246 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %245, i64 0, i32 13
  %247 = bitcast [3 x i8]* %246 to i24*
  %248 = load i24, i24* %247, align 8
  %249 = icmp slt i24 %248, 0
  br i1 %249, label %282, label %250

250:                                              ; preds = %243
  %251 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %242, i64 0, i32 12
  %252 = load i16, i16* %251, align 4
  br label %260

253:                                              ; preds = %219
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %242, i64 0, i32 12
  %255 = load i16, i16* %254, align 4
  %256 = lshr i16 %255, 5
  %257 = and i16 %256, 2
  %258 = or i16 %257, 1
  %259 = icmp eq i16 %258, 3
  br i1 %259, label %282, label %260

260:                                              ; preds = %250, %253
  %261 = phi i16 [ %252, %250 ], [ %255, %253 ]
  %262 = icmp slt i32 %231, 0
  %263 = select i1 %262, i32 -2147483648, i32 2147483647
  %264 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %200, i32 %231) #11
  %265 = extractvalue { i32, i1 } %264, 1
  %266 = extractvalue { i32, i1 } %264, 0
  %267 = select i1 %265, i32 %263, i32 %266, !prof !4
  store i32 %267, i32* %3, align 4
  %268 = and i16 %261, 384
  %269 = icmp eq i16 %268, 0
  br i1 %269, label %275, label %270

270:                                              ; preds = %260
  %271 = icmp slt i32 %199, %226
  %272 = select i1 %271, %"class.blink::LayoutUnit"* %4, %"class.blink::LayoutUnit"* %161
  %273 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %272, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  store i32 %274, i32* %2, align 8
  br label %291

275:                                              ; preds = %260
  %276 = icmp slt i32 %226, 0
  %277 = select i1 %276, i32 -2147483648, i32 2147483647
  %278 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %199, i32 %226) #11
  %279 = extractvalue { i32, i1 } %278, 1
  %280 = extractvalue { i32, i1 } %278, 0
  %281 = select i1 %279, i32 %277, i32 %280, !prof !4
  store i32 %281, i32* %2, align 8
  br label %291

282:                                              ; preds = %243, %253
  %283 = icmp slt i32 %226, %199
  %284 = select i1 %283, %"class.blink::LayoutUnit"* %161, %"class.blink::LayoutUnit"* %4
  %285 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %284, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  store i32 %286, i32* %2, align 8
  %287 = icmp slt i32 %231, %200
  %288 = select i1 %287, %"class.blink::LayoutUnit"* %162, %"class.blink::LayoutUnit"* %5
  %289 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %288, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  store i32 %290, i32* %3, align 4
  br label %291

291:                                              ; preds = %270, %275, %282
  %292 = phi i32 [ %274, %270 ], [ %281, %275 ], [ %286, %282 ]
  %293 = phi i32 [ %267, %270 ], [ %267, %275 ], [ %290, %282 ]
  br i1 %240, label %294, label %301

294:                                              ; preds = %291
  %295 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %242, i64 0, i32 2, i32 0, i32 0
  %296 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %295, align 8
  %297 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %296, i64 0, i32 13
  %298 = bitcast [3 x i8]* %297 to i24*
  %299 = load i24, i24* %298, align 8
  %300 = icmp slt i24 %299, 0
  br i1 %300, label %353, label %308

301:                                              ; preds = %291
  %302 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %242, i64 0, i32 12
  %303 = load i16, i16* %302, align 4
  %304 = lshr i16 %303, 5
  %305 = and i16 %304, 2
  %306 = or i16 %305, 1
  %307 = icmp eq i16 %306, 3
  br i1 %307, label %353, label %308

308:                                              ; preds = %301, %294
  %309 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %203, i64 0, i32 0, i32 0, i32 5, i32 0
  %310 = bitcast %"class.blink::ComputedStyle"** %309 to %"class.blink::ComputedStyleBase"**
  %311 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %310, align 8
  %312 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %311, i64 0, i32 3, i32 0, i32 0
  %313 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %312, align 8
  %314 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %313, i64 0, i32 2, i32 0, i32 0
  %315 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %314, align 8
  %316 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %313, i64 0, i32 8
  %317 = load float, float* %316, align 4
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %315, i64 0, i32 4, i32 2
  %319 = load i8, i8* %318, align 1
  %320 = icmp eq i8 %319, 0
  %321 = fcmp oeq float %317, 0.000000e+00
  %322 = or i1 %321, %320
  br i1 %322, label %353, label %323

323:                                              ; preds = %308
  %324 = fcmp ogt float %317, 1.000000e+00
  %325 = sitofp i32 %231 to float
  %326 = fmul float %325, 1.562500e-02
  %327 = select i1 %324, float %317, float 1.000000e+00
  %328 = fdiv float %326, %327
  %329 = fcmp une float %201, -1.000000e+00
  %330 = fcmp une float %328, %201
  %331 = and i1 %329, %330
  br i1 %331, label %332, label %353

332:                                              ; preds = %323
  %333 = load %"class.blink::Node"*, %"class.blink::Node"** %163, align 8
  %334 = icmp eq %"class.blink::Node"* %333, null
  br i1 %334, label %335, label %342

335:                                              ; preds = %332, %335
  %336 = phi %"class.blink::LayoutObject"* [ %338, %335 ], [ %8, %332 ]
  %337 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %336, i64 0, i32 7
  %338 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %337, align 8
  %339 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %338, i64 0, i32 6, i32 0, i32 0
  %340 = load %"class.blink::Node"*, %"class.blink::Node"** %339, align 8
  %341 = icmp eq %"class.blink::Node"* %340, null
  br i1 %341, label %335, label %342

342:                                              ; preds = %335, %332
  %343 = phi %"class.blink::Node"* [ %333, %332 ], [ %340, %335 ]
  %344 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %343, i64 0, i32 3, i32 0, i32 0
  %345 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %344, align 8
  %346 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %345, i64 0, i32 2, i32 0, i32 0
  %347 = load %"class.blink::Document"*, %"class.blink::Document"** %346, align 8
  %348 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %347, i64 0, i32 2
  %349 = bitcast %"class.blink::UseCounter"* %348 to void (%"class.blink::UseCounter"*, i32)***
  %350 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %349, align 8
  %351 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %350, i64 3
  %352 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %351, align 8
  call void %352(%"class.blink::UseCounter"* %348, i32 939) #11
  br label %353

353:                                              ; preds = %294, %301, %308, %323, %342
  %354 = phi float [ %201, %301 ], [ %201, %294 ], [ %201, %308 ], [ %328, %342 ], [ %328, %323 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %159) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #11
  br label %355

355:                                              ; preds = %198, %353
  %356 = phi i32 [ %199, %198 ], [ %292, %353 ]
  %357 = phi i32 [ %200, %198 ], [ %293, %353 ]
  %358 = phi i32 [ %202, %198 ], [ %212, %353 ]
  %359 = phi float [ %201, %198 ], [ %354, %353 ]
  %360 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %203, i64 0, i32 0, i32 0, i32 9
  %361 = bitcast %"class.blink::LayoutObject"** %360 to %"class.blink::LayoutBox"**
  %362 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %361, align 8
  %363 = icmp eq %"class.blink::LayoutBox"* %362, null
  br i1 %363, label %164, label %198

364:                                              ; preds = %193
  %365 = add nsw i32 %167, -1
  %366 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %11)
  %367 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %368 = call i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"* %367) #11
  %369 = zext i32 %368 to i64
  %370 = shl nuw i64 %369, 32
  %371 = zext i32 %366 to i64
  %372 = or i64 %370, %371
  %373 = call i32 @_ZN5blink19FlexLayoutAlgorithm15GapBetweenItemsERKNS_13ComputedStyleENS_11LogicalSizeE(%"class.blink::ComputedStyle"* dereferenceable(104) %168, i64 %372) #11
  %374 = icmp sgt i32 %365, 33554431
  %375 = shl i32 %365, 6
  %376 = select i1 %374, i32 2147483647, i32 %375
  %377 = sext i32 %376 to i64
  %378 = sext i32 %373 to i64
  %379 = mul nsw i64 %378, %377
  %380 = sdiv i64 %379, 64
  %381 = ashr i64 %380, 32
  %382 = trunc i64 %381 to i32
  %383 = trunc i64 %380 to i32
  %384 = ashr i32 %383, 31
  %385 = icmp eq i32 %384, %382
  br i1 %385, label %390, label %386

386:                                              ; preds = %364
  %387 = xor i32 %373, %376
  %388 = lshr i32 %387, 31
  %389 = add nuw i32 %388, 2147483647
  br label %390

390:                                              ; preds = %364, %386
  %391 = phi i32 [ %383, %364 ], [ %389, %386 ]
  %392 = icmp slt i32 %391, 0
  %393 = select i1 %392, i32 -2147483648, i32 2147483647
  %394 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %166, i32 %391) #11
  %395 = extractvalue { i32, i1 } %394, 1
  %396 = extractvalue { i32, i1 } %394, 0
  %397 = select i1 %395, i32 %393, i32 %396, !prof !4
  store i32 %397, i32* %3, align 4
  %398 = bitcast %"class.blink::ComputedStyle"** %29 to %"class.blink::ComputedStyleBase"**
  %399 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %398, align 8
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %399, i64 0, i32 3, i32 0, i32 0
  %401 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %400, align 8
  %402 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %401, i64 0, i32 12
  %403 = load i16, i16* %402, align 4
  %404 = and i16 %403, 384
  %405 = icmp eq i16 %404, 0
  br i1 %405, label %406, label %411

406:                                              ; preds = %390
  %407 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %165, i32 %391) #11
  %408 = extractvalue { i32, i1 } %407, 1
  %409 = extractvalue { i32, i1 } %407, 0
  %410 = select i1 %408, i32 %393, i32 %409, !prof !4
  store i32 %410, i32* %2, align 8
  br label %411

411:                                              ; preds = %390, %406, %193
  %412 = phi i32 [ %397, %390 ], [ %397, %406 ], [ %166, %193 ]
  %413 = phi i32 [ %165, %390 ], [ %410, %406 ], [ %165, %193 ]
  %414 = icmp slt i32 %413, %412
  %415 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %416 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %417 = select i1 %414, %"class.blink::LayoutUnit"* %415, %"class.blink::LayoutUnit"* %416
  %418 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %417, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  store i32 %419, i32* %3, align 4
  %420 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %420)
  store i32 0, i32* %6, align 4
  %421 = icmp sgt i32 %413, 0
  %422 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %423 = select i1 %421, %"class.blink::LayoutUnit"* %416, %"class.blink::LayoutUnit"* %422
  %424 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %423, i64 0, i32 0
  %425 = load i32, i32* %424, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %420)
  %426 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %426)
  store i32 0, i32* %7, align 4
  %427 = icmp sgt i32 %419, 0
  %428 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %429 = select i1 %427, %"class.blink::LayoutUnit"* %415, %"class.blink::LayoutUnit"* %428
  %430 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %429, i64 0, i32 0
  %431 = load i32, i32* %430, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %426)
  %432 = icmp slt i32 %425, 0
  %433 = select i1 %432, i32 -2147483648, i32 2147483647
  %434 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %425) #11
  %435 = extractvalue { i32, i1 } %434, 1
  %436 = extractvalue { i32, i1 } %434, 0
  %437 = select i1 %435, i32 %433, i32 %436, !prof !4
  %438 = icmp slt i32 %431, 0
  %439 = select i1 %438, i32 -2147483648, i32 2147483647
  %440 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %431) #11
  %441 = extractvalue { i32, i1 } %440, 1
  %442 = extractvalue { i32, i1 } %440, 0
  %443 = select i1 %441, i32 %439, i32 %442, !prof !4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144)
  br label %444

444:                                              ; preds = %137, %62, %62, %411, %82, %51
  %445 = phi i32 [ %58, %51 ], [ %28, %62 ], [ %68, %82 ], [ %28, %137 ], [ %437, %411 ], [ %28, %62 ]
  %446 = phi i32 [ %58, %51 ], [ %68, %62 ], [ %68, %82 ], [ %28, %137 ], [ %443, %411 ], [ %68, %62 ]
  %447 = zext i32 %446 to i64
  %448 = shl nuw i64 %447, 32
  %449 = zext i32 %445 to i64
  %450 = or i64 %448, %449
  ret i64 %450
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !5
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !5
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #11
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !8
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #11
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #11
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !4
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !11
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !11
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #11
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #11
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !4
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !14
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8, !noalias !14
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 0
  %112 = and i160 %109, 41538374868278621028243970633760768
  %113 = icmp eq i160 %112, 0
  %114 = select i1 %113, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %115 = select i1 %113, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %116 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %117 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %118 = extractvalue { i64, i64 } %116, 0
  %119 = extractvalue { i64, i64 } %117, 1
  %120 = getelementptr inbounds i8, i8* %7, i64 %119
  %121 = bitcast i8* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = and i64 %118, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %97
  %125 = bitcast i8* %120 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = add i64 %118, -1
  %128 = getelementptr i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, align 8
  br label %133

131:                                              ; preds = %97
  %132 = inttoptr i64 %118 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %130, %124 ], [ %132, %131 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %121) #11
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %135) #11
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !4
  ret i32 %141
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %86, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 0, i32 1) #11
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = extractvalue { i64, i64 } %47, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %72 [
    i8 0, label %59
    i8 1, label %65
    i8 3, label %65
    i8 2, label %68
  ]

59:                                               ; preds = %46
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = and i64 %48, 4294967295
  %63 = shl i64 %51, 32
  %64 = or i64 %63, %62
  br label %73

65:                                               ; preds = %46, %46
  %66 = and i64 %51, -4294967296
  %67 = or i64 %66, %50
  br label %73

68:                                               ; preds = %46
  %69 = lshr i64 %51, 32
  %70 = and i64 %48, -4294967296
  %71 = or i64 %70, %69
  br label %73

72:                                               ; preds = %46
  unreachable

73:                                               ; preds = %59, %65, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %65 ], [ %64, %59 ]
  %75 = phi i64 [ %51, %68 ], [ %51, %65 ], [ %50, %59 ]
  %76 = phi i32 [ %49, %68 ], [ %49, %65 ], [ %61, %59 ]
  %77 = trunc i64 %75 to i32
  %78 = and i160 %55, 41538374868278621028243970633760768
  %79 = icmp ne i160 %78, 0
  %80 = select i1 %79, i32 %76, i32 %77
  %81 = select i1 %79, i32 %77, i32 %76
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %81 to i64
  %85 = or i64 %83, %84
  br label %86

86:                                               ; preds = %39, %73
  %87 = phi i64 [ %74, %73 ], [ 0, %39 ]
  %88 = phi i64 [ %85, %73 ], [ 0, %39 ]
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %87, 1
  ret { i64, i64 } %90
}

declare i32 @_ZNK5blink9LayoutBox33DefaultIntrinsicContentInlineSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @_ZNK5blink11LayoutBlock35MarginIntrinsicLogicalWidthForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock34ComputeChildPreferredLogicalWidthsERNS_12LayoutObjectERNS_10LayoutUnitES4_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox12IsColumnFlowEv(%"class.blink::LayoutFlexibleBox"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = lshr i160 %6, 32
  %8 = trunc i160 %7 to i32
  %9 = and i32 %8, 30
  %10 = or i32 %9, 1
  %11 = icmp eq i32 %10, 15
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  br i1 %11, label %14, label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %16, i64 0, i32 13
  %18 = bitcast [3 x i8]* %17 to i24*
  %19 = load i24, i24* %18, align 8
  %20 = icmp slt i24 %19, 0
  br label %28

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 12
  %23 = load i16, i16* %22, align 4
  %24 = lshr i16 %23, 5
  %25 = and i16 %24, 2
  %26 = or i16 %25, 1
  %27 = icmp eq i16 %26, 3
  br label %28

28:                                               ; preds = %21, %14
  %29 = phi i1 [ %20, %14 ], [ %27, %21 ]
  ret i1 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox11IsMultilineEv(%"class.blink::LayoutFlexibleBox"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %6, i64 0, i32 12
  %8 = load i16, i16* %7, align 4
  %9 = and i16 %8, 384
  %10 = icmp ne i16 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink17LayoutFlexibleBox36CountIntrinsicSizeForAlgorithmChangeENS_10LayoutUnitEPNS_9LayoutBoxEf(%"class.blink::LayoutFlexibleBox"* nocapture readonly, i32, %"class.blink::LayoutBox"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = lshr i160 %10, 32
  %12 = trunc i160 %11 to i32
  %13 = and i32 %12, 30
  %14 = or i32 %13, 1
  %15 = icmp eq i32 %14, 15
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  br i1 %15, label %18, label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 13
  %22 = bitcast [3 x i8]* %21 to i24*
  %23 = load i24, i24* %22, align 8
  %24 = icmp slt i24 %23, 0
  br i1 %24, label %78, label %32

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %27 = load i16, i16* %26, align 4
  %28 = lshr i16 %27, 5
  %29 = and i16 %28, 2
  %30 = or i16 %29, 1
  %31 = icmp eq i16 %30, 3
  br i1 %31, label %78, label %32

32:                                               ; preds = %18, %25
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %34 = bitcast %"class.blink::ComputedStyle"** %33 to %"class.blink::ComputedStyleBase"**
  %35 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %35, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %37, i64 0, i32 8
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %39, i64 0, i32 4, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  %45 = fcmp oeq float %41, 0.000000e+00
  %46 = or i1 %45, %44
  br i1 %46, label %78, label %47

47:                                               ; preds = %32
  %48 = fcmp ogt float %41, 1.000000e+00
  %49 = sitofp i32 %1 to float
  %50 = fmul float %49, 1.562500e-02
  %51 = select i1 %48, float %41, float 1.000000e+00
  %52 = fdiv float %50, %51
  %53 = fcmp une float %3, -1.000000e+00
  %54 = fcmp une float %52, %3
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %78

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::LayoutObject"* [ %63, %60 ], [ %5, %56 ]
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 7
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 6, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %60, label %67

67:                                               ; preds = %60, %56
  %68 = phi %"class.blink::Node"* [ %58, %56 ], [ %65, %60 ]
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 3, i32 0, i32 0
  %70 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %70, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.blink::Document"*, %"class.blink::Document"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %72, i64 0, i32 2
  %74 = bitcast %"class.blink::UseCounter"* %73 to void (%"class.blink::UseCounter"*, i32)***
  %75 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %75, i64 3
  %77 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %76, align 8
  tail call void %77(%"class.blink::UseCounter"* %73, i32 939) #11
  br label %78

78:                                               ; preds = %32, %67, %47, %18, %25
  %79 = phi float [ %3, %25 ], [ %3, %18 ], [ %3, %32 ], [ %52, %67 ], [ %52, %47 ]
  ret float %79
}

declare i32 @_ZN5blink19FlexLayoutAlgorithm15GapBetweenItemsERKNS_13ComputedStyleENS_11LogicalSizeE(%"class.blink::ComputedStyle"* dereferenceable(104), i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #11
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #11
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #11
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !4
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #11
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #11
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #11
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #11
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #11
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !4
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #11
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #11
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox32SynthesizedBaselineFromBorderBoxERKNS_9LayoutBoxENS_17LineDirectionModeE(%"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #6 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %5 = bitcast %"class.blink::LayoutSize"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = lshr i64 %6, 32
  %8 = select i1 %3, i64 %7, i64 %6
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutFlexibleBox"*, i32, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 16777216
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %91

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %91, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %91

20:                                               ; preds = %15
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1, i32 2
  %25 = bitcast %"class.blink::Member.318"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %32, label %91

32:                                               ; preds = %20
  %33 = bitcast %"class.blink::Node"* %13 to %"class.blink::HTMLFormControlElement"*
  %34 = bitcast %"class.blink::Node"* %13 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %35 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %35, i64 171
  %37 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %36, align 8
  %38 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %37(%"class.blink::HTMLFormControlElement"* nonnull %33) #11
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRangeE, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %45, label %91

45:                                               ; preds = %32
  %46 = icmp eq i32 %3, 0
  %47 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %48 = bitcast %"class.blink::LayoutSize"* %47 to i64*
  %49 = load i64, i64* %48, align 4
  %50 = lshr i64 %49, 32
  %51 = select i1 %46, i64 %50, i64 %49
  %52 = trunc i64 %51 to i32
  %53 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %55 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %55, i64 0, i32 0, i32 9
  %57 = bitcast [20 x i8]* %56 to i160*
  %58 = load i160, i160* %57, align 8, !noalias !17
  %59 = lshr i160 %58, 102
  %60 = trunc i160 %59 to i8
  %61 = and i8 %60, 3
  %62 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i8*
  switch i8 %61, label %63 [
    i8 0, label %72
    i8 1, label %64
  ]

63:                                               ; preds = %45
  br label %64

64:                                               ; preds = %63, %45
  %65 = phi { i64, i64 } [ { i64 1033, i64 0 }, %63 ], [ { i64 1041, i64 0 }, %45 ]
  %66 = extractvalue { i64, i64 } %65, 0
  %67 = extractvalue { i64, i64 } %65, 1
  %68 = getelementptr inbounds i8, i8* %62, i64 %67
  %69 = bitcast i8* %68 to %"class.blink::LayoutBoxModelObject"*
  %70 = and i64 %66, 1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %64, %45
  %73 = phi %"class.blink::LayoutBoxModelObject"* [ %69, %64 ], [ %53, %45 ]
  %74 = phi i8* [ %68, %64 ], [ %62, %45 ]
  %75 = phi i64 [ %66, %64 ], [ 1017, %45 ]
  %76 = bitcast i8* %74 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = add i64 %75, -1
  %79 = getelementptr i8, i8* %77, i64 %78
  %80 = bitcast i8* %79 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %81 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %80, align 8
  br label %84

82:                                               ; preds = %64
  %83 = inttoptr i64 %66 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %84

84:                                               ; preds = %82, %72
  %85 = phi %"class.blink::LayoutBoxModelObject"* [ %73, %72 ], [ %69, %82 ]
  %86 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %81, %72 ], [ %83, %82 ]
  %87 = tail call i32 %86(%"class.blink::LayoutBoxModelObject"* %85) #11
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %87) #11
  br label %188

91:                                               ; preds = %20, %5, %11, %15, %32
  %92 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutFlexibleBox"*)***
  %93 = load i32 (%"class.blink::LayoutFlexibleBox"*)**, i32 (%"class.blink::LayoutFlexibleBox"*)*** %92, align 8
  %94 = getelementptr inbounds i32 (%"class.blink::LayoutFlexibleBox"*)*, i32 (%"class.blink::LayoutFlexibleBox"*)** %93, i64 180
  %95 = load i32 (%"class.blink::LayoutFlexibleBox"*)*, i32 (%"class.blink::LayoutFlexibleBox"*)** %94, align 8
  %96 = tail call i32 %95(%"class.blink::LayoutFlexibleBox"* %0) #11
  %97 = icmp eq i32 %96, -64
  br i1 %97, label %98, label %182

98:                                               ; preds = %91
  %99 = icmp eq i32 %3, 0
  %100 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %101 = bitcast %"class.blink::LayoutSize"* %100 to i64*
  %102 = load i64, i64* %101, align 4
  %103 = lshr i64 %102, 32
  %104 = select i1 %99, i64 %103, i64 %102
  %105 = trunc i64 %104 to i32
  %106 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %108 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %108, i64 0, i32 0, i32 9
  %110 = bitcast [20 x i8]* %109 to i160*
  %111 = load i160, i160* %110, align 8, !noalias !20
  %112 = lshr i160 %111, 102
  %113 = trunc i160 %112 to i8
  %114 = and i8 %113, 3
  %115 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i8*
  switch i8 %114, label %116 [
    i8 0, label %125
    i8 1, label %117
  ]

116:                                              ; preds = %98
  br label %117

117:                                              ; preds = %116, %98
  %118 = phi { i64, i64 } [ { i64 1033, i64 0 }, %116 ], [ { i64 1041, i64 0 }, %98 ]
  %119 = extractvalue { i64, i64 } %118, 0
  %120 = extractvalue { i64, i64 } %118, 1
  %121 = getelementptr inbounds i8, i8* %115, i64 %120
  %122 = bitcast i8* %121 to %"class.blink::LayoutBoxModelObject"*
  %123 = and i64 %119, 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %135, label %125

125:                                              ; preds = %117, %98
  %126 = phi %"class.blink::LayoutBoxModelObject"* [ %122, %117 ], [ %106, %98 ]
  %127 = phi i8* [ %121, %117 ], [ %115, %98 ]
  %128 = phi i64 [ %119, %117 ], [ 1017, %98 ]
  %129 = bitcast i8* %127 to i8**
  %130 = load i8*, i8** %129, align 8
  %131 = add i64 %128, -1
  %132 = getelementptr i8, i8* %130, i64 %131
  %133 = bitcast i8* %132 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %134 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %133, align 8
  br label %137

135:                                              ; preds = %117
  %136 = inttoptr i64 %119 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %137

137:                                              ; preds = %135, %125
  %138 = phi %"class.blink::LayoutBoxModelObject"* [ %126, %125 ], [ %122, %135 ]
  %139 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %134, %125 ], [ %136, %135 ]
  %140 = tail call i32 %139(%"class.blink::LayoutBoxModelObject"* %138) #11
  %141 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %107, align 8
  %142 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %141, i64 0, i32 0, i32 9
  %143 = bitcast [20 x i8]* %142 to i160*
  %144 = load i160, i160* %143, align 8, !noalias !23
  %145 = lshr i160 %144, 102
  %146 = trunc i160 %145 to i8
  %147 = and i8 %146, 3
  switch i8 %147, label %148 [
    i8 0, label %157
    i8 1, label %149
  ]

148:                                              ; preds = %137
  br label %149

149:                                              ; preds = %148, %137
  %150 = phi { i64, i64 } [ { i64 1041, i64 0 }, %148 ], [ { i64 1033, i64 0 }, %137 ]
  %151 = extractvalue { i64, i64 } %150, 0
  %152 = extractvalue { i64, i64 } %150, 1
  %153 = getelementptr inbounds i8, i8* %115, i64 %152
  %154 = bitcast i8* %153 to %"class.blink::LayoutBoxModelObject"*
  %155 = and i64 %151, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %167, label %157

157:                                              ; preds = %149, %137
  %158 = phi %"class.blink::LayoutBoxModelObject"* [ %154, %149 ], [ %106, %137 ]
  %159 = phi i8* [ %153, %149 ], [ %115, %137 ]
  %160 = phi i64 [ %151, %149 ], [ 1025, %137 ]
  %161 = bitcast i8* %159 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = add i64 %160, -1
  %164 = getelementptr i8, i8* %162, i64 %163
  %165 = bitcast i8* %164 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %166 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %165, align 8
  br label %169

167:                                              ; preds = %149
  %168 = inttoptr i64 %151 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %169

169:                                              ; preds = %157, %167
  %170 = phi %"class.blink::LayoutBoxModelObject"* [ %158, %157 ], [ %154, %167 ]
  %171 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %166, %157 ], [ %168, %167 ]
  %172 = tail call i32 %171(%"class.blink::LayoutBoxModelObject"* %170) #11
  %173 = icmp slt i32 %172, 0
  %174 = select i1 %173, i32 -2147483648, i32 2147483647
  %175 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %140, i32 %172) #11
  %176 = extractvalue { i32, i1 } %175, 1
  %177 = extractvalue { i32, i1 } %175, 0
  %178 = select i1 %176, i32 %174, i32 %177, !prof !4
  %179 = icmp slt i32 %178, 0
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %178) #11
  br label %188

182:                                              ; preds = %91
  %183 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %184 = tail call i32 @_ZNK5blink11LayoutBlock27BeforeMarginInLineDirectionENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %183, i32 %3) #11
  %185 = icmp slt i32 %96, 0
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %184, i32 %96) #11
  br label %188

188:                                              ; preds = %169, %182, %84
  %189 = phi { i32, i1 } [ %181, %169 ], [ %187, %182 ], [ %90, %84 ]
  %190 = phi i32 [ %180, %169 ], [ %186, %182 ], [ %89, %84 ]
  %191 = extractvalue { i32, i1 } %189, 1
  %192 = extractvalue { i32, i1 } %189, 0
  %193 = select i1 %191, i32 %190, i32 %192
  ret i32 %193
}

declare i32 @_ZNK5blink11LayoutBlock27BeforeMarginInLineDirectionENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox20FirstLineBoxBaselineEv(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %376, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = xor i160 %18, %12
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %22, label %376

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %376, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 45
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %80, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %39 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %38 to i96*
  %40 = load i96, i96* %39, align 4
  %41 = and i96 %40, 1207959552
  %42 = icmp eq i96 %41, 134217728
  br i1 %42, label %80, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, i64 92
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* %2, i32 43) #11
  br i1 %48, label %80, label %49

49:                                               ; preds = %43
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, i64 92
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::LayoutObject"* %2, i32 46) #11
  br i1 %53, label %74, label %54

54:                                               ; preds = %49
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %2, i32 48) #11
  br i1 %58, label %74, label %59

59:                                               ; preds = %54
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, i64 92
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::LayoutObject"* %2, i32 45) #11
  br i1 %63, label %74, label %64

64:                                               ; preds = %59
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* %2, i32 49) #11
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %70, i64 92
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::LayoutObject"* %2, i32 50) #11
  br i1 %73, label %74, label %376

74:                                               ; preds = %49, %54, %59, %64, %69
  %75 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %76 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %75, align 8
  %77 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %76, i64 24
  %78 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %77, align 8
  %79 = tail call zeroext i1 %78(%"class.blink::LayoutObject"* %2) #11
  br i1 %79, label %376, label %80

80:                                               ; preds = %37, %43, %26, %74
  %81 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4
  %82 = tail call %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator5FirstEv(%"class.blink::OrderIterator"* %81) #11
  %83 = icmp eq %"class.blink::LayoutBox"* %82, null
  br i1 %83, label %376, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %86 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %85 to i96*
  br label %87

87:                                               ; preds = %84, %160
  %88 = phi %"class.blink::LayoutBox"* [ null, %84 ], [ %162, %160 ]
  %89 = phi %"class.blink::LayoutBox"* [ %82, %84 ], [ %163, %160 ]
  %90 = phi i32 [ 0, %84 ], [ %161, %160 ]
  %91 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %89, i64 0, i32 0, i32 0, i32 4
  %92 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %91 to i96*
  %93 = load i96, i96* %92, align 4
  %94 = and i96 %93, 113336795588871485128704
  %95 = icmp eq i96 %94, 75557863725914323419136
  br i1 %95, label %160, label %96

96:                                               ; preds = %87
  %97 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %98 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %89, i64 0, i32 0, i32 0, i32 5, i32 0
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %98, align 8
  %100 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %97, %"class.blink::ComputedStyle"* dereferenceable(104) %99) #11
  %101 = icmp eq i32 %100, 4
  br i1 %101, label %102, label %154

102:                                              ; preds = %96
  %103 = load i96, i96* %86, align 4
  %104 = trunc i96 %103 to i32
  %105 = icmp slt i32 %104, 0
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8
  %110 = lshr i160 %109, 32
  %111 = trunc i160 %110 to i32
  %112 = and i32 %111, 30
  %113 = or i32 %112, 1
  %114 = icmp eq i32 %113, 15
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 3, i32 0, i32 0
  %116 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %115, align 8
  br i1 %114, label %117, label %124

117:                                              ; preds = %102
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %116, i64 0, i32 2, i32 0, i32 0
  %119 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %119, i64 0, i32 13
  %121 = bitcast [3 x i8]* %120 to i24*
  %122 = load i24, i24* %121, align 8
  %123 = icmp slt i24 %122, 0
  br label %131

124:                                              ; preds = %102
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %116, i64 0, i32 12
  %126 = load i16, i16* %125, align 4
  %127 = lshr i16 %126, 5
  %128 = and i16 %127, 2
  %129 = or i16 %128, 1
  %130 = icmp eq i16 %129, 3
  br label %131

131:                                              ; preds = %124, %117
  %132 = phi i1 [ %123, %117 ], [ %130, %124 ]
  %133 = xor i1 %105, %132
  %134 = bitcast %"class.blink::ComputedStyle"** %98 to %"class.blink::ComputedStyleBase"**
  %135 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %135, i64 0, i32 7, i32 0, i32 0
  %137 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %136, align 8
  br i1 %133, label %138, label %146

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %137, i64 0, i32 12, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %154, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %137, i64 0, i32 9, i32 2
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %154, label %178

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %137, i64 0, i32 10, i32 2
  %148 = load i8, i8* %147, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %137, i64 0, i32 11, i32 2
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %178

154:                                              ; preds = %146, %138, %142, %150, %96
  %155 = icmp eq %"class.blink::LayoutBox"* %88, null
  %156 = select i1 %155, %"class.blink::LayoutBox"* %89, %"class.blink::LayoutBox"* %88
  %157 = add nsw i32 %90, 1
  %158 = load i32, i32* %23, align 8
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %165, label %160

160:                                              ; preds = %154, %87
  %161 = phi i32 [ %90, %87 ], [ %157, %154 ]
  %162 = phi %"class.blink::LayoutBox"* [ %88, %87 ], [ %156, %154 ]
  %163 = tail call %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator4NextEv(%"class.blink::OrderIterator"* %81) #11
  %164 = icmp eq %"class.blink::LayoutBox"* %163, null
  br i1 %164, label %165, label %87

165:                                              ; preds = %160, %154
  %166 = phi %"class.blink::LayoutBox"* [ %162, %160 ], [ %156, %154 ]
  %167 = icmp eq %"class.blink::LayoutBox"* %166, null
  br i1 %167, label %376, label %168

168:                                              ; preds = %165
  %169 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %170 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %169, i64 0, i32 0, i32 9
  %171 = bitcast [20 x i8]* %170 to i160*
  %172 = load i160, i160* %171, align 8
  %173 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %169, i64 0, i32 0, i32 3, i32 0, i32 0
  %174 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %173, align 8
  %175 = lshr i160 %172, 32
  %176 = trunc i160 %175 to i32
  %177 = and i32 %176, 30
  br label %178

178:                                              ; preds = %142, %150, %168
  %179 = phi i32 [ %177, %168 ], [ %112, %150 ], [ %112, %142 ]
  %180 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %174, %168 ], [ %116, %150 ], [ %116, %142 ]
  %181 = phi %"class.blink::LayoutBox"* [ %166, %168 ], [ %89, %150 ], [ %89, %142 ]
  %182 = or i32 %179, 1
  %183 = icmp eq i32 %182, 15
  br i1 %183, label %184, label %191

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %180, i64 0, i32 2, i32 0, i32 0
  %186 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %186, i64 0, i32 13
  %188 = bitcast [3 x i8]* %187 to i24*
  %189 = load i24, i24* %188, align 8
  %190 = icmp slt i24 %189, 0
  br i1 %190, label %268, label %198

191:                                              ; preds = %178
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %180, i64 0, i32 12
  %193 = load i16, i16* %192, align 4
  %194 = lshr i16 %193, 5
  %195 = and i16 %194, 2
  %196 = or i16 %195, 1
  %197 = icmp eq i16 %196, 3
  br i1 %197, label %264, label %198

198:                                              ; preds = %191, %184
  %199 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %200 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %199 to i96*
  %201 = load i96, i96* %200, align 4
  %202 = trunc i96 %201 to i32
  %203 = icmp slt i32 %202, 0
  %204 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 0, i32 0, i32 4
  %205 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %204 to i96*
  %206 = load i96, i96* %205, align 4
  %207 = xor i96 %201, %206
  %208 = trunc i96 %207 to i32
  %209 = icmp sgt i32 %208, -1
  br i1 %209, label %251, label %210

210:                                              ; preds = %198
  br i1 %183, label %211, label %218

211:                                              ; preds = %210
  %212 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %180, i64 0, i32 2, i32 0, i32 0
  %213 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %213, i64 0, i32 13
  %215 = bitcast [3 x i8]* %214 to i24*
  %216 = load i24, i24* %215, align 8
  %217 = icmp slt i24 %216, 0
  br label %225

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %180, i64 0, i32 12
  %220 = load i16, i16* %219, align 4
  %221 = lshr i16 %220, 5
  %222 = and i16 %221, 2
  %223 = or i16 %222, 1
  %224 = icmp eq i16 %223, 3
  br label %225

225:                                              ; preds = %211, %218
  %226 = phi i1 [ %217, %211 ], [ %224, %218 ]
  %227 = xor i1 %203, %226
  %228 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 1
  %229 = bitcast %"class.blink::LayoutSize"* %228 to i64*
  %230 = load i64, i64* %229, align 4
  %231 = lshr i64 %230, 32
  %232 = select i1 %227, i64 %231, i64 %230
  %233 = trunc i64 %232 to i32
  %234 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 0, i32 0, i32 5, i32 0
  %235 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %235, i64 0, i32 0, i32 9
  %237 = bitcast [20 x i8]* %236 to i160*
  %238 = load i160, i160* %237, align 8
  %239 = and i160 %238, 15211807202738752817960438464512
  %240 = icmp eq i160 %239, 0
  %241 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 0, i32 1, i32 0
  %242 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 0, i32 0, i32 0
  %243 = select i1 %240, i32* %241, i32* %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp slt i32 %244, 0
  %246 = select i1 %245, i32 -2147483648, i32 2147483647
  %247 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %233, i32 %244) #11
  %248 = extractvalue { i32, i1 } %247, 1
  %249 = extractvalue { i32, i1 } %247, 0
  %250 = select i1 %248, i32 %246, i32 %249, !prof !4
  br label %376

251:                                              ; preds = %198
  br i1 %183, label %257, label %252

252:                                              ; preds = %251
  %253 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %180, i64 0, i32 12
  %254 = load i16, i16* %253, align 4
  %255 = lshr i16 %254, 5
  %256 = and i16 %255, 2
  br label %264

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %180, i64 0, i32 2, i32 0, i32 0
  %259 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %258, align 8
  %260 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %259, i64 0, i32 13
  %261 = bitcast [3 x i8]* %260 to i24*
  %262 = load i24, i24* %261, align 8
  %263 = icmp slt i24 %262, 0
  br i1 %263, label %268, label %322

264:                                              ; preds = %252, %191
  %265 = phi i16 [ %256, %252 ], [ %195, %191 ]
  %266 = or i16 %265, 1
  %267 = icmp eq i16 %266, 3
  br i1 %267, label %268, label %322

268:                                              ; preds = %264, %257, %184
  %269 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %270 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %269 to i96*
  %271 = load i96, i96* %270, align 4
  %272 = trunc i96 %271 to i32
  %273 = icmp slt i32 %272, 0
  %274 = xor i1 %273, true
  %275 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 0, i32 0, i32 4
  %276 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %275 to i96*
  %277 = load i96, i96* %276, align 4
  %278 = trunc i96 %277 to i32
  %279 = icmp sgt i32 %278, -1
  %280 = xor i1 %279, %274
  br i1 %280, label %281, label %322

281:                                              ; preds = %268
  br i1 %183, label %282, label %289

282:                                              ; preds = %281
  %283 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %180, i64 0, i32 2, i32 0, i32 0
  %284 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %284, i64 0, i32 13
  %286 = bitcast [3 x i8]* %285 to i24*
  %287 = load i24, i24* %286, align 8
  %288 = icmp slt i24 %287, 0
  br label %296

289:                                              ; preds = %281
  %290 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %180, i64 0, i32 12
  %291 = load i16, i16* %290, align 4
  %292 = lshr i16 %291, 5
  %293 = and i16 %292, 2
  %294 = or i16 %293, 1
  %295 = icmp eq i16 %294, 3
  br label %296

296:                                              ; preds = %282, %289
  %297 = phi i1 [ %288, %282 ], [ %295, %289 ]
  %298 = xor i1 %273, %297
  %299 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 1
  %300 = bitcast %"class.blink::LayoutSize"* %299 to i64*
  %301 = load i64, i64* %300, align 4
  %302 = lshr i64 %301, 32
  %303 = select i1 %298, i64 %301, i64 %302
  %304 = trunc i64 %303 to i32
  %305 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 0, i32 0, i32 5, i32 0
  %306 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %306, i64 0, i32 0, i32 9
  %308 = bitcast [20 x i8]* %307 to i160*
  %309 = load i160, i160* %308, align 8
  %310 = and i160 %309, 15211807202738752817960438464512
  %311 = icmp eq i160 %310, 0
  %312 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 0, i32 1, i32 0
  %313 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 0, i32 0, i32 0
  %314 = select i1 %311, i32* %312, i32* %313
  %315 = load i32, i32* %314, align 4
  %316 = icmp slt i32 %315, 0
  %317 = select i1 %316, i32 -2147483648, i32 2147483647
  %318 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %304, i32 %315) #11
  %319 = extractvalue { i32, i1 } %318, 1
  %320 = extractvalue { i32, i1 } %318, 0
  %321 = select i1 %319, i32 %317, i32 %320, !prof !4
  br label %376

322:                                              ; preds = %257, %268, %264
  %323 = bitcast %"class.blink::LayoutBox"* %181 to i32 (%"class.blink::LayoutBox"*)***
  %324 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %323, align 8
  %325 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %324, i64 180
  %326 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %325, align 8
  %327 = tail call i32 %326(%"class.blink::LayoutBox"* nonnull %181) #11
  %328 = icmp eq i32 %327, -64
  br i1 %328, label %329, label %358

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %331 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %330 to i96*
  %332 = load i96, i96* %331, align 4
  %333 = trunc i96 %332 to i32
  %334 = icmp slt i32 %333, 0
  %335 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 1
  %336 = bitcast %"class.blink::LayoutSize"* %335 to i64*
  %337 = load i64, i64* %336, align 4
  %338 = lshr i64 %337, 32
  %339 = select i1 %334, i64 %338, i64 %337
  %340 = trunc i64 %339 to i32
  %341 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 0, i32 0, i32 5, i32 0
  %342 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %341, align 8
  %343 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %342, i64 0, i32 0, i32 9
  %344 = bitcast [20 x i8]* %343 to i160*
  %345 = load i160, i160* %344, align 8
  %346 = and i160 %345, 15211807202738752817960438464512
  %347 = icmp eq i160 %346, 0
  %348 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 0, i32 1, i32 0
  %349 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 0, i32 0, i32 0
  %350 = select i1 %347, i32* %348, i32* %349
  %351 = load i32, i32* %350, align 4
  %352 = icmp slt i32 %351, 0
  %353 = select i1 %352, i32 -2147483648, i32 2147483647
  %354 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %340, i32 %351) #11
  %355 = extractvalue { i32, i1 } %354, 1
  %356 = extractvalue { i32, i1 } %354, 0
  %357 = select i1 %355, i32 %353, i32 %356, !prof !4
  br label %376

358:                                              ; preds = %322
  %359 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 0, i32 0, i32 5, i32 0
  %360 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %359, align 8
  %361 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %360, i64 0, i32 0, i32 9
  %362 = bitcast [20 x i8]* %361 to i160*
  %363 = load i160, i160* %362, align 8
  %364 = and i160 %363, 15211807202738752817960438464512
  %365 = icmp eq i160 %364, 0
  %366 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 0, i32 1, i32 0
  %367 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %181, i64 0, i32 2, i32 0, i32 0, i32 0
  %368 = select i1 %365, i32* %366, i32* %367
  %369 = load i32, i32* %368, align 4
  %370 = icmp slt i32 %369, 0
  %371 = select i1 %370, i32 -2147483648, i32 2147483647
  %372 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %327, i32 %369) #11
  %373 = extractvalue { i32, i1 } %372, 1
  %374 = extractvalue { i32, i1 } %372, 0
  %375 = select i1 %373, i32 %371, i32 %374, !prof !4
  br label %376

376:                                              ; preds = %80, %6, %69, %1, %329, %358, %165, %22, %74, %225, %296
  %377 = phi i32 [ %321, %296 ], [ %250, %225 ], [ -64, %74 ], [ -64, %22 ], [ -64, %6 ], [ -64, %165 ], [ %357, %329 ], [ %375, %358 ], [ -64, %1 ], [ -64, %69 ], [ -64, %80 ]
  ret i32 %377
}

declare %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator5FirstEv(%"class.blink::OrderIterator"*) local_unnamed_addr #1

declare i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox25HasAutoMarginsInCrossAxisERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %38 = bitcast %"class.blink::ComputedStyle"** %37 to %"class.blink::ComputedStyleBase"**
  %39 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %39, i64 0, i32 7, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %40, align 8
  br i1 %36, label %42, label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 12, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 9, i32 2
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br label %58

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 10, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 11, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br label %58

58:                                               ; preds = %50, %54, %42, %46
  %59 = phi i1 [ true, %42 ], [ %49, %46 ], [ true, %50 ], [ %57, %54 ]
  ret i1 %59
}

declare %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator4NextEv(%"class.blink::OrderIterator"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox20MainAxisIsInlineAxisERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = load i96, i96* %38, align 4
  %40 = trunc i96 %39 to i32
  %41 = icmp sgt i32 %40, -1
  %42 = xor i1 %36, %41
  ret i1 %42
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox23CrossAxisExtentForChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %38 = bitcast %"class.blink::LayoutSize"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = lshr i64 %39, 32
  %41 = select i1 %36, i64 %40, i64 %39
  %42 = trunc i64 %41 to i32
  ret i32 %42
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox22MainAxisExtentForChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %38 = bitcast %"class.blink::LayoutSize"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = lshr i64 %39, 32
  %41 = select i1 %36, i64 %39, i64 %40
  %42 = trunc i64 %41 to i32
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutFlexibleBox"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutFlexibleBox"*)***
  %4 = load i32 (%"class.blink::LayoutFlexibleBox"*)**, i32 (%"class.blink::LayoutFlexibleBox"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::LayoutFlexibleBox"*)*, i32 (%"class.blink::LayoutFlexibleBox"*)** %4, i64 180
  %6 = load i32 (%"class.blink::LayoutFlexibleBox"*)*, i32 (%"class.blink::LayoutFlexibleBox"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::LayoutFlexibleBox"* %0) #11
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox14HasTopOverflowEv(%"class.blink::LayoutFlexibleBox"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  br i1 %6, label %12, label %35

12:                                               ; preds = %1
  %13 = lshr i160 %11, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %30

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br i1 %26, label %27, label %63

27:                                               ; preds = %20
  %28 = and i160 %11, 324518553658426726783156020576256
  %29 = icmp ne i160 %28, 0
  br label %63

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %32 = load i16, i16* %31, align 4
  %33 = and i16 %32, 96
  %34 = icmp eq i16 %33, 96
  br label %63

35:                                               ; preds = %1
  %36 = and i160 %11, 41538374868278621028243970633760768
  %37 = icmp ne i160 %36, 0
  %38 = lshr i160 %11, 32
  %39 = trunc i160 %38 to i32
  %40 = and i32 %39, 30
  %41 = or i32 %40, 1
  %42 = icmp eq i32 %41, 15
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %43, align 8
  br i1 %42, label %45, label %55

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %44, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %47, i64 0, i32 13
  %49 = bitcast [3 x i8]* %48 to i24*
  %50 = load i24, i24* %49, align 8
  %51 = icmp sgt i24 %50, -1
  br i1 %51, label %52, label %60

52:                                               ; preds = %45
  %53 = and i160 %11, 324518553658426726783156020576256
  %54 = icmp ne i160 %53, 0
  br label %60

55:                                               ; preds = %35
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %44, i64 0, i32 12
  %57 = load i16, i16* %56, align 4
  %58 = and i16 %57, 96
  %59 = icmp eq i16 %58, 32
  br label %60

60:                                               ; preds = %45, %52, %55
  %61 = phi i1 [ %59, %55 ], [ false, %45 ], [ %54, %52 ]
  %62 = xor i1 %37, %61
  br label %63

63:                                               ; preds = %30, %27, %20, %60
  %64 = phi i1 [ %62, %60 ], [ %34, %30 ], [ false, %20 ], [ %29, %27 ]
  ret i1 %64
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox15HasLeftOverflowEv(%"class.blink::LayoutFlexibleBox"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  br i1 %6, label %12, label %40

12:                                               ; preds = %1
  %13 = and i160 %11, 41538374868278621028243970633760768
  %14 = icmp ne i160 %13, 0
  %15 = lshr i160 %11, 32
  %16 = trunc i160 %15 to i32
  %17 = and i32 %16, 30
  %18 = or i32 %17, 1
  %19 = icmp eq i32 %18, 15
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %20, align 8
  br i1 %19, label %22, label %32

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %24, i64 0, i32 13
  %26 = bitcast [3 x i8]* %25 to i24*
  %27 = load i24, i24* %26, align 8
  %28 = icmp sgt i24 %27, -1
  br i1 %28, label %29, label %37

29:                                               ; preds = %22
  %30 = and i160 %11, 324518553658426726783156020576256
  %31 = icmp ne i160 %30, 0
  br label %37

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 12
  %34 = load i16, i16* %33, align 4
  %35 = and i16 %34, 96
  %36 = icmp eq i16 %35, 32
  br label %37

37:                                               ; preds = %22, %29, %32
  %38 = phi i1 [ %36, %32 ], [ false, %22 ], [ %31, %29 ]
  %39 = xor i1 %14, %38
  br label %68

40:                                               ; preds = %1
  %41 = and i160 %11, 15211807202738752817960438464512
  %42 = icmp ne i160 %41, 10141204801825835211973625643008
  %43 = lshr i160 %11, 32
  %44 = trunc i160 %43 to i32
  %45 = and i32 %44, 30
  %46 = or i32 %45, 1
  %47 = icmp eq i32 %46, 15
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %48, align 8
  br i1 %47, label %50, label %60

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %49, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %52, i64 0, i32 13
  %54 = bitcast [3 x i8]* %53 to i24*
  %55 = load i24, i24* %54, align 8
  %56 = icmp slt i24 %55, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %50
  %58 = and i160 %11, 324518553658426726783156020576256
  %59 = icmp ne i160 %58, 0
  br label %65

60:                                               ; preds = %40
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %49, i64 0, i32 12
  %62 = load i16, i16* %61, align 4
  %63 = and i16 %62, 96
  %64 = icmp eq i16 %63, 96
  br label %65

65:                                               ; preds = %50, %57, %60
  %66 = phi i1 [ %64, %60 ], [ false, %50 ], [ %59, %57 ]
  %67 = xor i1 %42, %66
  br label %68

68:                                               ; preds = %65, %37
  %69 = phi i1 [ %39, %37 ], [ %67, %65 ]
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox23MergeAnonymousFlexItemsEPNS_12LayoutObjectE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutObject"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 8
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %160, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 16777216
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %160, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = lshr i160 %18, 32
  %20 = trunc i160 %19 to i32
  %21 = and i32 %20, 31
  switch i32 %21, label %160 [
    i32 1, label %22
    i32 14, label %22
  ]

22:                                               ; preds = %13, %13
  %23 = and i160 %18, 2113929216
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %25, label %160

25:                                               ; preds = %22
  %26 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*)***
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 23
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* nonnull %5) #11
  br i1 %30, label %31, label %160

31:                                               ; preds = %25
  %32 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %26, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, i64 25
  %34 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* nonnull %5) #11
  br i1 %35, label %160, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* nonnull %5, i32 20) #11
  br i1 %41, label %160, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 9
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutObject"* %44, null
  br i1 %45, label %160, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 4
  %48 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %47 to i96*
  %49 = load i96, i96* %48, align 4
  %50 = and i96 %49, 16777216
  %51 = icmp eq i96 %50, 0
  br i1 %51, label %160, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 5, i32 0
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8
  %58 = lshr i160 %57, 32
  %59 = trunc i160 %58 to i32
  %60 = and i32 %59, 31
  switch i32 %60, label %160 [
    i32 1, label %61
    i32 14, label %61
  ]

61:                                               ; preds = %52, %52
  %62 = and i160 %57, 2113929216
  %63 = icmp eq i160 %62, 0
  br i1 %63, label %64, label %160

64:                                               ; preds = %61
  %65 = bitcast %"class.blink::LayoutObject"* %44 to i1 (%"class.blink::LayoutObject"*)***
  %66 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %66, i64 23
  %68 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* nonnull %44) #11
  br i1 %69, label %70, label %160

70:                                               ; preds = %64
  %71 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %65, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %71, i64 25
  %73 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::LayoutObject"* nonnull %44) #11
  br i1 %74, label %160, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.blink::LayoutObject"* %44 to i1 (%"class.blink::LayoutObject"*, i32)***
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %77, i64 92
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, align 8
  %80 = tail call zeroext i1 %79(%"class.blink::LayoutObject"* nonnull %44, i32 20) #11
  br i1 %80, label %160, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::LayoutObject"* %44 to %"class.blink::LayoutBoxModelObject"*
  %83 = bitcast %"class.blink::LayoutObject"* %5 to %"class.blink::LayoutBoxModelObject"*
  %84 = bitcast %"class.blink::LayoutObject"* %44 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %85 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %84, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %85, i64 13
  %87 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %86, align 8
  %88 = tail call %"class.blink::LayoutObjectChildList"* %87(%"class.blink::LayoutObject"* nonnull %44) #11
  %89 = icmp eq %"class.blink::LayoutObjectChildList"* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %88, i64 0, i32 0
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  br label %93

93:                                               ; preds = %81, %90
  %94 = phi %"class.blink::LayoutObject"* [ %92, %90 ], [ null, %81 ]
  %95 = bitcast %"class.blink::LayoutObject"* %44 to void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)***
  %96 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %96, i64 144
  %98 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %97, align 8
  tail call void %98(%"class.blink::LayoutBoxModelObject"* nonnull %82, %"class.blink::LayoutBoxModelObject"* nonnull %83, %"class.blink::LayoutObject"* %94, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* null, i1 zeroext false) #11
  %99 = bitcast %"class.blink::LayoutObject"* %44 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow17DeleteLineBoxTreeEv(%"class.blink::LayoutBlockFlow"* nonnull %99) #11
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* nonnull %44) #11
  %100 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2
  %101 = bitcast %"class.blink::LayoutObject"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #11
  store %"class.blink::LayoutObject"* %44, %"class.blink::LayoutObject"** %3, align 8
  %102 = getelementptr inbounds %"class.WTF::HashMap.2292", %"class.WTF::HashMap.2292"* %100, i64 0, i32 0
  %103 = call { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2293"* %102, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %3) #11
  %104 = extractvalue { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } %103, 0
  %105 = getelementptr inbounds %"class.WTF::HashMap.2292", %"class.WTF::HashMap.2292"* %100, i64 0, i32 0, i32 0
  %106 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %106, i64 %109
  %111 = icmp eq %"struct.WTF::KeyValuePair.2296"* %110, %104
  br i1 %111, label %159, label %112

112:                                              ; preds = %93
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %104, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -1 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %113, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = add i32 %115, 1
  %117 = and i32 %116, 2147483647
  %118 = and i32 %115, -2147483648
  %119 = or i32 %117, %118
  store i32 %119, i32* %114, align 8
  %120 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, -1
  store i32 %122, i32* %120, align 4
  %123 = mul i32 %122, 6
  %124 = load i32, i32* %107, align 8
  %125 = icmp ult i32 %123, %124
  %126 = icmp ugt i32 %124, 8
  %127 = and i1 %125, %126
  br i1 %127, label %128, label %159

128:                                              ; preds = %112
  %129 = lshr i32 %124, 1
  %130 = zext i32 %129 to i64
  %131 = shl nuw nsw i64 %130, 4
  %132 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %131, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENS2_10LayoutUnitEEEEEPKcv, i64 0, i64 0)) #11
  %133 = bitcast i8* %132 to %"struct.WTF::KeyValuePair.2296"*
  %134 = icmp eq i32 %129, 0
  br i1 %134, label %157, label %135

135:                                              ; preds = %128
  %136 = and i64 %130, 1
  %137 = icmp eq i32 %129, 1
  br i1 %137, label %151, label %138

138:                                              ; preds = %135
  %139 = sub nsw i64 %130, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %148, %140 ]
  %142 = phi i64 [ %139, %138 ], [ %149, %140 ]
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %133, i64 %141, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %143, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %133, i64 %141, i32 1, i32 0
  store i32 0, i32* %144, align 8
  %145 = or i64 %141, 1
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %133, i64 %145, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %146, align 8
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %133, i64 %145, i32 1, i32 0
  store i32 0, i32* %147, align 8
  %148 = add nuw nsw i64 %141, 2
  %149 = add i64 %142, -2
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140

151:                                              ; preds = %140, %135
  %152 = phi i64 [ 0, %135 ], [ %148, %140 ]
  %153 = icmp eq i64 %136, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %133, i64 %152, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %155, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %133, i64 %152, i32 1, i32 0
  store i32 0, i32* %156, align 8
  br label %157

157:                                              ; preds = %154, %151, %128
  %158 = call %"struct.WTF::KeyValuePair.2296"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.2293"* %102, %"struct.WTF::KeyValuePair.2296"* %133, i32 %129, %"struct.WTF::KeyValuePair.2296"* null) #11
  br label %159

159:                                              ; preds = %93, %112, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #11
  br label %160

160:                                              ; preds = %75, %36, %52, %46, %61, %64, %70, %13, %7, %22, %25, %31, %159, %42, %2
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow17DeleteLineBoxTreeEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox11RemoveChildEPNS_12LayoutObjectE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutObject"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2, %8
  %9 = phi %"class.blink::LayoutObject"* [ %11, %8 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %2
  %16 = phi %"class.blink::Node"* [ %6, %2 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 5, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 19
  br i1 %23, label %49, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = lshr i160 %29, 32
  %31 = trunc i160 %30 to i32
  %32 = and i32 %31, 30
  %33 = or i32 %32, 1
  %34 = icmp eq i32 %33, 15
  br i1 %34, label %35, label %48

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %39, i64 0, i32 13
  %41 = bitcast [3 x i8]* %40 to i24*
  %42 = load i24, i24* %41, align 8
  %43 = icmp slt i24 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %39, i64 0, i32 10
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 1
  br i1 %47, label %49, label %48

48:                                               ; preds = %24, %44
  tail call void @_ZN5blink17LayoutFlexibleBox23MergeAnonymousFlexItemsEPNS_12LayoutObjectE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutObject"* %1)
  br label %49

49:                                               ; preds = %35, %48, %44, %15
  tail call void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1) #11
  %50 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2
  %51 = bitcast %"class.blink::LayoutObject"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %3, align 8
  %52 = getelementptr inbounds %"class.WTF::HashMap.2292", %"class.WTF::HashMap.2292"* %50, i64 0, i32 0
  %53 = call { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2293"* %52, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %3) #11
  %54 = extractvalue { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } %53, 0
  %55 = getelementptr inbounds %"class.WTF::HashMap.2292", %"class.WTF::HashMap.2292"* %50, i64 0, i32 0, i32 0
  %56 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %56, i64 %59
  %61 = icmp eq %"struct.WTF::KeyValuePair.2296"* %60, %54
  br i1 %61, label %109, label %62

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %54, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -1 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, 1
  %67 = and i32 %66, 2147483647
  %68 = and i32 %65, -2147483648
  %69 = or i32 %67, %68
  store i32 %69, i32* %64, align 8
  %70 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, -1
  store i32 %72, i32* %70, align 4
  %73 = mul i32 %72, 6
  %74 = load i32, i32* %57, align 8
  %75 = icmp ult i32 %73, %74
  %76 = icmp ugt i32 %74, 8
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %109

78:                                               ; preds = %62
  %79 = lshr i32 %74, 1
  %80 = zext i32 %79 to i64
  %81 = shl nuw nsw i64 %80, 4
  %82 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %81, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENS2_10LayoutUnitEEEEEPKcv, i64 0, i64 0)) #11
  %83 = bitcast i8* %82 to %"struct.WTF::KeyValuePair.2296"*
  %84 = icmp eq i32 %79, 0
  br i1 %84, label %107, label %85

85:                                               ; preds = %78
  %86 = and i64 %80, 1
  %87 = icmp eq i32 %79, 1
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = sub nsw i64 %80, %86
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi i64 [ 0, %88 ], [ %98, %90 ]
  %92 = phi i64 [ %89, %88 ], [ %99, %90 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %83, i64 %91, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %93, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %83, i64 %91, i32 1, i32 0
  store i32 0, i32* %94, align 8
  %95 = or i64 %91, 1
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %83, i64 %95, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %96, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %83, i64 %95, i32 1, i32 0
  store i32 0, i32* %97, align 8
  %98 = add nuw nsw i64 %91, 2
  %99 = add i64 %92, -2
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %90

101:                                              ; preds = %90, %85
  %102 = phi i64 [ 0, %85 ], [ %98, %90 ]
  %103 = icmp eq i64 %86, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %83, i64 %102, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %105, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %83, i64 %102, i32 1, i32 0
  store i32 0, i32* %106, align 8
  br label %107

107:                                              ; preds = %104, %101, %78
  %108 = call %"struct.WTF::KeyValuePair.2296"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.2293"* %52, %"struct.WTF::KeyValuePair.2296"* %83, i32 %79, %"struct.WTF::KeyValuePair.2296"* null) #11
  br label %109

109:                                              ; preds = %49, %62, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17LayoutFlexibleBox15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::PhysicalOffset"*
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = icmp eq i32 %4, 4
  br i1 %11, label %12, label %179

12:                                               ; preds = %5
  %13 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 8589934592
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %50, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = lshr i160 %28, 74
  %30 = trunc i160 %29 to i32
  %31 = and i32 %30, 7
  switch i32 %31, label %32 [
    i32 5, label %50
    i32 2, label %50
  ]

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %34 = tail call i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"* %33) #11
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %38 = icmp sgt i32 %35, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %15, i32 %35) #11
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !4
  %44 = icmp sgt i32 %37, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %17, i32 %37) #11
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !4
  br label %50

50:                                               ; preds = %23, %23, %12, %32
  %51 = phi i32 [ %43, %32 ], [ %15, %23 ], [ %15, %12 ], [ %15, %23 ]
  %52 = phi i32 [ %49, %32 ], [ %17, %23 ], [ %17, %12 ], [ %17, %23 ]
  %53 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %55 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %55, i64 13
  %57 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %56, align 8
  %58 = tail call %"class.blink::LayoutObjectChildList"* %57(%"class.blink::LayoutObject"* %10) #11
  %59 = icmp eq %"class.blink::LayoutObjectChildList"* %58, null
  br i1 %59, label %179, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %58, i64 0, i32 1
  %62 = bitcast %"class.blink::LayoutObject"** %61 to %"class.blink::LayoutBox"**
  %63 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %62, align 8
  %64 = icmp eq %"class.blink::LayoutBox"* %63, null
  br i1 %64, label %179, label %65

65:                                               ; preds = %60
  %66 = bitcast i64* %6 to i8*
  %67 = bitcast i64* %6 to i32*
  %68 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %7, i64 0, i32 1, i32 0
  %69 = icmp eq %"class.blink::LayoutFlexibleBox"* %0, null
  br label %70

70:                                               ; preds = %65, %144
  %71 = phi %"class.blink::LayoutBox"* [ %63, %65 ], [ %147, %144 ]
  %72 = bitcast %"class.blink::LayoutBox"* %71 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %73 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %71, i64 0, i32 0
  %74 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %73) #11
  br i1 %74, label %144, label %75

75:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  store i32 -1431655766, i32* %67, align 8
  store i32 -1431655766, i32* %68, align 4
  br i1 %69, label %76, label %82

76:                                               ; preds = %75
  %77 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %72, align 8
  %78 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %77, i64 147
  %79 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %78, align 8
  %80 = call %"class.blink::LayoutBox"* %79(%"class.blink::LayoutBox"* nonnull %71) #11
  %81 = icmp eq %"class.blink::LayoutBox"* %80, null
  br i1 %81, label %91, label %82

82:                                               ; preds = %76, %75
  %83 = phi %"class.blink::LayoutBox"* [ %80, %76 ], [ %53, %75 ]
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %83, i64 0, i32 0, i32 0, i32 5, i32 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = and i160 %88, 15211807202738752817960438464512
  %90 = icmp eq i160 %89, 5070602400912917605986812821504
  br i1 %90, label %96, label %91, !prof !4

91:                                               ; preds = %82, %76
  %92 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %71, i64 0, i32 2
  %93 = bitcast %"class.blink::LayoutRect"* %92 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = trunc i64 %94 to i32
  br label %121

96:                                               ; preds = %82
  %97 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %83, i64 0, i32 2, i32 1
  %98 = bitcast %"class.blink::LayoutSize"* %97 to i64*
  %99 = load i64, i64* %98, align 4
  %100 = trunc i64 %99 to i32
  %101 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %71, i64 0, i32 2, i32 1
  %102 = bitcast %"class.blink::LayoutSize"* %101 to i64*
  %103 = load i64, i64* %102, align 4
  %104 = trunc i64 %103 to i32
  %105 = icmp sgt i32 %104, -1
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %104) #11
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 %106, i32 %109, !prof !4
  %111 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %71, i64 0, i32 2
  %112 = bitcast %"class.blink::LayoutRect"* %111 to i64*
  %113 = load i64, i64* %112, align 4
  %114 = trunc i64 %113 to i32
  %115 = icmp sgt i32 %114, -1
  %116 = select i1 %115, i32 -2147483648, i32 2147483647
  %117 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %110, i32 %114) #11
  %118 = extractvalue { i32, i1 } %117, 1
  %119 = extractvalue { i32, i1 } %117, 0
  %120 = select i1 %118, i32 %116, i32 %119, !prof !4
  br label %121

121:                                              ; preds = %91, %96
  %122 = phi i32 [ %95, %91 ], [ %120, %96 ]
  %123 = phi i64 [ %94, %91 ], [ %113, %96 ]
  %124 = lshr i64 %123, 32
  %125 = trunc i64 %124 to i32
  %126 = icmp slt i32 %122, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %122) #11
  %129 = extractvalue { i32, i1 } %128, 1
  %130 = extractvalue { i32, i1 } %128, 0
  %131 = select i1 %129, i32 %127, i32 %130, !prof !4
  %132 = icmp slt i32 %125, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %125) #11
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !4
  %138 = zext i32 %137 to i64
  %139 = shl nuw i64 %138, 32
  %140 = zext i32 %131 to i64
  %141 = or i64 %139, %140
  store i64 %141, i64* %6, align 8
  %142 = call zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"* nonnull %71, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7, i32 0) #11
  br i1 %142, label %149, label %143

143:                                              ; preds = %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  br label %144

144:                                              ; preds = %143, %70
  %145 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %71, i64 0, i32 0, i32 0, i32 8
  %146 = bitcast %"class.blink::LayoutObject"** %145 to %"class.blink::LayoutBox"**
  %147 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %146, align 8
  %148 = icmp eq %"class.blink::LayoutBox"* %147, null
  br i1 %148, label %179, label %70

149:                                              ; preds = %121
  %150 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #11
  %151 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp sgt i32 %154, -1
  %156 = select i1 %155, i32 -2147483648, i32 2147483647
  %157 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %152, i32 %154) #11
  %158 = extractvalue { i32, i1 } %157, 1
  %159 = extractvalue { i32, i1 } %157, 0
  %160 = select i1 %158, i32 %156, i32 %159, !prof !4
  %161 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %164, -1
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %162, i32 %164) #11
  %168 = extractvalue { i32, i1 } %167, 1
  %169 = extractvalue { i32, i1 } %167, 0
  %170 = select i1 %168, i32 %166, i32 %169, !prof !4
  %171 = zext i32 %170 to i64
  %172 = shl nuw i64 %171, 32
  %173 = zext i32 %160 to i64
  %174 = or i64 %172, %173
  store i64 %174, i64* %8, align 8
  %175 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  %176 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %176, i64 62
  %178 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %177, align 8
  call void %178(%"class.blink::LayoutObject"* %10, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  br label %179

179:                                              ; preds = %144, %50, %60, %149, %5
  %180 = phi i1 [ false, %5 ], [ true, %149 ], [ false, %60 ], [ false, %50 ], [ false, %144 ]
  ret i1 %180
}

declare i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutFlexibleBox"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"* %4, i32 %1, %"class.blink::ComputedStyle"* %2) #11
  %5 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %5, label %65, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)***
  %9 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %9, i64 188
  %11 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %10, align 8
  %12 = tail call i32 %11(%"class.blink::LayoutBox"* %7, %"class.blink::LayoutBox"* null) #11
  %13 = tail call i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"* nonnull %2, i32 %12) #11
  %14 = and i32 %13, 15
  %15 = icmp eq i32 %14, 3
  %16 = and i32 %1, 6
  %17 = icmp eq i32 %16, 4
  %18 = and i1 %17, %15
  br i1 %18, label %19, label %65

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %22 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %22, i64 13
  %24 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %23, align 8
  %25 = tail call %"class.blink::LayoutObjectChildList"* %24(%"class.blink::LayoutObject"* %20) #11
  %26 = icmp eq %"class.blink::LayoutObjectChildList"* %25, null
  br i1 %26, label %65, label %27

27:                                               ; preds = %19
  %28 = bitcast %"class.blink::LayoutObjectChildList"* %25 to %"class.blink::LayoutBox"**
  %29 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutBox"* %29, null
  br i1 %30, label %65, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  br label %33

33:                                               ; preds = %31, %60
  %34 = phi %"class.blink::LayoutBox"* [ %29, %31 ], [ %63, %60 ]
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %34, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %34, i64 0, i32 0, i32 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*** %8, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %38, i64 188
  %40 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %39, align 8
  %41 = tail call i32 %40(%"class.blink::LayoutBox"* %7, %"class.blink::LayoutBox"* null) #11
  %42 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %37, i32 %41, %"class.blink::ComputedStyle"* nonnull %2) #11
  %43 = and i32 %42, 15
  %44 = icmp eq i32 %43, 3
  br i1 %44, label %45, label %60

45:                                               ; preds = %33
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %47 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*** %8, align 8
  %48 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %47, i64 188
  %49 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %48, align 8
  %50 = tail call i32 %49(%"class.blink::LayoutBox"* %7, %"class.blink::LayoutBox"* null) #11
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %52 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %46, i32 %50, %"class.blink::ComputedStyle"* %51) #11
  %53 = and i32 %52, 15
  %54 = icmp eq i32 %53, 3
  br i1 %54, label %60, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %34, i64 0, i32 0, i32 0, i32 4
  %57 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %56 to i96*
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %35, i32 1) #11
  %58 = load i96, i96* %57, align 4
  %59 = or i96 %58, 1180591620717411303432
  store i96 %59, i96* %57, align 4
  br label %60

60:                                               ; preds = %33, %45, %55
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %34, i64 0, i32 0, i32 0, i32 9
  %62 = bitcast %"class.blink::LayoutObject"** %61 to %"class.blink::LayoutBox"**
  %63 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %62, align 8
  %64 = icmp eq %"class.blink::LayoutBox"* %63, null
  br i1 %64, label %65, label %33

65:                                               ; preds = %60, %19, %27, %3, %6
  ret void
}

declare void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle18ResolvedAlignItemsENS_12ItemPositionE(%"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"*, i32, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox17UpdateBlockLayoutEb(%"class.blink::LayoutFlexibleBox"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %4 = alloca %"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope", align 1
  %5 = alloca %"class.blink::TextAutosizer::LayoutScope", align 8
  %6 = alloca %"class.blink::LayoutState", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %1, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %10 = tail call zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"* %9) #11
  br i1 %10, label %149, label %11

11:                                               ; preds = %8, %2
  %12 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.WTF::HashSet.2297", %"class.WTF::HashSet.2297"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"class.blink::LayoutObject"** %14 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #11
  %19 = bitcast %"class.WTF::HashSet.2297"* %12 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store i32 0, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0, i32 2
  store i32 0, i32* %20, align 4
  br label %21

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 7
  %23 = load i8, i8* %22, align 1, !range !3
  store i8 1, i8* %22, align 1
  %24 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %25 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i1 (%"class.blink::LayoutBlock"*)***
  %26 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %26, i64 211
  %28 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutBlock"* %24) #11
  %30 = or i1 %29, %1
  %31 = bitcast %"class.blink::SubtreeLayoutScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %32, align 8
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %7) #11
  %33 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 15211807202738752817960438464512
  %40 = icmp eq i160 %39, 0
  %41 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %42 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %43 = select i1 %40, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %46 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %45)
  %47 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %33)
  %48 = extractvalue { i64, i64 } %47, 1
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = trunc i64 %50 to i32
  %52 = icmp slt i32 %51, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %51) #11
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !4
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %57) #11
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !4
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = and i160 %67, 15211807202738752817960438464512
  %69 = icmp eq i160 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %21
  %71 = load i32, i32* %41, align 4
  %72 = icmp eq i32 %71, %63
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  store i32 %63, i32* %41, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %33) #11
  br label %78

74:                                               ; preds = %21
  %75 = load i32, i32* %42, align 4
  %76 = icmp eq i32 %75, %63
  br i1 %76, label %78, label %77

77:                                               ; preds = %74
  store i32 %63, i32* %42, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %33) #11
  br label %78

78:                                               ; preds = %70, %73, %74, %77
  %79 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope", %"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %79) #11
  store i8 -86, i8* %79, align 1
  call void @_ZN5blink24PaintLayerScrollableArea27DelayScrollOffsetClampScopeC1Ev(%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"* nonnull %4) #11
  %80 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #11
  %81 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  call void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"* nonnull %5, %"class.blink::LayoutBlock"* %24, %"class.blink::SubtreeLayoutScope"* nonnull %3) #11
  %82 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %82) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 56, i1 false)
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %6, %"class.blink::LayoutBox"* dereferenceable(216) %33, i1 zeroext false) #11
  %83 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 5
  store i32 -1, i32* %83, align 8
  call void @_ZN5blink17LayoutFlexibleBox30PrepareOrderIteratorAndMarginsEv(%"class.blink::LayoutFlexibleBox"* %0)
  call void @_ZN5blink17LayoutFlexibleBox15LayoutFlexItemsEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutFlexibleBox"* %0, i1 zeroext %30, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %3)
  %84 = load i32, i32* @_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScope6count_E, align 4
  %85 = icmp eq i32 %84, 0
  %86 = load i8, i8* @_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScope16relayout_needed_E, align 1
  %87 = and i8 %86, 1
  %88 = icmp ne i8 %87, 0
  %89 = and i1 %85, %88
  br i1 %89, label %90, label %99

90:                                               ; preds = %78
  %91 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %25, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %91, i64 211
  %93 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.blink::LayoutBlock"* %24) #11
  %95 = load i32, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  call void @_ZN5blink17LayoutFlexibleBox30PrepareOrderIteratorAndMarginsEv(%"class.blink::LayoutFlexibleBox"* %0)
  call void @_ZN5blink17LayoutFlexibleBox15LayoutFlexItemsEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutFlexibleBox"* %0, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %3)
  call void @_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScope19ResetRelayoutNeededEv() #11
  %97 = load i32, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  %98 = add nsw i32 %97, -1
  store i32 %98, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  br label %99

99:                                               ; preds = %90, %78
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8
  %104 = and i160 %103, 15211807202738752817960438464512
  %105 = icmp eq i160 %104, 0
  %106 = select i1 %105, i32* %41, i32* %42
  %107 = load i32, i32* %106, align 4
  %108 = icmp ne i32 %107, %44
  %109 = or i1 %30, %108
  br i1 %109, label %131, label %110

110:                                              ; preds = %99
  %111 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %114, label %121

114:                                              ; preds = %110, %114
  %115 = phi %"class.blink::LayoutObject"* [ %117, %114 ], [ %7, %110 ]
  %116 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 7
  %117 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %117, i64 0, i32 6, i32 0, i32 0
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %118, align 8
  %120 = icmp eq %"class.blink::Node"* %119, null
  br i1 %120, label %114, label %121

121:                                              ; preds = %114, %110
  %122 = phi %"class.blink::Node"* [ %112, %110 ], [ %119, %114 ]
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %122, i64 0, i32 3, i32 0, i32 0
  %124 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %124, i64 0, i32 2, i32 0, i32 0
  %126 = load %"class.blink::Document"*, %"class.blink::Document"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %126, i64 0, i32 47, i32 0, i32 0
  %128 = load %"class.blink::Element"*, %"class.blink::Element"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %128, i64 0, i32 0, i32 0
  %130 = icmp eq %"class.blink::Node"* %129, %112
  br label %131

131:                                              ; preds = %99, %121
  %132 = phi i1 [ true, %99 ], [ %130, %121 ]
  %133 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to void (%"class.blink::LayoutBlock"*, i1, i32)***
  %134 = load void (%"class.blink::LayoutBlock"*, i1, i32)**, void (%"class.blink::LayoutBlock"*, i1, i32)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i1, i32)*, void (%"class.blink::LayoutBlock"*, i1, i32)** %134, i64 199
  %136 = load void (%"class.blink::LayoutBlock"*, i1, i32)*, void (%"class.blink::LayoutBlock"*, i1, i32)** %135, align 8
  call void %136(%"class.blink::LayoutBlock"* %24, i1 zeroext %132, i32 0) #11
  %137 = call i32 @_ZN5blink17LayoutFlexibleBox37ClientLogicalBottomAfterRepositioningEv(%"class.blink::LayoutFlexibleBox"* %0)
  %138 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to void (%"class.blink::LayoutBlock"*, i32, i1)***
  %139 = load void (%"class.blink::LayoutBlock"*, i32, i1)**, void (%"class.blink::LayoutBlock"*, i32, i1)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i32, i1)*, void (%"class.blink::LayoutBlock"*, i32, i1)** %139, i64 207
  %141 = load void (%"class.blink::LayoutBlock"*, i32, i1)*, void (%"class.blink::LayoutBlock"*, i32, i1)** %140, align 8
  call void %141(%"class.blink::LayoutBlock"* %24, i32 %137, i1 zeroext false) #11
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %82) #11
  call void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  %142 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  store i32 2, i32* %142, align 4
  %143 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to void (%"class.blink::LayoutBlock"*)***
  %144 = load void (%"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %144, i64 151
  %146 = load void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %145, align 8
  call void %146(%"class.blink::LayoutBlock"* %24) #11
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %7)
  call void @_ZN5blink24PaintLayerScrollableArea27DelayScrollOffsetClampScopeD1Ev(%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %79) #11
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %147 = icmp eq i8* %22, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %131
  store i8 %23, i8* %22, align 1
  br label %149

149:                                              ; preds = %148, %131, %8
  ret void
}

declare zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i16 %7, 240
  %15 = icmp ne i16 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %49, label %17

17:                                               ; preds = %10, %1
  %18 = and i16 %7, 3584
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i16 %7, 3840
  %25 = icmp ne i16 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %20, %17
  %28 = icmp ult i16 %7, 8192
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29, %27
  %34 = and i16 %7, 14
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = and i16 %7, 15
  %41 = icmp ne i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 89202980794122492566142873090593446023921664
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %196, label %49

49:                                               ; preds = %43, %36, %20, %10, %29
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8, !noalias !26
  %53 = lshr i160 %52, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %55, label %57 [
    i8 0, label %66
    i8 1, label %58
  ]

57:                                               ; preds = %49
  br label %58

58:                                               ; preds = %57, %49
  %59 = phi { i64, i64 } [ { i64 993, i64 0 }, %57 ], [ { i64 1001, i64 0 }, %49 ]
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %58, %49
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %58 ], [ %0, %49 ]
  %68 = phi i8* [ %62, %58 ], [ %56, %49 ]
  %69 = phi i64 [ %60, %58 ], [ 977, %49 ]
  %70 = bitcast i8* %68 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = add i64 %69, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  br label %78

76:                                               ; preds = %58
  %77 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %78

78:                                               ; preds = %76, %66
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %66 ], [ %63, %76 ]
  %80 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %75, %66 ], [ %77, %76 ]
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %79) #11
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !29
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !29
  %86 = lshr i160 %85, 102
  %87 = trunc i160 %86 to i8
  %88 = and i8 %87, 3
  switch i8 %88, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %78
  br label %90

90:                                               ; preds = %89, %78
  %91 = phi { i64, i64 } [ { i64 961, i64 0 }, %89 ], [ { i64 969, i64 0 }, %78 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %56, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %78
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %0, %78 ]
  %100 = phi i8* [ %94, %90 ], [ %56, %78 ]
  %101 = phi i64 [ %92, %90 ], [ 945, %78 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %98, %108
  %111 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %112 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %111) #11
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #11
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !4
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !32
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !32
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %110
  br label %128

128:                                              ; preds = %127, %110
  %129 = phi { i64, i64 } [ { i64 1001, i64 0 }, %127 ], [ { i64 993, i64 0 }, %110 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %56, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %110
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %0, %110 ]
  %138 = phi i8* [ %132, %128 ], [ %56, %110 ]
  %139 = phi i64 [ %130, %128 ], [ 985, %110 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #11
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !35
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8, !noalias !35
  %156 = lshr i160 %155, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  switch i8 %158, label %159 [
    i8 0, label %168
    i8 1, label %160
  ]

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi { i64, i64 } [ { i64 969, i64 0 }, %159 ], [ { i64 961, i64 0 }, %148 ]
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  %164 = getelementptr inbounds i8, i8* %56, i64 %163
  %165 = bitcast i8* %164 to %"class.blink::LayoutBoxModelObject"*
  %166 = and i64 %162, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %148
  %169 = phi %"class.blink::LayoutBoxModelObject"* [ %165, %160 ], [ %0, %148 ]
  %170 = phi i8* [ %164, %160 ], [ %56, %148 ]
  %171 = phi i64 [ %162, %160 ], [ 953, %148 ]
  %172 = bitcast i8* %170 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = add i64 %171, -1
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = bitcast i8* %175 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %177 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %176, align 8
  br label %180

178:                                              ; preds = %160
  %179 = inttoptr i64 %162 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %180

180:                                              ; preds = %168, %178
  %181 = phi %"class.blink::LayoutBoxModelObject"* [ %169, %168 ], [ %165, %178 ]
  %182 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %177, %168 ], [ %179, %178 ]
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %181) #11
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %183) #11
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !4
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %189) #11
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !4
  br label %196

196:                                              ; preds = %43, %180
  %197 = phi i32 [ %195, %180 ], [ 0, %43 ]
  ret i32 %197
}

declare void @_ZN5blink24PaintLayerScrollableArea27DelayScrollOffsetClampScopeC1Ev(%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"*) unnamed_addr #1

declare void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"*, %"class.blink::LayoutBlock"*, %"class.blink::SubtreeLayoutScope"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"*, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox30PrepareOrderIteratorAndMarginsEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OrderIteratorPopulator", align 8
  %3 = bitcast %"class.blink::OrderIteratorPopulator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::OrderIteratorPopulator", %"class.blink::OrderIteratorPopulator"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4
  store %"class.blink::OrderIterator"* %5, %"class.blink::OrderIterator"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4, i32 2
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4, i32 2, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.2301"* %7, %"class.std::__1::__tree_node"* %10) #11
  %11 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %17 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %17, i64 13
  %19 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %18, align 8
  %20 = tail call %"class.blink::LayoutObjectChildList"* %19(%"class.blink::LayoutObject"* %15) #11
  %21 = icmp eq %"class.blink::LayoutObjectChildList"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %1
  %23 = bitcast %"class.blink::LayoutObjectChildList"* %20 to %"class.blink::LayoutBox"**
  %24 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutBox"* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %167, %1, %22
  call void @_ZN5blink22OrderIteratorPopulatorD1Ev(%"class.blink::OrderIteratorPopulator"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret void

27:                                               ; preds = %22, %167
  %28 = phi %"class.blink::LayoutBox"* [ %170, %167 ], [ %24, %22 ]
  call void @_ZN5blink22OrderIteratorPopulator12CollectChildEPKNS_9LayoutBoxE(%"class.blink::OrderIteratorPopulator"* nonnull %2, %"class.blink::LayoutBox"* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 113336795588871485128704
  %33 = icmp eq i96 %32, 75557863725914323419136
  br i1 %33, label %167, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0, i32 5, i32 0
  %36 = bitcast %"class.blink::ComputedStyle"** %35 to %"class.blink::ComputedStyleBase"**
  %37 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %37, i64 0, i32 7, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 12
  %41 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %14) #11
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 12, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 2
  br i1 %44, label %45, label %66, !prof !2

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 12, i32 3
  %47 = load i8, i8* %46, align 2, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.blink::Length"* %40 to float*
  %51 = load float, float* %50, align 4
  br label %56

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %40, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  br label %56

56:                                               ; preds = %52, %49
  %57 = phi float [ %51, %49 ], [ %55, %52 ]
  %58 = fmul float %57, 6.400000e+01
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  br label %68

66:                                               ; preds = %34
  %67 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %40, i32 %41) #11
  br label %68

68:                                               ; preds = %56, %66
  %69 = phi i32 [ %65, %56 ], [ %67, %66 ]
  %70 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 1, i32 0, i32 0
  store i32 %69, i32* %70, align 4
  %71 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %38, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %71, i64 0, i32 11
  %73 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %14) #11
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %71, i64 0, i32 11, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 2
  br i1 %76, label %77, label %98, !prof !2

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %71, i64 0, i32 11, i32 3
  %79 = load i8, i8* %78, align 2, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.blink::Length"* %72 to float*
  %83 = load float, float* %82, align 4
  br label %88

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %72, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = sitofp i32 %86 to float
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi float [ %83, %81 ], [ %87, %84 ]
  %90 = fmul float %89, 6.400000e+01
  %91 = fcmp ult float %90, 0xC1E0000000000000
  %92 = fcmp ugt float %90, 0x41DFFFFFE0000000
  %93 = fcmp ogt float %90, 0xC1E0000000000000
  %94 = select i1 %93, float %90, float 0xC1E0000000000000
  %95 = fptosi float %94 to i32
  %96 = select i1 %91, i32 0, i32 2147483647
  %97 = select i1 %92, i32 %96, i32 %95
  br label %100

98:                                               ; preds = %68
  %99 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %72, i32 %73) #11
  br label %100

100:                                              ; preds = %88, %98
  %101 = phi i32 [ %97, %88 ], [ %99, %98 ]
  %102 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 1, i32 1, i32 0
  store i32 %101, i32* %102, align 4
  %103 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %38, align 8
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 9
  %105 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %14) #11
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 9, i32 2
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 2
  br i1 %108, label %109, label %130, !prof !2

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 9, i32 3
  %111 = load i8, i8* %110, align 2, !range !3
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.blink::Length"* %104 to float*
  %115 = load float, float* %114, align 4
  br label %120

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %104, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = sitofp i32 %118 to float
  br label %120

120:                                              ; preds = %116, %113
  %121 = phi float [ %115, %113 ], [ %119, %116 ]
  %122 = fmul float %121, 6.400000e+01
  %123 = fcmp ult float %122, 0xC1E0000000000000
  %124 = fcmp ugt float %122, 0x41DFFFFFE0000000
  %125 = fcmp ogt float %122, 0xC1E0000000000000
  %126 = select i1 %125, float %122, float 0xC1E0000000000000
  %127 = fptosi float %126 to i32
  %128 = select i1 %123, i32 0, i32 2147483647
  %129 = select i1 %124, i32 %128, i32 %127
  br label %132

130:                                              ; preds = %100
  %131 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %104, i32 %105) #11
  br label %132

132:                                              ; preds = %120, %130
  %133 = phi i32 [ %129, %120 ], [ %131, %130 ]
  %134 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 1, i32 2, i32 0
  store i32 %133, i32* %134, align 4
  %135 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %38, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %135, i64 0, i32 10
  %137 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %14) #11
  %138 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %135, i64 0, i32 10, i32 2
  %139 = load i8, i8* %138, align 1
  %140 = icmp eq i8 %139, 2
  br i1 %140, label %141, label %162, !prof !2

141:                                              ; preds = %132
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %135, i64 0, i32 10, i32 3
  %143 = load i8, i8* %142, align 2, !range !3
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %141
  %146 = bitcast %"class.blink::Length"* %136 to float*
  %147 = load float, float* %146, align 4
  br label %152

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %136, i64 0, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = sitofp i32 %150 to float
  br label %152

152:                                              ; preds = %148, %145
  %153 = phi float [ %147, %145 ], [ %151, %148 ]
  %154 = fmul float %153, 6.400000e+01
  %155 = fcmp ult float %154, 0xC1E0000000000000
  %156 = fcmp ugt float %154, 0x41DFFFFFE0000000
  %157 = fcmp ogt float %154, 0xC1E0000000000000
  %158 = select i1 %157, float %154, float 0xC1E0000000000000
  %159 = fptosi float %158 to i32
  %160 = select i1 %155, i32 0, i32 2147483647
  %161 = select i1 %156, i32 %160, i32 %159
  br label %164

162:                                              ; preds = %132
  %163 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %136, i32 %137) #11
  br label %164

164:                                              ; preds = %152, %162
  %165 = phi i32 [ %161, %152 ], [ %163, %162 ]
  %166 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 1, i32 3, i32 0
  store i32 %165, i32* %166, align 4
  br label %167

167:                                              ; preds = %27, %164
  %168 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0, i32 9
  %169 = bitcast %"class.blink::LayoutObject"** %168 to %"class.blink::LayoutBox"**
  %170 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %169, align 8
  %171 = icmp eq %"class.blink::LayoutBox"* %170, null
  br i1 %171, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox15LayoutFlexItemsEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutFlexibleBox"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PaintLayerScrollableArea::PreventRelayoutScope", align 1
  %5 = alloca %"class.blink::FlexLayoutAlgorithm", align 8
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea::PreventRelayoutScope", %"class.blink::PaintLayerScrollableArea::PreventRelayoutScope"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 -86, i8* %7, align 1
  call void @_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScopeC1ERNS_18SubtreeLayoutScopeE(%"class.blink::PaintLayerScrollableArea::PreventRelayoutScope"* nonnull %4, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %2) #11
  %8 = zext i1 %1 to i32
  %9 = call i32 @_ZN5blink17LayoutFlexibleBox21MainAxisContentExtentENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, i32 2147483647)
  %10 = bitcast %"class.blink::FlexLayoutAlgorithm"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1216, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 1216, i1 false)
  %11 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %14 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %13)
  %15 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %16 = call i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"* %15) #11
  %17 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %20, label %29

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %20, %22
  %23 = phi %"class.blink::LayoutObject"* [ %25, %22 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 7
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %22, label %29

29:                                               ; preds = %22, %3
  %30 = phi %"class.blink::Node"* [ %18, %3 ], [ %27, %22 ]
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = zext i32 %16 to i64
  %36 = shl nuw i64 %35, 32
  %37 = zext i32 %14 to i64
  %38 = or i64 %36, %37
  call void @_ZN5blink19FlexLayoutAlgorithmC1EPKNS_13ComputedStyleENS_10LayoutUnitENS_11LogicalSizeEPNS_8DocumentE(%"class.blink::FlexLayoutAlgorithm"* nonnull %5, %"class.blink::ComputedStyle"* %12, i32 %9, i64 %38, %"class.blink::Document"* %34) #11
  %39 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4
  %40 = call %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator5FirstEv(%"class.blink::OrderIterator"* %39) #11
  %41 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4, i32 1
  %42 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, align 8
  %43 = icmp eq %"class.blink::LayoutBox"* %42, null
  br i1 %43, label %44, label %75

44:                                               ; preds = %84, %29
  %45 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  store i32 2, i32* %45, align 4
  %46 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  store i32 -1431655766, i32* %47, align 4
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %49 = call i32 @_ZN5blink19FlexLayoutAlgorithm25GetTransformedWritingModeERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %48) #11
  switch i32 %49, label %58 [
    i32 0, label %50
    i32 3, label %52
    i32 2, label %54
    i32 1, label %56
  ]

50:                                               ; preds = %44
  %51 = call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %13) #11
  br label %59

52:                                               ; preds = %44
  %53 = call i32 @_ZNK5blink17LayoutFlexibleBox18ContentInsetBottomEv(%"class.blink::LayoutFlexibleBox"* %0) #11
  br label %59

54:                                               ; preds = %44
  %55 = call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %13) #11
  br label %59

56:                                               ; preds = %44
  %57 = call i32 @_ZNK5blink17LayoutFlexibleBox17ContentInsetRightEv(%"class.blink::LayoutFlexibleBox"* %0) #11
  br label %59

58:                                               ; preds = %44
  unreachable

59:                                               ; preds = %50, %52, %54, %56
  %60 = phi i32 [ %57, %56 ], [ %55, %54 ], [ %53, %52 ], [ %51, %50 ]
  store i32 %60, i32* %47, align 4
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 9
  %63 = bitcast [20 x i8]* %62 to i160*
  %64 = load i160, i160* %63, align 8
  %65 = and i160 %64, 15211807202738752817960438464512
  %66 = icmp eq i160 %65, 0
  %67 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %69 = select i1 %66, i32* %67, i32* %68
  %70 = load i32, i32* %69, align 4
  %71 = call %"class.blink::FlexLine"* @_ZN5blink19FlexLayoutAlgorithm19ComputeNextFlexLineENS_10LayoutUnitE(%"class.blink::FlexLayoutAlgorithm"* nonnull %5, i32 %70) #11
  %72 = icmp eq %"class.blink::FlexLine"* %71, null
  br i1 %72, label %109, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 5
  br label %87

75:                                               ; preds = %29, %84
  %76 = phi %"class.blink::LayoutBox"* [ %85, %84 ], [ %42, %29 ]
  %77 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %76, i64 0, i32 0, i32 0, i32 4
  %78 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %77 to i96*
  %79 = load i96, i96* %78, align 4
  %80 = and i96 %79, 113336795588871485128704
  %81 = icmp eq i96 %80, 75557863725914323419136
  br i1 %81, label %82, label %83

82:                                               ; preds = %75
  call void @_ZN5blink17LayoutFlexibleBox31PrepareChildForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %76)
  br label %84

83:                                               ; preds = %75
  call void @_ZN5blink17LayoutFlexibleBox26ConstructAndAppendFlexItemEPNS_19FlexLayoutAlgorithmERNS_9LayoutBoxENS0_15ChildLayoutTypeE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexLayoutAlgorithm"* nonnull %5, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %76, i32 %8)
  br label %84

84:                                               ; preds = %83, %82
  %85 = call %"class.blink::LayoutBox"* @_ZN5blink13OrderIterator4NextEv(%"class.blink::OrderIterator"* %39) #11
  %86 = icmp eq %"class.blink::LayoutBox"* %85, null
  br i1 %86, label %44, label %75

87:                                               ; preds = %73, %106
  %88 = phi %"class.blink::FlexLine"* [ %71, %73 ], [ %107, %106 ]
  %89 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %88, i64 0, i32 7, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = call i32 @_ZN5blink17LayoutFlexibleBox21MainAxisContentExtentENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, i32 %90)
  %92 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %88, i64 0, i32 8, i32 0
  store i32 %91, i32* %92, align 4
  call void @_ZN5blink8FlexLine21FreezeInflexibleItemsEv(%"class.blink::FlexLine"* nonnull %88) #11
  br label %93

93:                                               ; preds = %93, %87
  %94 = call zeroext i1 @_ZN5blink8FlexLine22ResolveFlexibleLengthsEv(%"class.blink::FlexLine"* nonnull %88) #11
  br i1 %94, label %95, label %93

95:                                               ; preds = %93
  call void @_ZN5blink17LayoutFlexibleBox15LayoutLineItemsEPNS_8FlexLineEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexLine"* nonnull %88, i1 zeroext %1, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %2)
  %96 = call i32 @_ZNK5blink17LayoutFlexibleBox26FlowAwareContentInsetStartEv(%"class.blink::LayoutFlexibleBox"* %0)
  %97 = call i32 @_ZNK5blink17LayoutFlexibleBox24FlowAwareContentInsetEndEv(%"class.blink::LayoutFlexibleBox"* %0)
  call void @_ZN5blink8FlexLine24ComputeLineItemsPositionENS_10LayoutUnitES1_RS1_(%"class.blink::FlexLine"* nonnull %88, i32 %96, i32 %97, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %6) #11
  call void @_ZN5blink17LayoutFlexibleBox22ApplyLineItemsPositionEPNS_8FlexLineE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexLine"* nonnull %88)
  %98 = load i32, i32* %74, align 8
  %99 = icmp eq i32 %98, -1
  br i1 %99, label %100, label %106

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %88, i64 0, i32 1, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %88, i64 0, i32 1, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = sub i32 %102, %104
  store i32 %105, i32* %74, align 8
  br label %106

106:                                              ; preds = %100, %95
  %107 = call %"class.blink::FlexLine"* @_ZN5blink19FlexLayoutAlgorithm19ComputeNextFlexLineENS_10LayoutUnitE(%"class.blink::FlexLayoutAlgorithm"* nonnull %5, i32 %70) #11
  %108 = icmp eq %"class.blink::FlexLine"* %107, null
  br i1 %108, label %109, label %87

109:                                              ; preds = %106, %59
  %110 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i1 (%"class.blink::LayoutBlock"*)***
  %111 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %110, align 8
  %112 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %111, i64 202
  %113 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %112, align 8
  %114 = call zeroext i1 %113(%"class.blink::LayoutBlock"* %15) #11
  br i1 %114, label %115, label %173

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %117 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %116) #11
  %118 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %13) #11
  %119 = extractvalue { i64, i64 } %118, 1
  %120 = trunc i64 %119 to i32
  %121 = lshr i64 %119, 32
  %122 = trunc i64 %121 to i32
  %123 = icmp slt i32 %122, 0
  %124 = select i1 %123, i32 -2147483648, i32 2147483647
  %125 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %120, i32 %122) #11
  %126 = extractvalue { i32, i1 } %125, 1
  %127 = extractvalue { i32, i1 } %125, 0
  %128 = select i1 %126, i32 %124, i32 %127, !prof !4
  %129 = icmp slt i32 %128, 0
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %128) #11
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !4
  %135 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %136 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %135 to i96*
  %137 = load i96, i96* %136, align 4
  %138 = trunc i96 %137 to i32
  %139 = lshr i32 %138, 31
  %140 = xor i32 %139, 1
  %141 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutBox"*, i1, i32, i32)***
  %142 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*** %141, align 8
  %143 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %142, i64 133
  %144 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %143, align 8
  %145 = call i32 %144(%"class.blink::LayoutBox"* %13, i1 zeroext true, i32 %140, i32 1) #11
  %146 = icmp slt i32 %145, 0
  %147 = select i1 %146, i32 -2147483648, i32 2147483647
  %148 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %145) #11
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 %147, i32 %150, !prof !4
  %152 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %153 = bitcast %"class.blink::LayoutSize"* %152 to i64*
  %154 = load i64, i64* %153, align 4
  %155 = lshr i64 %154, 32
  %156 = trunc i64 %155 to i32
  %157 = icmp sgt i32 %151, %156
  %158 = trunc i64 %154 to i32
  br i1 %157, label %159, label %173

159:                                              ; preds = %115
  %160 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %160, i64 0, i32 0, i32 9
  %162 = bitcast [20 x i8]* %161 to i160*
  %163 = load i160, i160* %162, align 8
  %164 = and i160 %163, 15211807202738752817960438464512
  %165 = icmp eq i160 %164, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %159
  %167 = load i32, i32* %68, align 4
  %168 = icmp eq i32 %167, %151
  br i1 %168, label %173, label %169

169:                                              ; preds = %166
  store i32 %151, i32* %68, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %13) #11
  br label %173

170:                                              ; preds = %159
  %171 = icmp eq i32 %151, %158
  br i1 %171, label %173, label %172

172:                                              ; preds = %170
  store i32 %151, i32* %67, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %13) #11
  br label %173

173:                                              ; preds = %115, %166, %169, %170, %172, %109
  %174 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %175 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %174, i64 0, i32 0, i32 9
  %176 = bitcast [20 x i8]* %175 to i160*
  %177 = load i160, i160* %176, align 8
  %178 = lshr i160 %177, 32
  %179 = trunc i160 %178 to i32
  %180 = and i32 %179, 30
  %181 = or i32 %180, 1
  %182 = icmp eq i32 %181, 15
  %183 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %174, i64 0, i32 0, i32 3, i32 0, i32 0
  %184 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %183, align 8
  br i1 %182, label %185, label %192

185:                                              ; preds = %173
  %186 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %184, i64 0, i32 2, i32 0, i32 0
  %187 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %187, i64 0, i32 13
  %189 = bitcast [3 x i8]* %188 to i24*
  %190 = load i24, i24* %189, align 8
  %191 = icmp slt i24 %190, 0
  br i1 %191, label %241, label %199

192:                                              ; preds = %173
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %184, i64 0, i32 12
  %194 = load i16, i16* %193, align 4
  %195 = lshr i16 %194, 5
  %196 = and i16 %195, 2
  %197 = or i16 %196, 1
  %198 = icmp eq i16 %197, 3
  br i1 %198, label %241, label %199

199:                                              ; preds = %185, %192
  %200 = and i160 %177, 15211807202738752817960438464512
  %201 = icmp eq i160 %200, 0
  %202 = select i1 %201, i32* %68, i32* %67
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %5, i64 0, i32 5, i32 0, i32 0, i32 2
  %205 = load i32, i32* %204, align 4
  %206 = add i32 %205, -1
  %207 = icmp ugt i32 %206, 33554430
  %208 = shl i32 %206, 6
  %209 = select i1 %207, i32 2147483647, i32 %208
  %210 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %5, i64 0, i32 1, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = sext i32 %211 to i64
  %213 = sext i32 %209 to i64
  %214 = mul nsw i64 %213, %212
  %215 = sdiv i64 %214, 64
  %216 = ashr i64 %215, 32
  %217 = trunc i64 %216 to i32
  %218 = trunc i64 %215 to i32
  %219 = ashr i32 %218, 31
  %220 = icmp eq i32 %219, %217
  br i1 %220, label %225, label %221

221:                                              ; preds = %199
  %222 = xor i32 %209, %211
  %223 = lshr i32 %222, 31
  %224 = add nuw i32 %223, 2147483647
  br label %225

225:                                              ; preds = %199, %221
  %226 = phi i32 [ %218, %199 ], [ %224, %221 ]
  %227 = icmp slt i32 %226, 0
  %228 = select i1 %227, i32 -2147483648, i32 2147483647
  %229 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %203, i32 %226) #11
  %230 = extractvalue { i32, i1 } %229, 1
  %231 = extractvalue { i32, i1 } %229, 0
  %232 = select i1 %230, i32 %228, i32 %231, !prof !4
  br i1 %201, label %233, label %237

233:                                              ; preds = %225
  %234 = load i32, i32* %68, align 4
  %235 = icmp eq i32 %234, %232
  br i1 %235, label %241, label %236

236:                                              ; preds = %233
  store i32 %232, i32* %68, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %13) #11
  br label %241

237:                                              ; preds = %225
  %238 = load i32, i32* %67, align 4
  %239 = icmp eq i32 %238, %232
  br i1 %239, label %241, label %240

240:                                              ; preds = %237
  store i32 %232, i32* %67, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %13) #11
  br label %241

241:                                              ; preds = %240, %237, %236, %233, %185, %192
  call void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"* %13) #11
  %242 = call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %13) #11
  br i1 %242, label %272, label %243

243:                                              ; preds = %241
  %244 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %245 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %244, i64 0, i32 0, i32 9
  %246 = bitcast [20 x i8]* %245 to i160*
  %247 = load i160, i160* %246, align 8
  %248 = lshr i160 %247, 32
  %249 = trunc i160 %248 to i32
  %250 = and i32 %249, 30
  %251 = or i32 %250, 1
  %252 = icmp eq i32 %251, 15
  %253 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %244, i64 0, i32 0, i32 3, i32 0, i32 0
  %254 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %253, align 8
  br i1 %252, label %255, label %262

255:                                              ; preds = %243
  %256 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %254, i64 0, i32 2, i32 0, i32 0
  %257 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %257, i64 0, i32 13
  %259 = bitcast [3 x i8]* %258 to i24*
  %260 = load i24, i24* %259, align 8
  %261 = icmp slt i24 %260, 0
  br i1 %261, label %269, label %272

262:                                              ; preds = %243
  %263 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %254, i64 0, i32 12
  %264 = load i16, i16* %263, align 4
  %265 = lshr i16 %264, 5
  %266 = and i16 %265, 2
  %267 = or i16 %266, 1
  %268 = icmp eq i16 %267, 3
  br i1 %268, label %269, label %272

269:                                              ; preds = %255, %262
  %270 = call i32 @_ZNK5blink19FlexLayoutAlgorithm25IntrinsicContentBlockSizeEv(%"class.blink::FlexLayoutAlgorithm"* nonnull %5) #11
  %271 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  store i32 %270, i32* %271, align 8
  br label %272

272:                                              ; preds = %255, %269, %262, %241
  call void @_ZN5blink17LayoutFlexibleBox41RepositionLogicalHeightDependentFlexItemsERNS_19FlexLayoutAlgorithmE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexLayoutAlgorithm"* nonnull dereferenceable(1216) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #11
  %273 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %5, i64 0, i32 5, i32 0, i32 0, i32 0
  %274 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %273, align 8
  %275 = icmp eq %"class.blink::FlexLine"* %274, null
  %276 = bitcast %"class.blink::FlexLine"* %274 to i8*
  br i1 %275, label %283, label %277, !prof !2

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %5, i64 0, i32 5, i32 0, i32 0, i32 2
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %282, label %281, !prof !4

281:                                              ; preds = %277
  store i32 0, i32* %278, align 4
  br label %282

282:                                              ; preds = %281, %277
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %276) #11
  store %"class.blink::FlexLine"* null, %"class.blink::FlexLine"** %273, align 8
  br label %283

283:                                              ; preds = %282, %272
  %284 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %5, i64 0, i32 4
  %285 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %5, i64 0, i32 4, i32 0, i32 0, i32 2
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %284, i64 0, i32 0, i32 0, i32 0
  br i1 %287, label %309, label %289, !prof !4

289:                                              ; preds = %283
  %290 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %288, align 8
  %291 = zext i32 %286 to i64
  %292 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %290, i64 %291
  br label %293

293:                                              ; preds = %305, %289
  %294 = phi %"class.blink::FlexItem"* [ %306, %305 ], [ %290, %289 ]
  %295 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %294, i64 0, i32 20, i32 0
  %296 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %295, align 8
  %297 = icmp eq %"class.blink::NGLayoutResult"* %296, null
  br i1 %297, label %305, label %298

298:                                              ; preds = %293
  %299 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %296, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %299) #11
  %300 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %296, i64 0, i32 0, i32 0, i32 0, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %298
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %296) #11
  %304 = bitcast %"class.blink::NGLayoutResult"* %296 to i8*
  call void @free(i8* %304) #11
  br label %305

305:                                              ; preds = %303, %298, %293
  %306 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %294, i64 1
  %307 = icmp eq %"class.blink::FlexItem"* %306, %292
  br i1 %307, label %308, label %293

308:                                              ; preds = %305
  store i32 0, i32* %285, align 4
  br label %309

309:                                              ; preds = %308, %283
  %310 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %288, align 8
  %311 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %5, i64 0, i32 4, i32 0, i32 1, i64 0
  %312 = bitcast i8* %311 to %"class.blink::FlexItem"*
  %313 = icmp eq %"class.blink::FlexItem"* %310, %312
  br i1 %313, label %316, label %314, !prof !2

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %284, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2357"* %315, %"class.blink::FlexItem"* %310) #11
  br label %316

316:                                              ; preds = %309, %314
  call void @llvm.lifetime.end.p0i8(i64 1216, i8* nonnull %10) #11
  call void @_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScopeD1Ev(%"class.blink::PaintLayerScrollableArea::PreventRelayoutScope"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  ret void
}

declare void @_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScope19ResetRelayoutNeededEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox37ClientLogicalBottomAfterRepositioningEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %5, i64 13
  %7 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %6, align 8
  %8 = tail call %"class.blink::LayoutObjectChildList"* %7(%"class.blink::LayoutObject"* %3) #11
  %9 = icmp eq %"class.blink::LayoutObjectChildList"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::LayoutObjectChildList"* %8 to %"class.blink::LayoutBox"**
  %12 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, align 8
  %13 = icmp eq %"class.blink::LayoutBox"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  br label %64

18:                                               ; preds = %140, %1, %10
  %19 = phi i32 [ 0, %10 ], [ 0, %1 ], [ %141, %140 ]
  %20 = tail call i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"* %2)
  %21 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8, !noalias !38
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8, !noalias !38
  %27 = lshr i160 %26, 102
  %28 = trunc i160 %27 to i8
  %29 = and i8 %28, 3
  %30 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i8*
  switch i8 %29, label %31 [
    i8 0, label %40
    i8 1, label %32
  ]

31:                                               ; preds = %18
  br label %32

32:                                               ; preds = %31, %18
  %33 = phi { i64, i64 } [ { i64 969, i64 0 }, %31 ], [ { i64 961, i64 0 }, %18 ]
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = extractvalue { i64, i64 } %33, 1
  %36 = getelementptr inbounds i8, i8* %30, i64 %35
  %37 = bitcast i8* %36 to %"class.blink::LayoutBoxModelObject"*
  %38 = and i64 %34, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %32, %18
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %37, %32 ], [ %21, %18 ]
  %42 = phi i8* [ %36, %32 ], [ %30, %18 ]
  %43 = phi i64 [ %34, %32 ], [ 953, %18 ]
  %44 = bitcast i8* %42 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = add i64 %43, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = bitcast i8* %47 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %49 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %48, align 8
  br label %52

50:                                               ; preds = %32
  %51 = inttoptr i64 %34 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %52

52:                                               ; preds = %40, %50
  %53 = phi %"class.blink::LayoutBoxModelObject"* [ %41, %40 ], [ %37, %50 ]
  %54 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %49, %40 ], [ %51, %50 ]
  %55 = tail call i32 %54(%"class.blink::LayoutBoxModelObject"* %53) #11
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %55) #11
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !4
  %62 = icmp slt i32 %20, %61
  %63 = select i1 %62, i32 %61, i32 %20
  ret i32 %63

64:                                               ; preds = %14, %140
  %65 = phi i32 [ 0, %14 ], [ %141, %140 ]
  %66 = phi %"class.blink::LayoutBox"* [ %12, %14 ], [ %144, %140 ]
  %67 = bitcast %"class.blink::LayoutBox"* %66 to i8*
  %68 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 0, i32 0, i32 4
  %69 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %68 to i96*
  %70 = load i96, i96* %69, align 4
  %71 = and i96 %70, 113336795588871485128704
  %72 = icmp eq i96 %71, 75557863725914323419136
  br i1 %72, label %140, label %73

73:                                               ; preds = %64
  %74 = load i96, i96* %16, align 4
  %75 = trunc i96 %74 to i32
  %76 = icmp slt i32 %75, 0
  %77 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 2
  %78 = bitcast %"class.blink::LayoutRect"* %77 to i64*
  %79 = load i64, i64* %78, align 4
  %80 = lshr i64 %79, 32
  %81 = select i1 %76, i64 %80, i64 %79
  %82 = trunc i64 %81 to i32
  %83 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 2, i32 1
  %84 = bitcast %"class.blink::LayoutSize"* %83 to i64*
  %85 = load i64, i64* %84, align 4
  %86 = lshr i64 %85, 32
  %87 = select i1 %76, i64 %86, i64 %85
  %88 = trunc i64 %87 to i32
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %88) #11
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !4
  %95 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 0
  %96 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %97 = icmp eq %"class.blink::ComputedStyle"* %96, null
  %98 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 0, i32 0, i32 5, i32 0
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %98, align 8
  %100 = select i1 %97, %"class.blink::ComputedStyle"* %99, %"class.blink::ComputedStyle"* %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8, !noalias !41
  %104 = lshr i160 %103, 102
  %105 = trunc i160 %104 to i8
  %106 = and i8 %105, 3
  switch i8 %106, label %107 [
    i8 0, label %116
    i8 1, label %108
  ]

107:                                              ; preds = %73
  br label %108

108:                                              ; preds = %107, %73
  %109 = phi { i64, i64 } [ { i64 1041, i64 0 }, %107 ], [ { i64 1033, i64 0 }, %73 ]
  %110 = extractvalue { i64, i64 } %109, 0
  %111 = extractvalue { i64, i64 } %109, 1
  %112 = getelementptr inbounds i8, i8* %67, i64 %111
  %113 = bitcast i8* %112 to %"class.blink::LayoutBoxModelObject"*
  %114 = and i64 %110, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %126, label %116

116:                                              ; preds = %108, %73
  %117 = phi %"class.blink::LayoutBoxModelObject"* [ %113, %108 ], [ %95, %73 ]
  %118 = phi i8* [ %112, %108 ], [ %67, %73 ]
  %119 = phi i64 [ %110, %108 ], [ 1025, %73 ]
  %120 = bitcast i8* %118 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = add i64 %119, -1
  %123 = getelementptr i8, i8* %121, i64 %122
  %124 = bitcast i8* %123 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %125 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %124, align 8
  br label %128

126:                                              ; preds = %108
  %127 = inttoptr i64 %110 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %128

128:                                              ; preds = %116, %126
  %129 = phi %"class.blink::LayoutBoxModelObject"* [ %117, %116 ], [ %113, %126 ]
  %130 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %125, %116 ], [ %127, %126 ]
  %131 = tail call i32 %130(%"class.blink::LayoutBoxModelObject"* %129) #11
  %132 = icmp slt i32 %131, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %131) #11
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !4
  %138 = icmp slt i32 %65, %137
  %139 = select i1 %138, i32 %137, i32 %65
  br label %140

140:                                              ; preds = %64, %128
  %141 = phi i32 [ %65, %64 ], [ %139, %128 ]
  %142 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 0, i32 0, i32 9
  %143 = bitcast %"class.blink::LayoutObject"** %142 to %"class.blink::LayoutBox"**
  %144 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %143, align 8
  %145 = icmp eq %"class.blink::LayoutBox"* %144, null
  br i1 %145, label %18, label %64
}

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !3
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !44

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #11
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #11
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !3
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !44

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #11
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink24PaintLayerScrollableArea27DelayScrollOffsetClampScopeD1Ev(%"class.blink::PaintLayerScrollableArea::DelayScrollOffsetClampScope"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17LayoutFlexibleBox13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutFlexibleBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BlockPainter", align 8
  %5 = bitcast %"class.blink::BlockPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = bitcast %"class.blink::BlockPainter"* %4 to %"class.blink::LayoutFlexibleBox"**
  store %"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutFlexibleBox"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 4
  call void @_ZN5blink12BlockPainter23PaintChildrenAtomicallyERKNS_13OrderIteratorERKNS_9PaintInfoE(%"class.blink::BlockPainter"* nonnull %4, %"class.blink::OrderIterator"* dereferenceable(56) %7, %"struct.blink::PaintInfo"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

declare void @_ZN5blink12BlockPainter23PaintChildrenAtomicallyERKNS_13OrderIteratorERKNS_9PaintInfoE(%"class.blink::BlockPainter"*, %"class.blink::OrderIterator"* dereferenceable(56), %"struct.blink::PaintInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox41RepositionLogicalHeightDependentFlexItemsERNS_19FlexLayoutAlgorithmE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = tail call dereferenceable(96) %"class.blink::FlexLine"* @_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2366"* %3, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %8, i64 0, i32 13, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp eq i32 %11, 0
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i1 [ %12, %7 ], [ true, %2 ]
  %15 = phi i32 [ %10, %7 ], [ 0, %2 ]
  %16 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = bitcast %"class.blink::ComputedStyle"** %16 to %"class.blink::ComputedStyleBase"**
  %18 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 12
  %22 = load i16, i16* %21, align 4
  %23 = and i16 %22, 384
  %24 = icmp ne i16 %23, 0
  %25 = or i1 %24, %14
  br i1 %25, label %30, label %26

26:                                               ; preds = %13
  %27 = tail call i32 @_ZNK5blink17LayoutFlexibleBox22CrossAxisContentExtentEv(%"class.blink::LayoutFlexibleBox"* %0)
  %28 = tail call dereferenceable(96) %"class.blink::FlexLine"* @_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2366"* %3, i32 0) #11
  %29 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %28, i64 0, i32 14, i32 0
  store i32 %27, i32* %29, align 4
  br label %30

30:                                               ; preds = %26, %13
  tail call void @_ZN5blink17LayoutFlexibleBox14AlignFlexLinesERNS_19FlexLayoutAlgorithmE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216) %1)
  tail call void @_ZN5blink17LayoutFlexibleBox13AlignChildrenERNS_19FlexLayoutAlgorithmE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216) %1)
  %31 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %33, i64 0, i32 12
  %35 = load i16, i16* %34, align 4
  %36 = and i16 %35, 384
  %37 = icmp eq i16 %36, 256
  br i1 %37, label %38, label %73

38:                                               ; preds = %30
  %39 = tail call i32 @_ZNK5blink17LayoutFlexibleBox22CrossAxisContentExtentEv(%"class.blink::LayoutFlexibleBox"* %0)
  tail call void @_ZN5blink19FlexLayoutAlgorithm18FlipForWrapReverseENS_10LayoutUnitES1_(%"class.blink::FlexLayoutAlgorithm"* %1, i32 %15, i32 %39) #11
  %40 = getelementptr inbounds %"class.WTF::Vector.2366", %"class.WTF::Vector.2366"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %40, align 8
  %42 = load i32, i32* %4, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %41, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %38, %62
  %47 = phi %"class.blink::FlexLine"* [ %63, %62 ], [ %41, %38 ]
  %48 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %47, i64 0, i32 1, i32 0
  %49 = load %"class.WTF::Vector.2356"*, %"class.WTF::Vector.2356"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %47, i64 0, i32 1, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %47, i64 0, i32 1, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %51, i64 %56
  %58 = icmp eq i32 %53, %55
  br i1 %58, label %62, label %59

59:                                               ; preds = %46
  %60 = zext i32 %53 to i64
  %61 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %51, i64 %60
  br label %65

62:                                               ; preds = %65, %46
  %63 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %47, i64 1
  %64 = icmp eq %"class.blink::FlexLine"* %63, %44
  br i1 %64, label %73, label %46

65:                                               ; preds = %59, %65
  %66 = phi %"class.blink::FlexItem"* [ %71, %65 ], [ %61, %59 ]
  %67 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %66, i64 0, i32 2
  %68 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %66, i64 0, i32 14, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  tail call void @_ZN5blink17LayoutFlexibleBox22ResetAlignmentForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %68, i32 %70)
  %71 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %66, i64 1
  %72 = icmp eq %"class.blink::FlexItem"* %71, %57
  br i1 %72, label %62, label %65

73:                                               ; preds = %62, %38, %30
  tail call void @_ZN5blink17LayoutFlexibleBox24FlipForRightToLeftColumnERKN3WTF6VectorINS_8FlexLineELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutFlexibleBox"* %0, %"class.WTF::Vector.2366"* dereferenceable(16) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox22CrossAxisContentExtentEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = lshr i160 %11, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %26

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  br label %33

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  br label %33

33:                                               ; preds = %19, %26
  %34 = phi i1 [ %25, %19 ], [ %32, %26 ]
  %35 = xor i1 %6, %34
  %36 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  br i1 %35, label %37, label %58

37:                                               ; preds = %33
  %38 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %36) #11
  %39 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %41 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %41, i64 118
  %43 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %42, align 8
  %44 = tail call i32 %43(%"class.blink::LayoutBoxModelObject"* %39) #11
  %45 = icmp sgt i32 %44, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %38, i32 %44) #11
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !4
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %40, align 8
  %52 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, i64 119
  %53 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %52, align 8
  %54 = tail call i32 %53(%"class.blink::LayoutBoxModelObject"* %39) #11
  %55 = icmp sgt i32 %54, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %50, i32 %54) #11
  br label %79

58:                                               ; preds = %33
  %59 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %36) #11
  %60 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %62 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %62, i64 120
  %64 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %63, align 8
  %65 = tail call i32 %64(%"class.blink::LayoutBoxModelObject"* %60) #11
  %66 = icmp sgt i32 %65, -1
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %65) #11
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !4
  %72 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %61, align 8
  %73 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, i64 121
  %74 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %73, align 8
  %75 = tail call i32 %74(%"class.blink::LayoutBoxModelObject"* %60) #11
  %76 = icmp sgt i32 %75, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %71, i32 %75) #11
  br label %79

79:                                               ; preds = %58, %37
  %80 = phi { i32, i1 } [ %78, %58 ], [ %57, %37 ]
  %81 = phi i32 [ %77, %58 ], [ %56, %37 ]
  %82 = extractvalue { i32, i1 } %80, 1
  %83 = extractvalue { i32, i1 } %80, 0
  %84 = select i1 %82, i32 %81, i32 %83
  %85 = icmp sgt i32 %84, 0
  %86 = select i1 %85, i32 %84, i32 0
  ret i32 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox14AlignFlexLinesERNS_19FlexLayoutAlgorithmE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 5
  %5 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm20ResolvedAlignContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %6) #11
  %8 = and i32 %7, 15
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %83, label %14

14:                                               ; preds = %10, %2
  %15 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %16 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %20 = load i16, i16* %19, align 4
  %21 = and i16 %20, 384
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %49, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %49, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %31, label %38

31:                                               ; preds = %27, %31
  %32 = phi %"class.blink::LayoutObject"* [ %34, %31 ], [ %3, %27 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 7
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %27
  %39 = phi %"class.blink::Node"* [ %29, %27 ], [ %36, %31 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 2
  %45 = bitcast %"class.blink::UseCounter"* %44 to void (%"class.blink::UseCounter"*, i32)***
  %46 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %46, i64 3
  %48 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %47, align 8
  tail call void %48(%"class.blink::UseCounter"* %44, i32 2642) #11
  br label %49

49:                                               ; preds = %14, %38, %23
  %50 = tail call i32 @_ZNK5blink17LayoutFlexibleBox22CrossAxisContentExtentEv(%"class.blink::LayoutFlexibleBox"* %0)
  tail call void @_ZN5blink19FlexLayoutAlgorithm14AlignFlexLinesENS_10LayoutUnitE(%"class.blink::FlexLayoutAlgorithm"* %1, i32 %50) #11
  %51 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %83, label %54

54:                                               ; preds = %49, %71
  %55 = phi i32 [ %72, %71 ], [ 0, %49 ]
  %56 = tail call dereferenceable(96) %"class.blink::FlexLine"* @_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2366"* %4, i32 %55) #11
  %57 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %56, i64 0, i32 1, i32 0
  %58 = load %"class.WTF::Vector.2356"*, %"class.WTF::Vector.2356"** %57, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %56, i64 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %56, i64 0, i32 1, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %60, i64 %65
  %67 = icmp eq i32 %62, %64
  br i1 %67, label %71, label %68

68:                                               ; preds = %54
  %69 = zext i32 %62 to i64
  %70 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %60, i64 %69
  br label %75

71:                                               ; preds = %75, %54
  %72 = add nuw i32 %55, 1
  %73 = load i32, i32* %51, align 4
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %54, label %83

75:                                               ; preds = %68, %75
  %76 = phi %"class.blink::FlexItem"* [ %81, %75 ], [ %70, %68 ]
  %77 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %76, i64 0, i32 2
  %78 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %76, i64 0, i32 14, i32 1, i32 0
  %80 = load i32, i32* %79, align 4
  tail call void @_ZN5blink17LayoutFlexibleBox22ResetAlignmentForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %78, i32 %80)
  %81 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %76, i64 1
  %82 = icmp eq %"class.blink::FlexItem"* %81, %66
  br i1 %82, label %71, label %75

83:                                               ; preds = %71, %49, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox13AlignChildrenERNS_19FlexLayoutAlgorithmE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 5
  tail call void @_ZN5blink19FlexLayoutAlgorithm13AlignChildrenEv(%"class.blink::FlexLayoutAlgorithm"* %1) #11
  %4 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %25, %2
  ret void

8:                                                ; preds = %2, %25
  %9 = phi i32 [ %26, %25 ], [ 0, %2 ]
  %10 = tail call dereferenceable(96) %"class.blink::FlexLine"* @_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2366"* %3, i32 %9) #11
  %11 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %10, i64 0, i32 1, i32 0
  %12 = load %"class.WTF::Vector.2356"*, %"class.WTF::Vector.2356"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %10, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %10, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %14, i64 %19
  %21 = icmp eq i32 %16, %18
  br i1 %21, label %25, label %22

22:                                               ; preds = %8
  %23 = zext i32 %16 to i64
  %24 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %14, i64 %23
  br label %29

25:                                               ; preds = %35, %8
  %26 = add nuw i32 %9, 1
  %27 = load i32, i32* %4, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %8, label %7

29:                                               ; preds = %22, %35
  %30 = phi %"class.blink::FlexItem"* [ %42, %35 ], [ %24, %22 ]
  %31 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 0, i32 17
  %32 = load i8, i8* %31, align 2, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %29
  tail call void @_ZN5blink17LayoutFlexibleBox28ApplyStretchAlignmentToChildERNS_8FlexItemE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexItem"* dereferenceable(144) %30)
  store i8 0, i8* %31, align 2
  br label %35

35:                                               ; preds = %29, %34
  %36 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 0, i32 2
  %37 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 0, i32 14, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  tail call void @_ZN5blink17LayoutFlexibleBox22ResetAlignmentForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %37, i32 %39)
  %40 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %36, align 8
  %41 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 0, i32 10
  tail call void @_ZN5blink9LayoutBox9SetMarginERKNS_18NGPhysicalBoxStrutE(%"class.blink::LayoutBox"* %40, %"struct.blink::NGPhysicalBoxStrut"* dereferenceable(16) %41) #11
  %42 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 1
  %43 = icmp eq %"class.blink::FlexItem"* %42, %20
  br i1 %43, label %25, label %29
}

declare void @_ZN5blink19FlexLayoutAlgorithm18FlipForWrapReverseENS_10LayoutUnitES1_(%"class.blink::FlexLayoutAlgorithm"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox22ResetAlignmentForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::LayoutPoint", align 4
  %6 = bitcast %"class.blink::LayoutPoint"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = trunc i96 %9 to i32
  %11 = icmp slt i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 32
  %18 = trunc i160 %17 to i32
  %19 = and i32 %18, 30
  %20 = or i32 %19, 1
  %21 = icmp eq i32 %20, 15
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  br i1 %21, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %26, i64 0, i32 13
  %28 = bitcast [3 x i8]* %27 to i24*
  %29 = load i24, i24* %28, align 8
  %30 = icmp slt i24 %29, 0
  br label %38

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 12
  %33 = load i16, i16* %32, align 4
  %34 = lshr i16 %33, 5
  %35 = and i16 %34, 2
  %36 = or i16 %35, 1
  %37 = icmp eq i16 %36, 3
  br label %38

38:                                               ; preds = %31, %24
  %39 = phi i1 [ %30, %24 ], [ %37, %31 ]
  %40 = xor i1 %11, %39
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %42 = bitcast %"class.blink::LayoutRect"* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = lshr i64 %43, 32
  %45 = select i1 %40, i64 %43, i64 %44
  %46 = trunc i64 %45 to i32
  %47 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %5, i64 0, i32 0, i32 0
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %5, i64 0, i32 1, i32 0
  store i32 %2, i32* %48, align 4
  br i1 %21, label %49, label %56

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %51, i64 0, i32 13
  %53 = bitcast [3 x i8]* %52 to i24*
  %54 = load i24, i24* %53, align 8
  %55 = icmp slt i24 %54, 0
  br label %63

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 12
  %58 = load i16, i16* %57, align 4
  %59 = lshr i16 %58, 5
  %60 = and i16 %59, 2
  %61 = or i16 %60, 1
  %62 = icmp eq i16 %61, 3
  br label %63

63:                                               ; preds = %56, %49
  %64 = phi i1 [ %55, %49 ], [ %62, %56 ]
  %65 = xor i1 %11, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %5) #11
  br label %73

67:                                               ; preds = %63
  %68 = bitcast i64* %4 to %"class.blink::LayoutPoint"*
  %69 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  %70 = shl i64 %45, 32
  %71 = zext i32 %2 to i64
  %72 = or i64 %70, %71
  store i64 %72, i64* %4, align 8
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %68) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  br label %73

73:                                               ; preds = %66, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox24FlipForRightToLeftColumnERKN3WTF6VectorINS_8FlexLineELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.WTF::Vector.2366"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::LayoutPoint"*
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 41538374868278621028243970633760768
  %12 = icmp eq i160 %11, 0
  br i1 %12, label %164, label %13

13:                                               ; preds = %2
  %14 = lshr i160 %10, 32
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 30
  %17 = or i32 %16, 1
  %18 = icmp eq i32 %17, 15
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %19, align 8
  br i1 %18, label %21, label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %23, i64 0, i32 13
  %25 = bitcast [3 x i8]* %24 to i24*
  %26 = load i24, i24* %25, align 8
  %27 = icmp slt i24 %26, 0
  br i1 %27, label %35, label %164

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 12
  %30 = load i16, i16* %29, align 4
  %31 = lshr i16 %30, 5
  %32 = and i16 %31, 2
  %33 = or i16 %32, 1
  %34 = icmp eq i16 %33, 3
  br i1 %34, label %35, label %164

35:                                               ; preds = %28, %21
  %36 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = trunc i96 %38 to i32
  %40 = icmp sgt i32 %39, -1
  %41 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %42 = bitcast %"class.blink::LayoutSize"* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = lshr i64 %43, 32
  %45 = select i1 %40, i64 %44, i64 %43
  %46 = trunc i64 %45 to i32
  %47 = getelementptr inbounds %"class.WTF::Vector.2366", %"class.WTF::Vector.2366"* %1, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.2366", %"class.WTF::Vector.2366"* %1, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %48, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %164, label %54

54:                                               ; preds = %35
  %55 = bitcast i64* %4 to i8*
  %56 = bitcast i64* %4 to i32*
  %57 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %5, i64 0, i32 1, i32 0
  %58 = bitcast i64* %3 to %"class.blink::LayoutPoint"*
  %59 = bitcast i64* %3 to i8*
  br label %60

60:                                               ; preds = %54, %76
  %61 = phi %"class.blink::FlexLine"* [ %48, %54 ], [ %77, %76 ]
  %62 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %61, i64 0, i32 1, i32 0
  %63 = load %"class.WTF::Vector.2356"*, %"class.WTF::Vector.2356"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %61, i64 0, i32 1, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %61, i64 0, i32 1, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %65, i64 %70
  %72 = icmp eq i32 %67, %69
  br i1 %72, label %76, label %73

73:                                               ; preds = %60
  %74 = zext i32 %67 to i64
  %75 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %65, i64 %74
  br label %79

76:                                               ; preds = %161, %60
  %77 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %61, i64 1
  %78 = icmp eq %"class.blink::FlexLine"* %77, %52
  br i1 %78, label %164, label %60

79:                                               ; preds = %73, %161
  %80 = phi %"class.blink::FlexItem"* [ %162, %161 ], [ %75, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  store i32 -1431655766, i32* %56, align 8
  store i32 -1431655766, i32* %57, align 4
  %81 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %80, i64 0, i32 2
  %82 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %81, align 8
  %83 = load i96, i96* %37, align 4
  %84 = trunc i96 %83 to i32
  %85 = icmp slt i32 %84, 0
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = lshr i160 %89, 32
  %91 = trunc i160 %90 to i32
  %92 = and i32 %91, 30
  %93 = or i32 %92, 1
  %94 = icmp eq i32 %93, 15
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %95, align 8
  br i1 %94, label %97, label %104

97:                                               ; preds = %79
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %96, i64 0, i32 2, i32 0, i32 0
  %99 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %99, i64 0, i32 13
  %101 = bitcast [3 x i8]* %100 to i24*
  %102 = load i24, i24* %101, align 8
  %103 = icmp slt i24 %102, 0
  br label %111

104:                                              ; preds = %79
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %96, i64 0, i32 12
  %106 = load i16, i16* %105, align 4
  %107 = lshr i16 %106, 5
  %108 = and i16 %107, 2
  %109 = or i16 %108, 1
  %110 = icmp eq i16 %109, 3
  br label %111

111:                                              ; preds = %104, %97
  %112 = phi i1 [ %103, %97 ], [ %110, %104 ]
  %113 = xor i1 %85, %112
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %82, i64 0, i32 2
  %115 = bitcast %"class.blink::LayoutRect"* %114 to i64*
  %116 = load i64, i64* %115, align 4
  br i1 %113, label %121, label %117

117:                                              ; preds = %111
  %118 = lshr i64 %116, 32
  %119 = shl i64 %116, 32
  %120 = or i64 %119, %118
  br label %121

121:                                              ; preds = %111, %117
  %122 = phi i64 [ %120, %117 ], [ %116, %111 ]
  store i64 %122, i64* %4, align 8
  %123 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %80, i64 0, i32 13, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, -1
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %46, i32 %124) #11
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !4
  %131 = lshr i64 %122, 32
  %132 = trunc i64 %131 to i32
  %133 = icmp sgt i32 %132, -1
  %134 = select i1 %133, i32 -2147483648, i32 2147483647
  %135 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %130, i32 %132) #11
  %136 = extractvalue { i32, i1 } %135, 1
  %137 = extractvalue { i32, i1 } %135, 0
  %138 = select i1 %136, i32 %134, i32 %137, !prof !4
  store i32 %138, i32* %57, align 4
  br i1 %94, label %139, label %146

139:                                              ; preds = %121
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %96, i64 0, i32 2, i32 0, i32 0
  %141 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %141, i64 0, i32 13
  %143 = bitcast [3 x i8]* %142 to i24*
  %144 = load i24, i24* %143, align 8
  %145 = icmp slt i24 %144, 0
  br label %153

146:                                              ; preds = %121
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %96, i64 0, i32 12
  %148 = load i16, i16* %147, align 4
  %149 = lshr i16 %148, 5
  %150 = and i16 %149, 2
  %151 = or i16 %150, 1
  %152 = icmp eq i16 %151, 3
  br label %153

153:                                              ; preds = %146, %139
  %154 = phi i1 [ %145, %139 ], [ %152, %146 ]
  %155 = xor i1 %85, %154
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %82, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %5) #11
  br label %161

157:                                              ; preds = %153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  %158 = shl i64 %122, 32
  %159 = zext i32 %138 to i64
  %160 = or i64 %158, %159
  store i64 %160, i64* %3, align 8
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %82, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  br label %161

161:                                              ; preds = %156, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %162 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %80, i64 1
  %163 = icmp eq %"class.blink::FlexItem"* %162, %71
  br i1 %163, label %76, label %79

164:                                              ; preds = %76, %35, %21, %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !45
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !45
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 993, i64 0 }, %12 ], [ { i64 1001, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 977, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #11
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 1190036353683150593851392
  %42 = icmp eq i160 %41, 340010386766614455386112
  br i1 %42, label %72, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 8589934592
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %43
  %50 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %51 = icmp eq %"class.blink::PaintLayerScrollableArea"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %49
  %53 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %54 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 3
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %53, i64 0, i32 6, i32 1, i32 0, i32 0
  %60 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %59, align 8
  %61 = icmp eq %"class.blink::Scrollbar"* %60, null
  br i1 %61, label %62, label %79

62:                                               ; preds = %58, %52
  %63 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %64 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 3
  %65 = load i8, i8* %64, align 8
  %66 = and i8 %65, 2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %63, i64 0, i32 6, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %69, align 8
  %71 = icmp eq %"class.blink::Scrollbar"* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %33, %43, %62, %68
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 270215977642229760
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %49, %58, %68, %72
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 15211807202738752817960438464512
  %85 = icmp eq i160 %84, 5070602400912917605986812821504
  %86 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #11
  %87 = extractvalue { i64, i64 } %86, 0
  %88 = lshr i64 %87, 32
  %89 = select i1 %85, i64 %88, i64 %87
  %90 = trunc i64 %89 to i32
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  br label %93

93:                                               ; preds = %79, %72
  %94 = phi i32 [ 0, %72 ], [ %90, %79 ]
  %95 = phi i32 [ 2147483647, %72 ], [ %92, %79 ]
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %94) #11
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !4
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %101 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = trunc i96 %102 to i32
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %93
  %106 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #11
  br label %109

107:                                              ; preds = %93
  %108 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #11
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi i32 [ %106, %105 ], [ %108, %107 ]
  %111 = icmp slt i32 %110, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %110) #11
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !4
  ret i32 %116
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox16IsHorizontalFlowEv(%"class.blink::LayoutFlexibleBox"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = lshr i160 %11, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %26

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  br label %33

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  br label %33

33:                                               ; preds = %19, %26
  %34 = phi i1 [ %25, %19 ], [ %32, %26 ]
  %35 = xor i1 %6, %34
  ret i1 %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox17IsLeftToRightFlowEv(%"class.blink::LayoutFlexibleBox"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = lshr i160 %6, 32
  %8 = trunc i160 %7 to i32
  %9 = and i32 %8, 30
  %10 = or i32 %9, 1
  %11 = icmp eq i32 %10, 15
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  br i1 %11, label %14, label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %16, i64 0, i32 13
  %18 = bitcast [3 x i8]* %17 to i24*
  %19 = load i24, i24* %18, align 8
  %20 = icmp slt i24 %19, 0
  br i1 %20, label %28, label %31

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 12
  %23 = load i16, i16* %22, align 4
  %24 = lshr i16 %23, 5
  %25 = and i16 %24, 2
  %26 = or i16 %25, 1
  %27 = icmp eq i16 %26, 3
  br i1 %27, label %28, label %43

28:                                               ; preds = %14, %21
  %29 = and i160 %6, 5070602400912917605986812821504
  %30 = icmp eq i160 %29, 0
  ret i1 %30

31:                                               ; preds = %14
  %32 = and i160 %6, 41538374868278621028243970633760768
  %33 = icmp eq i160 %32, 0
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %35, i64 0, i32 13
  %37 = bitcast [3 x i8]* %36 to i24*
  %38 = load i24, i24* %37, align 8
  %39 = icmp sgt i24 %38, -1
  br i1 %39, label %40, label %50

40:                                               ; preds = %31
  %41 = and i160 %6, 324518553658426726783156020576256
  %42 = icmp ne i160 %41, 0
  br label %50

43:                                               ; preds = %21
  %44 = and i160 %6, 41538374868278621028243970633760768
  %45 = icmp eq i160 %44, 0
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 12
  %47 = load i16, i16* %46, align 4
  %48 = and i16 %47, 96
  %49 = icmp eq i16 %48, 32
  br label %50

50:                                               ; preds = %31, %40, %43
  %51 = phi i1 [ %45, %43 ], [ %33, %31 ], [ %33, %40 ]
  %52 = phi i1 [ %49, %43 ], [ false, %31 ], [ %42, %40 ]
  %53 = xor i1 %51, %52
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17LayoutFlexibleBox17FlexBasisForChildERKNS_9LayoutBoxE(%"class.blink::Length"* noalias sret, %"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %7 = bitcast %"class.blink::Length"* %0 to i64*
  store i64 -6148914691236517206, i64* %7, align 4
  %8 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %12, i64 0, i32 4
  %14 = bitcast %"class.blink::Length"* %13 to i64*
  %15 = bitcast %"class.blink::Length"* %0 to i64*
  %16 = load i64, i64* %14, align 4
  store i64 %16, i64* %15, align 4
  %17 = and i64 %16, 280375465082880
  %18 = icmp eq i64 %17, 8796093022208
  %19 = lshr i64 %16, 40
  %20 = trunc i64 %19 to i8
  br i1 %18, label %21, label %23

21:                                               ; preds = %3
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #11
  %22 = load i8, i8* %4, align 1
  br label %23

23:                                               ; preds = %3, %21
  %24 = phi i8 [ %20, %3 ], [ %22, %21 ]
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %79

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = trunc i96 %29 to i32
  %31 = icmp slt i32 %30, 0
  %32 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = lshr i160 %36, 32
  %38 = trunc i160 %37 to i32
  %39 = and i32 %38, 30
  %40 = or i32 %39, 1
  %41 = icmp eq i32 %40, 15
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %42, align 8
  br i1 %41, label %44, label %51

44:                                               ; preds = %26
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %43, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %46, i64 0, i32 13
  %48 = bitcast [3 x i8]* %47 to i24*
  %49 = load i24, i24* %48, align 8
  %50 = icmp slt i24 %49, 0
  br label %58

51:                                               ; preds = %26
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %43, i64 0, i32 12
  %53 = load i16, i16* %52, align 4
  %54 = lshr i16 %53, 5
  %55 = and i16 %54, 2
  %56 = or i16 %55, 1
  %57 = icmp eq i16 %56, 3
  br label %58

58:                                               ; preds = %44, %51
  %59 = phi i1 [ %50, %44 ], [ %57, %51 ]
  %60 = xor i1 %31, %59
  %61 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %61, i64 0, i32 5, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %63, i64 0, i32 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %63, i64 0, i32 3
  %66 = select i1 %60, %"class.blink::Length"* %64, %"class.blink::Length"* %65
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %66, i64 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %66) #11
  %71 = load i8, i8* %4, align 1
  br label %72

72:                                               ; preds = %70, %58
  %73 = phi i8 [ %71, %70 ], [ %24, %58 ]
  %74 = icmp eq i8 %73, 8
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %0) #11
  br label %76

76:                                               ; preds = %72, %75
  %77 = bitcast %"class.blink::Length"* %66 to i64*
  %78 = load i64, i64* %77, align 4
  store i64 %78, i64* %15, align 4
  br label %79

79:                                               ; preds = %23, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox29ChildUnstretchedLogicalHeightERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %5, %"class.blink::ComputedStyle"* dereferenceable(104) %7) #11
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 15211807202738752817960438464512
  br label %186

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = trunc i96 %19 to i32
  %21 = icmp slt i32 %20, 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = lshr i160 %25, 32
  %27 = trunc i160 %26 to i32
  %28 = and i32 %27, 30
  %29 = or i32 %28, 1
  %30 = icmp eq i32 %29, 15
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  br i1 %30, label %33, label %40

33:                                               ; preds = %16
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %32, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %35, i64 0, i32 13
  %37 = bitcast [3 x i8]* %36 to i24*
  %38 = load i24, i24* %37, align 8
  %39 = icmp slt i24 %38, 0
  br label %47

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %32, i64 0, i32 12
  %42 = load i16, i16* %41, align 4
  %43 = lshr i16 %42, 5
  %44 = and i16 %43, 2
  %45 = or i16 %44, 1
  %46 = icmp eq i16 %45, 3
  br label %47

47:                                               ; preds = %40, %33
  %48 = phi i1 [ %39, %33 ], [ %46, %40 ]
  %49 = xor i1 %21, %48
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 15211807202738752817960438464512
  %55 = icmp eq i160 %54, 0
  %56 = xor i1 %49, %55
  br i1 %56, label %186, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 5, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %59, i64 0, i32 3
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %59, i64 0, i32 8
  %62 = select i1 %55, %"class.blink::Length"* %60, %"class.blink::Length"* %61
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %62, i64 0, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %186

66:                                               ; preds = %57
  %67 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %66
  %69 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* nonnull %1) #11
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = tail call i32 @_ZNK5blink9LayoutBox21OverrideLogicalHeightEv(%"class.blink::LayoutBox"* nonnull %1) #11
  tail call void @_ZN5blink9LayoutBox26ClearOverrideLogicalHeightEv(%"class.blink::LayoutBox"* nonnull %1) #11
  br label %72

72:                                               ; preds = %66, %68, %70
  %73 = phi i32 [ -64, %66 ], [ %71, %70 ], [ -64, %68 ]
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 3, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %77, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %81, i64 0, i32 45
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 24
  %85 = icmp eq i32 %84, 24
  br i1 %85, label %86, label %144

86:                                               ; preds = %72
  %87 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %88 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %87 to i96*
  %89 = load i96, i96* %88, align 4
  %90 = and i96 %89, 1207959552
  %91 = icmp eq i96 %90, 134217728
  br i1 %91, label %144, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %94 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, i64 92
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, align 8
  %97 = tail call zeroext i1 %96(%"class.blink::LayoutObject"* %74, i32 43) #11
  br i1 %97, label %144, label %98

98:                                               ; preds = %92
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, i64 92
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* %74, i32 46) #11
  br i1 %102, label %123, label %103

103:                                              ; preds = %98
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %105 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %104, i64 92
  %106 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %105, align 8
  %107 = tail call zeroext i1 %106(%"class.blink::LayoutObject"* %74, i32 48) #11
  br i1 %107, label %123, label %108

108:                                              ; preds = %103
  %109 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %110 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %109, i64 92
  %111 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.blink::LayoutObject"* %74, i32 45) #11
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %115 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %114, i64 92
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, align 8
  %117 = tail call zeroext i1 %116(%"class.blink::LayoutObject"* %74, i32 49) #11
  br i1 %117, label %123, label %118

118:                                              ; preds = %113
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %120 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %119, i64 92
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %120, align 8
  %122 = tail call zeroext i1 %121(%"class.blink::LayoutObject"* %74, i32 50) #11
  br i1 %122, label %123, label %128

123:                                              ; preds = %118, %113, %108, %103, %98
  %124 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %124, i64 92
  %126 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %125, align 8
  %127 = tail call zeroext i1 %126(%"class.blink::LayoutObject"* %74, i32 45) #11
  br i1 %127, label %128, label %144

128:                                              ; preds = %118, %123
  %129 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %130 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %129, i64 92
  %131 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, align 8
  %132 = tail call zeroext i1 %131(%"class.blink::LayoutObject"* %74, i32 44) #11
  br i1 %132, label %144, label %133

133:                                              ; preds = %128
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 15211807202738752817960438464512
  %139 = icmp eq i160 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %1) #11
  br i1 %141, label %144, label %150

142:                                              ; preds = %133
  %143 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %1) #11
  br i1 %143, label %144, label %150

144:                                              ; preds = %128, %86, %92, %123, %72, %140, %142
  %145 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %146 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %145, align 8
  %147 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %146, i64 166
  %148 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %147, align 8
  %149 = tail call i32 %148(%"class.blink::LayoutBox"* %1) #11
  br label %150

150:                                              ; preds = %140, %144, %142
  %151 = phi i32 [ %149, %144 ], [ 0, %142 ], [ 0, %140 ]
  %152 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %1)
  %153 = extractvalue { i64, i64 } %152, 1
  %154 = trunc i64 %153 to i32
  %155 = lshr i64 %153, 32
  %156 = trunc i64 %155 to i32
  %157 = icmp slt i32 %156, 0
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %154, i32 %156) #11
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !4
  %163 = icmp slt i32 %162, 0
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %162) #11
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !4
  %169 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %170 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %169)
  %171 = icmp slt i32 %170, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %168, i32 %170) #11
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !4
  %177 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #11
  %178 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %177, i8 0, i64 24, i1 false) #11
  %179 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %180 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %180, i64 164
  %182 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %181, align 8
  call void %182(%"class.blink::LayoutBox"* %1, i32 %176, i32 0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %3) #11
  %183 = load i32, i32* %178, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #11
  %184 = icmp eq i32 %73, -64
  br i1 %184, label %194, label %185

185:                                              ; preds = %150
  call void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %73) #11
  br label %194

186:                                              ; preds = %10, %47, %57
  %187 = phi i160 [ %15, %10 ], [ %54, %47 ], [ %54, %57 ]
  %188 = icmp eq i160 %187, 0
  %189 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %190 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %191 = load i32, i32* %189, align 4
  %192 = load i32, i32* %190, align 4
  %193 = select i1 %188, i32 %191, i32 %192
  br label %194

194:                                              ; preds = %185, %150, %186
  %195 = phi i32 [ %193, %186 ], [ %183, %150 ], [ %183, %185 ]
  ret i32 %195
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox31NeedToStretchChildLogicalHeightERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::ComputedStyle"* dereferenceable(104) %6) #11
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %59

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = trunc i96 %12 to i32
  %14 = icmp slt i32 %13, 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = lshr i160 %18, 32
  %20 = trunc i160 %19 to i32
  %21 = and i32 %20, 30
  %22 = or i32 %21, 1
  %23 = icmp eq i32 %22, 15
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %24, align 8
  br i1 %23, label %26, label %33

26:                                               ; preds = %9
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %25, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %28, i64 0, i32 13
  %30 = bitcast [3 x i8]* %29 to i24*
  %31 = load i24, i24* %30, align 8
  %32 = icmp slt i24 %31, 0
  br label %40

33:                                               ; preds = %9
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %25, i64 0, i32 12
  %35 = load i16, i16* %34, align 4
  %36 = lshr i16 %35, 5
  %37 = and i16 %36, 2
  %38 = or i16 %37, 1
  %39 = icmp eq i16 %38, 3
  br label %40

40:                                               ; preds = %26, %33
  %41 = phi i1 [ %32, %26 ], [ %39, %33 ]
  %42 = xor i1 %14, %41
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 15211807202738752817960438464512
  %48 = icmp eq i160 %47, 0
  %49 = xor i1 %42, %48
  br i1 %49, label %59, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 3
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 8
  %55 = select i1 %48, %"class.blink::Length"* %53, %"class.blink::Length"* %54
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %55, i64 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 0
  br label %59

59:                                               ; preds = %40, %2, %50
  %60 = phi i1 [ %58, %50 ], [ false, %2 ], [ false, %40 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox28ChildUnstretchedLogicalWidthERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 3
  %15 = select i1 %10, %"class.blink::Length"* %13, %"class.blink::Length"* %14
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  %17 = load i8, i8* %16, align 1
  switch i8 %17, label %73 [
    i8 2, label %86
    i8 8, label %18
    i8 1, label %18
  ]

18:                                               ; preds = %2, %2
  %19 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = trunc i96 %21 to i32
  %23 = icmp slt i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = lshr i160 %28, 32
  %30 = trunc i160 %29 to i32
  %31 = and i32 %30, 30
  %32 = or i32 %31, 1
  %33 = icmp eq i32 %32, 15
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %34, align 8
  br i1 %33, label %36, label %43

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %35, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %38, i64 0, i32 13
  %40 = bitcast [3 x i8]* %39 to i24*
  %41 = load i24, i24* %40, align 8
  %42 = icmp slt i24 %41, 0
  br label %50

43:                                               ; preds = %18
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %35, i64 0, i32 12
  %45 = load i16, i16* %44, align 4
  %46 = lshr i16 %45, 5
  %47 = and i16 %46, 2
  %48 = or i16 %47, 1
  %49 = icmp eq i16 %48, 3
  br label %50

50:                                               ; preds = %43, %36
  %51 = phi i1 [ %42, %36 ], [ %49, %43 ]
  %52 = xor i1 %23, %51
  %53 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = trunc i96 %55 to i32
  %57 = icmp sgt i32 %56, -1
  %58 = xor i1 %52, %57
  br i1 %58, label %59, label %86

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  %61 = load i32, i32* %60, align 4
  switch i32 %61, label %62 [
    i32 0, label %86
    i32 1, label %73
  ]

62:                                               ; preds = %59
  %63 = tail call i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBlock"** null, i8* null) #11
  %64 = icmp ne i32 %63, -64
  %65 = xor i1 %64, true
  %66 = zext i1 %65 to i32
  store i32 %66, i32* %60, align 4
  br i1 %64, label %67, label %73

67:                                               ; preds = %62
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8
  %72 = and i160 %71, 15211807202738752817960438464512
  br label %86

73:                                               ; preds = %59, %2, %62
  %74 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %73
  %76 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasOverrideLogicalWidthEv(%"class.blink::LayoutBox"* nonnull %1) #11
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = tail call i32 @_ZNK5blink9LayoutBox20OverrideLogicalWidthEv(%"class.blink::LayoutBox"* nonnull %1) #11
  tail call void @_ZN5blink9LayoutBox25ClearOverrideLogicalWidthEv(%"class.blink::LayoutBox"* nonnull %1) #11
  br label %79

79:                                               ; preds = %73, %75, %77
  %80 = phi i32 [ -64, %73 ], [ %78, %77 ], [ -64, %75 ]
  %81 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #11
  %82 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %81, i8 0, i64 24, i1 false) #11
  call void @_ZNK5blink9LayoutBox19ComputeLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %1, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %3) #11
  %83 = load i32, i32* %82, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  %84 = icmp eq i32 %80, -64
  br i1 %84, label %94, label %85

85:                                               ; preds = %79
  call void @_ZN5blink9LayoutBox23SetOverrideLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %80) #11
  br label %94

86:                                               ; preds = %67, %2, %50, %59
  %87 = phi i160 [ %72, %67 ], [ %9, %2 ], [ %9, %50 ], [ %9, %59 ]
  %88 = icmp eq i160 %87, 0
  %89 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %90 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %91 = load i32, i32* %89, align 4
  %92 = load i32, i32* %90, align 4
  %93 = select i1 %88, i32 %91, i32 %92
  br label %94

94:                                               ; preds = %85, %79, %86
  %95 = phi i32 [ %93, %86 ], [ %83, %79 ], [ %83, %85 ]
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox25CrossAxisLengthIsDefiniteERKNS_9LayoutBoxERKNS_6LengthE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::Length"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %57 [
    i8 2, label %56
    i8 8, label %6
    i8 1, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = trunc i96 %9 to i32
  %11 = icmp slt i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 32
  %18 = trunc i160 %17 to i32
  %19 = and i32 %18, 30
  %20 = or i32 %19, 1
  %21 = icmp eq i32 %20, 15
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  br i1 %21, label %24, label %31

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %26, i64 0, i32 13
  %28 = bitcast [3 x i8]* %27 to i24*
  %29 = load i24, i24* %28, align 8
  %30 = icmp slt i24 %29, 0
  br label %38

31:                                               ; preds = %6
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 12
  %33 = load i16, i16* %32, align 4
  %34 = lshr i16 %33, 5
  %35 = and i16 %34, 2
  %36 = or i16 %35, 1
  %37 = icmp eq i16 %36, 3
  br label %38

38:                                               ; preds = %24, %31
  %39 = phi i1 [ %30, %24 ], [ %37, %31 ]
  %40 = xor i1 %11, %39
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %42 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %41 to i96*
  %43 = load i96, i96* %42, align 4
  %44 = trunc i96 %43 to i32
  %45 = icmp sgt i32 %44, -1
  %46 = xor i1 %40, %45
  br i1 %46, label %47, label %57

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  %49 = load i32, i32* %48, align 4
  switch i32 %49, label %51 [
    i32 0, label %57
    i32 1, label %50
  ]

50:                                               ; preds = %47
  br label %57

51:                                               ; preds = %47
  %52 = tail call i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBlock"** null, i8* null) #11
  %53 = icmp ne i32 %52, -64
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  store i32 %55, i32* %48, align 4
  br label %57

56:                                               ; preds = %3
  br label %57

57:                                               ; preds = %3, %56, %47, %38, %51, %50
  %58 = phi i1 [ false, %50 ], [ %53, %51 ], [ true, %47 ], [ true, %38 ], [ true, %56 ], [ false, %3 ]
  ret i1 %58
}

declare void @_ZNK5blink9LayoutBox19ComputeLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox34CrossAxisUnstretchedExtentForChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = load i96, i96* %38, align 4
  %40 = trunc i96 %39 to i32
  %41 = icmp sgt i32 %40, -1
  %42 = xor i1 %36, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = tail call i32 @_ZNK5blink17LayoutFlexibleBox29ChildUnstretchedLogicalHeightERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %47

45:                                               ; preds = %34
  %46 = tail call i32 @_ZNK5blink17LayoutFlexibleBox28ChildUnstretchedLogicalWidthERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi i32 [ %44, %43 ], [ %46, %45 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox29MainAxisContentExtentForChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  br i1 %36, label %37, label %58

37:                                               ; preds = %34
  %38 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %1) #11
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %40 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %41 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %41, i64 120
  %43 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %42, align 8
  %44 = tail call i32 %43(%"class.blink::LayoutBoxModelObject"* %39) #11
  %45 = icmp sgt i32 %44, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %38, i32 %44) #11
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !4
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %40, align 8
  %52 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, i64 121
  %53 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %52, align 8
  %54 = tail call i32 %53(%"class.blink::LayoutBoxModelObject"* %39) #11
  %55 = icmp sgt i32 %54, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %50, i32 %54) #11
  br label %79

58:                                               ; preds = %34
  %59 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %1) #11
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %61 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %62 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %62, i64 118
  %64 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %63, align 8
  %65 = tail call i32 %64(%"class.blink::LayoutBoxModelObject"* %60) #11
  %66 = icmp sgt i32 %65, -1
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %65) #11
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !4
  %72 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %61, align 8
  %73 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, i64 119
  %74 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %73, align 8
  %75 = tail call i32 %74(%"class.blink::LayoutBoxModelObject"* %60) #11
  %76 = icmp sgt i32 %75, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %71, i32 %75) #11
  br label %79

79:                                               ; preds = %58, %37
  %80 = phi { i32, i1 } [ %78, %58 ], [ %57, %37 ]
  %81 = phi i32 [ %77, %58 ], [ %56, %37 ]
  %82 = extractvalue { i32, i1 } %80, 1
  %83 = extractvalue { i32, i1 } %80, 0
  %84 = select i1 %82, i32 %81, i32 %83
  %85 = icmp sgt i32 %84, 0
  %86 = select i1 %85, i32 %84, i32 0
  ret i32 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox47MainAxisContentExtentForChildIncludingScrollbarERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  br i1 %36, label %37, label %127

37:                                               ; preds = %34
  %38 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %1) #11
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %40 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %41 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %41, i64 120
  %43 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %42, align 8
  %44 = tail call i32 %43(%"class.blink::LayoutBoxModelObject"* %39) #11
  %45 = icmp sgt i32 %44, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %38, i32 %44) #11
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !4
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %40, align 8
  %52 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, i64 121
  %53 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %52, align 8
  %54 = tail call i32 %53(%"class.blink::LayoutBoxModelObject"* %39) #11
  %55 = icmp sgt i32 %54, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %50, i32 %54) #11
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !4
  %61 = icmp sgt i32 %60, 0
  %62 = select i1 %61, i32 %60, i32 0
  %63 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = and i160 %67, 1190036353683150593851392
  %69 = icmp eq i160 %68, 340010386766614455386112
  br i1 %69, label %99, label %70

70:                                               ; preds = %37
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %72 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %71 to i96*
  %73 = load i96, i96* %72, align 4
  %74 = and i96 %73, 8589934592
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %99, label %76

76:                                               ; preds = %70
  %77 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %39) #11
  %78 = icmp eq %"class.blink::PaintLayerScrollableArea"* %77, null
  br i1 %78, label %106, label %79

79:                                               ; preds = %76
  %80 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %39) #11
  %81 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %80, i64 0, i32 6, i32 3
  %82 = load i8, i8* %81, align 8
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %80, i64 0, i32 6, i32 1, i32 0, i32 0
  %87 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %86, align 8
  %88 = icmp eq %"class.blink::Scrollbar"* %87, null
  br i1 %88, label %89, label %106

89:                                               ; preds = %85, %79
  %90 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %39) #11
  %91 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %90, i64 0, i32 6, i32 3
  %92 = load i8, i8* %91, align 8
  %93 = and i8 %92, 2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %90, i64 0, i32 6, i32 2, i32 0, i32 0
  %97 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %96, align 8
  %98 = icmp eq %"class.blink::Scrollbar"* %97, null
  br i1 %98, label %99, label %106

99:                                               ; preds = %95, %89, %70, %37
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %63, align 8
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8
  %104 = and i160 %103, 270215977642229760
  %105 = icmp eq i160 %104, 0
  br i1 %105, label %116, label %106

106:                                              ; preds = %76, %85, %95, %99
  %107 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %1, i32 0, i32 0, i32 1) #11
  %108 = extractvalue { i64, i64 } %107, 0
  %109 = extractvalue { i64, i64 } %107, 1
  %110 = lshr i64 %108, 32
  %111 = trunc i64 %110 to i32
  %112 = lshr i64 %109, 32
  %113 = trunc i64 %112 to i32
  %114 = icmp slt i32 %111, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  br label %116

116:                                              ; preds = %106, %99
  %117 = phi i32 [ 0, %99 ], [ %113, %106 ]
  %118 = phi i32 [ 0, %99 ], [ %111, %106 ]
  %119 = phi i32 [ 2147483647, %99 ], [ %115, %106 ]
  %120 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %118) #11
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !4
  %124 = icmp slt i32 %123, 0
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %123) #11
  br label %215

127:                                              ; preds = %34
  %128 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %1) #11
  %129 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %130 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %131 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %130, align 8
  %132 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %131, i64 118
  %133 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %132, align 8
  %134 = tail call i32 %133(%"class.blink::LayoutBoxModelObject"* %129) #11
  %135 = icmp sgt i32 %134, -1
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %128, i32 %134) #11
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !4
  %141 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %130, align 8
  %142 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %141, i64 119
  %143 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %142, align 8
  %144 = tail call i32 %143(%"class.blink::LayoutBoxModelObject"* %129) #11
  %145 = icmp sgt i32 %144, -1
  %146 = select i1 %145, i32 -2147483648, i32 2147483647
  %147 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %140, i32 %144) #11
  %148 = extractvalue { i32, i1 } %147, 1
  %149 = extractvalue { i32, i1 } %147, 0
  %150 = select i1 %148, i32 %146, i32 %149, !prof !4
  %151 = icmp sgt i32 %150, 0
  %152 = select i1 %151, i32 %150, i32 0
  %153 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %154 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %154, i64 0, i32 0, i32 9
  %156 = bitcast [20 x i8]* %155 to i160*
  %157 = load i160, i160* %156, align 8
  %158 = and i160 %157, 1190036353683150593851392
  %159 = icmp eq i160 %158, 340010386766614455386112
  br i1 %159, label %189, label %160

160:                                              ; preds = %127
  %161 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %162 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %161 to i96*
  %163 = load i96, i96* %162, align 4
  %164 = and i96 %163, 8589934592
  %165 = icmp eq i96 %164, 0
  br i1 %165, label %189, label %166

166:                                              ; preds = %160
  %167 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %129) #11
  %168 = icmp eq %"class.blink::PaintLayerScrollableArea"* %167, null
  br i1 %168, label %196, label %169

169:                                              ; preds = %166
  %170 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %129) #11
  %171 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %170, i64 0, i32 6, i32 3
  %172 = load i8, i8* %171, align 8
  %173 = and i8 %172, 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %179, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %170, i64 0, i32 6, i32 1, i32 0, i32 0
  %177 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %176, align 8
  %178 = icmp eq %"class.blink::Scrollbar"* %177, null
  br i1 %178, label %179, label %196

179:                                              ; preds = %175, %169
  %180 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %129) #11
  %181 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %180, i64 0, i32 6, i32 3
  %182 = load i8, i8* %181, align 8
  %183 = and i8 %182, 2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %180, i64 0, i32 6, i32 2, i32 0, i32 0
  %187 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %186, align 8
  %188 = icmp eq %"class.blink::Scrollbar"* %187, null
  br i1 %188, label %189, label %196

189:                                              ; preds = %185, %179, %160, %127
  %190 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %153, align 8
  %191 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %190, i64 0, i32 0, i32 9
  %192 = bitcast [20 x i8]* %191 to i160*
  %193 = load i160, i160* %192, align 8
  %194 = and i160 %193, 270215977642229760
  %195 = icmp eq i160 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %166, %175, %185, %189
  %197 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %1, i32 0, i32 0, i32 1) #11
  %198 = extractvalue { i64, i64 } %197, 0
  %199 = extractvalue { i64, i64 } %197, 1
  %200 = trunc i64 %198 to i32
  %201 = trunc i64 %199 to i32
  %202 = icmp slt i32 %201, 0
  %203 = select i1 %202, i32 -2147483648, i32 2147483647
  br label %204

204:                                              ; preds = %196, %189
  %205 = phi i32 [ 0, %189 ], [ %201, %196 ]
  %206 = phi i32 [ 0, %189 ], [ %200, %196 ]
  %207 = phi i32 [ 2147483647, %189 ], [ %203, %196 ]
  %208 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %206, i32 %205) #11
  %209 = extractvalue { i32, i1 } %208, 1
  %210 = extractvalue { i32, i1 } %208, 0
  %211 = select i1 %209, i32 %207, i32 %210, !prof !4
  %212 = icmp slt i32 %211, 0
  %213 = select i1 %212, i32 -2147483648, i32 2147483647
  %214 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %152, i32 %211) #11
  br label %215

215:                                              ; preds = %204, %116
  %216 = phi { i32, i1 } [ %214, %204 ], [ %126, %116 ]
  %217 = phi i32 [ %213, %204 ], [ %125, %116 ]
  %218 = extractvalue { i32, i1 } %216, 1
  %219 = extractvalue { i32, i1 } %216, 0
  %220 = select i1 %218, i32 %217, i32 %219
  ret i32 %220
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox15CrossAxisExtentEv(%"class.blink::LayoutFlexibleBox"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = lshr i160 %11, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %26

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  br label %33

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  br label %33

33:                                               ; preds = %19, %26
  %34 = phi i1 [ %25, %19 ], [ %32, %26 ]
  %35 = xor i1 %6, %34
  %36 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %37 = bitcast %"class.blink::LayoutSize"* %36 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = lshr i64 %38, 32
  %40 = select i1 %35, i64 %39, i64 %38
  %41 = trunc i64 %40 to i32
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox21MainAxisContentExtentENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = lshr i160 %8, 32
  %10 = trunc i160 %9 to i32
  %11 = and i32 %10, 30
  %12 = or i32 %11, 1
  %13 = icmp eq i32 %12, 15
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %14, align 8
  br i1 %13, label %16, label %23

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 13
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = load i24, i24* %20, align 8
  %22 = icmp slt i24 %21, 0
  br i1 %22, label %30, label %86

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 12
  %25 = load i16, i16* %24, align 4
  %26 = lshr i16 %25, 5
  %27 = and i16 %26, 2
  %28 = or i16 %27, 1
  %29 = icmp eq i16 %28, 3
  br i1 %29, label %30, label %86

30:                                               ; preds = %16, %23
  %31 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 0, i64 24, i1 false) #11
  %33 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %33)
  %35 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %36 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %35)
  %37 = extractvalue { i64, i64 } %36, 1
  %38 = trunc i64 %37 to i32
  %39 = lshr i64 %37, 32
  %40 = trunc i64 %39 to i32
  %41 = icmp slt i32 %40, 0
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %40) #11
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !4
  %47 = icmp slt i32 %46, 0
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %46) #11
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !4
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %52) #11
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !4
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = and i160 %62, 15211807202738752817960438464512
  %64 = icmp eq i160 %63, 0
  %65 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %67 = select i1 %64, i32* %65, i32* %66
  %68 = load i32, i32* %67, align 4
  %69 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %70 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %70, i64 164
  %72 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %71, align 8
  call void %72(%"class.blink::LayoutBox"* %35, i32 %58, i32 %68, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %3) #11
  %73 = load i32, i32* %32, align 4
  %74 = icmp eq i32 %73, 2147483647
  br i1 %74, label %84, label %75

75:                                               ; preds = %30
  %76 = icmp sgt i32 %52, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %73, i32 %52) #11
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !4
  %82 = icmp sgt i32 %81, 0
  %83 = select i1 %82, i32 %81, i32 0
  br label %84

84:                                               ; preds = %30, %75
  %85 = phi i32 [ %83, %75 ], [ 2147483647, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br label %89

86:                                               ; preds = %16, %23
  %87 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %88 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %87)
  br label %89

89:                                               ; preds = %86, %84
  %90 = phi i32 [ %85, %84 ], [ %88, %86 ]
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox29ComputeMainAxisExtentForChildERKNS_9LayoutBoxENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = trunc i96 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = lshr i160 %15, 32
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 30
  %19 = or i32 %18, 1
  %20 = icmp eq i32 %19, 15
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %21, align 8
  br i1 %20, label %23, label %30

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %25, i64 0, i32 13
  %27 = bitcast [3 x i8]* %26 to i24*
  %28 = load i24, i24* %27, align 8
  %29 = icmp slt i24 %28, 0
  br label %37

30:                                               ; preds = %5
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 12
  %32 = load i16, i16* %31, align 4
  %33 = lshr i16 %32, 5
  %34 = and i16 %33, 2
  %35 = or i16 %34, 1
  %36 = icmp eq i16 %35, 3
  br label %37

37:                                               ; preds = %23, %30
  %38 = phi i1 [ %29, %23 ], [ %36, %30 ]
  %39 = xor i1 %10, %38
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = trunc i96 %42 to i32
  %44 = icmp sgt i32 %43, -1
  %45 = xor i1 %39, %44
  br i1 %45, label %72, label %46

46:                                               ; preds = %37
  %47 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %48 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %47, align 8
  %49 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %48, i64 166
  %50 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %49, align 8
  %51 = tail call i32 %50(%"class.blink::LayoutBox"* %1) #11
  %52 = tail call i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %1, i32 %2, %"class.blink::Length"* dereferenceable(8) %3, i32 %51) #11
  %53 = icmp eq i32 %52, -64
  br i1 %53, label %168, label %54

54:                                               ; preds = %46
  %55 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %1)
  %56 = extractvalue { i64, i64 } %55, 1
  %57 = trunc i64 %56 to i32
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %60 = icmp slt i32 %59, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %59) #11
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !4
  %66 = icmp slt i32 %65, 0
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %65) #11
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !4
  br label %168

72:                                               ; preds = %37
  %73 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = and i160 %78, 15211807202738752817960438464512
  %80 = icmp eq i160 %79, 0
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 5, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %82, i64 0, i32 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %82, i64 0, i32 3
  %85 = select i1 %80, %"class.blink::Length"* %83, %"class.blink::Length"* %84
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %157

89:                                               ; preds = %72
  %90 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %91 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %91, i64 21
  %93 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.blink::LayoutObject"* %73) #11
  br i1 %94, label %157, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %98 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, i64 92
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, align 8
  %100 = tail call zeroext i1 %99(%"class.blink::LayoutObject"* %73, i32 2) #11
  br i1 %100, label %157, label %101

101:                                              ; preds = %95
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %96, align 8
  %103 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, i64 92
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, align 8
  %105 = tail call zeroext i1 %104(%"class.blink::LayoutObject"* %73, i32 54) #11
  br i1 %105, label %157, label %106

106:                                              ; preds = %101
  %107 = bitcast %"class.blink::ComputedStyle"** %74 to %"class.blink::ComputedStyleBase"**
  %108 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %108, i64 0, i32 5, i32 0, i32 0
  %110 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %110, i64 0, i32 1, i32 1, i32 0
  %112 = load float, float* %111, align 4
  %113 = fcmp oeq float %112, 0.000000e+00
  br i1 %113, label %127, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %110, i64 0, i32 1, i32 1, i32 1
  %116 = load float, float* %115, align 4
  %117 = fcmp oeq float %116, 0.000000e+00
  %118 = fcmp olt float %112, 1.562500e-02
  %119 = or i1 %118, %117
  %120 = fcmp olt float %116, 1.562500e-02
  %121 = or i1 %120, %119
  br i1 %121, label %127, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %110, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 4
  %125 = and i8 %124, 3
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %157

127:                                              ; preds = %122, %106, %114
  %128 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  %129 = load i8, i8* %128, align 1
  switch i8 %129, label %157 [
    i8 3, label %130
    i8 5, label %130
    i8 4, label %143
  ]

130:                                              ; preds = %127, %127
  %131 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %132 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %131, align 8
  %133 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %132, i64 69
  %134 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %133, align 8
  %135 = tail call i64 %134(%"class.blink::LayoutBox"* %1) #11
  %136 = trunc i64 %135 to i32
  %137 = icmp sgt i32 %4, -1
  %138 = select i1 %137, i32 -2147483648, i32 2147483647
  %139 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %136, i32 %4) #11
  %140 = extractvalue { i32, i1 } %139, 1
  %141 = extractvalue { i32, i1 } %139, 0
  %142 = select i1 %140, i32 %138, i32 %141, !prof !4
  br label %168

143:                                              ; preds = %127
  %144 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %145 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %144, align 8
  %146 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %145, i64 69
  %147 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %146, align 8
  %148 = tail call i64 %147(%"class.blink::LayoutBox"* %1) #11
  %149 = lshr i64 %148, 32
  %150 = trunc i64 %149 to i32
  %151 = icmp sgt i32 %4, -1
  %152 = select i1 %151, i32 -2147483648, i32 2147483647
  %153 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %150, i32 %4) #11
  %154 = extractvalue { i32, i1 } %153, 1
  %155 = extractvalue { i32, i1 } %153, 0
  %156 = select i1 %154, i32 %152, i32 %155, !prof !4
  br label %168

157:                                              ; preds = %122, %127, %89, %95, %101, %72
  %158 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %159 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %158)
  %160 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %161 = tail call i32 @_ZNK5blink9LayoutBox24ComputeLogicalWidthUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* %1, i32 %2, %"class.blink::Length"* dereferenceable(8) %3, i32 %159, %"class.blink::LayoutBlock"* %160) #11
  %162 = icmp sgt i32 %4, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %161, i32 %4) #11
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !4
  br label %168

168:                                              ; preds = %54, %46, %157, %143, %130
  %169 = phi i32 [ %167, %157 ], [ %142, %130 ], [ %156, %143 ], [ %71, %54 ], [ -64, %46 ]
  ret i32 %169
}

declare i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24ComputeLogicalWidthUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32, %"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox17ContentInsetRightEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %4 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, i64 125
  %6 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::LayoutBoxModelObject"* %2) #11
  %8 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %3, align 8
  %9 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, i64 121
  %10 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %9, align 8
  %11 = tail call i32 %10(%"class.blink::LayoutBoxModelObject"* %2) #11
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 %11) #11
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !4
  %18 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 1190036353683150593851392
  %25 = icmp eq i160 %24, 340010386766614455386112
  br i1 %25, label %55, label %26

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = and i96 %29, 8589934592
  %31 = icmp eq i96 %30, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %26
  %33 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %34 = icmp eq %"class.blink::PaintLayerScrollableArea"* %33, null
  br i1 %34, label %62, label %35

35:                                               ; preds = %32
  %36 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %37 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %36, i64 0, i32 6, i32 3
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %36, i64 0, i32 6, i32 1, i32 0, i32 0
  %43 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %42, align 8
  %44 = icmp eq %"class.blink::Scrollbar"* %43, null
  br i1 %44, label %45, label %62

45:                                               ; preds = %41, %35
  %46 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %47 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %46, i64 0, i32 6, i32 3
  %48 = load i8, i8* %47, align 8
  %49 = and i8 %48, 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %46, i64 0, i32 6, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %52, align 8
  %54 = icmp eq %"class.blink::Scrollbar"* %53, null
  br i1 %54, label %55, label %62

55:                                               ; preds = %51, %45, %26, %1
  %56 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 9
  %58 = bitcast [20 x i8]* %57 to i160*
  %59 = load i160, i160* %58, align 8
  %60 = and i160 %59, 270215977642229760
  %61 = icmp eq i160 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %32, %41, %51, %55
  %63 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %18, i32 0, i32 0, i32 1) #11
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = lshr i64 %64, 32
  %66 = trunc i64 %65 to i32
  %67 = icmp slt i32 %66, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  br label %69

69:                                               ; preds = %62, %55
  %70 = phi i32 [ 0, %55 ], [ %66, %62 ]
  %71 = phi i32 [ 2147483647, %55 ], [ %68, %62 ]
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %70) #11
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !4
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox18ContentInsetBottomEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %4 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, i64 123
  %6 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::LayoutBoxModelObject"* %2) #11
  %8 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %3, align 8
  %9 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, i64 119
  %10 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %9, align 8
  %11 = tail call i32 %10(%"class.blink::LayoutBoxModelObject"* %2) #11
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 %11) #11
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !4
  %18 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 1190036353683150593851392
  %25 = icmp eq i160 %24, 340010386766614455386112
  br i1 %25, label %55, label %26

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = and i96 %29, 8589934592
  %31 = icmp eq i96 %30, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %26
  %33 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %34 = icmp eq %"class.blink::PaintLayerScrollableArea"* %33, null
  br i1 %34, label %62, label %35

35:                                               ; preds = %32
  %36 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %37 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %36, i64 0, i32 6, i32 3
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %36, i64 0, i32 6, i32 1, i32 0, i32 0
  %43 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %42, align 8
  %44 = icmp eq %"class.blink::Scrollbar"* %43, null
  br i1 %44, label %45, label %62

45:                                               ; preds = %41, %35
  %46 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #11
  %47 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %46, i64 0, i32 6, i32 3
  %48 = load i8, i8* %47, align 8
  %49 = and i8 %48, 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %46, i64 0, i32 6, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %52, align 8
  %54 = icmp eq %"class.blink::Scrollbar"* %53, null
  br i1 %54, label %55, label %62

55:                                               ; preds = %51, %45, %26, %1
  %56 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 9
  %58 = bitcast [20 x i8]* %57 to i160*
  %59 = load i160, i160* %58, align 8
  %60 = and i160 %59, 270215977642229760
  %61 = icmp eq i160 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %32, %41, %51, %55
  %63 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %18, i32 0, i32 0, i32 1) #11
  %64 = extractvalue { i64, i64 } %63, 1
  %65 = trunc i64 %64 to i32
  %66 = icmp slt i32 %65, 0
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  br label %68

68:                                               ; preds = %62, %55
  %69 = phi i32 [ 0, %55 ], [ %65, %62 ]
  %70 = phi i32 [ 2147483647, %55 ], [ %67, %62 ]
  %71 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %69) #11
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !4
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox26FlowAwareContentInsetStartEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = lshr i160 %11, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %27

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  %26 = xor i1 %6, %25
  br i1 %25, label %35, label %45

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  %34 = xor i1 %6, %33
  br i1 %33, label %35, label %39

35:                                               ; preds = %27, %19
  %36 = phi i1 [ %34, %27 ], [ %26, %19 ]
  %37 = and i160 %11, 5070602400912917605986812821504
  %38 = icmp eq i160 %37, 0
  br i1 %36, label %51, label %58

39:                                               ; preds = %27
  %40 = and i160 %11, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = and i16 %29, 96
  %43 = icmp eq i16 %42, 32
  %44 = xor i1 %41, %43
  br i1 %34, label %51, label %58

45:                                               ; preds = %19
  %46 = and i160 %11, 41538374868278621028243970633760768
  %47 = icmp eq i160 %46, 0
  %48 = and i160 %11, 324518553658426726783156020576256
  %49 = icmp ne i160 %48, 0
  %50 = xor i1 %47, %49
  br i1 %26, label %51, label %58

51:                                               ; preds = %39, %35, %45
  %52 = phi i1 [ %38, %35 ], [ %50, %45 ], [ %44, %39 ]
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %55 = tail call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %54)
  br label %65

56:                                               ; preds = %51
  %57 = tail call i32 @_ZNK5blink17LayoutFlexibleBox17ContentInsetRightEv(%"class.blink::LayoutFlexibleBox"* %0)
  br label %65

58:                                               ; preds = %39, %35, %45
  %59 = phi i1 [ %38, %35 ], [ %50, %45 ], [ %44, %39 ]
  br i1 %59, label %60, label %63

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %62 = tail call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %61)
  br label %65

63:                                               ; preds = %58
  %64 = tail call i32 @_ZNK5blink17LayoutFlexibleBox18ContentInsetBottomEv(%"class.blink::LayoutFlexibleBox"* %0)
  br label %65

65:                                               ; preds = %60, %63, %53, %56
  %66 = phi i32 [ %55, %53 ], [ %57, %56 ], [ %62, %60 ], [ %64, %63 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35, %29, %9, %1
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = phi i1 [ false, %35 ], [ false, %25 ], [ false, %15 ], [ %45, %39 ]
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %49 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, i64 124
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %48) #11
  br i1 %47, label %65, label %54

54:                                               ; preds = %46
  %55 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #11
  %56 = extractvalue { i64, i64 } %55, 1
  %57 = lshr i64 %56, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %58) #11
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !4
  br label %65

65:                                               ; preds = %46, %54
  %66 = phi i32 [ %64, %54 ], [ %53, %46 ]
  %67 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %68 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, i64 120
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %68, align 8
  %70 = tail call i32 %69(%"class.blink::LayoutBoxModelObject"* %48) #11
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 %70) #11
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !4
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #11
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35, %29, %9, %1
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = phi i1 [ false, %35 ], [ false, %25 ], [ false, %15 ], [ %45, %39 ]
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %49 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, i64 122
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %48) #11
  br i1 %47, label %64, label %54

54:                                               ; preds = %46
  %55 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #11
  %56 = extractvalue { i64, i64 } %55, 0
  %57 = trunc i64 %56 to i32
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %57) #11
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !4
  br label %64

64:                                               ; preds = %46, %54
  %65 = phi i32 [ %63, %54 ], [ %53, %46 ]
  %66 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %67 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %66, i64 118
  %68 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, align 8
  %69 = tail call i32 %68(%"class.blink::LayoutBoxModelObject"* %48) #11
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %65, i32 %69) #11
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !4
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox24FlowAwareContentInsetEndEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = lshr i160 %11, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %27

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  %26 = xor i1 %6, %25
  br i1 %25, label %35, label %45

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  %34 = xor i1 %6, %33
  br i1 %33, label %35, label %39

35:                                               ; preds = %27, %19
  %36 = phi i1 [ %34, %27 ], [ %26, %19 ]
  %37 = and i160 %11, 5070602400912917605986812821504
  %38 = icmp eq i160 %37, 0
  br i1 %36, label %51, label %58

39:                                               ; preds = %27
  %40 = and i160 %11, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = and i16 %29, 96
  %43 = icmp eq i16 %42, 32
  %44 = xor i1 %41, %43
  br i1 %34, label %51, label %58

45:                                               ; preds = %19
  %46 = and i160 %11, 41538374868278621028243970633760768
  %47 = icmp eq i160 %46, 0
  %48 = and i160 %11, 324518553658426726783156020576256
  %49 = icmp ne i160 %48, 0
  %50 = xor i1 %47, %49
  br i1 %26, label %51, label %58

51:                                               ; preds = %39, %35, %45
  %52 = phi i1 [ %38, %35 ], [ %50, %45 ], [ %44, %39 ]
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = tail call i32 @_ZNK5blink17LayoutFlexibleBox17ContentInsetRightEv(%"class.blink::LayoutFlexibleBox"* %0)
  br label %65

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %57 = tail call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %56)
  br label %65

58:                                               ; preds = %39, %35, %45
  %59 = phi i1 [ %38, %35 ], [ %50, %45 ], [ %44, %39 ]
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = tail call i32 @_ZNK5blink17LayoutFlexibleBox18ContentInsetBottomEv(%"class.blink::LayoutFlexibleBox"* %0)
  br label %65

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %64 = tail call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %63)
  br label %65

65:                                               ; preds = %60, %62, %53, %55
  %66 = phi i32 [ %54, %53 ], [ %57, %55 ], [ %61, %60 ], [ %64, %62 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox27FlowAwareContentInsetBeforeEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm25GetTransformedWritingModeERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %3) #11
  switch i32 %4, label %15 [
    i32 0, label %5
    i32 3, label %8
    i32 2, label %10
    i32 1, label %13
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %7 = tail call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %6)
  br label %16

8:                                                ; preds = %1
  %9 = tail call i32 @_ZNK5blink17LayoutFlexibleBox18ContentInsetBottomEv(%"class.blink::LayoutFlexibleBox"* %0)
  br label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %12 = tail call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %11)
  br label %16

13:                                               ; preds = %1
  %14 = tail call i32 @_ZNK5blink17LayoutFlexibleBox17ContentInsetRightEv(%"class.blink::LayoutFlexibleBox"* %0)
  br label %16

15:                                               ; preds = %1
  unreachable

16:                                               ; preds = %13, %10, %8, %5
  %17 = phi i32 [ %14, %13 ], [ %12, %10 ], [ %9, %8 ], [ %7, %5 ]
  ret i32 %17
}

declare i32 @_ZN5blink19FlexLayoutAlgorithm25GetTransformedWritingModeERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox26FlowAwareContentInsetAfterEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm25GetTransformedWritingModeERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %3) #11
  switch i32 %4, label %15 [
    i32 0, label %5
    i32 3, label %7
    i32 2, label %10
    i32 1, label %12
  ]

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK5blink17LayoutFlexibleBox18ContentInsetBottomEv(%"class.blink::LayoutFlexibleBox"* %0)
  br label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %9 = tail call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %8)
  br label %16

10:                                               ; preds = %1
  %11 = tail call i32 @_ZNK5blink17LayoutFlexibleBox17ContentInsetRightEv(%"class.blink::LayoutFlexibleBox"* %0)
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %14 = tail call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %13)
  br label %16

15:                                               ; preds = %1
  unreachable

16:                                               ; preds = %12, %10, %7, %5
  %17 = phi i32 [ %14, %12 ], [ %11, %10 ], [ %9, %7 ], [ %6, %5 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox24CrossAxisScrollbarExtentEv(%"class.blink::LayoutFlexibleBox"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = lshr i160 %11, 32
  %13 = trunc i160 %12 to i32
  %14 = and i32 %13, 30
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 15
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  br i1 %16, label %19, label %26

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %21, i64 0, i32 13
  %23 = bitcast [3 x i8]* %22 to i24*
  %24 = load i24, i24* %23, align 8
  %25 = icmp slt i24 %24, 0
  br label %33

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 12
  %28 = load i16, i16* %27, align 4
  %29 = lshr i16 %28, 5
  %30 = and i16 %29, 2
  %31 = or i16 %30, 1
  %32 = icmp eq i16 %31, 3
  br label %33

33:                                               ; preds = %19, %26
  %34 = phi i1 [ %25, %19 ], [ %32, %26 ]
  %35 = xor i1 %6, %34
  %36 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %37 = and i160 %11, 1190036353683150593851392
  %38 = icmp eq i160 %37, 340010386766614455386112
  %39 = and i96 %4, 8589934592
  %40 = icmp eq i96 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %66, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %43) #11
  %45 = icmp eq %"class.blink::PaintLayerScrollableArea"* %44, null
  br i1 %45, label %73, label %46

46:                                               ; preds = %42
  %47 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %43) #11
  %48 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %47, i64 0, i32 6, i32 3
  %49 = load i8, i8* %48, align 8
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %47, i64 0, i32 6, i32 1, i32 0, i32 0
  %54 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %53, align 8
  %55 = icmp eq %"class.blink::Scrollbar"* %54, null
  br i1 %55, label %56, label %73

56:                                               ; preds = %52, %46
  %57 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %43) #11
  %58 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %57, i64 0, i32 6, i32 3
  %59 = load i8, i8* %58, align 8
  %60 = and i8 %59, 2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %57, i64 0, i32 6, i32 2, i32 0, i32 0
  %64 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %63, align 8
  %65 = icmp eq %"class.blink::Scrollbar"* %64, null
  br i1 %65, label %66, label %73

66:                                               ; preds = %62, %56, %33
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %67, i64 0, i32 0, i32 9
  %69 = bitcast [20 x i8]* %68 to i160*
  %70 = load i160, i160* %69, align 8
  %71 = and i160 %70, 270215977642229760
  %72 = icmp eq i160 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %66, %62, %52, %42
  %74 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %36, i32 0, i32 0, i32 1) #11
  %75 = extractvalue { i64, i64 } %74, 0
  %76 = extractvalue { i64, i64 } %74, 1
  br label %77

77:                                               ; preds = %66, %73
  %78 = phi i64 [ %75, %73 ], [ 0, %66 ]
  %79 = phi i64 [ %76, %73 ], [ 0, %66 ]
  br i1 %35, label %80, label %88

80:                                               ; preds = %77
  %81 = lshr i64 %78, 32
  %82 = trunc i64 %81 to i32
  %83 = lshr i64 %79, 32
  %84 = trunc i64 %83 to i32
  %85 = icmp slt i32 %82, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %82) #11
  br label %94

88:                                               ; preds = %77
  %89 = trunc i64 %78 to i32
  %90 = trunc i64 %79 to i32
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %90) #11
  br label %94

94:                                               ; preds = %88, %80
  %95 = phi { i32, i1 } [ %93, %88 ], [ %87, %80 ]
  %96 = phi i32 [ %92, %88 ], [ %86, %80 ]
  %97 = extractvalue { i32, i1 } %95, 1
  %98 = extractvalue { i32, i1 } %95, 0
  %99 = select i1 %97, i32 %96, i32 %98
  ret i32 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox32CrossAxisScrollbarExtentForChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = and i160 %41, 1190036353683150593851392
  %43 = icmp eq i160 %42, 340010386766614455386112
  br i1 %43, label %74, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i96*
  %47 = load i96, i96* %46, align 4
  %48 = and i96 %47, 8589934592
  %49 = icmp eq i96 %48, 0
  br i1 %49, label %74, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %52 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %51) #11
  %53 = icmp eq %"class.blink::PaintLayerScrollableArea"* %52, null
  br i1 %53, label %81, label %54

54:                                               ; preds = %50
  %55 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %51) #11
  %56 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %55, i64 0, i32 6, i32 3
  %57 = load i8, i8* %56, align 8
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %55, i64 0, i32 6, i32 1, i32 0, i32 0
  %62 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %61, align 8
  %63 = icmp eq %"class.blink::Scrollbar"* %62, null
  br i1 %63, label %64, label %81

64:                                               ; preds = %60, %54
  %65 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %51) #11
  %66 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %65, i64 0, i32 6, i32 3
  %67 = load i8, i8* %66, align 8
  %68 = and i8 %67, 2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %65, i64 0, i32 6, i32 2, i32 0, i32 0
  %72 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %71, align 8
  %73 = icmp eq %"class.blink::Scrollbar"* %72, null
  br i1 %73, label %74, label %81

74:                                               ; preds = %70, %64, %44, %34
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = and i160 %78, 270215977642229760
  %80 = icmp eq i160 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %74, %70, %60, %50
  %82 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %1, i32 0, i32 0, i32 1) #11
  %83 = extractvalue { i64, i64 } %82, 0
  %84 = extractvalue { i64, i64 } %82, 1
  br label %85

85:                                               ; preds = %74, %81
  %86 = phi i64 [ %83, %81 ], [ 0, %74 ]
  %87 = phi i64 [ %84, %81 ], [ 0, %74 ]
  br i1 %36, label %88, label %96

88:                                               ; preds = %85
  %89 = lshr i64 %86, 32
  %90 = trunc i64 %89 to i32
  %91 = lshr i64 %87, 32
  %92 = trunc i64 %91 to i32
  %93 = icmp slt i32 %90, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %90) #11
  br label %102

96:                                               ; preds = %85
  %97 = trunc i64 %86 to i32
  %98 = trunc i64 %87 to i32
  %99 = icmp slt i32 %98, 0
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %98) #11
  br label %102

102:                                              ; preds = %96, %88
  %103 = phi { i32, i1 } [ %101, %96 ], [ %95, %88 ]
  %104 = phi i32 [ %100, %96 ], [ %94, %88 ]
  %105 = extractvalue { i32, i1 } %103, 1
  %106 = extractvalue { i32, i1 } %103, 0
  %107 = select i1 %105, i32 %104, i32 %106
  ret i32 %107
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink17LayoutFlexibleBox25FlowAwareLocationForChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %38 = bitcast %"class.blink::LayoutRect"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  br i1 %36, label %44, label %40

40:                                               ; preds = %34
  %41 = lshr i64 %39, 32
  %42 = shl i64 %39, 32
  %43 = or i64 %42, %41
  br label %44

44:                                               ; preds = %34, %40
  %45 = phi i64 [ %43, %40 ], [ %39, %34 ]
  ret i64 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox19UseChildAspectRatioERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %5 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %5, i64 21
  %7 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutObject"* %3) #11
  br i1 %8, label %42, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, i64 92
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* %3, i32 2) #11
  br i1 %14, label %42, label %15

15:                                               ; preds = %9
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, i64 92
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::LayoutObject"* %3, i32 54) #11
  br i1 %19, label %42, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %22 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %23 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %23, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %25, i64 0, i32 1, i32 1, i32 0
  %27 = load float, float* %26, align 4
  %28 = fcmp oeq float %27, 0.000000e+00
  br i1 %28, label %148, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %25, i64 0, i32 1, i32 1, i32 1
  %31 = load float, float* %30, align 4
  %32 = fcmp oeq float %31, 0.000000e+00
  %33 = fcmp olt float %27, 1.562500e-02
  %34 = or i1 %33, %32
  %35 = fcmp olt float %31, 1.562500e-02
  %36 = or i1 %35, %34
  br i1 %36, label %148, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %25, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 4
  %40 = and i8 %39, 3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %148, label %42

42:                                               ; preds = %37, %2, %9, %15
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %44 = bitcast %"class.blink::ComputedStyle"** %43 to %"class.blink::ComputedStyleBase"**
  %45 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %45, i64 0, i32 5, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %47, i64 0, i32 1, i32 1, i32 0
  %49 = load float, float* %48, align 4
  %50 = fcmp oeq float %49, 0.000000e+00
  br i1 %50, label %64, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %47, i64 0, i32 1, i32 1, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp oeq float %53, 0.000000e+00
  %55 = fcmp olt float %49, 1.562500e-02
  %56 = or i1 %55, %54
  %57 = fcmp olt float %53, 1.562500e-02
  %58 = or i1 %57, %56
  br i1 %58, label %64, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %47, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 4
  %62 = and i8 %61, 3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %42, %51, %59
  %65 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %66 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %65, align 8
  %67 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %66, i64 165
  %68 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %67, align 8
  %69 = tail call i64 %68(%"class.blink::LayoutBox"* %1) #11
  %70 = icmp ult i64 %69, 4294967296
  br i1 %70, label %148, label %71

71:                                               ; preds = %59, %64
  %72 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = trunc i96 %74 to i32
  %76 = icmp slt i32 %75, 0
  %77 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = lshr i160 %81, 32
  %83 = trunc i160 %82 to i32
  %84 = and i32 %83, 30
  %85 = or i32 %84, 1
  %86 = icmp eq i32 %85, 15
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 3, i32 0, i32 0
  %88 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %87, align 8
  br i1 %86, label %89, label %96

89:                                               ; preds = %71
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %88, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %91, i64 0, i32 13
  %93 = bitcast [3 x i8]* %92 to i24*
  %94 = load i24, i24* %93, align 8
  %95 = icmp slt i24 %94, 0
  br label %103

96:                                               ; preds = %71
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %88, i64 0, i32 12
  %98 = load i16, i16* %97, align 4
  %99 = lshr i16 %98, 5
  %100 = and i16 %99, 2
  %101 = or i16 %100, 1
  %102 = icmp eq i16 %101, 3
  br label %103

103:                                              ; preds = %89, %96
  %104 = phi i1 [ %95, %89 ], [ %102, %96 ]
  %105 = xor i1 %76, %104
  %106 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %44, align 8
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %106, i64 0, i32 5, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 3
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %108, i64 0, i32 8
  %111 = select i1 %105, %"class.blink::Length"* %109, %"class.blink::Length"* %110
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %111, i64 0, i32 2
  %113 = load i8, i8* %112, align 1
  switch i8 %113, label %148 [
    i8 2, label %147
    i8 8, label %114
    i8 1, label %114
  ]

114:                                              ; preds = %103, %103
  br i1 %86, label %115, label %122

115:                                              ; preds = %114
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %88, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %117, i64 0, i32 13
  %119 = bitcast [3 x i8]* %118 to i24*
  %120 = load i24, i24* %119, align 8
  %121 = icmp slt i24 %120, 0
  br label %129

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %88, i64 0, i32 12
  %124 = load i16, i16* %123, align 4
  %125 = lshr i16 %124, 5
  %126 = and i16 %125, 2
  %127 = or i16 %126, 1
  %128 = icmp eq i16 %127, 3
  br label %129

129:                                              ; preds = %122, %115
  %130 = phi i1 [ %121, %115 ], [ %128, %122 ]
  %131 = xor i1 %76, %130
  %132 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %133 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %132 to i96*
  %134 = load i96, i96* %133, align 4
  %135 = trunc i96 %134 to i32
  %136 = icmp sgt i32 %135, -1
  %137 = xor i1 %131, %136
  br i1 %137, label %138, label %148

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  switch i32 %140, label %142 [
    i32 0, label %148
    i32 1, label %141
  ]

141:                                              ; preds = %138
  br label %148

142:                                              ; preds = %138
  %143 = tail call i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBlock"** null, i8* null) #11
  %144 = icmp ne i32 %143, -64
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  store i32 %146, i32* %139, align 4
  br label %148

147:                                              ; preds = %103
  br label %148

148:                                              ; preds = %37, %20, %29, %147, %142, %141, %138, %129, %103, %64
  %149 = phi i1 [ false, %37 ], [ false, %64 ], [ false, %141 ], [ %144, %142 ], [ true, %138 ], [ true, %129 ], [ true, %147 ], [ false, %103 ], [ false, %29 ], [ false, %20 ]
  ret i1 %149
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox35ComputeMainSizeFromAspectRatioUsingERKNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitES7_(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::Length"* dereferenceable(8), i32, i32) local_unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %9, label %30

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %11 = load i8, i8* %10, align 2, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::Length"* %2 to float*
  %15 = load float, float* %14, align 4
  br label %20

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  br label %20

20:                                               ; preds = %13, %16
  %21 = phi float [ %15, %13 ], [ %19, %16 ]
  %22 = fmul float %21, 6.400000e+01
  %23 = fcmp ult float %22, 0xC1E0000000000000
  %24 = fcmp ugt float %22, 0x41DFFFFFE0000000
  %25 = fcmp ogt float %22, 0xC1E0000000000000
  %26 = select i1 %25, float %22, float 0xC1E0000000000000
  %27 = fptosi float %26 to i32
  %28 = select i1 %23, i32 0, i32 2147483647
  %29 = select i1 %24, i32 %28, i32 %27
  br label %104

30:                                               ; preds = %5
  %31 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = trunc i96 %33 to i32
  %35 = icmp slt i32 %34, 0
  %36 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = lshr i160 %40, 32
  %42 = trunc i160 %41 to i32
  %43 = and i32 %42, 30
  %44 = or i32 %43, 1
  %45 = icmp eq i32 %44, 15
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %46, align 8
  br i1 %45, label %48, label %55

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %47, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %50, i64 0, i32 13
  %52 = bitcast [3 x i8]* %51 to i24*
  %53 = load i24, i24* %52, align 8
  %54 = icmp slt i24 %53, 0
  br label %62

55:                                               ; preds = %30
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %47, i64 0, i32 12
  %57 = load i16, i16* %56, align 4
  %58 = lshr i16 %57, 5
  %59 = and i16 %58, 2
  %60 = or i16 %59, 1
  %61 = icmp eq i16 %60, 3
  br label %62

62:                                               ; preds = %48, %55
  %63 = phi i1 [ %54, %48 ], [ %61, %55 ]
  %64 = xor i1 %35, %63
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %66 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %65 to i96*
  %67 = load i96, i96* %66, align 4
  %68 = trunc i96 %67 to i32
  %69 = icmp sgt i32 %68, -1
  %70 = xor i1 %64, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %62
  %72 = tail call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %1, %"class.blink::Length"* dereferenceable(8) %2) #11
  br label %104

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %75 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %74) #11
  %76 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %78 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %77, align 8
  %79 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, i64 120
  %80 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %79, align 8
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %76) #11
  %82 = icmp sgt i32 %81, -1
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %75, i32 %81) #11
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !4
  %88 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %77, align 8
  %89 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %88, i64 121
  %90 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %89, align 8
  %91 = tail call i32 %90(%"class.blink::LayoutBoxModelObject"* %76) #11
  %92 = icmp sgt i32 %91, -1
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %91) #11
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !4
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  %100 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %2, i32 %99) #11
  %101 = sitofp i32 %100 to float
  %102 = fmul float %101, 1.562500e-02
  %103 = tail call i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %74, float %102) #11
  br label %104

104:                                              ; preds = %71, %73, %20
  %105 = phi i32 [ %29, %20 ], [ %72, %71 ], [ %103, %73 ]
  %106 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %107 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %106, align 8
  %108 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %107, i64 165
  %109 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %108, align 8
  %110 = tail call i64 %109(%"class.blink::LayoutBox"* %1) #11
  %111 = trunc i64 %110 to i32
  %112 = lshr i64 %110, 32
  %113 = trunc i64 %112 to i32
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %115 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %115, i64 0, i32 0, i32 5, i32 0, i32 0
  %117 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %117, i64 0, i32 1, i32 1, i32 0
  %119 = load float, float* %118, align 4
  %120 = fcmp oeq float %119, 0.000000e+00
  br i1 %120, label %178, label %121

121:                                              ; preds = %104
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %117, i64 0, i32 1, i32 1, i32 1
  %123 = load float, float* %122, align 4
  %124 = fcmp oeq float %123, 0.000000e+00
  %125 = fcmp olt float %119, 1.562500e-02
  %126 = or i1 %125, %124
  %127 = fcmp olt float %123, 1.562500e-02
  %128 = or i1 %127, %126
  br i1 %128, label %178, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %117, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 4
  %132 = and i8 %131, 3
  %133 = zext i8 %132 to i32
  switch i32 %133, label %178 [
    i32 2, label %138
    i32 1, label %134
  ]

134:                                              ; preds = %129
  %135 = icmp slt i32 %111, 1
  %136 = icmp slt i32 %113, 1
  %137 = or i1 %135, %136
  br i1 %137, label %138, label %178

138:                                              ; preds = %134, %129
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %117, i64 0, i32 1, i32 1
  %140 = bitcast %"class.blink::FloatSize"* %139 to <2 x float>*
  %141 = load <2 x float>, <2 x float>* %140, align 4
  %142 = extractelement <2 x float> %141, i32 0
  %143 = extractelement <2 x float> %141, i32 1
  %144 = fmul float %142, 6.400000e+01
  %145 = fcmp ult float %144, 0xC1E0000000000000
  %146 = fcmp ugt float %144, 0x41DFFFFFE0000000
  %147 = fcmp ogt float %144, 0xC1E0000000000000
  %148 = select i1 %147, float %144, float 0xC1E0000000000000
  %149 = fptosi float %148 to i32
  %150 = select i1 %145, i32 0, i32 2147483647
  %151 = select i1 %146, i32 %150, i32 %149
  %152 = fmul float %143, 6.400000e+01
  %153 = fcmp ult float %152, 0xC1E0000000000000
  %154 = fcmp ugt float %152, 0x41DFFFFFE0000000
  %155 = fcmp ogt float %152, 0xC1E0000000000000
  %156 = select i1 %155, float %152, float 0xC1E0000000000000
  %157 = fptosi float %156 to i32
  %158 = select i1 %153, i32 0, i32 2147483647
  %159 = select i1 %154, i32 %158, i32 %157
  %160 = extractelement <2 x float> %141, i32 0
  %161 = fcmp une float %160, 0.000000e+00
  %162 = fcmp uge float %160, 1.562500e-02
  %163 = and i1 %162, %161
  %164 = icmp eq i8 %132, 2
  %165 = and i1 %163, %164
  br i1 %165, label %166, label %171

166:                                              ; preds = %138
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %117, i64 0, i32 11
  %168 = load i8, i8* %167, align 4
  %169 = and i8 %168, 2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %178, label %171

171:                                              ; preds = %138, %166
  %172 = icmp sgt i32 %4, -1
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %105, i32 %4) #11
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !4
  br label %178

178:                                              ; preds = %166, %134, %104, %121, %171, %129
  %179 = phi i32 [ 0, %129 ], [ %3, %171 ], [ 0, %166 ], [ 0, %121 ], [ 0, %104 ], [ 0, %134 ]
  %180 = phi i32 [ %111, %129 ], [ %151, %171 ], [ %151, %166 ], [ %111, %121 ], [ %111, %104 ], [ %111, %134 ]
  %181 = phi i32 [ %113, %129 ], [ %159, %171 ], [ %159, %166 ], [ %113, %121 ], [ %113, %104 ], [ %113, %134 ]
  %182 = phi i32 [ %105, %129 ], [ %177, %171 ], [ %105, %166 ], [ %105, %121 ], [ %105, %104 ], [ %105, %134 ]
  %183 = sitofp i32 %180 to float
  %184 = fmul float %183, 1.562500e-02
  %185 = sitofp i32 %181 to float
  %186 = fmul float %185, 1.562500e-02
  %187 = fdiv float %184, %186
  %188 = fpext float %187 to double
  %189 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %190 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %189 to i96*
  %191 = load i96, i96* %190, align 4
  %192 = trunc i96 %191 to i32
  %193 = icmp slt i32 %192, 0
  %194 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %195 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %195, i64 0, i32 0, i32 9
  %197 = bitcast [20 x i8]* %196 to i160*
  %198 = load i160, i160* %197, align 8
  %199 = lshr i160 %198, 32
  %200 = trunc i160 %199 to i32
  %201 = and i32 %200, 30
  %202 = or i32 %201, 1
  %203 = icmp eq i32 %202, 15
  %204 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %195, i64 0, i32 0, i32 3, i32 0, i32 0
  %205 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %204, align 8
  br i1 %203, label %206, label %213

206:                                              ; preds = %178
  %207 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %205, i64 0, i32 2, i32 0, i32 0
  %208 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %208, i64 0, i32 13
  %210 = bitcast [3 x i8]* %209 to i24*
  %211 = load i24, i24* %210, align 8
  %212 = icmp slt i24 %211, 0
  br label %220

213:                                              ; preds = %178
  %214 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %205, i64 0, i32 12
  %215 = load i16, i16* %214, align 4
  %216 = lshr i16 %215, 5
  %217 = and i16 %216, 2
  %218 = or i16 %217, 1
  %219 = icmp eq i16 %218, 3
  br label %220

220:                                              ; preds = %206, %213
  %221 = phi i1 [ %212, %206 ], [ %219, %213 ]
  %222 = xor i1 %193, %221
  %223 = sitofp i32 %182 to double
  %224 = fmul double %223, 1.562500e-02
  %225 = fdiv double %224, %188
  %226 = fmul double %224, %188
  %227 = select i1 %222, double %226, double %225
  %228 = fmul double %227, 6.400000e+01
  %229 = fcmp ult double %228, 0xC1E0000000000000
  %230 = fcmp ugt double %228, 0x41DFFFFFFFC00000
  %231 = fcmp ogt double %228, 0xC1E0000000000000
  %232 = select i1 %231, double %228, double 0xC1E0000000000000
  %233 = fptosi double %232 to i32
  %234 = select i1 %229, i32 0, i32 2147483647
  %235 = select i1 %230, i32 %234, i32 %233
  %236 = icmp slt i32 %179, 0
  %237 = select i1 %236, i32 -2147483648, i32 2147483647
  %238 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %235, i32 %179) #11
  %239 = extractvalue { i32, i1 } %238, 1
  %240 = extractvalue { i32, i1 } %238, 0
  %241 = select i1 %239, i32 %237, i32 %240
  ret i32 %241
}

declare i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #1

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox28SetFlowAwareLocationForChildERNS_9LayoutBoxERKNS_11LayoutPointE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutPoint"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = trunc i96 %7 to i32
  %9 = icmp slt i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = lshr i160 %14, 32
  %16 = trunc i160 %15 to i32
  %17 = and i32 %16, 30
  %18 = or i32 %17, 1
  %19 = icmp eq i32 %18, 15
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %20, align 8
  br i1 %19, label %22, label %29

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %24, i64 0, i32 13
  %26 = bitcast [3 x i8]* %25 to i24*
  %27 = load i24, i24* %26, align 8
  %28 = icmp slt i24 %27, 0
  br label %36

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 12
  %31 = load i16, i16* %30, align 4
  %32 = lshr i16 %31, 5
  %33 = and i16 %32, 2
  %34 = or i16 %33, 1
  %35 = icmp eq i16 %34, 3
  br label %36

36:                                               ; preds = %22, %29
  %37 = phi i1 [ %28, %22 ], [ %35, %29 ]
  %38 = xor i1 %9, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutPoint"* dereferenceable(8) %2) #11
  br label %51

40:                                               ; preds = %36
  %41 = bitcast i64* %4 to %"class.blink::LayoutPoint"*
  %42 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %2, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %2, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = shl nuw i64 %47, 32
  %49 = zext i32 %44 to i64
  %50 = or i64 %48, %49
  store i64 %50, i64* %4, align 8
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  br label %51

51:                                               ; preds = %40, %39
  ret void
}

declare void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"*, %"class.blink::LayoutPoint"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox24MainAxisLengthIsDefiniteERKNS_9LayoutBoxERKNS_6LengthEb(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::Length"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LayoutBlock"*, align 8
  %6 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %78, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = lshr i160 %14, 32
  %16 = trunc i160 %15 to i32
  %17 = and i32 %16, 30
  %18 = or i32 %17, 1
  %19 = icmp eq i32 %18, 15
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %20, align 8
  br i1 %19, label %22, label %29

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %24, i64 0, i32 13
  %26 = bitcast [3 x i8]* %25 to i24*
  %27 = load i24, i24* %26, align 8
  %28 = icmp slt i24 %27, 0
  br i1 %28, label %36, label %39

29:                                               ; preds = %9
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 12
  %31 = load i16, i16* %30, align 4
  %32 = lshr i16 %31, 5
  %33 = and i16 %32, 2
  %34 = or i16 %33, 1
  %35 = icmp eq i16 %34, 3
  br i1 %35, label %36, label %39

36:                                               ; preds = %22, %29
  %37 = add i8 %7, -3
  %38 = icmp ult i8 %37, 5
  br i1 %38, label %78, label %39

39:                                               ; preds = %22, %36, %29
  switch i8 %7, label %78 [
    i8 8, label %40
    i8 1, label %40
  ]

40:                                               ; preds = %39, %39
  br i1 %19, label %41, label %48

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %43, i64 0, i32 13
  %45 = bitcast [3 x i8]* %44 to i24*
  %46 = load i24, i24* %45, align 8
  %47 = icmp slt i24 %46, 0
  br i1 %47, label %55, label %78

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 12
  %50 = load i16, i16* %49, align 4
  %51 = lshr i16 %50, 5
  %52 = and i16 %51, 2
  %53 = or i16 %52, 1
  %54 = icmp eq i16 %53, 3
  br i1 %54, label %55, label %78

55:                                               ; preds = %41, %48
  %56 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  %57 = load i32, i32* %56, align 4
  switch i32 %57, label %59 [
    i32 0, label %78
    i32 1, label %58
  ]

58:                                               ; preds = %55
  br label %78

59:                                               ; preds = %55
  %60 = tail call zeroext i1 @_ZNK5blink9LayoutBox46HasOverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  br i1 %60, label %61, label %64

61:                                               ; preds = %59
  %62 = tail call i32 @_ZNK5blink9LayoutBox43OverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  %63 = icmp ne i32 %62, -64
  br label %78

64:                                               ; preds = %59
  %65 = bitcast %"class.blink::LayoutBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  store %"class.blink::LayoutBlock"* null, %"class.blink::LayoutBlock"** %5, align 8
  %66 = call i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBlock"** nonnull %5, i8* null) #11
  %67 = icmp ne i32 %66, -64
  br i1 %3, label %68, label %70

68:                                               ; preds = %64
  %69 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %5, align 8
  call void @_ZN5blink11LayoutBlock26AddPercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %69, %"class.blink::LayoutBox"* %1) #11
  br label %70

70:                                               ; preds = %68, %64
  %71 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 7
  %72 = load i8, i8* %71, align 8, !range !3
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = xor i1 %67, true
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %56, align 4
  br label %77

77:                                               ; preds = %70, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  br label %78

78:                                               ; preds = %39, %41, %55, %48, %36, %4, %77, %61, %58
  %79 = phi i1 [ false, %58 ], [ %63, %61 ], [ %67, %77 ], [ false, %4 ], [ false, %36 ], [ true, %55 ], [ true, %48 ], [ true, %39 ], [ true, %41 ]
  ret i1 %79
}

declare zeroext i1 @_ZNK5blink9LayoutBox46HasOverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox43OverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"*, %"class.blink::LayoutBlock"**, i8*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock26AddPercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox18CacheChildMainSizeERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutUnit", align 4
  %4 = alloca %"class.blink::Length", align 4
  %5 = alloca %"class.blink::Length", align 4
  %6 = alloca %"class.blink::LayoutBox"*, align 8
  %7 = alloca %"class.blink::LayoutBox"*, align 8
  %8 = bitcast %"class.blink::LayoutUnit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = trunc i96 %12 to i32
  %14 = icmp slt i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = lshr i160 %19, 32
  %21 = trunc i160 %20 to i32
  %22 = and i32 %21, 30
  %23 = or i32 %22, 1
  %24 = icmp eq i32 %23, 15
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %25, align 8
  br i1 %24, label %27, label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %29, i64 0, i32 13
  %31 = bitcast [3 x i8]* %30 to i24*
  %32 = load i24, i24* %31, align 8
  %33 = icmp slt i24 %32, 0
  br label %41

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %26, i64 0, i32 12
  %36 = load i16, i16* %35, align 4
  %37 = lshr i16 %36, 5
  %38 = and i16 %37, 2
  %39 = or i16 %38, 1
  %40 = icmp eq i16 %39, 3
  br label %41

41:                                               ; preds = %27, %34
  %42 = phi i1 [ %33, %27 ], [ %40, %34 ]
  %43 = xor i1 %14, %42
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = trunc i96 %46 to i32
  %48 = icmp sgt i32 %47, -1
  %49 = xor i1 %43, %48
  br i1 %49, label %50, label %58

50:                                               ; preds = %41
  %51 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %52 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %52, i64 69
  %54 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %53, align 8
  %55 = tail call i64 %54(%"class.blink::LayoutBox"* %1) #11
  %56 = lshr i64 %55, 32
  %57 = trunc i64 %56 to i32
  br label %119

58:                                               ; preds = %41
  %59 = bitcast %"class.blink::Length"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  call void @_ZNK5blink17LayoutFlexibleBox17FlexBasisForChildERKNS_9LayoutBoxE(%"class.blink::Length"* nonnull sret %4, %"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %60 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %61 = load i8, i8* %60, align 1
  switch i8 %61, label %62 [
    i8 8, label %63
    i8 1, label %63
  ]

62:                                               ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  br label %106

63:                                               ; preds = %58, %58
  %64 = bitcast %"class.blink::Length"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  call void @_ZNK5blink17LayoutFlexibleBox17FlexBasisForChildERKNS_9LayoutBoxE(%"class.blink::Length"* nonnull sret %5, %"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %65 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox24MainAxisLengthIsDefiniteERKNS_9LayoutBoxERKNS_6LengthEb(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* nonnull dereferenceable(8) %5, i1 zeroext true)
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 8
  br i1 %68, label %69, label %70

69:                                               ; preds = %63
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #11
  br label %70

70:                                               ; preds = %69, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %71 = load i8, i8* %60, align 1
  %72 = icmp eq i8 %71, 8
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  br i1 %65, label %106, label %75

74:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  br i1 %65, label %106, label %75

75:                                               ; preds = %73, %74
  %76 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %77 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %76, align 8
  %78 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %77, i64 166
  %79 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %78, align 8
  %80 = call i32 %79(%"class.blink::LayoutBox"* %1) #11
  %81 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %82 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %81)
  %83 = icmp slt i32 %82, 0
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 %82) #11
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !4
  %89 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %1)
  %90 = extractvalue { i64, i64 } %89, 1
  %91 = trunc i64 %90 to i32
  %92 = lshr i64 %90, 32
  %93 = trunc i64 %92 to i32
  %94 = icmp slt i32 %93, 0
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %91, i32 %93) #11
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !4
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %88, i32 %99) #11
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !4
  br label %119

106:                                              ; preds = %73, %74, %62
  %107 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %108 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %108, i64 0, i32 0, i32 9
  %110 = bitcast [20 x i8]* %109 to i160*
  %111 = load i160, i160* %110, align 8
  %112 = and i160 %111, 15211807202738752817960438464512
  %113 = icmp eq i160 %112, 0
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %115 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %116 = load i32, i32* %114, align 4
  %117 = load i32, i32* %115, align 4
  %118 = select i1 %113, i32 %116, i32 %117
  br label %119

119:                                              ; preds = %75, %106, %50
  %120 = phi i32 [ %105, %75 ], [ %118, %106 ], [ %57, %50 ]
  store i32 %120, i32* %9, align 4
  %121 = bitcast %"class.blink::LayoutBox"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #11
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %6, align 8
  %122 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0
  %123 = call { %"struct.WTF::KeyValuePair.2296"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPKNS1_9LayoutBoxERS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.2293"* %122, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %6, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3) #11
  %124 = extractvalue { %"struct.WTF::KeyValuePair.2296"*, i8 } %123, 1
  %125 = and i8 %124, 1
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %119
  %128 = extractvalue { %"struct.WTF::KeyValuePair.2296"*, i8 } %123, 0
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %128, i64 0, i32 1, i32 0
  %130 = load i32, i32* %9, align 4
  store i32 %130, i32* %129, align 4
  br label %131

131:                                              ; preds = %119, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #11
  %132 = bitcast %"class.blink::LayoutBox"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #11
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %7, align 8
  %133 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0
  %134 = call { %"class.blink::LayoutObject"**, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPKNS1_9LayoutBoxESH_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2298"* %133, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %7, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox27ClearCachedMainSizeForChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutObject"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2
  %5 = bitcast %"class.blink::LayoutObject"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject"** %3, align 8
  %7 = getelementptr inbounds %"class.WTF::HashMap.2292", %"class.WTF::HashMap.2292"* %4, i64 0, i32 0
  %8 = call { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2293"* %7, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %3) #11
  %9 = extractvalue { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.2292", %"class.WTF::HashMap.2292"* %4, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair.2296"* %15, %9
  br i1 %16, label %64, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %9, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -1 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, 1
  %22 = and i32 %21, 2147483647
  %23 = and i32 %20, -2147483648
  %24 = or i32 %22, %23
  store i32 %24, i32* %19, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  %28 = mul i32 %27, 6
  %29 = load i32, i32* %12, align 8
  %30 = icmp ult i32 %28, %29
  %31 = icmp ugt i32 %29, 8
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %64

33:                                               ; preds = %17
  %34 = lshr i32 %29, 1
  %35 = zext i32 %34 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENS2_10LayoutUnitEEEEEPKcv, i64 0, i64 0)) #11
  %38 = bitcast i8* %37 to %"struct.WTF::KeyValuePair.2296"*
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %62, label %40

40:                                               ; preds = %33
  %41 = and i64 %35, 1
  %42 = icmp eq i32 %34, 1
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = sub nsw i64 %35, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %53, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %54, %45 ]
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %38, i64 %46, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %38, i64 %46, i32 1, i32 0
  store i32 0, i32* %49, align 8
  %50 = or i64 %46, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %38, i64 %50, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %38, i64 %50, i32 1, i32 0
  store i32 0, i32* %52, align 8
  %53 = add nuw nsw i64 %46, 2
  %54 = add i64 %47, -2
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45

56:                                               ; preds = %45, %40
  %57 = phi i64 [ 0, %40 ], [ %53, %45 ]
  %58 = icmp eq i64 %41, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %38, i64 %57, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %60, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %38, i64 %57, i32 1, i32 0
  store i32 0, i32* %61, align 8
  br label %62

62:                                               ; preds = %59, %56, %33
  %63 = call %"struct.WTF::KeyValuePair.2296"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.2293"* %7, %"struct.WTF::KeyValuePair.2296"* %38, i32 %34, %"struct.WTF::KeyValuePair.2296"* null) #11
  br label %64

64:                                               ; preds = %2, %17, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox24CanAvoidLayoutForNGChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %5 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, i64 92
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutObject"* %3, i32 30) #11
  br i1 %8, label %9, label %50

9:                                                ; preds = %2
  %10 = tail call %"class.blink::NGLayoutResult"* @_ZNK5blink9LayoutBox21GetCachedLayoutResultEv(%"class.blink::LayoutBox"* %1) #11
  %11 = icmp eq %"class.blink::NGLayoutResult"* %10, null
  br i1 %11, label %50, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %10, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %10, i64 0, i32 2, i32 3, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 2097152
  %17 = icmp ne i32 %16, 0
  %18 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasOverrideLogicalWidthEv(%"class.blink::LayoutBox"* %1) #11
  %19 = xor i1 %18, %17
  br i1 %19, label %50, label %20

20:                                               ; preds = %12
  %21 = load i32, i32* %14, align 8
  %22 = and i32 %21, 4194304
  %23 = icmp ne i32 %22, 0
  %24 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  %25 = xor i1 %24, %23
  br i1 %25, label %50, label %26

26:                                               ; preds = %20
  %27 = load i32, i32* %14, align 8
  %28 = and i32 %27, 8388608
  %29 = icmp eq i32 %28, 0
  %30 = tail call zeroext i1 @_ZNK5blink17LayoutFlexibleBox46UseOverrideLogicalHeightForPerentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %31 = xor i1 %30, %29
  br i1 %31, label %50, label %32

32:                                               ; preds = %26
  %33 = tail call zeroext i1 @_ZNK5blink9LayoutBox23HasOverrideLogicalWidthEv(%"class.blink::LayoutBox"* %1) #11
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = bitcast %"class.blink::NGConstraintSpace"* %13 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  %38 = tail call i32 @_ZNK5blink9LayoutBox20OverrideLogicalWidthEv(%"class.blink::LayoutBox"* %1) #11
  %39 = icmp eq i32 %38, %37
  br i1 %39, label %40, label %50

40:                                               ; preds = %34, %32
  %41 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  br i1 %41, label %42, label %49

42:                                               ; preds = %40
  %43 = bitcast %"class.blink::NGConstraintSpace"* %13 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = lshr i64 %44, 32
  %46 = trunc i64 %45 to i32
  %47 = tail call i32 @_ZNK5blink9LayoutBox21OverrideLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  %48 = icmp eq i32 %47, %46
  br i1 %48, label %49, label %50

49:                                               ; preds = %42, %40
  br label %50

50:                                               ; preds = %34, %42, %9, %26, %20, %12, %49, %2
  %51 = phi i1 [ false, %2 ], [ false, %9 ], [ true, %49 ], [ false, %12 ], [ false, %20 ], [ false, %26 ], [ false, %34 ], [ false, %42 ]
  ret i1 %51
}

declare %"class.blink::NGLayoutResult"* @_ZNK5blink9LayoutBox21GetCachedLayoutResultEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox23HasOverrideLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox46UseOverrideLogicalHeightForPerentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = trunc i96 %6 to i32
  %8 = icmp slt i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 32
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 30
  %17 = or i32 %16, 1
  %18 = icmp eq i32 %17, 15
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %19, align 8
  br i1 %18, label %21, label %28

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %23, i64 0, i32 13
  %25 = bitcast [3 x i8]* %24 to i24*
  %26 = load i24, i24* %25, align 8
  %27 = icmp slt i24 %26, 0
  br label %35

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 12
  %30 = load i16, i16* %29, align 4
  %31 = lshr i16 %30, 5
  %32 = and i16 %31, 2
  %33 = or i16 %32, 1
  %34 = icmp eq i16 %33, 3
  br label %35

35:                                               ; preds = %21, %28
  %36 = phi i1 [ %27, %21 ], [ %34, %28 ]
  %37 = xor i1 %8, %36
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %39 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %38 to i96*
  %40 = load i96, i96* %39, align 4
  %41 = trunc i96 %40 to i32
  %42 = icmp sgt i32 %41, -1
  %43 = xor i1 %37, %42
  br i1 %43, label %44, label %51

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %10, %"class.blink::ComputedStyle"* dereferenceable(104) %46) #11
  %48 = icmp eq i32 %47, 3
  br i1 %48, label %49, label %60

49:                                               ; preds = %44
  %50 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  br label %60

51:                                               ; preds = %35
  %52 = bitcast %"class.blink::Length"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %53, align 4, !alias.scope !48
  %54 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 1
  store i8 0, i8* %54, align 4, !alias.scope !48
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  store i8 1, i8* %55, align 1, !alias.scope !48
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  store i8 0, i8* %56, align 2, !alias.scope !48
  %57 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox24MainAxisLengthIsDefiniteERKNS_9LayoutBoxERKNS_6LengthEb(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* nonnull dereferenceable(8) %3, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  br label %60

60:                                               ; preds = %58, %51, %49, %44
  %61 = phi i1 [ false, %44 ], [ %50, %49 ], [ %59, %58 ], [ false, %51 ]
  ret i1 %61
}

declare i32 @_ZNK5blink9LayoutBox20OverrideLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox21OverrideLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox32ComputeInnerFlexBaseSizeForChildERNS_9LayoutBoxENS_10LayoutUnitES3_NS0_15ChildLayoutTypeE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %13 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, i64 21
  %15 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %11) #11
  br i1 %16, label %28, label %17

17:                                               ; preds = %5
  %18 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, i64 92
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* %11, i32 54) #11
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %18, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, i64 92
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %11, i32 2) #11
  br i1 %27, label %28, label %50

28:                                               ; preds = %23, %17, %5
  %29 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %28, %32
  %33 = phi %"class.blink::LayoutObject"* [ %35, %32 ], [ %10, %28 ]
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 7
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 6, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %32, label %39

39:                                               ; preds = %32, %28
  %40 = phi %"class.blink::Node"* [ %30, %28 ], [ %37, %32 ]
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %44, i64 0, i32 2
  %46 = bitcast %"class.blink::UseCounter"* %45 to void (%"class.blink::UseCounter"*, i32)***
  %47 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %47, i64 3
  %49 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %48, align 8
  tail call void %49(%"class.blink::UseCounter"* %45, i32 479) #11
  br label %50

50:                                               ; preds = %39, %23
  %51 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  store i64 -6148914691236517206, i64* %6, align 8
  call void @_ZNK5blink17LayoutFlexibleBox17FlexBasisForChildERKNS_9LayoutBoxE(%"class.blink::Length"* nonnull sret %7, %"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %83

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = lshr i160 %60, 32
  %62 = trunc i160 %61 to i32
  %63 = and i32 %62, 30
  %64 = or i32 %63, 1
  %65 = icmp eq i32 %64, 15
  br i1 %65, label %66, label %83

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %70, i64 0, i32 13
  %72 = bitcast [3 x i8]* %71 to i24*
  %73 = load i24, i24* %72, align 8
  %74 = and i24 %73, -8374272
  %75 = icmp eq i24 %74, -8384512
  br i1 %75, label %83, label %76

76:                                               ; preds = %66
  %77 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  %78 = bitcast i64* %8 to i32*
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 1
  store i8 0, i8* %79, align 4
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  store i8 7, i8* %80, align 1
  %81 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 3
  store i8 0, i8* %81, align 2
  %82 = load i64, i64* %8, align 8
  store i64 %82, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  br label %83

83:                                               ; preds = %66, %76, %55, %50
  %84 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox24MainAxisLengthIsDefiniteERKNS_9LayoutBoxERKNS_6LengthEb(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* nonnull dereferenceable(8) %7, i1 zeroext true)
  br i1 %84, label %85, label %89

85:                                               ; preds = %83
  %86 = call i32 @_ZNK5blink17LayoutFlexibleBox29ComputeMainAxisExtentForChildERKNS_9LayoutBoxENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 0, %"class.blink::Length"* nonnull dereferenceable(8) %7, i32 %2)
  %87 = icmp sgt i32 %86, 0
  %88 = select i1 %87, i32 %86, i32 0
  br label %364

89:                                               ; preds = %83
  %90 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox19UseChildAspectRatioERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %91 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %92 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %91 to i96*
  %93 = load i96, i96* %92, align 4
  %94 = trunc i96 %93 to i32
  %95 = icmp slt i32 %94, 0
  %96 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %97 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %97, i64 0, i32 0, i32 9
  %99 = bitcast [20 x i8]* %98 to i160*
  %100 = load i160, i160* %99, align 8
  %101 = lshr i160 %100, 32
  %102 = trunc i160 %101 to i32
  %103 = and i32 %102, 30
  %104 = or i32 %103, 1
  %105 = icmp eq i32 %104, 15
  %106 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %97, i64 0, i32 0, i32 3, i32 0, i32 0
  %107 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %106, align 8
  br i1 %90, label %108, label %142

108:                                              ; preds = %89
  br i1 %105, label %109, label %116

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %107, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %111, i64 0, i32 13
  %113 = bitcast [3 x i8]* %112 to i24*
  %114 = load i24, i24* %113, align 8
  %115 = icmp slt i24 %114, 0
  br label %123

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %107, i64 0, i32 12
  %118 = load i16, i16* %117, align 4
  %119 = lshr i16 %118, 5
  %120 = and i16 %119, 2
  %121 = or i16 %120, 1
  %122 = icmp eq i16 %121, 3
  br label %123

123:                                              ; preds = %109, %116
  %124 = phi i1 [ %115, %109 ], [ %122, %116 ]
  %125 = xor i1 %95, %124
  %126 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %127 = bitcast %"class.blink::ComputedStyle"** %126 to %"class.blink::ComputedStyleBase"**
  %128 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %128, i64 0, i32 5, i32 0, i32 0
  %130 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %130, i64 0, i32 3
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %130, i64 0, i32 8
  %133 = select i1 %125, %"class.blink::Length"* %131, %"class.blink::Length"* %132
  %134 = call i32 @_ZNK5blink17LayoutFlexibleBox35ComputeMainSizeFromAspectRatioUsingERKNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitES7_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* dereferenceable(8) %133, i32 %2, i32 %3)
  %135 = call i32 @_ZNK5blink17LayoutFlexibleBox47AdjustChildSizeForAspectRatioCrossAxisMinAndMaxERKNS_9LayoutBoxENS_10LayoutUnitES4_S4_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %134, i32 %2, i32 %3)
  %136 = icmp sgt i32 %2, -1
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %135, i32 %2) #11
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !4
  br label %364

142:                                              ; preds = %89
  br i1 %105, label %143, label %150

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %107, i64 0, i32 2, i32 0, i32 0
  %145 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %145, i64 0, i32 13
  %147 = bitcast [3 x i8]* %146 to i24*
  %148 = load i24, i24* %147, align 8
  %149 = icmp slt i24 %148, 0
  br label %157

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %107, i64 0, i32 12
  %152 = load i16, i16* %151, align 4
  %153 = lshr i16 %152, 5
  %154 = and i16 %153, 2
  %155 = or i16 %154, 1
  %156 = icmp eq i16 %155, 3
  br label %157

157:                                              ; preds = %143, %150
  %158 = phi i1 [ %149, %143 ], [ %156, %150 ]
  %159 = xor i1 %95, %158
  %160 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %161 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %160 to i96*
  %162 = load i96, i96* %161, align 4
  %163 = trunc i96 %162 to i32
  %164 = icmp sgt i32 %163, -1
  %165 = xor i1 %159, %164
  br i1 %165, label %166, label %174

166:                                              ; preds = %157
  %167 = bitcast %"class.blink::LayoutBox"* %1 to i64 (%"class.blink::LayoutBox"*)***
  %168 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %167, align 8
  %169 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %168, i64 69
  %170 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %169, align 8
  %171 = call i64 %170(%"class.blink::LayoutBox"* %1) #11
  %172 = lshr i64 %171, 32
  %173 = trunc i64 %172 to i32
  br label %356

174:                                              ; preds = %157
  %175 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %176 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %176, i64 0, i32 0, i32 9
  %178 = bitcast [20 x i8]* %177 to i160*
  %179 = load i160, i160* %178, align 8
  %180 = and i160 %179, 15211807202738752817960438464512
  %181 = icmp eq i160 %180, 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %174
  %183 = call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %1) #11
  br i1 %183, label %186, label %216

184:                                              ; preds = %174
  %185 = call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %1) #11
  br i1 %185, label %186, label %216

186:                                              ; preds = %182, %184
  %187 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %175, align 8
  %188 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %187, i64 0, i32 0, i32 9
  %189 = bitcast [20 x i8]* %188 to i160*
  %190 = load i160, i160* %189, align 8
  %191 = and i160 %190, 15211807202738752817960438464512
  %192 = icmp eq i160 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %186
  %194 = call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %1) #11
  br label %197

195:                                              ; preds = %186
  %196 = call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %1) #11
  br label %197

197:                                              ; preds = %193, %195
  %198 = phi i32 [ %194, %193 ], [ %196, %195 ]
  %199 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %1)
  %200 = extractvalue { i64, i64 } %199, 1
  %201 = trunc i64 %200 to i32
  %202 = lshr i64 %200, 32
  %203 = trunc i64 %202 to i32
  %204 = icmp slt i32 %203, 0
  %205 = select i1 %204, i32 -2147483648, i32 2147483647
  %206 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %201, i32 %203) #11
  %207 = extractvalue { i32, i1 } %206, 1
  %208 = extractvalue { i32, i1 } %206, 0
  %209 = select i1 %207, i32 %205, i32 %208, !prof !4
  %210 = icmp slt i32 %209, 0
  %211 = select i1 %210, i32 -2147483648, i32 2147483647
  %212 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %198, i32 %209) #11
  %213 = extractvalue { i32, i1 } %212, 1
  %214 = extractvalue { i32, i1 } %212, 0
  %215 = select i1 %213, i32 %211, i32 %214, !prof !4
  br label %364

216:                                              ; preds = %182, %184
  %217 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %175, align 8
  %218 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %217, i64 0, i32 0, i32 3, i32 0, i32 0
  %219 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %219, i64 0, i32 2, i32 0, i32 0
  %221 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %221, i64 0, i32 2, i32 0, i32 0
  %223 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %223, i64 0, i32 45
  %225 = load i32, i32* %224, align 4
  %226 = and i32 %225, 24
  %227 = icmp eq i32 %226, 24
  br i1 %227, label %228, label %285

228:                                              ; preds = %216
  %229 = load i96, i96* %161, align 4
  %230 = and i96 %229, 1207959552
  %231 = icmp eq i96 %230, 134217728
  br i1 %231, label %285, label %232

232:                                              ; preds = %228
  %233 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %234 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %233, align 8
  %235 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %234, i64 92
  %236 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %235, align 8
  %237 = call zeroext i1 %236(%"class.blink::LayoutObject"* %11, i32 43) #11
  br i1 %237, label %285, label %238

238:                                              ; preds = %232
  %239 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %233, align 8
  %240 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %239, i64 92
  %241 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %240, align 8
  %242 = call zeroext i1 %241(%"class.blink::LayoutObject"* %11, i32 46) #11
  br i1 %242, label %263, label %243

243:                                              ; preds = %238
  %244 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %233, align 8
  %245 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %244, i64 92
  %246 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %245, align 8
  %247 = call zeroext i1 %246(%"class.blink::LayoutObject"* %11, i32 48) #11
  br i1 %247, label %263, label %248

248:                                              ; preds = %243
  %249 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %233, align 8
  %250 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %249, i64 92
  %251 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %250, align 8
  %252 = call zeroext i1 %251(%"class.blink::LayoutObject"* %11, i32 45) #11
  br i1 %252, label %263, label %253

253:                                              ; preds = %248
  %254 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %233, align 8
  %255 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %254, i64 92
  %256 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %255, align 8
  %257 = call zeroext i1 %256(%"class.blink::LayoutObject"* %11, i32 49) #11
  br i1 %257, label %263, label %258

258:                                              ; preds = %253
  %259 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %233, align 8
  %260 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %259, i64 92
  %261 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %260, align 8
  %262 = call zeroext i1 %261(%"class.blink::LayoutObject"* %11, i32 50) #11
  br i1 %262, label %263, label %268

263:                                              ; preds = %258, %253, %248, %243, %238
  %264 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %233, align 8
  %265 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %264, i64 92
  %266 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %265, align 8
  %267 = call zeroext i1 %266(%"class.blink::LayoutObject"* %11, i32 45) #11
  br i1 %267, label %268, label %285

268:                                              ; preds = %258, %263
  %269 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %233, align 8
  %270 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %269, i64 92
  %271 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %270, align 8
  %272 = call zeroext i1 %271(%"class.blink::LayoutObject"* %11, i32 44) #11
  br i1 %272, label %285, label %273

273:                                              ; preds = %268
  %274 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %1)
  %275 = extractvalue { i64, i64 } %274, 1
  %276 = trunc i64 %275 to i32
  %277 = lshr i64 %275, 32
  %278 = trunc i64 %277 to i32
  %279 = icmp slt i32 %278, 0
  %280 = select i1 %279, i32 -2147483648, i32 2147483647
  %281 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %276, i32 %278) #11
  %282 = extractvalue { i32, i1 } %281, 1
  %283 = extractvalue { i32, i1 } %281, 0
  %284 = select i1 %282, i32 %280, i32 %283, !prof !4
  br label %364

285:                                              ; preds = %268, %228, %232, %263, %216
  %286 = icmp eq i32 %4, 2
  br i1 %286, label %364, label %287

287:                                              ; preds = %285
  %288 = ptrtoint %"class.blink::LayoutBox"* %1 to i64
  %289 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 0
  %290 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %289, align 8
  %291 = icmp eq %"struct.WTF::KeyValuePair.2296"* %290, null
  br i1 %291, label %356, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 1
  %294 = load i32, i32* %293, align 8
  %295 = add i32 %294, -1
  %296 = zext i32 %295 to i64
  %297 = shl i64 %288, 32
  %298 = xor i64 %297, -1
  %299 = add i64 %298, %288
  %300 = lshr i64 %299, 22
  %301 = xor i64 %300, %299
  %302 = shl i64 %301, 13
  %303 = xor i64 %302, -1
  %304 = add i64 %301, %303
  %305 = lshr i64 %304, 8
  %306 = xor i64 %305, %304
  %307 = mul i64 %306, 9
  %308 = lshr i64 %307, 15
  %309 = xor i64 %308, %307
  %310 = shl i64 %309, 27
  %311 = xor i64 %310, -1
  %312 = add i64 %309, %311
  %313 = lshr i64 %312, 31
  %314 = xor i64 %313, %312
  %315 = trunc i64 %314 to i32
  %316 = and i32 %295, %315
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %290, i64 %317
  %319 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %318, i64 0, i32 0
  %320 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %319, align 8
  %321 = icmp eq %"class.blink::LayoutObject"* %320, %11
  br i1 %321, label %350, label %322

322:                                              ; preds = %292
  %323 = xor i32 %315, -1
  %324 = lshr i32 %315, 23
  %325 = add i32 %324, %323
  %326 = shl i32 %325, 12
  %327 = xor i32 %326, %325
  %328 = lshr i32 %327, 7
  %329 = xor i32 %328, %327
  %330 = shl i32 %329, 2
  %331 = xor i32 %330, %329
  %332 = lshr i32 %331, 20
  %333 = xor i32 %332, %331
  %334 = or i32 %333, 1
  %335 = zext i32 %334 to i64
  br label %336

336:                                              ; preds = %341, %322
  %337 = phi %"class.blink::LayoutObject"* [ %320, %322 ], [ %348, %341 ]
  %338 = phi i64 [ %317, %322 ], [ %345, %341 ]
  %339 = phi i64 [ 0, %322 ], [ %343, %341 ]
  %340 = icmp eq %"class.blink::LayoutObject"* %337, null
  br i1 %340, label %356, label %341

341:                                              ; preds = %336
  %342 = icmp eq i64 %339, 0
  %343 = select i1 %342, i64 %335, i64 %339
  %344 = add i64 %343, %338
  %345 = and i64 %344, %296
  %346 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %290, i64 %345
  %347 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %346, i64 0, i32 0
  %348 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %347, align 8
  %349 = icmp eq %"class.blink::LayoutObject"* %348, %11
  br i1 %349, label %350, label %336

350:                                              ; preds = %341, %292
  %351 = phi %"struct.WTF::KeyValuePair.2296"* [ %318, %292 ], [ %346, %341 ]
  %352 = icmp eq %"struct.WTF::KeyValuePair.2296"* %351, null
  br i1 %352, label %356, label %353

353:                                              ; preds = %350
  %354 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %351, i64 0, i32 1, i32 0
  %355 = load i32, i32* %354, align 4
  br label %356

356:                                              ; preds = %336, %287, %353, %350, %166
  %357 = phi i32 [ %173, %166 ], [ %355, %353 ], [ 0, %350 ], [ 0, %287 ], [ 0, %336 ]
  %358 = icmp sgt i32 %2, -1
  %359 = select i1 %358, i32 -2147483648, i32 2147483647
  %360 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %357, i32 %2) #11
  %361 = extractvalue { i32, i1 } %360, 1
  %362 = extractvalue { i32, i1 } %360, 0
  %363 = select i1 %361, i32 %359, i32 %362, !prof !4
  br label %364

364:                                              ; preds = %197, %273, %356, %285, %123, %85
  %365 = phi i32 [ %88, %85 ], [ %141, %123 ], [ %363, %356 ], [ %215, %197 ], [ %284, %273 ], [ 0, %285 ]
  %366 = load i8, i8* %52, align 1
  %367 = icmp eq i8 %366, 8
  br i1 %367, label %368, label %369

368:                                              ; preds = %364
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #11
  br label %369

369:                                              ; preds = %364, %368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  ret i32 %365
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox47AdjustChildSizeForAspectRatioCrossAxisMinAndMaxERKNS_9LayoutBoxENS_10LayoutUnitES4_S4_(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = trunc i96 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = lshr i160 %15, 32
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 30
  %19 = or i32 %18, 1
  %20 = icmp eq i32 %19, 15
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %21, align 8
  br i1 %20, label %23, label %30

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %25, i64 0, i32 13
  %27 = bitcast [3 x i8]* %26 to i24*
  %28 = load i24, i24* %27, align 8
  %29 = icmp slt i24 %28, 0
  br label %37

30:                                               ; preds = %5
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 12
  %32 = load i16, i16* %31, align 4
  %33 = lshr i16 %32, 5
  %34 = and i16 %33, 2
  %35 = or i16 %34, 1
  %36 = icmp eq i16 %35, 3
  br label %37

37:                                               ; preds = %23, %30
  %38 = phi i1 [ %29, %23 ], [ %36, %30 ]
  %39 = xor i1 %10, %38
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %41 = bitcast %"class.blink::ComputedStyle"** %40 to %"class.blink::ComputedStyleBase"**
  %42 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %42, i64 0, i32 5, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %44, i64 0, i32 6
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %44, i64 0, i32 7
  %47 = select i1 %39, %"class.blink::Length"* %45, %"class.blink::Length"* %46
  br i1 %20, label %48, label %55

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %50, i64 0, i32 13
  %52 = bitcast [3 x i8]* %51 to i24*
  %53 = load i24, i24* %52, align 8
  %54 = icmp slt i24 %53, 0
  br label %62

55:                                               ; preds = %37
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 12
  %57 = load i16, i16* %56, align 4
  %58 = lshr i16 %57, 5
  %59 = and i16 %58, 2
  %60 = or i16 %59, 1
  %61 = icmp eq i16 %60, 3
  br label %62

62:                                               ; preds = %48, %55
  %63 = phi i1 [ %54, %48 ], [ %61, %55 ]
  %64 = xor i1 %10, %63
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %44, i64 0, i32 4
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %44, i64 0, i32 5
  %67 = select i1 %64, %"class.blink::Length"* %65, %"class.blink::Length"* %66
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %67, i64 0, i32 2
  %69 = load i8, i8* %68, align 1
  switch i8 %69, label %106 [
    i8 2, label %102
    i8 8, label %70
    i8 1, label %70
  ]

70:                                               ; preds = %62, %62
  br i1 %20, label %71, label %78

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %73, i64 0, i32 13
  %75 = bitcast [3 x i8]* %74 to i24*
  %76 = load i24, i24* %75, align 8
  %77 = icmp slt i24 %76, 0
  br label %85

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 12
  %80 = load i16, i16* %79, align 4
  %81 = lshr i16 %80, 5
  %82 = and i16 %81, 2
  %83 = or i16 %82, 1
  %84 = icmp eq i16 %83, 3
  br label %85

85:                                               ; preds = %78, %71
  %86 = phi i1 [ %77, %71 ], [ %84, %78 ]
  %87 = xor i1 %10, %86
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %89 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %88 to i96*
  %90 = load i96, i96* %89, align 4
  %91 = trunc i96 %90 to i32
  %92 = icmp sgt i32 %91, -1
  %93 = xor i1 %87, %92
  br i1 %93, label %94, label %102

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  %96 = load i32, i32* %95, align 4
  switch i32 %96, label %97 [
    i32 0, label %102
    i32 1, label %106
  ]

97:                                               ; preds = %94
  %98 = tail call i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBlock"** null, i8* null) #11
  %99 = icmp ne i32 %98, -64
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  store i32 %101, i32* %95, align 4
  br i1 %99, label %102, label %106

102:                                              ; preds = %62, %85, %94, %97
  %103 = tail call i32 @_ZNK5blink17LayoutFlexibleBox35ComputeMainSizeFromAspectRatioUsingERKNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitES7_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* dereferenceable(8) %67, i32 %3, i32 %4)
  %104 = icmp sgt i32 %103, %2
  %105 = select i1 %104, i32 %2, i32 %103
  br label %106

106:                                              ; preds = %94, %62, %102, %97
  %107 = phi i32 [ %2, %94 ], [ %2, %62 ], [ %105, %102 ], [ %2, %97 ]
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %47, i64 0, i32 2
  %109 = load i8, i8* %108, align 1
  switch i8 %109, label %160 [
    i8 2, label %156
    i8 8, label %110
    i8 1, label %110
  ]

110:                                              ; preds = %106, %106
  %111 = load i96, i96* %7, align 4
  %112 = trunc i96 %111 to i32
  %113 = icmp slt i32 %112, 0
  %114 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %114, i64 0, i32 0, i32 9
  %116 = bitcast [20 x i8]* %115 to i160*
  %117 = load i160, i160* %116, align 8
  %118 = lshr i160 %117, 32
  %119 = trunc i160 %118 to i32
  %120 = and i32 %119, 30
  %121 = or i32 %120, 1
  %122 = icmp eq i32 %121, 15
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %114, i64 0, i32 0, i32 3, i32 0, i32 0
  %124 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %123, align 8
  br i1 %122, label %125, label %132

125:                                              ; preds = %110
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %124, i64 0, i32 2, i32 0, i32 0
  %127 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %127, i64 0, i32 13
  %129 = bitcast [3 x i8]* %128 to i24*
  %130 = load i24, i24* %129, align 8
  %131 = icmp slt i24 %130, 0
  br label %139

132:                                              ; preds = %110
  %133 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %124, i64 0, i32 12
  %134 = load i16, i16* %133, align 4
  %135 = lshr i16 %134, 5
  %136 = and i16 %135, 2
  %137 = or i16 %136, 1
  %138 = icmp eq i16 %137, 3
  br label %139

139:                                              ; preds = %132, %125
  %140 = phi i1 [ %131, %125 ], [ %138, %132 ]
  %141 = xor i1 %113, %140
  %142 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %143 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %142 to i96*
  %144 = load i96, i96* %143, align 4
  %145 = trunc i96 %144 to i32
  %146 = icmp sgt i32 %145, -1
  %147 = xor i1 %141, %146
  br i1 %147, label %148, label %156

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 6
  %150 = load i32, i32* %149, align 4
  switch i32 %150, label %151 [
    i32 0, label %156
    i32 1, label %160
  ]

151:                                              ; preds = %148
  %152 = tail call i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBlock"** null, i8* null) #11
  %153 = icmp ne i32 %152, -64
  %154 = xor i1 %153, true
  %155 = zext i1 %154 to i32
  store i32 %155, i32* %149, align 4
  br i1 %153, label %156, label %160

156:                                              ; preds = %106, %139, %148, %151
  %157 = tail call i32 @_ZNK5blink17LayoutFlexibleBox35ComputeMainSizeFromAspectRatioUsingERKNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitES7_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* dereferenceable(8) %47, i32 %3, i32 %4)
  %158 = icmp slt i32 %157, %107
  %159 = select i1 %158, i32 %107, i32 %157
  br label %160

160:                                              ; preds = %148, %106, %156, %151
  %161 = phi i32 [ %107, %148 ], [ %107, %106 ], [ %159, %156 ], [ %107, %151 ]
  ret i32 %161
}

declare void @_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScopeC1ERNS_18SubtreeLayoutScopeE(%"class.blink::PaintLayerScrollableArea::PreventRelayoutScope"*, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink19FlexLayoutAlgorithmC1EPKNS_13ComputedStyleENS_10LayoutUnitENS_11LogicalSizeEPNS_8DocumentE(%"class.blink::FlexLayoutAlgorithm"*, %"class.blink::ComputedStyle"*, i32, i64, %"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox31PrepareChildForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #11
  tail call void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %4, %"class.blink::LayoutBox"* %1) #11
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %5, align 8
  %7 = icmp eq %"struct.blink::FragmentData::RareData"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"class.blink::PaintLayer"* [ %10, %8 ], [ null, %2 ]
  %13 = tail call i32 @_ZNK5blink17LayoutFlexibleBox26FlowAwareContentInsetStartEv(%"class.blink::LayoutFlexibleBox"* %0)
  %14 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %12, i64 0, i32 10, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, %13
  br i1 %16, label %50, label %17

17:                                               ; preds = %11
  store i32 %13, i32* %14, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, 15211807202738752817960438464512
  %26 = icmp eq i160 %25, 0
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 7, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %27, align 8
  br i1 %26, label %29, label %37

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %28, i64 0, i32 8, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %50

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %28, i64 0, i32 17, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %45, label %50

37:                                               ; preds = %17
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %28, i64 0, i32 18, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %28, i64 0, i32 7, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %33, %41
  %46 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %3, i32 1) #11
  %48 = load i96, i96* %47, align 4
  %49 = or i96 %48, 1180591620717411303432
  store i96 %49, i96* %47, align 4
  br label %50

50:                                               ; preds = %11, %37, %29, %33, %41, %45
  %51 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  %53 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm25GetTransformedWritingModeERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %52) #11
  switch i32 %53, label %64 [
    i32 0, label %54
    i32 3, label %57
    i32 2, label %59
    i32 1, label %62
  ]

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %56 = tail call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %55) #11
  br label %65

57:                                               ; preds = %50
  %58 = tail call i32 @_ZNK5blink17LayoutFlexibleBox18ContentInsetBottomEv(%"class.blink::LayoutFlexibleBox"* %0) #11
  br label %65

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %61 = tail call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %60) #11
  br label %65

62:                                               ; preds = %50
  %63 = tail call i32 @_ZNK5blink17LayoutFlexibleBox17ContentInsetRightEv(%"class.blink::LayoutFlexibleBox"* %0) #11
  br label %65

64:                                               ; preds = %50
  unreachable

65:                                               ; preds = %54, %57, %59, %62
  %66 = phi i32 [ %63, %62 ], [ %61, %59 ], [ %58, %57 ], [ %56, %54 ]
  %67 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %12, i64 0, i32 11, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %66
  br i1 %69, label %102, label %70

70:                                               ; preds = %65
  store i32 %66, i32* %67, align 4
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %71, align 8
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 0
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 7, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %79, align 8
  br i1 %78, label %81, label %89

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %80, i64 0, i32 18, i32 2
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %102

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %80, i64 0, i32 7, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %97, label %102

89:                                               ; preds = %70
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %80, i64 0, i32 8, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %102

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %80, i64 0, i32 17, i32 2
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %102

97:                                               ; preds = %85, %93
  %98 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %99 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %98 to i96*
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %3, i32 1) #11
  %100 = load i96, i96* %99, align 4
  %101 = or i96 %100, 1180591620717411303432
  store i96 %101, i96* %99, align 4
  br label %102

102:                                              ; preds = %65, %89, %81, %85, %93, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox26ConstructAndAppendFlexItemEPNS_19FlexLayoutAlgorithmERNS_9LayoutBoxENS0_15ChildLayoutTypeE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::optional.2359", align 8
  %6 = alloca %"struct.blink::NGPhysicalBoxStrut", align 8
  %7 = alloca %"struct.blink::NGBoxStrut", align 8
  %8 = icmp eq i32 %3, 2
  br i1 %8, label %97, label %9

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK5blink17LayoutFlexibleBox29ChildHasIntrinsicMainAxisSizeERKNS_19FlexLayoutAlgorithmERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216) %1, %"class.blink::LayoutBox"* dereferenceable(216) %2)
  br i1 %10, label %11, label %97

11:                                               ; preds = %9
  %12 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %13 = icmp eq i32 %3, 1
  tail call void @_ZN5blink11LayoutBlock37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %12, i1 zeroext %13, %"class.blink::LayoutBox"* dereferenceable(216) %2) #11
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 63
  %19 = icmp ne i96 %18, 0
  %20 = or i1 %13, %19
  br i1 %20, label %87, label %21

21:                                               ; preds = %11
  %22 = ptrtoint %"class.blink::LayoutBox"* %2 to i64
  %23 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %23, align 8
  %25 = icmp eq %"struct.WTF::KeyValuePair.2296"* %24, null
  br i1 %25, label %87, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 2, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, -1
  %30 = zext i32 %29 to i64
  %31 = shl i64 %22, 32
  %32 = xor i64 %31, -1
  %33 = add i64 %32, %22
  %34 = lshr i64 %33, 22
  %35 = xor i64 %34, %33
  %36 = shl i64 %35, 13
  %37 = xor i64 %36, -1
  %38 = add i64 %35, %37
  %39 = lshr i64 %38, 8
  %40 = xor i64 %39, %38
  %41 = mul i64 %40, 9
  %42 = lshr i64 %41, 15
  %43 = xor i64 %42, %41
  %44 = shl i64 %43, 27
  %45 = xor i64 %44, -1
  %46 = add i64 %43, %45
  %47 = lshr i64 %46, 31
  %48 = xor i64 %47, %46
  %49 = trunc i64 %48 to i32
  %50 = and i32 %29, %49
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %24, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %52, i64 0, i32 0
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutObject"* %54, %14
  br i1 %55, label %84, label %56

56:                                               ; preds = %26
  %57 = xor i32 %49, -1
  %58 = lshr i32 %49, 23
  %59 = add i32 %58, %57
  %60 = shl i32 %59, 12
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 7
  %63 = xor i32 %62, %61
  %64 = shl i32 %63, 2
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 20
  %67 = xor i32 %66, %65
  %68 = or i32 %67, 1
  %69 = zext i32 %68 to i64
  br label %70

70:                                               ; preds = %75, %56
  %71 = phi %"class.blink::LayoutObject"* [ %54, %56 ], [ %82, %75 ]
  %72 = phi i64 [ %51, %56 ], [ %79, %75 ]
  %73 = phi i64 [ 0, %56 ], [ %77, %75 ]
  %74 = icmp eq %"class.blink::LayoutObject"* %71, null
  br i1 %74, label %87, label %75

75:                                               ; preds = %70
  %76 = icmp eq i64 %73, 0
  %77 = select i1 %76, i64 %69, i64 %73
  %78 = add i64 %77, %72
  %79 = and i64 %78, %30
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %24, i64 %79
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %80, i64 0, i32 0
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %81, align 8
  %83 = icmp eq %"class.blink::LayoutObject"* %82, %14
  br i1 %83, label %84, label %70

84:                                               ; preds = %75, %26
  %85 = phi %"struct.WTF::KeyValuePair.2296"* [ %52, %26 ], [ %80, %75 ]
  %86 = icmp eq %"struct.WTF::KeyValuePair.2296"* %85, null
  br i1 %86, label %87, label %97

87:                                               ; preds = %70, %84, %21, %11
  %88 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %89 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %88 to i96*
  %90 = load i96, i96* %89, align 4
  %91 = xor i96 %90, %17
  %92 = trunc i96 %91 to i32
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %2, i32 -64) #11
  br label %96

95:                                               ; preds = %87
  tail call void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %2, i32 -64) #11
  br label %96

96:                                               ; preds = %95, %94
  tail call void @_ZN5blink9LayoutBox17ClearOverrideSizeEv(%"class.blink::LayoutBox"* %2) #11
  tail call void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"* %14) #11
  tail call void @_ZN5blink17LayoutFlexibleBox18CacheChildMainSizeERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2)
  tail call void @_ZN5blink9LayoutBox39ClearOverrideContainingBlockContentSizeEv(%"class.blink::LayoutBox"* %2) #11
  br label %97

97:                                               ; preds = %84, %4, %96, %9
  %98 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %99 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %98 to i96*
  %100 = load i96, i96* %99, align 4
  %101 = trunc i96 %100 to i32
  %102 = icmp slt i32 %101, 0
  %103 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8
  %108 = lshr i160 %107, 32
  %109 = trunc i160 %108 to i32
  %110 = and i32 %109, 30
  %111 = or i32 %110, 1
  %112 = icmp eq i32 %111, 15
  %113 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 3, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %113, align 8
  br i1 %112, label %115, label %122

115:                                              ; preds = %97
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %114, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %117, i64 0, i32 13
  %119 = bitcast [3 x i8]* %118 to i24*
  %120 = load i24, i24* %119, align 8
  %121 = icmp slt i24 %120, 0
  br label %129

122:                                              ; preds = %97
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %114, i64 0, i32 12
  %124 = load i16, i16* %123, align 4
  %125 = lshr i16 %124, 5
  %126 = and i16 %125, 2
  %127 = or i16 %126, 1
  %128 = icmp eq i16 %127, 3
  br label %129

129:                                              ; preds = %115, %122
  %130 = phi i1 [ %121, %115 ], [ %128, %122 ]
  %131 = xor i1 %102, %130
  %132 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0
  %133 = bitcast %"class.blink::LayoutBox"* %2 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %134 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  br i1 %131, label %135, label %166

135:                                              ; preds = %129
  %136 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %134, i64 124
  %137 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %136, align 8
  %138 = tail call i32 %137(%"class.blink::LayoutBoxModelObject"* %132) #11
  %139 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %140 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %139, i64 125
  %141 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %140, align 8
  %142 = tail call i32 %141(%"class.blink::LayoutBoxModelObject"* %132) #11
  %143 = icmp slt i32 %142, 0
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %138, i32 %142) #11
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !4
  %149 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %150 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %149, i64 120
  %151 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %150, align 8
  %152 = tail call i32 %151(%"class.blink::LayoutBoxModelObject"* %132) #11
  %153 = icmp slt i32 %152, 0
  %154 = select i1 %153, i32 -2147483648, i32 2147483647
  %155 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %148, i32 %152) #11
  %156 = extractvalue { i32, i1 } %155, 1
  %157 = extractvalue { i32, i1 } %155, 0
  %158 = select i1 %156, i32 %154, i32 %157, !prof !4
  %159 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %160 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %159, i64 121
  %161 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %160, align 8
  %162 = tail call i32 %161(%"class.blink::LayoutBoxModelObject"* %132) #11
  %163 = icmp slt i32 %162, 0
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %158, i32 %162) #11
  br label %197

166:                                              ; preds = %129
  %167 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %134, i64 122
  %168 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %167, align 8
  %169 = tail call i32 %168(%"class.blink::LayoutBoxModelObject"* %132) #11
  %170 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %171 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %170, i64 123
  %172 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %171, align 8
  %173 = tail call i32 %172(%"class.blink::LayoutBoxModelObject"* %132) #11
  %174 = icmp slt i32 %173, 0
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 %173) #11
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !4
  %180 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %181 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %180, i64 118
  %182 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %181, align 8
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %132) #11
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %179, i32 %183) #11
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !4
  %190 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %191 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %190, i64 119
  %192 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %191, align 8
  %193 = tail call i32 %192(%"class.blink::LayoutBoxModelObject"* %132) #11
  %194 = icmp slt i32 %193, 0
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %189, i32 %193) #11
  br label %197

197:                                              ; preds = %166, %135
  %198 = phi { i32, i1 } [ %196, %166 ], [ %165, %135 ]
  %199 = phi i32 [ %195, %166 ], [ %164, %135 ]
  %200 = extractvalue { i32, i1 } %198, 1
  %201 = extractvalue { i32, i1 } %198, 0
  %202 = select i1 %200, i32 %199, i32 %201
  %203 = load i96, i96* %99, align 4
  %204 = trunc i96 %203 to i32
  %205 = icmp slt i32 %204, 0
  %206 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %103, align 8
  %207 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %206, i64 0, i32 0, i32 9
  %208 = bitcast [20 x i8]* %207 to i160*
  %209 = load i160, i160* %208, align 8
  %210 = lshr i160 %209, 32
  %211 = trunc i160 %210 to i32
  %212 = and i32 %211, 30
  %213 = or i32 %212, 1
  %214 = icmp eq i32 %213, 15
  %215 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %206, i64 0, i32 0, i32 3, i32 0, i32 0
  %216 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %215, align 8
  br i1 %214, label %217, label %224

217:                                              ; preds = %197
  %218 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %216, i64 0, i32 2, i32 0, i32 0
  %219 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %219, i64 0, i32 13
  %221 = bitcast [3 x i8]* %220 to i24*
  %222 = load i24, i24* %221, align 8
  %223 = icmp slt i24 %222, 0
  br label %231

224:                                              ; preds = %197
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %216, i64 0, i32 12
  %226 = load i16, i16* %225, align 4
  %227 = lshr i16 %226, 5
  %228 = and i16 %227, 2
  %229 = or i16 %228, 1
  %230 = icmp eq i16 %229, 3
  br label %231

231:                                              ; preds = %217, %224
  %232 = phi i1 [ %223, %217 ], [ %230, %224 ]
  %233 = xor i1 %205, %232
  %234 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  br i1 %233, label %235, label %266

235:                                              ; preds = %231
  %236 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %234, i64 122
  %237 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %236, align 8
  %238 = tail call i32 %237(%"class.blink::LayoutBoxModelObject"* %132) #11
  %239 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %240 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %239, i64 123
  %241 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %240, align 8
  %242 = tail call i32 %241(%"class.blink::LayoutBoxModelObject"* %132) #11
  %243 = icmp slt i32 %242, 0
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %238, i32 %242) #11
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !4
  %249 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %250 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %249, i64 118
  %251 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %250, align 8
  %252 = tail call i32 %251(%"class.blink::LayoutBoxModelObject"* %132) #11
  %253 = icmp slt i32 %252, 0
  %254 = select i1 %253, i32 -2147483648, i32 2147483647
  %255 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %248, i32 %252) #11
  %256 = extractvalue { i32, i1 } %255, 1
  %257 = extractvalue { i32, i1 } %255, 0
  %258 = select i1 %256, i32 %254, i32 %257, !prof !4
  %259 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %260 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %259, i64 119
  %261 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %260, align 8
  %262 = tail call i32 %261(%"class.blink::LayoutBoxModelObject"* %132) #11
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %258, i32 %262) #11
  br label %297

266:                                              ; preds = %231
  %267 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %234, i64 124
  %268 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %267, align 8
  %269 = tail call i32 %268(%"class.blink::LayoutBoxModelObject"* %132) #11
  %270 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %271 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %270, i64 125
  %272 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %271, align 8
  %273 = tail call i32 %272(%"class.blink::LayoutBoxModelObject"* %132) #11
  %274 = icmp slt i32 %273, 0
  %275 = select i1 %274, i32 -2147483648, i32 2147483647
  %276 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %269, i32 %273) #11
  %277 = extractvalue { i32, i1 } %276, 1
  %278 = extractvalue { i32, i1 } %276, 0
  %279 = select i1 %277, i32 %275, i32 %278, !prof !4
  %280 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %281 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %280, i64 120
  %282 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %281, align 8
  %283 = tail call i32 %282(%"class.blink::LayoutBoxModelObject"* %132) #11
  %284 = icmp slt i32 %283, 0
  %285 = select i1 %284, i32 -2147483648, i32 2147483647
  %286 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %279, i32 %283) #11
  %287 = extractvalue { i32, i1 } %286, 1
  %288 = extractvalue { i32, i1 } %286, 0
  %289 = select i1 %287, i32 %285, i32 %288, !prof !4
  %290 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %133, align 8
  %291 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %290, i64 121
  %292 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %291, align 8
  %293 = tail call i32 %292(%"class.blink::LayoutBoxModelObject"* %132) #11
  %294 = icmp slt i32 %293, 0
  %295 = select i1 %294, i32 -2147483648, i32 2147483647
  %296 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %289, i32 %293) #11
  br label %297

297:                                              ; preds = %266, %235
  %298 = phi { i32, i1 } [ %296, %266 ], [ %265, %235 ]
  %299 = phi i32 [ %295, %266 ], [ %264, %235 ]
  %300 = extractvalue { i32, i1 } %298, 1
  %301 = extractvalue { i32, i1 } %298, 0
  %302 = select i1 %300, i32 %299, i32 %301
  %303 = tail call i32 @_ZN5blink17LayoutFlexibleBox32ComputeInnerFlexBaseSizeForChildERNS_9LayoutBoxENS_10LayoutUnitES3_NS0_15ChildLayoutTypeE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 %202, i32 %302, i32 %3)
  %304 = tail call i64 @_ZNK5blink17LayoutFlexibleBox29ComputeMinAndMaxSizesForChildERKNS_19FlexLayoutAlgorithmERKNS_9LayoutBoxENS_10LayoutUnitES7_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216) %1, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 %202, i32 %302)
  %305 = bitcast %"class.blink::LayoutBox"* %2 to i32 (%"class.blink::LayoutBox"*)***
  %306 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %305, align 8
  %307 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %306, i64 127
  %308 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %307, align 8
  %309 = tail call i32 %308(%"class.blink::LayoutBox"* %2) #11
  %310 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %305, align 8
  %311 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %310, i64 130
  %312 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %311, align 8
  %313 = tail call i32 %312(%"class.blink::LayoutBox"* %2) #11
  %314 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %305, align 8
  %315 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %314, i64 128
  %316 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %315, align 8
  %317 = tail call i32 %316(%"class.blink::LayoutBox"* %2) #11
  %318 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %305, align 8
  %319 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %318, i64 129
  %320 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %319, align 8
  %321 = tail call i32 %320(%"class.blink::LayoutBox"* %2) #11
  %322 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %323 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %322, align 8
  %324 = bitcast %"struct.blink::NGBoxStrut"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %324)
  %325 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 4
  %326 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %327 = bitcast %"struct.blink::NGBoxStrut"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %327, i8 0, i64 16, i1 false)
  %328 = load i32, i32* %326, align 4
  %329 = getelementptr inbounds %"class.blink::FlexLayoutAlgorithm", %"class.blink::FlexLayoutAlgorithm"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %330 = load i32, i32* %329, align 8
  %331 = icmp eq i32 %328, %330
  br i1 %331, label %332, label %335, !prof !4

332:                                              ; preds = %297
  %333 = add i32 %328, 1
  tail call void @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2356"* %325, i32 %333) #11
  %334 = load i32, i32* %326, align 4
  br label %335

335:                                              ; preds = %297, %332
  %336 = phi i32 [ %334, %332 ], [ %328, %297 ]
  %337 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %325, i64 0, i32 0, i32 0, i32 0
  %338 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %337, align 8
  %339 = zext i32 %336 to i64
  %340 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %338, i64 %339
  %341 = getelementptr inbounds %"class.absl::optional.2359", %"class.absl::optional.2359"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %341) #11
  %342 = bitcast %"struct.blink::NGPhysicalBoxStrut"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %342) #11
  store i8 0, i8* %341, align 8
  %343 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %6, i64 0, i32 0, i32 0
  store i32 %309, i32* %343, align 8
  %344 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %6, i64 0, i32 1, i32 0
  store i32 %313, i32* %344, align 4
  %345 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %6, i64 0, i32 2, i32 0
  store i32 %317, i32* %345, align 8
  %346 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %6, i64 0, i32 3, i32 0
  store i32 %321, i32* %346, align 4
  tail call void @_ZN5blink8FlexItemC1EPKNS_19FlexLayoutAlgorithmEPNS_9LayoutBoxERKNS_13ComputedStyleENS_10LayoutUnitENS_11MinMaxSizesEN4absl8optionalISA_EES9_S9_NS_18NGPhysicalBoxStrutENS_10NGBoxStrutEb(%"class.blink::FlexItem"* %340, %"class.blink::FlexLayoutAlgorithm"* %1, %"class.blink::LayoutBox"* %2, %"class.blink::ComputedStyle"* dereferenceable(104) %323, i32 %303, i64 %304, %"class.absl::optional.2359"* nonnull byval(%"class.absl::optional.2359") align 8 %5, i32 %202, i32 %302, %"struct.blink::NGPhysicalBoxStrut"* nonnull byval(%"struct.blink::NGPhysicalBoxStrut") align 8 %6, %"struct.blink::NGBoxStrut"* nonnull byval(%"struct.blink::NGBoxStrut") align 8 %7, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %341) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %342) #11
  %347 = load i32, i32* %326, align 4
  %348 = add i32 %347, 1
  store i32 %348, i32* %326, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %324)
  ret void
}

declare %"class.blink::FlexLine"* @_ZN5blink19FlexLayoutAlgorithm19ComputeNextFlexLineENS_10LayoutUnitE(%"class.blink::FlexLayoutAlgorithm"*, i32) local_unnamed_addr #1

declare void @_ZN5blink8FlexLine21FreezeInflexibleItemsEv(%"class.blink::FlexLine"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink8FlexLine22ResolveFlexibleLengthsEv(%"class.blink::FlexLine"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox15LayoutLineItemsEPNS_8FlexLineEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::FlexLine"* nocapture readonly, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LayoutBox"*, align 8
  %6 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 1, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %24, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::LayoutBox"** %5 to i8*
  %14 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = bitcast %"class.blink::LayoutBox"** %5 to i64*
  %18 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0, i32 1
  %20 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %21 = bitcast %"class.blink::LayoutBox"** %5 to %"class.blink::LayoutObject"**
  %22 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0
  br label %25

24:                                               ; preds = %348, %4
  ret void

25:                                               ; preds = %11, %348
  %26 = phi i32 [ %9, %11 ], [ %353, %348 ]
  %27 = phi i32 [ 0, %11 ], [ %351, %348 ]
  %28 = load %"class.WTF::Vector.2356"*, %"class.WTF::Vector.2356"** %12, align 8
  %29 = add i32 %26, %27
  %30 = call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2356"* %28, i32 %29) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %31 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 0, i32 2
  %32 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %31, align 8
  store %"class.blink::LayoutBox"* %32, %"class.blink::LayoutBox"** %5, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %32, i64 0, i32 0, i32 0
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %33) #11
  %34 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %31, align 8
  %35 = load i96, i96* %15, align 4
  %36 = trunc i96 %35 to i32
  %37 = icmp slt i32 %36, 0
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = lshr i160 %41, 32
  %43 = trunc i160 %42 to i32
  %44 = and i32 %43, 30
  %45 = or i32 %44, 1
  %46 = icmp eq i32 %45, 15
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %47, align 8
  br i1 %46, label %49, label %56

49:                                               ; preds = %25
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %48, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %51, i64 0, i32 13
  %53 = bitcast [3 x i8]* %52 to i24*
  %54 = load i24, i24* %53, align 8
  %55 = icmp slt i24 %54, 0
  br label %63

56:                                               ; preds = %25
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %48, i64 0, i32 12
  %58 = load i16, i16* %57, align 4
  %59 = lshr i16 %58, 5
  %60 = and i16 %59, 2
  %61 = or i16 %60, 1
  %62 = icmp eq i16 %61, 3
  br label %63

63:                                               ; preds = %56, %49
  %64 = phi i1 [ %55, %49 ], [ %62, %56 ]
  %65 = xor i1 %37, %64
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %34, i64 0, i32 0, i32 0, i32 4
  %67 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %66 to i96*
  %68 = load i96, i96* %67, align 4
  %69 = trunc i96 %68 to i32
  %70 = icmp sgt i32 %69, -1
  %71 = xor i1 %65, %70
  %72 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 0, i32 12, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 0, i32 8, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %75) #11
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !4
  br i1 %71, label %82, label %83

82:                                               ; preds = %63
  call void @_ZN5blink9LayoutBox23SetOverrideLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %34, i32 %81) #11
  br label %84

83:                                               ; preds = %63
  call void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %34, i32 %81) #11
  br label %84

84:                                               ; preds = %82, %83
  %85 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  %86 = call i32 @_ZNK5blink17LayoutFlexibleBox47MainAxisContentExtentForChildIncludingScrollbarERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %85)
  %87 = load i32, i32* %72, align 4
  %88 = icmp eq i32 %87, %86
  %89 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  br i1 %88, label %96, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %89, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %89, i64 0, i32 0, i32 0, i32 4
  %93 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %92 to i96*
  %94 = load i96, i96* %93, align 4
  %95 = or i96 %94, 2
  store i96 %95, i96* %93, align 4
  call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %91) #11
  br label %97

96:                                               ; preds = %84
  call void @_ZN5blink17LayoutFlexibleBox40ResetAutoMarginsAndLogicalTopInCrossAxisERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %89)
  br label %97

97:                                               ; preds = %96, %90
  br i1 %2, label %100, label %98

98:                                               ; preds = %97
  %99 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  br label %166

100:                                              ; preds = %97
  %101 = load i64, i64* %17, align 8
  %102 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %18, align 8
  %103 = icmp eq %"class.blink::LayoutObject"** %102, null
  %104 = inttoptr i64 %101 to %"class.blink::LayoutBox"*
  br i1 %103, label %163, label %105

105:                                              ; preds = %100
  %106 = load i32, i32* %19, align 8
  %107 = add i32 %106, -1
  %108 = zext i32 %107 to i64
  %109 = shl i64 %101, 32
  %110 = xor i64 %109, -1
  %111 = add i64 %101, %110
  %112 = lshr i64 %111, 22
  %113 = xor i64 %112, %111
  %114 = shl i64 %113, 13
  %115 = xor i64 %114, -1
  %116 = add i64 %113, %115
  %117 = lshr i64 %116, 8
  %118 = xor i64 %117, %116
  %119 = mul i64 %118, 9
  %120 = lshr i64 %119, 15
  %121 = xor i64 %120, %119
  %122 = shl i64 %121, 27
  %123 = xor i64 %122, -1
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 31
  %126 = xor i64 %125, %124
  %127 = trunc i64 %126 to i32
  %128 = and i32 %107, %127
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %102, i64 %129
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %130, align 8
  %132 = inttoptr i64 %101 to %"class.blink::LayoutObject"*
  %133 = icmp eq %"class.blink::LayoutObject"* %131, %132
  br i1 %133, label %163, label %134

134:                                              ; preds = %105
  %135 = xor i32 %127, -1
  %136 = lshr i32 %127, 23
  %137 = add i32 %136, %135
  %138 = shl i32 %137, 12
  %139 = xor i32 %138, %137
  %140 = lshr i32 %139, 7
  %141 = xor i32 %140, %139
  %142 = shl i32 %141, 2
  %143 = xor i32 %142, %141
  %144 = lshr i32 %143, 20
  %145 = xor i32 %144, %143
  %146 = or i32 %145, 1
  %147 = zext i32 %146 to i64
  br label %148

148:                                              ; preds = %153, %134
  %149 = phi %"class.blink::LayoutObject"* [ %131, %134 ], [ %159, %153 ]
  %150 = phi i64 [ %129, %134 ], [ %157, %153 ]
  %151 = phi i64 [ 0, %134 ], [ %155, %153 ]
  %152 = icmp eq %"class.blink::LayoutObject"* %149, null
  br i1 %152, label %163, label %153

153:                                              ; preds = %148
  %154 = icmp eq i64 %151, 0
  %155 = select i1 %154, i64 %147, i64 %151
  %156 = add i64 %155, %150
  %157 = and i64 %156, %108
  %158 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %102, i64 %157
  %159 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %158, align 8
  %160 = icmp eq %"class.blink::LayoutObject"* %159, %132
  br i1 %160, label %161, label %148

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %102, i64 %157
  br label %163

163:                                              ; preds = %148, %161, %100, %105
  %164 = phi %"class.blink::LayoutObject"** [ null, %100 ], [ %130, %105 ], [ %162, %161 ], [ null, %148 ]
  %165 = icmp eq %"class.blink::LayoutObject"** %164, null
  br label %166

166:                                              ; preds = %98, %163
  %167 = phi %"class.blink::LayoutBox"* [ %99, %98 ], [ %104, %163 ]
  %168 = phi i1 [ false, %98 ], [ %165, %163 ]
  %169 = icmp eq %"class.blink::LayoutBox"* %167, null
  br i1 %169, label %188, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %167, i64 0, i32 0, i32 0
  %172 = bitcast %"class.blink::LayoutBox"* %167 to i1 (%"class.blink::LayoutObject"*)***
  %173 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %172, align 8
  %174 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %173, i64 23
  %175 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %174, align 8
  %176 = call zeroext i1 %175(%"class.blink::LayoutObject"* %171) #11
  br i1 %176, label %177, label %188

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %167, i64 1, i32 0, i32 0, i32 1, i32 1
  %179 = bitcast i8* %178 to i16*
  %180 = load i16, i16* %179, align 8
  %181 = and i16 %180, 256
  %182 = icmp eq i16 %181, 0
  br i1 %182, label %188, label %183

183:                                              ; preds = %177
  %184 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  %185 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox24CanAvoidLayoutForNGChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %184)
  %186 = xor i1 %185, true
  %187 = or i1 %168, %186
  br label %188

188:                                              ; preds = %177, %170, %166, %183
  %189 = phi i1 [ %168, %177 ], [ %187, %183 ], [ %168, %170 ], [ %168, %166 ]
  %190 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  call void @_ZN5blink11LayoutBlock37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %20, i1 zeroext %189, %"class.blink::LayoutBox"* dereferenceable(216) %190) #11
  %191 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %192 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %191, i64 0, i32 4
  %193 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %192 to i96*
  %194 = load i96, i96* %193, align 4
  %195 = and i96 %194, 63
  %196 = icmp eq i96 %195, 0
  br i1 %196, label %197, label %205

197:                                              ; preds = %188
  %198 = bitcast %"class.blink::LayoutObject"* %191 to %"class.blink::LayoutBox"*
  call void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"* %22, %"class.blink::LayoutBox"* dereferenceable(216) %198, %"class.blink::SubtreeLayoutScope"* dereferenceable(8) %3) #11
  %199 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %200 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %199, i64 0, i32 4
  %201 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %200 to i96*
  %202 = load i96, i96* %201, align 4
  %203 = and i96 %202, 63
  %204 = icmp eq i96 %203, 0
  br i1 %204, label %247, label %205

205:                                              ; preds = %188, %197
  %206 = call { %"class.blink::LayoutObject"**, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_9LayoutBoxERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2298"* %23, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5) #11
  %207 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  %208 = load i96, i96* %15, align 4
  %209 = trunc i96 %208 to i32
  %210 = icmp slt i32 %209, 0
  %211 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %212 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %211, i64 0, i32 0, i32 9
  %213 = bitcast [20 x i8]* %212 to i160*
  %214 = load i160, i160* %213, align 8
  %215 = lshr i160 %214, 32
  %216 = trunc i160 %215 to i32
  %217 = and i32 %216, 30
  %218 = or i32 %217, 1
  %219 = icmp eq i32 %218, 15
  %220 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %211, i64 0, i32 0, i32 3, i32 0, i32 0
  %221 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %220, align 8
  br i1 %219, label %222, label %229

222:                                              ; preds = %205
  %223 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %221, i64 0, i32 2, i32 0, i32 0
  %224 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %224, i64 0, i32 13
  %226 = bitcast [3 x i8]* %225 to i24*
  %227 = load i24, i24* %226, align 8
  %228 = icmp slt i24 %227, 0
  br label %236

229:                                              ; preds = %205
  %230 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %221, i64 0, i32 12
  %231 = load i16, i16* %230, align 4
  %232 = lshr i16 %231, 5
  %233 = and i16 %232, 2
  %234 = or i16 %233, 1
  %235 = icmp eq i16 %234, 3
  br label %236

236:                                              ; preds = %222, %229
  %237 = phi i1 [ %228, %222 ], [ %235, %229 ]
  %238 = xor i1 %210, %237
  %239 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %207, i64 0, i32 0, i32 0, i32 4
  %240 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %239 to i96*
  %241 = load i96, i96* %240, align 4
  %242 = trunc i96 %241 to i32
  %243 = icmp sgt i32 %242, -1
  %244 = xor i1 %238, %243
  br i1 %244, label %245, label %246

245:                                              ; preds = %236
  call void @_ZN5blink9LayoutBox26ClearOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %207) #11
  br label %247

246:                                              ; preds = %236
  call void @_ZN5blink9LayoutBox25ClearOverrideLogicalWidthEv(%"class.blink::LayoutBox"* %207) #11
  br label %247

247:                                              ; preds = %197, %245, %246
  %248 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %249 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %248, i64 0, i32 4
  %250 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %249 to i96*
  %251 = load i96, i96* %250, align 4
  %252 = and i96 %251, 63
  %253 = icmp eq i96 %252, 0
  %254 = bitcast %"class.blink::LayoutObject"* %248 to %"class.blink::LayoutBox"*
  br i1 %253, label %261, label %255

255:                                              ; preds = %247
  %256 = bitcast %"class.blink::LayoutObject"* %248 to void (%"class.blink::LayoutObject"*)***
  %257 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %256, align 8
  %258 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %257, i64 54
  %259 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %258, align 8
  call void %259(%"class.blink::LayoutObject"* %248) #11
  %260 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  br label %261

261:                                              ; preds = %247, %255
  %262 = phi %"class.blink::LayoutBox"* [ %254, %247 ], [ %260, %255 ]
  %263 = load i96, i96* %15, align 4
  %264 = trunc i96 %263 to i32
  %265 = icmp slt i32 %264, 0
  %266 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %267 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %266, i64 0, i32 0, i32 9
  %268 = bitcast [20 x i8]* %267 to i160*
  %269 = load i160, i160* %268, align 8
  %270 = lshr i160 %269, 32
  %271 = trunc i160 %270 to i32
  %272 = and i32 %271, 30
  %273 = or i32 %272, 1
  %274 = icmp eq i32 %273, 15
  %275 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %266, i64 0, i32 0, i32 3, i32 0, i32 0
  %276 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %275, align 8
  br i1 %274, label %277, label %284

277:                                              ; preds = %261
  %278 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %276, i64 0, i32 2, i32 0, i32 0
  %279 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %279, i64 0, i32 13
  %281 = bitcast [3 x i8]* %280 to i24*
  %282 = load i24, i24* %281, align 8
  %283 = icmp slt i24 %282, 0
  br label %291

284:                                              ; preds = %261
  %285 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %276, i64 0, i32 12
  %286 = load i16, i16* %285, align 4
  %287 = lshr i16 %286, 5
  %288 = and i16 %287, 2
  %289 = or i16 %288, 1
  %290 = icmp eq i16 %289, 3
  br label %291

291:                                              ; preds = %277, %284
  %292 = phi i1 [ %283, %277 ], [ %290, %284 ]
  %293 = xor i1 %265, %292
  %294 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %262, i64 0, i32 2, i32 1
  %295 = bitcast %"class.blink::LayoutSize"* %294 to i64*
  %296 = load i64, i64* %295, align 4
  %297 = lshr i64 %296, 32
  %298 = select i1 %293, i64 %296, i64 %297
  %299 = trunc i64 %298 to i32
  %300 = load i32, i32* %74, align 4
  %301 = icmp sgt i32 %300, -1
  %302 = select i1 %301, i32 -2147483648, i32 2147483647
  %303 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %299, i32 %300) #11
  %304 = extractvalue { i32, i1 } %303, 1
  %305 = extractvalue { i32, i1 } %303, 0
  %306 = select i1 %304, i32 %302, i32 %305, !prof !4
  store i32 %306, i32* %72, align 4
  %307 = load i96, i96* %15, align 4
  %308 = trunc i96 %307 to i32
  %309 = icmp slt i32 %308, 0
  %310 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %311 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %310, i64 0, i32 0, i32 9
  %312 = bitcast [20 x i8]* %311 to i160*
  %313 = load i160, i160* %312, align 8
  %314 = lshr i160 %313, 32
  %315 = trunc i160 %314 to i32
  %316 = and i32 %315, 30
  %317 = or i32 %316, 1
  %318 = icmp eq i32 %317, 15
  %319 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %310, i64 0, i32 0, i32 3, i32 0, i32 0
  %320 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %319, align 8
  br i1 %318, label %321, label %328

321:                                              ; preds = %291
  %322 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %320, i64 0, i32 2, i32 0, i32 0
  %323 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %323, i64 0, i32 13
  %325 = bitcast [3 x i8]* %324 to i24*
  %326 = load i24, i24* %325, align 8
  %327 = icmp slt i24 %326, 0
  br label %335

328:                                              ; preds = %291
  %329 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %320, i64 0, i32 12
  %330 = load i16, i16* %329, align 4
  %331 = lshr i16 %330, 5
  %332 = and i16 %331, 2
  %333 = or i16 %332, 1
  %334 = icmp eq i16 %333, 3
  br label %335

335:                                              ; preds = %328, %321
  %336 = phi i1 [ %327, %321 ], [ %334, %328 ]
  %337 = xor i1 %309, %336
  %338 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %262, i64 0, i32 0, i32 0, i32 4
  %339 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %338 to i96*
  %340 = load i96, i96* %339, align 4
  %341 = trunc i96 %340 to i32
  %342 = icmp sgt i32 %341, -1
  %343 = xor i1 %337, %342
  br i1 %343, label %344, label %346

344:                                              ; preds = %335
  %345 = call i32 @_ZNK5blink17LayoutFlexibleBox29ChildUnstretchedLogicalHeightERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %262) #11
  br label %348

346:                                              ; preds = %335
  %347 = call i32 @_ZNK5blink17LayoutFlexibleBox28ChildUnstretchedLogicalWidthERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %262) #11
  br label %348

348:                                              ; preds = %344, %346
  %349 = phi i32 [ %345, %344 ], [ %347, %346 ]
  %350 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %30, i64 0, i32 13, i32 0
  store i32 %349, i32* %350, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  %351 = add nuw i32 %27, 1
  %352 = load i32, i32* %6, align 4
  %353 = load i32, i32* %8, align 8
  %354 = sub i32 %352, %353
  %355 = icmp ult i32 %351, %354
  br i1 %355, label %25, label %24
}

declare void @_ZN5blink8FlexLine24ComputeLineItemsPositionENS_10LayoutUnitES1_RS1_(%"class.blink::FlexLine"*, i32, i32, %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox22ApplyLineItemsPositionEPNS_8FlexLineE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::FlexLine"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %7, %9
  %10 = phi %"class.blink::LayoutObject"* [ %12, %9 ], [ %8, %7 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %2
  %17 = phi %"class.blink::Node"* [ %5, %2 ], [ %14, %9 ]
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 113
  %23 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %23, i64 0, i32 3
  %25 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %25, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 1, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %44, label %36

36:                                               ; preds = %16
  %37 = getelementptr inbounds %"class.blink::FlexItemVectorView", %"class.blink::FlexItemVectorView"* %30, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %39 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %38 to i96*
  %40 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %41 = bitcast i64* %3 to %"class.blink::LayoutPoint"*
  %42 = bitcast i64* %3 to i8*
  %43 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  br label %73

44:                                               ; preds = %126, %16
  %45 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8
  %50 = lshr i160 %49, 32
  %51 = trunc i160 %50 to i32
  %52 = and i32 %51, 30
  %53 = or i32 %52, 1
  %54 = icmp eq i32 %53, 15
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %55, align 8
  br i1 %54, label %57, label %65

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %59, i64 0, i32 13
  %61 = bitcast [3 x i8]* %60 to i24*
  %62 = load i24, i24* %61, align 8
  %63 = icmp slt i24 %62, 0
  %64 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  br i1 %63, label %132, label %165

65:                                               ; preds = %44
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %56, i64 0, i32 12
  %67 = load i16, i16* %66, align 4
  %68 = lshr i16 %67, 5
  %69 = and i16 %68, 2
  %70 = or i16 %69, 1
  %71 = icmp eq i16 %70, 3
  %72 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  br i1 %71, label %132, label %165

73:                                               ; preds = %36, %126
  %74 = phi i32 [ %34, %36 ], [ %129, %126 ]
  %75 = phi i32 [ 0, %36 ], [ %127, %126 ]
  %76 = load %"class.WTF::Vector.2356"*, %"class.WTF::Vector.2356"** %37, align 8
  %77 = add i32 %74, %75
  %78 = call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2356"* %76, i32 %77) #11
  %79 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %78, i64 0, i32 2
  %80 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %78, i64 0, i32 14
  %82 = load i96, i96* %39, align 4
  %83 = trunc i96 %82 to i32
  %84 = icmp slt i32 %83, 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = lshr i160 %88, 32
  %90 = trunc i160 %89 to i32
  %91 = and i32 %90, 30
  %92 = or i32 %91, 1
  %93 = icmp eq i32 %92, 15
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 3, i32 0, i32 0
  %95 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %94, align 8
  br i1 %93, label %96, label %103

96:                                               ; preds = %73
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %95, i64 0, i32 2, i32 0, i32 0
  %98 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %98, i64 0, i32 13
  %100 = bitcast [3 x i8]* %99 to i24*
  %101 = load i24, i24* %100, align 8
  %102 = icmp slt i24 %101, 0
  br label %110

103:                                              ; preds = %73
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %95, i64 0, i32 12
  %105 = load i16, i16* %104, align 4
  %106 = lshr i16 %105, 5
  %107 = and i16 %106, 2
  %108 = or i16 %107, 1
  %109 = icmp eq i16 %108, 3
  br label %110

110:                                              ; preds = %103, %96
  %111 = phi i1 [ %102, %96 ], [ %109, %103 ]
  %112 = xor i1 %84, %111
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %80, %"class.blink::LayoutPoint"* dereferenceable(8) %81) #11
  br label %123

114:                                              ; preds = %110
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %115 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %78, i64 0, i32 14, i32 1, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %81, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i64
  %120 = shl nuw i64 %119, 32
  %121 = zext i32 %116 to i64
  %122 = or i64 %120, %121
  store i64 %122, i64* %3, align 8
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %80, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  br label %123

123:                                              ; preds = %113, %114
  %124 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %78, i64 0, i32 10
  call void @_ZN5blink9LayoutBox9SetMarginERKNS_18NGPhysicalBoxStrutE(%"class.blink::LayoutBox"* %80, %"struct.blink::NGPhysicalBoxStrut"* dereferenceable(16) %124) #11
  br i1 %29, label %126, label %125

125:                                              ; preds = %123
  call void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"* %43, %"class.blink::LayoutBox"* dereferenceable(216) %80) #11
  br label %126

126:                                              ; preds = %123, %125
  %127 = add nuw i32 %75, 1
  %128 = load i32, i32* %31, align 4
  %129 = load i32, i32* %33, align 8
  %130 = sub i32 %128, %129
  %131 = icmp ult i32 %127, %130
  br i1 %131, label %73, label %44

132:                                              ; preds = %57, %65
  %133 = phi %"class.blink::LayoutBox"* [ %64, %57 ], [ %72, %65 ]
  %134 = and i160 %49, 15211807202738752817960438464512
  %135 = icmp eq i160 %134, 0
  %136 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %137 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %138 = select i1 %135, i32* %136, i32* %137
  %139 = load i32, i32* %138, align 4
  %140 = call i32 @_ZNK5blink17LayoutFlexibleBox24FlowAwareContentInsetEndEv(%"class.blink::LayoutFlexibleBox"* %0)
  %141 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 12, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp slt i32 %140, 0
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %142, i32 %140) #11
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !4
  %149 = icmp slt i32 %139, %148
  %150 = select i1 %149, i32 %148, i32 %139
  %151 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %151, i64 0, i32 0, i32 9
  %153 = bitcast [20 x i8]* %152 to i160*
  %154 = load i160, i160* %153, align 8
  %155 = and i160 %154, 15211807202738752817960438464512
  %156 = icmp eq i160 %155, 0
  br i1 %156, label %157, label %161

157:                                              ; preds = %132
  %158 = load i32, i32* %136, align 4
  %159 = icmp eq i32 %158, %150
  br i1 %159, label %217, label %160

160:                                              ; preds = %157
  store i32 %150, i32* %136, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %133) #11
  br label %217

161:                                              ; preds = %132
  %162 = load i32, i32* %137, align 4
  %163 = icmp eq i32 %162, %150
  br i1 %163, label %217, label %164

164:                                              ; preds = %161
  store i32 %150, i32* %137, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %133) #11
  br label %217

165:                                              ; preds = %57, %65
  %166 = phi %"class.blink::LayoutBox"* [ %64, %57 ], [ %72, %65 ]
  %167 = and i160 %49, 15211807202738752817960438464512
  %168 = icmp eq i160 %167, 0
  %169 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %170 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %171 = select i1 %168, i32* %169, i32* %170
  %172 = load i32, i32* %171, align 4
  %173 = call i32 @_ZN5blink19FlexLayoutAlgorithm25GetTransformedWritingModeERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %46) #11
  switch i32 %173, label %182 [
    i32 0, label %174
    i32 3, label %176
    i32 2, label %178
    i32 1, label %180
  ]

174:                                              ; preds = %165
  %175 = call i32 @_ZNK5blink17LayoutFlexibleBox18ContentInsetBottomEv(%"class.blink::LayoutFlexibleBox"* %0) #11
  br label %183

176:                                              ; preds = %165
  %177 = call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %166) #11
  br label %183

178:                                              ; preds = %165
  %179 = call i32 @_ZNK5blink17LayoutFlexibleBox17ContentInsetRightEv(%"class.blink::LayoutFlexibleBox"* %0) #11
  br label %183

180:                                              ; preds = %165
  %181 = call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %166) #11
  br label %183

182:                                              ; preds = %165
  unreachable

183:                                              ; preds = %174, %176, %178, %180
  %184 = phi i32 [ %181, %180 ], [ %179, %178 ], [ %177, %176 ], [ %175, %174 ]
  %185 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 13, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp slt i32 %184, 0
  %188 = select i1 %187, i32 -2147483648, i32 2147483647
  %189 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %186, i32 %184) #11
  %190 = extractvalue { i32, i1 } %189, 1
  %191 = extractvalue { i32, i1 } %189, 0
  %192 = select i1 %190, i32 %188, i32 %191, !prof !4
  %193 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 14, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = icmp slt i32 %194, 0
  %196 = select i1 %195, i32 -2147483648, i32 2147483647
  %197 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %192, i32 %194) #11
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %196, i32 %199, !prof !4
  %201 = icmp slt i32 %172, %200
  %202 = select i1 %201, i32 %200, i32 %172
  %203 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %204 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %203, i64 0, i32 0, i32 9
  %205 = bitcast [20 x i8]* %204 to i160*
  %206 = load i160, i160* %205, align 8
  %207 = and i160 %206, 15211807202738752817960438464512
  %208 = icmp eq i160 %207, 0
  br i1 %208, label %209, label %213

209:                                              ; preds = %183
  %210 = load i32, i32* %169, align 4
  %211 = icmp eq i32 %210, %202
  br i1 %211, label %217, label %212

212:                                              ; preds = %209
  store i32 %202, i32* %169, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %166) #11
  br label %217

213:                                              ; preds = %183
  %214 = load i32, i32* %170, align 4
  %215 = icmp eq i32 %214, %202
  br i1 %215, label %217, label %216

216:                                              ; preds = %213
  store i32 %202, i32* %170, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %166) #11
  br label %217

217:                                              ; preds = %216, %213, %212, %209, %164, %161, %160, %157
  %218 = phi %"class.blink::LayoutBox"* [ %133, %157 ], [ %133, %160 ], [ %133, %161 ], [ %133, %164 ], [ %166, %209 ], [ %166, %212 ], [ %166, %213 ], [ %166, %216 ]
  %219 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %220 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %219, i64 0, i32 0, i32 9
  %221 = bitcast [20 x i8]* %220 to i160*
  %222 = load i160, i160* %221, align 8
  %223 = lshr i160 %222, 32
  %224 = trunc i160 %223 to i32
  %225 = and i32 %224, 30
  %226 = or i32 %225, 1
  %227 = icmp eq i32 %226, 15
  %228 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %219, i64 0, i32 0, i32 3, i32 0, i32 0
  %229 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %228, align 8
  br i1 %227, label %230, label %240

230:                                              ; preds = %217
  %231 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %229, i64 0, i32 2, i32 0, i32 0
  %232 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %232, i64 0, i32 13
  %234 = bitcast [3 x i8]* %233 to i24*
  %235 = load i24, i24* %234, align 8
  %236 = icmp slt i24 %235, 0
  %237 = and i160 %222, 324518553658426726783156020576256
  %238 = icmp ne i160 %237, 0
  %239 = and i1 %238, %236
  br i1 %239, label %245, label %250

240:                                              ; preds = %217
  %241 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %229, i64 0, i32 12
  %242 = load i16, i16* %241, align 4
  %243 = and i16 %242, 96
  %244 = icmp eq i16 %243, 96
  br i1 %244, label %245, label %250

245:                                              ; preds = %230, %240
  call void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"* %218) #11
  %246 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 13, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %1, i64 0, i32 10, i32 0
  %249 = load i32, i32* %248, align 4
  call void @_ZN5blink17LayoutFlexibleBox19LayoutColumnReverseERNS_18FlexItemVectorViewENS_10LayoutUnitES3_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::FlexItemVectorView"* dereferenceable(16) %30, i32 %247, i32 %249)
  br label %250

250:                                              ; preds = %230, %240, %245
  ret void
}

declare void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink19FlexLayoutAlgorithm25IntrinsicContentBlockSizeEv(%"class.blink::FlexLayoutAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink24PaintLayerScrollableArea20PreventRelayoutScopeD1Ev(%"class.blink::PaintLayerScrollableArea::PreventRelayoutScope"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox23ComputeChildMarginValueERKNS_6LengthE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %4 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %3)
  %5 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %8, label %29, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %10 = load i8, i8* %9, align 2, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::Length"* %1 to float*
  %14 = load float, float* %13, align 4
  br label %19

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  br label %19

19:                                               ; preds = %15, %12
  %20 = phi float [ %14, %12 ], [ %18, %15 ]
  %21 = fmul float %20, 6.400000e+01
  %22 = fcmp ult float %21, 0xC1E0000000000000
  %23 = fcmp ugt float %21, 0x41DFFFFFE0000000
  %24 = fcmp ogt float %21, 0xC1E0000000000000
  %25 = select i1 %24, float %21, float 0xC1E0000000000000
  %26 = fptosi float %25 to i32
  %27 = select i1 %22, i32 0, i32 2147483647
  %28 = select i1 %23, i32 %27, i32 %26
  br label %31

29:                                               ; preds = %2
  %30 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %1, i32 %4) #11
  br label %31

31:                                               ; preds = %19, %29
  %32 = phi i32 [ %28, %19 ], [ %30, %29 ]
  ret i32 %32
}

declare void @_ZN5blink22OrderIteratorPopulator12CollectChildEPKNS_9LayoutBoxE(%"class.blink::OrderIteratorPopulator"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22OrderIteratorPopulatorD1Ev(%"class.blink::OrderIteratorPopulator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink17LayoutFlexibleBox29ComputeMinAndMaxSizesForChildERKNS_19FlexLayoutAlgorithmERKNS_9LayoutBoxENS_10LayoutUnitES7_(%"class.blink::LayoutFlexibleBox"*, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216), %"class.blink::LayoutBox"* dereferenceable(216), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Length", align 4
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = trunc i96 %9 to i32
  %11 = icmp slt i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 32
  %18 = trunc i160 %17 to i32
  %19 = and i32 %18, 30
  %20 = or i32 %19, 1
  %21 = icmp eq i32 %20, 15
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  br i1 %21, label %24, label %31

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %26, i64 0, i32 13
  %28 = bitcast [3 x i8]* %27 to i24*
  %29 = load i24, i24* %28, align 8
  %30 = icmp slt i24 %29, 0
  br label %38

31:                                               ; preds = %5
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 12
  %33 = load i16, i16* %32, align 4
  %34 = lshr i16 %33, 5
  %35 = and i16 %34, 2
  %36 = or i16 %35, 1
  %37 = icmp eq i16 %36, 3
  br label %38

38:                                               ; preds = %24, %31
  %39 = phi i1 [ %30, %24 ], [ %37, %31 ]
  %40 = xor i1 %11, %39
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %43 = bitcast %"class.blink::ComputedStyle"** %42 to %"class.blink::ComputedStyleBase"**
  %44 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %44, i64 0, i32 5, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %46, i64 0, i32 5
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %46, i64 0, i32 4
  %49 = select i1 %40, %"class.blink::Length"* %47, %"class.blink::Length"* %48
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %49, i64 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 12
  br i1 %52, label %68, label %53

53:                                               ; preds = %38
  %54 = tail call i32 @_ZNK5blink17LayoutFlexibleBox29ComputeMainAxisExtentForChildERKNS_9LayoutBoxENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 2, %"class.blink::Length"* dereferenceable(8) %49, i32 %3)
  %55 = icmp eq i32 %54, -64
  %56 = select i1 %55, i32 2147483647, i32 %54
  %57 = load i96, i96* %8, align 4
  %58 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 9
  %60 = bitcast [20 x i8]* %59 to i160*
  %61 = load i160, i160* %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %62, align 8
  %64 = trunc i96 %57 to i32
  %65 = lshr i160 %61, 32
  %66 = trunc i160 %65 to i32
  %67 = and i32 %66, 30
  br label %68

68:                                               ; preds = %53, %38
  %69 = phi i32 [ %67, %53 ], [ %19, %38 ]
  %70 = phi i32 [ %64, %53 ], [ %10, %38 ]
  %71 = phi i32 [ %56, %53 ], [ 2147483647, %38 ]
  %72 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %63, %53 ], [ %23, %38 ]
  %73 = icmp slt i32 %70, 0
  %74 = or i32 %69, 1
  %75 = icmp eq i32 %74, 15
  br i1 %75, label %76, label %83

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %72, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %78, i64 0, i32 13
  %80 = bitcast [3 x i8]* %79 to i24*
  %81 = load i24, i24* %80, align 8
  %82 = icmp slt i24 %81, 0
  br label %90

83:                                               ; preds = %68
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %72, i64 0, i32 12
  %85 = load i16, i16* %84, align 4
  %86 = lshr i16 %85, 5
  %87 = and i16 %86, 2
  %88 = or i16 %87, 1
  %89 = icmp eq i16 %88, 3
  br label %90

90:                                               ; preds = %76, %83
  %91 = phi i1 [ %82, %76 ], [ %89, %83 ]
  %92 = xor i1 %73, %91
  %93 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %93, i64 0, i32 5, i32 0, i32 0
  %95 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %95, i64 0, i32 7
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %95, i64 0, i32 6
  %98 = select i1 %92, %"class.blink::Length"* %96, %"class.blink::Length"* %97
  %99 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %98, i64 0, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %90
  %103 = tail call i32 @_ZNK5blink17LayoutFlexibleBox29ComputeMainAxisExtentForChildERKNS_9LayoutBoxENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 1, %"class.blink::Length"* dereferenceable(8) %98, i32 %3)
  %104 = icmp sgt i32 %103, 0
  %105 = select i1 %104, i32 %103, i32 0
  br label %298

106:                                              ; preds = %90
  %107 = tail call zeroext i1 @_ZNK5blink19FlexLayoutAlgorithm30ShouldApplyMinSizeAutoForChildERKNS_9LayoutBoxE(%"class.blink::FlexLayoutAlgorithm"* %1, %"class.blink::LayoutBox"* dereferenceable(216) %2) #11
  br i1 %107, label %108, label %298

108:                                              ; preds = %106
  %109 = bitcast %"class.blink::Length"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #11
  %110 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %110, align 4, !alias.scope !51
  %111 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 1
  store i8 0, i8* %111, align 4, !alias.scope !51
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  store i8 3, i8* %112, align 1, !alias.scope !51
  %113 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 3
  store i8 0, i8* %113, align 2, !alias.scope !51
  %114 = call i32 @_ZNK5blink17LayoutFlexibleBox29ComputeMainAxisExtentForChildERKNS_9LayoutBoxENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 1, %"class.blink::Length"* nonnull dereferenceable(8) %6, i32 %3)
  %115 = load i8, i8* %112, align 1
  %116 = icmp eq i8 %115, 8
  br i1 %116, label %117, label %118

117:                                              ; preds = %108
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #11
  br label %118

118:                                              ; preds = %108, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #11
  %119 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*)***
  %120 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %119, align 8
  %121 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %120, i64 21
  %122 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %121, align 8
  %123 = call zeroext i1 %122(%"class.blink::LayoutObject"* %41) #11
  br i1 %123, label %155, label %124

124:                                              ; preds = %118
  %125 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %126 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %125, align 8
  %127 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %126, i64 92
  %128 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %127, align 8
  %129 = call zeroext i1 %128(%"class.blink::LayoutObject"* %41, i32 2) #11
  br i1 %129, label %155, label %130

130:                                              ; preds = %124
  %131 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %125, align 8
  %132 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %131, i64 92
  %133 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %132, align 8
  %134 = call zeroext i1 %133(%"class.blink::LayoutObject"* %41, i32 54) #11
  br i1 %134, label %155, label %135

135:                                              ; preds = %130
  %136 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %136, i64 0, i32 5, i32 0, i32 0
  %138 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %138, i64 0, i32 1, i32 1, i32 0
  %140 = load float, float* %139, align 4
  %141 = fcmp oeq float %140, 0.000000e+00
  br i1 %141, label %166, label %142

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %138, i64 0, i32 1, i32 1, i32 1
  %144 = load float, float* %143, align 4
  %145 = fcmp oeq float %144, 0.000000e+00
  %146 = fcmp olt float %140, 1.562500e-02
  %147 = or i1 %146, %145
  %148 = fcmp olt float %144, 1.562500e-02
  %149 = or i1 %148, %147
  br i1 %149, label %166, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %138, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 4
  %153 = and i8 %152, 3
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %166, label %155

155:                                              ; preds = %150, %118, %124, %130
  %156 = bitcast %"class.blink::LayoutBox"* %2 to i64 (%"class.blink::LayoutBox"*)***
  %157 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %156, align 8
  %158 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %157, i64 165
  %159 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %158, align 8
  %160 = call i64 %159(%"class.blink::LayoutBox"* %2) #11
  %161 = lshr i64 %160, 32
  %162 = trunc i64 %161 to i32
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %155
  %165 = call i32 @_ZNK5blink17LayoutFlexibleBox47AdjustChildSizeForAspectRatioCrossAxisMinAndMaxERKNS_9LayoutBoxENS_10LayoutUnitES4_S4_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 %114, i32 %3, i32 %4)
  br label %166

166:                                              ; preds = %150, %135, %142, %164, %155
  %167 = phi i32 [ %114, %150 ], [ %114, %135 ], [ %114, %142 ], [ %165, %164 ], [ %114, %155 ]
  %168 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %169 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %168, align 8
  %170 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %169, i64 92
  %171 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %170, align 8
  %172 = call zeroext i1 %171(%"class.blink::LayoutObject"* %41, i32 44) #11
  br i1 %172, label %173, label %199

173:                                              ; preds = %166
  %174 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %175 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %174, i64 0, i32 0, i32 9
  %176 = bitcast [20 x i8]* %175 to i160*
  %177 = load i160, i160* %176, align 8
  %178 = lshr i160 %177, 32
  %179 = trunc i160 %178 to i32
  %180 = and i32 %179, 30
  %181 = or i32 %180, 1
  %182 = icmp eq i32 %181, 15
  %183 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %174, i64 0, i32 0, i32 3, i32 0, i32 0
  %184 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %183, align 8
  br i1 %182, label %185, label %192

185:                                              ; preds = %173
  %186 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %184, i64 0, i32 2, i32 0, i32 0
  %187 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %187, i64 0, i32 13
  %189 = bitcast [3 x i8]* %188 to i24*
  %190 = load i24, i24* %189, align 8
  %191 = icmp slt i24 %190, 0
  br i1 %191, label %199, label %298

192:                                              ; preds = %173
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %184, i64 0, i32 12
  %194 = load i16, i16* %193, align 4
  %195 = lshr i16 %194, 5
  %196 = and i16 %195, 2
  %197 = or i16 %196, 1
  %198 = icmp eq i16 %197, 3
  br i1 %198, label %199, label %298

199:                                              ; preds = %185, %192, %166
  %200 = icmp ne i32 %71, -64
  %201 = icmp sgt i32 %167, %71
  %202 = and i1 %200, %201
  %203 = select i1 %202, i32 %71, i32 %167
  %204 = load i96, i96* %8, align 4
  %205 = trunc i96 %204 to i32
  %206 = icmp slt i32 %205, 0
  %207 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %208 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %207, i64 0, i32 0, i32 9
  %209 = bitcast [20 x i8]* %208 to i160*
  %210 = load i160, i160* %209, align 8
  %211 = lshr i160 %210, 32
  %212 = trunc i160 %211 to i32
  %213 = and i32 %212, 30
  %214 = or i32 %213, 1
  %215 = icmp eq i32 %214, 15
  %216 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %207, i64 0, i32 0, i32 3, i32 0, i32 0
  %217 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %216, align 8
  br i1 %215, label %218, label %225

218:                                              ; preds = %199
  %219 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %217, i64 0, i32 2, i32 0, i32 0
  %220 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %220, i64 0, i32 13
  %222 = bitcast [3 x i8]* %221 to i24*
  %223 = load i24, i24* %222, align 8
  %224 = icmp slt i24 %223, 0
  br label %232

225:                                              ; preds = %199
  %226 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %217, i64 0, i32 12
  %227 = load i16, i16* %226, align 4
  %228 = lshr i16 %227, 5
  %229 = and i16 %228, 2
  %230 = or i16 %229, 1
  %231 = icmp eq i16 %230, 3
  br label %232

232:                                              ; preds = %218, %225
  %233 = phi i1 [ %224, %218 ], [ %231, %225 ]
  %234 = xor i1 %206, %233
  %235 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %235, i64 0, i32 5, i32 0, i32 0
  %237 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %237, i64 0, i32 8
  %239 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %237, i64 0, i32 3
  %240 = select i1 %234, %"class.blink::Length"* %238, %"class.blink::Length"* %239
  %241 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox24MainAxisLengthIsDefiniteERKNS_9LayoutBoxERKNS_6LengthEb(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, %"class.blink::Length"* dereferenceable(8) %240, i1 zeroext true)
  br i1 %241, label %242, label %249

242:                                              ; preds = %232
  %243 = call i32 @_ZNK5blink17LayoutFlexibleBox29ComputeMainAxisExtentForChildERKNS_9LayoutBoxENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 0, %"class.blink::Length"* dereferenceable(8) %240, i32 %3)
  %244 = icmp slt i32 %71, %243
  %245 = and i1 %200, %244
  %246 = select i1 %245, i32 %71, i32 %243
  %247 = icmp slt i32 %203, %246
  %248 = select i1 %247, i32 %203, i32 %246
  br label %298

249:                                              ; preds = %232
  %250 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %168, align 8
  %251 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %250, i64 92
  %252 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %251, align 8
  %253 = call zeroext i1 %252(%"class.blink::LayoutObject"* %41, i32 39) #11
  br i1 %253, label %254, label %298

254:                                              ; preds = %249
  %255 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox19UseChildAspectRatioERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2)
  br i1 %255, label %256, label %298

256:                                              ; preds = %254
  %257 = load i96, i96* %8, align 4
  %258 = trunc i96 %257 to i32
  %259 = icmp slt i32 %258, 0
  %260 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %261 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %260, i64 0, i32 0, i32 9
  %262 = bitcast [20 x i8]* %261 to i160*
  %263 = load i160, i160* %262, align 8
  %264 = lshr i160 %263, 32
  %265 = trunc i160 %264 to i32
  %266 = and i32 %265, 30
  %267 = or i32 %266, 1
  %268 = icmp eq i32 %267, 15
  %269 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %260, i64 0, i32 0, i32 3, i32 0, i32 0
  %270 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %269, align 8
  br i1 %268, label %271, label %278

271:                                              ; preds = %256
  %272 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %270, i64 0, i32 2, i32 0, i32 0
  %273 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %273, i64 0, i32 13
  %275 = bitcast [3 x i8]* %274 to i24*
  %276 = load i24, i24* %275, align 8
  %277 = icmp slt i24 %276, 0
  br label %285

278:                                              ; preds = %256
  %279 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %270, i64 0, i32 12
  %280 = load i16, i16* %279, align 4
  %281 = lshr i16 %280, 5
  %282 = and i16 %281, 2
  %283 = or i16 %282, 1
  %284 = icmp eq i16 %283, 3
  br label %285

285:                                              ; preds = %271, %278
  %286 = phi i1 [ %277, %271 ], [ %284, %278 ]
  %287 = xor i1 %259, %286
  %288 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %288, i64 0, i32 5, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %290, i64 0, i32 3
  %292 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %290, i64 0, i32 8
  %293 = select i1 %287, %"class.blink::Length"* %291, %"class.blink::Length"* %292
  %294 = call i32 @_ZNK5blink17LayoutFlexibleBox35ComputeMainSizeFromAspectRatioUsingERKNS_9LayoutBoxERKNS_6LengthENS_10LayoutUnitES7_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, %"class.blink::Length"* dereferenceable(8) %293, i32 %3, i32 %4)
  %295 = call i32 @_ZNK5blink17LayoutFlexibleBox47AdjustChildSizeForAspectRatioCrossAxisMinAndMaxERKNS_9LayoutBoxENS_10LayoutUnitES4_S4_(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, i32 %294, i32 %3, i32 %4)
  %296 = icmp slt i32 %203, %295
  %297 = select i1 %296, i32 %203, i32 %295
  br label %298

298:                                              ; preds = %285, %242, %185, %192, %254, %249, %106, %102
  %299 = phi i32 [ 0, %106 ], [ %105, %102 ], [ %248, %242 ], [ %297, %285 ], [ %167, %185 ], [ %167, %192 ], [ %203, %254 ], [ %203, %249 ]
  %300 = zext i32 %71 to i64
  %301 = shl nuw i64 %300, 32
  %302 = zext i32 %299 to i64
  %303 = or i64 %301, %302
  ret i64 %303
}

declare zeroext i1 @_ZNK5blink19FlexLayoutAlgorithm30ShouldApplyMinSizeAutoForChildERKNS_9LayoutBoxE(%"class.blink::FlexLayoutAlgorithm"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox42CrossSizeIsDefiniteForPercentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::ComputedStyle"* dereferenceable(104) %6) #11
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  br label %11

11:                                               ; preds = %9, %2
  %12 = phi i1 [ false, %2 ], [ %10, %9 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox41MainSizeIsDefiniteForPercentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length", align 4
  %4 = bitcast %"class.blink::Length"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %5, align 4, !alias.scope !54
  %6 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 1
  store i8 0, i8* %6, align 4, !alias.scope !54
  %7 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  store i8 1, i8* %7, align 1, !alias.scope !54
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  store i8 0, i8* %8, align 2, !alias.scope !54
  %9 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox24MainAxisLengthIsDefiniteERKNS_9LayoutBoxERKNS_6LengthEb(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::Length"* nonnull dereferenceable(8) %3, i1 zeroext false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox29ChildHasIntrinsicMainAxisSizeERKNS_19FlexLayoutAlgorithmERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::FlexLayoutAlgorithm"* dereferenceable(1216), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = trunc i96 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = lshr i160 %15, 32
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 30
  %19 = or i32 %18, 1
  %20 = icmp eq i32 %19, 15
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %21, align 8
  br i1 %20, label %23, label %30

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %25, i64 0, i32 13
  %27 = bitcast [3 x i8]* %26 to i24*
  %28 = load i24, i24* %27, align 8
  %29 = icmp slt i24 %28, 0
  br label %37

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %22, i64 0, i32 12
  %32 = load i16, i16* %31, align 4
  %33 = lshr i16 %32, 5
  %34 = and i16 %33, 2
  %35 = or i16 %34, 1
  %36 = icmp eq i16 %35, 3
  br label %37

37:                                               ; preds = %23, %30
  %38 = phi i1 [ %29, %23 ], [ %36, %30 ]
  %39 = xor i1 %10, %38
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = trunc i96 %42 to i32
  %44 = icmp sgt i32 %43, -1
  %45 = xor i1 %39, %44
  br i1 %45, label %192, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %49 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %55, i64 0, i32 45
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 24
  %59 = icmp ne i32 %58, 24
  %60 = and i96 %42, 1207959552
  %61 = icmp eq i96 %60, 134217728
  %62 = or i1 %59, %61
  br i1 %62, label %104, label %63

63:                                               ; preds = %46
  %64 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* %47, i32 43) #11
  br i1 %68, label %104, label %69

69:                                               ; preds = %63
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %70, i64 92
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::LayoutObject"* %47, i32 46) #11
  br i1 %73, label %94, label %74

74:                                               ; preds = %69
  %75 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, i64 92
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::LayoutObject"* %47, i32 48) #11
  br i1 %78, label %94, label %79

79:                                               ; preds = %74
  %80 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %81 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %80, i64 92
  %82 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.blink::LayoutObject"* %47, i32 45) #11
  br i1 %83, label %94, label %84

84:                                               ; preds = %79
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %85, i64 92
  %87 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::LayoutObject"* %47, i32 49) #11
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %90, i64 92
  %92 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %91, align 8
  %93 = tail call zeroext i1 %92(%"class.blink::LayoutObject"* %47, i32 50) #11
  br i1 %93, label %94, label %99

94:                                               ; preds = %89, %84, %79, %74, %69
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, i64 92
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* %47, i32 45) #11
  br i1 %98, label %99, label %104

99:                                               ; preds = %89, %94
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %101 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, i64 92
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.blink::LayoutObject"* %47, i32 44) #11
  br i1 %103, label %104, label %192

104:                                              ; preds = %46, %99, %63, %94
  %105 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  %106 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  store i64 -6148914691236517206, i64* %4, align 8
  call void @_ZNK5blink17LayoutFlexibleBox17FlexBasisForChildERKNS_9LayoutBoxE(%"class.blink::Length"* nonnull sret %5, %"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2)
  %107 = load i96, i96* %7, align 4
  %108 = trunc i96 %107 to i32
  %109 = icmp slt i32 %108, 0
  %110 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 9
  %112 = bitcast [20 x i8]* %111 to i160*
  %113 = load i160, i160* %112, align 8
  %114 = lshr i160 %113, 32
  %115 = trunc i160 %114 to i32
  %116 = and i32 %115, 30
  %117 = or i32 %116, 1
  %118 = icmp eq i32 %117, 15
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 3, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %119, align 8
  br i1 %118, label %121, label %128

121:                                              ; preds = %104
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %120, i64 0, i32 2, i32 0, i32 0
  %123 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %123, i64 0, i32 13
  %125 = bitcast [3 x i8]* %124 to i24*
  %126 = load i24, i24* %125, align 8
  %127 = icmp slt i24 %126, 0
  br label %135

128:                                              ; preds = %104
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %120, i64 0, i32 12
  %130 = load i16, i16* %129, align 4
  %131 = lshr i16 %130, 5
  %132 = and i16 %131, 2
  %133 = or i16 %132, 1
  %134 = icmp eq i16 %133, 3
  br label %135

135:                                              ; preds = %121, %128
  %136 = phi i1 [ %127, %121 ], [ %134, %128 ]
  %137 = xor i1 %109, %136
  %138 = bitcast %"class.blink::ComputedStyle"** %48 to %"class.blink::ComputedStyleBase"**
  %139 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %139, i64 0, i32 5, i32 0, i32 0
  %141 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %141, i64 0, i32 7
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %141, i64 0, i32 6
  %144 = select i1 %137, %"class.blink::Length"* %142, %"class.blink::Length"* %143
  br i1 %118, label %145, label %152

145:                                              ; preds = %135
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %120, i64 0, i32 2, i32 0, i32 0
  %147 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %147, i64 0, i32 13
  %149 = bitcast [3 x i8]* %148 to i24*
  %150 = load i24, i24* %149, align 8
  %151 = icmp slt i24 %150, 0
  br label %159

152:                                              ; preds = %135
  %153 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %120, i64 0, i32 12
  %154 = load i16, i16* %153, align 4
  %155 = lshr i16 %154, 5
  %156 = and i16 %155, 2
  %157 = or i16 %156, 1
  %158 = icmp eq i16 %157, 3
  br label %159

159:                                              ; preds = %145, %152
  %160 = phi i1 [ %151, %145 ], [ %158, %152 ]
  %161 = xor i1 %109, %160
  %162 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %141, i64 0, i32 5
  %163 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %141, i64 0, i32 4
  %164 = select i1 %161, %"class.blink::Length"* %162, %"class.blink::Length"* %163
  %165 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox24MainAxisLengthIsDefiniteERKNS_9LayoutBoxERKNS_6LengthEb(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %2, %"class.blink::Length"* nonnull dereferenceable(8) %5, i1 zeroext true)
  br i1 %165, label %166, label %186

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %144, i64 0, i32 2
  %168 = load i8, i8* %167, align 1
  %169 = add i8 %168, -3
  %170 = icmp ult i8 %169, 5
  br i1 %170, label %178, label %171

171:                                              ; preds = %178, %166
  %172 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %164, i64 0, i32 2
  %173 = load i8, i8* %172, align 1
  %174 = add i8 %173, -3
  %175 = icmp ult i8 %174, 5
  br i1 %175, label %182, label %176

176:                                              ; preds = %182, %171
  %177 = call zeroext i1 @_ZNK5blink19FlexLayoutAlgorithm30ShouldApplyMinSizeAutoForChildERKNS_9LayoutBoxE(%"class.blink::FlexLayoutAlgorithm"* %1, %"class.blink::LayoutBox"* dereferenceable(216) %2) #11
  br label %186

178:                                              ; preds = %166
  %179 = lshr i8 23, %169
  %180 = and i8 %179, 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %171, label %186

182:                                              ; preds = %171
  %183 = lshr i8 23, %174
  %184 = and i8 %183, 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %176, label %186

186:                                              ; preds = %178, %182, %176, %159
  %187 = phi i1 [ true, %159 ], [ %177, %176 ], [ true, %178 ], [ true, %182 ]
  %188 = load i8, i8* %106, align 1
  %189 = icmp eq i8 %188, 8
  br i1 %189, label %190, label %191

190:                                              ; preds = %186
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #11
  br label %191

191:                                              ; preds = %186, %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  br label %192

192:                                              ; preds = %99, %191, %37
  %193 = phi i1 [ false, %37 ], [ false, %99 ], [ %187, %191 ]
  ret i1 %193
}

declare void @_ZN5blink11LayoutBlock37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, i1 zeroext, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox17ClearOverrideSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox39ClearOverrideContainingBlockContentSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox38SetOverrideMainAxisContentSizeForChildERNS_8FlexItemE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::FlexItem"* nocapture readonly dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %1, i64 0, i32 2
  %4 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = trunc i96 %7 to i32
  %9 = icmp slt i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = lshr i160 %14, 32
  %16 = trunc i160 %15 to i32
  %17 = and i32 %16, 30
  %18 = or i32 %17, 1
  %19 = icmp eq i32 %18, 15
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %20, align 8
  br i1 %19, label %22, label %29

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %24, i64 0, i32 13
  %26 = bitcast [3 x i8]* %25 to i24*
  %27 = load i24, i24* %26, align 8
  %28 = icmp slt i24 %27, 0
  br label %36

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %21, i64 0, i32 12
  %31 = load i16, i16* %30, align 4
  %32 = lshr i16 %31, 5
  %33 = and i16 %32, 2
  %34 = or i16 %33, 1
  %35 = icmp eq i16 %34, 3
  br label %36

36:                                               ; preds = %22, %29
  %37 = phi i1 [ %28, %22 ], [ %35, %29 ]
  %38 = xor i1 %9, %37
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = trunc i96 %41 to i32
  %43 = icmp sgt i32 %42, -1
  %44 = xor i1 %38, %43
  %45 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %1, i64 0, i32 12, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %1, i64 0, i32 8, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %48) #11
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !4
  br i1 %44, label %55, label %56

55:                                               ; preds = %36
  tail call void @_ZN5blink9LayoutBox23SetOverrideLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %4, i32 %54) #11
  br label %57

56:                                               ; preds = %36
  tail call void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %4, i32 %54) #11
  br label %57

57:                                               ; preds = %56, %55
  ret void
}

declare void @_ZN5blink9LayoutBox23SetOverrideLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17LayoutFlexibleBox42SetStaticPositionForChildInFlexNGContainerERNS_9LayoutBoxEPNS_11LayoutBlockE(%"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), %"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %5, align 8
  %7 = icmp eq %"struct.blink::FragmentData::RareData"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %9, align 8
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi %"class.blink::PaintLayer"* [ %10, %8 ], [ null, %2 ]
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 7, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %20, align 8
  br i1 %19, label %22, label %30

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 8, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %77

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 17, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %38, label %77

30:                                               ; preds = %11
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 18, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %77

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 7, i32 2
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %77

38:                                               ; preds = %26, %34
  %39 = tail call i32 @_ZNK5blink11LayoutBlock21StartOffsetForContentEv(%"class.blink::LayoutBlock"* %1) #11
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = lshr i160 %43, 32
  %45 = trunc i160 %44 to i32
  %46 = and i32 %45, 30
  %47 = or i32 %46, 1
  %48 = icmp eq i32 %47, 15
  br i1 %48, label %71, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %51, i64 0, i32 12
  %53 = load i16, i16* %52, align 4
  %54 = lshr i16 %53, 5
  %55 = and i16 %54, 2
  %56 = or i16 %55, 1
  %57 = icmp eq i16 %56, 3
  %58 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0
  br i1 %57, label %59, label %61

59:                                               ; preds = %49
  %60 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_143StaticCrossAxisPositionForNGPositionedChildERKNS_9LayoutBoxEPS1_(%"class.blink::LayoutBox"* dereferenceable(216) %0, %"class.blink::LayoutBox"* %58) #11
  br label %63

61:                                               ; preds = %49
  %62 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_142StaticMainAxisPositionForNGPositionedChildERKNS_9LayoutBoxEPS1_(%"class.blink::LayoutBox"* dereferenceable(216) %0, %"class.blink::LayoutBox"* %58) #11
  br label %63

63:                                               ; preds = %61, %59
  %64 = phi i32 [ %60, %59 ], [ %62, %61 ]
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %64) #11
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !4
  br label %71

71:                                               ; preds = %38, %63
  %72 = phi i32 [ %70, %63 ], [ %39, %38 ]
  %73 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %12, i64 0, i32 10, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, %72
  br i1 %75, label %77, label %76

76:                                               ; preds = %71
  store i32 %72, i32* %73, align 8
  br label %77

77:                                               ; preds = %71, %30, %22, %76, %26, %34
  %78 = phi i8 [ 0, %34 ], [ 0, %26 ], [ 1, %76 ], [ 0, %71 ], [ 0, %22 ], [ 0, %30 ]
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %80 = load i160, i160* %16, align 8
  %81 = and i160 %80, 15211807202738752817960438464512
  %82 = icmp eq i160 %81, 0
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 7, i32 0, i32 0
  %84 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %83, align 8
  br i1 %82, label %85, label %93

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %84, i64 0, i32 18, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %219

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %84, i64 0, i32 7, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %101, label %219

93:                                               ; preds = %77
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %84, i64 0, i32 8, i32 2
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %219

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %84, i64 0, i32 17, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %219

101:                                              ; preds = %89, %97
  %102 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !57
  %104 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %103, i64 0, i32 0, i32 9
  %105 = bitcast [20 x i8]* %104 to i160*
  %106 = load i160, i160* %105, align 8, !noalias !57
  %107 = lshr i160 %106, 102
  %108 = trunc i160 %107 to i8
  %109 = and i8 %108, 3
  %110 = bitcast %"class.blink::LayoutBlock"* %1 to i8*
  switch i8 %109, label %111 [
    i8 0, label %120
    i8 1, label %112
  ]

111:                                              ; preds = %101
  br label %112

112:                                              ; preds = %111, %101
  %113 = phi { i64, i64 } [ { i64 993, i64 0 }, %111 ], [ { i64 1001, i64 0 }, %101 ]
  %114 = extractvalue { i64, i64 } %113, 0
  %115 = extractvalue { i64, i64 } %113, 1
  %116 = getelementptr inbounds i8, i8* %110, i64 %115
  %117 = bitcast i8* %116 to %"class.blink::LayoutBoxModelObject"*
  %118 = and i64 %114, 1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %130, label %120

120:                                              ; preds = %112, %101
  %121 = phi %"class.blink::LayoutBoxModelObject"* [ %117, %112 ], [ %102, %101 ]
  %122 = phi i8* [ %116, %112 ], [ %110, %101 ]
  %123 = phi i64 [ %114, %112 ], [ 977, %101 ]
  %124 = bitcast i8* %122 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = add i64 %123, -1
  %127 = getelementptr i8, i8* %125, i64 %126
  %128 = bitcast i8* %127 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %129 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %128, align 8
  br label %132

130:                                              ; preds = %112
  %131 = inttoptr i64 %114 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %132

132:                                              ; preds = %130, %120
  %133 = phi %"class.blink::LayoutBoxModelObject"* [ %121, %120 ], [ %117, %130 ]
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %129, %120 ], [ %131, %130 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %133) #11
  %136 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !60
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %136, i64 0, i32 0, i32 9
  %138 = bitcast [20 x i8]* %137 to i160*
  %139 = load i160, i160* %138, align 8, !noalias !60
  %140 = lshr i160 %139, 102
  %141 = trunc i160 %140 to i8
  %142 = and i8 %141, 3
  switch i8 %142, label %143 [
    i8 0, label %152
    i8 1, label %144
  ]

143:                                              ; preds = %132
  br label %144

144:                                              ; preds = %143, %132
  %145 = phi { i64, i64 } [ { i64 961, i64 0 }, %143 ], [ { i64 969, i64 0 }, %132 ]
  %146 = extractvalue { i64, i64 } %145, 0
  %147 = extractvalue { i64, i64 } %145, 1
  %148 = getelementptr inbounds i8, i8* %110, i64 %147
  %149 = bitcast i8* %148 to %"class.blink::LayoutBoxModelObject"*
  %150 = and i64 %146, 1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %162, label %152

152:                                              ; preds = %144, %132
  %153 = phi %"class.blink::LayoutBoxModelObject"* [ %149, %144 ], [ %102, %132 ]
  %154 = phi i8* [ %148, %144 ], [ %110, %132 ]
  %155 = phi i64 [ %146, %144 ], [ 945, %132 ]
  %156 = bitcast i8* %154 to i8**
  %157 = load i8*, i8** %156, align 8
  %158 = add i64 %155, -1
  %159 = getelementptr i8, i8* %157, i64 %158
  %160 = bitcast i8* %159 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %161 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %160, align 8
  br label %164

162:                                              ; preds = %144
  %163 = inttoptr i64 %146 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %164

164:                                              ; preds = %162, %152
  %165 = phi %"class.blink::LayoutBoxModelObject"* [ %153, %152 ], [ %149, %162 ]
  %166 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %161, %152 ], [ %163, %162 ]
  %167 = tail call i32 %166(%"class.blink::LayoutBoxModelObject"* %165) #11
  %168 = icmp slt i32 %167, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %167) #11
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !4
  %174 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %175 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %174, i64 0, i32 0, i32 9
  %176 = bitcast [20 x i8]* %175 to i160*
  %177 = load i160, i160* %176, align 8
  %178 = lshr i160 %177, 32
  %179 = trunc i160 %178 to i32
  %180 = and i32 %179, 30
  %181 = or i32 %180, 1
  %182 = icmp eq i32 %181, 15
  %183 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %174, i64 0, i32 0, i32 3, i32 0, i32 0
  %184 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %183, align 8
  br i1 %182, label %185, label %193

185:                                              ; preds = %164
  %186 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %184, i64 0, i32 2, i32 0, i32 0
  %187 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %187, i64 0, i32 13
  %189 = bitcast [3 x i8]* %188 to i24*
  %190 = load i24, i24* %189, align 8
  %191 = icmp slt i24 %190, 0
  %192 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0
  br i1 %191, label %201, label %204

193:                                              ; preds = %164
  %194 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %184, i64 0, i32 12
  %195 = load i16, i16* %194, align 4
  %196 = lshr i16 %195, 5
  %197 = and i16 %196, 2
  %198 = or i16 %197, 1
  %199 = icmp eq i16 %198, 3
  %200 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0
  br i1 %199, label %201, label %204

201:                                              ; preds = %193, %185
  %202 = phi %"class.blink::LayoutBox"* [ %192, %185 ], [ %200, %193 ]
  %203 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_142StaticMainAxisPositionForNGPositionedChildERKNS_9LayoutBoxEPS1_(%"class.blink::LayoutBox"* dereferenceable(216) %0, %"class.blink::LayoutBox"* %202) #11
  br label %207

204:                                              ; preds = %193, %185
  %205 = phi %"class.blink::LayoutBox"* [ %192, %185 ], [ %200, %193 ]
  %206 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_143StaticCrossAxisPositionForNGPositionedChildERKNS_9LayoutBoxEPS1_(%"class.blink::LayoutBox"* dereferenceable(216) %0, %"class.blink::LayoutBox"* %205) #11
  br label %207

207:                                              ; preds = %201, %204
  %208 = phi i32 [ %203, %201 ], [ %206, %204 ]
  %209 = icmp slt i32 %208, 0
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %173, i32 %208) #11
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !4
  %215 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %12, i64 0, i32 11, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, %214
  br i1 %217, label %219, label %218

218:                                              ; preds = %207
  store i32 %214, i32* %215, align 4
  br label %219

219:                                              ; preds = %207, %93, %85, %218, %89, %97
  %220 = phi i8 [ %78, %97 ], [ %78, %89 ], [ 1, %218 ], [ %78, %207 ], [ %78, %85 ], [ %78, %93 ]
  %221 = and i8 %220, 1
  %222 = icmp ne i8 %221, 0
  ret i1 %222
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox40StaticMainAxisPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0
  %5 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %4)
  %6 = tail call i32 @_ZN5blink17LayoutFlexibleBox21MainAxisContentExtentENS_10LayoutUnitE(%"class.blink::LayoutFlexibleBox"* %0, i32 %5)
  %7 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = trunc i96 %9 to i32
  %11 = icmp slt i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 32
  %18 = trunc i160 %17 to i32
  %19 = and i32 %18, 30
  %20 = or i32 %19, 1
  %21 = icmp eq i32 %20, 15
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  br i1 %21, label %24, label %31

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %26, i64 0, i32 13
  %28 = bitcast [3 x i8]* %27 to i24*
  %29 = load i24, i24* %28, align 8
  %30 = icmp slt i24 %29, 0
  br label %38

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 12
  %33 = load i16, i16* %32, align 4
  %34 = lshr i16 %33, 5
  %35 = and i16 %34, 2
  %36 = or i16 %35, 1
  %37 = icmp eq i16 %36, 3
  br label %38

38:                                               ; preds = %24, %31
  %39 = phi i1 [ %30, %24 ], [ %37, %31 ]
  %40 = xor i1 %11, %39
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %42 = bitcast %"class.blink::LayoutSize"* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = lshr i64 %43, 32
  %45 = select i1 %40, i64 %43, i64 %44
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %46, -1
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %6, i32 %46) #11
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !4
  %53 = bitcast i32* %3 to %"class.blink::StyleContentAlignmentData"*
  %54 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #11
  %55 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm22ResolvedJustifyContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %13) #11
  store i32 %55, i32* %3, align 4
  %56 = call i32 @_ZN5blink19FlexLayoutAlgorithm28InitialContentPositionOffsetERKNS_13ComputedStyleENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(%"class.blink::ComputedStyle"* dereferenceable(104) %13, i32 %52, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) %53, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #11
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = lshr i160 %60, 32
  %62 = trunc i160 %61 to i32
  %63 = and i32 %62, 30
  %64 = or i32 %63, 1
  %65 = icmp eq i32 %64, 15
  br i1 %65, label %66, label %69

66:                                               ; preds = %38
  %67 = and i160 %60, 324518553658426726783156020576256
  %68 = icmp eq i160 %67, 0
  br i1 %68, label %82, label %75

69:                                               ; preds = %38
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %71, i64 0, i32 12
  %73 = load i16, i16* %72, align 4
  %74 = and i16 %73, 96
  switch i16 %74, label %82 [
    i16 32, label %75
    i16 96, label %75
  ]

75:                                               ; preds = %69, %69, %66
  %76 = icmp sgt i32 %56, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %52, i32 %56) #11
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !4
  br label %82

82:                                               ; preds = %66, %69, %75
  %83 = phi i32 [ %81, %75 ], [ %56, %66 ], [ %56, %69 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #11
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 118
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #11
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #11
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !4
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 119
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #11
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #11
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #11
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 120
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #11
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #11
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !4
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 121
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #11
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #11
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox41StaticCrossAxisPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink17LayoutFlexibleBox22CrossAxisContentExtentEv(%"class.blink::LayoutFlexibleBox"* %0)
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = trunc i96 %6 to i32
  %8 = icmp slt i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 32
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 30
  %17 = or i32 %16, 1
  %18 = icmp eq i32 %17, 15
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %19, align 8
  br i1 %18, label %21, label %28

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %23, i64 0, i32 13
  %25 = bitcast [3 x i8]* %24 to i24*
  %26 = load i24, i24* %25, align 8
  %27 = icmp slt i24 %26, 0
  br label %35

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %20, i64 0, i32 12
  %30 = load i16, i16* %29, align 4
  %31 = lshr i16 %30, 5
  %32 = and i16 %31, 2
  %33 = or i16 %32, 1
  %34 = icmp eq i16 %33, 3
  br label %35

35:                                               ; preds = %21, %28
  %36 = phi i1 [ %27, %21 ], [ %34, %28 ]
  %37 = xor i1 %8, %36
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %39 = bitcast %"class.blink::LayoutSize"* %38 to i64*
  %40 = load i64, i64* %39, align 4
  %41 = lshr i64 %40, 32
  %42 = select i1 %37, i64 %41, i64 %40
  %43 = trunc i64 %42 to i32
  %44 = icmp sgt i32 %43, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %43) #11
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !4
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %50, align 8
  %52 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %10, %"class.blink::ComputedStyle"* dereferenceable(104) %51) #11
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %55, i64 0, i32 12
  %57 = load i16, i16* %56, align 4
  %58 = and i16 %57, 384
  %59 = icmp eq i16 %58, 256
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = lshr i160 %62, 32
  %64 = trunc i160 %63 to i32
  %65 = and i32 %64, 30
  %66 = or i32 %65, 1
  %67 = icmp eq i32 %66, 15
  %68 = tail call i32 @_ZN5blink8FlexItem15AlignmentOffsetENS_10LayoutUnitENS_12ItemPositionES1_S1_bb(i32 %49, i32 %52, i32 0, i32 0, i1 zeroext %59, i1 zeroext %67) #11
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox38StaticInlinePositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %4 = tail call i32 @_ZNK5blink11LayoutBlock21StartOffsetForContentEv(%"class.blink::LayoutBlock"* %3)
  %5 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = lshr i160 %9, 32
  %11 = trunc i160 %10 to i32
  %12 = and i32 %11, 30
  %13 = or i32 %12, 1
  %14 = icmp eq i32 %13, 15
  br i1 %14, label %36, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 12
  %19 = load i16, i16* %18, align 4
  %20 = lshr i16 %19, 5
  %21 = and i16 %20, 2
  %22 = or i16 %21, 1
  %23 = icmp eq i16 %22, 3
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = tail call i32 @_ZN5blink17LayoutFlexibleBox41StaticCrossAxisPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %28

26:                                               ; preds = %15
  %27 = tail call i32 @_ZN5blink17LayoutFlexibleBox40StaticMainAxisPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i32 [ %25, %24 ], [ %27, %26 ]
  %30 = icmp slt i32 %29, 0
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %29) #11
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !4
  br label %36

36:                                               ; preds = %2, %28
  %37 = phi i32 [ %35, %28 ], [ %4, %2 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutBlock21StartOffsetForContentEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41538374868278621028243970633760768
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = trunc i96 %12 to i32
  %14 = icmp slt i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  br i1 %14, label %16, label %18

16:                                               ; preds = %9
  %17 = tail call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %15) #11
  br label %52

18:                                               ; preds = %9
  %19 = tail call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %15) #11
  br label %52

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %22 = and i160 %6, 15211807202738752817960438464512
  %23 = icmp eq i160 %22, 0
  %24 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %26 = select i1 %23, i32* %24, i32* %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = trunc i96 %30 to i32
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %20
  %34 = tail call i32 @_ZNK5blink9LayoutBox11ContentLeftEv(%"class.blink::LayoutBox"* %21) #11
  br label %37

35:                                               ; preds = %20
  %36 = tail call i32 @_ZNK5blink9LayoutBox10ContentTopEv(%"class.blink::LayoutBox"* %21) #11
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi i32 [ %34, %33 ], [ %36, %35 ]
  %39 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %21) #11
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %39) #11
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !4
  %46 = icmp sgt i32 %45, -1
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %27, i32 %45) #11
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !4
  br label %52

52:                                               ; preds = %18, %16, %37
  %53 = phi i32 [ %51, %37 ], [ %17, %16 ], [ %19, %18 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17LayoutFlexibleBox37StaticBlockPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8, !noalias !63
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8, !noalias !63
  %9 = lshr i160 %8, 102
  %10 = trunc i160 %9 to i8
  %11 = and i8 %10, 3
  %12 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to i8*
  switch i8 %11, label %13 [
    i8 0, label %22
    i8 1, label %14
  ]

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %2
  %15 = phi { i64, i64 } [ { i64 993, i64 0 }, %13 ], [ { i64 1001, i64 0 }, %2 ]
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %12, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %14, %2
  %23 = phi %"class.blink::LayoutBoxModelObject"* [ %19, %14 ], [ %3, %2 ]
  %24 = phi i8* [ %18, %14 ], [ %12, %2 ]
  %25 = phi i64 [ %16, %14 ], [ 977, %2 ]
  %26 = bitcast i8* %24 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = add i64 %25, -1
  %29 = getelementptr i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %31 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %30, align 8
  br label %34

32:                                               ; preds = %14
  %33 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %34

34:                                               ; preds = %32, %22
  %35 = phi %"class.blink::LayoutBoxModelObject"* [ %23, %22 ], [ %19, %32 ]
  %36 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %31, %22 ], [ %33, %32 ]
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %35) #11
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8, !noalias !66
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8, !noalias !66
  %42 = lshr i160 %41, 102
  %43 = trunc i160 %42 to i8
  %44 = and i8 %43, 3
  switch i8 %44, label %45 [
    i8 0, label %54
    i8 1, label %46
  ]

45:                                               ; preds = %34
  br label %46

46:                                               ; preds = %45, %34
  %47 = phi { i64, i64 } [ { i64 961, i64 0 }, %45 ], [ { i64 969, i64 0 }, %34 ]
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = extractvalue { i64, i64 } %47, 1
  %50 = getelementptr inbounds i8, i8* %12, i64 %49
  %51 = bitcast i8* %50 to %"class.blink::LayoutBoxModelObject"*
  %52 = and i64 %48, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %64, label %54

54:                                               ; preds = %46, %34
  %55 = phi %"class.blink::LayoutBoxModelObject"* [ %51, %46 ], [ %3, %34 ]
  %56 = phi i8* [ %50, %46 ], [ %12, %34 ]
  %57 = phi i64 [ %48, %46 ], [ 945, %34 ]
  %58 = bitcast i8* %56 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = add i64 %57, -1
  %61 = getelementptr i8, i8* %59, i64 %60
  %62 = bitcast i8* %61 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %63 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %62, align 8
  br label %66

64:                                               ; preds = %46
  %65 = inttoptr i64 %48 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %66

66:                                               ; preds = %54, %64
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %55, %54 ], [ %51, %64 ]
  %68 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %63, %54 ], [ %65, %64 ]
  %69 = tail call i32 %68(%"class.blink::LayoutBoxModelObject"* %67) #11
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %69) #11
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !4
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 9
  %78 = bitcast [20 x i8]* %77 to i160*
  %79 = load i160, i160* %78, align 8
  %80 = lshr i160 %79, 32
  %81 = trunc i160 %80 to i32
  %82 = and i32 %81, 30
  %83 = or i32 %82, 1
  %84 = icmp eq i32 %83, 15
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 3, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %85, align 8
  br i1 %84, label %87, label %94

87:                                               ; preds = %66
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %86, i64 0, i32 2, i32 0, i32 0
  %89 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %89, i64 0, i32 13
  %91 = bitcast [3 x i8]* %90 to i24*
  %92 = load i24, i24* %91, align 8
  %93 = icmp slt i24 %92, 0
  br i1 %93, label %101, label %103

94:                                               ; preds = %66
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %86, i64 0, i32 12
  %96 = load i16, i16* %95, align 4
  %97 = lshr i16 %96, 5
  %98 = and i16 %97, 2
  %99 = or i16 %98, 1
  %100 = icmp eq i16 %99, 3
  br i1 %100, label %101, label %103

101:                                              ; preds = %87, %94
  %102 = tail call i32 @_ZN5blink17LayoutFlexibleBox40StaticMainAxisPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %105

103:                                              ; preds = %87, %94
  %104 = tail call i32 @_ZN5blink17LayoutFlexibleBox41StaticCrossAxisPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br label %105

105:                                              ; preds = %103, %101
  %106 = phi i32 [ %102, %101 ], [ %104, %103 ]
  %107 = icmp slt i32 %106, 0
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %75, i32 %106) #11
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !4
  ret i32 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17LayoutFlexibleBox36SetStaticPositionForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %3, align 8
  %5 = icmp eq %"struct.blink::FragmentData::RareData"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::PaintLayer"* [ %8, %6 ], [ null, %2 ]
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 7, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %20, align 8
  br i1 %19, label %22, label %30

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 8, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %77

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 17, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %38, label %77

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 18, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %77

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 7, i32 2
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %77

38:                                               ; preds = %26, %34
  %39 = bitcast %"class.blink::LayoutFlexibleBox"* %0 to %"class.blink::LayoutBlock"*
  %40 = tail call i32 @_ZNK5blink11LayoutBlock21StartOffsetForContentEv(%"class.blink::LayoutBlock"* %39) #11
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8
  %45 = lshr i160 %44, 32
  %46 = trunc i160 %45 to i32
  %47 = and i32 %46, 30
  %48 = or i32 %47, 1
  %49 = icmp eq i32 %48, 15
  br i1 %49, label %71, label %50

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %52, i64 0, i32 12
  %54 = load i16, i16* %53, align 4
  %55 = lshr i16 %54, 5
  %56 = and i16 %55, 2
  %57 = or i16 %56, 1
  %58 = icmp eq i16 %57, 3
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = tail call i32 @_ZN5blink17LayoutFlexibleBox41StaticCrossAxisPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #11
  br label %63

61:                                               ; preds = %50
  %62 = tail call i32 @_ZN5blink17LayoutFlexibleBox40StaticMainAxisPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1) #11
  br label %63

63:                                               ; preds = %61, %59
  %64 = phi i32 [ %60, %59 ], [ %62, %61 ]
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %40, i32 %64) #11
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !4
  br label %71

71:                                               ; preds = %38, %63
  %72 = phi i32 [ %70, %63 ], [ %40, %38 ]
  %73 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %10, i64 0, i32 10, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, %72
  br i1 %75, label %77, label %76

76:                                               ; preds = %71
  store i32 %72, i32* %73, align 8
  br label %77

77:                                               ; preds = %71, %30, %22, %76, %26, %34
  %78 = phi i8 [ 0, %34 ], [ 0, %26 ], [ 1, %76 ], [ 0, %71 ], [ 0, %22 ], [ 0, %30 ]
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 15211807202738752817960438464512
  %85 = icmp eq i160 %84, 0
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 7, i32 0, i32 0
  %87 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %86, align 8
  br i1 %85, label %88, label %96

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %87, i64 0, i32 18, i32 2
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %110

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %87, i64 0, i32 7, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %104, label %110

96:                                               ; preds = %77
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %87, i64 0, i32 8, i32 2
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %110

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %87, i64 0, i32 17, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %92, %100
  %105 = tail call i32 @_ZN5blink17LayoutFlexibleBox37StaticBlockPositionForPositionedChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  %106 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %10, i64 0, i32 11, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, %105
  br i1 %108, label %110, label %109

109:                                              ; preds = %104
  store i32 %105, i32* %106, align 4
  br label %110

110:                                              ; preds = %104, %96, %88, %109, %92, %100
  %111 = phi i8 [ %78, %100 ], [ %78, %92 ], [ 1, %109 ], [ %78, %104 ], [ %78, %88 ], [ %78, %96 ]
  %112 = and i8 %111, 1
  %113 = icmp ne i8 %112, 0
  ret i1 %113
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox40ResetAutoMarginsAndLogicalTopInCrossAxisERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %27, %20
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %38 = bitcast %"class.blink::ComputedStyle"** %37 to %"class.blink::ComputedStyleBase"**
  %39 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %39, i64 0, i32 7, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %40, align 8
  br i1 %36, label %42, label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 12, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 9, i32 2
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %58, label %121

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 10, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 11, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %121

58:                                               ; preds = %50, %42, %46, %54
  tail call void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"* %1) #11
  %59 = load i96, i96* %4, align 4
  %60 = trunc i96 %59 to i32
  %61 = icmp slt i32 %60, 0
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8
  %66 = lshr i160 %65, 32
  %67 = trunc i160 %66 to i32
  %68 = and i32 %67, 30
  %69 = or i32 %68, 1
  %70 = icmp eq i32 %69, 15
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %71, align 8
  br i1 %70, label %73, label %80

73:                                               ; preds = %58
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %72, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %75, i64 0, i32 13
  %77 = bitcast [3 x i8]* %76 to i24*
  %78 = load i24, i24* %77, align 8
  %79 = icmp slt i24 %78, 0
  br label %87

80:                                               ; preds = %58
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %72, i64 0, i32 12
  %82 = load i16, i16* %81, align 4
  %83 = lshr i16 %82, 5
  %84 = and i16 %83, 2
  %85 = or i16 %84, 1
  %86 = icmp eq i16 %85, 3
  br label %87

87:                                               ; preds = %73, %80
  %88 = phi i1 [ %79, %73 ], [ %86, %80 ]
  %89 = xor i1 %61, %88
  %90 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %90, i64 0, i32 7, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %91, align 8
  br i1 %89, label %93, label %107

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %92, i64 0, i32 12, i32 2
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %98, align 4
  %99 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %91, align 8
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %99, %97 ], [ %92, %93 ]
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %101, i64 0, i32 9, i32 2
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %121

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 1, i32 2, i32 0
  store i32 0, i32* %106, align 4
  br label %121

107:                                              ; preds = %87
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %92, i64 0, i32 10, i32 2
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 1, i32 3, i32 0
  store i32 0, i32* %112, align 4
  %113 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %91, align 8
  br label %114

114:                                              ; preds = %111, %107
  %115 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %113, %111 ], [ %92, %107 ]
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %115, i64 0, i32 11, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 1, i32 1, i32 0
  store i32 0, i32* %120, align 4
  br label %121

121:                                              ; preds = %46, %105, %100, %119, %114, %54
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17LayoutFlexibleBox25CrossAxisOverflowForChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = trunc i96 %5 to i32
  %7 = icmp slt i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 32
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 30
  %16 = or i32 %15, 1
  %17 = icmp eq i32 %16, 15
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  br i1 %17, label %20, label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %22, i64 0, i32 13
  %24 = bitcast [3 x i8]* %23 to i24*
  %25 = load i24, i24* %24, align 8
  %26 = icmp slt i24 %25, 0
  br label %34

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 12
  %29 = load i16, i16* %28, align 4
  %30 = lshr i16 %29, 5
  %31 = and i16 %30, 2
  %32 = or i16 %31, 1
  %33 = icmp eq i16 %32, 3
  br label %34

34:                                               ; preds = %20, %27
  %35 = phi i1 [ %26, %20 ], [ %33, %27 ]
  %36 = xor i1 %7, %35
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %38 = bitcast %"class.blink::ComputedStyle"** %37 to %"class.blink::ComputedStyleBase"**
  %39 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %39, i64 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = select i1 %36, i160 77, i160 74
  %44 = lshr i160 %42, %43
  %45 = trunc i160 %44 to i32
  %46 = and i32 %45, 7
  ret i32 %46
}

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox26ClearOverrideLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox25ClearOverrideLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox9SetMarginERKNS_18NGPhysicalBoxStrutE(%"class.blink::LayoutBox"*, %"struct.blink::NGPhysicalBoxStrut"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox19LayoutColumnReverseERNS_18FlexItemVectorViewENS_10LayoutUnitES3_(%"class.blink::LayoutFlexibleBox"*, %"class.blink::FlexItemVectorView"* nocapture readonly dereferenceable(16), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to %"class.blink::StyleContentAlignmentData"*
  %8 = alloca %"class.blink::LayoutPoint", align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm22ResolvedJustifyContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %11) #11
  store i32 %12, i32* %6, align 4
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 15211807202738752817960438464512
  %18 = icmp eq i160 %17, 0
  %19 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %20 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %21 = select i1 %18, i32* %19, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = tail call i32 @_ZNK5blink17LayoutFlexibleBox24FlowAwareContentInsetEndEv(%"class.blink::LayoutFlexibleBox"* %0)
  %24 = icmp sgt i32 %23, -1
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %23) #11
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !4
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %31 = getelementptr inbounds %"class.blink::FlexItemVectorView", %"class.blink::FlexItemVectorView"* %1, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::FlexItemVectorView", %"class.blink::FlexItemVectorView"* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = sub i32 %32, %34
  %36 = call i32 @_ZN5blink19FlexLayoutAlgorithm28InitialContentPositionOffsetERKNS_13ComputedStyleENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(%"class.blink::ComputedStyle"* dereferenceable(104) %30, i32 %3, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) %7, i32 %35) #11
  %37 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %29, i32 %36) #11
  %38 = load i32, i32* %31, align 4
  %39 = load i32, i32* %33, align 8
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %4
  %42 = extractvalue { i32, i1 } %37, 1
  %43 = icmp sgt i32 %36, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = extractvalue { i32, i1 } %37, 0
  %46 = select i1 %42, i32 %44, i32 %45, !prof !4
  %47 = getelementptr inbounds %"class.blink::FlexItemVectorView", %"class.blink::FlexItemVectorView"* %1, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %49 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %48 to i96*
  %50 = bitcast %"class.blink::LayoutPoint"* %8 to i8*
  %51 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %8, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %8, i64 0, i32 1, i32 0
  %53 = bitcast i64* %5 to %"class.blink::LayoutPoint"*
  %54 = bitcast i64* %5 to i8*
  br label %56

55:                                               ; preds = %159, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  ret void

56:                                               ; preds = %41, %159
  %57 = phi i32 [ %39, %41 ], [ %179, %159 ]
  %58 = phi i32 [ 0, %41 ], [ %177, %159 ]
  %59 = phi i32 [ %46, %41 ], [ %176, %159 ]
  %60 = load %"class.WTF::Vector.2356"*, %"class.WTF::Vector.2356"** %47, align 8
  %61 = add i32 %57, %58
  %62 = call dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2356"* %60, i32 %61) #11
  %63 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %62, i64 0, i32 2
  %64 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %63, align 8
  %65 = load i96, i96* %49, align 4
  %66 = trunc i96 %65 to i32
  %67 = icmp slt i32 %66, 0
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8
  %72 = lshr i160 %71, 32
  %73 = trunc i160 %72 to i32
  %74 = and i32 %73, 30
  %75 = or i32 %74, 1
  %76 = icmp eq i32 %75, 15
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 3, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %77, align 8
  br i1 %76, label %79, label %86

79:                                               ; preds = %56
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %78, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %81, i64 0, i32 13
  %83 = bitcast [3 x i8]* %82 to i24*
  %84 = load i24, i24* %83, align 8
  %85 = icmp slt i24 %84, 0
  br label %93

86:                                               ; preds = %56
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %78, i64 0, i32 12
  %88 = load i16, i16* %87, align 4
  %89 = lshr i16 %88, 5
  %90 = and i16 %89, 2
  %91 = or i16 %90, 1
  %92 = icmp eq i16 %91, 3
  br label %93

93:                                               ; preds = %79, %86
  %94 = phi i1 [ %85, %79 ], [ %92, %86 ]
  %95 = xor i1 %67, %94
  %96 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %64, i64 0, i32 2, i32 1
  %97 = bitcast %"class.blink::LayoutSize"* %96 to i64*
  %98 = load i64, i64* %97, align 4
  %99 = lshr i64 %98, 32
  %100 = select i1 %95, i64 %98, i64 %99
  %101 = trunc i64 %100 to i32
  %102 = call i32 @_ZNK5blink8FlexItem18FlowAwareMarginEndEv(%"class.blink::FlexItem"* %62) #11
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %102) #11
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !4
  %109 = icmp sgt i32 %108, -1
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %108) #11
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %115 = call i32 @_ZNK5blink8FlexItem21FlowAwareMarginBeforeEv(%"class.blink::FlexItem"* %62) #11
  %116 = icmp slt i32 %115, 0
  %117 = select i1 %116, i32 -2147483648, i32 2147483647
  %118 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %115) #11
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  %121 = select i1 %119, i32 %117, i32 %120, !prof !4
  store i32 %114, i32* %51, align 4
  store i32 %121, i32* %52, align 4
  %122 = load i96, i96* %49, align 4
  %123 = trunc i96 %122 to i32
  %124 = icmp slt i32 %123, 0
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = lshr i160 %128, 32
  %130 = trunc i160 %129 to i32
  %131 = and i32 %130, 30
  %132 = or i32 %131, 1
  %133 = icmp eq i32 %132, 15
  %134 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 3, i32 0, i32 0
  %135 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %134, align 8
  br i1 %133, label %136, label %143

136:                                              ; preds = %93
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %135, i64 0, i32 2, i32 0, i32 0
  %138 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %138, i64 0, i32 13
  %140 = bitcast [3 x i8]* %139 to i24*
  %141 = load i24, i24* %140, align 8
  %142 = icmp slt i24 %141, 0
  br label %150

143:                                              ; preds = %93
  %144 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %135, i64 0, i32 12
  %145 = load i16, i16* %144, align 4
  %146 = lshr i16 %145, 5
  %147 = and i16 %146, 2
  %148 = or i16 %147, 1
  %149 = icmp eq i16 %148, 3
  br label %150

150:                                              ; preds = %143, %136
  %151 = phi i1 [ %142, %136 ], [ %149, %143 ]
  %152 = xor i1 %124, %151
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %64, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %8) #11
  br label %159

154:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %155 = zext i32 %114 to i64
  %156 = shl nuw i64 %155, 32
  %157 = zext i32 %121 to i64
  %158 = or i64 %156, %157
  store i64 %158, i64* %5, align 8
  call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %64, %"class.blink::LayoutPoint"* nonnull dereferenceable(8) %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  br label %159

159:                                              ; preds = %153, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %160 = call i32 @_ZNK5blink8FlexItem20FlowAwareMarginStartEv(%"class.blink::FlexItem"* %62) #11
  %161 = icmp sgt i32 %160, -1
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %114, i32 %160) #11
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !4
  %167 = load i32, i32* %31, align 4
  %168 = load i32, i32* %33, align 8
  %169 = sub i32 %167, %168
  %170 = call i32 @_ZN5blink19FlexLayoutAlgorithm39ContentDistributionSpaceBetweenChildrenENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(i32 %3, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) %7, i32 %169) #11
  %171 = icmp sgt i32 %170, -1
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %166, i32 %170) #11
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !4
  %177 = add nuw i32 %58, 1
  %178 = load i32, i32* %31, align 4
  %179 = load i32, i32* %33, align 8
  %180 = sub i32 %178, %179
  %181 = icmp ult i32 %177, %180
  br i1 %181, label %56, label %55
}

declare i32 @_ZN5blink19FlexLayoutAlgorithm22ResolvedJustifyContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare i32 @_ZN5blink19FlexLayoutAlgorithm28InitialContentPositionOffsetERKNS_13ComputedStyleENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(%"class.blink::ComputedStyle"* dereferenceable(104), i32, %"class.blink::StyleContentAlignmentData"* dereferenceable(4), i32) local_unnamed_addr #1

declare i32 @_ZNK5blink8FlexItem18FlowAwareMarginEndEv(%"class.blink::FlexItem"*) local_unnamed_addr #1

declare i32 @_ZNK5blink8FlexItem21FlowAwareMarginBeforeEv(%"class.blink::FlexItem"*) local_unnamed_addr #1

declare i32 @_ZNK5blink8FlexItem20FlowAwareMarginStartEv(%"class.blink::FlexItem"*) local_unnamed_addr #1

declare i32 @_ZN5blink19FlexLayoutAlgorithm39ContentDistributionSpaceBetweenChildrenENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(i32, %"class.blink::StyleContentAlignmentData"* dereferenceable(4), i32) local_unnamed_addr #1

declare i32 @_ZN5blink19FlexLayoutAlgorithm20ResolvedAlignContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN5blink19FlexLayoutAlgorithm14AlignFlexLinesENS_10LayoutUnitE(%"class.blink::FlexLayoutAlgorithm"*, i32) local_unnamed_addr #1

declare void @_ZN5blink19FlexLayoutAlgorithm13AlignChildrenEv(%"class.blink::FlexLayoutAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutFlexibleBox28ApplyStretchAlignmentToChildERNS_8FlexItemE(%"class.blink::LayoutFlexibleBox"* nocapture, %"class.blink::FlexItem"* dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %1, i64 0, i32 2
  %4 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink8FlexItem20MainAxisIsInlineAxisEv(%"class.blink::FlexItem"* %1) #11
  br i1 %5, label %6, label %116

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %16, i64 0, i32 3
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %16, i64 0, i32 8
  %19 = select i1 %14, %"class.blink::Length"* %17, %"class.blink::Length"* %18
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %116

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 2, i32 1, i32 1, i32 0
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 2, i32 1, i32 0, i32 0
  %26 = select i1 %14, i32* %24, i32* %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %1, i64 0, i32 13, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, %27
  tail call void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %4, i32 %29) #11
  %31 = bitcast %"class.blink::LayoutBox"* %4 to i1 (%"class.blink::LayoutObject"*)***
  %32 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, i64 23
  %34 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %7) #11
  %36 = icmp eq %"class.blink::LayoutBox"* %4, null
  %37 = xor i1 %35, true
  %38 = or i1 %36, %37
  br i1 %38, label %114, label %39

39:                                               ; preds = %23
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 1, i32 0, i32 0, i32 1, i32 1
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 8
  %43 = and i16 %42, 256
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %114, label %45

45:                                               ; preds = %39
  %46 = tail call zeroext i1 @_ZNK5blink17LayoutFlexibleBox24CanAvoidLayoutForNGChildERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %0, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %4)
  br i1 %46, label %114, label %47

47:                                               ; preds = %45
  %48 = ptrtoint %"class.blink::LayoutBox"* %4 to i64
  %49 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %49, align 8
  %51 = icmp eq %"class.blink::LayoutObject"** %50, null
  br i1 %51, label %110, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::LayoutFlexibleBox", %"class.blink::LayoutFlexibleBox"* %0, i64 0, i32 3, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = add i32 %54, -1
  %56 = zext i32 %55 to i64
  %57 = shl i64 %48, 32
  %58 = xor i64 %57, -1
  %59 = add i64 %58, %48
  %60 = lshr i64 %59, 22
  %61 = xor i64 %60, %59
  %62 = shl i64 %61, 13
  %63 = xor i64 %62, -1
  %64 = add i64 %61, %63
  %65 = lshr i64 %64, 8
  %66 = xor i64 %65, %64
  %67 = mul i64 %66, 9
  %68 = lshr i64 %67, 15
  %69 = xor i64 %68, %67
  %70 = shl i64 %69, 27
  %71 = xor i64 %70, -1
  %72 = add i64 %69, %71
  %73 = lshr i64 %72, 31
  %74 = xor i64 %73, %72
  %75 = trunc i64 %74 to i32
  %76 = and i32 %55, %75
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, i64 %77
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = icmp eq %"class.blink::LayoutObject"* %79, %7
  br i1 %80, label %110, label %81

81:                                               ; preds = %52
  %82 = xor i32 %75, -1
  %83 = lshr i32 %75, 23
  %84 = add i32 %83, %82
  %85 = shl i32 %84, 12
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 7
  %88 = xor i32 %87, %86
  %89 = shl i32 %88, 2
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 20
  %92 = xor i32 %91, %90
  %93 = or i32 %92, 1
  %94 = zext i32 %93 to i64
  br label %95

95:                                               ; preds = %100, %81
  %96 = phi %"class.blink::LayoutObject"* [ %79, %81 ], [ %106, %100 ]
  %97 = phi i64 [ %77, %81 ], [ %104, %100 ]
  %98 = phi i64 [ 0, %81 ], [ %102, %100 ]
  %99 = icmp eq %"class.blink::LayoutObject"* %96, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = icmp eq i64 %98, 0
  %102 = select i1 %101, i64 %94, i64 %98
  %103 = add i64 %102, %97
  %104 = and i64 %103, %56
  %105 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, i64 %104
  %106 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %105, align 8
  %107 = icmp eq %"class.blink::LayoutObject"* %106, %7
  br i1 %107, label %108, label %95

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, i64 %104
  br label %110

110:                                              ; preds = %95, %108, %47, %52
  %111 = phi %"class.blink::LayoutObject"** [ null, %47 ], [ %78, %52 ], [ %109, %108 ], [ null, %95 ]
  %112 = icmp ne %"class.blink::LayoutObject"** %111, null
  %113 = or i1 %30, %112
  br i1 %113, label %115, label %144

114:                                              ; preds = %39, %23, %45
  br i1 %30, label %115, label %144

115:                                              ; preds = %110, %114
  tail call void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"* %7) #11
  br label %144

116:                                              ; preds = %6, %2
  %117 = tail call zeroext i1 @_ZNK5blink8FlexItem20MainAxisIsInlineAxisEv(%"class.blink::FlexItem"* %1) #11
  br i1 %117, label %144, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0, i32 5, i32 0
  %121 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %121, i64 0, i32 0, i32 9
  %123 = bitcast [20 x i8]* %122 to i160*
  %124 = load i160, i160* %123, align 8
  %125 = and i160 %124, 15211807202738752817960438464512
  %126 = icmp eq i160 %125, 0
  %127 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %121, i64 0, i32 0, i32 5, i32 0, i32 0
  %128 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %128, i64 0, i32 8
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %128, i64 0, i32 3
  %131 = select i1 %126, %"class.blink::Length"* %129, %"class.blink::Length"* %130
  %132 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %131, i64 0, i32 2
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %144

135:                                              ; preds = %118
  %136 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 2, i32 1, i32 0, i32 0
  %137 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 2, i32 1, i32 1, i32 0
  %138 = select i1 %126, i32* %136, i32* %137
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %1, i64 0, i32 13, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, %139
  br i1 %142, label %144, label %143

143:                                              ; preds = %135
  tail call void @_ZN5blink9LayoutBox23SetOverrideLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %4, i32 %141) #11
  tail call void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"* %119) #11
  br label %144

144:                                              ; preds = %135, %110, %114, %115, %116, %118, %143
  ret void
}

declare zeroext i1 @_ZNK5blink8FlexItem20MainAxisIsInlineAxisEv(%"class.blink::FlexItem"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink17LayoutFlexibleBox7GetNameEv(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #11
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

declare void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1846* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12UpdateLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"*, %"class.WTF::Vector.2406"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox13IsFlexibleBoxEv(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17LayoutFlexibleBox24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutFlexibleBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlock"*, %"class.WTF::Vector.2407"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15WillBeDestroyedEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !4

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #11
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #11
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !4
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #11
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !69

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #11
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !4
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !69

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #11
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !4

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #11
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #11
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #11
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #11
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #11
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2406"*, i32) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2406"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !70
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1033, i64 0 }, %12 ], [ { i64 1041, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1017, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #11
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !73
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1041, i64 0 }, %12 ], [ { i64 1033, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1025, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #11
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox13StartPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox11EndPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #11
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #11
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #11
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #11
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #11
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

declare void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock21ComputeVisualOverflowEb(%"class.blink::LayoutBlock"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlock"*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.2301"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.2301"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.2301"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2357"*, %"class.blink::FlexItem"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::FlexItem"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_143StaticCrossAxisPositionForNGPositionedChildERKNS_9LayoutBoxEPS1_(%"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), %"class.blink::LayoutBox"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = tail call zeroext i1 @_ZN5blink19FlexLayoutAlgorithm16IsHorizontalFlowERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %4) #11
  br i1 %5, label %6, label %40

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %1) #11
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %10 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %10, i64 118
  %12 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::LayoutBoxModelObject"* %8) #11
  %14 = icmp sgt i32 %13, -1
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %7, i32 %13) #11
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !4
  %20 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %9, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %20, i64 119
  %22 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutBoxModelObject"* %8) #11
  %24 = icmp sgt i32 %23, -1
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %19, i32 %23) #11
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !4
  %30 = icmp sgt i32 %29, 0
  %31 = select i1 %30, i32 %29, i32 0
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %33 = bitcast %"class.blink::LayoutSize"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = lshr i64 %34, 32
  %36 = trunc i64 %35 to i32
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %36) #11
  br label %73

40:                                               ; preds = %2
  %41 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %1) #11
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %43 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %43, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 120
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %42) #11
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %41, i32 %47) #11
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !4
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %43, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, i64 121
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutBoxModelObject"* %42) #11
  %58 = icmp sgt i32 %57, -1
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %53, i32 %57) #11
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !4
  %64 = icmp sgt i32 %63, 0
  %65 = select i1 %64, i32 %63, i32 0
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %67 = bitcast %"class.blink::LayoutSize"* %66 to i64*
  %68 = load i64, i64* %67, align 4
  %69 = trunc i64 %68 to i32
  %70 = icmp sgt i32 %69, -1
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %65, i32 %69) #11
  br label %73

73:                                               ; preds = %40, %6
  %74 = phi { i32, i1 } [ %72, %40 ], [ %39, %6 ]
  %75 = phi i32 [ %71, %40 ], [ %38, %6 ]
  %76 = extractvalue { i32, i1 } %74, 1
  %77 = extractvalue { i32, i1 } %74, 0
  %78 = select i1 %76, i32 %75, i32 %77
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %80 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %81 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %80, align 8
  %82 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm17AlignmentForChildERKNS_13ComputedStyleES3_(%"class.blink::ComputedStyle"* dereferenceable(104) %79, %"class.blink::ComputedStyle"* dereferenceable(104) %81) #11
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 3, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %85, i64 0, i32 12
  %87 = load i16, i16* %86, align 4
  %88 = and i16 %87, 384
  %89 = icmp eq i16 %88, 256
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %91 = bitcast [20 x i8]* %90 to i160*
  %92 = load i160, i160* %91, align 8
  %93 = lshr i160 %92, 32
  %94 = trunc i160 %93 to i32
  %95 = and i32 %94, 30
  %96 = or i32 %95, 1
  %97 = icmp eq i32 %96, 15
  %98 = tail call i32 @_ZN5blink8FlexItem15AlignmentOffsetENS_10LayoutUnitENS_12ItemPositionES1_S1_bb(i32 %78, i32 %82, i32 0, i32 0, i1 zeroext %89, i1 zeroext %97) #11
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_142StaticMainAxisPositionForNGPositionedChildERKNS_9LayoutBoxEPS1_(%"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), %"class.blink::LayoutBox"*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = tail call zeroext i1 @_ZN5blink19FlexLayoutAlgorithm16IsHorizontalFlowERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %5) #11
  br i1 %6, label %7, label %40

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %1) #11
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %10 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 120
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %9) #11
  %15 = icmp sgt i32 %14, -1
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %14) #11
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %10, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %21, i64 121
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::LayoutBoxModelObject"* %9) #11
  %25 = icmp sgt i32 %24, -1
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %20, i32 %24) #11
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !4
  %31 = icmp sgt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %34 = bitcast %"class.blink::LayoutSize"* %33 to i64*
  %35 = load i64, i64* %34, align 4
  %36 = trunc i64 %35 to i32
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %36) #11
  br label %74

40:                                               ; preds = %2
  %41 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %1) #11
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %43 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %43, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 118
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %42) #11
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %41, i32 %47) #11
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !4
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %43, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, i64 119
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutBoxModelObject"* %42) #11
  %58 = icmp sgt i32 %57, -1
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %53, i32 %57) #11
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !4
  %64 = icmp sgt i32 %63, 0
  %65 = select i1 %64, i32 %63, i32 0
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %67 = bitcast %"class.blink::LayoutSize"* %66 to i64*
  %68 = load i64, i64* %67, align 4
  %69 = lshr i64 %68, 32
  %70 = trunc i64 %69 to i32
  %71 = icmp sgt i32 %70, -1
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %65, i32 %70) #11
  br label %74

74:                                               ; preds = %40, %7
  %75 = phi { i32, i1 } [ %73, %40 ], [ %39, %7 ]
  %76 = phi i32 [ %72, %40 ], [ %38, %7 ]
  %77 = extractvalue { i32, i1 } %75, 1
  %78 = extractvalue { i32, i1 } %75, 0
  %79 = select i1 %77, i32 %76, i32 %78
  %80 = bitcast i32* %3 to %"class.blink::StyleContentAlignmentData"*
  %81 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %82 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #11
  %83 = tail call i32 @_ZN5blink19FlexLayoutAlgorithm22ResolvedJustifyContentERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %81) #11
  store i32 %83, i32* %3, align 4
  %84 = call i32 @_ZN5blink19FlexLayoutAlgorithm28InitialContentPositionOffsetERKNS_13ComputedStyleENS_10LayoutUnitERKNS_25StyleContentAlignmentDataEj(%"class.blink::ComputedStyle"* dereferenceable(104) %81, i32 %79, %"class.blink::StyleContentAlignmentData"* nonnull dereferenceable(4) %80, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #11
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = lshr i160 %88, 32
  %90 = trunc i160 %89 to i32
  %91 = and i32 %90, 30
  %92 = or i32 %91, 1
  %93 = icmp eq i32 %92, 15
  br i1 %93, label %94, label %97

94:                                               ; preds = %74
  %95 = and i160 %88, 324518553658426726783156020576256
  %96 = icmp eq i160 %95, 0
  br i1 %96, label %110, label %103

97:                                               ; preds = %74
  %98 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %99, i64 0, i32 12
  %101 = load i16, i16* %100, align 4
  %102 = and i16 %101, 96
  switch i16 %102, label %110 [
    i16 32, label %103
    i16 96, label %103
  ]

103:                                              ; preds = %97, %97, %94
  %104 = icmp sgt i32 %84, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %79, i32 %84) #11
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !4
  br label %110

110:                                              ; preds = %94, %97, %103
  %111 = phi i32 [ %109, %103 ], [ %84, %94 ], [ %84, %97 ]
  ret i32 %111
}

declare zeroext i1 @_ZN5blink19FlexLayoutAlgorithm16IsHorizontalFlowERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare i32 @_ZN5blink8FlexItem15AlignmentOffsetENS_10LayoutUnitENS_12ItemPositionES1_S1_bb(i32, i32, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(144) %"class.blink::FlexItem"* @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2356"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %24, i64 %25
  ret %"class.blink::FlexItem"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2296"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.2293"*, %"struct.WTF::KeyValuePair.2296"*, i32, %"struct.WTF::KeyValuePair.2296"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2293", align 8
  %6 = bitcast %"class.WTF::HashTable.2293"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2293"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2296"* %1, %"struct.WTF::KeyValuePair.2296"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2296"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2293"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2293"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2296"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.2293"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2293"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2296"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.2296"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.2296"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.2296"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.2296"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.2296"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2293"* nonnull %5, %"class.blink::LayoutObject"** dereferenceable(8) %53) #11
  %55 = extractvalue { %"struct.WTF::KeyValuePair.2296"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.2296"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.2296"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #11
  %58 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.2296"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.2296"* %55, %"struct.WTF::KeyValuePair.2296"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.2296"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.2296"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.2296"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2296"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2293"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2296"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutObject"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2296"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2296"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2296"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2296"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2296"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutObject"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutObject"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutObject"* %63, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2296"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2296"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2296"*, i8 } undef, %"struct.WTF::KeyValuePair.2296"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2296"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2296"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2293"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2296"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutObject"*
  %38 = icmp eq %"class.blink::LayoutObject"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutObject"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.2296"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.2296"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.2296"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.2296"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } undef, %"struct.WTF::KeyValuePair.2296"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } %79, %"struct.WTF::KeyValuePair.2296"* %78, 1
  ret { %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.blink::FlexLine"* @_ZN3WTF6VectorIN5blink8FlexLineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2366"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2366", %"class.WTF::Vector.2366"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.2366", %"class.WTF::Vector.2366"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FlexLine"*, %"class.blink::FlexLine"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FlexLine", %"class.blink::FlexLine"* %24, i64 %25
  ret %"class.blink::FlexLine"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2296"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPKNS1_9LayoutBoxERS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.2293"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2296"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2296"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2293"* %0, %"struct.WTF::KeyValuePair.2296"* null)
  %9 = load %"struct.WTF::KeyValuePair.2296"*, %"struct.WTF::KeyValuePair.2296"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2296"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutObject"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  br i1 %42, label %88, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutObject"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2296"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2296"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutObject"* %59, %43
  br i1 %64, label %106, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutObject"* %59, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2296"* %60, %"struct.WTF::KeyValuePair.2296"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2296"* %67, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %67, i64 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %79, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %67, i64 0, i32 1, i32 0
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load i64, i64* %16, align 8
  br label %88

88:                                               ; preds = %10, %76, %78
  %89 = phi i64 [ %87, %78 ], [ %17, %76 ], [ %17, %10 ]
  %90 = phi %"struct.WTF::KeyValuePair.2296"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %91 = bitcast %"struct.WTF::KeyValuePair.2296"* %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %90, i64 0, i32 1, i32 0
  %94 = load i32, i32* %92, align 4
  store i32 %94, i32* %93, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %97
  %101 = shl i32 %100, 1
  %102 = load i32, i32* %12, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %88
  %105 = tail call %"struct.WTF::KeyValuePair.2296"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2293"* %0, %"struct.WTF::KeyValuePair.2296"* %90)
  br label %106

106:                                              ; preds = %58, %88, %104
  %107 = phi i8 [ 1, %88 ], [ 1, %104 ], [ 0, %58 ]
  %108 = phi %"struct.WTF::KeyValuePair.2296"* [ %90, %88 ], [ %105, %104 ], [ %60, %58 ]
  %109 = insertvalue { %"struct.WTF::KeyValuePair.2296"*, i8 } undef, %"struct.WTF::KeyValuePair.2296"* %108, 0
  %110 = insertvalue { %"struct.WTF::KeyValuePair.2296"*, i8 } %109, i8 %107, 1
  ret { %"struct.WTF::KeyValuePair.2296"*, i8 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2296"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2293"*, %"struct.WTF::KeyValuePair.2296"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2293", %"class.WTF::HashTable.2293"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENS2_10LayoutUnitEEEEEPKcv, i64 0, i64 0)) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2296"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %36, i64 %44, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %36, i64 %44, i32 1, i32 0
  store i32 0, i32* %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %36, i64 %48, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %36, i64 %48, i32 1, i32 0
  store i32 0, i32* %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %36, i64 %55, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2296", %"struct.WTF::KeyValuePair.2296"* %36, i64 %55, i32 1, i32 0
  store i32 0, i32* %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair.2296"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_10LayoutUnitEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.2293"* %0, %"struct.WTF::KeyValuePair.2296"* %36, i32 %32, %"struct.WTF::KeyValuePair.2296"* %1) #11
  ret %"struct.WTF::KeyValuePair.2296"* %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutObject"**, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPKNS1_9LayoutBoxESH_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2298"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2298"* %0, %"class.blink::LayoutObject"** null)
  %9 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::LayoutObject"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, i64 %38
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::LayoutObject"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::LayoutObject"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::LayoutObject"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::LayoutObject"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::LayoutObject"* %58, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %66 = select i1 %65, %"class.blink::LayoutObject"** %59, %"class.blink::LayoutObject"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, i64 %70
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::LayoutObject"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::LayoutObject"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::LayoutObject"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::LayoutObject"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::LayoutObject"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::LayoutBox"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2298"* %0, %"class.blink::LayoutObject"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::LayoutObject"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::LayoutObject"**, i8 } undef, %"class.blink::LayoutObject"** %105, 0
  %107 = insertvalue { %"class.blink::LayoutObject"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::LayoutObject"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2298"*, %"class.blink::LayoutObject"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink12LayoutObjectEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"class.blink::LayoutObject"**
  %37 = call %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2298"* %0, %"class.blink::LayoutObject"** %36, i32 %32, %"class.blink::LayoutObject"** %1) #11
  ret %"class.blink::LayoutObject"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2298"*, %"class.blink::LayoutObject"**, i32, %"class.blink::LayoutObject"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::LayoutObject"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2298"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %9, align 8
  %17 = ptrtoint %"class.blink::LayoutObject"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.2298"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::LayoutObject"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #11
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::LayoutObject"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::LayoutObject"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::LayoutObject"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, i64 %37
  %39 = bitcast %"class.blink::LayoutObject"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1, i64 %62
  %64 = ptrtoint %"class.blink::LayoutObject"** %63 to i64
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::LayoutObject"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::LayoutObject"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::LayoutObject"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::LayoutObject"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::LayoutObject"** %87, null
  %89 = ptrtoint %"class.blink::LayoutObject"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::LayoutObject"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::LayoutObject"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::LayoutObject"* %93, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1, i64 %104
  %106 = ptrtoint %"class.blink::LayoutObject"** %105 to i64
  %107 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %105, align 8
  %108 = icmp eq %"class.blink::LayoutObject"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::LayoutObject"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %113, i64 %37
  %115 = icmp eq %"class.blink::LayoutObject"** %114, %3
  %116 = select i1 %115, %"class.blink::LayoutObject"** %111, %"class.blink::LayoutObject"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::LayoutObject"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::LayoutObject"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::LayoutObject"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2356"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %31, align 8
  %33 = icmp eq %"class.blink::FlexItem"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FlexItemEEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FlexItemEEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2356"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 144
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2356"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2356"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2356"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %41

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %5, align 8
  %7 = icmp eq %"class.blink::FlexItem"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::FlexItem"*
  %10 = icmp eq %"class.blink::FlexItem"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2356"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %83

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.2356"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %16, %26
  %27 = phi %"class.blink::FlexItem"* [ %38, %26 ], [ %6, %16 ]
  %28 = phi %"class.blink::FlexItem"* [ %37, %26 ], [ %9, %16 ]
  %29 = bitcast %"class.blink::FlexItem"* %28 to i8*
  %30 = bitcast %"class.blink::FlexItem"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 129, i1 false) #11
  %31 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %28, i64 0, i32 20
  %32 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %27, i64 0, i32 20
  %33 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %32, i64 0, i32 0
  %34 = bitcast %class.scoped_refptr.1631* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %class.scoped_refptr.1631* %31 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %33, align 8
  %37 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %28, i64 1
  %38 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %27, i64 1
  %39 = icmp eq %"class.blink::FlexItem"* %38, %20
  br i1 %39, label %40, label %26

40:                                               ; preds = %26, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2357"* %21, %"class.blink::FlexItem"* %6) #11
  br label %83

41:                                               ; preds = %2
  %42 = zext i32 %1 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FlexItemEEEmm(i64 %42) #11
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8FlexItemEEEPKcv, i64 0, i64 0)) #11
  %45 = udiv i64 %43, 144
  %46 = ptrtoint i8* %44 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %48, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %72, label %54

54:                                               ; preds = %41
  %55 = bitcast i8* %44 to %"class.blink::FlexItem"*
  br label %56

56:                                               ; preds = %54, %56
  %57 = phi %"class.blink::FlexItem"* [ %68, %56 ], [ %48, %54 ]
  %58 = phi %"class.blink::FlexItem"* [ %67, %56 ], [ %55, %54 ]
  %59 = bitcast %"class.blink::FlexItem"* %58 to i8*
  %60 = bitcast %"class.blink::FlexItem"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 129, i1 false) #11
  %61 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %58, i64 0, i32 20
  %62 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %57, i64 0, i32 20
  %63 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %62, i64 0, i32 0
  %64 = bitcast %class.scoped_refptr.1631* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %class.scoped_refptr.1631* %61 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %63, align 8
  %67 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %58, i64 1
  %68 = getelementptr inbounds %"class.blink::FlexItem", %"class.blink::FlexItem"* %57, i64 1
  %69 = icmp eq %"class.blink::FlexItem"* %68, %52
  br i1 %69, label %70, label %56

70:                                               ; preds = %56
  %71 = load %"class.blink::FlexItem"*, %"class.blink::FlexItem"** %47, align 8
  br label %72

72:                                               ; preds = %70, %41
  %73 = phi %"class.blink::FlexItem"* [ %71, %70 ], [ %48, %41 ]
  %74 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 1, i64 0
  %75 = bitcast i8* %74 to %"class.blink::FlexItem"*
  %76 = icmp eq %"class.blink::FlexItem"* %73, %75
  br i1 %76, label %79, label %77, !prof !2

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink8FlexItemELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2357"* %78, %"class.blink::FlexItem"* %73) #11
  br label %79

79:                                               ; preds = %72, %77
  %80 = bitcast %"class.WTF::Vector.2356"* %0 to i64*
  store atomic i64 %46, i64* %80 monotonic, align 8
  %81 = trunc i64 %45 to i32
  %82 = getelementptr inbounds %"class.WTF::Vector.2356", %"class.WTF::Vector.2356"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %81, i32* %82, align 8
  br label %83

83:                                               ; preds = %40, %79, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8FlexItemEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 14898517
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 14898517) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 144
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN5blink8FlexItemC1EPKNS_19FlexLayoutAlgorithmEPNS_9LayoutBoxERKNS_13ComputedStyleENS_10LayoutUnitENS_11MinMaxSizesEN4absl8optionalISA_EES9_S9_NS_18NGPhysicalBoxStrutENS_10NGBoxStrutEb(%"class.blink::FlexItem"*, %"class.blink::FlexLayoutAlgorithm"*, %"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32, i64, %"class.absl::optional.2359"* byval(%"class.absl::optional.2359") align 8, i32, i32, %"struct.blink::NGPhysicalBoxStrut"* byval(%"struct.blink::NGPhysicalBoxStrut") align 8, %"struct.blink::NGBoxStrut"* byval(%"struct.blink::NGBoxStrut") align 8, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutObject"**, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_9LayoutBoxERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2298"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2298"* %0, %"class.blink::LayoutObject"** null)
  %9 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::LayoutObject"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, i64 %38
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::LayoutObject"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::LayoutObject"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::LayoutObject"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::LayoutObject"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::LayoutObject"* %58, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %66 = select i1 %65, %"class.blink::LayoutObject"** %59, %"class.blink::LayoutObject"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, i64 %70
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::LayoutObject"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::LayoutObject"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::LayoutObject"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::LayoutObject"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::LayoutObject"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::LayoutBox"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.2298", %"class.WTF::HashTable.2298"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2298"* %0, %"class.blink::LayoutObject"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::LayoutObject"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::LayoutObject"**, i8 } undef, %"class.blink::LayoutObject"** %105, 0
  %107 = insertvalue { %"class.blink::LayoutObject"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::LayoutObject"**, i8 } %107
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!37 = distinct !{!37, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!43 = distinct !{!43, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!44 = !{!"branch_weights", i32 1, i32 4001}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!47 = distinct !{!47, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!50 = distinct !{!50, !"_ZN5blink6Length7PercentIiEES0_T_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN5blink6Length10MinContentEv: argument 0"}
!53 = distinct !{!53, !"_ZN5blink6Length10MinContentEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!56 = distinct !{!56, !"_ZN5blink6Length7PercentIiEES0_T_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!59 = distinct !{!59, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!62 = distinct !{!62, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!65 = distinct !{!65, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!68 = distinct !{!68, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!69 = !{!"branch_weights", i32 4001, i32 4000000}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!72 = distinct !{!72, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!75 = distinct !{!75, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
