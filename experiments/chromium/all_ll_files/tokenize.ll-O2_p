; ModuleID = '../../third_party/liburlpattern/tokenize.cc'
source_filename = "../../third_party/liburlpattern/tokenize.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.liburlpattern::Token" = type { i32, i64, %"class.absl::string_view" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::StatusOr" = type { %"class.absl::internal_statusor::StatusOrData" }
%"class.absl::internal_statusor::StatusOrData" = type { %union.anon, %union.anon.0 }
%union.anon = type { %"class.absl::Status" }
%"class.absl::Status" = type { i64 }
%union.anon.0 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.liburlpattern::Token"* }
%"class.absl::str_format_internal::FormatArgImpl" = type { %"union.absl::str_format_internal::FormatArgImpl::Data", i1 (i8*, i64, i32, i8*)* }
%"union.absl::str_format_internal::FormatArgImpl::Data" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.liburlpattern::(anonymous namespace)::Tokenizer" = type <{ %"class.absl::string_view", i32, [4 x i8], %"class.std::__1::vector", %"class.absl::Status", i64, i64, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"OPEN\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"CLOSE\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"REGEX\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"CHAR\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"ESCAPED_CHAR\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"OTHER_MODIFIER\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"ASTERISK\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"END\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"INVALID_CHAR\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"{ type:\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c", index:\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c", value:\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"Trailing escape character at %d.\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"Missing parameter name at %d.\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"Invalid character 0x%02x at %d.\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"Regex cannot start with '?' at %d\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"Unbalanced regex at %d.\00", align 1
@.str.20 = private unnamed_addr constant [48 x i8] c"Unnamed capturing groups are not allowed at %d.\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"Missing regex at %d.\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"absl::string_view::substr\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN13liburlpattern17TokenTypeToStringENS_9TokenTypeE = private unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN13liburlpattern17TokenTypeToStringENS_9TokenTypeE(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table._ZN13liburlpattern17TokenTypeToStringENS_9TokenTypeE, i64 0, i64 %2
  %4 = load i8*, i8** %3, align 8
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN13liburlpatternlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_5TokenE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"struct.liburlpattern::Token"* nocapture readonly byval(%"struct.liburlpattern::Token") align 8) local_unnamed_addr #1 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #11
  %4 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %3, i32 %5) #11
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i64 8) #11
  %8 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %7, i64 %9) #11
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i64 8) #11
  %12 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1, i64 0, i32 2, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1, i64 0, i32 2, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4absllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_11string_viewE(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* %13, i64 %15) #11
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4absllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_11string_viewE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13liburlpattern8TokenizeEN4absl11string_viewENS_14TokenizePolicyE(%"class.absl::StatusOr"* noalias nocapture sret, i8*, i64, i32) local_unnamed_addr #1 {
  %5 = alloca %"class.absl::Status", align 8
  %6 = alloca %"class.absl::Status", align 8
  %7 = alloca %"class.absl::Status", align 8
  %8 = alloca %"class.absl::Status", align 8
  %9 = alloca %"class.absl::Status", align 8
  %10 = alloca %"class.absl::Status", align 8
  %11 = alloca %"class.absl::Status", align 8
  %12 = alloca %"class.absl::Status", align 8
  %13 = alloca [2 x %"class.absl::str_format_internal::FormatArgImpl"], align 8
  %14 = alloca %"class.absl::Status", align 8
  %15 = alloca %"class.absl::Status", align 8
  %16 = alloca [1 x %"class.absl::str_format_internal::FormatArgImpl"], align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.liburlpattern::(anonymous namespace)::Tokenizer", align 8
  %28 = bitcast %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 80, i1 false)
  %29 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 0, i32 0
  store i8* %1, i8** %29, align 8
  %30 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 0, i32 1
  store i64 %2, i64* %30, align 8
  %31 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 1
  store i32 %3, i32* %31, align 8
  %32 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 3
  %33 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 7
  %34 = bitcast %"class.std::__1::vector"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 48, i1 false) #11
  store i32 -1, i32* %33, align 8
  %35 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.liburlpattern::Token"** %35 to i64*
  %37 = bitcast %"class.std::__1::vector"* %32 to i64*
  %38 = icmp eq i64 %2, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 5
  %41 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 4, i32 0
  br label %2038

42:                                               ; preds = %4
  %43 = icmp ugt i64 %2, 576460752303423487
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #12
  unreachable

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 3, i32 0, i32 1
  %47 = bitcast %"struct.liburlpattern::Token"** %46 to i64*
  %48 = shl i64 %2, 5
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"struct.liburlpattern::Token"*
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %50, i64 %2
  %53 = ptrtoint %"struct.liburlpattern::Token"* %52 to i64
  store i64 %51, i64* %37, align 8
  store i64 %51, i64* %47, align 8
  store i64 %53, i64* %36, align 8
  %54 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 5
  %55 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 4, i32 0
  %56 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 6
  %57 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %58 = bitcast [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %13 to i8*
  %59 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %13, i64 0, i64 0
  %60 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %13, i64 0, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %13, i64 0, i64 0, i32 1
  %62 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %13, i64 0, i64 1
  %63 = bitcast %"class.absl::str_format_internal::FormatArgImpl"* %62 to i64*
  %64 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %13, i64 0, i64 1, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = ptrtoint %"class.std::__1::basic_string"* %19 to i64
  %68 = bitcast %"class.std::__1::basic_string"* %19 to i64*
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast %"class.absl::Status"* %12 to i8*
  %71 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %12, i64 0, i32 0
  %72 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 3, i32 0, i32 1
  %73 = bitcast %"struct.liburlpattern::Token"** %72 to i64*
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %76 = bitcast [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %16 to i8*
  %77 = getelementptr inbounds [1 x %"class.absl::str_format_internal::FormatArgImpl"], [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %16, i64 0, i64 0
  %78 = bitcast [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %16 to i64*
  %79 = getelementptr inbounds [1 x %"class.absl::str_format_internal::FormatArgImpl"], [1 x %"class.absl::str_format_internal::FormatArgImpl"]* %16, i64 0, i64 0, i32 1
  %80 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %83 = bitcast %"class.std::__1::basic_string"* %24 to i64*
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast %"class.absl::Status"* %7 to i8*
  %86 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %7, i64 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %89 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = ptrtoint %"class.std::__1::basic_string"* %23 to i64
  %92 = bitcast %"class.std::__1::basic_string"* %23 to i64*
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.absl::Status"* %8 to i8*
  %95 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %8, i64 0, i32 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %98 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = ptrtoint %"class.std::__1::basic_string"* %22 to i64
  %101 = bitcast %"class.std::__1::basic_string"* %22 to i64*
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = bitcast %"class.absl::Status"* %9 to i8*
  %104 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %9, i64 0, i32 0
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %107 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = ptrtoint %"class.std::__1::basic_string"* %21 to i64
  %110 = bitcast %"class.std::__1::basic_string"* %21 to i64*
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = bitcast %"class.absl::Status"* %10 to i8*
  %113 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %10, i64 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %116 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = ptrtoint %"class.std::__1::basic_string"* %25 to i64
  %119 = bitcast %"class.std::__1::basic_string"* %25 to i64*
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast %"class.absl::Status"* %6 to i8*
  %122 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %6, i64 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %125 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %128 = bitcast %"class.std::__1::basic_string"* %26 to i64*
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast %"class.absl::Status"* %5 to i8*
  %131 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %5, i64 0, i32 0
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %134 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = ptrtoint %"class.std::__1::basic_string"* %20 to i64
  %137 = bitcast %"class.std::__1::basic_string"* %20 to i64*
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = bitcast %"class.absl::Status"* %11 to i8*
  %140 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %11, i64 0, i32 0
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %143 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = ptrtoint %"class.std::__1::basic_string"* %18 to i64
  %146 = bitcast %"class.std::__1::basic_string"* %18 to i64*
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = bitcast %"class.absl::Status"* %14 to i8*
  %149 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %14, i64 0, i32 0
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %152 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  %155 = bitcast %"class.std::__1::basic_string"* %17 to i64*
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = bitcast %"class.absl::Status"* %15 to i8*
  %158 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %15, i64 0, i32 0
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %163

160:                                              ; preds = %244
  br i1 %249, label %163, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds %"class.absl::StatusOr", %"class.absl::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %248, i64* %162, align 8, !alias.scope !2
  store i64 54, i64* %55, align 8, !noalias !2
  br label %2124

163:                                              ; preds = %45, %160
  %164 = phi i64 [ 0, %45 ], [ %245, %160 ]
  store i64 %164, i64* %56, align 8, !noalias !2
  call fastcc void @_ZN13liburlpattern12_GLOBAL__N_19Tokenizer4NextEv(%"class.liburlpattern::(anonymous namespace)::Tokenizer"* nonnull %27) #11, !noalias !2
  %165 = load i32, i32* %33, align 8, !noalias !2
  switch i32 %165, label %1954 [
    i32 42, label %166
    i32 43, label %250
    i32 63, label %250
    i32 92, label %328
    i32 123, label %528
    i32 125, label %606
    i32 58, label %684
    i32 40, label %900
  ]

166:                                              ; preds = %163
  %167 = load i64, i64* %56, align 8, !noalias !2
  %168 = load i64, i64* %54, align 8, !noalias !2
  %169 = sub i64 %167, %168
  %170 = load i64, i64* %30, align 8, !noalias !2
  %171 = icmp ult i64 %170, %168
  br i1 %171, label %172, label %173, !prof !5

172:                                              ; preds = %166
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = icmp ugt i64 %174, %169
  %176 = select i1 %175, i64 %169, i64 %174
  %177 = icmp sgt i64 %176, -1
  br i1 %177, label %179, label %178, !prof !6

178:                                              ; preds = %173
  call void @llvm.trap() #11, !noalias !2
  unreachable

179:                                              ; preds = %173
  %180 = load i8*, i8** %29, align 8, !noalias !2
  %181 = getelementptr inbounds i8, i8* %180, i64 %168
  %182 = ptrtoint i8* %181 to i64
  %183 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %184 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %185 = icmp ult %"struct.liburlpattern::Token"* %183, %184
  %186 = ptrtoint %"struct.liburlpattern::Token"* %184 to i64
  br i1 %185, label %187, label %195

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %183, i64 0, i32 0
  store i32 7, i32* %188, align 8, !noalias !2
  %189 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %183, i64 0, i32 1
  store i64 %168, i64* %189, align 8, !noalias !2
  %190 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %183, i64 0, i32 2, i32 0
  %191 = bitcast i8** %190 to i64*
  store i64 %182, i64* %191, align 8, !noalias !2
  %192 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %183, i64 0, i32 2, i32 1
  store i64 %176, i64* %192, align 8, !noalias !2
  %193 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %183, i64 1
  %194 = ptrtoint %"struct.liburlpattern::Token"* %193 to i64
  store i64 %194, i64* %73, align 8, !noalias !2
  br label %243

195:                                              ; preds = %179
  %196 = ptrtoint %"struct.liburlpattern::Token"* %183 to i64
  %197 = load i64, i64* %37, align 8, !noalias !2
  %198 = sub i64 %196, %197
  %199 = ashr exact i64 %198, 5
  %200 = add nsw i64 %199, 1
  %201 = icmp ugt i64 %200, 576460752303423487
  br i1 %201, label %202, label %204

202:                                              ; preds = %195
  %203 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %203) #12, !noalias !2
  unreachable

204:                                              ; preds = %195
  %205 = sub i64 %186, %197
  %206 = ashr exact i64 %205, 5
  %207 = icmp ult i64 %206, 288230376151711743
  br i1 %207, label %208, label %216

208:                                              ; preds = %204
  %209 = ashr exact i64 %205, 4
  %210 = icmp ult i64 %209, %200
  %211 = select i1 %210, i64 %200, i64 %209
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %221, label %213

213:                                              ; preds = %208
  %214 = icmp ugt i64 %211, 576460752303423487
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  call void @abort() #12, !noalias !2
  unreachable

216:                                              ; preds = %213, %204
  %217 = phi i64 [ %211, %213 ], [ 576460752303423487, %204 ]
  %218 = shl i64 %217, 5
  %219 = call i8* @_Znwm(i64 %218) #13, !noalias !2
  %220 = bitcast i8* %219 to %"struct.liburlpattern::Token"*
  br label %221

221:                                              ; preds = %216, %208
  %222 = phi i64 [ %217, %216 ], [ 0, %208 ]
  %223 = phi i8* [ %219, %216 ], [ null, %208 ]
  %224 = phi %"struct.liburlpattern::Token"* [ %220, %216 ], [ null, %208 ]
  %225 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %224, i64 %199
  %226 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %224, i64 %222
  %227 = ptrtoint %"struct.liburlpattern::Token"* %226 to i64
  %228 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %225, i64 0, i32 0
  store i32 7, i32* %228, align 8, !noalias !2
  %229 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %224, i64 %199, i32 1
  store i64 %168, i64* %229, align 8, !noalias !2
  %230 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %224, i64 %199, i32 2, i32 0
  %231 = bitcast i8** %230 to i64*
  store i64 %182, i64* %231, align 8, !noalias !2
  %232 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %224, i64 %199, i32 2, i32 1
  store i64 %176, i64* %232, align 8, !noalias !2
  %233 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %225, i64 1
  %234 = ptrtoint %"struct.liburlpattern::Token"* %233 to i64
  %235 = ptrtoint %"struct.liburlpattern::Token"* %224 to i64
  %236 = icmp sgt i64 %198, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %221
  %238 = inttoptr i64 %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %238, i64 %198, i1 false) #11, !noalias !2
  br label %239

239:                                              ; preds = %237, %221
  store i64 %235, i64* %37, align 8, !noalias !2
  store i64 %234, i64* %73, align 8, !noalias !2
  store i64 %227, i64* %36, align 8, !noalias !2
  %240 = icmp eq i64 %197, 0
  br i1 %240, label %243, label %241

241:                                              ; preds = %239
  %242 = inttoptr i64 %197 to i8*
  call void @_ZdlPv(i8* %242) #13, !noalias !2
  br label %243

243:                                              ; preds = %241, %239, %187
  store i64 %167, i64* %54, align 8, !noalias !2
  br label %244

244:                                              ; preds = %2031, %1953, %1876, %1756, %1632, %1513, %1385, %1264, %1145, %1027, %899, %821, %683, %605, %527, %447, %327, %243
  %245 = load i64, i64* %54, align 8, !noalias !2
  %246 = load i64, i64* %30, align 8, !noalias !2
  %247 = icmp ult i64 %245, %246
  %248 = load i64, i64* %55, align 8, !noalias !2
  %249 = icmp eq i64 %248, 0
  br i1 %247, label %160, label %2032

250:                                              ; preds = %163, %163
  %251 = load i64, i64* %56, align 8, !noalias !2
  %252 = load i64, i64* %54, align 8, !noalias !2
  %253 = sub i64 %251, %252
  %254 = load i64, i64* %30, align 8, !noalias !2
  %255 = icmp ult i64 %254, %252
  br i1 %255, label %256, label %257, !prof !5

256:                                              ; preds = %250
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

257:                                              ; preds = %250
  %258 = sub i64 %254, %252
  %259 = icmp ugt i64 %258, %253
  %260 = select i1 %259, i64 %253, i64 %258
  %261 = icmp sgt i64 %260, -1
  br i1 %261, label %263, label %262, !prof !6

262:                                              ; preds = %257
  call void @llvm.trap() #11, !noalias !2
  unreachable

263:                                              ; preds = %257
  %264 = load i8*, i8** %29, align 8, !noalias !2
  %265 = getelementptr inbounds i8, i8* %264, i64 %252
  %266 = ptrtoint i8* %265 to i64
  %267 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %268 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %269 = icmp ult %"struct.liburlpattern::Token"* %267, %268
  %270 = ptrtoint %"struct.liburlpattern::Token"* %268 to i64
  br i1 %269, label %271, label %279

271:                                              ; preds = %263
  %272 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %267, i64 0, i32 0
  store i32 6, i32* %272, align 8, !noalias !2
  %273 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %267, i64 0, i32 1
  store i64 %252, i64* %273, align 8, !noalias !2
  %274 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %267, i64 0, i32 2, i32 0
  %275 = bitcast i8** %274 to i64*
  store i64 %266, i64* %275, align 8, !noalias !2
  %276 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %267, i64 0, i32 2, i32 1
  store i64 %260, i64* %276, align 8, !noalias !2
  %277 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %267, i64 1
  %278 = ptrtoint %"struct.liburlpattern::Token"* %277 to i64
  store i64 %278, i64* %73, align 8, !noalias !2
  br label %327

279:                                              ; preds = %263
  %280 = ptrtoint %"struct.liburlpattern::Token"* %267 to i64
  %281 = load i64, i64* %37, align 8, !noalias !2
  %282 = sub i64 %280, %281
  %283 = ashr exact i64 %282, 5
  %284 = add nsw i64 %283, 1
  %285 = icmp ugt i64 %284, 576460752303423487
  br i1 %285, label %286, label %288

286:                                              ; preds = %279
  %287 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %287) #12, !noalias !2
  unreachable

288:                                              ; preds = %279
  %289 = sub i64 %270, %281
  %290 = ashr exact i64 %289, 5
  %291 = icmp ult i64 %290, 288230376151711743
  br i1 %291, label %292, label %300

292:                                              ; preds = %288
  %293 = ashr exact i64 %289, 4
  %294 = icmp ult i64 %293, %284
  %295 = select i1 %294, i64 %284, i64 %293
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %305, label %297

297:                                              ; preds = %292
  %298 = icmp ugt i64 %295, 576460752303423487
  br i1 %298, label %299, label %300

299:                                              ; preds = %297
  call void @abort() #12, !noalias !2
  unreachable

300:                                              ; preds = %297, %288
  %301 = phi i64 [ %295, %297 ], [ 576460752303423487, %288 ]
  %302 = shl i64 %301, 5
  %303 = call i8* @_Znwm(i64 %302) #13, !noalias !2
  %304 = bitcast i8* %303 to %"struct.liburlpattern::Token"*
  br label %305

305:                                              ; preds = %300, %292
  %306 = phi i64 [ %301, %300 ], [ 0, %292 ]
  %307 = phi i8* [ %303, %300 ], [ null, %292 ]
  %308 = phi %"struct.liburlpattern::Token"* [ %304, %300 ], [ null, %292 ]
  %309 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %308, i64 %283
  %310 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %308, i64 %306
  %311 = ptrtoint %"struct.liburlpattern::Token"* %310 to i64
  %312 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %309, i64 0, i32 0
  store i32 6, i32* %312, align 8, !noalias !2
  %313 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %308, i64 %283, i32 1
  store i64 %252, i64* %313, align 8, !noalias !2
  %314 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %308, i64 %283, i32 2, i32 0
  %315 = bitcast i8** %314 to i64*
  store i64 %266, i64* %315, align 8, !noalias !2
  %316 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %308, i64 %283, i32 2, i32 1
  store i64 %260, i64* %316, align 8, !noalias !2
  %317 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %309, i64 1
  %318 = ptrtoint %"struct.liburlpattern::Token"* %317 to i64
  %319 = ptrtoint %"struct.liburlpattern::Token"* %308 to i64
  %320 = icmp sgt i64 %282, 0
  br i1 %320, label %321, label %323

321:                                              ; preds = %305
  %322 = inttoptr i64 %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %307, i8* align 8 %322, i64 %282, i1 false) #11, !noalias !2
  br label %323

323:                                              ; preds = %321, %305
  store i64 %319, i64* %37, align 8, !noalias !2
  store i64 %318, i64* %73, align 8, !noalias !2
  store i64 %311, i64* %36, align 8, !noalias !2
  %324 = icmp eq i64 %281, 0
  br i1 %324, label %327, label %325

325:                                              ; preds = %323
  %326 = inttoptr i64 %281 to i8*
  call void @_ZdlPv(i8* %326) #13, !noalias !2
  br label %327

327:                                              ; preds = %325, %323, %271
  store i64 %251, i64* %54, align 8, !noalias !2
  br label %244

328:                                              ; preds = %163
  %329 = load i64, i64* %54, align 8, !noalias !2
  %330 = load i64, i64* %30, align 8, !noalias !2
  %331 = add i64 %330, -1
  %332 = icmp eq i64 %329, %331
  br i1 %332, label %333, label %448

333:                                              ; preds = %328
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11, !noalias !7
  store i64 %329, i64* %78, align 8, !noalias !7
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %79, align 8, !noalias !7
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %17, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i64 32, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %77, i64 1) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11, !noalias !7
  %334 = load i8, i8* %153, align 1, !noalias !2
  %335 = icmp slt i8 %334, 0
  br i1 %335, label %338, label %336

336:                                              ; preds = %333
  %337 = zext i8 %334 to i64
  br label %343

338:                                              ; preds = %333
  %339 = load i64, i64* %155, align 8, !noalias !2
  %340 = load i64, i64* %156, align 8, !noalias !2
  %341 = icmp sgt i64 %340, -1
  br i1 %341, label %343, label %342, !prof !6

342:                                              ; preds = %338
  call void @llvm.trap() #11, !noalias !2
  unreachable

343:                                              ; preds = %338, %336
  %344 = phi i64 [ %339, %338 ], [ %154, %336 ]
  %345 = phi i64 [ %340, %338 ], [ %337, %336 ]
  %346 = load i64, i64* %56, align 8, !noalias !2
  %347 = load i64, i64* %54, align 8, !noalias !2
  %348 = load i32, i32* %31, align 8, !noalias !2
  %349 = icmp eq i32 %348, 1
  br i1 %349, label %350, label %426

350:                                              ; preds = %343
  %351 = sub i64 %346, %347
  %352 = load i64, i64* %30, align 8, !noalias !2
  %353 = icmp ult i64 %352, %347
  br i1 %353, label %354, label %355, !prof !5

354:                                              ; preds = %350
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

355:                                              ; preds = %350
  %356 = sub i64 %352, %347
  %357 = icmp ugt i64 %356, %351
  %358 = select i1 %357, i64 %351, i64 %356
  %359 = icmp sgt i64 %358, -1
  br i1 %359, label %361, label %360, !prof !6

360:                                              ; preds = %355
  call void @llvm.trap() #11, !noalias !2
  unreachable

361:                                              ; preds = %355
  %362 = load i8*, i8** %29, align 8, !noalias !2
  %363 = getelementptr inbounds i8, i8* %362, i64 %347
  %364 = ptrtoint i8* %363 to i64
  %365 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %366 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %367 = icmp ult %"struct.liburlpattern::Token"* %365, %366
  %368 = ptrtoint %"struct.liburlpattern::Token"* %366 to i64
  br i1 %367, label %369, label %377

369:                                              ; preds = %361
  %370 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %365, i64 0, i32 0
  store i32 9, i32* %370, align 8, !noalias !2
  %371 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %365, i64 0, i32 1
  store i64 %347, i64* %371, align 8, !noalias !2
  %372 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %365, i64 0, i32 2, i32 0
  %373 = bitcast i8** %372 to i64*
  store i64 %364, i64* %373, align 8, !noalias !2
  %374 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %365, i64 0, i32 2, i32 1
  store i64 %358, i64* %374, align 8, !noalias !2
  %375 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %365, i64 1
  %376 = ptrtoint %"struct.liburlpattern::Token"* %375 to i64
  store i64 %376, i64* %73, align 8, !noalias !2
  br label %425

377:                                              ; preds = %361
  %378 = ptrtoint %"struct.liburlpattern::Token"* %365 to i64
  %379 = load i64, i64* %37, align 8, !noalias !2
  %380 = sub i64 %378, %379
  %381 = ashr exact i64 %380, 5
  %382 = add nsw i64 %381, 1
  %383 = icmp ugt i64 %382, 576460752303423487
  br i1 %383, label %384, label %386

384:                                              ; preds = %377
  %385 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %385) #12, !noalias !2
  unreachable

386:                                              ; preds = %377
  %387 = sub i64 %368, %379
  %388 = ashr exact i64 %387, 5
  %389 = icmp ult i64 %388, 288230376151711743
  br i1 %389, label %390, label %398

390:                                              ; preds = %386
  %391 = ashr exact i64 %387, 4
  %392 = icmp ult i64 %391, %382
  %393 = select i1 %392, i64 %382, i64 %391
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %403, label %395

395:                                              ; preds = %390
  %396 = icmp ugt i64 %393, 576460752303423487
  br i1 %396, label %397, label %398

397:                                              ; preds = %395
  call void @abort() #12, !noalias !2
  unreachable

398:                                              ; preds = %395, %386
  %399 = phi i64 [ %393, %395 ], [ 576460752303423487, %386 ]
  %400 = shl i64 %399, 5
  %401 = call i8* @_Znwm(i64 %400) #13, !noalias !2
  %402 = bitcast i8* %401 to %"struct.liburlpattern::Token"*
  br label %403

403:                                              ; preds = %398, %390
  %404 = phi i64 [ %399, %398 ], [ 0, %390 ]
  %405 = phi i8* [ %401, %398 ], [ null, %390 ]
  %406 = phi %"struct.liburlpattern::Token"* [ %402, %398 ], [ null, %390 ]
  %407 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %406, i64 %381
  %408 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %406, i64 %404
  %409 = ptrtoint %"struct.liburlpattern::Token"* %408 to i64
  %410 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %407, i64 0, i32 0
  store i32 9, i32* %410, align 8, !noalias !2
  %411 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %406, i64 %381, i32 1
  store i64 %347, i64* %411, align 8, !noalias !2
  %412 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %406, i64 %381, i32 2, i32 0
  %413 = bitcast i8** %412 to i64*
  store i64 %364, i64* %413, align 8, !noalias !2
  %414 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %406, i64 %381, i32 2, i32 1
  store i64 %358, i64* %414, align 8, !noalias !2
  %415 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %407, i64 1
  %416 = ptrtoint %"struct.liburlpattern::Token"* %415 to i64
  %417 = ptrtoint %"struct.liburlpattern::Token"* %406 to i64
  %418 = icmp sgt i64 %380, 0
  br i1 %418, label %419, label %421

419:                                              ; preds = %403
  %420 = inttoptr i64 %379 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %405, i8* align 8 %420, i64 %380, i1 false) #11, !noalias !2
  br label %421

421:                                              ; preds = %419, %403
  store i64 %417, i64* %37, align 8, !noalias !2
  store i64 %416, i64* %73, align 8, !noalias !2
  store i64 %409, i64* %36, align 8, !noalias !2
  %422 = icmp eq i64 %379, 0
  br i1 %422, label %425, label %423

423:                                              ; preds = %421
  %424 = inttoptr i64 %379 to i8*
  call void @_ZdlPv(i8* %424) #13, !noalias !2
  br label %425

425:                                              ; preds = %423, %421, %369
  store i64 %346, i64* %54, align 8, !noalias !2
  br label %442

426:                                              ; preds = %343
  %427 = inttoptr i64 %344 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %15, i8* %427, i64 %345) #11, !noalias !2
  %428 = load i64, i64* %55, align 8, !noalias !2
  %429 = load i64, i64* %158, align 8, !noalias !2
  %430 = icmp eq i64 %429, %428
  br i1 %430, label %436, label %431

431:                                              ; preds = %426
  store i64 %429, i64* %55, align 8, !noalias !2
  store i64 54, i64* %158, align 8, !noalias !2
  %432 = and i64 %428, 1
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %441, label %434

434:                                              ; preds = %431
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %428) #11, !noalias !2
  %435 = load i64, i64* %158, align 8, !noalias !2
  br label %436

436:                                              ; preds = %434, %426
  %437 = phi i64 [ %428, %426 ], [ %435, %434 ]
  %438 = and i64 %437, 1
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %441, label %440

440:                                              ; preds = %436
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %437) #11, !noalias !2
  br label %441

441:                                              ; preds = %440, %436, %431
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #11, !noalias !2
  br label %442

442:                                              ; preds = %441, %425
  %443 = load i8, i8* %153, align 1, !noalias !2
  %444 = icmp slt i8 %443, 0
  br i1 %444, label %445, label %447

445:                                              ; preds = %442
  %446 = load i8*, i8** %159, align 8, !noalias !2
  call void @_ZdlPv(i8* %446) #13, !noalias !2
  br label %447

447:                                              ; preds = %445, %442
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #11, !noalias !2
  br label %244

448:                                              ; preds = %328
  %449 = load i64, i64* %56, align 8, !noalias !2
  call fastcc void @_ZN13liburlpattern12_GLOBAL__N_19Tokenizer4NextEv(%"class.liburlpattern::(anonymous namespace)::Tokenizer"* nonnull %27) #11, !noalias !2
  %450 = load i64, i64* %56, align 8, !noalias !2
  %451 = sub i64 %450, %449
  %452 = load i64, i64* %30, align 8, !noalias !2
  %453 = icmp ult i64 %452, %449
  br i1 %453, label %454, label %455, !prof !5

454:                                              ; preds = %448
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

455:                                              ; preds = %448
  %456 = sub i64 %452, %449
  %457 = icmp ugt i64 %456, %451
  %458 = select i1 %457, i64 %451, i64 %456
  %459 = icmp sgt i64 %458, -1
  br i1 %459, label %461, label %460, !prof !6

460:                                              ; preds = %455
  call void @llvm.trap() #11, !noalias !2
  unreachable

461:                                              ; preds = %455
  %462 = load i8*, i8** %29, align 8, !noalias !2
  %463 = getelementptr inbounds i8, i8* %462, i64 %449
  %464 = ptrtoint i8* %463 to i64
  %465 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %466 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %467 = icmp ult %"struct.liburlpattern::Token"* %465, %466
  %468 = ptrtoint %"struct.liburlpattern::Token"* %466 to i64
  br i1 %467, label %469, label %478

469:                                              ; preds = %461
  %470 = load i64, i64* %54, align 8, !noalias !2
  %471 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %465, i64 0, i32 0
  store i32 5, i32* %471, align 8, !noalias !2
  %472 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %465, i64 0, i32 1
  store i64 %470, i64* %472, align 8, !noalias !2
  %473 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %465, i64 0, i32 2, i32 0
  %474 = bitcast i8** %473 to i64*
  store i64 %464, i64* %474, align 8, !noalias !2
  %475 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %465, i64 0, i32 2, i32 1
  store i64 %458, i64* %475, align 8, !noalias !2
  %476 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %465, i64 1
  %477 = ptrtoint %"struct.liburlpattern::Token"* %476 to i64
  store i64 %477, i64* %73, align 8, !noalias !2
  br label %527

478:                                              ; preds = %461
  %479 = ptrtoint %"struct.liburlpattern::Token"* %465 to i64
  %480 = load i64, i64* %37, align 8, !noalias !2
  %481 = sub i64 %479, %480
  %482 = ashr exact i64 %481, 5
  %483 = add nsw i64 %482, 1
  %484 = icmp ugt i64 %483, 576460752303423487
  br i1 %484, label %485, label %487

485:                                              ; preds = %478
  %486 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %486) #12, !noalias !2
  unreachable

487:                                              ; preds = %478
  %488 = sub i64 %468, %480
  %489 = ashr exact i64 %488, 5
  %490 = icmp ult i64 %489, 288230376151711743
  br i1 %490, label %491, label %499

491:                                              ; preds = %487
  %492 = ashr exact i64 %488, 4
  %493 = icmp ult i64 %492, %483
  %494 = select i1 %493, i64 %483, i64 %492
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %504, label %496

496:                                              ; preds = %491
  %497 = icmp ugt i64 %494, 576460752303423487
  br i1 %497, label %498, label %499

498:                                              ; preds = %496
  call void @abort() #12, !noalias !2
  unreachable

499:                                              ; preds = %496, %487
  %500 = phi i64 [ %494, %496 ], [ 576460752303423487, %487 ]
  %501 = shl i64 %500, 5
  %502 = call i8* @_Znwm(i64 %501) #13, !noalias !2
  %503 = bitcast i8* %502 to %"struct.liburlpattern::Token"*
  br label %504

504:                                              ; preds = %499, %491
  %505 = phi i64 [ %500, %499 ], [ 0, %491 ]
  %506 = phi i8* [ %502, %499 ], [ null, %491 ]
  %507 = phi %"struct.liburlpattern::Token"* [ %503, %499 ], [ null, %491 ]
  %508 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %507, i64 %482
  %509 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %507, i64 %505
  %510 = ptrtoint %"struct.liburlpattern::Token"* %509 to i64
  %511 = load i64, i64* %54, align 8, !noalias !2
  %512 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %508, i64 0, i32 0
  store i32 5, i32* %512, align 8, !noalias !2
  %513 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %507, i64 %482, i32 1
  store i64 %511, i64* %513, align 8, !noalias !2
  %514 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %507, i64 %482, i32 2, i32 0
  %515 = bitcast i8** %514 to i64*
  store i64 %464, i64* %515, align 8, !noalias !2
  %516 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %507, i64 %482, i32 2, i32 1
  store i64 %458, i64* %516, align 8, !noalias !2
  %517 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %508, i64 1
  %518 = ptrtoint %"struct.liburlpattern::Token"* %517 to i64
  %519 = ptrtoint %"struct.liburlpattern::Token"* %507 to i64
  %520 = icmp sgt i64 %481, 0
  br i1 %520, label %521, label %523

521:                                              ; preds = %504
  %522 = inttoptr i64 %480 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %506, i8* align 8 %522, i64 %481, i1 false) #11, !noalias !2
  br label %523

523:                                              ; preds = %521, %504
  store i64 %519, i64* %37, align 8, !noalias !2
  store i64 %518, i64* %73, align 8, !noalias !2
  store i64 %510, i64* %36, align 8, !noalias !2
  %524 = icmp eq i64 %480, 0
  br i1 %524, label %527, label %525

525:                                              ; preds = %523
  %526 = inttoptr i64 %480 to i8*
  call void @_ZdlPv(i8* %526) #13, !noalias !2
  br label %527

527:                                              ; preds = %525, %523, %469
  store i64 %450, i64* %54, align 8, !noalias !2
  br label %244

528:                                              ; preds = %163
  %529 = load i64, i64* %56, align 8, !noalias !2
  %530 = load i64, i64* %54, align 8, !noalias !2
  %531 = sub i64 %529, %530
  %532 = load i64, i64* %30, align 8, !noalias !2
  %533 = icmp ult i64 %532, %530
  br i1 %533, label %534, label %535, !prof !5

534:                                              ; preds = %528
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

535:                                              ; preds = %528
  %536 = sub i64 %532, %530
  %537 = icmp ugt i64 %536, %531
  %538 = select i1 %537, i64 %531, i64 %536
  %539 = icmp sgt i64 %538, -1
  br i1 %539, label %541, label %540, !prof !6

540:                                              ; preds = %535
  call void @llvm.trap() #11, !noalias !2
  unreachable

541:                                              ; preds = %535
  %542 = load i8*, i8** %29, align 8, !noalias !2
  %543 = getelementptr inbounds i8, i8* %542, i64 %530
  %544 = ptrtoint i8* %543 to i64
  %545 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %546 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %547 = icmp ult %"struct.liburlpattern::Token"* %545, %546
  %548 = ptrtoint %"struct.liburlpattern::Token"* %546 to i64
  br i1 %547, label %549, label %557

549:                                              ; preds = %541
  %550 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %545, i64 0, i32 0
  store i32 0, i32* %550, align 8, !noalias !2
  %551 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %545, i64 0, i32 1
  store i64 %530, i64* %551, align 8, !noalias !2
  %552 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %545, i64 0, i32 2, i32 0
  %553 = bitcast i8** %552 to i64*
  store i64 %544, i64* %553, align 8, !noalias !2
  %554 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %545, i64 0, i32 2, i32 1
  store i64 %538, i64* %554, align 8, !noalias !2
  %555 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %545, i64 1
  %556 = ptrtoint %"struct.liburlpattern::Token"* %555 to i64
  store i64 %556, i64* %73, align 8, !noalias !2
  br label %605

557:                                              ; preds = %541
  %558 = ptrtoint %"struct.liburlpattern::Token"* %545 to i64
  %559 = load i64, i64* %37, align 8, !noalias !2
  %560 = sub i64 %558, %559
  %561 = ashr exact i64 %560, 5
  %562 = add nsw i64 %561, 1
  %563 = icmp ugt i64 %562, 576460752303423487
  br i1 %563, label %564, label %566

564:                                              ; preds = %557
  %565 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %565) #12, !noalias !2
  unreachable

566:                                              ; preds = %557
  %567 = sub i64 %548, %559
  %568 = ashr exact i64 %567, 5
  %569 = icmp ult i64 %568, 288230376151711743
  br i1 %569, label %570, label %578

570:                                              ; preds = %566
  %571 = ashr exact i64 %567, 4
  %572 = icmp ult i64 %571, %562
  %573 = select i1 %572, i64 %562, i64 %571
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %583, label %575

575:                                              ; preds = %570
  %576 = icmp ugt i64 %573, 576460752303423487
  br i1 %576, label %577, label %578

577:                                              ; preds = %575
  call void @abort() #12, !noalias !2
  unreachable

578:                                              ; preds = %575, %566
  %579 = phi i64 [ %573, %575 ], [ 576460752303423487, %566 ]
  %580 = shl i64 %579, 5
  %581 = call i8* @_Znwm(i64 %580) #13, !noalias !2
  %582 = bitcast i8* %581 to %"struct.liburlpattern::Token"*
  br label %583

583:                                              ; preds = %578, %570
  %584 = phi i64 [ %579, %578 ], [ 0, %570 ]
  %585 = phi i8* [ %581, %578 ], [ null, %570 ]
  %586 = phi %"struct.liburlpattern::Token"* [ %582, %578 ], [ null, %570 ]
  %587 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %586, i64 %561
  %588 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %586, i64 %584
  %589 = ptrtoint %"struct.liburlpattern::Token"* %588 to i64
  %590 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %587, i64 0, i32 0
  store i32 0, i32* %590, align 8, !noalias !2
  %591 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %586, i64 %561, i32 1
  store i64 %530, i64* %591, align 8, !noalias !2
  %592 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %586, i64 %561, i32 2, i32 0
  %593 = bitcast i8** %592 to i64*
  store i64 %544, i64* %593, align 8, !noalias !2
  %594 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %586, i64 %561, i32 2, i32 1
  store i64 %538, i64* %594, align 8, !noalias !2
  %595 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %587, i64 1
  %596 = ptrtoint %"struct.liburlpattern::Token"* %595 to i64
  %597 = ptrtoint %"struct.liburlpattern::Token"* %586 to i64
  %598 = icmp sgt i64 %560, 0
  br i1 %598, label %599, label %601

599:                                              ; preds = %583
  %600 = inttoptr i64 %559 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %585, i8* align 8 %600, i64 %560, i1 false) #11, !noalias !2
  br label %601

601:                                              ; preds = %599, %583
  store i64 %597, i64* %37, align 8, !noalias !2
  store i64 %596, i64* %73, align 8, !noalias !2
  store i64 %589, i64* %36, align 8, !noalias !2
  %602 = icmp eq i64 %559, 0
  br i1 %602, label %605, label %603

603:                                              ; preds = %601
  %604 = inttoptr i64 %559 to i8*
  call void @_ZdlPv(i8* %604) #13, !noalias !2
  br label %605

605:                                              ; preds = %603, %601, %549
  store i64 %529, i64* %54, align 8, !noalias !2
  br label %244

606:                                              ; preds = %163
  %607 = load i64, i64* %56, align 8, !noalias !2
  %608 = load i64, i64* %54, align 8, !noalias !2
  %609 = sub i64 %607, %608
  %610 = load i64, i64* %30, align 8, !noalias !2
  %611 = icmp ult i64 %610, %608
  br i1 %611, label %612, label %613, !prof !5

612:                                              ; preds = %606
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

613:                                              ; preds = %606
  %614 = sub i64 %610, %608
  %615 = icmp ugt i64 %614, %609
  %616 = select i1 %615, i64 %609, i64 %614
  %617 = icmp sgt i64 %616, -1
  br i1 %617, label %619, label %618, !prof !6

618:                                              ; preds = %613
  call void @llvm.trap() #11, !noalias !2
  unreachable

619:                                              ; preds = %613
  %620 = load i8*, i8** %29, align 8, !noalias !2
  %621 = getelementptr inbounds i8, i8* %620, i64 %608
  %622 = ptrtoint i8* %621 to i64
  %623 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %624 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %625 = icmp ult %"struct.liburlpattern::Token"* %623, %624
  %626 = ptrtoint %"struct.liburlpattern::Token"* %624 to i64
  br i1 %625, label %627, label %635

627:                                              ; preds = %619
  %628 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %623, i64 0, i32 0
  store i32 1, i32* %628, align 8, !noalias !2
  %629 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %623, i64 0, i32 1
  store i64 %608, i64* %629, align 8, !noalias !2
  %630 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %623, i64 0, i32 2, i32 0
  %631 = bitcast i8** %630 to i64*
  store i64 %622, i64* %631, align 8, !noalias !2
  %632 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %623, i64 0, i32 2, i32 1
  store i64 %616, i64* %632, align 8, !noalias !2
  %633 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %623, i64 1
  %634 = ptrtoint %"struct.liburlpattern::Token"* %633 to i64
  store i64 %634, i64* %73, align 8, !noalias !2
  br label %683

635:                                              ; preds = %619
  %636 = ptrtoint %"struct.liburlpattern::Token"* %623 to i64
  %637 = load i64, i64* %37, align 8, !noalias !2
  %638 = sub i64 %636, %637
  %639 = ashr exact i64 %638, 5
  %640 = add nsw i64 %639, 1
  %641 = icmp ugt i64 %640, 576460752303423487
  br i1 %641, label %642, label %644

642:                                              ; preds = %635
  %643 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %643) #12, !noalias !2
  unreachable

644:                                              ; preds = %635
  %645 = sub i64 %626, %637
  %646 = ashr exact i64 %645, 5
  %647 = icmp ult i64 %646, 288230376151711743
  br i1 %647, label %648, label %656

648:                                              ; preds = %644
  %649 = ashr exact i64 %645, 4
  %650 = icmp ult i64 %649, %640
  %651 = select i1 %650, i64 %640, i64 %649
  %652 = icmp eq i64 %651, 0
  br i1 %652, label %661, label %653

653:                                              ; preds = %648
  %654 = icmp ugt i64 %651, 576460752303423487
  br i1 %654, label %655, label %656

655:                                              ; preds = %653
  call void @abort() #12, !noalias !2
  unreachable

656:                                              ; preds = %653, %644
  %657 = phi i64 [ %651, %653 ], [ 576460752303423487, %644 ]
  %658 = shl i64 %657, 5
  %659 = call i8* @_Znwm(i64 %658) #13, !noalias !2
  %660 = bitcast i8* %659 to %"struct.liburlpattern::Token"*
  br label %661

661:                                              ; preds = %656, %648
  %662 = phi i64 [ %657, %656 ], [ 0, %648 ]
  %663 = phi i8* [ %659, %656 ], [ null, %648 ]
  %664 = phi %"struct.liburlpattern::Token"* [ %660, %656 ], [ null, %648 ]
  %665 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %664, i64 %639
  %666 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %664, i64 %662
  %667 = ptrtoint %"struct.liburlpattern::Token"* %666 to i64
  %668 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %665, i64 0, i32 0
  store i32 1, i32* %668, align 8, !noalias !2
  %669 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %664, i64 %639, i32 1
  store i64 %608, i64* %669, align 8, !noalias !2
  %670 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %664, i64 %639, i32 2, i32 0
  %671 = bitcast i8** %670 to i64*
  store i64 %622, i64* %671, align 8, !noalias !2
  %672 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %664, i64 %639, i32 2, i32 1
  store i64 %616, i64* %672, align 8, !noalias !2
  %673 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %665, i64 1
  %674 = ptrtoint %"struct.liburlpattern::Token"* %673 to i64
  %675 = ptrtoint %"struct.liburlpattern::Token"* %664 to i64
  %676 = icmp sgt i64 %638, 0
  br i1 %676, label %677, label %679

677:                                              ; preds = %661
  %678 = inttoptr i64 %637 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %663, i8* align 8 %678, i64 %638, i1 false) #11, !noalias !2
  br label %679

679:                                              ; preds = %677, %661
  store i64 %675, i64* %37, align 8, !noalias !2
  store i64 %674, i64* %73, align 8, !noalias !2
  store i64 %667, i64* %36, align 8, !noalias !2
  %680 = icmp eq i64 %637, 0
  br i1 %680, label %683, label %681

681:                                              ; preds = %679
  %682 = inttoptr i64 %637 to i8*
  call void @_ZdlPv(i8* %682) #13, !noalias !2
  br label %683

683:                                              ; preds = %681, %679, %627
  store i64 %607, i64* %54, align 8, !noalias !2
  br label %244

684:                                              ; preds = %163
  %685 = load i64, i64* %56, align 8, !noalias !2
  %686 = load i64, i64* %30, align 8, !noalias !2
  %687 = icmp ult i64 %685, %686
  br i1 %687, label %688, label %707

688:                                              ; preds = %684, %700
  %689 = phi i64 [ %701, %700 ], [ %685, %684 ]
  store i64 %689, i64* %56, align 8, !noalias !2
  call fastcc void @_ZN13liburlpattern12_GLOBAL__N_19Tokenizer4NextEv(%"class.liburlpattern::(anonymous namespace)::Tokenizer"* nonnull %27) #11, !noalias !2
  %690 = load i32, i32* %33, align 8, !noalias !2
  %691 = icmp eq i64 %689, %685
  br i1 %691, label %696, label %692

692:                                              ; preds = %688
  %693 = call signext i8 @u_hasBinaryProperty_69(i32 %690, i32 15) #11, !noalias !2
  %694 = icmp eq i8 %693, 0
  br i1 %694, label %695, label %700

695:                                              ; preds = %692
  switch i32 %690, label %704 [
    i32 8204, label %700
    i32 95, label %700
    i32 36, label %700
    i32 8205, label %700
  ]

696:                                              ; preds = %688
  %697 = call signext i8 @u_hasBinaryProperty_69(i32 %690, i32 16) #11, !noalias !2
  %698 = icmp eq i8 %697, 0
  br i1 %698, label %699, label %700

699:                                              ; preds = %696
  switch i32 %690, label %707 [
    i32 95, label %700
    i32 36, label %700
  ]

700:                                              ; preds = %699, %699, %696, %695, %695, %695, %695, %692
  %701 = load i64, i64* %56, align 8, !noalias !2
  %702 = load i64, i64* %30, align 8, !noalias !2
  %703 = icmp ult i64 %701, %702
  br i1 %703, label %688, label %704

704:                                              ; preds = %700, %695
  %705 = phi i64 [ %701, %700 ], [ %689, %695 ]
  %706 = icmp ugt i64 %705, %685
  br i1 %706, label %822, label %707

707:                                              ; preds = %699, %704, %684
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11, !noalias !10
  %708 = load i64, i64* %54, align 8, !noalias !10
  store i64 %708, i64* %78, align 8, !noalias !10
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %79, align 8, !noalias !10
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %18, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i64 29, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %77, i64 1) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11, !noalias !10
  %709 = load i8, i8* %144, align 1, !noalias !2
  %710 = icmp slt i8 %709, 0
  br i1 %710, label %713, label %711

711:                                              ; preds = %707
  %712 = zext i8 %709 to i64
  br label %718

713:                                              ; preds = %707
  %714 = load i64, i64* %146, align 8, !noalias !2
  %715 = load i64, i64* %147, align 8, !noalias !2
  %716 = icmp sgt i64 %715, -1
  br i1 %716, label %718, label %717, !prof !6

717:                                              ; preds = %713
  call void @llvm.trap() #11, !noalias !2
  unreachable

718:                                              ; preds = %713, %711
  %719 = phi i64 [ %714, %713 ], [ %145, %711 ]
  %720 = phi i64 [ %715, %713 ], [ %712, %711 ]
  %721 = load i64, i64* %54, align 8, !noalias !2
  %722 = load i32, i32* %31, align 8, !noalias !2
  %723 = icmp eq i32 %722, 1
  br i1 %723, label %724, label %800

724:                                              ; preds = %718
  %725 = sub i64 %685, %721
  %726 = load i64, i64* %30, align 8, !noalias !2
  %727 = icmp ult i64 %726, %721
  br i1 %727, label %728, label %729, !prof !5

728:                                              ; preds = %724
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

729:                                              ; preds = %724
  %730 = sub i64 %726, %721
  %731 = icmp ugt i64 %730, %725
  %732 = select i1 %731, i64 %725, i64 %730
  %733 = icmp sgt i64 %732, -1
  br i1 %733, label %735, label %734, !prof !6

734:                                              ; preds = %729
  call void @llvm.trap() #11, !noalias !2
  unreachable

735:                                              ; preds = %729
  %736 = load i8*, i8** %29, align 8, !noalias !2
  %737 = getelementptr inbounds i8, i8* %736, i64 %721
  %738 = ptrtoint i8* %737 to i64
  %739 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %740 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %741 = icmp ult %"struct.liburlpattern::Token"* %739, %740
  %742 = ptrtoint %"struct.liburlpattern::Token"* %740 to i64
  br i1 %741, label %743, label %751

743:                                              ; preds = %735
  %744 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %739, i64 0, i32 0
  store i32 9, i32* %744, align 8, !noalias !2
  %745 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %739, i64 0, i32 1
  store i64 %721, i64* %745, align 8, !noalias !2
  %746 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %739, i64 0, i32 2, i32 0
  %747 = bitcast i8** %746 to i64*
  store i64 %738, i64* %747, align 8, !noalias !2
  %748 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %739, i64 0, i32 2, i32 1
  store i64 %732, i64* %748, align 8, !noalias !2
  %749 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %739, i64 1
  %750 = ptrtoint %"struct.liburlpattern::Token"* %749 to i64
  store i64 %750, i64* %73, align 8, !noalias !2
  br label %799

751:                                              ; preds = %735
  %752 = ptrtoint %"struct.liburlpattern::Token"* %739 to i64
  %753 = load i64, i64* %37, align 8, !noalias !2
  %754 = sub i64 %752, %753
  %755 = ashr exact i64 %754, 5
  %756 = add nsw i64 %755, 1
  %757 = icmp ugt i64 %756, 576460752303423487
  br i1 %757, label %758, label %760

758:                                              ; preds = %751
  %759 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %759) #12, !noalias !2
  unreachable

760:                                              ; preds = %751
  %761 = sub i64 %742, %753
  %762 = ashr exact i64 %761, 5
  %763 = icmp ult i64 %762, 288230376151711743
  br i1 %763, label %764, label %772

764:                                              ; preds = %760
  %765 = ashr exact i64 %761, 4
  %766 = icmp ult i64 %765, %756
  %767 = select i1 %766, i64 %756, i64 %765
  %768 = icmp eq i64 %767, 0
  br i1 %768, label %777, label %769

769:                                              ; preds = %764
  %770 = icmp ugt i64 %767, 576460752303423487
  br i1 %770, label %771, label %772

771:                                              ; preds = %769
  call void @abort() #12, !noalias !2
  unreachable

772:                                              ; preds = %769, %760
  %773 = phi i64 [ %767, %769 ], [ 576460752303423487, %760 ]
  %774 = shl i64 %773, 5
  %775 = call i8* @_Znwm(i64 %774) #13, !noalias !2
  %776 = bitcast i8* %775 to %"struct.liburlpattern::Token"*
  br label %777

777:                                              ; preds = %772, %764
  %778 = phi i64 [ %773, %772 ], [ 0, %764 ]
  %779 = phi i8* [ %775, %772 ], [ null, %764 ]
  %780 = phi %"struct.liburlpattern::Token"* [ %776, %772 ], [ null, %764 ]
  %781 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %780, i64 %755
  %782 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %780, i64 %778
  %783 = ptrtoint %"struct.liburlpattern::Token"* %782 to i64
  %784 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %781, i64 0, i32 0
  store i32 9, i32* %784, align 8, !noalias !2
  %785 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %780, i64 %755, i32 1
  store i64 %721, i64* %785, align 8, !noalias !2
  %786 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %780, i64 %755, i32 2, i32 0
  %787 = bitcast i8** %786 to i64*
  store i64 %738, i64* %787, align 8, !noalias !2
  %788 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %780, i64 %755, i32 2, i32 1
  store i64 %732, i64* %788, align 8, !noalias !2
  %789 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %781, i64 1
  %790 = ptrtoint %"struct.liburlpattern::Token"* %789 to i64
  %791 = ptrtoint %"struct.liburlpattern::Token"* %780 to i64
  %792 = icmp sgt i64 %754, 0
  br i1 %792, label %793, label %795

793:                                              ; preds = %777
  %794 = inttoptr i64 %753 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %779, i8* align 8 %794, i64 %754, i1 false) #11, !noalias !2
  br label %795

795:                                              ; preds = %793, %777
  store i64 %791, i64* %37, align 8, !noalias !2
  store i64 %790, i64* %73, align 8, !noalias !2
  store i64 %783, i64* %36, align 8, !noalias !2
  %796 = icmp eq i64 %753, 0
  br i1 %796, label %799, label %797

797:                                              ; preds = %795
  %798 = inttoptr i64 %753 to i8*
  call void @_ZdlPv(i8* %798) #13, !noalias !2
  br label %799

799:                                              ; preds = %797, %795, %743
  store i64 %685, i64* %54, align 8, !noalias !2
  br label %816

800:                                              ; preds = %718
  %801 = inttoptr i64 %719 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %14, i8* %801, i64 %720) #11, !noalias !2
  %802 = load i64, i64* %55, align 8, !noalias !2
  %803 = load i64, i64* %149, align 8, !noalias !2
  %804 = icmp eq i64 %803, %802
  br i1 %804, label %810, label %805

805:                                              ; preds = %800
  store i64 %803, i64* %55, align 8, !noalias !2
  store i64 54, i64* %149, align 8, !noalias !2
  %806 = and i64 %802, 1
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %815, label %808

808:                                              ; preds = %805
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %802) #11, !noalias !2
  %809 = load i64, i64* %149, align 8, !noalias !2
  br label %810

810:                                              ; preds = %808, %800
  %811 = phi i64 [ %802, %800 ], [ %809, %808 ]
  %812 = and i64 %811, 1
  %813 = icmp eq i64 %812, 0
  br i1 %813, label %815, label %814

814:                                              ; preds = %810
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %811) #11, !noalias !2
  br label %815

815:                                              ; preds = %814, %810, %805
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #11, !noalias !2
  br label %816

816:                                              ; preds = %815, %799
  %817 = load i8, i8* %144, align 1, !noalias !2
  %818 = icmp slt i8 %817, 0
  br i1 %818, label %819, label %821

819:                                              ; preds = %816
  %820 = load i8*, i8** %150, align 8, !noalias !2
  call void @_ZdlPv(i8* %820) #13, !noalias !2
  br label %821

821:                                              ; preds = %819, %816
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #11, !noalias !2
  br label %244

822:                                              ; preds = %704
  %823 = sub i64 %705, %685
  %824 = load i64, i64* %30, align 8, !noalias !2
  %825 = icmp ult i64 %824, %685
  br i1 %825, label %826, label %827, !prof !5

826:                                              ; preds = %822
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

827:                                              ; preds = %822
  %828 = sub i64 %824, %685
  %829 = icmp ugt i64 %828, %823
  %830 = select i1 %829, i64 %823, i64 %828
  %831 = icmp sgt i64 %830, -1
  br i1 %831, label %833, label %832, !prof !6

832:                                              ; preds = %827
  call void @llvm.trap() #11, !noalias !2
  unreachable

833:                                              ; preds = %827
  %834 = load i8*, i8** %29, align 8, !noalias !2
  %835 = getelementptr inbounds i8, i8* %834, i64 %685
  %836 = ptrtoint i8* %835 to i64
  %837 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %838 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %839 = icmp ult %"struct.liburlpattern::Token"* %837, %838
  %840 = ptrtoint %"struct.liburlpattern::Token"* %838 to i64
  br i1 %839, label %841, label %850

841:                                              ; preds = %833
  %842 = load i64, i64* %54, align 8, !noalias !2
  %843 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %837, i64 0, i32 0
  store i32 3, i32* %843, align 8, !noalias !2
  %844 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %837, i64 0, i32 1
  store i64 %842, i64* %844, align 8, !noalias !2
  %845 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %837, i64 0, i32 2, i32 0
  %846 = bitcast i8** %845 to i64*
  store i64 %836, i64* %846, align 8, !noalias !2
  %847 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %837, i64 0, i32 2, i32 1
  store i64 %830, i64* %847, align 8, !noalias !2
  %848 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %837, i64 1
  %849 = ptrtoint %"struct.liburlpattern::Token"* %848 to i64
  store i64 %849, i64* %73, align 8, !noalias !2
  br label %899

850:                                              ; preds = %833
  %851 = ptrtoint %"struct.liburlpattern::Token"* %837 to i64
  %852 = load i64, i64* %37, align 8, !noalias !2
  %853 = sub i64 %851, %852
  %854 = ashr exact i64 %853, 5
  %855 = add nsw i64 %854, 1
  %856 = icmp ugt i64 %855, 576460752303423487
  br i1 %856, label %857, label %859

857:                                              ; preds = %850
  %858 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %858) #12, !noalias !2
  unreachable

859:                                              ; preds = %850
  %860 = sub i64 %840, %852
  %861 = ashr exact i64 %860, 5
  %862 = icmp ult i64 %861, 288230376151711743
  br i1 %862, label %863, label %871

863:                                              ; preds = %859
  %864 = ashr exact i64 %860, 4
  %865 = icmp ult i64 %864, %855
  %866 = select i1 %865, i64 %855, i64 %864
  %867 = icmp eq i64 %866, 0
  br i1 %867, label %876, label %868

868:                                              ; preds = %863
  %869 = icmp ugt i64 %866, 576460752303423487
  br i1 %869, label %870, label %871

870:                                              ; preds = %868
  call void @abort() #12, !noalias !2
  unreachable

871:                                              ; preds = %868, %859
  %872 = phi i64 [ %866, %868 ], [ 576460752303423487, %859 ]
  %873 = shl i64 %872, 5
  %874 = call i8* @_Znwm(i64 %873) #13, !noalias !2
  %875 = bitcast i8* %874 to %"struct.liburlpattern::Token"*
  br label %876

876:                                              ; preds = %871, %863
  %877 = phi i64 [ %872, %871 ], [ 0, %863 ]
  %878 = phi i8* [ %874, %871 ], [ null, %863 ]
  %879 = phi %"struct.liburlpattern::Token"* [ %875, %871 ], [ null, %863 ]
  %880 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %879, i64 %854
  %881 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %879, i64 %877
  %882 = ptrtoint %"struct.liburlpattern::Token"* %881 to i64
  %883 = load i64, i64* %54, align 8, !noalias !2
  %884 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %880, i64 0, i32 0
  store i32 3, i32* %884, align 8, !noalias !2
  %885 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %879, i64 %854, i32 1
  store i64 %883, i64* %885, align 8, !noalias !2
  %886 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %879, i64 %854, i32 2, i32 0
  %887 = bitcast i8** %886 to i64*
  store i64 %836, i64* %887, align 8, !noalias !2
  %888 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %879, i64 %854, i32 2, i32 1
  store i64 %830, i64* %888, align 8, !noalias !2
  %889 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %880, i64 1
  %890 = ptrtoint %"struct.liburlpattern::Token"* %889 to i64
  %891 = ptrtoint %"struct.liburlpattern::Token"* %879 to i64
  %892 = icmp sgt i64 %853, 0
  br i1 %892, label %893, label %895

893:                                              ; preds = %876
  %894 = inttoptr i64 %852 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %878, i8* align 8 %894, i64 %853, i1 false) #11, !noalias !2
  br label %895

895:                                              ; preds = %893, %876
  store i64 %891, i64* %37, align 8, !noalias !2
  store i64 %890, i64* %73, align 8, !noalias !2
  store i64 %882, i64* %36, align 8, !noalias !2
  %896 = icmp eq i64 %852, 0
  br i1 %896, label %899, label %897

897:                                              ; preds = %895
  %898 = inttoptr i64 %852 to i8*
  call void @_ZdlPv(i8* %898) #13, !noalias !2
  br label %899

899:                                              ; preds = %897, %895, %841
  store i64 %705, i64* %54, align 8, !noalias !2
  br label %244

900:                                              ; preds = %163
  %901 = load i64, i64* %56, align 8, !noalias !2
  %902 = load i64, i64* %30, align 8, !noalias !2
  %903 = icmp ult i64 %901, %902
  br i1 %903, label %904, label %1642

904:                                              ; preds = %900, %1633
  %905 = phi i64 [ %1634, %1633 ], [ 1, %900 ]
  %906 = phi i64 [ %1635, %1633 ], [ %901, %900 ]
  br label %907

907:                                              ; preds = %1386, %904
  %908 = phi i64 [ %906, %904 ], [ %1387, %1386 ]
  store i64 %908, i64* %56, align 8, !noalias !2
  call fastcc void @_ZN13liburlpattern12_GLOBAL__N_19Tokenizer4NextEv(%"class.liburlpattern::(anonymous namespace)::Tokenizer"* nonnull %27) #11, !noalias !2
  %909 = load i32, i32* %33, align 8, !noalias !2
  %910 = icmp ult i32 %909, 128
  br i1 %910, label %1028, label %911

911:                                              ; preds = %907
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #11, !noalias !13
  %912 = zext i32 %909 to i64
  %913 = or i64 %912, -6148914694099828736
  %914 = inttoptr i64 %913 to i8*
  store i8* %914, i8** %60, align 8, !noalias !13
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIiEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %61, align 8, !noalias !13
  store i64 %908, i64* %63, align 8, !noalias !13
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %64, align 8, !noalias !13
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %19, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i64 0, i64 0), i64 31, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %59, i64 2) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #11, !noalias !13
  %915 = load i8, i8* %66, align 1, !noalias !2
  %916 = icmp slt i8 %915, 0
  br i1 %916, label %919, label %917

917:                                              ; preds = %911
  %918 = zext i8 %915 to i64
  br label %924

919:                                              ; preds = %911
  %920 = load i64, i64* %68, align 8, !noalias !2
  %921 = load i64, i64* %69, align 8, !noalias !2
  %922 = icmp sgt i64 %921, -1
  br i1 %922, label %924, label %923, !prof !6

923:                                              ; preds = %919
  call void @llvm.trap() #11, !noalias !2
  unreachable

924:                                              ; preds = %919, %917
  %925 = phi i64 [ %920, %919 ], [ %67, %917 ]
  %926 = phi i64 [ %921, %919 ], [ %918, %917 ]
  %927 = load i64, i64* %54, align 8, !noalias !2
  %928 = load i32, i32* %31, align 8, !noalias !2
  %929 = icmp eq i32 %928, 1
  br i1 %929, label %930, label %1006

930:                                              ; preds = %924
  %931 = sub i64 %901, %927
  %932 = load i64, i64* %30, align 8, !noalias !2
  %933 = icmp ult i64 %932, %927
  br i1 %933, label %934, label %935, !prof !5

934:                                              ; preds = %930
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

935:                                              ; preds = %930
  %936 = sub i64 %932, %927
  %937 = icmp ugt i64 %936, %931
  %938 = select i1 %937, i64 %931, i64 %936
  %939 = icmp sgt i64 %938, -1
  br i1 %939, label %941, label %940, !prof !6

940:                                              ; preds = %935
  call void @llvm.trap() #11, !noalias !2
  unreachable

941:                                              ; preds = %935
  %942 = load i8*, i8** %29, align 8, !noalias !2
  %943 = getelementptr inbounds i8, i8* %942, i64 %927
  %944 = ptrtoint i8* %943 to i64
  %945 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %946 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %947 = icmp ult %"struct.liburlpattern::Token"* %945, %946
  %948 = ptrtoint %"struct.liburlpattern::Token"* %946 to i64
  br i1 %947, label %949, label %957

949:                                              ; preds = %941
  %950 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %945, i64 0, i32 0
  store i32 9, i32* %950, align 8, !noalias !2
  %951 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %945, i64 0, i32 1
  store i64 %927, i64* %951, align 8, !noalias !2
  %952 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %945, i64 0, i32 2, i32 0
  %953 = bitcast i8** %952 to i64*
  store i64 %944, i64* %953, align 8, !noalias !2
  %954 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %945, i64 0, i32 2, i32 1
  store i64 %938, i64* %954, align 8, !noalias !2
  %955 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %945, i64 1
  %956 = ptrtoint %"struct.liburlpattern::Token"* %955 to i64
  store i64 %956, i64* %73, align 8, !noalias !2
  br label %1005

957:                                              ; preds = %941
  %958 = ptrtoint %"struct.liburlpattern::Token"* %945 to i64
  %959 = load i64, i64* %37, align 8, !noalias !2
  %960 = sub i64 %958, %959
  %961 = ashr exact i64 %960, 5
  %962 = add nsw i64 %961, 1
  %963 = icmp ugt i64 %962, 576460752303423487
  br i1 %963, label %964, label %966

964:                                              ; preds = %957
  %965 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %965) #12, !noalias !2
  unreachable

966:                                              ; preds = %957
  %967 = sub i64 %948, %959
  %968 = ashr exact i64 %967, 5
  %969 = icmp ult i64 %968, 288230376151711743
  br i1 %969, label %970, label %978

970:                                              ; preds = %966
  %971 = ashr exact i64 %967, 4
  %972 = icmp ult i64 %971, %962
  %973 = select i1 %972, i64 %962, i64 %971
  %974 = icmp eq i64 %973, 0
  br i1 %974, label %983, label %975

975:                                              ; preds = %970
  %976 = icmp ugt i64 %973, 576460752303423487
  br i1 %976, label %977, label %978

977:                                              ; preds = %975
  call void @abort() #12, !noalias !2
  unreachable

978:                                              ; preds = %975, %966
  %979 = phi i64 [ %973, %975 ], [ 576460752303423487, %966 ]
  %980 = shl i64 %979, 5
  %981 = call i8* @_Znwm(i64 %980) #13, !noalias !2
  %982 = bitcast i8* %981 to %"struct.liburlpattern::Token"*
  br label %983

983:                                              ; preds = %978, %970
  %984 = phi i64 [ %979, %978 ], [ 0, %970 ]
  %985 = phi i8* [ %981, %978 ], [ null, %970 ]
  %986 = phi %"struct.liburlpattern::Token"* [ %982, %978 ], [ null, %970 ]
  %987 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %986, i64 %961
  %988 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %986, i64 %984
  %989 = ptrtoint %"struct.liburlpattern::Token"* %988 to i64
  %990 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %987, i64 0, i32 0
  store i32 9, i32* %990, align 8, !noalias !2
  %991 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %986, i64 %961, i32 1
  store i64 %927, i64* %991, align 8, !noalias !2
  %992 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %986, i64 %961, i32 2, i32 0
  %993 = bitcast i8** %992 to i64*
  store i64 %944, i64* %993, align 8, !noalias !2
  %994 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %986, i64 %961, i32 2, i32 1
  store i64 %938, i64* %994, align 8, !noalias !2
  %995 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %987, i64 1
  %996 = ptrtoint %"struct.liburlpattern::Token"* %995 to i64
  %997 = ptrtoint %"struct.liburlpattern::Token"* %986 to i64
  %998 = icmp sgt i64 %960, 0
  br i1 %998, label %999, label %1001

999:                                              ; preds = %983
  %1000 = inttoptr i64 %959 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %985, i8* align 8 %1000, i64 %960, i1 false) #11, !noalias !2
  br label %1001

1001:                                             ; preds = %999, %983
  store i64 %997, i64* %37, align 8, !noalias !2
  store i64 %996, i64* %73, align 8, !noalias !2
  store i64 %989, i64* %36, align 8, !noalias !2
  %1002 = icmp eq i64 %959, 0
  br i1 %1002, label %1005, label %1003

1003:                                             ; preds = %1001
  %1004 = inttoptr i64 %959 to i8*
  call void @_ZdlPv(i8* %1004) #13, !noalias !2
  br label %1005

1005:                                             ; preds = %1003, %1001, %949
  store i64 %901, i64* %54, align 8, !noalias !2
  br label %1022

1006:                                             ; preds = %924
  %1007 = inttoptr i64 %925 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %12, i8* %1007, i64 %926) #11, !noalias !2
  %1008 = load i64, i64* %55, align 8, !noalias !2
  %1009 = load i64, i64* %71, align 8, !noalias !2
  %1010 = icmp eq i64 %1009, %1008
  br i1 %1010, label %1016, label %1011

1011:                                             ; preds = %1006
  store i64 %1009, i64* %55, align 8, !noalias !2
  store i64 54, i64* %71, align 8, !noalias !2
  %1012 = and i64 %1008, 1
  %1013 = icmp eq i64 %1012, 0
  br i1 %1013, label %1021, label %1014

1014:                                             ; preds = %1011
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1008) #11, !noalias !2
  %1015 = load i64, i64* %71, align 8, !noalias !2
  br label %1016

1016:                                             ; preds = %1014, %1006
  %1017 = phi i64 [ %1008, %1006 ], [ %1015, %1014 ]
  %1018 = and i64 %1017, 1
  %1019 = icmp eq i64 %1018, 0
  br i1 %1019, label %1021, label %1020

1020:                                             ; preds = %1016
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1017) #11, !noalias !2
  br label %1021

1021:                                             ; preds = %1020, %1016, %1011
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11, !noalias !2
  br label %1022

1022:                                             ; preds = %1021, %1005
  %1023 = load i8, i8* %66, align 1, !noalias !2
  %1024 = icmp slt i8 %1023, 0
  br i1 %1024, label %1025, label %1027

1025:                                             ; preds = %1022
  %1026 = load i8*, i8** %74, align 8, !noalias !2
  call void @_ZdlPv(i8* %1026) #13, !noalias !2
  br label %1027

1027:                                             ; preds = %1025, %1022
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11, !noalias !2
  br label %244

1028:                                             ; preds = %907
  %1029 = icmp eq i64 %908, %901
  %1030 = icmp eq i32 %909, 63
  %1031 = and i1 %1029, %1030
  br i1 %1031, label %1032, label %1146

1032:                                             ; preds = %1028
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11, !noalias !16
  store i64 %901, i64* %78, align 8, !noalias !16
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %79, align 8, !noalias !16
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %20, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0), i64 33, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %77, i64 1) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11, !noalias !16
  %1033 = load i8, i8* %135, align 1, !noalias !2
  %1034 = icmp slt i8 %1033, 0
  br i1 %1034, label %1037, label %1035

1035:                                             ; preds = %1032
  %1036 = zext i8 %1033 to i64
  br label %1042

1037:                                             ; preds = %1032
  %1038 = load i64, i64* %137, align 8, !noalias !2
  %1039 = load i64, i64* %138, align 8, !noalias !2
  %1040 = icmp sgt i64 %1039, -1
  br i1 %1040, label %1042, label %1041, !prof !6

1041:                                             ; preds = %1037
  call void @llvm.trap() #11, !noalias !2
  unreachable

1042:                                             ; preds = %1037, %1035
  %1043 = phi i64 [ %1038, %1037 ], [ %136, %1035 ]
  %1044 = phi i64 [ %1039, %1037 ], [ %1036, %1035 ]
  %1045 = load i64, i64* %54, align 8, !noalias !2
  %1046 = load i32, i32* %31, align 8, !noalias !2
  %1047 = icmp eq i32 %1046, 1
  br i1 %1047, label %1048, label %1124

1048:                                             ; preds = %1042
  %1049 = sub i64 %901, %1045
  %1050 = load i64, i64* %30, align 8, !noalias !2
  %1051 = icmp ult i64 %1050, %1045
  br i1 %1051, label %1052, label %1053, !prof !5

1052:                                             ; preds = %1048
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1053:                                             ; preds = %1048
  %1054 = sub i64 %1050, %1045
  %1055 = icmp ugt i64 %1054, %1049
  %1056 = select i1 %1055, i64 %1049, i64 %1054
  %1057 = icmp sgt i64 %1056, -1
  br i1 %1057, label %1059, label %1058, !prof !6

1058:                                             ; preds = %1053
  call void @llvm.trap() #11, !noalias !2
  unreachable

1059:                                             ; preds = %1053
  %1060 = load i8*, i8** %29, align 8, !noalias !2
  %1061 = getelementptr inbounds i8, i8* %1060, i64 %1045
  %1062 = ptrtoint i8* %1061 to i64
  %1063 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1064 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1065 = icmp ult %"struct.liburlpattern::Token"* %1063, %1064
  %1066 = ptrtoint %"struct.liburlpattern::Token"* %1064 to i64
  br i1 %1065, label %1067, label %1075

1067:                                             ; preds = %1059
  %1068 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1063, i64 0, i32 0
  store i32 9, i32* %1068, align 8, !noalias !2
  %1069 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1063, i64 0, i32 1
  store i64 %1045, i64* %1069, align 8, !noalias !2
  %1070 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1063, i64 0, i32 2, i32 0
  %1071 = bitcast i8** %1070 to i64*
  store i64 %1062, i64* %1071, align 8, !noalias !2
  %1072 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1063, i64 0, i32 2, i32 1
  store i64 %1056, i64* %1072, align 8, !noalias !2
  %1073 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1063, i64 1
  %1074 = ptrtoint %"struct.liburlpattern::Token"* %1073 to i64
  store i64 %1074, i64* %73, align 8, !noalias !2
  br label %1123

1075:                                             ; preds = %1059
  %1076 = ptrtoint %"struct.liburlpattern::Token"* %1063 to i64
  %1077 = load i64, i64* %37, align 8, !noalias !2
  %1078 = sub i64 %1076, %1077
  %1079 = ashr exact i64 %1078, 5
  %1080 = add nsw i64 %1079, 1
  %1081 = icmp ugt i64 %1080, 576460752303423487
  br i1 %1081, label %1082, label %1084

1082:                                             ; preds = %1075
  %1083 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1083) #12, !noalias !2
  unreachable

1084:                                             ; preds = %1075
  %1085 = sub i64 %1066, %1077
  %1086 = ashr exact i64 %1085, 5
  %1087 = icmp ult i64 %1086, 288230376151711743
  br i1 %1087, label %1088, label %1096

1088:                                             ; preds = %1084
  %1089 = ashr exact i64 %1085, 4
  %1090 = icmp ult i64 %1089, %1080
  %1091 = select i1 %1090, i64 %1080, i64 %1089
  %1092 = icmp eq i64 %1091, 0
  br i1 %1092, label %1101, label %1093

1093:                                             ; preds = %1088
  %1094 = icmp ugt i64 %1091, 576460752303423487
  br i1 %1094, label %1095, label %1096

1095:                                             ; preds = %1093
  call void @abort() #12, !noalias !2
  unreachable

1096:                                             ; preds = %1093, %1084
  %1097 = phi i64 [ %1091, %1093 ], [ 576460752303423487, %1084 ]
  %1098 = shl i64 %1097, 5
  %1099 = call i8* @_Znwm(i64 %1098) #13, !noalias !2
  %1100 = bitcast i8* %1099 to %"struct.liburlpattern::Token"*
  br label %1101

1101:                                             ; preds = %1096, %1088
  %1102 = phi i64 [ %1097, %1096 ], [ 0, %1088 ]
  %1103 = phi i8* [ %1099, %1096 ], [ null, %1088 ]
  %1104 = phi %"struct.liburlpattern::Token"* [ %1100, %1096 ], [ null, %1088 ]
  %1105 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1104, i64 %1079
  %1106 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1104, i64 %1102
  %1107 = ptrtoint %"struct.liburlpattern::Token"* %1106 to i64
  %1108 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1105, i64 0, i32 0
  store i32 9, i32* %1108, align 8, !noalias !2
  %1109 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1104, i64 %1079, i32 1
  store i64 %1045, i64* %1109, align 8, !noalias !2
  %1110 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1104, i64 %1079, i32 2, i32 0
  %1111 = bitcast i8** %1110 to i64*
  store i64 %1062, i64* %1111, align 8, !noalias !2
  %1112 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1104, i64 %1079, i32 2, i32 1
  store i64 %1056, i64* %1112, align 8, !noalias !2
  %1113 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1105, i64 1
  %1114 = ptrtoint %"struct.liburlpattern::Token"* %1113 to i64
  %1115 = ptrtoint %"struct.liburlpattern::Token"* %1104 to i64
  %1116 = icmp sgt i64 %1078, 0
  br i1 %1116, label %1117, label %1119

1117:                                             ; preds = %1101
  %1118 = inttoptr i64 %1077 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1103, i8* align 8 %1118, i64 %1078, i1 false) #11, !noalias !2
  br label %1119

1119:                                             ; preds = %1117, %1101
  store i64 %1115, i64* %37, align 8, !noalias !2
  store i64 %1114, i64* %73, align 8, !noalias !2
  store i64 %1107, i64* %36, align 8, !noalias !2
  %1120 = icmp eq i64 %1077, 0
  br i1 %1120, label %1123, label %1121

1121:                                             ; preds = %1119
  %1122 = inttoptr i64 %1077 to i8*
  call void @_ZdlPv(i8* %1122) #13, !noalias !2
  br label %1123

1123:                                             ; preds = %1121, %1119, %1067
  store i64 %901, i64* %54, align 8, !noalias !2
  br label %1140

1124:                                             ; preds = %1042
  %1125 = inttoptr i64 %1043 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %11, i8* %1125, i64 %1044) #11, !noalias !2
  %1126 = load i64, i64* %55, align 8, !noalias !2
  %1127 = load i64, i64* %140, align 8, !noalias !2
  %1128 = icmp eq i64 %1127, %1126
  br i1 %1128, label %1134, label %1129

1129:                                             ; preds = %1124
  store i64 %1127, i64* %55, align 8, !noalias !2
  store i64 54, i64* %140, align 8, !noalias !2
  %1130 = and i64 %1126, 1
  %1131 = icmp eq i64 %1130, 0
  br i1 %1131, label %1139, label %1132

1132:                                             ; preds = %1129
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1126) #11, !noalias !2
  %1133 = load i64, i64* %140, align 8, !noalias !2
  br label %1134

1134:                                             ; preds = %1132, %1124
  %1135 = phi i64 [ %1126, %1124 ], [ %1133, %1132 ]
  %1136 = and i64 %1135, 1
  %1137 = icmp eq i64 %1136, 0
  br i1 %1137, label %1139, label %1138

1138:                                             ; preds = %1134
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1135) #11, !noalias !2
  br label %1139

1139:                                             ; preds = %1138, %1134, %1129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #11, !noalias !2
  br label %1140

1140:                                             ; preds = %1139, %1123
  %1141 = load i8, i8* %135, align 1, !noalias !2
  %1142 = icmp slt i8 %1141, 0
  br i1 %1142, label %1143, label %1145

1143:                                             ; preds = %1140
  %1144 = load i8*, i8** %141, align 8, !noalias !2
  call void @_ZdlPv(i8* %1144) #13, !noalias !2
  br label %1145

1145:                                             ; preds = %1143, %1140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #11, !noalias !2
  br label %244

1146:                                             ; preds = %1028
  switch i32 %909, label %1633 [
    i32 92, label %1147
    i32 41, label %1390
    i32 40, label %1395
  ]

1147:                                             ; preds = %1146
  %1148 = load i64, i64* %30, align 8, !noalias !2
  %1149 = add i64 %1148, -1
  %1150 = icmp eq i64 %908, %1149
  br i1 %1150, label %1151, label %1265

1151:                                             ; preds = %1147
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11, !noalias !19
  store i64 %908, i64* %78, align 8, !noalias !19
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %79, align 8, !noalias !19
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %21, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i64 32, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %77, i64 1) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11, !noalias !19
  %1152 = load i8, i8* %108, align 1, !noalias !2
  %1153 = icmp slt i8 %1152, 0
  br i1 %1153, label %1156, label %1154

1154:                                             ; preds = %1151
  %1155 = zext i8 %1152 to i64
  br label %1161

1156:                                             ; preds = %1151
  %1157 = load i64, i64* %110, align 8, !noalias !2
  %1158 = load i64, i64* %111, align 8, !noalias !2
  %1159 = icmp sgt i64 %1158, -1
  br i1 %1159, label %1161, label %1160, !prof !6

1160:                                             ; preds = %1156
  call void @llvm.trap() #11, !noalias !2
  unreachable

1161:                                             ; preds = %1156, %1154
  %1162 = phi i64 [ %1157, %1156 ], [ %109, %1154 ]
  %1163 = phi i64 [ %1158, %1156 ], [ %1155, %1154 ]
  %1164 = load i64, i64* %54, align 8, !noalias !2
  %1165 = load i32, i32* %31, align 8, !noalias !2
  %1166 = icmp eq i32 %1165, 1
  br i1 %1166, label %1167, label %1243

1167:                                             ; preds = %1161
  %1168 = sub i64 %901, %1164
  %1169 = load i64, i64* %30, align 8, !noalias !2
  %1170 = icmp ult i64 %1169, %1164
  br i1 %1170, label %1171, label %1172, !prof !5

1171:                                             ; preds = %1167
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1172:                                             ; preds = %1167
  %1173 = sub i64 %1169, %1164
  %1174 = icmp ugt i64 %1173, %1168
  %1175 = select i1 %1174, i64 %1168, i64 %1173
  %1176 = icmp sgt i64 %1175, -1
  br i1 %1176, label %1178, label %1177, !prof !6

1177:                                             ; preds = %1172
  call void @llvm.trap() #11, !noalias !2
  unreachable

1178:                                             ; preds = %1172
  %1179 = load i8*, i8** %29, align 8, !noalias !2
  %1180 = getelementptr inbounds i8, i8* %1179, i64 %1164
  %1181 = ptrtoint i8* %1180 to i64
  %1182 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1183 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1184 = icmp ult %"struct.liburlpattern::Token"* %1182, %1183
  %1185 = ptrtoint %"struct.liburlpattern::Token"* %1183 to i64
  br i1 %1184, label %1186, label %1194

1186:                                             ; preds = %1178
  %1187 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1182, i64 0, i32 0
  store i32 9, i32* %1187, align 8, !noalias !2
  %1188 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1182, i64 0, i32 1
  store i64 %1164, i64* %1188, align 8, !noalias !2
  %1189 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1182, i64 0, i32 2, i32 0
  %1190 = bitcast i8** %1189 to i64*
  store i64 %1181, i64* %1190, align 8, !noalias !2
  %1191 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1182, i64 0, i32 2, i32 1
  store i64 %1175, i64* %1191, align 8, !noalias !2
  %1192 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1182, i64 1
  %1193 = ptrtoint %"struct.liburlpattern::Token"* %1192 to i64
  store i64 %1193, i64* %73, align 8, !noalias !2
  br label %1242

1194:                                             ; preds = %1178
  %1195 = ptrtoint %"struct.liburlpattern::Token"* %1182 to i64
  %1196 = load i64, i64* %37, align 8, !noalias !2
  %1197 = sub i64 %1195, %1196
  %1198 = ashr exact i64 %1197, 5
  %1199 = add nsw i64 %1198, 1
  %1200 = icmp ugt i64 %1199, 576460752303423487
  br i1 %1200, label %1201, label %1203

1201:                                             ; preds = %1194
  %1202 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1202) #12, !noalias !2
  unreachable

1203:                                             ; preds = %1194
  %1204 = sub i64 %1185, %1196
  %1205 = ashr exact i64 %1204, 5
  %1206 = icmp ult i64 %1205, 288230376151711743
  br i1 %1206, label %1207, label %1215

1207:                                             ; preds = %1203
  %1208 = ashr exact i64 %1204, 4
  %1209 = icmp ult i64 %1208, %1199
  %1210 = select i1 %1209, i64 %1199, i64 %1208
  %1211 = icmp eq i64 %1210, 0
  br i1 %1211, label %1220, label %1212

1212:                                             ; preds = %1207
  %1213 = icmp ugt i64 %1210, 576460752303423487
  br i1 %1213, label %1214, label %1215

1214:                                             ; preds = %1212
  call void @abort() #12, !noalias !2
  unreachable

1215:                                             ; preds = %1212, %1203
  %1216 = phi i64 [ %1210, %1212 ], [ 576460752303423487, %1203 ]
  %1217 = shl i64 %1216, 5
  %1218 = call i8* @_Znwm(i64 %1217) #13, !noalias !2
  %1219 = bitcast i8* %1218 to %"struct.liburlpattern::Token"*
  br label %1220

1220:                                             ; preds = %1215, %1207
  %1221 = phi i64 [ %1216, %1215 ], [ 0, %1207 ]
  %1222 = phi i8* [ %1218, %1215 ], [ null, %1207 ]
  %1223 = phi %"struct.liburlpattern::Token"* [ %1219, %1215 ], [ null, %1207 ]
  %1224 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1223, i64 %1198
  %1225 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1223, i64 %1221
  %1226 = ptrtoint %"struct.liburlpattern::Token"* %1225 to i64
  %1227 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1224, i64 0, i32 0
  store i32 9, i32* %1227, align 8, !noalias !2
  %1228 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1223, i64 %1198, i32 1
  store i64 %1164, i64* %1228, align 8, !noalias !2
  %1229 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1223, i64 %1198, i32 2, i32 0
  %1230 = bitcast i8** %1229 to i64*
  store i64 %1181, i64* %1230, align 8, !noalias !2
  %1231 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1223, i64 %1198, i32 2, i32 1
  store i64 %1175, i64* %1231, align 8, !noalias !2
  %1232 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1224, i64 1
  %1233 = ptrtoint %"struct.liburlpattern::Token"* %1232 to i64
  %1234 = ptrtoint %"struct.liburlpattern::Token"* %1223 to i64
  %1235 = icmp sgt i64 %1197, 0
  br i1 %1235, label %1236, label %1238

1236:                                             ; preds = %1220
  %1237 = inttoptr i64 %1196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1222, i8* align 8 %1237, i64 %1197, i1 false) #11, !noalias !2
  br label %1238

1238:                                             ; preds = %1236, %1220
  store i64 %1234, i64* %37, align 8, !noalias !2
  store i64 %1233, i64* %73, align 8, !noalias !2
  store i64 %1226, i64* %36, align 8, !noalias !2
  %1239 = icmp eq i64 %1196, 0
  br i1 %1239, label %1242, label %1240

1240:                                             ; preds = %1238
  %1241 = inttoptr i64 %1196 to i8*
  call void @_ZdlPv(i8* %1241) #13, !noalias !2
  br label %1242

1242:                                             ; preds = %1240, %1238, %1186
  store i64 %901, i64* %54, align 8, !noalias !2
  br label %1259

1243:                                             ; preds = %1161
  %1244 = inttoptr i64 %1162 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %10, i8* %1244, i64 %1163) #11, !noalias !2
  %1245 = load i64, i64* %55, align 8, !noalias !2
  %1246 = load i64, i64* %113, align 8, !noalias !2
  %1247 = icmp eq i64 %1246, %1245
  br i1 %1247, label %1253, label %1248

1248:                                             ; preds = %1243
  store i64 %1246, i64* %55, align 8, !noalias !2
  store i64 54, i64* %113, align 8, !noalias !2
  %1249 = and i64 %1245, 1
  %1250 = icmp eq i64 %1249, 0
  br i1 %1250, label %1258, label %1251

1251:                                             ; preds = %1248
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1245) #11, !noalias !2
  %1252 = load i64, i64* %113, align 8, !noalias !2
  br label %1253

1253:                                             ; preds = %1251, %1243
  %1254 = phi i64 [ %1245, %1243 ], [ %1252, %1251 ]
  %1255 = and i64 %1254, 1
  %1256 = icmp eq i64 %1255, 0
  br i1 %1256, label %1258, label %1257

1257:                                             ; preds = %1253
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1254) #11, !noalias !2
  br label %1258

1258:                                             ; preds = %1257, %1253, %1248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11, !noalias !2
  br label %1259

1259:                                             ; preds = %1258, %1242
  %1260 = load i8, i8* %108, align 1, !noalias !2
  %1261 = icmp slt i8 %1260, 0
  br i1 %1261, label %1262, label %1264

1262:                                             ; preds = %1259
  %1263 = load i8*, i8** %114, align 8, !noalias !2
  call void @_ZdlPv(i8* %1263) #13, !noalias !2
  br label %1264

1264:                                             ; preds = %1262, %1259
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11, !noalias !2
  br label %244

1265:                                             ; preds = %1147
  %1266 = load i64, i64* %56, align 8, !noalias !2
  call fastcc void @_ZN13liburlpattern12_GLOBAL__N_19Tokenizer4NextEv(%"class.liburlpattern::(anonymous namespace)::Tokenizer"* nonnull %27) #11, !noalias !2
  %1267 = load i32, i32* %33, align 8, !noalias !2
  %1268 = icmp ult i32 %1267, 128
  br i1 %1268, label %1386, label %1269

1269:                                             ; preds = %1265
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #11, !noalias !22
  %1270 = zext i32 %1267 to i64
  %1271 = or i64 %1270, -6148914694099828736
  %1272 = inttoptr i64 %1271 to i8*
  store i8* %1272, i8** %60, align 8, !noalias !22
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIiEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %61, align 8, !noalias !22
  store i64 %1266, i64* %63, align 8, !noalias !22
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %64, align 8, !noalias !22
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %22, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i64 0, i64 0), i64 31, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %59, i64 2) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #11, !noalias !22
  %1273 = load i8, i8* %99, align 1, !noalias !2
  %1274 = icmp slt i8 %1273, 0
  br i1 %1274, label %1277, label %1275

1275:                                             ; preds = %1269
  %1276 = zext i8 %1273 to i64
  br label %1282

1277:                                             ; preds = %1269
  %1278 = load i64, i64* %101, align 8, !noalias !2
  %1279 = load i64, i64* %102, align 8, !noalias !2
  %1280 = icmp sgt i64 %1279, -1
  br i1 %1280, label %1282, label %1281, !prof !6

1281:                                             ; preds = %1277
  call void @llvm.trap() #11, !noalias !2
  unreachable

1282:                                             ; preds = %1277, %1275
  %1283 = phi i64 [ %1278, %1277 ], [ %100, %1275 ]
  %1284 = phi i64 [ %1279, %1277 ], [ %1276, %1275 ]
  %1285 = load i64, i64* %54, align 8, !noalias !2
  %1286 = load i32, i32* %31, align 8, !noalias !2
  %1287 = icmp eq i32 %1286, 1
  br i1 %1287, label %1288, label %1364

1288:                                             ; preds = %1282
  %1289 = sub i64 %901, %1285
  %1290 = load i64, i64* %30, align 8, !noalias !2
  %1291 = icmp ult i64 %1290, %1285
  br i1 %1291, label %1292, label %1293, !prof !5

1292:                                             ; preds = %1288
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1293:                                             ; preds = %1288
  %1294 = sub i64 %1290, %1285
  %1295 = icmp ugt i64 %1294, %1289
  %1296 = select i1 %1295, i64 %1289, i64 %1294
  %1297 = icmp sgt i64 %1296, -1
  br i1 %1297, label %1299, label %1298, !prof !6

1298:                                             ; preds = %1293
  call void @llvm.trap() #11, !noalias !2
  unreachable

1299:                                             ; preds = %1293
  %1300 = load i8*, i8** %29, align 8, !noalias !2
  %1301 = getelementptr inbounds i8, i8* %1300, i64 %1285
  %1302 = ptrtoint i8* %1301 to i64
  %1303 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1304 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1305 = icmp ult %"struct.liburlpattern::Token"* %1303, %1304
  %1306 = ptrtoint %"struct.liburlpattern::Token"* %1304 to i64
  br i1 %1305, label %1307, label %1315

1307:                                             ; preds = %1299
  %1308 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1303, i64 0, i32 0
  store i32 9, i32* %1308, align 8, !noalias !2
  %1309 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1303, i64 0, i32 1
  store i64 %1285, i64* %1309, align 8, !noalias !2
  %1310 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1303, i64 0, i32 2, i32 0
  %1311 = bitcast i8** %1310 to i64*
  store i64 %1302, i64* %1311, align 8, !noalias !2
  %1312 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1303, i64 0, i32 2, i32 1
  store i64 %1296, i64* %1312, align 8, !noalias !2
  %1313 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1303, i64 1
  %1314 = ptrtoint %"struct.liburlpattern::Token"* %1313 to i64
  store i64 %1314, i64* %73, align 8, !noalias !2
  br label %1363

1315:                                             ; preds = %1299
  %1316 = ptrtoint %"struct.liburlpattern::Token"* %1303 to i64
  %1317 = load i64, i64* %37, align 8, !noalias !2
  %1318 = sub i64 %1316, %1317
  %1319 = ashr exact i64 %1318, 5
  %1320 = add nsw i64 %1319, 1
  %1321 = icmp ugt i64 %1320, 576460752303423487
  br i1 %1321, label %1322, label %1324

1322:                                             ; preds = %1315
  %1323 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1323) #12, !noalias !2
  unreachable

1324:                                             ; preds = %1315
  %1325 = sub i64 %1306, %1317
  %1326 = ashr exact i64 %1325, 5
  %1327 = icmp ult i64 %1326, 288230376151711743
  br i1 %1327, label %1328, label %1336

1328:                                             ; preds = %1324
  %1329 = ashr exact i64 %1325, 4
  %1330 = icmp ult i64 %1329, %1320
  %1331 = select i1 %1330, i64 %1320, i64 %1329
  %1332 = icmp eq i64 %1331, 0
  br i1 %1332, label %1341, label %1333

1333:                                             ; preds = %1328
  %1334 = icmp ugt i64 %1331, 576460752303423487
  br i1 %1334, label %1335, label %1336

1335:                                             ; preds = %1333
  call void @abort() #12, !noalias !2
  unreachable

1336:                                             ; preds = %1333, %1324
  %1337 = phi i64 [ %1331, %1333 ], [ 576460752303423487, %1324 ]
  %1338 = shl i64 %1337, 5
  %1339 = call i8* @_Znwm(i64 %1338) #13, !noalias !2
  %1340 = bitcast i8* %1339 to %"struct.liburlpattern::Token"*
  br label %1341

1341:                                             ; preds = %1336, %1328
  %1342 = phi i64 [ %1337, %1336 ], [ 0, %1328 ]
  %1343 = phi i8* [ %1339, %1336 ], [ null, %1328 ]
  %1344 = phi %"struct.liburlpattern::Token"* [ %1340, %1336 ], [ null, %1328 ]
  %1345 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1344, i64 %1319
  %1346 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1344, i64 %1342
  %1347 = ptrtoint %"struct.liburlpattern::Token"* %1346 to i64
  %1348 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1345, i64 0, i32 0
  store i32 9, i32* %1348, align 8, !noalias !2
  %1349 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1344, i64 %1319, i32 1
  store i64 %1285, i64* %1349, align 8, !noalias !2
  %1350 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1344, i64 %1319, i32 2, i32 0
  %1351 = bitcast i8** %1350 to i64*
  store i64 %1302, i64* %1351, align 8, !noalias !2
  %1352 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1344, i64 %1319, i32 2, i32 1
  store i64 %1296, i64* %1352, align 8, !noalias !2
  %1353 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1345, i64 1
  %1354 = ptrtoint %"struct.liburlpattern::Token"* %1353 to i64
  %1355 = ptrtoint %"struct.liburlpattern::Token"* %1344 to i64
  %1356 = icmp sgt i64 %1318, 0
  br i1 %1356, label %1357, label %1359

1357:                                             ; preds = %1341
  %1358 = inttoptr i64 %1317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1343, i8* align 8 %1358, i64 %1318, i1 false) #11, !noalias !2
  br label %1359

1359:                                             ; preds = %1357, %1341
  store i64 %1355, i64* %37, align 8, !noalias !2
  store i64 %1354, i64* %73, align 8, !noalias !2
  store i64 %1347, i64* %36, align 8, !noalias !2
  %1360 = icmp eq i64 %1317, 0
  br i1 %1360, label %1363, label %1361

1361:                                             ; preds = %1359
  %1362 = inttoptr i64 %1317 to i8*
  call void @_ZdlPv(i8* %1362) #13, !noalias !2
  br label %1363

1363:                                             ; preds = %1361, %1359, %1307
  store i64 %901, i64* %54, align 8, !noalias !2
  br label %1380

1364:                                             ; preds = %1282
  %1365 = inttoptr i64 %1283 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %9, i8* %1365, i64 %1284) #11, !noalias !2
  %1366 = load i64, i64* %55, align 8, !noalias !2
  %1367 = load i64, i64* %104, align 8, !noalias !2
  %1368 = icmp eq i64 %1367, %1366
  br i1 %1368, label %1374, label %1369

1369:                                             ; preds = %1364
  store i64 %1367, i64* %55, align 8, !noalias !2
  store i64 54, i64* %104, align 8, !noalias !2
  %1370 = and i64 %1366, 1
  %1371 = icmp eq i64 %1370, 0
  br i1 %1371, label %1379, label %1372

1372:                                             ; preds = %1369
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1366) #11, !noalias !2
  %1373 = load i64, i64* %104, align 8, !noalias !2
  br label %1374

1374:                                             ; preds = %1372, %1364
  %1375 = phi i64 [ %1366, %1364 ], [ %1373, %1372 ]
  %1376 = and i64 %1375, 1
  %1377 = icmp eq i64 %1376, 0
  br i1 %1377, label %1379, label %1378

1378:                                             ; preds = %1374
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1375) #11, !noalias !2
  br label %1379

1379:                                             ; preds = %1378, %1374, %1369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11, !noalias !2
  br label %1380

1380:                                             ; preds = %1379, %1363
  %1381 = load i8, i8* %99, align 1, !noalias !2
  %1382 = icmp slt i8 %1381, 0
  br i1 %1382, label %1383, label %1385

1383:                                             ; preds = %1380
  %1384 = load i8*, i8** %105, align 8, !noalias !2
  call void @_ZdlPv(i8* %1384) #13, !noalias !2
  br label %1385

1385:                                             ; preds = %1383, %1380
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #11, !noalias !2
  br label %244

1386:                                             ; preds = %1265
  %1387 = load i64, i64* %56, align 8, !noalias !2
  %1388 = load i64, i64* %30, align 8, !noalias !2
  %1389 = icmp ult i64 %1387, %1388
  br i1 %1389, label %907, label %1638

1390:                                             ; preds = %1146
  %1391 = add i64 %905, -1
  %1392 = icmp eq i64 %1391, 0
  br i1 %1392, label %1393, label %1633

1393:                                             ; preds = %1390
  %1394 = load i64, i64* %56, align 8, !noalias !2
  br label %1757

1395:                                             ; preds = %1146
  %1396 = add i64 %905, 1
  %1397 = load i64, i64* %30, align 8, !noalias !2
  %1398 = add i64 %1397, -1
  %1399 = icmp eq i64 %908, %1398
  br i1 %1399, label %1400, label %1514

1400:                                             ; preds = %1395
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11, !noalias !25
  store i64 %908, i64* %78, align 8, !noalias !25
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %79, align 8, !noalias !25
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %23, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0), i64 23, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %77, i64 1) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11, !noalias !25
  %1401 = load i8, i8* %90, align 1, !noalias !2
  %1402 = icmp slt i8 %1401, 0
  br i1 %1402, label %1405, label %1403

1403:                                             ; preds = %1400
  %1404 = zext i8 %1401 to i64
  br label %1410

1405:                                             ; preds = %1400
  %1406 = load i64, i64* %92, align 8, !noalias !2
  %1407 = load i64, i64* %93, align 8, !noalias !2
  %1408 = icmp sgt i64 %1407, -1
  br i1 %1408, label %1410, label %1409, !prof !6

1409:                                             ; preds = %1405
  call void @llvm.trap() #11, !noalias !2
  unreachable

1410:                                             ; preds = %1405, %1403
  %1411 = phi i64 [ %1406, %1405 ], [ %91, %1403 ]
  %1412 = phi i64 [ %1407, %1405 ], [ %1404, %1403 ]
  %1413 = load i64, i64* %54, align 8, !noalias !2
  %1414 = load i32, i32* %31, align 8, !noalias !2
  %1415 = icmp eq i32 %1414, 1
  br i1 %1415, label %1416, label %1492

1416:                                             ; preds = %1410
  %1417 = sub i64 %901, %1413
  %1418 = load i64, i64* %30, align 8, !noalias !2
  %1419 = icmp ult i64 %1418, %1413
  br i1 %1419, label %1420, label %1421, !prof !5

1420:                                             ; preds = %1416
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1421:                                             ; preds = %1416
  %1422 = sub i64 %1418, %1413
  %1423 = icmp ugt i64 %1422, %1417
  %1424 = select i1 %1423, i64 %1417, i64 %1422
  %1425 = icmp sgt i64 %1424, -1
  br i1 %1425, label %1427, label %1426, !prof !6

1426:                                             ; preds = %1421
  call void @llvm.trap() #11, !noalias !2
  unreachable

1427:                                             ; preds = %1421
  %1428 = load i8*, i8** %29, align 8, !noalias !2
  %1429 = getelementptr inbounds i8, i8* %1428, i64 %1413
  %1430 = ptrtoint i8* %1429 to i64
  %1431 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1432 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1433 = icmp ult %"struct.liburlpattern::Token"* %1431, %1432
  %1434 = ptrtoint %"struct.liburlpattern::Token"* %1432 to i64
  br i1 %1433, label %1435, label %1443

1435:                                             ; preds = %1427
  %1436 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1431, i64 0, i32 0
  store i32 9, i32* %1436, align 8, !noalias !2
  %1437 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1431, i64 0, i32 1
  store i64 %1413, i64* %1437, align 8, !noalias !2
  %1438 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1431, i64 0, i32 2, i32 0
  %1439 = bitcast i8** %1438 to i64*
  store i64 %1430, i64* %1439, align 8, !noalias !2
  %1440 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1431, i64 0, i32 2, i32 1
  store i64 %1424, i64* %1440, align 8, !noalias !2
  %1441 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1431, i64 1
  %1442 = ptrtoint %"struct.liburlpattern::Token"* %1441 to i64
  store i64 %1442, i64* %73, align 8, !noalias !2
  br label %1491

1443:                                             ; preds = %1427
  %1444 = ptrtoint %"struct.liburlpattern::Token"* %1431 to i64
  %1445 = load i64, i64* %37, align 8
  %1446 = sub i64 %1444, %1445
  %1447 = ashr exact i64 %1446, 5
  %1448 = add nsw i64 %1447, 1
  %1449 = icmp ugt i64 %1448, 576460752303423487
  br i1 %1449, label %1450, label %1452

1450:                                             ; preds = %1443
  %1451 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1451) #12
  unreachable

1452:                                             ; preds = %1443
  %1453 = sub i64 %1434, %1445
  %1454 = ashr exact i64 %1453, 5
  %1455 = icmp ult i64 %1454, 288230376151711743
  br i1 %1455, label %1456, label %1464

1456:                                             ; preds = %1452
  %1457 = ashr exact i64 %1453, 4
  %1458 = icmp ult i64 %1457, %1448
  %1459 = select i1 %1458, i64 %1448, i64 %1457
  %1460 = icmp eq i64 %1459, 0
  br i1 %1460, label %1469, label %1461

1461:                                             ; preds = %1456
  %1462 = icmp ugt i64 %1459, 576460752303423487
  br i1 %1462, label %1463, label %1464

1463:                                             ; preds = %1461
  call void @abort() #12
  unreachable

1464:                                             ; preds = %1461, %1452
  %1465 = phi i64 [ %1459, %1461 ], [ 576460752303423487, %1452 ]
  %1466 = shl i64 %1465, 5
  %1467 = call i8* @_Znwm(i64 %1466) #13
  %1468 = bitcast i8* %1467 to %"struct.liburlpattern::Token"*
  br label %1469

1469:                                             ; preds = %1464, %1456
  %1470 = phi i64 [ %1465, %1464 ], [ 0, %1456 ]
  %1471 = phi i8* [ %1467, %1464 ], [ null, %1456 ]
  %1472 = phi %"struct.liburlpattern::Token"* [ %1468, %1464 ], [ null, %1456 ]
  %1473 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1472, i64 %1447
  %1474 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1472, i64 %1470
  %1475 = ptrtoint %"struct.liburlpattern::Token"* %1474 to i64
  %1476 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1473, i64 0, i32 0
  store i32 9, i32* %1476, align 8
  %1477 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1472, i64 %1447, i32 1
  store i64 %1413, i64* %1477, align 8
  %1478 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1472, i64 %1447, i32 2, i32 0
  %1479 = bitcast i8** %1478 to i64*
  store i64 %1430, i64* %1479, align 8
  %1480 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1472, i64 %1447, i32 2, i32 1
  store i64 %1424, i64* %1480, align 8
  %1481 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1473, i64 1
  %1482 = ptrtoint %"struct.liburlpattern::Token"* %1481 to i64
  %1483 = ptrtoint %"struct.liburlpattern::Token"* %1472 to i64
  %1484 = icmp sgt i64 %1446, 0
  br i1 %1484, label %1485, label %1487

1485:                                             ; preds = %1469
  %1486 = inttoptr i64 %1445 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1471, i8* align 8 %1486, i64 %1446, i1 false) #11
  br label %1487

1487:                                             ; preds = %1485, %1469
  store i64 %1483, i64* %37, align 8
  store i64 %1482, i64* %73, align 8
  store i64 %1475, i64* %36, align 8
  %1488 = icmp eq i64 %1445, 0
  br i1 %1488, label %1491, label %1489

1489:                                             ; preds = %1487
  %1490 = inttoptr i64 %1445 to i8*
  call void @_ZdlPv(i8* %1490) #13
  br label %1491

1491:                                             ; preds = %1489, %1487, %1435
  store i64 %901, i64* %54, align 8, !noalias !2
  br label %1508

1492:                                             ; preds = %1410
  %1493 = inttoptr i64 %1411 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %8, i8* %1493, i64 %1412) #11, !noalias !2
  %1494 = load i64, i64* %55, align 8, !noalias !2
  %1495 = load i64, i64* %95, align 8, !noalias !2
  %1496 = icmp eq i64 %1495, %1494
  br i1 %1496, label %1502, label %1497

1497:                                             ; preds = %1492
  store i64 %1495, i64* %55, align 8, !noalias !2
  store i64 54, i64* %95, align 8, !noalias !2
  %1498 = and i64 %1494, 1
  %1499 = icmp eq i64 %1498, 0
  br i1 %1499, label %1507, label %1500

1500:                                             ; preds = %1497
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1494) #11, !noalias !2
  %1501 = load i64, i64* %95, align 8, !noalias !2
  br label %1502

1502:                                             ; preds = %1500, %1492
  %1503 = phi i64 [ %1494, %1492 ], [ %1501, %1500 ]
  %1504 = and i64 %1503, 1
  %1505 = icmp eq i64 %1504, 0
  br i1 %1505, label %1507, label %1506

1506:                                             ; preds = %1502
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1503) #11, !noalias !2
  br label %1507

1507:                                             ; preds = %1506, %1502, %1497
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11, !noalias !2
  br label %1508

1508:                                             ; preds = %1507, %1491
  %1509 = load i8, i8* %90, align 1, !noalias !2
  %1510 = icmp slt i8 %1509, 0
  br i1 %1510, label %1511, label %1513

1511:                                             ; preds = %1508
  %1512 = load i8*, i8** %96, align 8, !noalias !2
  call void @_ZdlPv(i8* %1512) #13, !noalias !2
  br label %1513

1513:                                             ; preds = %1511, %1508
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #11, !noalias !2
  br label %244

1514:                                             ; preds = %1395
  %1515 = load i64, i64* %56, align 8, !noalias !2
  call fastcc void @_ZN13liburlpattern12_GLOBAL__N_19Tokenizer4NextEv(%"class.liburlpattern::(anonymous namespace)::Tokenizer"* nonnull %27) #11, !noalias !2
  %1516 = load i32, i32* %33, align 8, !noalias !2
  %1517 = icmp eq i32 %1516, 63
  br i1 %1517, label %1631, label %1518

1518:                                             ; preds = %1514
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11, !noalias !28
  store i64 %1515, i64* %78, align 8, !noalias !28
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %79, align 8, !noalias !28
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i64 0, i64 0), i64 47, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %77, i64 1) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11, !noalias !28
  %1519 = load i8, i8* %81, align 1, !noalias !2
  %1520 = icmp slt i8 %1519, 0
  br i1 %1520, label %1523, label %1521

1521:                                             ; preds = %1518
  %1522 = zext i8 %1519 to i64
  br label %1528

1523:                                             ; preds = %1518
  %1524 = load i64, i64* %83, align 8, !noalias !2
  %1525 = load i64, i64* %84, align 8, !noalias !2
  %1526 = icmp sgt i64 %1525, -1
  br i1 %1526, label %1528, label %1527, !prof !6

1527:                                             ; preds = %1523
  call void @llvm.trap() #11, !noalias !2
  unreachable

1528:                                             ; preds = %1523, %1521
  %1529 = phi i64 [ %1524, %1523 ], [ %82, %1521 ]
  %1530 = phi i64 [ %1525, %1523 ], [ %1522, %1521 ]
  %1531 = load i64, i64* %54, align 8, !noalias !2
  %1532 = load i32, i32* %31, align 8, !noalias !2
  %1533 = icmp eq i32 %1532, 1
  br i1 %1533, label %1534, label %1610

1534:                                             ; preds = %1528
  %1535 = sub i64 %901, %1531
  %1536 = load i64, i64* %30, align 8, !noalias !2
  %1537 = icmp ult i64 %1536, %1531
  br i1 %1537, label %1538, label %1539, !prof !5

1538:                                             ; preds = %1534
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1539:                                             ; preds = %1534
  %1540 = sub i64 %1536, %1531
  %1541 = icmp ugt i64 %1540, %1535
  %1542 = select i1 %1541, i64 %1535, i64 %1540
  %1543 = icmp sgt i64 %1542, -1
  br i1 %1543, label %1545, label %1544, !prof !6

1544:                                             ; preds = %1539
  call void @llvm.trap() #11, !noalias !2
  unreachable

1545:                                             ; preds = %1539
  %1546 = load i8*, i8** %29, align 8, !noalias !2
  %1547 = getelementptr inbounds i8, i8* %1546, i64 %1531
  %1548 = ptrtoint i8* %1547 to i64
  %1549 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1550 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1551 = icmp ult %"struct.liburlpattern::Token"* %1549, %1550
  %1552 = ptrtoint %"struct.liburlpattern::Token"* %1550 to i64
  br i1 %1551, label %1553, label %1561

1553:                                             ; preds = %1545
  %1554 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1549, i64 0, i32 0
  store i32 9, i32* %1554, align 8, !noalias !2
  %1555 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1549, i64 0, i32 1
  store i64 %1531, i64* %1555, align 8, !noalias !2
  %1556 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1549, i64 0, i32 2, i32 0
  %1557 = bitcast i8** %1556 to i64*
  store i64 %1548, i64* %1557, align 8, !noalias !2
  %1558 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1549, i64 0, i32 2, i32 1
  store i64 %1542, i64* %1558, align 8, !noalias !2
  %1559 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1549, i64 1
  %1560 = ptrtoint %"struct.liburlpattern::Token"* %1559 to i64
  store i64 %1560, i64* %73, align 8, !noalias !2
  br label %1609

1561:                                             ; preds = %1545
  %1562 = ptrtoint %"struct.liburlpattern::Token"* %1549 to i64
  %1563 = load i64, i64* %37, align 8
  %1564 = sub i64 %1562, %1563
  %1565 = ashr exact i64 %1564, 5
  %1566 = add nsw i64 %1565, 1
  %1567 = icmp ugt i64 %1566, 576460752303423487
  br i1 %1567, label %1568, label %1570

1568:                                             ; preds = %1561
  %1569 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1569) #12
  unreachable

1570:                                             ; preds = %1561
  %1571 = sub i64 %1552, %1563
  %1572 = ashr exact i64 %1571, 5
  %1573 = icmp ult i64 %1572, 288230376151711743
  br i1 %1573, label %1574, label %1582

1574:                                             ; preds = %1570
  %1575 = ashr exact i64 %1571, 4
  %1576 = icmp ult i64 %1575, %1566
  %1577 = select i1 %1576, i64 %1566, i64 %1575
  %1578 = icmp eq i64 %1577, 0
  br i1 %1578, label %1587, label %1579

1579:                                             ; preds = %1574
  %1580 = icmp ugt i64 %1577, 576460752303423487
  br i1 %1580, label %1581, label %1582

1581:                                             ; preds = %1579
  call void @abort() #12
  unreachable

1582:                                             ; preds = %1579, %1570
  %1583 = phi i64 [ %1577, %1579 ], [ 576460752303423487, %1570 ]
  %1584 = shl i64 %1583, 5
  %1585 = call i8* @_Znwm(i64 %1584) #13
  %1586 = bitcast i8* %1585 to %"struct.liburlpattern::Token"*
  br label %1587

1587:                                             ; preds = %1582, %1574
  %1588 = phi i64 [ %1583, %1582 ], [ 0, %1574 ]
  %1589 = phi i8* [ %1585, %1582 ], [ null, %1574 ]
  %1590 = phi %"struct.liburlpattern::Token"* [ %1586, %1582 ], [ null, %1574 ]
  %1591 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1590, i64 %1565
  %1592 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1590, i64 %1588
  %1593 = ptrtoint %"struct.liburlpattern::Token"* %1592 to i64
  %1594 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1591, i64 0, i32 0
  store i32 9, i32* %1594, align 8
  %1595 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1590, i64 %1565, i32 1
  store i64 %1531, i64* %1595, align 8
  %1596 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1590, i64 %1565, i32 2, i32 0
  %1597 = bitcast i8** %1596 to i64*
  store i64 %1548, i64* %1597, align 8
  %1598 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1590, i64 %1565, i32 2, i32 1
  store i64 %1542, i64* %1598, align 8
  %1599 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1591, i64 1
  %1600 = ptrtoint %"struct.liburlpattern::Token"* %1599 to i64
  %1601 = ptrtoint %"struct.liburlpattern::Token"* %1590 to i64
  %1602 = icmp sgt i64 %1564, 0
  br i1 %1602, label %1603, label %1605

1603:                                             ; preds = %1587
  %1604 = inttoptr i64 %1563 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1589, i8* align 8 %1604, i64 %1564, i1 false) #11
  br label %1605

1605:                                             ; preds = %1603, %1587
  store i64 %1601, i64* %37, align 8
  store i64 %1600, i64* %73, align 8
  store i64 %1593, i64* %36, align 8
  %1606 = icmp eq i64 %1563, 0
  br i1 %1606, label %1609, label %1607

1607:                                             ; preds = %1605
  %1608 = inttoptr i64 %1563 to i8*
  call void @_ZdlPv(i8* %1608) #13
  br label %1609

1609:                                             ; preds = %1607, %1605, %1553
  store i64 %901, i64* %54, align 8, !noalias !2
  br label %1626

1610:                                             ; preds = %1528
  %1611 = inttoptr i64 %1529 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %7, i8* %1611, i64 %1530) #11, !noalias !2
  %1612 = load i64, i64* %55, align 8, !noalias !2
  %1613 = load i64, i64* %86, align 8, !noalias !2
  %1614 = icmp eq i64 %1613, %1612
  br i1 %1614, label %1620, label %1615

1615:                                             ; preds = %1610
  store i64 %1613, i64* %55, align 8, !noalias !2
  store i64 54, i64* %86, align 8, !noalias !2
  %1616 = and i64 %1612, 1
  %1617 = icmp eq i64 %1616, 0
  br i1 %1617, label %1625, label %1618

1618:                                             ; preds = %1615
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1612) #11, !noalias !2
  %1619 = load i64, i64* %86, align 8, !noalias !2
  br label %1620

1620:                                             ; preds = %1618, %1610
  %1621 = phi i64 [ %1612, %1610 ], [ %1619, %1618 ]
  %1622 = and i64 %1621, 1
  %1623 = icmp eq i64 %1622, 0
  br i1 %1623, label %1625, label %1624

1624:                                             ; preds = %1620
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1621) #11, !noalias !2
  br label %1625

1625:                                             ; preds = %1624, %1620, %1615
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #11, !noalias !2
  br label %1626

1626:                                             ; preds = %1625, %1609
  %1627 = load i8, i8* %81, align 1, !noalias !2
  %1628 = icmp slt i8 %1627, 0
  br i1 %1628, label %1629, label %1632

1629:                                             ; preds = %1626
  %1630 = load i8*, i8** %87, align 8, !noalias !2
  call void @_ZdlPv(i8* %1630) #13, !noalias !2
  br label %1632

1631:                                             ; preds = %1514
  store i64 %1515, i64* %56, align 8, !noalias !2
  br label %1633

1632:                                             ; preds = %1629, %1626
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11, !noalias !2
  br label %244

1633:                                             ; preds = %1146, %1631, %1390
  %1634 = phi i64 [ %1391, %1390 ], [ %1396, %1631 ], [ %905, %1146 ]
  %1635 = load i64, i64* %56, align 8, !noalias !2
  %1636 = load i64, i64* %30, align 8, !noalias !2
  %1637 = icmp ult i64 %1635, %1636
  br i1 %1637, label %904, label %1638

1638:                                             ; preds = %1633, %1386
  %1639 = phi i64 [ %1387, %1386 ], [ %1635, %1633 ]
  %1640 = phi i64 [ %905, %1386 ], [ %1634, %1633 ]
  %1641 = icmp eq i64 %1640, 0
  br i1 %1641, label %1757, label %1642

1642:                                             ; preds = %1638, %900
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11, !noalias !31
  %1643 = load i64, i64* %54, align 8, !noalias !31
  store i64 %1643, i64* %78, align 8, !noalias !31
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %79, align 8, !noalias !31
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0), i64 23, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %77, i64 1) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11, !noalias !31
  %1644 = load i8, i8* %117, align 1, !noalias !2
  %1645 = icmp slt i8 %1644, 0
  br i1 %1645, label %1648, label %1646

1646:                                             ; preds = %1642
  %1647 = zext i8 %1644 to i64
  br label %1653

1648:                                             ; preds = %1642
  %1649 = load i64, i64* %119, align 8, !noalias !2
  %1650 = load i64, i64* %120, align 8, !noalias !2
  %1651 = icmp sgt i64 %1650, -1
  br i1 %1651, label %1653, label %1652, !prof !6

1652:                                             ; preds = %1648
  call void @llvm.trap() #11, !noalias !2
  unreachable

1653:                                             ; preds = %1648, %1646
  %1654 = phi i64 [ %1649, %1648 ], [ %118, %1646 ]
  %1655 = phi i64 [ %1650, %1648 ], [ %1647, %1646 ]
  %1656 = load i64, i64* %54, align 8, !noalias !2
  %1657 = load i32, i32* %31, align 8, !noalias !2
  %1658 = icmp eq i32 %1657, 1
  br i1 %1658, label %1659, label %1735

1659:                                             ; preds = %1653
  %1660 = sub i64 %901, %1656
  %1661 = load i64, i64* %30, align 8, !noalias !2
  %1662 = icmp ult i64 %1661, %1656
  br i1 %1662, label %1663, label %1664, !prof !5

1663:                                             ; preds = %1659
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1664:                                             ; preds = %1659
  %1665 = sub i64 %1661, %1656
  %1666 = icmp ugt i64 %1665, %1660
  %1667 = select i1 %1666, i64 %1660, i64 %1665
  %1668 = icmp sgt i64 %1667, -1
  br i1 %1668, label %1670, label %1669, !prof !6

1669:                                             ; preds = %1664
  call void @llvm.trap() #11, !noalias !2
  unreachable

1670:                                             ; preds = %1664
  %1671 = load i8*, i8** %29, align 8, !noalias !2
  %1672 = getelementptr inbounds i8, i8* %1671, i64 %1656
  %1673 = ptrtoint i8* %1672 to i64
  %1674 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1675 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1676 = icmp ult %"struct.liburlpattern::Token"* %1674, %1675
  %1677 = ptrtoint %"struct.liburlpattern::Token"* %1675 to i64
  br i1 %1676, label %1678, label %1686

1678:                                             ; preds = %1670
  %1679 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1674, i64 0, i32 0
  store i32 9, i32* %1679, align 8, !noalias !2
  %1680 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1674, i64 0, i32 1
  store i64 %1656, i64* %1680, align 8, !noalias !2
  %1681 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1674, i64 0, i32 2, i32 0
  %1682 = bitcast i8** %1681 to i64*
  store i64 %1673, i64* %1682, align 8, !noalias !2
  %1683 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1674, i64 0, i32 2, i32 1
  store i64 %1667, i64* %1683, align 8, !noalias !2
  %1684 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1674, i64 1
  %1685 = ptrtoint %"struct.liburlpattern::Token"* %1684 to i64
  store i64 %1685, i64* %73, align 8, !noalias !2
  br label %1734

1686:                                             ; preds = %1670
  %1687 = ptrtoint %"struct.liburlpattern::Token"* %1674 to i64
  %1688 = load i64, i64* %37, align 8
  %1689 = sub i64 %1687, %1688
  %1690 = ashr exact i64 %1689, 5
  %1691 = add nsw i64 %1690, 1
  %1692 = icmp ugt i64 %1691, 576460752303423487
  br i1 %1692, label %1693, label %1695

1693:                                             ; preds = %1686
  %1694 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1694) #12
  unreachable

1695:                                             ; preds = %1686
  %1696 = sub i64 %1677, %1688
  %1697 = ashr exact i64 %1696, 5
  %1698 = icmp ult i64 %1697, 288230376151711743
  br i1 %1698, label %1699, label %1707

1699:                                             ; preds = %1695
  %1700 = ashr exact i64 %1696, 4
  %1701 = icmp ult i64 %1700, %1691
  %1702 = select i1 %1701, i64 %1691, i64 %1700
  %1703 = icmp eq i64 %1702, 0
  br i1 %1703, label %1712, label %1704

1704:                                             ; preds = %1699
  %1705 = icmp ugt i64 %1702, 576460752303423487
  br i1 %1705, label %1706, label %1707

1706:                                             ; preds = %1704
  call void @abort() #12
  unreachable

1707:                                             ; preds = %1704, %1695
  %1708 = phi i64 [ %1702, %1704 ], [ 576460752303423487, %1695 ]
  %1709 = shl i64 %1708, 5
  %1710 = call i8* @_Znwm(i64 %1709) #13
  %1711 = bitcast i8* %1710 to %"struct.liburlpattern::Token"*
  br label %1712

1712:                                             ; preds = %1707, %1699
  %1713 = phi i64 [ %1708, %1707 ], [ 0, %1699 ]
  %1714 = phi i8* [ %1710, %1707 ], [ null, %1699 ]
  %1715 = phi %"struct.liburlpattern::Token"* [ %1711, %1707 ], [ null, %1699 ]
  %1716 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1715, i64 %1690
  %1717 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1715, i64 %1713
  %1718 = ptrtoint %"struct.liburlpattern::Token"* %1717 to i64
  %1719 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1716, i64 0, i32 0
  store i32 9, i32* %1719, align 8
  %1720 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1715, i64 %1690, i32 1
  store i64 %1656, i64* %1720, align 8
  %1721 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1715, i64 %1690, i32 2, i32 0
  %1722 = bitcast i8** %1721 to i64*
  store i64 %1673, i64* %1722, align 8
  %1723 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1715, i64 %1690, i32 2, i32 1
  store i64 %1667, i64* %1723, align 8
  %1724 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1716, i64 1
  %1725 = ptrtoint %"struct.liburlpattern::Token"* %1724 to i64
  %1726 = ptrtoint %"struct.liburlpattern::Token"* %1715 to i64
  %1727 = icmp sgt i64 %1689, 0
  br i1 %1727, label %1728, label %1730

1728:                                             ; preds = %1712
  %1729 = inttoptr i64 %1688 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1714, i8* align 8 %1729, i64 %1689, i1 false) #11
  br label %1730

1730:                                             ; preds = %1728, %1712
  store i64 %1726, i64* %37, align 8
  store i64 %1725, i64* %73, align 8
  store i64 %1718, i64* %36, align 8
  %1731 = icmp eq i64 %1688, 0
  br i1 %1731, label %1734, label %1732

1732:                                             ; preds = %1730
  %1733 = inttoptr i64 %1688 to i8*
  call void @_ZdlPv(i8* %1733) #13
  br label %1734

1734:                                             ; preds = %1732, %1730, %1678
  store i64 %901, i64* %54, align 8, !noalias !2
  br label %1751

1735:                                             ; preds = %1653
  %1736 = inttoptr i64 %1654 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %6, i8* %1736, i64 %1655) #11, !noalias !2
  %1737 = load i64, i64* %55, align 8, !noalias !2
  %1738 = load i64, i64* %122, align 8, !noalias !2
  %1739 = icmp eq i64 %1738, %1737
  br i1 %1739, label %1745, label %1740

1740:                                             ; preds = %1735
  store i64 %1738, i64* %55, align 8, !noalias !2
  store i64 54, i64* %122, align 8, !noalias !2
  %1741 = and i64 %1737, 1
  %1742 = icmp eq i64 %1741, 0
  br i1 %1742, label %1750, label %1743

1743:                                             ; preds = %1740
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1737) #11, !noalias !2
  %1744 = load i64, i64* %122, align 8, !noalias !2
  br label %1745

1745:                                             ; preds = %1743, %1735
  %1746 = phi i64 [ %1737, %1735 ], [ %1744, %1743 ]
  %1747 = and i64 %1746, 1
  %1748 = icmp eq i64 %1747, 0
  br i1 %1748, label %1750, label %1749

1749:                                             ; preds = %1745
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1746) #11, !noalias !2
  br label %1750

1750:                                             ; preds = %1749, %1745, %1740
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #11, !noalias !2
  br label %1751

1751:                                             ; preds = %1750, %1734
  %1752 = load i8, i8* %117, align 1, !noalias !2
  %1753 = icmp slt i8 %1752, 0
  br i1 %1753, label %1754, label %1756

1754:                                             ; preds = %1751
  %1755 = load i8*, i8** %123, align 8, !noalias !2
  call void @_ZdlPv(i8* %1755) #13, !noalias !2
  br label %1756

1756:                                             ; preds = %1754, %1751
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #11, !noalias !2
  br label %244

1757:                                             ; preds = %1638, %1393
  %1758 = phi i64 [ %1394, %1393 ], [ %1639, %1638 ]
  %1759 = xor i64 %901, -1
  %1760 = add i64 %1758, %1759
  %1761 = icmp eq i64 %1760, 0
  br i1 %1761, label %1762, label %1877

1762:                                             ; preds = %1757
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11, !noalias !34
  %1763 = load i64, i64* %54, align 8, !noalias !34
  store i64 %1763, i64* %78, align 8, !noalias !34
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %79, align 8, !noalias !34
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0), i64 20, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %77, i64 1) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11, !noalias !34
  %1764 = load i8, i8* %126, align 1, !noalias !2
  %1765 = icmp slt i8 %1764, 0
  br i1 %1765, label %1768, label %1766

1766:                                             ; preds = %1762
  %1767 = zext i8 %1764 to i64
  br label %1773

1768:                                             ; preds = %1762
  %1769 = load i64, i64* %128, align 8, !noalias !2
  %1770 = load i64, i64* %129, align 8, !noalias !2
  %1771 = icmp sgt i64 %1770, -1
  br i1 %1771, label %1773, label %1772, !prof !6

1772:                                             ; preds = %1768
  call void @llvm.trap() #11, !noalias !2
  unreachable

1773:                                             ; preds = %1768, %1766
  %1774 = phi i64 [ %1769, %1768 ], [ %127, %1766 ]
  %1775 = phi i64 [ %1770, %1768 ], [ %1767, %1766 ]
  %1776 = load i64, i64* %54, align 8, !noalias !2
  %1777 = load i32, i32* %31, align 8, !noalias !2
  %1778 = icmp eq i32 %1777, 1
  br i1 %1778, label %1779, label %1855

1779:                                             ; preds = %1773
  %1780 = sub i64 %901, %1776
  %1781 = load i64, i64* %30, align 8, !noalias !2
  %1782 = icmp ult i64 %1781, %1776
  br i1 %1782, label %1783, label %1784, !prof !5

1783:                                             ; preds = %1779
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1784:                                             ; preds = %1779
  %1785 = sub i64 %1781, %1776
  %1786 = icmp ugt i64 %1785, %1780
  %1787 = select i1 %1786, i64 %1780, i64 %1785
  %1788 = icmp sgt i64 %1787, -1
  br i1 %1788, label %1790, label %1789, !prof !6

1789:                                             ; preds = %1784
  call void @llvm.trap() #11, !noalias !2
  unreachable

1790:                                             ; preds = %1784
  %1791 = load i8*, i8** %29, align 8, !noalias !2
  %1792 = getelementptr inbounds i8, i8* %1791, i64 %1776
  %1793 = ptrtoint i8* %1792 to i64
  %1794 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1795 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1796 = icmp ult %"struct.liburlpattern::Token"* %1794, %1795
  %1797 = ptrtoint %"struct.liburlpattern::Token"* %1795 to i64
  br i1 %1796, label %1798, label %1806

1798:                                             ; preds = %1790
  %1799 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1794, i64 0, i32 0
  store i32 9, i32* %1799, align 8, !noalias !2
  %1800 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1794, i64 0, i32 1
  store i64 %1776, i64* %1800, align 8, !noalias !2
  %1801 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1794, i64 0, i32 2, i32 0
  %1802 = bitcast i8** %1801 to i64*
  store i64 %1793, i64* %1802, align 8, !noalias !2
  %1803 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1794, i64 0, i32 2, i32 1
  store i64 %1787, i64* %1803, align 8, !noalias !2
  %1804 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1794, i64 1
  %1805 = ptrtoint %"struct.liburlpattern::Token"* %1804 to i64
  store i64 %1805, i64* %73, align 8, !noalias !2
  br label %1854

1806:                                             ; preds = %1790
  %1807 = ptrtoint %"struct.liburlpattern::Token"* %1794 to i64
  %1808 = load i64, i64* %37, align 8
  %1809 = sub i64 %1807, %1808
  %1810 = ashr exact i64 %1809, 5
  %1811 = add nsw i64 %1810, 1
  %1812 = icmp ugt i64 %1811, 576460752303423487
  br i1 %1812, label %1813, label %1815

1813:                                             ; preds = %1806
  %1814 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1814) #12
  unreachable

1815:                                             ; preds = %1806
  %1816 = sub i64 %1797, %1808
  %1817 = ashr exact i64 %1816, 5
  %1818 = icmp ult i64 %1817, 288230376151711743
  br i1 %1818, label %1819, label %1827

1819:                                             ; preds = %1815
  %1820 = ashr exact i64 %1816, 4
  %1821 = icmp ult i64 %1820, %1811
  %1822 = select i1 %1821, i64 %1811, i64 %1820
  %1823 = icmp eq i64 %1822, 0
  br i1 %1823, label %1832, label %1824

1824:                                             ; preds = %1819
  %1825 = icmp ugt i64 %1822, 576460752303423487
  br i1 %1825, label %1826, label %1827

1826:                                             ; preds = %1824
  call void @abort() #12
  unreachable

1827:                                             ; preds = %1824, %1815
  %1828 = phi i64 [ %1822, %1824 ], [ 576460752303423487, %1815 ]
  %1829 = shl i64 %1828, 5
  %1830 = call i8* @_Znwm(i64 %1829) #13
  %1831 = bitcast i8* %1830 to %"struct.liburlpattern::Token"*
  br label %1832

1832:                                             ; preds = %1827, %1819
  %1833 = phi i64 [ %1828, %1827 ], [ 0, %1819 ]
  %1834 = phi i8* [ %1830, %1827 ], [ null, %1819 ]
  %1835 = phi %"struct.liburlpattern::Token"* [ %1831, %1827 ], [ null, %1819 ]
  %1836 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1835, i64 %1810
  %1837 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1835, i64 %1833
  %1838 = ptrtoint %"struct.liburlpattern::Token"* %1837 to i64
  %1839 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1836, i64 0, i32 0
  store i32 9, i32* %1839, align 8
  %1840 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1835, i64 %1810, i32 1
  store i64 %1776, i64* %1840, align 8
  %1841 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1835, i64 %1810, i32 2, i32 0
  %1842 = bitcast i8** %1841 to i64*
  store i64 %1793, i64* %1842, align 8
  %1843 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1835, i64 %1810, i32 2, i32 1
  store i64 %1787, i64* %1843, align 8
  %1844 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1836, i64 1
  %1845 = ptrtoint %"struct.liburlpattern::Token"* %1844 to i64
  %1846 = ptrtoint %"struct.liburlpattern::Token"* %1835 to i64
  %1847 = icmp sgt i64 %1809, 0
  br i1 %1847, label %1848, label %1850

1848:                                             ; preds = %1832
  %1849 = inttoptr i64 %1808 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1834, i8* align 8 %1849, i64 %1809, i1 false) #11
  br label %1850

1850:                                             ; preds = %1848, %1832
  store i64 %1846, i64* %37, align 8
  store i64 %1845, i64* %73, align 8
  store i64 %1838, i64* %36, align 8
  %1851 = icmp eq i64 %1808, 0
  br i1 %1851, label %1854, label %1852

1852:                                             ; preds = %1850
  %1853 = inttoptr i64 %1808 to i8*
  call void @_ZdlPv(i8* %1853) #13
  br label %1854

1854:                                             ; preds = %1852, %1850, %1798
  store i64 %901, i64* %54, align 8, !noalias !2
  br label %1871

1855:                                             ; preds = %1773
  %1856 = inttoptr i64 %1774 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #11, !noalias !2
  call void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* nonnull sret %5, i8* %1856, i64 %1775) #11, !noalias !2
  %1857 = load i64, i64* %55, align 8, !noalias !2
  %1858 = load i64, i64* %131, align 8, !noalias !2
  %1859 = icmp eq i64 %1858, %1857
  br i1 %1859, label %1865, label %1860

1860:                                             ; preds = %1855
  store i64 %1858, i64* %55, align 8, !noalias !2
  store i64 54, i64* %131, align 8, !noalias !2
  %1861 = and i64 %1857, 1
  %1862 = icmp eq i64 %1861, 0
  br i1 %1862, label %1870, label %1863

1863:                                             ; preds = %1860
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1857) #11, !noalias !2
  %1864 = load i64, i64* %131, align 8, !noalias !2
  br label %1865

1865:                                             ; preds = %1863, %1855
  %1866 = phi i64 [ %1857, %1855 ], [ %1864, %1863 ]
  %1867 = and i64 %1866, 1
  %1868 = icmp eq i64 %1867, 0
  br i1 %1868, label %1870, label %1869

1869:                                             ; preds = %1865
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %1866) #11, !noalias !2
  br label %1870

1870:                                             ; preds = %1869, %1865, %1860
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #11, !noalias !2
  br label %1871

1871:                                             ; preds = %1870, %1854
  %1872 = load i8, i8* %126, align 1, !noalias !2
  %1873 = icmp slt i8 %1872, 0
  br i1 %1873, label %1874, label %1876

1874:                                             ; preds = %1871
  %1875 = load i8*, i8** %132, align 8, !noalias !2
  call void @_ZdlPv(i8* %1875) #13, !noalias !2
  br label %1876

1876:                                             ; preds = %1874, %1871
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #11, !noalias !2
  br label %244

1877:                                             ; preds = %1757
  %1878 = load i64, i64* %30, align 8, !noalias !2
  %1879 = icmp ult i64 %1878, %901
  br i1 %1879, label %1880, label %1881, !prof !5

1880:                                             ; preds = %1877
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1881:                                             ; preds = %1877
  %1882 = sub i64 %1878, %901
  %1883 = icmp ugt i64 %1882, %1760
  %1884 = select i1 %1883, i64 %1760, i64 %1882
  %1885 = icmp sgt i64 %1884, -1
  br i1 %1885, label %1887, label %1886, !prof !6

1886:                                             ; preds = %1881
  call void @llvm.trap() #11, !noalias !2
  unreachable

1887:                                             ; preds = %1881
  %1888 = load i8*, i8** %29, align 8, !noalias !2
  %1889 = getelementptr inbounds i8, i8* %1888, i64 %901
  %1890 = ptrtoint i8* %1889 to i64
  %1891 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1892 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1893 = icmp ult %"struct.liburlpattern::Token"* %1891, %1892
  %1894 = ptrtoint %"struct.liburlpattern::Token"* %1892 to i64
  br i1 %1893, label %1895, label %1904

1895:                                             ; preds = %1887
  %1896 = load i64, i64* %54, align 8, !noalias !2
  %1897 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1891, i64 0, i32 0
  store i32 2, i32* %1897, align 8, !noalias !2
  %1898 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1891, i64 0, i32 1
  store i64 %1896, i64* %1898, align 8, !noalias !2
  %1899 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1891, i64 0, i32 2, i32 0
  %1900 = bitcast i8** %1899 to i64*
  store i64 %1890, i64* %1900, align 8, !noalias !2
  %1901 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1891, i64 0, i32 2, i32 1
  store i64 %1884, i64* %1901, align 8, !noalias !2
  %1902 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1891, i64 1
  %1903 = ptrtoint %"struct.liburlpattern::Token"* %1902 to i64
  store i64 %1903, i64* %73, align 8, !noalias !2
  br label %1953

1904:                                             ; preds = %1887
  %1905 = ptrtoint %"struct.liburlpattern::Token"* %1891 to i64
  %1906 = load i64, i64* %37, align 8, !noalias !2
  %1907 = sub i64 %1905, %1906
  %1908 = ashr exact i64 %1907, 5
  %1909 = add nsw i64 %1908, 1
  %1910 = icmp ugt i64 %1909, 576460752303423487
  br i1 %1910, label %1911, label %1913

1911:                                             ; preds = %1904
  %1912 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1912) #12, !noalias !2
  unreachable

1913:                                             ; preds = %1904
  %1914 = sub i64 %1894, %1906
  %1915 = ashr exact i64 %1914, 5
  %1916 = icmp ult i64 %1915, 288230376151711743
  br i1 %1916, label %1917, label %1925

1917:                                             ; preds = %1913
  %1918 = ashr exact i64 %1914, 4
  %1919 = icmp ult i64 %1918, %1909
  %1920 = select i1 %1919, i64 %1909, i64 %1918
  %1921 = icmp eq i64 %1920, 0
  br i1 %1921, label %1930, label %1922

1922:                                             ; preds = %1917
  %1923 = icmp ugt i64 %1920, 576460752303423487
  br i1 %1923, label %1924, label %1925

1924:                                             ; preds = %1922
  call void @abort() #12, !noalias !2
  unreachable

1925:                                             ; preds = %1922, %1913
  %1926 = phi i64 [ %1920, %1922 ], [ 576460752303423487, %1913 ]
  %1927 = shl i64 %1926, 5
  %1928 = call i8* @_Znwm(i64 %1927) #13, !noalias !2
  %1929 = bitcast i8* %1928 to %"struct.liburlpattern::Token"*
  br label %1930

1930:                                             ; preds = %1925, %1917
  %1931 = phi i64 [ %1926, %1925 ], [ 0, %1917 ]
  %1932 = phi i8* [ %1928, %1925 ], [ null, %1917 ]
  %1933 = phi %"struct.liburlpattern::Token"* [ %1929, %1925 ], [ null, %1917 ]
  %1934 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1933, i64 %1908
  %1935 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1933, i64 %1931
  %1936 = ptrtoint %"struct.liburlpattern::Token"* %1935 to i64
  %1937 = load i64, i64* %54, align 8, !noalias !2
  %1938 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1934, i64 0, i32 0
  store i32 2, i32* %1938, align 8, !noalias !2
  %1939 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1933, i64 %1908, i32 1
  store i64 %1937, i64* %1939, align 8, !noalias !2
  %1940 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1933, i64 %1908, i32 2, i32 0
  %1941 = bitcast i8** %1940 to i64*
  store i64 %1890, i64* %1941, align 8, !noalias !2
  %1942 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1933, i64 %1908, i32 2, i32 1
  store i64 %1884, i64* %1942, align 8, !noalias !2
  %1943 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1934, i64 1
  %1944 = ptrtoint %"struct.liburlpattern::Token"* %1943 to i64
  %1945 = ptrtoint %"struct.liburlpattern::Token"* %1933 to i64
  %1946 = icmp sgt i64 %1907, 0
  br i1 %1946, label %1947, label %1949

1947:                                             ; preds = %1930
  %1948 = inttoptr i64 %1906 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1932, i8* align 8 %1948, i64 %1907, i1 false) #11, !noalias !2
  br label %1949

1949:                                             ; preds = %1947, %1930
  store i64 %1945, i64* %37, align 8, !noalias !2
  store i64 %1944, i64* %73, align 8, !noalias !2
  store i64 %1936, i64* %36, align 8, !noalias !2
  %1950 = icmp eq i64 %1906, 0
  br i1 %1950, label %1953, label %1951

1951:                                             ; preds = %1949
  %1952 = inttoptr i64 %1906 to i8*
  call void @_ZdlPv(i8* %1952) #13, !noalias !2
  br label %1953

1953:                                             ; preds = %1951, %1949, %1895
  store i64 %1758, i64* %54, align 8, !noalias !2
  br label %244

1954:                                             ; preds = %163
  %1955 = load i64, i64* %56, align 8, !noalias !2
  %1956 = load i64, i64* %54, align 8, !noalias !2
  %1957 = sub i64 %1955, %1956
  %1958 = load i64, i64* %30, align 8, !noalias !2
  %1959 = icmp ult i64 %1958, %1956
  br i1 %1959, label %1960, label %1961, !prof !5

1960:                                             ; preds = %1954
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

1961:                                             ; preds = %1954
  %1962 = sub i64 %1958, %1956
  %1963 = icmp ugt i64 %1962, %1957
  %1964 = select i1 %1963, i64 %1957, i64 %1962
  %1965 = icmp sgt i64 %1964, -1
  br i1 %1965, label %1967, label %1966, !prof !6

1966:                                             ; preds = %1961
  call void @llvm.trap() #11, !noalias !2
  unreachable

1967:                                             ; preds = %1961
  %1968 = load i8*, i8** %29, align 8, !noalias !2
  %1969 = getelementptr inbounds i8, i8* %1968, i64 %1956
  %1970 = ptrtoint i8* %1969 to i64
  %1971 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %72, align 8, !noalias !2
  %1972 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %1973 = icmp ult %"struct.liburlpattern::Token"* %1971, %1972
  %1974 = ptrtoint %"struct.liburlpattern::Token"* %1972 to i64
  br i1 %1973, label %1975, label %1983

1975:                                             ; preds = %1967
  %1976 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1971, i64 0, i32 0
  store i32 4, i32* %1976, align 8, !noalias !2
  %1977 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1971, i64 0, i32 1
  store i64 %1956, i64* %1977, align 8, !noalias !2
  %1978 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1971, i64 0, i32 2, i32 0
  %1979 = bitcast i8** %1978 to i64*
  store i64 %1970, i64* %1979, align 8, !noalias !2
  %1980 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1971, i64 0, i32 2, i32 1
  store i64 %1964, i64* %1980, align 8, !noalias !2
  %1981 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %1971, i64 1
  %1982 = ptrtoint %"struct.liburlpattern::Token"* %1981 to i64
  store i64 %1982, i64* %73, align 8, !noalias !2
  br label %2031

1983:                                             ; preds = %1967
  %1984 = ptrtoint %"struct.liburlpattern::Token"* %1971 to i64
  %1985 = load i64, i64* %37, align 8, !noalias !2
  %1986 = sub i64 %1984, %1985
  %1987 = ashr exact i64 %1986, 5
  %1988 = add nsw i64 %1987, 1
  %1989 = icmp ugt i64 %1988, 576460752303423487
  br i1 %1989, label %1990, label %1992

1990:                                             ; preds = %1983
  %1991 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1991) #12, !noalias !2
  unreachable

1992:                                             ; preds = %1983
  %1993 = sub i64 %1974, %1985
  %1994 = ashr exact i64 %1993, 5
  %1995 = icmp ult i64 %1994, 288230376151711743
  br i1 %1995, label %1996, label %2004

1996:                                             ; preds = %1992
  %1997 = ashr exact i64 %1993, 4
  %1998 = icmp ult i64 %1997, %1988
  %1999 = select i1 %1998, i64 %1988, i64 %1997
  %2000 = icmp eq i64 %1999, 0
  br i1 %2000, label %2009, label %2001

2001:                                             ; preds = %1996
  %2002 = icmp ugt i64 %1999, 576460752303423487
  br i1 %2002, label %2003, label %2004

2003:                                             ; preds = %2001
  call void @abort() #12, !noalias !2
  unreachable

2004:                                             ; preds = %2001, %1992
  %2005 = phi i64 [ %1999, %2001 ], [ 576460752303423487, %1992 ]
  %2006 = shl i64 %2005, 5
  %2007 = call i8* @_Znwm(i64 %2006) #13, !noalias !2
  %2008 = bitcast i8* %2007 to %"struct.liburlpattern::Token"*
  br label %2009

2009:                                             ; preds = %2004, %1996
  %2010 = phi i64 [ %2005, %2004 ], [ 0, %1996 ]
  %2011 = phi i8* [ %2007, %2004 ], [ null, %1996 ]
  %2012 = phi %"struct.liburlpattern::Token"* [ %2008, %2004 ], [ null, %1996 ]
  %2013 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2012, i64 %1987
  %2014 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2012, i64 %2010
  %2015 = ptrtoint %"struct.liburlpattern::Token"* %2014 to i64
  %2016 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2013, i64 0, i32 0
  store i32 4, i32* %2016, align 8, !noalias !2
  %2017 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2012, i64 %1987, i32 1
  store i64 %1956, i64* %2017, align 8, !noalias !2
  %2018 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2012, i64 %1987, i32 2, i32 0
  %2019 = bitcast i8** %2018 to i64*
  store i64 %1970, i64* %2019, align 8, !noalias !2
  %2020 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2012, i64 %1987, i32 2, i32 1
  store i64 %1964, i64* %2020, align 8, !noalias !2
  %2021 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2013, i64 1
  %2022 = ptrtoint %"struct.liburlpattern::Token"* %2021 to i64
  %2023 = ptrtoint %"struct.liburlpattern::Token"* %2012 to i64
  %2024 = icmp sgt i64 %1986, 0
  br i1 %2024, label %2025, label %2027

2025:                                             ; preds = %2009
  %2026 = inttoptr i64 %1985 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2011, i8* align 8 %2026, i64 %1986, i1 false) #11, !noalias !2
  br label %2027

2027:                                             ; preds = %2025, %2009
  store i64 %2023, i64* %37, align 8, !noalias !2
  store i64 %2022, i64* %73, align 8, !noalias !2
  store i64 %2015, i64* %36, align 8, !noalias !2
  %2028 = icmp eq i64 %1985, 0
  br i1 %2028, label %2031, label %2029

2029:                                             ; preds = %2027
  %2030 = inttoptr i64 %1985 to i8*
  call void @_ZdlPv(i8* %2030) #13, !noalias !2
  br label %2031

2031:                                             ; preds = %2029, %2027, %1975
  store i64 %1955, i64* %54, align 8, !noalias !2
  br label %244

2032:                                             ; preds = %244
  br i1 %249, label %2035, label %2033

2033:                                             ; preds = %2032
  %2034 = getelementptr inbounds %"class.absl::StatusOr", %"class.absl::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %248, i64* %2034, align 8, !alias.scope !2
  store i64 54, i64* %55, align 8, !noalias !2
  br label %2124

2035:                                             ; preds = %2032
  %2036 = icmp ult i64 %246, %245
  br i1 %2036, label %2037, label %2038, !prof !5

2037:                                             ; preds = %2035
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0)) #12, !noalias !2
  unreachable

2038:                                             ; preds = %39, %2035
  %2039 = phi i64* [ %41, %39 ], [ %55, %2035 ]
  %2040 = phi i64* [ %40, %39 ], [ %54, %2035 ]
  %2041 = phi i64 [ 0, %39 ], [ %245, %2035 ]
  %2042 = load i8*, i8** %29, align 8, !noalias !2
  %2043 = getelementptr inbounds i8, i8* %2042, i64 %2041
  %2044 = ptrtoint i8* %2043 to i64
  %2045 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 3, i32 0, i32 1
  %2046 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %2045, align 8, !noalias !2
  %2047 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %35, align 8, !noalias !2
  %2048 = icmp ult %"struct.liburlpattern::Token"* %2046, %2047
  %2049 = ptrtoint %"struct.liburlpattern::Token"* %2047 to i64
  br i1 %2048, label %2050, label %2059

2050:                                             ; preds = %2038
  %2051 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2046, i64 0, i32 0
  store i32 8, i32* %2051, align 8, !noalias !2
  %2052 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2046, i64 0, i32 1
  store i64 %2041, i64* %2052, align 8, !noalias !2
  %2053 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2046, i64 0, i32 2, i32 0
  %2054 = bitcast i8** %2053 to i64*
  store i64 %2044, i64* %2054, align 8, !noalias !2
  %2055 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2046, i64 0, i32 2, i32 1
  store i64 0, i64* %2055, align 8, !noalias !2
  %2056 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2046, i64 1
  %2057 = ptrtoint %"struct.liburlpattern::Token"* %2056 to i64
  %2058 = bitcast %"struct.liburlpattern::Token"** %2045 to i64*
  store i64 %2057, i64* %2058, align 8, !noalias !2
  br label %2109

2059:                                             ; preds = %2038
  %2060 = ptrtoint %"struct.liburlpattern::Token"* %2046 to i64
  %2061 = bitcast %"struct.liburlpattern::Token"** %2045 to i64*
  %2062 = load i64, i64* %37, align 8, !noalias !2
  %2063 = sub i64 %2060, %2062
  %2064 = ashr exact i64 %2063, 5
  %2065 = add nsw i64 %2064, 1
  %2066 = icmp ugt i64 %2065, 576460752303423487
  br i1 %2066, label %2067, label %2069

2067:                                             ; preds = %2059
  %2068 = bitcast %"class.std::__1::vector"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2068) #12, !noalias !2
  unreachable

2069:                                             ; preds = %2059
  %2070 = sub i64 %2049, %2062
  %2071 = ashr exact i64 %2070, 5
  %2072 = icmp ult i64 %2071, 288230376151711743
  br i1 %2072, label %2073, label %2081

2073:                                             ; preds = %2069
  %2074 = ashr exact i64 %2070, 4
  %2075 = icmp ult i64 %2074, %2065
  %2076 = select i1 %2075, i64 %2065, i64 %2074
  %2077 = icmp eq i64 %2076, 0
  br i1 %2077, label %2086, label %2078

2078:                                             ; preds = %2073
  %2079 = icmp ugt i64 %2076, 576460752303423487
  br i1 %2079, label %2080, label %2081

2080:                                             ; preds = %2078
  call void @abort() #12, !noalias !2
  unreachable

2081:                                             ; preds = %2078, %2069
  %2082 = phi i64 [ %2076, %2078 ], [ 576460752303423487, %2069 ]
  %2083 = shl i64 %2082, 5
  %2084 = call i8* @_Znwm(i64 %2083) #13, !noalias !2
  %2085 = bitcast i8* %2084 to %"struct.liburlpattern::Token"*
  br label %2086

2086:                                             ; preds = %2081, %2073
  %2087 = phi i64 [ %2082, %2081 ], [ 0, %2073 ]
  %2088 = phi i8* [ %2084, %2081 ], [ null, %2073 ]
  %2089 = phi %"struct.liburlpattern::Token"* [ %2085, %2081 ], [ null, %2073 ]
  %2090 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2089, i64 %2064
  %2091 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2089, i64 %2087
  %2092 = ptrtoint %"struct.liburlpattern::Token"* %2091 to i64
  %2093 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2090, i64 0, i32 0
  store i32 8, i32* %2093, align 8, !noalias !2
  %2094 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2089, i64 %2064, i32 1
  store i64 %2041, i64* %2094, align 8, !noalias !2
  %2095 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2089, i64 %2064, i32 2, i32 0
  %2096 = bitcast i8** %2095 to i64*
  store i64 %2044, i64* %2096, align 8, !noalias !2
  %2097 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2089, i64 %2064, i32 2, i32 1
  store i64 0, i64* %2097, align 8, !noalias !2
  %2098 = getelementptr inbounds %"struct.liburlpattern::Token", %"struct.liburlpattern::Token"* %2090, i64 1
  %2099 = ptrtoint %"struct.liburlpattern::Token"* %2098 to i64
  %2100 = ptrtoint %"struct.liburlpattern::Token"* %2089 to i64
  %2101 = icmp sgt i64 %2063, 0
  br i1 %2101, label %2102, label %2104

2102:                                             ; preds = %2086
  %2103 = inttoptr i64 %2062 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2088, i8* align 8 %2103, i64 %2063, i1 false) #11, !noalias !2
  br label %2104

2104:                                             ; preds = %2102, %2086
  store i64 %2100, i64* %37, align 8, !noalias !2
  store i64 %2099, i64* %2061, align 8, !noalias !2
  store i64 %2092, i64* %36, align 8, !noalias !2
  %2105 = icmp eq i64 %2062, 0
  br i1 %2105, label %2109, label %2106

2106:                                             ; preds = %2104
  %2107 = inttoptr i64 %2062 to i8*
  call void @_ZdlPv(i8* %2107) #13, !noalias !2
  %2108 = load i64, i64* %2061, align 8, !noalias !2
  br label %2109

2109:                                             ; preds = %2050, %2104, %2106
  %2110 = phi i64 [ %2108, %2106 ], [ %2099, %2104 ], [ %2057, %2050 ]
  store i64 %2041, i64* %2040, align 8, !noalias !2
  %2111 = getelementptr inbounds %"class.absl::StatusOr", %"class.absl::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0
  %2112 = load i64, i64* %37, align 8, !noalias !2
  %2113 = bitcast %"class.std::__1::vector"* %2111 to i64*
  store i64 %2112, i64* %2113, align 8, !alias.scope !2
  %2114 = getelementptr inbounds %"class.absl::StatusOr", %"class.absl::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %2115 = bitcast %"struct.liburlpattern::Token"** %2114 to i64*
  store i64 %2110, i64* %2115, align 8, !alias.scope !2
  %2116 = load i64, i64* %36, align 8, !noalias !2
  %2117 = getelementptr inbounds %"class.absl::StatusOr", %"class.absl::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %2118 = bitcast %"struct.liburlpattern::Token"** %2117 to i64*
  store i64 %2116, i64* %2118, align 8, !alias.scope !2
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #11, !noalias !2
  %2119 = getelementptr inbounds %"class.absl::StatusOr", %"class.absl::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2119, align 8, !alias.scope !2
  %2120 = load i64, i64* %2039, align 8
  %2121 = and i64 %2120, 1
  %2122 = icmp eq i64 %2121, 0
  br i1 %2122, label %2124, label %2123

2123:                                             ; preds = %2109
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %2120) #11
  br label %2124

2124:                                             ; preds = %2033, %161, %2123, %2109
  %2125 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 3, i32 0, i32 0
  %2126 = load %"struct.liburlpattern::Token"*, %"struct.liburlpattern::Token"** %2125, align 8
  %2127 = icmp eq %"struct.liburlpattern::Token"* %2126, null
  br i1 %2127, label %2133, label %2128

2128:                                             ; preds = %2124
  %2129 = ptrtoint %"struct.liburlpattern::Token"* %2126 to i64
  %2130 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %27, i64 0, i32 3, i32 0, i32 1
  %2131 = bitcast %"struct.liburlpattern::Token"** %2130 to i64*
  store i64 %2129, i64* %2131, align 8
  %2132 = bitcast %"struct.liburlpattern::Token"* %2126 to i8*
  call void @_ZdlPv(i8* %2132) #13
  br label %2133

2133:                                             ; preds = %2124, %2128
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %28) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @_ZN13liburlpattern12_GLOBAL__N_19Tokenizer4NextEv(%"class.liburlpattern::(anonymous namespace)::Tokenizer"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %0, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %0, i64 0, i32 6
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 %5
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %0, i64 0, i32 7
  store i32 %9, i32* %10, align 8
  %11 = icmp sgt i8 %8, -1
  br i1 %11, label %87, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.liburlpattern::(anonymous namespace)::Tokenizer", %"class.liburlpattern::(anonymous namespace)::Tokenizer"* %0, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %6, %14
  br i1 %15, label %86, label %16

16:                                               ; preds = %12
  %17 = icmp ugt i8 %8, -33
  br i1 %17, label %18, label %70

18:                                               ; preds = %16
  %19 = icmp ult i8 %8, -16
  br i1 %19, label %20, label %35

20:                                               ; preds = %18
  %21 = and i32 %9, 15
  store i32 %21, i32* %10, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.22, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %3, i64 %6
  %27 = load i8, i8* %26, align 1
  %28 = lshr i8 %27, 5
  %29 = zext i8 %28 to i32
  %30 = shl i32 1, %29
  %31 = and i32 %30, %25
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %86, label %33

33:                                               ; preds = %20
  %34 = and i8 %27, 63
  br label %61

35:                                               ; preds = %18
  %36 = add nsw i32 %9, -240
  store i32 %36, i32* %10, align 8
  %37 = icmp slt i32 %36, 5
  br i1 %37, label %38, label %86

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, i8* %3, i64 %6
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = lshr i32 %41, 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.23, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = shl i32 1, %36
  %48 = and i32 %47, %46
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %86, label %50

50:                                               ; preds = %38
  %51 = shl nsw i32 %36, 6
  %52 = and i32 %41, 63
  %53 = or i32 %52, %51
  store i32 %53, i32* %10, align 8
  %54 = add i64 %5, 2
  store i64 %54, i64* %4, align 8
  %55 = icmp eq i64 %54, %14
  br i1 %55, label %86, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds i8, i8* %3, i64 %54
  %58 = load i8, i8* %57, align 1
  %59 = xor i8 %58, -128
  %60 = icmp ult i8 %59, 64
  br i1 %60, label %61, label %86

61:                                               ; preds = %33, %56
  %62 = phi i64 [ %6, %33 ], [ %54, %56 ]
  %63 = phi i32 [ %21, %33 ], [ %53, %56 ]
  %64 = phi i8 [ %34, %33 ], [ %59, %56 ]
  %65 = shl nsw i32 %63, 6
  %66 = zext i8 %64 to i32
  %67 = or i32 %65, %66
  store i32 %67, i32* %10, align 8
  %68 = add i64 %62, 1
  store i64 %68, i64* %4, align 8
  %69 = icmp eq i64 %68, %14
  br i1 %69, label %86, label %74

70:                                               ; preds = %16
  %71 = icmp ugt i8 %8, -63
  br i1 %71, label %72, label %86

72:                                               ; preds = %70
  %73 = and i32 %9, 31
  store i32 %73, i32* %10, align 8
  br label %74

74:                                               ; preds = %61, %72
  %75 = phi i32 [ %67, %61 ], [ %73, %72 ]
  %76 = phi i64 [ %68, %61 ], [ %6, %72 ]
  %77 = getelementptr inbounds i8, i8* %3, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = xor i8 %78, -128
  %80 = icmp ult i8 %79, 64
  br i1 %80, label %81, label %86

81:                                               ; preds = %74
  %82 = zext i8 %79 to i32
  %83 = shl i32 %75, 6
  %84 = or i32 %83, %82
  store i32 %84, i32* %10, align 8
  %85 = add i64 %76, 1
  store i64 %85, i64* %4, align 8
  br label %87

86:                                               ; preds = %20, %61, %50, %38, %12, %74, %70, %56, %35
  store i32 -1, i32* %10, align 8
  br label %87

87:                                               ; preds = %81, %86, %1
  ret void
}

declare void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* sret, i8*, i64, %"class.absl::str_format_internal::FormatArgImpl"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv(i8*, i64, i32, i8*) #1 align 2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare signext i8 @u_hasBinaryProperty_69(i32, i32) local_unnamed_addr #2

declare void @_ZN4absl20InvalidArgumentErrorENS_11string_viewE(%"class.absl::Status"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4absl6Status15UnrefNonInlinedEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZN4absl19str_format_internal13FormatArgImpl8DispatchIiEEbNS1_4DataENS0_24FormatConversionSpecImplEPv(i8*, i64, i32, i8*) #1 align 2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !37
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN13liburlpattern12_GLOBAL__N_19Tokenizer8TokenizeEv: argument 0"}
!4 = distinct !{!4, !"_ZN13liburlpattern12_GLOBAL__N_19Tokenizer8TokenizeEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!8, !3}
!8 = distinct !{!8, !9, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!9 = distinct !{!9, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!10 = !{!11, !3}
!11 = distinct !{!11, !12, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!12 = distinct !{!12, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!13 = !{!14, !3}
!14 = distinct !{!14, !15, !"_ZN4absl9StrFormatIJimEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!15 = distinct !{!15, !"_ZN4absl9StrFormatIJimEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!16 = !{!17, !3}
!17 = distinct !{!17, !18, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!18 = distinct !{!18, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!19 = !{!20, !3}
!20 = distinct !{!20, !21, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!21 = distinct !{!21, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!22 = !{!23, !3}
!23 = distinct !{!23, !24, !"_ZN4absl9StrFormatIJimEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!24 = distinct !{!24, !"_ZN4absl9StrFormatIJimEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!25 = !{!26, !3}
!26 = distinct !{!26, !27, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!27 = distinct !{!27, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!28 = !{!29, !3}
!29 = distinct !{!29, !30, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!30 = distinct !{!30, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!31 = !{!32, !3}
!32 = distinct !{!32, !33, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!33 = distinct !{!33, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!34 = !{!35, !3}
!35 = distinct !{!35, !36, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!36 = distinct !{!36, !"_ZN4absl9StrFormatIJmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!37 = !{i8 0, i8 2}
