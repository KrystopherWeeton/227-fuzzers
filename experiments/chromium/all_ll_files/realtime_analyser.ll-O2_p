; ModuleID = '../../third_party/blink/renderer/modules/webaudio/realtime_analyser.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/realtime_analyser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::RealtimeAnalyser" = type { %"class.blink::AudioArray", %"struct.std::__1::atomic", %class.scoped_refptr, i32, %"class.std::__1::unique_ptr.7", %"class.blink::AudioArray", double, double, double, double }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted", i32, %"class.WTF::Vector", i32, float }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [64 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr", i8, [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AudioArray"* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::FFTFrame"* }
%"class.blink::FFTFrame" = type { i32, i32, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::DOMTypedArray.13" = type { %"class.blink::DOMArrayBufferView", i64 }

$_ZN5blink10AudioArrayIfE8AllocateEm = comdat any

$_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN5blink16RealtimeAnalyser29kDefaultSmoothingTimeConstantE = hidden local_unnamed_addr constant double 8.000000e-01, align 8
@_ZN5blink16RealtimeAnalyser19kDefaultMinDecibelsE = hidden local_unnamed_addr constant double -1.000000e+02, align 8
@_ZN5blink16RealtimeAnalyser19kDefaultMaxDecibelsE = hidden local_unnamed_addr constant double -3.000000e+01, align 8
@_ZN5blink16RealtimeAnalyser15kDefaultFFTSizeE = hidden local_unnamed_addr constant i32 2048, align 4
@_ZN5blink16RealtimeAnalyser11kMinFFTSizeE = hidden local_unnamed_addr constant i32 32, align 4
@_ZN5blink16RealtimeAnalyser11kMaxFFTSizeE = hidden local_unnamed_addr constant i32 32768, align 4
@_ZN5blink16RealtimeAnalyser16kInputBufferSizeE = hidden local_unnamed_addr constant i32 65536, align 4
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"n <= std::numeric_limits<unsigned>::max() / sizeof(T)\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/audio/audio_array.h\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"allocation_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioArray<float>]\00", align 1

@_ZN5blink16RealtimeAnalyserC1Ej = hidden unnamed_addr alias void (%"class.blink::RealtimeAnalyser"*, i32), void (%"class.blink::RealtimeAnalyser"*, i32)* @_ZN5blink16RealtimeAnalyserC2Ej

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyserC2Ej(%"class.blink::RealtimeAnalyser"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::RealtimeAnalyser"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #7
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %3, i64 65536) #7
  %5 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = tail call %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32 1, i32 %1, i1 zeroext true) #7
  %7 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 2, i32 0
  store %"class.blink::AudioBus"* %6, %"class.blink::AudioBus"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 3
  store i32 2048, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 4
  %10 = bitcast %"class.std::__1::unique_ptr.7"* %9 to i64*
  %11 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5
  %12 = bitcast %"class.std::__1::unique_ptr.7"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 28, i1 false)
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %11, i64 1024) #7
  %13 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 6
  %14 = bitcast double* %13 to <2 x double>*
  store <2 x double> <double 8.000000e-01, double -1.000000e+02>, <2 x double>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 8
  %16 = bitcast double* %15 to <2 x double>*
  store <2 x double> <double -3.000000e+01, double -1.000000e+00>, <2 x double>* %16, align 8
  %17 = tail call noalias i8* @malloc(i64 104) #7
  %18 = bitcast i8* %17 to %"class.blink::FFTFrame"*
  tail call void @_ZN5blink8FFTFrameC1Ej(%"class.blink::FFTFrame"* %18, i32 2048) #7
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %9, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %20, align 8
  store i64 %19, i64* %10, align 8
  %22 = icmp eq %"class.blink::FFTFrame"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %2
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* nonnull %21) #7
  %24 = bitcast %"class.blink::FFTFrame"* %21 to i8*
  tail call void @free(i8* %24) #7
  br label %25

25:                                               ; preds = %23, %2
  ret void
}

declare %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16RealtimeAnalyser10SetFftSizeEj(%"class.blink::RealtimeAnalyser"*, i32) local_unnamed_addr #0 align 2 {
  %3 = add i32 %1, -32
  %4 = icmp ugt i32 %3, 32736
  br i1 %4, label %27, label %5

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64
  %7 = tail call zeroext i1 @_ZN5blink15audio_utilities12IsPowerOfTwoEm(i64 %6) #7
  br i1 %7, label %8, label %27

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %8
  %13 = tail call noalias i8* @malloc(i64 104) #7
  %14 = bitcast i8* %13 to %"class.blink::FFTFrame"*
  tail call void @_ZN5blink8FFTFrameC1Ej(%"class.blink::FFTFrame"* %14, i32 %1) #7
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.7"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.blink::FFTFrame"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* nonnull %18) #7
  %22 = bitcast %"class.blink::FFTFrame"* %18 to i8*
  tail call void @free(i8* %22) #7
  br label %23

23:                                               ; preds = %21, %12
  %24 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5
  %25 = lshr i32 %1, 1
  %26 = zext i32 %25 to i64
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %24, i64 %26)
  store i32 %1, i32* %9, align 8
  br label %27

27:                                               ; preds = %23, %8, %2, %5
  %28 = phi i1 [ false, %5 ], [ false, %2 ], [ true, %8 ], [ true, %23 ]
  ret i1 %28
}

declare zeroext i1 @_ZN5blink15audio_utilities12IsPowerOfTwoEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp ugt i64 %1, 1073741823
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #7
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1073741823) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i8* %13, i8* %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #7
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  %22 = trunc i64 %1 to i32
  %23 = shl i32 %22, 2
  %24 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast float* %25 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #7
  br label %29

29:                                               ; preds = %21, %27
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %23, i32 32) #7
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  call void @llvm.trap() #7
  unreachable

33:                                               ; preds = %29
  %34 = extractvalue { i32, i1 } %30, 0
  %35 = zext i32 %34 to i64
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 %35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv, i64 0, i64 0)) #7
  %37 = bitcast %"class.blink::AudioArray"* %0 to i8**
  store i8* %36, i8** %37, align 8
  %38 = icmp eq i8* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %36 to i64
  br label %46

41:                                               ; preds = %33
  %42 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #7
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7
  %44 = bitcast %"class.blink::AudioArray"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi i64 [ %40, %39 ], [ %45, %41 ]
  %48 = add i64 %47, 31
  %49 = and i64 %48, -32
  %50 = inttoptr i64 %49 to float*
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 1
  store float* %50, float** %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 2
  store i32 %22, i32* %52, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyser10WriteInputEPNS_8AudioBusEj(%"class.blink::RealtimeAnalyser"* nocapture, %"class.blink::AudioBus"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 acquire, align 4
  %6 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 0, i32 1
  %7 = load float*, float** %6, align 8
  %8 = zext i32 %5 to i64
  %9 = getelementptr inbounds float, float* %7, i64 %8
  %10 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 2, i32 0
  %11 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %10, align 8
  tail call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %11) #7
  %12 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %10, align 8
  tail call void @_ZN5blink8AudioBus7SumFromERKS0_NS0_21ChannelInterpretationE(%"class.blink::AudioBus"* %12, %"class.blink::AudioBus"* dereferenceable(96) %1, i32 0) #7
  %13 = bitcast float* %9 to i8*
  %14 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %10, align 8
  %15 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %14, i64 0, i32 2
  %16 = tail call dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 0) #7
  %17 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %16, i64 0, i32 1
  %18 = load float*, float** %17, align 8
  %19 = icmp eq float* %18, null
  br i1 %19, label %20, label %25

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %22, i64 0, i32 1
  %24 = load float*, float** %23, align 8
  br label %25

25:                                               ; preds = %3, %20
  %26 = phi float* [ %24, %20 ], [ %18, %3 ]
  %27 = bitcast float* %26 to i8*
  %28 = zext i32 %2 to i64
  %29 = shl nuw nsw i64 %28, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %27, i64 %29, i1 false)
  %30 = add i32 %5, %2
  %31 = icmp ugt i32 %30, 65535
  %32 = select i1 %31, i32 0, i32 %30
  store atomic i32 %32, i32* %4 release, align 4
  ret void
}

declare void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"*) local_unnamed_addr #1

declare void @_ZN5blink8AudioBus7SumFromERKS0_NS0_21ChannelInterpretationE(%"class.blink::AudioBus"*, %"class.blink::AudioBus"* dereferenceable(96), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyser13DoFFTAnalysisEv(%"class.blink::RealtimeAnalyser"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AudioArray", align 8
  %3 = alloca i64, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = bitcast %"class.blink::AudioArray"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %2, i64 0, i32 1
  %10 = zext i32 %7 to i64
  %11 = bitcast %"class.blink::AudioArray"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 20, i1 false) #7
  call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* nonnull %2, i64 %10) #7
  %12 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 0, i32 1
  %13 = load float*, float** %12, align 8
  %14 = load float*, float** %9, align 8
  %15 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 acquire, align 4
  %17 = icmp ugt i32 %7, %16
  %18 = bitcast float* %14 to i8*
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds float, float* %13, i64 %19
  %21 = sub nsw i64 0, %10
  %22 = getelementptr inbounds float, float* %20, i64 %21
  br i1 %17, label %23, label %35

23:                                               ; preds = %1
  %24 = getelementptr inbounds float, float* %22, i64 65536
  %25 = bitcast float* %24 to i8*
  %26 = sub i32 %7, %16
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %25, i64 %28, i1 false)
  %29 = getelementptr inbounds float, float* %14, i64 %10
  %30 = sub nsw i64 0, %19
  %31 = getelementptr inbounds float, float* %29, i64 %30
  %32 = bitcast float* %31 to i8*
  %33 = bitcast float* %13 to i8*
  %34 = shl nuw nsw i64 %19, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 %34, i1 false)
  br label %41

35:                                               ; preds = %1
  %36 = bitcast float* %22 to i8*
  %37 = shl nuw nsw i64 %10, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %36, i64 %37, i1 false)
  %38 = icmp eq i32 %7, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = uitofp i32 %7 to double
  br label %62

41:                                               ; preds = %23, %35
  %42 = uitofp i32 %7 to double
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ %60, %43 ], [ 0, %41 ]
  %45 = trunc i64 %44 to i32
  %46 = uitofp i32 %45 to double
  %47 = fdiv double %46, %42
  %48 = fmul double %47, 0x401921FB54442D18
  %49 = call double @cos(double %48) #7
  %50 = fmul double %49, 5.000000e-01
  %51 = fsub double 4.200000e-01, %50
  %52 = fmul double %47, 0x402921FB54442D18
  %53 = call double @cos(double %52) #7
  %54 = fmul double %53, 8.000000e-02
  %55 = fadd double %51, %54
  %56 = fptrunc double %55 to float
  %57 = getelementptr inbounds float, float* %14, i64 %44
  %58 = load float, float* %57, align 4
  %59 = fmul float %58, %56
  store float %59, float* %57, align 4
  %60 = add nuw nsw i64 %44, 1
  %61 = icmp eq i64 %60, %10
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %39
  %63 = phi double [ %40, %39 ], [ %42, %43 ]
  %64 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %64, align 8
  call void @_ZN5blink8FFTFrame5DoFFTEPKf(%"class.blink::FFTFrame"* %65, float* %14) #7
  %66 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %64, align 8
  %67 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %66, i64 0, i32 3, i32 1
  %68 = load float*, float** %67, align 8
  store float 0.000000e+00, float* %68, align 4
  %69 = fdiv double 1.000000e+00, %63
  %70 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70)
  %71 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 6
  %72 = bitcast double* %71 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %3, align 8
  %74 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  store double 0.000000e+00, double* %4, align 8
  %75 = bitcast i64 %73 to double
  %76 = fcmp ogt double %75, 0.000000e+00
  %77 = bitcast i64* %3 to double*
  %78 = select i1 %76, double* %77, double* %4
  %79 = bitcast double* %78 to i64*
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  %81 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  store double 1.000000e+00, double* %5, align 8
  %82 = bitcast i64 %80 to double
  %83 = fcmp olt double %82, 1.000000e+00
  %84 = select i1 %83, double* %77, double* %5
  %85 = bitcast double* %84 to i64*
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  %87 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 1
  %88 = load float*, float** %87, align 8
  %89 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 2
  %90 = load i32, i32* %89, align 8
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %66, i64 0, i32 2, i32 1
  %93 = load float*, float** %92, align 8
  %94 = load float*, float** %67, align 8
  %95 = icmp eq i32 %90, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %62
  %97 = bitcast i64 %86 to double
  %98 = fsub double 1.000000e+00, %97
  br label %102

99:                                               ; preds = %102, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70)
  %100 = bitcast %"class.blink::AudioArray"* %2 to i8**
  %101 = load i8*, i8** %100, align 8
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %101) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret void

102:                                              ; preds = %102, %96
  %103 = phi i64 [ 0, %96 ], [ %119, %102 ]
  %104 = getelementptr inbounds float, float* %93, i64 %103
  %105 = load float, float* %104, align 4
  %106 = fpext float %105 to double
  %107 = getelementptr inbounds float, float* %94, i64 %103
  %108 = load float, float* %107, align 4
  %109 = fpext float %108 to double
  %110 = call double @hypot(double %106, double %109) #7
  %111 = fmul double %69, %110
  %112 = getelementptr inbounds float, float* %88, i64 %103
  %113 = load float, float* %112, align 4
  %114 = fpext float %113 to double
  %115 = fmul double %97, %114
  %116 = fmul double %98, %111
  %117 = fadd double %116, %115
  %118 = fptrunc double %117 to float
  store float %118, float* %112, align 4
  %119 = add nuw nsw i64 %103, 1
  %120 = icmp eq i64 %119, %91
  br i1 %120, label %99, label %102
}

declare void @_ZN5blink8FFTFrame5DoFFTEPKf(%"class.blink::FFTFrame"*, float*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyser16ConvertFloatToDbEPNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEE(%"class.blink::RealtimeAnalyser"* nocapture readonly, %"class.blink::DOMTypedArray"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i64 [ %13, %11 ], [ 0, %2 ]
  %16 = icmp ult i64 %15, %5
  %17 = select i1 %16, i64 %15, i64 %5
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 1
  %21 = load float*, float** %20, align 8
  br i1 %10, label %22, label %26

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 1
  %24 = bitcast i8** %23 to float**
  %25 = load float*, float** %24, align 8
  br label %26

26:                                               ; preds = %22, %19
  %27 = phi float* [ %25, %22 ], [ null, %19 ]
  br label %28

28:                                               ; preds = %26, %28
  %29 = phi i64 [ %36, %28 ], [ 0, %26 ]
  %30 = phi i32 [ %35, %28 ], [ 0, %26 ]
  %31 = getelementptr inbounds float, float* %21, i64 %29
  %32 = load float, float* %31, align 4
  %33 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %32) #7
  %34 = getelementptr inbounds float, float* %27, i64 %29
  store float %33, float* %34, align 4
  %35 = add i32 %30, 1
  %36 = zext i32 %35 to i64
  %37 = icmp ugt i64 %17, %36
  br i1 %37, label %28, label %38

38:                                               ; preds = %28, %14
  ret void
}

declare float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyser21GetFloatFrequencyDataEPNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEd(%"class.blink::RealtimeAnalyser"* nocapture, %"class.blink::DOMTypedArray"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 9
  %5 = load double, double* %4, align 8
  %6 = fcmp ult double %5, %2
  br i1 %6, label %43, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %12, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i64 [ %18, %16 ], [ 0, %7 ]
  %21 = icmp ult i64 %20, %10
  %22 = select i1 %21, i64 %20, i64 %10
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %79, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 1
  %26 = load float*, float** %25, align 8
  br i1 %15, label %27, label %31

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 1
  %29 = bitcast i8** %28 to float**
  %30 = load float*, float** %29, align 8
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi float* [ %30, %27 ], [ null, %24 ]
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ %41, %33 ], [ 0, %31 ]
  %35 = phi i32 [ %40, %33 ], [ 0, %31 ]
  %36 = getelementptr inbounds float, float* %26, i64 %34
  %37 = load float, float* %36, align 4
  %38 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %37) #7
  %39 = getelementptr inbounds float, float* %32, i64 %34
  store float %38, float* %39, align 4
  %40 = add i32 %35, 1
  %41 = zext i32 %40 to i64
  %42 = icmp ugt i64 %22, %41
  br i1 %42, label %33, label %79

43:                                               ; preds = %3
  store double %2, double* %4, align 8
  tail call void @_ZN5blink16RealtimeAnalyser13DoFFTAnalysisEv(%"class.blink::RealtimeAnalyser"* %0)
  %44 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %48, i64 0, i32 2
  %50 = load i8, i8* %49, align 8, !range !3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %52, %43
  %56 = phi i64 [ %54, %52 ], [ 0, %43 ]
  %57 = icmp ult i64 %56, %46
  %58 = select i1 %57, i64 %56, i64 %46
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 1
  %62 = load float*, float** %61, align 8
  br i1 %51, label %63, label %67

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 1
  %65 = bitcast i8** %64 to float**
  %66 = load float*, float** %65, align 8
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi float* [ %66, %63 ], [ null, %60 ]
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ %77, %69 ], [ 0, %67 ]
  %71 = phi i32 [ %76, %69 ], [ 0, %67 ]
  %72 = getelementptr inbounds float, float* %62, i64 %70
  %73 = load float, float* %72, align 4
  %74 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %73) #7
  %75 = getelementptr inbounds float, float* %68, i64 %70
  store float %74, float* %75, align 4
  %76 = add i32 %71, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %58, %77
  br i1 %78, label %69, label %79

79:                                               ; preds = %33, %69, %55, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyser17ConvertToByteDataEPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEE(%"class.blink::RealtimeAnalyser"* nocapture readonly, %"class.blink::DOMTypedArray.13"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i64 [ %13, %11 ], [ 0, %2 ]
  %16 = icmp ult i64 %15, %5
  %17 = select i1 %16, i64 %15, i64 %5
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %56, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 8
  %21 = load double, double* %20, align 8
  %22 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 7
  %23 = load double, double* %22, align 8
  %24 = fcmp oeq double %21, %23
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = fsub double %21, %23
  %27 = fdiv double 1.000000e+00, %26
  br label %28

28:                                               ; preds = %19, %25
  %29 = phi double [ %27, %25 ], [ 1.000000e+00, %19 ]
  %30 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 1
  %31 = load float*, float** %30, align 8
  br i1 %10, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %28
  %36 = phi i8* [ %34, %32 ], [ null, %28 ]
  br label %37

37:                                               ; preds = %35, %37
  %38 = phi i64 [ %54, %37 ], [ 0, %35 ]
  %39 = phi i32 [ %53, %37 ], [ 0, %35 ]
  %40 = getelementptr inbounds float, float* %31, i64 %38
  %41 = load float, float* %40, align 4
  %42 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %41) #7
  %43 = fpext float %42 to double
  %44 = fsub double %43, %23
  %45 = fmul double %44, 2.550000e+02
  %46 = fmul double %29, %45
  %47 = fcmp olt double %46, 0.000000e+00
  %48 = select i1 %47, double 0.000000e+00, double %46
  %49 = fcmp ogt double %48, 2.550000e+02
  %50 = select i1 %49, double 2.550000e+02, double %48
  %51 = fptoui double %50 to i8
  %52 = getelementptr inbounds i8, i8* %36, i64 %38
  store i8 %51, i8* %52, align 1
  %53 = add i32 %39, 1
  %54 = zext i32 %53 to i64
  %55 = icmp ugt i64 %17, %54
  br i1 %55, label %37, label %56

56:                                               ; preds = %37, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyser20GetByteFrequencyDataEPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEd(%"class.blink::RealtimeAnalyser"* nocapture, %"class.blink::DOMTypedArray.13"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 9
  %5 = load double, double* %4, align 8
  %6 = fcmp ult double %5, %2
  br i1 %6, label %61, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %12, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i64 [ %18, %16 ], [ 0, %7 ]
  %21 = icmp ult i64 %20, %10
  %22 = select i1 %21, i64 %20, i64 %10
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %115, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 8
  %26 = load double, double* %25, align 8
  %27 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 7
  %28 = load double, double* %27, align 8
  %29 = fcmp oeq double %26, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = fsub double %26, %28
  %32 = fdiv double 1.000000e+00, %31
  br label %33

33:                                               ; preds = %30, %24
  %34 = phi double [ %32, %30 ], [ 1.000000e+00, %24 ]
  %35 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 1
  %36 = load float*, float** %35, align 8
  br i1 %15, label %37, label %40

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 0, i32 1
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %33
  %41 = phi i8* [ %39, %37 ], [ null, %33 ]
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ %59, %42 ], [ 0, %40 ]
  %44 = phi i32 [ %58, %42 ], [ 0, %40 ]
  %45 = getelementptr inbounds float, float* %36, i64 %43
  %46 = load float, float* %45, align 4
  %47 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %46) #7
  %48 = fpext float %47 to double
  %49 = fsub double %48, %28
  %50 = fmul double %49, 2.550000e+02
  %51 = fmul double %34, %50
  %52 = fcmp olt double %51, 0.000000e+00
  %53 = select i1 %52, double 0.000000e+00, double %51
  %54 = fcmp ogt double %53, 2.550000e+02
  %55 = select i1 %54, double 2.550000e+02, double %53
  %56 = fptoui double %55 to i8
  %57 = getelementptr inbounds i8, i8* %41, i64 %43
  store i8 %56, i8* %57, align 1
  %58 = add i32 %44, 1
  %59 = zext i32 %58 to i64
  %60 = icmp ugt i64 %22, %59
  br i1 %60, label %42, label %115

61:                                               ; preds = %3
  store double %2, double* %4, align 8
  tail call void @_ZN5blink16RealtimeAnalyser13DoFFTAnalysisEv(%"class.blink::RealtimeAnalyser"* %0)
  %62 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %66, i64 0, i32 2
  %68 = load i8, i8* %67, align 8, !range !3
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i64 [ %72, %70 ], [ 0, %61 ]
  %75 = icmp ult i64 %74, %64
  %76 = select i1 %75, i64 %74, i64 %64
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %115, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 8
  %80 = load double, double* %79, align 8
  %81 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 7
  %82 = load double, double* %81, align 8
  %83 = fcmp oeq double %80, %82
  br i1 %83, label %87, label %84

84:                                               ; preds = %78
  %85 = fsub double %80, %82
  %86 = fdiv double 1.000000e+00, %85
  br label %87

87:                                               ; preds = %84, %78
  %88 = phi double [ %86, %84 ], [ 1.000000e+00, %78 ]
  %89 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 5, i32 1
  %90 = load float*, float** %89, align 8
  br i1 %69, label %91, label %94

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 0, i32 1
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %87
  %95 = phi i8* [ %93, %91 ], [ null, %87 ]
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ %113, %96 ], [ 0, %94 ]
  %98 = phi i32 [ %112, %96 ], [ 0, %94 ]
  %99 = getelementptr inbounds float, float* %90, i64 %97
  %100 = load float, float* %99, align 4
  %101 = tail call float @_ZN5blink15audio_utilities16LinearToDecibelsEf(float %100) #7
  %102 = fpext float %101 to double
  %103 = fsub double %102, %82
  %104 = fmul double %103, 2.550000e+02
  %105 = fmul double %88, %104
  %106 = fcmp olt double %105, 0.000000e+00
  %107 = select i1 %106, double 0.000000e+00, double %105
  %108 = fcmp ogt double %107, 2.550000e+02
  %109 = select i1 %108, double 2.550000e+02, double %107
  %110 = fptoui double %109 to i8
  %111 = getelementptr inbounds i8, i8* %95, i64 %97
  store i8 %110, i8* %111, align 1
  %112 = add i32 %98, 1
  %113 = zext i32 %112 to i64
  %114 = icmp ugt i64 %76, %113
  br i1 %114, label %96, label %115

115:                                              ; preds = %42, %96, %73, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyser22GetFloatTimeDomainDataEPNS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEE(%"class.blink::RealtimeAnalyser"* nocapture readonly, %"class.blink::DOMTypedArray"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i64 [ %13, %11 ], [ 0, %2 ]
  %16 = icmp ult i64 %15, %5
  %17 = select i1 %16, i64 %15, i64 %5
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %148, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 0, i32 1
  %21 = load float*, float** %20, align 8
  br i1 %10, label %22, label %27

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %1, i64 0, i32 0, i32 1
  %24 = bitcast i8** %23 to float**
  %25 = load float*, float** %24, align 8
  %26 = bitcast float* %25 to i8*
  br label %27

27:                                               ; preds = %22, %19
  %28 = phi i8* [ %26, %22 ], [ null, %19 ]
  %29 = phi float* [ %25, %22 ], [ null, %19 ]
  %30 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = sub i32 %31, %4
  %33 = icmp ugt i64 %17, 1
  %34 = select i1 %33, i64 %17, i64 1
  %35 = icmp ult i64 %34, 8
  br i1 %35, label %131, label %36

36:                                               ; preds = %27
  %37 = icmp ugt i64 %17, 1
  %38 = select i1 %37, i64 %17, i64 1
  %39 = add nsw i64 %38, -1
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %40, -1
  %42 = trunc i32 %31 to i16
  %43 = trunc i32 %4 to i16
  %44 = trunc i64 %39 to i16
  %45 = xor i16 %42, -1
  %46 = add i16 %45, %43
  %47 = icmp ult i16 %46, %44
  %48 = icmp ugt i64 %39, 65535
  %49 = or i1 %47, %48
  %50 = or i1 %41, %49
  br i1 %50, label %131, label %51

51:                                               ; preds = %36
  %52 = icmp ugt i64 %17, 1
  %53 = select i1 %52, i64 %17, i64 1
  %54 = getelementptr float, float* %29, i64 %53
  %55 = zext i32 %31 to i64
  %56 = zext i32 %4 to i64
  %57 = sub nsw i64 %55, %56
  %58 = and i64 %57, 65535
  %59 = getelementptr float, float* %21, i64 %58
  %60 = add nuw nsw i64 %53, %58
  %61 = getelementptr float, float* %21, i64 %60
  %62 = bitcast float* %61 to i8*
  %63 = icmp ult i8* %28, %62
  %64 = icmp ult float* %59, %54
  %65 = and i1 %63, %64
  br i1 %65, label %131, label %66

66:                                               ; preds = %51
  %67 = and i64 %34, 4294967288
  %68 = trunc i64 %67 to i32
  %69 = add nsw i64 %67, -8
  %70 = lshr exact i64 %69, 3
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 1
  %73 = icmp eq i64 %69, 0
  br i1 %73, label %111, label %74

74:                                               ; preds = %66
  %75 = sub nuw nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %108, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %109, %76 ]
  %79 = trunc i64 %77 to i32
  %80 = add i32 %32, %79
  %81 = and i32 %80, 65535
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds float, float* %21, i64 %82
  %84 = bitcast float* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !4
  %86 = getelementptr inbounds float, float* %83, i64 4
  %87 = bitcast float* %86 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4, !alias.scope !4
  %89 = getelementptr inbounds float, float* %29, i64 %77
  %90 = bitcast float* %89 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %90, align 4, !alias.scope !7, !noalias !4
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x i32>*
  store <4 x i32> %88, <4 x i32>* %92, align 4, !alias.scope !7, !noalias !4
  %93 = or i64 %77, 8
  %94 = trunc i64 %93 to i32
  %95 = add i32 %32, %94
  %96 = and i32 %95, 65535
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds float, float* %21, i64 %97
  %99 = bitcast float* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !4
  %101 = getelementptr inbounds float, float* %98, i64 4
  %102 = bitcast float* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !alias.scope !4
  %104 = getelementptr inbounds float, float* %29, i64 %93
  %105 = bitcast float* %104 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %105, align 4, !alias.scope !7, !noalias !4
  %106 = getelementptr inbounds float, float* %104, i64 4
  %107 = bitcast float* %106 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %107, align 4, !alias.scope !7, !noalias !4
  %108 = add i64 %77, 16
  %109 = add i64 %78, -2
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %76, !llvm.loop !9

111:                                              ; preds = %76, %66
  %112 = phi i64 [ 0, %66 ], [ %108, %76 ]
  %113 = icmp eq i64 %72, 0
  br i1 %113, label %129, label %114

114:                                              ; preds = %111
  %115 = trunc i64 %112 to i32
  %116 = add i32 %32, %115
  %117 = and i32 %116, 65535
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds float, float* %21, i64 %118
  %120 = bitcast float* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !4
  %122 = getelementptr inbounds float, float* %119, i64 4
  %123 = bitcast float* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !4
  %125 = getelementptr inbounds float, float* %29, i64 %112
  %126 = bitcast float* %125 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %126, align 4, !alias.scope !7, !noalias !4
  %127 = getelementptr inbounds float, float* %125, i64 4
  %128 = bitcast float* %127 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %128, align 4, !alias.scope !7, !noalias !4
  br label %129

129:                                              ; preds = %111, %114
  %130 = icmp eq i64 %34, %67
  br i1 %130, label %148, label %131

131:                                              ; preds = %129, %51, %36, %27
  %132 = phi i64 [ 0, %51 ], [ 0, %36 ], [ 0, %27 ], [ %67, %129 ]
  %133 = phi i32 [ 0, %51 ], [ 0, %36 ], [ 0, %27 ], [ %68, %129 ]
  br label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %146, %134 ], [ %132, %131 ]
  %136 = phi i32 [ %145, %134 ], [ %133, %131 ]
  %137 = add i32 %32, %136
  %138 = and i32 %137, 65535
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds float, float* %21, i64 %139
  %141 = bitcast float* %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds float, float* %29, i64 %135
  %144 = bitcast float* %143 to i32*
  store i32 %142, i32* %144, align 4
  %145 = add i32 %136, 1
  %146 = zext i32 %145 to i64
  %147 = icmp ugt i64 %17, %146
  br i1 %147, label %134, label %148, !llvm.loop !11

148:                                              ; preds = %134, %129, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RealtimeAnalyser21GetByteTimeDomainDataEPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEE(%"class.blink::RealtimeAnalyser"* nocapture readonly, %"class.blink::DOMTypedArray.13"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i64 [ %13, %11 ], [ 0, %2 ]
  %16 = icmp ult i64 %15, %5
  %17 = select i1 %16, i64 %15, i64 %5
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %161, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 0, i32 1
  %21 = load float*, float** %20, align 8
  br i1 %10, label %22, label %25

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::DOMTypedArray.13", %"class.blink::DOMTypedArray.13"* %1, i64 0, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %19
  %26 = phi i8* [ %24, %22 ], [ null, %19 ]
  %27 = getelementptr inbounds %"class.blink::RealtimeAnalyser", %"class.blink::RealtimeAnalyser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = sub i32 %28, %4
  %30 = icmp ugt i64 %17, 1
  %31 = select i1 %30, i64 %17, i64 1
  %32 = icmp ult i64 %31, 4
  br i1 %32, label %138, label %33

33:                                               ; preds = %25
  %34 = icmp ugt i64 %17, 1
  %35 = select i1 %34, i64 %17, i64 1
  %36 = add nsw i64 %35, -1
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, -1
  %39 = trunc i32 %28 to i16
  %40 = trunc i32 %4 to i16
  %41 = trunc i64 %36 to i16
  %42 = xor i16 %39, -1
  %43 = add i16 %42, %40
  %44 = icmp ult i16 %43, %41
  %45 = icmp ugt i64 %36, 65535
  %46 = or i1 %44, %45
  %47 = or i1 %38, %46
  br i1 %47, label %138, label %48

48:                                               ; preds = %33
  %49 = icmp ugt i64 %17, 1
  %50 = select i1 %49, i64 %17, i64 1
  %51 = getelementptr i8, i8* %26, i64 %50
  %52 = zext i32 %28 to i64
  %53 = zext i32 %4 to i64
  %54 = sub nsw i64 %52, %53
  %55 = and i64 %54, 65535
  %56 = getelementptr float, float* %21, i64 %55
  %57 = bitcast float* %56 to i8*
  %58 = add nuw nsw i64 %50, %55
  %59 = getelementptr float, float* %21, i64 %58
  %60 = bitcast float* %59 to i8*
  %61 = icmp ult i8* %26, %60
  %62 = icmp ugt i8* %51, %57
  %63 = and i1 %61, %62
  br i1 %63, label %138, label %64

64:                                               ; preds = %48
  %65 = and i64 %31, 4294967292
  %66 = trunc i64 %65 to i32
  %67 = add nsw i64 %65, -4
  %68 = lshr exact i64 %67, 2
  %69 = add nuw nsw i64 %68, 1
  %70 = and i64 %69, 1
  %71 = icmp eq i64 %67, 0
  br i1 %71, label %115, label %72

72:                                               ; preds = %64
  %73 = sub nuw nsw i64 %69, %70
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi i64 [ 0, %72 ], [ %112, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %113, %74 ]
  %77 = trunc i64 %75 to i32
  %78 = add i32 %29, %77
  %79 = and i32 %78, 65535
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds float, float* %21, i64 %80
  %82 = bitcast float* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 4, !alias.scope !12
  %84 = fadd <4 x float> %83, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %85 = fmul <4 x float> %84, <float 1.280000e+02, float 1.280000e+02, float 1.280000e+02, float 1.280000e+02>
  %86 = fcmp ole <4 x float> %85, zeroinitializer
  %87 = select <4 x i1> %86, <4 x float> zeroinitializer, <4 x float> %85
  %88 = fpext <4 x float> %87 to <4 x double>
  %89 = fcmp ogt <4 x double> %88, <double 2.550000e+02, double 2.550000e+02, double 2.550000e+02, double 2.550000e+02>
  %90 = select <4 x i1> %89, <4 x double> <double 2.550000e+02, double 2.550000e+02, double 2.550000e+02, double 2.550000e+02>, <4 x double> %88
  %91 = fptoui <4 x double> %90 to <4 x i8>
  %92 = getelementptr inbounds i8, i8* %26, i64 %75
  %93 = bitcast i8* %92 to <4 x i8>*
  store <4 x i8> %91, <4 x i8>* %93, align 1, !alias.scope !15, !noalias !12
  %94 = or i64 %75, 4
  %95 = trunc i64 %94 to i32
  %96 = add i32 %29, %95
  %97 = and i32 %96, 65535
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds float, float* %21, i64 %98
  %100 = bitcast float* %99 to <4 x float>*
  %101 = load <4 x float>, <4 x float>* %100, align 4, !alias.scope !12
  %102 = fadd <4 x float> %101, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %103 = fmul <4 x float> %102, <float 1.280000e+02, float 1.280000e+02, float 1.280000e+02, float 1.280000e+02>
  %104 = fcmp ole <4 x float> %103, zeroinitializer
  %105 = select <4 x i1> %104, <4 x float> zeroinitializer, <4 x float> %103
  %106 = fpext <4 x float> %105 to <4 x double>
  %107 = fcmp ogt <4 x double> %106, <double 2.550000e+02, double 2.550000e+02, double 2.550000e+02, double 2.550000e+02>
  %108 = select <4 x i1> %107, <4 x double> <double 2.550000e+02, double 2.550000e+02, double 2.550000e+02, double 2.550000e+02>, <4 x double> %106
  %109 = fptoui <4 x double> %108 to <4 x i8>
  %110 = getelementptr inbounds i8, i8* %26, i64 %94
  %111 = bitcast i8* %110 to <4 x i8>*
  store <4 x i8> %109, <4 x i8>* %111, align 1, !alias.scope !15, !noalias !12
  %112 = add i64 %75, 8
  %113 = add i64 %76, -2
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %74, !llvm.loop !17

115:                                              ; preds = %74, %64
  %116 = phi i64 [ 0, %64 ], [ %112, %74 ]
  %117 = icmp eq i64 %70, 0
  br i1 %117, label %136, label %118

118:                                              ; preds = %115
  %119 = trunc i64 %116 to i32
  %120 = add i32 %29, %119
  %121 = and i32 %120, 65535
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds float, float* %21, i64 %122
  %124 = bitcast float* %123 to <4 x float>*
  %125 = load <4 x float>, <4 x float>* %124, align 4, !alias.scope !12
  %126 = fadd <4 x float> %125, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %127 = fmul <4 x float> %126, <float 1.280000e+02, float 1.280000e+02, float 1.280000e+02, float 1.280000e+02>
  %128 = fcmp ole <4 x float> %127, zeroinitializer
  %129 = select <4 x i1> %128, <4 x float> zeroinitializer, <4 x float> %127
  %130 = fpext <4 x float> %129 to <4 x double>
  %131 = fcmp ogt <4 x double> %130, <double 2.550000e+02, double 2.550000e+02, double 2.550000e+02, double 2.550000e+02>
  %132 = select <4 x i1> %131, <4 x double> <double 2.550000e+02, double 2.550000e+02, double 2.550000e+02, double 2.550000e+02>, <4 x double> %130
  %133 = fptoui <4 x double> %132 to <4 x i8>
  %134 = getelementptr inbounds i8, i8* %26, i64 %116
  %135 = bitcast i8* %134 to <4 x i8>*
  store <4 x i8> %133, <4 x i8>* %135, align 1, !alias.scope !15, !noalias !12
  br label %136

136:                                              ; preds = %115, %118
  %137 = icmp eq i64 %31, %65
  br i1 %137, label %161, label %138

138:                                              ; preds = %136, %48, %33, %25
  %139 = phi i64 [ 0, %48 ], [ 0, %33 ], [ 0, %25 ], [ %65, %136 ]
  %140 = phi i32 [ 0, %48 ], [ 0, %33 ], [ 0, %25 ], [ %66, %136 ]
  br label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %159, %141 ], [ %139, %138 ]
  %143 = phi i32 [ %158, %141 ], [ %140, %138 ]
  %144 = add i32 %29, %143
  %145 = and i32 %144, 65535
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds float, float* %21, i64 %146
  %148 = load float, float* %147, align 4
  %149 = fadd float %148, 1.000000e+00
  %150 = fmul float %149, 1.280000e+02
  %151 = fcmp ole float %150, 0.000000e+00
  %152 = select i1 %151, float 0.000000e+00, float %150
  %153 = fpext float %152 to double
  %154 = fcmp ogt double %153, 2.550000e+02
  %155 = select i1 %154, double 2.550000e+02, double %153
  %156 = fptoui double %155 to i8
  %157 = getelementptr inbounds i8, i8* %26, i64 %142
  store i8 %156, i8* %157, align 1
  %158 = add i32 %143, 1
  %159 = zext i32 %158 to i64
  %160 = icmp ugt i64 %17, %159
  br i1 %160, label %141, label %161, !llvm.loop !18

161:                                              ; preds = %141, %136, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @cos(double) local_unnamed_addr #4

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink8FFTFrameC1Ej(%"class.blink::FFTFrame"*, i32) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare double @hypot(double, double) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !10}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !10}
!18 = distinct !{!18, !10}
