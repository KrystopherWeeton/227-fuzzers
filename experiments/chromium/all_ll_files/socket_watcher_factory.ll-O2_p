; ModuleID = '../../net/nqe/socket_watcher_factory.cc'
source_filename = "../../net/nqe/socket_watcher_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::nqe::internal::SocketWatcherFactory" = type { %"class.net::SocketPerformanceWatcherFactory", %class.scoped_refptr, %"class.base::TimeDelta", i8, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3", %"class.base::TickClock"* }
%"class.net::SocketPerformanceWatcherFactory" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.3" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TickClock" = type opaque
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.net::SocketPerformanceWatcher" = type { i32 (...)** }
%"class.net::AddressList" = type opaque
%"class.net::nqe::internal::SocketWatcher" = type { %"class.net::SocketPerformanceWatcher", i32, %class.scoped_refptr, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3", %"class.base::TimeDelta", i8, %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.absl::optional" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }

@_ZTVN3net3nqe8internal20SocketWatcherFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::nqe::internal::SocketWatcherFactory"*)* @_ZN3net3nqe8internal20SocketWatcherFactoryD2Ev to i8*), i8* bitcast (void (%"class.net::nqe::internal::SocketWatcherFactory"*)* @_ZN3net3nqe8internal20SocketWatcherFactoryD0Ev to i8*), i8* bitcast (%"class.net::SocketPerformanceWatcher"* (%"class.net::nqe::internal::SocketWatcherFactory"*, i32, %"class.net::AddressList"*)* @_ZN3net3nqe8internal20SocketWatcherFactory30CreateSocketPerformanceWatcherENS_31SocketPerformanceWatcherFactory8ProtocolERKNS_11AddressListE to i8*)] }, align 8

@_ZN3net3nqe8internal20SocketWatcherFactoryC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS4_9TimeDeltaENS4_17RepeatingCallbackIFvNS_31SocketPerformanceWatcherFactory8ProtocolERKS7_RKN4absl8optionalImEEEEENS8_IFbNS4_9TimeTicksEEEEPKNS4_9TickClockE = hidden unnamed_addr alias void (%"class.net::nqe::internal::SocketWatcherFactory"*, %"class.base::SingleThreadTaskRunner"*, i64, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.3"*, %"class.base::TickClock"*), void (%"class.net::nqe::internal::SocketWatcherFactory"*, %"class.base::SingleThreadTaskRunner"*, i64, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.3"*, %"class.base::TickClock"*)* @_ZN3net3nqe8internal20SocketWatcherFactoryC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS4_9TimeDeltaENS4_17RepeatingCallbackIFvNS_31SocketPerformanceWatcherFactory8ProtocolERKS7_RKN4absl8optionalImEEEEENS8_IFbNS4_9TimeTicksEEEEPKNS4_9TickClockE
@_ZN3net3nqe8internal20SocketWatcherFactoryD1Ev = hidden unnamed_addr alias void (%"class.net::nqe::internal::SocketWatcherFactory"*), void (%"class.net::nqe::internal::SocketWatcherFactory"*)* @_ZN3net3nqe8internal20SocketWatcherFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal20SocketWatcherFactoryC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEENS4_9TimeDeltaENS4_17RepeatingCallbackIFvNS_31SocketPerformanceWatcherFactory8ProtocolERKS7_RKN4absl8optionalImEEEEENS8_IFbNS4_9TimeTicksEEEEPKNS4_9TickClockE(%"class.net::nqe::internal::SocketWatcherFactory"*, %"class.base::SingleThreadTaskRunner"*, i64, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.3"*, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %8 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net3nqe8internal20SocketWatcherFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 1
  %10 = bitcast %class.scoped_refptr* %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 2, i32 0
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 3
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %13, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %14) #7
  %15 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 5, i32 0
  %16 = getelementptr inbounds %"class.base::RepeatingCallback.3", %"class.base::RepeatingCallback.3"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %15, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %16) #7
  %17 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 6
  store %"class.base::TickClock"* %5, %"class.base::TickClock"** %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal20SocketWatcherFactoryD2Ev(%"class.net::nqe::internal::SocketWatcherFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net3nqe8internal20SocketWatcherFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #7
  %5 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #7
  br label %16

16:                                               ; preds = %1, %8, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net3nqe8internal20SocketWatcherFactoryD0Ev(%"class.net::nqe::internal::SocketWatcherFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net3nqe8internal20SocketWatcherFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #7
  %5 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #7
  br label %16

16:                                               ; preds = %1, %8, %13
  %17 = bitcast %"class.net::nqe::internal::SocketWatcherFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::SocketPerformanceWatcher"* @_ZN3net3nqe8internal20SocketWatcherFactory30CreateSocketPerformanceWatcherENS_31SocketPerformanceWatcherFactory8ProtocolERKNS_11AddressListE(%"class.net::nqe::internal::SocketWatcherFactory"*, i32, %"class.net::AddressList"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"class.base::RepeatingCallback.3", align 8
  %6 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 6
  %8 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"class.base::RepeatingCallback.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = tail call i8* @_Znwm(i64 96) #8
  %11 = bitcast i8* %10 to %"class.net::nqe::internal::SocketWatcher"*
  %12 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 2, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = load i8, i8* %6, align 1, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 1, i32 0
  %17 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SingleThreadTaskRunner"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %19, %3
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 4, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %23, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %24) #7
  %25 = getelementptr inbounds %"class.base::RepeatingCallback.3", %"class.base::RepeatingCallback.3"* %5, i64 0, i32 0
  %26 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 5, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %25, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %26) #7
  %27 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  call void @_ZN3net3nqe8internal13SocketWatcherC1ENS_31SocketPerformanceWatcherFactory8ProtocolERKNS_11AddressListEN4base9TimeDeltaEb13scoped_refptrINS8_22SingleThreadTaskRunnerEENS8_17RepeatingCallbackIFvS4_RKS9_RKN4absl8optionalImEEEEENSD_IFbNS8_9TimeTicksEEEEPKNS8_9TickClockE(%"class.net::nqe::internal::SocketWatcher"* nonnull %11, i32 %1, %"class.net::AddressList"* %2, i64 %13, i1 zeroext %15, %"class.base::SingleThreadTaskRunner"* %17, %"class.base::RepeatingCallback"* nonnull %4, %"class.base::RepeatingCallback.3"* nonnull %5, %"class.base::TickClock"* %27) #7
  %28 = getelementptr inbounds %"class.base::RepeatingCallback.3", %"class.base::RepeatingCallback.3"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #7
  %29 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %30 = bitcast i8* %10 to %"class.net::SocketPerformanceWatcher"*
  ret %"class.net::SocketPerformanceWatcher"* %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net3nqe8internal20SocketWatcherFactory22SetTickClockForTestingEPKN4base9TickClockE(%"class.net::nqe::internal::SocketWatcherFactory"* nocapture, %"class.base::TickClock"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.net::nqe::internal::SocketWatcherFactory", %"class.net::nqe::internal::SocketWatcherFactory"* %0, i64 0, i32 6
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN3net3nqe8internal13SocketWatcherC1ENS_31SocketPerformanceWatcherFactory8ProtocolERKNS_11AddressListEN4base9TimeDeltaEb13scoped_refptrINS8_22SingleThreadTaskRunnerEENS8_17RepeatingCallbackIFvS4_RKS9_RKN4absl8optionalImEEEEENSD_IFbNS8_9TimeTicksEEEEPKNS8_9TickClockE(%"class.net::nqe::internal::SocketWatcher"*, i32, %"class.net::AddressList"*, i64, i1 zeroext, %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.3"*, %"class.base::TickClock"*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
