; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpdf_numbertree.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpdf_numbertree.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_NumberTree = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.0" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.31", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.46" }
%"class.fxcrt::RetainPtr.46" = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr.35"*, %"class.fxcrt::RetainPtr.35"*, %"class.std::__1::__compressed_pair.41" }
%"class.fxcrt::RetainPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.fxcrt::RetainPtr.35"* }

@.str = private unnamed_addr constant [7 x i8] c"Limits\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"Nums\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Kids\00", align 1

@_ZN15CPDF_NumberTreeC1EPK15CPDF_Dictionary = hidden unnamed_addr alias void (%class.CPDF_NumberTree*, %class.CPDF_Dictionary*), void (%class.CPDF_NumberTree*, %class.CPDF_Dictionary*)* @_ZN15CPDF_NumberTreeC2EPK15CPDF_Dictionary
@_ZN15CPDF_NumberTreeD1Ev = hidden unnamed_addr alias void (%class.CPDF_NumberTree*), void (%class.CPDF_NumberTree*)* @_ZN15CPDF_NumberTreeD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CPDF_NumberTreeC2EPK15CPDF_Dictionary(%class.CPDF_NumberTree* nocapture, %class.CPDF_Dictionary*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.CPDF_Dictionary* %1 to i64
  %4 = bitcast %class.CPDF_NumberTree* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_NumberTreeD2Ev(%class.CPDF_NumberTree* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_NumberTree, %class.CPDF_NumberTree* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %2, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %2, align 8
  %4 = icmp eq %class.CPDF_Dictionary* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CPDF_Dictionary* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #5
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_Object* @_ZNK15CPDF_NumberTree11LookupValueEi(%class.CPDF_NumberTree* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPDF_NumberTree, %class.CPDF_NumberTree* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = tail call fastcc %class.CPDF_Object* @_ZN12_GLOBAL__N_116SearchNumberNodeEPK15CPDF_Dictionaryi(%class.CPDF_Dictionary* %4, i32 %1)
  ret %class.CPDF_Object* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.CPDF_Object* @_ZN12_GLOBAL__N_116SearchNumberNodeEPK15CPDF_Dictionaryi(%class.CPDF_Dictionary*, i32) unnamed_addr #1 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #5
  %7 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %8 = icmp eq %class.CPDF_Array* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %7, i64 0) #5
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %73, label %12

12:                                               ; preds = %9
  %13 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %7, i64 1) #5
  %14 = icmp slt i32 %13, %1
  br i1 %14, label %73, label %15

15:                                               ; preds = %2, %12
  %16 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #5
  %17 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  %18 = icmp eq %class.CPDF_Array* %17, null
  br i1 %18, label %47, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %17, i64 0, i32 1
  %21 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %17, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"class.fxcrt::RetainPtr.35"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %36, label %73

29:                                               ; preds = %41
  %30 = load i64, i64* %22, align 8
  %31 = load i64, i64* %24, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i64 %33, 1
  %35 = icmp ult i64 %43, %34
  br i1 %35, label %36, label %73

36:                                               ; preds = %19, %29
  %37 = phi i64 [ %43, %29 ], [ 0, %19 ]
  %38 = shl nuw i64 %37, 1
  %39 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %17, i64 %38) #5
  %40 = icmp eq i32 %39, %1
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = icmp sgt i32 %39, %1
  %43 = add nuw nsw i64 %37, 1
  br i1 %42, label %73, label %29

44:                                               ; preds = %36
  %45 = or i64 %38, 1
  %46 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %17, i64 %45) #5
  br label %73

47:                                               ; preds = %15
  %48 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #5
  %49 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #5
  %50 = icmp eq %class.CPDF_Array* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %49, i64 0, i32 1
  %53 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %49, i64 0, i32 1, i32 0, i32 1
  %54 = bitcast %"class.fxcrt::RetainPtr.35"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %55, %57
  br i1 %58, label %73, label %59

59:                                               ; preds = %51, %66
  %60 = phi i64 [ %67, %66 ], [ 0, %51 ]
  %61 = call %class.CPDF_Dictionary* @_ZNK10CPDF_Array9GetDictAtEm(%class.CPDF_Array* nonnull %49, i64 %60) #5
  %62 = icmp eq %class.CPDF_Dictionary* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = call fastcc %class.CPDF_Object* @_ZN12_GLOBAL__N_116SearchNumberNodeEPK15CPDF_Dictionaryi(%class.CPDF_Dictionary* nonnull %61, i32 %1)
  %65 = icmp eq %class.CPDF_Object* %64, null
  br i1 %65, label %66, label %73

66:                                               ; preds = %63, %59
  %67 = add nuw i64 %60, 1
  %68 = load i64, i64* %54, align 8
  %69 = load i64, i64* %56, align 8
  %70 = sub i64 %68, %69
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %67, %71
  br i1 %72, label %59, label %73

73:                                               ; preds = %41, %29, %63, %66, %51, %19, %12, %9, %47, %44
  %74 = phi %class.CPDF_Object* [ null, %12 ], [ null, %9 ], [ null, %47 ], [ %46, %44 ], [ null, %51 ], [ null, %19 ], [ %64, %63 ], [ null, %66 ], [ null, %29 ], [ null, %41 ]
  ret %class.CPDF_Object* %74
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

declare i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

declare %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

declare %class.CPDF_Dictionary* @_ZNK10CPDF_Array9GetDictAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
