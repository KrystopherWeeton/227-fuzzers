; ModuleID = '../../third_party/blink/renderer/platform/exported/web_crypto_result.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_crypto_result.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebCryptoResult" = type { %"class.blink::WebPrivatePtr", %"class.blink::WebPrivatePtr.0" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebPrivatePtr.0" = type { i8* }
%"class.blink::CryptoResult" = type { i32 (...)** }
%"class.blink::CryptoResultCancel" = type <{ %"class.WTF::ThreadSafeRefCounted", %"class.base::AtomicFlag", [3 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::CryptoResult"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.180", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.124", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.104", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.118", [4 x i8] }>
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106", %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i64 }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { float }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.127", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.184" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.1" }
%"class.blink::WebPrivatePtr.1" = type { i8* }
%class.scoped_refptr.8 = type { %"class.blink::CryptoResultCancel"* }
%"class.blink::PtrStorageImpl" = type { %"class.blink::CrossThreadPersistent"* }
%"class.blink::PtrStorageImpl.190" = type { %"class.blink::CryptoResultCancel"* }
%"class.blink::PersistentLocation" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink14PtrStorageImplINS_12CryptoResultELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_12CryptoResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12CryptoResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_12CryptoResultEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14PtrStorageImplINS_18CryptoResultCancelELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS1_E = comdat any

$_ZN5blink14PtrStorageImplINS_18CryptoResultCancelELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignERKS5_ = comdat any

@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink15WebCryptoResultC1EPNS_12CryptoResultE13scoped_refptrINS_18CryptoResultCancelEE = hidden unnamed_addr alias void (%"class.blink::WebCryptoResult"*, %"class.blink::CryptoResult"*, %"class.blink::CryptoResultCancel"*), void (%"class.blink::WebCryptoResult"*, %"class.blink::CryptoResult"*, %"class.blink::CryptoResultCancel"*)* @_ZN5blink15WebCryptoResultC2EPNS_12CryptoResultE13scoped_refptrINS_18CryptoResultCancelEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResult17CompleteWithErrorENS_18WebCryptoErrorTypeERKNS_9WebStringE(%"class.blink::WebCryptoResult"* nocapture, i32, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::WebPrivatePtr.0"* %4 to %"class.blink::CryptoResultCancel"**
  %6 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i8, i8* %7 acquire, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %12 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %11, align 8
  %13 = icmp eq %"class.blink::CrossThreadPersistent"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %12, i64 0, i32 0, i32 0
  %16 = load %"class.blink::CryptoResult"*, %"class.blink::CryptoResult"** %15, align 8
  %17 = bitcast %"class.blink::CryptoResult"* %16 to void (%"class.blink::CryptoResult"*, i32, %"class.blink::WebString"*)***
  br label %18

18:                                               ; preds = %10, %14
  %19 = phi void (%"class.blink::CryptoResult"*, i32, %"class.blink::WebString"*)*** [ %17, %14 ], [ null, %10 ]
  %20 = phi %"class.blink::CryptoResult"* [ %16, %14 ], [ null, %10 ]
  %21 = load void (%"class.blink::CryptoResult"*, i32, %"class.blink::WebString"*)**, void (%"class.blink::CryptoResult"*, i32, %"class.blink::WebString"*)*** %19, align 8
  %22 = getelementptr inbounds void (%"class.blink::CryptoResult"*, i32, %"class.blink::WebString"*)*, void (%"class.blink::CryptoResult"*, i32, %"class.blink::WebString"*)** %21, i64 2
  %23 = load void (%"class.blink::CryptoResult"*, i32, %"class.blink::WebString"*)*, void (%"class.blink::CryptoResult"*, i32, %"class.blink::WebString"*)** %22, align 8
  tail call void %23(%"class.blink::CryptoResult"* %20, i32 %1, %"class.blink::WebString"* dereferenceable(8) %2) #6
  br label %24

24:                                               ; preds = %3, %18
  tail call void @_ZN5blink15WebCryptoResult5ResetEv(%"class.blink::WebCryptoResult"* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15WebCryptoResult9CancelledEv(%"class.blink::WebCryptoResult"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::WebPrivatePtr.0"* %2 to %"class.blink::CryptoResultCancel"**
  %4 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i8, i8* %5 acquire, align 1
  %7 = icmp ne i8 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResult5ResetEv(%"class.blink::WebCryptoResult"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %3 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %2, align 8
  %4 = icmp eq %"class.blink::CrossThreadPersistent"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %5
  %11 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #6
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #6
  %13 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #6
  %14 = load atomic i64, i64* %7 monotonic, align 8
  %15 = inttoptr i64 %14 to %"class.blink::PersistentNode"*
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %13, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::CrossThreadPersistentRegion"* %13 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = inttoptr i64 %14 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %15, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %22, align 8
  store %"class.blink::PersistentNode"* %15, %"class.blink::PersistentNode"** %18, align 8
  br label %23

23:                                               ; preds = %17, %10
  store atomic i64 0, i64* %7 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #6
  br label %24

24:                                               ; preds = %23, %5
  %25 = bitcast %"class.blink::CrossThreadPersistent"* %3 to i8*
  tail call void @free(i8* %25) #6
  br label %26

26:                                               ; preds = %1, %24
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %2, align 8
  %27 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %28 = bitcast %"class.blink::WebPrivatePtr.0"* %27 to %"class.blink::CryptoResultCancel"**
  %29 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %28, align 8
  %30 = icmp eq %"class.blink::CryptoResultCancel"* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %40

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %29, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 1
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %37 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %38) #6
  %39 = bitcast %"class.blink::CryptoResultCancel"* %29 to i8*
  tail call void @free(i8* %39) #6
  br label %40

40:                                               ; preds = %26, %31, %35
  store %"class.blink::CryptoResultCancel"* null, %"class.blink::CryptoResultCancel"** %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResult18CompleteWithBufferEPKvj(%"class.blink::WebCryptoResult"* nocapture, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::WebPrivatePtr.0"* %4 to %"class.blink::CryptoResultCancel"**
  %6 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i8, i8* %7 acquire, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %12 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %11, align 8
  %13 = icmp eq %"class.blink::CrossThreadPersistent"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %12, i64 0, i32 0, i32 0
  %16 = load %"class.blink::CryptoResult"*, %"class.blink::CryptoResult"** %15, align 8
  %17 = bitcast %"class.blink::CryptoResult"* %16 to void (%"class.blink::CryptoResult"*, i8*, i32)***
  br label %18

18:                                               ; preds = %10, %14
  %19 = phi void (%"class.blink::CryptoResult"*, i8*, i32)*** [ %17, %14 ], [ null, %10 ]
  %20 = phi %"class.blink::CryptoResult"* [ %16, %14 ], [ null, %10 ]
  %21 = load void (%"class.blink::CryptoResult"*, i8*, i32)**, void (%"class.blink::CryptoResult"*, i8*, i32)*** %19, align 8
  %22 = getelementptr inbounds void (%"class.blink::CryptoResult"*, i8*, i32)*, void (%"class.blink::CryptoResult"*, i8*, i32)** %21, i64 3
  %23 = load void (%"class.blink::CryptoResult"*, i8*, i32)*, void (%"class.blink::CryptoResult"*, i8*, i32)** %22, align 8
  tail call void %23(%"class.blink::CryptoResult"* %20, i8* %1, i32 %2) #6
  br label %24

24:                                               ; preds = %3, %18
  tail call void @_ZN5blink15WebCryptoResult5ResetEv(%"class.blink::WebCryptoResult"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResult16CompleteWithJsonEPKcj(%"class.blink::WebCryptoResult"* nocapture, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::WebPrivatePtr.0"* %4 to %"class.blink::CryptoResultCancel"**
  %6 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i8, i8* %7 acquire, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %12 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %11, align 8
  %13 = icmp eq %"class.blink::CrossThreadPersistent"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %12, i64 0, i32 0, i32 0
  %16 = load %"class.blink::CryptoResult"*, %"class.blink::CryptoResult"** %15, align 8
  %17 = bitcast %"class.blink::CryptoResult"* %16 to void (%"class.blink::CryptoResult"*, i8*, i32)***
  br label %18

18:                                               ; preds = %10, %14
  %19 = phi void (%"class.blink::CryptoResult"*, i8*, i32)*** [ %17, %14 ], [ null, %10 ]
  %20 = phi %"class.blink::CryptoResult"* [ %16, %14 ], [ null, %10 ]
  %21 = load void (%"class.blink::CryptoResult"*, i8*, i32)**, void (%"class.blink::CryptoResult"*, i8*, i32)*** %19, align 8
  %22 = getelementptr inbounds void (%"class.blink::CryptoResult"*, i8*, i32)*, void (%"class.blink::CryptoResult"*, i8*, i32)** %21, i64 4
  %23 = load void (%"class.blink::CryptoResult"*, i8*, i32)*, void (%"class.blink::CryptoResult"*, i8*, i32)** %22, align 8
  tail call void %23(%"class.blink::CryptoResult"* %20, i8* %1, i32 %2) #6
  br label %24

24:                                               ; preds = %3, %18
  tail call void @_ZN5blink15WebCryptoResult5ResetEv(%"class.blink::WebCryptoResult"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResult19CompleteWithBooleanEb(%"class.blink::WebCryptoResult"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr.0"* %3 to %"class.blink::CryptoResultCancel"**
  %5 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i8, i8* %6 acquire, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %11 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %10, align 8
  %12 = icmp eq %"class.blink::CrossThreadPersistent"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %11, i64 0, i32 0, i32 0
  %15 = load %"class.blink::CryptoResult"*, %"class.blink::CryptoResult"** %14, align 8
  %16 = bitcast %"class.blink::CryptoResult"* %15 to void (%"class.blink::CryptoResult"*, i1)***
  br label %17

17:                                               ; preds = %9, %13
  %18 = phi void (%"class.blink::CryptoResult"*, i1)*** [ %16, %13 ], [ null, %9 ]
  %19 = phi %"class.blink::CryptoResult"* [ %15, %13 ], [ null, %9 ]
  %20 = load void (%"class.blink::CryptoResult"*, i1)**, void (%"class.blink::CryptoResult"*, i1)*** %18, align 8
  %21 = getelementptr inbounds void (%"class.blink::CryptoResult"*, i1)*, void (%"class.blink::CryptoResult"*, i1)** %20, i64 5
  %22 = load void (%"class.blink::CryptoResult"*, i1)*, void (%"class.blink::CryptoResult"*, i1)** %21, align 8
  tail call void %22(%"class.blink::CryptoResult"* %19, i1 zeroext %1) #6
  br label %23

23:                                               ; preds = %2, %17
  tail call void @_ZN5blink15WebCryptoResult5ResetEv(%"class.blink::WebCryptoResult"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResult15CompleteWithKeyERKNS_12WebCryptoKeyE(%"class.blink::WebCryptoResult"* nocapture, %"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WebPrivatePtr.0"* %3 to %"class.blink::CryptoResultCancel"**
  %5 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i8, i8* %6 acquire, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %11 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %10, align 8
  %12 = icmp eq %"class.blink::CrossThreadPersistent"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %11, i64 0, i32 0, i32 0
  %15 = load %"class.blink::CryptoResult"*, %"class.blink::CryptoResult"** %14, align 8
  %16 = bitcast %"class.blink::CryptoResult"* %15 to void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*)***
  br label %17

17:                                               ; preds = %9, %13
  %18 = phi void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*)*** [ %16, %13 ], [ null, %9 ]
  %19 = phi %"class.blink::CryptoResult"* [ %15, %13 ], [ null, %9 ]
  %20 = load void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*)**, void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*)*** %18, align 8
  %21 = getelementptr inbounds void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*)*, void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*)** %20, i64 6
  %22 = load void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*)*, void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*)** %21, align 8
  tail call void %22(%"class.blink::CryptoResult"* %19, %"class.blink::WebCryptoKey"* dereferenceable(8) %1) #6
  br label %23

23:                                               ; preds = %2, %17
  tail call void @_ZN5blink15WebCryptoResult5ResetEv(%"class.blink::WebCryptoResult"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResult19CompleteWithKeyPairERKNS_12WebCryptoKeyES3_(%"class.blink::WebCryptoResult"* nocapture, %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::WebPrivatePtr.0"* %4 to %"class.blink::CryptoResultCancel"**
  %6 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i8, i8* %7 acquire, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %12 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %11, align 8
  %13 = icmp eq %"class.blink::CrossThreadPersistent"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %12, i64 0, i32 0, i32 0
  %16 = load %"class.blink::CryptoResult"*, %"class.blink::CryptoResult"** %15, align 8
  %17 = bitcast %"class.blink::CryptoResult"* %16 to void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"*)***
  br label %18

18:                                               ; preds = %10, %14
  %19 = phi void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"*)*** [ %17, %14 ], [ null, %10 ]
  %20 = phi %"class.blink::CryptoResult"* [ %16, %14 ], [ null, %10 ]
  %21 = load void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"*)**, void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"*)*** %19, align 8
  %22 = getelementptr inbounds void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"*)*, void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"*)** %21, i64 7
  %23 = load void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"*)*, void (%"class.blink::CryptoResult"*, %"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"*)** %22, align 8
  tail call void %23(%"class.blink::CryptoResult"* %20, %"class.blink::WebCryptoKey"* dereferenceable(8) %1, %"class.blink::WebCryptoKey"* dereferenceable(8) %2) #6
  br label %24

24:                                               ; preds = %3, %18
  tail call void @_ZN5blink15WebCryptoResult5ResetEv(%"class.blink::WebCryptoResult"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResultC2EPNS_12CryptoResultE13scoped_refptrINS_18CryptoResultCancelEE(%"class.blink::WebCryptoResult"*, %"class.blink::CryptoResult"*, %"class.blink::CryptoResultCancel"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.8, align 8
  %5 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %4, i64 0, i32 0
  store %"class.blink::CryptoResultCancel"* %2, %"class.blink::CryptoResultCancel"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %6, align 8
  %7 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_12CryptoResultELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %7, %"class.blink::CryptoResult"* %1) #6
  %8 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::WebPrivatePtr.0", %"class.blink::WebPrivatePtr.0"* %8, i64 0, i32 0
  store i8* null, i8** %9, align 8
  %10 = bitcast %"class.blink::WebPrivatePtr.0"* %8 to %"class.blink::PtrStorageImpl.190"*
  call void @_ZN5blink14PtrStorageImplINS_18CryptoResultCancelELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS1_E(%"class.blink::PtrStorageImpl.190"* %10, %class.scoped_refptr.8* nonnull dereferenceable(8) %4) #6
  %11 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %5, align 8
  %12 = icmp eq %"class.blink::CryptoResultCancel"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %11, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 1
  %20 = bitcast %"class.base::RefCountedThreadSafe"* %19 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %20) #6
  %21 = bitcast %"class.blink::CryptoResultCancel"* %11 to i8*
  call void @free(i8* %21) #6
  br label %22

22:                                               ; preds = %3, %13, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15WebCryptoResult6AssignERKS0_(%"class.blink::WebCryptoResult"*, %"class.blink::WebCryptoResult"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebCryptoResult"* %0 to %"class.blink::PtrStorageImpl"*
  %4 = bitcast %"class.blink::WebCryptoResult"* %1 to %"class.blink::CrossThreadPersistent"**
  %5 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  %6 = icmp eq %"class.blink::CrossThreadPersistent"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::CryptoResult"*, %"class.blink::CryptoResult"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::CryptoResult"* [ %9, %7 ], [ null, %2 ]
  tail call void @_ZN5blink14PtrStorageImplINS_12CryptoResultELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %3, %"class.blink::CryptoResult"* %11) #6
  %12 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::WebCryptoResult", %"class.blink::WebCryptoResult"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::WebPrivatePtr.0"* %13 to %"class.blink::PtrStorageImpl.190"*
  %15 = bitcast %"class.blink::WebPrivatePtr.0"* %12 to %"class.blink::PtrStorageImpl.190"*
  tail call void @_ZN5blink14PtrStorageImplINS_18CryptoResultCancelELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignERKS5_(%"class.blink::PtrStorageImpl.190"* %14, %"class.blink::PtrStorageImpl.190"* dereferenceable(8) %15) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_12CryptoResultELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"*, %"class.blink::CryptoResult"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PersistentLocation", align 8
  %4 = icmp eq %"class.blink::CryptoResult"* %1, null
  %5 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %6 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %5, align 8
  %7 = icmp eq %"class.blink::CrossThreadPersistent"* %6, null
  br i1 %4, label %8, label %31

8:                                                ; preds = %2
  br i1 %7, label %30, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 1
  %11 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %10 to i64*
  %12 = load atomic i64, i64* %11 acquire, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %9
  %15 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #6
  %16 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %15, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %16) #6
  %17 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #6
  %18 = load atomic i64, i64* %11 monotonic, align 8
  %19 = inttoptr i64 %18 to %"class.blink::PersistentNode"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %17, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::CrossThreadPersistentRegion"* %17 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = inttoptr i64 %18 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %21, %14
  store atomic i64 0, i64* %11 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #6
  br label %28

28:                                               ; preds = %27, %9
  %29 = bitcast %"class.blink::CrossThreadPersistent"* %6 to i8*
  tail call void @free(i8* %29) #6
  br label %30

30:                                               ; preds = %8, %28
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %5, align 8
  br label %43

31:                                               ; preds = %2
  br i1 %7, label %32, label %38

32:                                               ; preds = %31
  %33 = tail call noalias i8* @malloc(i64 16) #6
  %34 = bitcast %"class.blink::PersistentLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 32, i1 false) #6
  %35 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %35) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #6
  %36 = bitcast %"class.blink::PtrStorageImpl"* %0 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %33 to %"class.blink::CrossThreadPersistent"*
  br label %38

38:                                               ; preds = %31, %32
  %39 = phi %"class.blink::CrossThreadPersistent"* [ %6, %31 ], [ %37, %32 ]
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %39, i64 0, i32 0
  %41 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #6
  %42 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %41, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %42) #6
  call void @_ZN5blink14PersistentBaseINS_12CryptoResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %40, %"class.blink::CryptoResult"* nonnull %1) #6
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %42) #6
  br label %43

43:                                               ; preds = %38, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_12CryptoResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::CryptoResult"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::CryptoResult"* %1, %"class.blink::CryptoResult"** %3, align 8
  %4 = ptrtoint %"class.blink::CryptoResult"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #6
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #6
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12CryptoResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #6
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12CryptoResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CryptoResult"**
  %5 = load %"class.blink::CryptoResult"*, %"class.blink::CryptoResult"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #6
  %7 = icmp eq %"class.blink::CryptoResult"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CryptoResult"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12CryptoResultEE5TraceEPNS_7VisitorEPKv to {}*), %"class.base::Location"* nonnull dereferenceable(32) %3) #6
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12CryptoResultEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CryptoResult"*
  %4 = bitcast i8* %1 to void (%"class.blink::CryptoResult"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CryptoResult"*, %"class.blink::Visitor"*)**, void (%"class.blink::CryptoResult"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CryptoResult"*, %"class.blink::Visitor"*)*, void (%"class.blink::CryptoResult"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::CryptoResult"*, %"class.blink::Visitor"*)*, void (%"class.blink::CryptoResult"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CryptoResult"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_18CryptoResultCancelELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS1_E(%"class.blink::PtrStorageImpl.190"*, %class.scoped_refptr.8* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::PtrStorageImpl.190", %"class.blink::PtrStorageImpl.190"* %0, i64 0, i32 0
  %5 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %4, align 8
  %6 = icmp eq %"class.blink::CryptoResultCancel"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 1
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %14) #6
  %15 = bitcast %"class.blink::CryptoResultCancel"* %5 to i8*
  tail call void @free(i8* %15) #6
  br label %16

16:                                               ; preds = %2, %7, %11
  store %"class.blink::CryptoResultCancel"* null, %"class.blink::CryptoResultCancel"** %4, align 8
  %17 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %1, i64 0, i32 0
  %18 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %17, align 8
  %19 = icmp eq %"class.blink::CryptoResultCancel"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #6
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br label %27

27:                                               ; preds = %16, %24, %20
  %28 = bitcast %class.scoped_refptr.8* %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::PtrStorageImpl.190"* %0 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %17, align 8
  store i64 0, i64* %28, align 8
  %32 = icmp eq %"class.blink::CryptoResultCancel"* %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %31, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 1
  %40 = bitcast %"class.base::RefCountedThreadSafe"* %39 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %40) #6
  %41 = bitcast %"class.blink::CryptoResultCancel"* %31 to i8*
  call void @free(i8* %41) #6
  br label %42

42:                                               ; preds = %27, %33, %37
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_18CryptoResultCancelELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignERKS5_(%"class.blink::PtrStorageImpl.190"*, %"class.blink::PtrStorageImpl.190"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::PtrStorageImpl.190", %"class.blink::PtrStorageImpl.190"* %1, i64 0, i32 0
  %5 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::PtrStorageImpl.190", %"class.blink::PtrStorageImpl.190"* %0, i64 0, i32 0
  %7 = load %"class.blink::CryptoResultCancel"*, %"class.blink::CryptoResultCancel"** %6, align 8
  %8 = icmp eq %"class.blink::CryptoResultCancel"* %7, %5
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.blink::CryptoResultCancel"* %7, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %7, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 1
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %17 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %18) #6
  %19 = bitcast %"class.blink::CryptoResultCancel"* %7 to i8*
  tail call void @free(i8* %19) #6
  br label %20

20:                                               ; preds = %9, %11, %15
  store %"class.blink::CryptoResultCancel"* null, %"class.blink::CryptoResultCancel"** %6, align 8
  %21 = icmp eq %"class.blink::CryptoResultCancel"* %5, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::CryptoResultCancel", %"class.blink::CryptoResultCancel"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #6
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %29

29:                                               ; preds = %26, %22, %20
  store %"class.blink::CryptoResultCancel"* %5, %"class.blink::CryptoResultCancel"** %6, align 8
  br label %30

30:                                               ; preds = %2, %29
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
