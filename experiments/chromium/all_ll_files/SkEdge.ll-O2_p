; ModuleID = '../../third_party/skia/src/core/SkEdge.cpp'
source_filename = "../../third_party/skia/src/core/SkEdge.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkEdge = type { %struct.SkEdge*, %struct.SkEdge*, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.SkPoint = type { float, float }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkQuadraticEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SkCubicEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6SkEdge7setLineERK7SkPointS2_PK7SkIRecti(%struct.SkEdge* nocapture, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkIRect* readonly, i32) local_unnamed_addr #0 align 2 {
  %6 = add nsw i32 %4, 6
  %7 = shl i32 1, %6
  %8 = sitofp i32 %7 to float
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, %8
  %12 = fptosi float %11 to i32
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fmul float %14, %8
  %16 = fptosi float %15 to i32
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %18 = load float, float* %17, align 4
  %19 = fmul float %18, %8
  %20 = fptosi float %19 to i32
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fmul float %22, %8
  %24 = fptosi float %23 to i32
  %25 = icmp sgt i32 %16, %24
  %26 = select i1 %25, i32 %20, i32 %12
  %27 = select i1 %25, i32 %24, i32 %16
  %28 = select i1 %25, i32 %12, i32 %20
  %29 = select i1 %25, i32 %16, i32 %24
  %30 = select i1 %25, i8 -1, i8 1
  %31 = add nsw i32 %27, 32
  %32 = ashr i32 %31, 6
  %33 = add nsw i32 %29, 32
  %34 = ashr i32 %33, 6
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %93, label %36

36:                                               ; preds = %5
  %37 = icmp ne %struct.SkIRect* %3, null
  br i1 %37, label %38, label %46

38:                                               ; preds = %36
  %39 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %32, %40
  br i1 %41, label %42, label %93

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %34, %44
  br i1 %45, label %46, label %93

46:                                               ; preds = %42, %36
  %47 = sub nsw i32 %28, %26
  %48 = sub nsw i32 %29, %27
  %49 = add i32 %47, 32768
  %50 = icmp ult i32 %49, 65536
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = shl i32 %47, 16
  %53 = sdiv i32 %52, %48
  br label %64

54:                                               ; preds = %46
  %55 = sext i32 %47 to i64
  %56 = shl nsw i64 %55, 16
  %57 = sext i32 %48 to i64
  %58 = sdiv i64 %56, %57
  %59 = icmp slt i64 %58, 2147483647
  %60 = select i1 %59, i64 %58, i64 2147483647
  %61 = icmp sgt i64 %60, -2147483647
  %62 = select i1 %61, i64 %60, i64 -2147483647
  %63 = trunc i64 %62 to i32
  br label %64

64:                                               ; preds = %51, %54
  %65 = phi i32 [ %53, %51 ], [ %63, %54 ]
  %66 = and i32 %31, -64
  %67 = or i32 %66, 32
  %68 = sub nsw i32 %67, %27
  %69 = sext i32 %65 to i64
  %70 = sext i32 %68 to i64
  %71 = mul nsw i64 %69, %70
  %72 = lshr i64 %71, 16
  %73 = trunc i64 %72 to i32
  %74 = add nsw i32 %26, %73
  %75 = shl i32 %74, 10
  %76 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 2
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 3
  store i32 %65, i32* %77, align 4
  %78 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 4
  store i32 %32, i32* %78, align 8
  %79 = add nsw i32 %34, -1
  %80 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 5
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 6
  store i8 0, i8* %81, align 8
  %82 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 9
  store i8 %30, i8* %82, align 1
  %83 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 7
  store i8 0, i8* %83, align 1
  br i1 %37, label %84, label %93

84:                                               ; preds = %64
  %85 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %86, %32
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = sub nsw i32 %86, %32
  %90 = mul nsw i32 %89, %65
  %91 = add nsw i32 %90, %75
  store i32 %91, i32* %76, align 8
  %92 = load i32, i32* %85, align 4
  store i32 %92, i32* %78, align 8
  br label %93

93:                                               ; preds = %88, %84, %64, %38, %42, %5
  %94 = phi i32 [ 0, %5 ], [ 0, %42 ], [ 0, %38 ], [ 1, %64 ], [ 1, %84 ], [ 1, %88 ]
  ret i32 %94
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkEdge16chopLineWithClipERK7SkIRect(%struct.SkEdge* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, %4
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 %6, %4
  %12 = mul nsw i32 %10, %11
  %13 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, %12
  store i32 %15, i32* %13, align 8
  %16 = load i32, i32* %5, align 4
  store i32 %16, i32* %3, align 8
  br label %17

17:                                               ; preds = %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkQuadraticEdge25setQuadraticWithoutUpdateEPK7SkPointi(%struct.SkQuadraticEdge* nocapture, %struct.SkPoint* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = add nsw i32 %2, 6
  %5 = shl i32 1, %4
  %6 = sitofp i32 %5 to float
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, %6
  %10 = fptosi float %9 to i32
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %6
  %14 = fptosi float %13 to i32
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, %6
  %18 = fptosi float %17 to i32
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = fmul float %20, %6
  %22 = fptosi float %21 to i32
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %24 = load float, float* %23, align 4
  %25 = fmul float %24, %6
  %26 = fptosi float %25 to i32
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %28 = load float, float* %27, align 4
  %29 = fmul float %28, %6
  %30 = fptosi float %29 to i32
  %31 = icmp sgt i32 %14, %30
  %32 = select i1 %31, i32 %26, i32 %10
  %33 = select i1 %31, i32 %30, i32 %14
  %34 = select i1 %31, i32 %10, i32 %26
  %35 = select i1 %31, i32 %14, i32 %30
  %36 = add nsw i32 %33, 32
  %37 = add nsw i32 %35, 32
  %38 = xor i32 %36, %37
  %39 = icmp ult i32 %38, 64
  br i1 %39, label %109, label %40

40:                                               ; preds = %3
  %41 = select i1 %31, i8 -1, i8 1
  %42 = shl i32 %18, 1
  %43 = sub i32 %42, %32
  %44 = sub i32 %43, %34
  %45 = ashr i32 %44, 2
  %46 = shl i32 %22, 1
  %47 = sub i32 %46, %33
  %48 = sub i32 %47, %35
  %49 = ashr i32 %48, 2
  %50 = icmp slt i32 %45, 0
  %51 = sub nsw i32 0, %45
  %52 = select i1 %50, i32 %51, i32 %45
  %53 = icmp slt i32 %49, 0
  %54 = sub nsw i32 0, %49
  %55 = select i1 %53, i32 %54, i32 %49
  %56 = icmp sgt i32 %52, %55
  %57 = lshr i32 %55, 1
  %58 = add nuw nsw i32 %57, %52
  %59 = lshr i32 %52, 1
  %60 = add nuw nsw i32 %59, %55
  %61 = select i1 %56, i32 %58, i32 %60
  %62 = add nuw nsw i32 %61, 16
  %63 = add nsw i32 %2, 3
  %64 = lshr i32 %62, %63
  %65 = tail call i32 @llvm.ctlz.i32(i32 %64, i1 false) #3, !range !2
  %66 = sub nuw nsw i32 32, %65
  %67 = ashr i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %67, 6
  %70 = select i1 %69, i32 %67, i32 6
  %71 = select i1 %68, i32 1, i32 %70
  %72 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 9
  store i8 %41, i8* %72, align 1
  %73 = shl i32 1, %71
  %74 = trunc i32 %73 to i8
  %75 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 6
  store i8 %74, i8* %75, align 8
  %76 = add nsw i32 %71, -1
  %77 = trunc i32 %76 to i8
  %78 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 7
  store i8 %77, i8* %78, align 1
  %79 = mul i32 %18, -2
  %80 = add i32 %32, %79
  %81 = add i32 %80, %34
  %82 = shl i32 %81, 9
  %83 = sub nsw i32 %18, %32
  %84 = shl i32 %83, 10
  %85 = shl i32 %32, 10
  %86 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 1
  store i32 %85, i32* %86, align 8
  %87 = ashr i32 %82, %71
  %88 = add nsw i32 %87, %84
  %89 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 3
  store i32 %88, i32* %89, align 8
  %90 = ashr i32 %82, %76
  %91 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 5
  store i32 %90, i32* %91, align 8
  %92 = mul i32 %22, -2
  %93 = add i32 %33, %92
  %94 = add i32 %93, %35
  %95 = shl i32 %94, 9
  %96 = sub nsw i32 %22, %33
  %97 = shl i32 %96, 10
  %98 = shl i32 %33, 10
  %99 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 2
  store i32 %98, i32* %99, align 4
  %100 = ashr i32 %95, %71
  %101 = add nsw i32 %100, %97
  %102 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 4
  store i32 %101, i32* %102, align 4
  %103 = ashr i32 %95, %76
  %104 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 6
  store i32 %103, i32* %104, align 4
  %105 = shl i32 %34, 10
  %106 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 7
  store i32 %105, i32* %106, align 8
  %107 = shl i32 %35, 10
  %108 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 8
  store i32 %107, i32* %108, align 4
  br label %109

109:                                              ; preds = %3, %40
  %110 = phi i1 [ true, %40 ], [ false, %3 ]
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15SkQuadraticEdge12setQuadraticEPK7SkPointi(%struct.SkQuadraticEdge* nocapture, %struct.SkPoint* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN15SkQuadraticEdge25setQuadraticWithoutUpdateEPK7SkPointi(%struct.SkQuadraticEdge* %0, %struct.SkPoint* %1, i32 %2)
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call i32 @_ZN15SkQuadraticEdge15updateQuadraticEv(%struct.SkQuadraticEdge* %0)
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %3 ]
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN15SkQuadraticEdge15updateQuadraticEv(%struct.SkQuadraticEdge* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 6
  %3 = load i8, i8* %2, align 8
  %4 = sext i8 %3 to i32
  %5 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 7
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 7
  %17 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 8
  %18 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 5
  %19 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 6
  br label %20

20:                                               ; preds = %89, %1
  %21 = phi i32 [ %4, %1 ], [ %26, %89 ]
  %22 = phi i32 [ %6, %1 ], [ %43, %89 ]
  %23 = phi i32 [ %8, %1 ], [ %44, %89 ]
  %24 = phi i32 [ %10, %1 ], [ %41, %89 ]
  %25 = phi i32 [ %12, %1 ], [ %42, %89 ]
  %26 = add nsw i32 %21, -1
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %20
  %29 = ashr i32 %24, %15
  %30 = add nsw i32 %29, %22
  %31 = load i32, i32* %18, align 8
  %32 = add nsw i32 %31, %24
  %33 = ashr i32 %25, %15
  %34 = add nsw i32 %33, %23
  %35 = load i32, i32* %19, align 4
  %36 = add nsw i32 %35, %25
  br label %40

37:                                               ; preds = %20
  %38 = load i32, i32* %16, align 8
  %39 = load i32, i32* %17, align 4
  br label %40

40:                                               ; preds = %37, %28
  %41 = phi i32 [ %32, %28 ], [ %24, %37 ]
  %42 = phi i32 [ %36, %28 ], [ %25, %37 ]
  %43 = phi i32 [ %30, %28 ], [ %38, %37 ]
  %44 = phi i32 [ %34, %28 ], [ %39, %37 ]
  %45 = ashr i32 %23, 10
  %46 = ashr i32 %44, 10
  %47 = add nsw i32 %45, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %46, 32
  %50 = ashr i32 %49, 6
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %89, label %52

52:                                               ; preds = %40
  %53 = ashr i32 %22, 10
  %54 = ashr i32 %43, 10
  %55 = sub nsw i32 %54, %53
  %56 = sub nsw i32 %46, %45
  %57 = add nsw i32 %55, 32768
  %58 = icmp ult i32 %57, 65536
  br i1 %58, label %59, label %62

59:                                               ; preds = %52
  %60 = shl i32 %55, 16
  %61 = sdiv i32 %60, %56
  br label %72

62:                                               ; preds = %52
  %63 = sext i32 %55 to i64
  %64 = shl nsw i64 %63, 16
  %65 = sext i32 %56 to i64
  %66 = sdiv i64 %64, %65
  %67 = icmp slt i64 %66, 2147483647
  %68 = select i1 %67, i64 %66, i64 2147483647
  %69 = icmp sgt i64 %68, -2147483647
  %70 = select i1 %69, i64 %68, i64 -2147483647
  %71 = trunc i64 %70 to i32
  br label %72

72:                                               ; preds = %59, %62
  %73 = phi i32 [ %61, %59 ], [ %71, %62 ]
  %74 = and i32 %47, -64
  %75 = or i32 %74, 32
  %76 = sub nsw i32 %75, %45
  %77 = sext i32 %73 to i64
  %78 = sext i32 %76 to i64
  %79 = mul nsw i64 %77, %78
  %80 = lshr i64 %79, 16
  %81 = trunc i64 %80 to i32
  %82 = add nsw i32 %53, %81
  %83 = shl i32 %82, 10
  %84 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 2
  store i32 %83, i32* %84, align 8
  %85 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 3
  store i32 %73, i32* %85, align 4
  %86 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 4
  store i32 %48, i32* %86, align 8
  %87 = add nsw i32 %50, -1
  %88 = getelementptr inbounds %struct.SkQuadraticEdge, %struct.SkQuadraticEdge* %0, i64 0, i32 0, i32 5
  store i32 %87, i32* %88, align 4
  br label %90

89:                                               ; preds = %40
  br i1 %27, label %20, label %90

90:                                               ; preds = %89, %72
  %91 = phi i32 [ 1, %72 ], [ 0, %89 ]
  store i32 %43, i32* %5, align 8
  store i32 %44, i32* %7, align 4
  store i32 %41, i32* %9, align 8
  store i32 %42, i32* %11, align 4
  %92 = trunc i32 %26 to i8
  store i8 %92, i8* %2, align 8
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkCubicEdge21setCubicWithoutUpdateEPK7SkPointib(%struct.SkCubicEdge* nocapture, %struct.SkPoint* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = add nsw i32 %2, 6
  %6 = shl i32 1, %5
  %7 = sitofp i32 %6 to float
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fmul float %9, %7
  %11 = fptosi float %10 to i32
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, %7
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %17 = load float, float* %16, align 4
  %18 = fmul float %17, %7
  %19 = fptosi float %18 to i32
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %21 = load float, float* %20, align 4
  %22 = fmul float %21, %7
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %25 = load float, float* %24, align 4
  %26 = fmul float %25, %7
  %27 = fptosi float %26 to i32
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, %7
  %31 = fptosi float %30 to i32
  %32 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 0
  %33 = load float, float* %32, align 4
  %34 = fmul float %33, %7
  %35 = fptosi float %34 to i32
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 1
  %37 = load float, float* %36, align 4
  %38 = fmul float %37, %7
  %39 = fptosi float %38 to i32
  %40 = icmp sgt i32 %15, %39
  %41 = and i1 %40, %3
  %42 = select i1 %41, i32 %35, i32 %11
  %43 = select i1 %41, i32 %39, i32 %15
  %44 = select i1 %41, i32 %27, i32 %19
  %45 = select i1 %41, i32 %31, i32 %23
  %46 = select i1 %41, i32 %19, i32 %27
  %47 = select i1 %41, i32 %23, i32 %31
  %48 = select i1 %41, i32 %11, i32 %35
  %49 = select i1 %41, i32 %15, i32 %39
  br i1 %3, label %50, label %55

50:                                               ; preds = %4
  %51 = add nsw i32 %49, 32
  %52 = add nsw i32 %43, 32
  %53 = xor i32 %52, %51
  %54 = icmp ult i32 %53, 64
  br i1 %54, label %191, label %55

55:                                               ; preds = %50, %4
  %56 = shl i32 %42, 3
  %57 = mul i32 %44, -15
  %58 = mul nsw i32 %46, 6
  %59 = add i32 %56, %48
  %60 = add i32 %59, %57
  %61 = add i32 %60, %58
  %62 = mul nsw i32 %61, 19
  %63 = ashr i32 %62, 9
  %64 = mul nsw i32 %44, 6
  %65 = add nsw i32 %64, %42
  %66 = mul i32 %46, -15
  %67 = add i32 %65, %66
  %68 = shl i32 %48, 3
  %69 = add nsw i32 %67, %68
  %70 = mul nsw i32 %69, 19
  %71 = ashr i32 %70, 9
  %72 = icmp slt i32 %63, 0
  %73 = sub nsw i32 0, %63
  %74 = select i1 %72, i32 %73, i32 %63
  %75 = icmp slt i32 %71, 0
  %76 = sub nsw i32 0, %71
  %77 = select i1 %75, i32 %76, i32 %71
  %78 = icmp slt i32 %74, %77
  %79 = select i1 %78, i32 %77, i32 %74
  %80 = shl i32 %43, 3
  %81 = mul i32 %45, -15
  %82 = mul nsw i32 %47, 6
  %83 = add i32 %80, %49
  %84 = add i32 %83, %81
  %85 = add i32 %84, %82
  %86 = mul nsw i32 %85, 19
  %87 = ashr i32 %86, 9
  %88 = mul nsw i32 %45, 6
  %89 = add nsw i32 %88, %43
  %90 = mul i32 %47, -15
  %91 = add i32 %89, %90
  %92 = shl i32 %49, 3
  %93 = add nsw i32 %91, %92
  %94 = mul nsw i32 %93, 19
  %95 = ashr i32 %94, 9
  %96 = icmp slt i32 %87, 0
  %97 = sub nsw i32 0, %87
  %98 = select i1 %96, i32 %97, i32 %87
  %99 = icmp slt i32 %95, 0
  %100 = sub nsw i32 0, %95
  %101 = select i1 %99, i32 %100, i32 %95
  %102 = icmp slt i32 %98, %101
  %103 = select i1 %102, i32 %101, i32 %98
  %104 = icmp sgt i32 %79, %103
  %105 = lshr i32 %103, 1
  %106 = add nuw nsw i32 %105, %79
  %107 = lshr i32 %79, 1
  %108 = add nuw nsw i32 %107, %103
  %109 = select i1 %104, i32 %106, i32 %108
  %110 = add nuw nsw i32 %109, 16
  %111 = lshr i32 %110, 5
  %112 = tail call i32 @llvm.ctlz.i32(i32 %111, i1 false) #3, !range !2
  %113 = sub nuw nsw i32 32, %112
  %114 = ashr i32 %113, 1
  %115 = add nsw i32 %114, 1
  %116 = icmp ugt i32 %110, 65535
  %117 = select i1 %116, i32 6, i32 %115
  %118 = icmp slt i32 %117, 4
  %119 = sub nsw i32 10, %117
  %120 = select i1 %118, i32 %119, i32 6
  %121 = icmp sgt i32 %117, 4
  %122 = select i1 %121, i32 %117, i32 4
  %123 = select i1 %41, i8 -1, i8 1
  %124 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 9
  store i8 %123, i8* %124, align 1
  %125 = shl i32 -1, %117
  %126 = trunc i32 %125 to i8
  %127 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 6
  store i8 %126, i8* %127, align 8
  %128 = trunc i32 %117 to i8
  %129 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 7
  store i8 %128, i8* %129, align 1
  %130 = trunc i32 %122 to i8
  %131 = add i8 %130, -4
  %132 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 8
  store i8 %131, i8* %132, align 2
  %133 = sub nsw i32 %44, %42
  %134 = mul nsw i32 %133, 3
  %135 = shl i32 %134, %120
  %136 = mul i32 %44, -2
  %137 = add i32 %46, %42
  %138 = add i32 %137, %136
  %139 = mul nsw i32 %138, 3
  %140 = shl i32 %139, %120
  %141 = sub nsw i32 %44, %46
  %142 = mul nsw i32 %141, 3
  %143 = sub i32 %48, %42
  %144 = add i32 %143, %142
  %145 = shl i32 %144, %120
  %146 = shl i32 %42, 10
  %147 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 1
  store i32 %146, i32* %147, align 8
  %148 = ashr i32 %140, %117
  %149 = add nsw i32 %148, %135
  %150 = shl nsw i32 %117, 1
  %151 = ashr i32 %145, %150
  %152 = add nsw i32 %149, %151
  %153 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 3
  store i32 %152, i32* %153, align 8
  %154 = shl i32 %140, 1
  %155 = mul nsw i32 %145, 3
  %156 = add nsw i32 %117, -1
  %157 = ashr i32 %155, %156
  %158 = add nsw i32 %157, %154
  %159 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 5
  store i32 %158, i32* %159, align 8
  %160 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 7
  store i32 %157, i32* %160, align 8
  %161 = sub nsw i32 %45, %43
  %162 = mul nsw i32 %161, 3
  %163 = shl i32 %162, %120
  %164 = mul i32 %45, -2
  %165 = add i32 %47, %43
  %166 = add i32 %165, %164
  %167 = mul nsw i32 %166, 3
  %168 = shl i32 %167, %120
  %169 = sub nsw i32 %45, %47
  %170 = mul nsw i32 %169, 3
  %171 = sub i32 %49, %43
  %172 = add i32 %171, %170
  %173 = shl i32 %172, %120
  %174 = shl i32 %43, 10
  %175 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 2
  store i32 %174, i32* %175, align 4
  %176 = ashr i32 %168, %117
  %177 = add nsw i32 %176, %163
  %178 = ashr i32 %173, %150
  %179 = add nsw i32 %177, %178
  %180 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 4
  store i32 %179, i32* %180, align 4
  %181 = shl i32 %168, 1
  %182 = mul nsw i32 %173, 3
  %183 = ashr i32 %182, %156
  %184 = add nsw i32 %183, %181
  %185 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 6
  store i32 %184, i32* %185, align 4
  %186 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 8
  store i32 %183, i32* %186, align 4
  %187 = shl i32 %48, 10
  %188 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 9
  store i32 %187, i32* %188, align 8
  %189 = shl i32 %49, 10
  %190 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 10
  store i32 %189, i32* %190, align 4
  br label %191

191:                                              ; preds = %50, %55
  %192 = phi i1 [ true, %55 ], [ false, %50 ]
  ret i1 %192
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkCubicEdge8setCubicEPK7SkPointi(%struct.SkCubicEdge* nocapture, %struct.SkPoint* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN11SkCubicEdge21setCubicWithoutUpdateEPK7SkPointib(%struct.SkCubicEdge* %0, %struct.SkPoint* %1, i32 %2, i1 zeroext true)
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call i32 @_ZN11SkCubicEdge11updateCubicEv(%struct.SkCubicEdge* %0)
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %3 ]
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN11SkCubicEdge11updateCubicEv(%struct.SkCubicEdge* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 6
  %3 = load i8, i8* %2, align 8
  %4 = sext i8 %3 to i32
  %5 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 7
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 8
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 9
  %16 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 10
  %17 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 3
  %18 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 7
  %19 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 8
  %20 = bitcast i32* %17 to <4 x i32>*
  %21 = bitcast i32* %17 to <4 x i32>*
  br label %22

22:                                               ; preds = %99, %1
  %23 = phi i32 [ %4, %1 ], [ %26, %99 ]
  %24 = phi i32 [ %6, %1 ], [ %51, %99 ]
  %25 = phi i32 [ %8, %1 ], [ %54, %99 ]
  %26 = add nsw i32 %23, 1
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %47

28:                                               ; preds = %22
  %29 = load <4 x i32>, <4 x i32>* %20, align 8
  %30 = extractelement <4 x i32> %29, i32 0
  %31 = ashr i32 %30, %14
  %32 = add nsw i32 %31, %24
  %33 = extractelement <4 x i32> %29, i32 2
  %34 = ashr i32 %33, %11
  %35 = load i32, i32* %18, align 8
  %36 = extractelement <4 x i32> %29, i32 1
  %37 = ashr i32 %36, %14
  %38 = add nsw i32 %37, %25
  %39 = extractelement <4 x i32> %29, i32 3
  %40 = ashr i32 %39, %11
  %41 = load i32, i32* %19, align 4
  %42 = insertelement <4 x i32> undef, i32 %34, i32 0
  %43 = insertelement <4 x i32> %42, i32 %40, i32 1
  %44 = insertelement <4 x i32> %43, i32 %35, i32 2
  %45 = insertelement <4 x i32> %44, i32 %41, i32 3
  %46 = add nsw <4 x i32> %45, %29
  store <4 x i32> %46, <4 x i32>* %21, align 8
  br label %50

47:                                               ; preds = %22
  %48 = load i32, i32* %15, align 8
  %49 = load i32, i32* %16, align 4
  br label %50

50:                                               ; preds = %47, %28
  %51 = phi i32 [ %32, %28 ], [ %48, %47 ]
  %52 = phi i32 [ %38, %28 ], [ %49, %47 ]
  %53 = icmp slt i32 %52, %25
  %54 = select i1 %53, i32 %25, i32 %52
  %55 = ashr i32 %25, 10
  %56 = ashr i32 %54, 10
  %57 = add nsw i32 %55, 32
  %58 = ashr i32 %57, 6
  %59 = add nsw i32 %56, 32
  %60 = ashr i32 %59, 6
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %99, label %62

62:                                               ; preds = %50
  %63 = ashr i32 %24, 10
  %64 = ashr i32 %51, 10
  %65 = sub nsw i32 %64, %63
  %66 = sub nsw i32 %56, %55
  %67 = add nsw i32 %65, 32768
  %68 = icmp ult i32 %67, 65536
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = shl i32 %65, 16
  %71 = sdiv i32 %70, %66
  br label %82

72:                                               ; preds = %62
  %73 = sext i32 %65 to i64
  %74 = shl nsw i64 %73, 16
  %75 = sext i32 %66 to i64
  %76 = sdiv i64 %74, %75
  %77 = icmp slt i64 %76, 2147483647
  %78 = select i1 %77, i64 %76, i64 2147483647
  %79 = icmp sgt i64 %78, -2147483647
  %80 = select i1 %79, i64 %78, i64 -2147483647
  %81 = trunc i64 %80 to i32
  br label %82

82:                                               ; preds = %69, %72
  %83 = phi i32 [ %71, %69 ], [ %81, %72 ]
  %84 = and i32 %57, -64
  %85 = or i32 %84, 32
  %86 = sub nsw i32 %85, %55
  %87 = sext i32 %83 to i64
  %88 = sext i32 %86 to i64
  %89 = mul nsw i64 %87, %88
  %90 = lshr i64 %89, 16
  %91 = trunc i64 %90 to i32
  %92 = add nsw i32 %63, %91
  %93 = shl i32 %92, 10
  %94 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 2
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 3
  store i32 %83, i32* %95, align 4
  %96 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 4
  store i32 %58, i32* %96, align 8
  %97 = add nsw i32 %60, -1
  %98 = getelementptr inbounds %struct.SkCubicEdge, %struct.SkCubicEdge* %0, i64 0, i32 0, i32 5
  store i32 %97, i32* %98, align 4
  br label %100

99:                                               ; preds = %50
  br i1 %27, label %22, label %100

100:                                              ; preds = %99, %82
  %101 = phi i32 [ 1, %82 ], [ 0, %99 ]
  store i32 %51, i32* %5, align 8
  store i32 %54, i32* %7, align 4
  %102 = trunc i32 %26 to i8
  store i8 %102, i8* %2, align 8
  ret i32 %101
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
