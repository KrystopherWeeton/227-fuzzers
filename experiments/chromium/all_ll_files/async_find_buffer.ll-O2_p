; ModuleID = '../../third_party/blink/renderer/core/editing/finder/async_find_buffer.cc'
source_filename = "../../third_party/blink/renderer/core/editing/finder/async_find_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.162", i32, [4 x i8], %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.298", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.332", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.339", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.278", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__cxx_atomic_impl.201" }
%"struct.std::__1::__cxx_atomic_impl.201" = type { %"struct.std::__1::__cxx_atomic_base_impl.202" }
%"struct.std::__1::__cxx_atomic_base_impl.202" = type { i64 }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::Worklist.209"* }
%"class.blink::Worklist.209" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::Worklist.216"* }
%"class.blink::Worklist.216" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::Worklist.223"* }
%"class.blink::Worklist.223" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::Worklist.230"* }
%"class.blink::Worklist.230" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::Worklist.237"* }
%"class.blink::Worklist.237" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::Worklist.244"* }
%"class.blink::Worklist.244" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::Worklist.251"* }
%"class.blink::Worklist.251" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.198" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.272", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { i64 }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { float }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.281", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.290" }
%"class.WTF::Vector.290" = type { %"class.WTF::VectorBuffer.291" }
%"class.WTF::VectorBuffer.291" = type { %"class.WTF::VectorBufferBase.292" }
%"class.WTF::VectorBufferBase.292" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.320" }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.209"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.216"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.223"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.230"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.237"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.570" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.338 }
%class.scoped_refptr.338 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.339" = type { %"struct.std::__1::__atomic_base.340" }
%"struct.std::__1::__atomic_base.340" = type { %"struct.std::__1::__cxx_atomic_impl.341" }
%"struct.std::__1::__cxx_atomic_impl.341" = type { %"struct.std::__1::__cxx_atomic_base_impl.342" }
%"struct.std::__1::__cxx_atomic_base_impl.342" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AsyncFindBuffer" = type { %"class.blink::FindBufferRunner", %"class.blink::TaskHandle", i32, %"class.base::TimeTicks" }
%"class.blink::FindBufferRunner" = type { i32 (...)** }
%"class.blink::TaskHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::RangeInFlatTree" = type { %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::RelocatablePosition"* }
%"class.blink::RelocatablePosition" = type { %"class.blink::Member.4", %"class.blink::PositionTemplate" }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.111", %"class.WTF::Vector.111", i8, i32, %"class.blink::Member.122", %"class.blink::Member.124", %"class.blink::Member.126", %"class.blink::Member.128", %"class.blink::Member.130", %"class.blink::Member.132", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.135", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.141", %"class.blink::Member.143", %"class.blink::Member.70", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.145", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.32", %"class.blink::Member.4", %"class.blink::Member.32", %"class.blink::Member.32", %"class.blink::Member.32", %"class.blink::UserActionElementSet", %"class.blink::Member.362", double, double, i64, i64, %"class.blink::HeapHashSet.364", %"class.blink::HeapHashSet.371", i16, i8, %"class.blink::Member.378", %"class.blink::Member.380", %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::TextLinkColors", %"class.blink::Member.386", i8, [7 x i8], %"class.blink::HeapHashMap.388", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.32", %"class.WTF::Vector.395", %"class.blink::Member.400", %"class.blink::Member.402", i8, %"class.blink::Member.32", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.404", %"class.blink::HeapVector.406", %"class.std::__1::unique_ptr.414", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.420", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.433", %"class.WTF::Vector.435", i8, i8, %"class.std::__1::unique_ptr.440", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.446", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.454", i8, i32, %"class.blink::Member.456", %"class.blink::Member.458", %"class.blink::Member.460", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.462", %"class.WTF::HashMap.464", %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.477", i8, i32, %"class.blink::Member.484", %"class.blink::Member.486", i32, %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.492", %"class.std::__1::unique_ptr.494", i64, %"class.std::__1::unique_ptr.500", i32, i32, %"class.blink::Member.506", %"class.blink::Member.508", %"class.blink::Member.510", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.512", %"class.WTF::Vector.514", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.519", %"class.blink::Member.526", %"class.std::__1::unique_ptr.528", %"class.blink::Member.534", i8, i8, %"class.WTF::String", %"class.blink::Member.536", i8, [7 x i8], %"class.blink::HeapHashMap.538", %"class.blink::HeapObserverSet", %"class.blink::Member.552", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.554", i32, i8, i8, %"class.blink::WeakMember.556", %"class.blink::Member.557" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.10", %"class.blink::Member.10" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.10", %"class.blink::Member.12", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.14" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.18", %"class.blink::Member.8", %"class.blink::Member.12", %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::Member.57", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.62", %"class.blink::HeapVector.64" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.28" }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.32", i32, %"class.blink::HeapVector" }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.59" }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::HeapHashMap.61"* }
%"class.blink::HeapHashMap.61" = type opaque
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.64" = type { %"class.WTF::Vector.67" }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.blink::Member.70"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.104" }
%"class.blink::HeapHashMap.104" = type { %"class.WTF::HashMap.107" }
%"class.WTF::HashMap.107" = type { %"class.WTF::HashTable.108" }
%"class.WTF::HashTable.108" = type <{ %"struct.WTF::KeyValuePair.110"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.110" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.111" = type { %"class.WTF::VectorBuffer.112" }
%"class.WTF::VectorBuffer.112" = type { %"class.WTF::VectorBufferBase.113" }
%"class.WTF::VectorBufferBase.113" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.114 }
%class.scoped_refptr.114 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.115" }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i32 }
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.575", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.616", i32, i8, [3 x i8], %"class.blink::HeapVector.618", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.626", %"class.blink::Member.628", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.637", %"class.blink::Member.643", %"class.blink::Member.645", i8, [7 x i8] }>
%"class.blink::Supplementable.575" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.576" }
%"class.blink::HeapHashMap.576" = type { %"class.WTF::HashMap.579" }
%"class.WTF::HashMap.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"struct.WTF::KeyValuePair.582"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.582" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.591" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.583" }
%"class.blink::HeapObserverSet.583" = type { i32, [4 x i8], %"class.blink::HeapHashSet.584" }
%"class.blink::HeapHashSet.584" = type { %"class.WTF::HashSet.587" }
%"class.WTF::HashSet.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"class.blink::WeakMember.590"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.590" = type opaque
%"class.blink::Supplementable.591" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.592" }
%"class.blink::HeapHashMap.592" = type { %"class.WTF::HashMap.595" }
%"class.WTF::HashMap.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"struct.WTF::KeyValuePair.598"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.598" = type { i8*, %"class.blink::Member.653" }
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.655" }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.599, %"class.std::__1::unique_ptr.600", %"class.std::__1::unique_ptr.600", %"class.std::__1::unique_ptr.606", %"class.std::__1::unique_ptr.606", %"class.blink::Member.124", i32, [4 x i8], %"class.WTF::HashSet.612", i32, i32 }
%class.scoped_refptr.599 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.612" = type { %"class.WTF::HashTable.613" }
%"class.WTF::HashTable.613" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.618" = type { %"class.WTF::Vector.621" }
%"class.WTF::Vector.621" = type { %"class.WTF::VectorBuffer.622" }
%"class.WTF::VectorBuffer.622" = type { %"class.WTF::VectorBufferBase.623" }
%"class.WTF::VectorBufferBase.623" = type { %"class.blink::Member.624"*, i32, i32 }
%"class.blink::Member.624" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.630", i32, i32 }
%"class.blink::HeapHashMap.630" = type { %"class.WTF::HashMap.633" }
%"class.WTF::HashMap.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"struct.WTF::KeyValuePair.636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.636" = type opaque
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.143" = type { %"class.blink::MemberBase.144" }
%"class.blink::MemberBase.144" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.72", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.74, %"class.WTF::Vector.75", %"class.WTF::Vector.75", %"class.blink::Member.10", %"class.blink::Member.80", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.88", %"class.WTF::TextPosition", %"class.blink::Member.92", %"class.blink::HeapVector.94", %"class.blink::Member.101" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.74 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.82" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.13" }
%"class.WTF::HashSet.88" = type { %"class.WTF::HashTable.89" }
%"class.WTF::HashTable.89" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.94" = type { %"class.WTF::Vector.97" }
%"class.WTF::Vector.97" = type { %"class.WTF::VectorBuffer.98" }
%"class.WTF::VectorBuffer.98" = type { %"class.WTF::VectorBufferBase.99" }
%"class.WTF::VectorBufferBase.99" = type { %"class.blink::Member.80"*, i32, i32 }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.145" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.148 }
%class.scoped_refptr.148 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.149", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.149" = type { %"class.base::RefCounted.150" }
%"class.base::RefCounted.150" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.153" }
%"class.blink::HeapHashMap.153" = type { %"class.WTF::HashMap.156" }
%"class.WTF::HashMap.156" = type { %"class.WTF::HashTable.157" }
%"class.WTF::HashTable.157" = type <{ %"struct.WTF::KeyValuePair.159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.159" = type { %"class.blink::WeakMember.160", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.355" }
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.364" = type { %"class.WTF::HashSet.367" }
%"class.WTF::HashSet.367" = type { %"class.WTF::HashTable.368" }
%"class.WTF::HashTable.368" = type <{ %"class.blink::WeakMember.370"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.370" = type opaque
%"class.blink::HeapHashSet.371" = type { %"class.WTF::HashSet.374" }
%"class.WTF::HashSet.374" = type { %"class.WTF::HashTable.375" }
%"class.WTF::HashTable.375" = type <{ %"class.blink::WeakMember.377"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.377" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.12", %"class.blink::HeapVector.64" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.388" = type { %"class.WTF::HashMap.391" }
%"class.WTF::HashMap.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"struct.WTF::KeyValuePair.394"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.394" = type opaque
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.35" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.39", %"class.blink::Member.41", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.39" = type { %"class.WTF::SingleThreadedBitField.40" }
%"class.WTF::SingleThreadedBitField.40" = type { i32 }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.44", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.44" = type { %"class.base::RefCounted.45" }
%"class.base::RefCounted.45" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.406" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::Member.412"*, i32, i32 }
%"class.blink::Member.412" = type opaque
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.420" = type { %"class.WTF::HashSet.423" }
%"class.WTF::HashSet.423" = type { %"class.WTF::HashTable.424" }
%"class.WTF::HashTable.424" = type <{ %"class.blink::WeakMember.426"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.426" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.427", i32, [4 x i8] }>
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"struct.std::__1::pair.430"*, i32, i32 }
%"struct.std::__1::pair.430" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.435" = type { %"class.WTF::VectorBuffer.436" }
%"class.WTF::VectorBuffer.436" = type { %"class.WTF::VectorBufferBase.437" }
%"class.WTF::VectorBufferBase.437" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.49" }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.blink::Member.32"*, i32, i32 }
%"class.blink::HeapVector.446" = type { %"class.WTF::Vector.449" }
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451" }
%"class.WTF::VectorBufferBase.451" = type { %"class.blink::Member.452"*, i32, i32 }
%"class.blink::Member.452" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.464" = type { %"class.WTF::HashTable.465" }
%"class.WTF::HashTable.465" = type <{ %"struct.WTF::KeyValuePair.468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.468" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.354", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.345, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.345 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.346" }>
%"class.base::RefCountedThreadSafe.346" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.347 }
%class.scoped_refptr.347 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.348", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.348" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.349" }
%"struct.std::__1::atomic.349" = type { %"struct.std::__1::__atomic_base.350" }
%"struct.std::__1::__atomic_base.350" = type { %"struct.std::__1::__atomic_base.351" }
%"struct.std::__1::__atomic_base.351" = type { %"struct.std::__1::__cxx_atomic_impl.352" }
%"struct.std::__1::__cxx_atomic_impl.352" = type { %"struct.std::__1::__cxx_atomic_base_impl.353" }
%"struct.std::__1::__cxx_atomic_base_impl.353" = type { i8 }
%"class.blink::WeakMember.354" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.477" = type { %"class.WTF::HashSet.480" }
%"class.WTF::HashSet.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"class.blink::Member.483"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.483" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.514" = type { %"class.WTF::VectorBuffer.515" }
%"class.WTF::VectorBuffer.515" = type { %"class.WTF::VectorBufferBase.516" }
%"class.WTF::VectorBufferBase.516" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.519" = type { %"class.WTF::HashMap.522" }
%"class.WTF::HashMap.522" = type { %"class.WTF::HashTable.523" }
%"class.WTF::HashTable.523" = type <{ %"struct.WTF::KeyValuePair.525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.525" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.538" = type { %"class.WTF::HashMap.541" }
%"class.WTF::HashMap.541" = type { %"class.WTF::HashTable.542" }
%"class.WTF::HashTable.542" = type <{ %"struct.WTF::KeyValuePair.544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.544" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.545" }
%"class.blink::HeapHashSet.545" = type { %"class.WTF::HashSet.548" }
%"class.WTF::HashSet.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"class.blink::WeakMember.551"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.551" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.561", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.568", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.561" = type { %"class.WTF::HashSet.564" }
%"class.WTF::HashSet.564" = type { %"class.WTF::HashTable.565" }
%"class.WTF::HashTable.565" = type <{ %"class.blink::Member.567"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.567" = type opaque
%"class.blink::HeapTaskRunnerTimer.568" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.569", { i64, i64 } }
%"class.blink::WeakMember.569" = type { %"class.blink::MemberBase.555" }
%"class.blink::WeakMember.556" = type { %"class.blink::MemberBase.11" }
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.10", %"class.blink::Member.10", i64, i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.10", i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.647" = type { %"class.base::internal::CallbackBase" }
%"class.blink::PositionTemplate.648" = type { %"class.blink::Member.10", i32, i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.649" }
%"class.blink::PersistentBase.649" = type { %"class.blink::AsyncFindBuffer"*, %"class.blink::PersistentNodePtr.650" }
%"class.blink::PersistentNodePtr.650" = type { %"class.blink::PersistentNode"* }
%"class.blink::WeakPersistent.651" = type { %"class.blink::PersistentBase.652" }
%"class.blink::PersistentBase.652" = type { %"class.blink::RangeInFlatTree"*, %"class.blink::PersistentNodePtr.650" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.657", %"class.std::__1::__tuple_leaf.658", %"class.std::__1::__tuple_leaf.659", %"class.std::__1::__tuple_leaf.660" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::WeakPersistent" }
%"class.std::__1::__tuple_leaf.657" = type { %"class.blink::WeakPersistent.651" }
%"class.std::__1::__tuple_leaf.658" = type { %"class.WTF::String" }
%"class.std::__1::__tuple_leaf.659" = type { i32 }
%"class.std::__1::__tuple_leaf.660" = type { %"class.base::OnceCallback.647" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.346", [4 x i8] }>
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate.648", %"class.blink::PositionTemplate.648" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN5blink15AsyncFindBuffer8IsActiveEv = comdat any

$_ZNK5blink16FindBufferRunner5TraceEPNS_7VisitorE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15AsyncFindBufferELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_15AsyncFindBufferELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15RangeInFlatTreeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_15RangeInFlatTreeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15AsyncFindBufferEFvPNS3_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEJNS3_14WeakPersistentIS4_EENSL_IS5_EES8_jSI_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink15AsyncFindBufferEFvPNS2_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS2_22EphemeralRangeTemplateINS2_16EditingAlgorithmINS2_17FlatTreeTraversalEEEEEEEEEJNS2_14WeakPersistentIS3_EENSK_IS4_EES7_jSH_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink15AsyncFindBufferEFvPNS3_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEJNS3_14WeakPersistentIS4_EENSL_IS5_EES8_jSI_EEEEEbPKNS0_13BindStateBaseENSP_21CancellationQueryModeE = comdat any

$_ZNSt3__15tupleIJN5blink14WeakPersistentINS1_15AsyncFindBufferEEENS2_INS1_15RangeInFlatTreeEEEN3WTF6StringEjN4base12OnceCallbackIFvRKNS1_22EphemeralRangeTemplateINS1_16EditingAlgorithmINS1_17FlatTreeTraversalEEEEEEEEEEC2IJS4_S6_RS8_RjSJ_ELb0ELb0EEEDpOT_ = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4EEEEJN5blink14WeakPersistentINS3_15AsyncFindBufferEEENS4_INS3_15RangeInFlatTreeEEEN3WTF6StringEjN4base12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEED2Ev = comdat any

@.str = private unnamed_addr constant [38 x i8] c"SharedHighlights.AsyncTask.Iterations\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"SharedHighlights.AsyncTask.SearchDuration\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"NextIteration\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/core/editing/finder/async_find_buffer.cc\00", align 1
@_ZTVN5blink15AsyncFindBufferE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"*)* @_ZN5blink15AsyncFindBuffer16FindMatchInRangeEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEE to i8*), i8* bitcast (void (%"class.blink::AsyncFindBuffer"*)* @_ZN5blink15AsyncFindBuffer6CancelEv to i8*), i8* bitcast (i1 (%"class.blink::AsyncFindBuffer"*)* @_ZN5blink15AsyncFindBuffer8IsActiveEv to i8*), i8* bitcast (void (%"class.blink::FindBufferRunner"*, %"class.blink::Visitor"*)* @_ZNK5blink16FindBufferRunner5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZZN5blink15AsyncFindBuffer3RunEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink15AsyncFindBuffer3RunEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AsyncFindBuffer16FindMatchInRangeEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEE(%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.647", align 8
  %7 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %0, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %9 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %10, label %45, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #9
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11
  %29 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback.647"* %4 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback.647"* %6 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  call void @_ZN5blink15AsyncFindBuffer13NextIterationEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEE(%"class.blink::AsyncFindBuffer"* %0, %"class.blink::RangeInFlatTree"* %1, %"class.WTF::StringImpl"* nonnull %2, i32 %3, %"class.base::OnceCallback.647"* nonnull %6)
  %33 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #9
  %34 = load atomic i32, i32* %12 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %28
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %28
  %42 = phi i32 [ %40, %39 ], [ %38, %28 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %51

45:                                               ; preds = %5
  %46 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %4, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.base::OnceCallback.647"* %4 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.base::OnceCallback.647"* %6 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8
  call void @_ZN5blink15AsyncFindBuffer13NextIterationEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEE(%"class.blink::AsyncFindBuffer"* %0, %"class.blink::RangeInFlatTree"* %1, %"class.WTF::StringImpl"* null, i32 %3, %"class.base::OnceCallback.647"* nonnull %6)
  %50 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #9
  br label %51

51:                                               ; preds = %45, %41, %44
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AsyncFindBuffer13NextIterationEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEE(%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::TaskHandle", align 8
  %9 = alloca %"class.blink::PositionTemplate.648", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.blink::WeakPersistent", align 8
  %13 = alloca %"class.blink::WeakPersistent.651", align 8
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %14, align 8
  store i32 %3, i32* %7, align 4
  %15 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = bitcast %"class.blink::TaskHandle"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = bitcast %"class.blink::PositionTemplate.648"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  call void @_ZNK5blink15RangeInFlatTree13StartPositionEv(%"class.blink::PositionTemplate.648"* nonnull sret %9, %"class.blink::RangeInFlatTree"* %1) #9
  %20 = getelementptr inbounds %"class.blink::PositionTemplate.648", %"class.blink::PositionTemplate.648"* %9, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  br label %28

28:                                               ; preds = %5, %23
  %29 = phi %"class.blink::Document"* [ %27, %23 ], [ null, %5 ]
  %30 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %29, i8 zeroext 70) #9
  %31 = bitcast %"class.base::SingleThreadTaskRunner"* %30 to %"class.base::SequencedTaskRunner"*
  %32 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0), i32 76) #9
  %33 = bitcast %"class.blink::WeakPersistent"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0, i32 0
  store %"class.blink::AsyncFindBuffer"* %0, %"class.blink::AsyncFindBuffer"** %35, align 8, !alias.scope !3
  %36 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8, !alias.scope !3
  %37 = ptrtoint %"class.blink::AsyncFindBuffer"* %0 to i64
  switch i64 %37, label %38 [
    i64 0, label %64
    i64 -1, label %64
  ]

38:                                               ; preds = %28
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !3
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #9, !noalias !3
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %38
  %44 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #9
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8, !noalias !3
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %49, align 8, !noalias !3
  %51 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %51, align 8, !noalias !3
  %53 = icmp eq %"class.blink::PersistentNode"* %52, null
  br i1 %53, label %54, label %57, !prof !2

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %50, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %55) #9
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %51, align 8
  br label %57

57:                                               ; preds = %54, %45
  %58 = phi %"class.blink::PersistentNode"* [ %56, %54 ], [ %52, %45 ]
  %59 = bitcast %"class.blink::PersistentNode"* %58 to i64*
  %60 = load i64, i64* %59, align 8, !noalias !3
  %61 = bitcast %"class.blink::PersistentRegion"* %50 to i64*
  store i64 %60, i64* %61, align 8, !noalias !3
  %62 = bitcast %"class.blink::PersistentNode"* %58 to %"class.blink::PersistentBase.649"**
  store %"class.blink::PersistentBase.649"* %34, %"class.blink::PersistentBase.649"** %62, align 8, !noalias !3
  %63 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %58, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15AsyncFindBufferELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %63, align 8
  store %"class.blink::PersistentNode"* %58, %"class.blink::PersistentNode"** %36, align 8, !alias.scope !3
  br label %64

64:                                               ; preds = %28, %28, %57
  %65 = bitcast %"class.blink::WeakPersistent.651"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #9
  %66 = getelementptr inbounds %"class.blink::WeakPersistent.651", %"class.blink::WeakPersistent.651"* %13, i64 0, i32 0
  %67 = getelementptr inbounds %"class.blink::WeakPersistent.651", %"class.blink::WeakPersistent.651"* %13, i64 0, i32 0, i32 0
  store %"class.blink::RangeInFlatTree"* %1, %"class.blink::RangeInFlatTree"** %67, align 8, !alias.scope !6
  %68 = getelementptr inbounds %"class.blink::WeakPersistent.651", %"class.blink::WeakPersistent.651"* %13, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %68, align 8, !alias.scope !6
  %69 = ptrtoint %"class.blink::RangeInFlatTree"* %1 to i64
  switch i64 %69, label %70 [
    i64 0, label %96
    i64 -1, label %96
  ]

70:                                               ; preds = %64
  %71 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %72 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %71, i64 0, i32 1
  %73 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %72) #9, !noalias !6
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %77, !prof !2

75:                                               ; preds = %70
  %76 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %72, i8* %76) #9
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i8* [ %76, %75 ], [ %73, %70 ]
  %79 = bitcast i8* %78 to %"class.blink::ThreadState"**
  %80 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %79, align 8, !noalias !6
  %81 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %80, i64 0, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %81, align 8, !noalias !6
  %83 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %83, align 8, !noalias !6
  %85 = icmp eq %"class.blink::PersistentNode"* %84, null
  br i1 %85, label %86, label %89, !prof !2

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %82, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %87) #9
  %88 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %83, align 8
  br label %89

89:                                               ; preds = %86, %77
  %90 = phi %"class.blink::PersistentNode"* [ %88, %86 ], [ %84, %77 ]
  %91 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !6
  %93 = bitcast %"class.blink::PersistentRegion"* %82 to i64*
  store i64 %92, i64* %93, align 8, !noalias !6
  %94 = bitcast %"class.blink::PersistentNode"* %90 to %"class.blink::PersistentBase.652"**
  store %"class.blink::PersistentBase.652"* %66, %"class.blink::PersistentBase.652"** %94, align 8, !noalias !6
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15RangeInFlatTreeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %68, align 8, !alias.scope !6
  br label %96

96:                                               ; preds = %64, %64, %89
  %97 = call i8* @_Znwm(i64 104) #10, !noalias !9
  %98 = bitcast i8* %97 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %98, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15AsyncFindBufferEFvPNS3_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEJNS3_14WeakPersistentIS4_EENSL_IS5_EES8_jSI_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink15AsyncFindBufferEFvPNS2_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS2_22EphemeralRangeTemplateINS2_16EditingAlgorithmINS2_17FlatTreeTraversalEEEEEEEEEJNS2_14WeakPersistentIS3_EENSK_IS4_EES7_jSH_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink15AsyncFindBufferEFvPNS3_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEJNS3_14WeakPersistentIS4_EENSL_IS5_EES8_jSI_EEEEEbPKNS0_13BindStateBaseENSP_21CancellationQueryModeE) #9, !noalias !9
  %99 = getelementptr inbounds i8, i8* %97, i64 32
  %100 = bitcast i8* %99 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"*)* @_ZN5blink15AsyncFindBuffer3RunEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEE to i64), i64 0>, <2 x i64>* %100, align 8, !noalias !9
  %101 = getelementptr inbounds i8, i8* %97, i64 48
  %102 = bitcast i8* %101 to %"class.std::__1::tuple"*
  call void @_ZNSt3__15tupleIJN5blink14WeakPersistentINS1_15AsyncFindBufferEEENS2_INS1_15RangeInFlatTreeEEEN3WTF6StringEjN4base12OnceCallbackIFvRKNS1_22EphemeralRangeTemplateINS1_16EditingAlgorithmINS1_17FlatTreeTraversalEEEEEEEEEEC2IJS4_S6_RS8_RjSJ_ELb0ELb0EEEDpOT_(%"class.std::__1::tuple"* %102, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %12, %"class.blink::WeakPersistent.651"* nonnull dereferenceable(16) %13, %"class.WTF::String"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7, %"class.base::OnceCallback.647"* dereferenceable(8) %4) #9, !noalias !9
  %103 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %97, i8** %103, align 8, !alias.scope !9
  call void @_ZN5blink19PostCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEE(%"class.blink::TaskHandle"* nonnull sret %8, %"class.base::SequencedTaskRunner"* dereferenceable(16) %31, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %11) #9
  %104 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %0, i64 0, i32 1
  %105 = call dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"* %104, %"class.blink::TaskHandle"* nonnull dereferenceable(8) %8) #9
  call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* nonnull %8) #9
  %106 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %106) #9
  %107 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8
  %108 = icmp eq %"class.blink::PersistentNode"* %107, null
  br i1 %108, label %128, label %109

109:                                              ; preds = %96
  %110 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %111 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %110, i64 0, i32 1
  %112 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %111) #9
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %116, !prof !2

114:                                              ; preds = %109
  %115 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %111, i8* %115) #9
  br label %116

116:                                              ; preds = %114, %109
  %117 = phi i8* [ %115, %114 ], [ %112, %109 ]
  %118 = bitcast i8* %117 to %"class.blink::ThreadState"**
  %119 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %119, i64 0, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %120, align 8
  %122 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8
  %123 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %121, i64 0, i32 0, i32 0
  %124 = bitcast %"class.blink::PersistentRegion"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.blink::PersistentNode"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %122, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %127, align 8
  store %"class.blink::PersistentNode"* %122, %"class.blink::PersistentNode"** %123, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %68, align 8
  br label %128

128:                                              ; preds = %96, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #9
  %129 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %130 = icmp eq %"class.blink::PersistentNode"* %129, null
  br i1 %130, label %150, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #9
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #9
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 4, i32 0, i32 0, i32 0
  %143 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %142, align 8
  %144 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %145 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %143, i64 0, i32 0, i32 0
  %146 = bitcast %"class.blink::PersistentRegion"* %143 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.blink::PersistentNode"* %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %144, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %149, align 8
  store %"class.blink::PersistentNode"* %144, %"class.blink::PersistentNode"** %145, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %150

150:                                              ; preds = %128, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #9
  %151 = icmp eq %"class.base::SingleThreadTaskRunner"* %30, null
  br i1 %151, label %160, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %30, i64 0, i32 0, i32 0, i32 1
  %154 = getelementptr inbounds %"class.base::RefCountedThreadSafe.346", %"class.base::RefCountedThreadSafe.346"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw sub i32* %154, i32 1 acq_rel
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %160

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.base::RefCountedThreadSafe.346", %"class.base::RefCountedThreadSafe.346"* %153, i64 -2
  %159 = bitcast %"class.base::RefCountedThreadSafe.346"* %158 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %159) #9
  br label %160

160:                                              ; preds = %150, %152, %157
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #9
  br label %176

176:                                              ; preds = %160, %172, %175
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AsyncFindBuffer6CancelEv(%"class.blink::AsyncFindBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %0, i64 0, i32 1
  tail call void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* %2) #9
  ret void
}

declare void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AsyncFindBuffer3RunEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEE(%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"* nocapture) #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.647", align 8
  %7 = alloca %"class.base::OnceCallback.647", align 8
  %8 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate.648", align 8
  %10 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %11 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %12 = alloca %"class.blink::PositionTemplate.648", align 8
  %13 = alloca %"class.base::OnceCallback.647", align 8
  %14 = alloca %"class.base::TimeDelta", align 8
  %15 = tail call zeroext i1 @_ZNK5blink15RangeInFlatTree6IsNullEv(%"class.blink::RangeInFlatTree"* %1) #9
  br i1 %15, label %18, label %16

16:                                               ; preds = %5
  %17 = tail call zeroext i1 @_ZNK5blink15RangeInFlatTree11IsConnectedEv(%"class.blink::RangeInFlatTree"* %1) #9
  br i1 %17, label %30, label %18

18:                                               ; preds = %16, %5
  %19 = bitcast %"class.blink::EphemeralRangeTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %8) #9
  %20 = bitcast %"class.base::OnceCallback.647"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %4, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.647"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.647"* %7 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %7, i64 0, i32 0
  %26 = inttoptr i64 %23 to %"class.base::internal::BindStateBase"*
  %27 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %26, i64 0, i32 1
  %28 = bitcast void ()** %27 to void (%"class.base::internal::BindStateBase"*, %"class.blink::EphemeralRangeTemplate"*)**
  %29 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::EphemeralRangeTemplate"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::EphemeralRangeTemplate"*)** %28, align 8
  call void %29(%"class.base::internal::BindStateBase"* %26, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %8) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %133

30:                                               ; preds = %16
  %31 = bitcast %"class.blink::PositionTemplate.648"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  call void @_ZNK5blink15RangeInFlatTree13StartPositionEv(%"class.blink::PositionTemplate.648"* nonnull sret %9, %"class.blink::RangeInFlatTree"* %1) #9
  %32 = getelementptr inbounds %"class.blink::PositionTemplate.648", %"class.blink::PositionTemplate.648"* %9, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  br label %40

40:                                               ; preds = %30, %35
  %41 = phi %"class.blink::Document"* [ %39, %35 ], [ null, %30 ]
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %41, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  %42 = bitcast %"class.blink::EphemeralRangeTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.blink::EphemeralRangeTemplate"* %11 to i8*
  %45 = bitcast %"class.blink::EphemeralRangeTemplate"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #9
  call void @_ZNK5blink15RangeInFlatTree16ToEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %11, %"class.blink::RangeInFlatTree"* %1) #9
  %46 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %40, %47, %62
  call void @_ZN5blink10FindBuffer16FindMatchInRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEN3WTF6StringEjN4absl8optionalIN4base9TimeDeltaEEE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %10, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %11, %"class.WTF::StringImpl"* %2, i32 %3, i8 1, i64 100000) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #9
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %94, label %67

67:                                               ; preds = %64
  %68 = call zeroext i1 @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11IsCollapsedEv(%"class.blink::EphemeralRangeTemplate"* nonnull %10) #9
  br i1 %68, label %69, label %94

69:                                               ; preds = %67
  %70 = bitcast %"class.blink::PositionTemplate.648"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.648"* nonnull sret %12, %"class.blink::EphemeralRangeTemplate"* nonnull %10) #9
  call void @_ZN5blink15RangeInFlatTree8SetStartERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::RangeInFlatTree"* %1, %"class.blink::PositionTemplate.648"* nonnull dereferenceable(16) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #9
  br i1 %46, label %88, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #9
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %76
  call void @llvm.trap() #9
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %69, %71, %86
  %89 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %4, i64 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.base::OnceCallback.647"* %4 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.base::OnceCallback.647"* %13 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %89, align 8
  call void @_ZN5blink15AsyncFindBuffer13NextIterationEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEE(%"class.blink::AsyncFindBuffer"* %0, %"class.blink::RangeInFlatTree"* %1, %"class.WTF::StringImpl"* %2, i32 %3, %"class.base::OnceCallback.647"* nonnull %13)
  %93 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %93) #9
  br label %133

94:                                               ; preds = %64, %67
  %95 = load atomic i64, i64* @_ZZN5blink15AsyncFindBuffer3RunEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %96 = inttoptr i64 %95 to %"class.base::HistogramBase"*
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #9
  %100 = ptrtoint %"class.base::HistogramBase"* %99 to i64
  store atomic i64 %100, i64* @_ZZN5blink15AsyncFindBuffer3RunEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %101

101:                                              ; preds = %94, %98
  %102 = phi %"class.base::HistogramBase"* [ %96, %94 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %0, i64 0, i32 2
  %104 = load i32, i32* %103, align 8
  %105 = bitcast %"class.base::HistogramBase"* %102 to void (%"class.base::HistogramBase"*, i32)***
  %106 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %106, i64 6
  %108 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %107, align 8
  call void %108(%"class.base::HistogramBase"* %102, i32 %104) #9
  %109 = load atomic i64, i64* @_ZZN5blink15AsyncFindBuffer3RunEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %110 = inttoptr i64 %109 to %"class.base::HistogramBase"*
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %101
  %113 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #9
  %114 = ptrtoint %"class.base::HistogramBase"* %113 to i64
  store atomic i64 %114, i64* @_ZZN5blink15AsyncFindBuffer3RunEPNS_15RangeInFlatTreeEN3WTF6StringEjN4base12OnceCallbackIFvRKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEEEEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %115

115:                                              ; preds = %101, %112
  %116 = phi %"class.base::HistogramBase"* [ %110, %101 ], [ %113, %112 ]
  %117 = bitcast %"class.base::TimeDelta"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #9
  %118 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  %119 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = sub nsw i64 %118, %120
  %122 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %14, i64 0, i32 0
  store i64 %121, i64* %122, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %116, %"class.base::TimeDelta"* nonnull dereferenceable(8) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #9
  %123 = bitcast %"class.base::OnceCallback.647"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #9
  %124 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %4, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.base::OnceCallback.647"* %4 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.base::OnceCallback.647"* %6 to i64*
  store i64 %126, i64* %127, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %124, align 8
  %128 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %6, i64 0, i32 0
  %129 = inttoptr i64 %126 to %"class.base::internal::BindStateBase"*
  %130 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %129, i64 0, i32 1
  %131 = bitcast void ()** %130 to void (%"class.base::internal::BindStateBase"*, %"class.blink::EphemeralRangeTemplate"*)**
  %132 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::EphemeralRangeTemplate"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::EphemeralRangeTemplate"*)** %131, align 8
  call void %132(%"class.base::internal::BindStateBase"* %129, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %10) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %128) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #9
  br label %133

133:                                              ; preds = %88, %115, %18
  %134 = phi %"class.blink::EphemeralRangeTemplate"* [ %8, %18 ], [ %10, %115 ], [ %10, %88 ]
  %135 = phi i8* [ %19, %18 ], [ %42, %115 ], [ %42, %88 ]
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %134) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #9
  %136 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #9
  br label %150

150:                                              ; preds = %133, %146, %149
  ret void
}

declare zeroext i1 @_ZNK5blink15RangeInFlatTree6IsNullEv(%"class.blink::RangeInFlatTree"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15RangeInFlatTree11IsConnectedEv(%"class.blink::RangeInFlatTree"*) local_unnamed_addr #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #3

declare void @_ZNK5blink15RangeInFlatTree13StartPositionEv(%"class.blink::PositionTemplate.648"* sret, %"class.blink::RangeInFlatTree"*) local_unnamed_addr #2

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

declare void @_ZN5blink10FindBuffer16FindMatchInRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEEN3WTF6StringEjN4absl8optionalIN4base9TimeDeltaEEE(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.WTF::StringImpl"*, i32, i8, i64) local_unnamed_addr #2

declare void @_ZNK5blink15RangeInFlatTree16ToEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::RangeInFlatTree"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE11IsCollapsedEv(%"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink15RangeInFlatTree8SetStartERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::RangeInFlatTree"*, %"class.blink::PositionTemplate.648"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate.648"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink19PostCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEE(%"class.blink::TaskHandle"* sret, %"class.base::SequencedTaskRunner"* dereferenceable(16), %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"*, %"class.blink::TaskHandle"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink15AsyncFindBuffer8IsActiveEv(%"class.blink::AsyncFindBuffer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK5blink10TaskHandle8IsActiveEv(%"class.blink::TaskHandle"* %2) #9
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16FindBufferRunner5TraceEPNS_7VisitorE(%"class.blink::FindBufferRunner"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10TaskHandle8IsActiveEv(%"class.blink::TaskHandle"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15AsyncFindBufferELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_15AsyncFindBufferELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_15AsyncFindBufferELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AsyncFindBuffer"**
  %4 = load %"class.blink::AsyncFindBuffer"*, %"class.blink::AsyncFindBuffer"** %3, align 8
  %5 = icmp eq %"class.blink::AsyncFindBuffer"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AsyncFindBuffer", %"class.blink::AsyncFindBuffer"* %4, i64 -1, i32 3
  %20 = bitcast %"class.base::TimeTicks"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::AsyncFindBuffer"* null, %"class.blink::AsyncFindBuffer"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #9
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15RangeInFlatTreeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_15RangeInFlatTreeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_15RangeInFlatTreeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RangeInFlatTree"**
  %4 = load %"class.blink::RangeInFlatTree"*, %"class.blink::RangeInFlatTree"** %3, align 8
  %5 = icmp eq %"class.blink::RangeInFlatTree"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::RangeInFlatTree", %"class.blink::RangeInFlatTree"* %4, i64 -1, i32 1
  %20 = bitcast %"class.blink::Member"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::RangeInFlatTree"* null, %"class.blink::RangeInFlatTree"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #9
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15AsyncFindBufferEFvPNS3_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEJNS3_14WeakPersistentIS4_EENSL_IS5_EES8_jSI_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.647", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 5
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i32*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 6
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.blink::AsyncFindBuffer"**
  %8 = load %"class.blink::AsyncFindBuffer"*, %"class.blink::AsyncFindBuffer"** %7, align 8
  %9 = icmp eq %"class.blink::AsyncFindBuffer"* %8, null
  br i1 %9, label %46, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %12 = bitcast %"class.blink::AsyncFindBuffer"* %8 to i8*
  %13 = bitcast %"class.base::internal::BindStateBase"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback.647"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds i8, i8* %12, i64 %17
  %20 = bitcast i8* %19 to %"class.blink::AsyncFindBuffer"*
  %21 = and i64 %14, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %10
  %24 = bitcast i8* %19 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = add i64 %14, -1
  %27 = getelementptr i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to void (%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"*)**
  %29 = load void (%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"*)*, void (%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"*)** %28, align 8
  br label %32

30:                                               ; preds = %10
  %31 = inttoptr i64 %14 to void (%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"*)*
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi void (%"class.blink::AsyncFindBuffer"*, %"class.blink::RangeInFlatTree"*, %"class.WTF::StringImpl"*, i32, %"class.base::OnceCallback.647"*)* [ %29, %23 ], [ %31, %30 ]
  %34 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %35 = bitcast void (%"class.base::internal::BindStateBase"*)** %34 to %"class.blink::RangeInFlatTree"**
  %36 = load %"class.blink::RangeInFlatTree"*, %"class.blink::RangeInFlatTree"** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %38 = bitcast void (%"class.base::internal::BindStateBase"*)** %37 to %"class.WTF::StringImpl"**
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %40 = load i32, i32* %5, align 4
  %41 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::BindStateBase"**
  %42 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::OnceCallback.647"* %2 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  call void %33(%"class.blink::AsyncFindBuffer"* %20, %"class.blink::RangeInFlatTree"* %36, %"class.WTF::StringImpl"* %39, i32 %40, %"class.base::OnceCallback.647"* nonnull %2) #9
  %45 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %46

46:                                               ; preds = %1, %32
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink15AsyncFindBufferEFvPNS2_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS2_22EphemeralRangeTemplateINS2_16EditingAlgorithmINS2_17FlatTreeTraversalEEEEEEEEEJNS2_14WeakPersistentIS3_EENSK_IS4_EES7_jSH_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4EEEEJN5blink14WeakPersistentINS3_15AsyncFindBufferEEENS4_INS3_15RangeInFlatTreeEEEN3WTF6StringEjN4base12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEED2Ev(%"struct.std::__1::__tuple_impl"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink15AsyncFindBufferEFvPNS3_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEJNS3_14WeakPersistentIS4_EENSL_IS5_EES8_jSI_EEEEEbPKNS0_13BindStateBaseENSP_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::AsyncFindBuffer"**
  %6 = load %"class.blink::AsyncFindBuffer"*, %"class.blink::AsyncFindBuffer"** %5, align 8
  %7 = icmp eq %"class.blink::AsyncFindBuffer"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15tupleIJN5blink14WeakPersistentINS1_15AsyncFindBufferEEENS2_INS1_15RangeInFlatTreeEEEN3WTF6StringEjN4base12OnceCallbackIFvRKNS1_22EphemeralRangeTemplateINS1_16EditingAlgorithmINS1_17FlatTreeTraversalEEEEEEEEEEC2IJS4_S6_RS8_RjSJ_ELb0ELb0EEEDpOT_(%"class.std::__1::tuple"*, %"class.blink::WeakPersistent"* dereferenceable(16), %"class.blink::WeakPersistent.651"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4), %"class.base::OnceCallback.647"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.blink::WeakPersistent"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::tuple"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  switch i64 %9, label %12 [
    i64 0, label %38
    i64 -1, label %38
  ]

12:                                               ; preds = %6
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #9
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #9
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %28, label %31, !prof !2

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %29) #9
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi %"class.blink::PersistentNode"* [ %30, %28 ], [ %26, %19 ]
  %33 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.blink::PersistentNode"* %32 to %"class.blink::PersistentBase.649"**
  store %"class.blink::PersistentBase.649"* %7, %"class.blink::PersistentBase.649"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15AsyncFindBufferELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %11, align 8
  br label %38

38:                                               ; preds = %6, %6, %31
  %39 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::__tuple_leaf.657", %"class.std::__1::__tuple_leaf.657"* %39, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::WeakPersistent.651"* %2 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::__tuple_leaf.657"* %39 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %44, align 8
  switch i64 %42, label %45 [
    i64 0, label %71
    i64 -1, label %71
  ]

45:                                               ; preds = %38
  %46 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %47 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %46, i64 0, i32 1
  %48 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %47) #9
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %52, !prof !2

50:                                               ; preds = %45
  %51 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %47, i8* %51) #9
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i8* [ %51, %50 ], [ %48, %45 ]
  %54 = bitcast i8* %53 to %"class.blink::ThreadState"**
  %55 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %55, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %58, align 8
  %60 = icmp eq %"class.blink::PersistentNode"* %59, null
  br i1 %60, label %61, label %64, !prof !2

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %57, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %62) #9
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %58, align 8
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi %"class.blink::PersistentNode"* [ %63, %61 ], [ %59, %52 ]
  %66 = bitcast %"class.blink::PersistentNode"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::PersistentRegion"* %57 to i64*
  store i64 %67, i64* %68, align 8
  %69 = bitcast %"class.blink::PersistentNode"* %65 to %"class.blink::PersistentBase.652"**
  store %"class.blink::PersistentBase.652"* %40, %"class.blink::PersistentBase.652"** %69, align 8
  %70 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %65, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15RangeInFlatTreeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %70, align 8
  store %"class.blink::PersistentNode"* %65, %"class.blink::PersistentNode"** %44, align 8
  br label %71

71:                                               ; preds = %38, %38, %64
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %74, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i33
  %85 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #9
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !2

90:                                               ; preds = %81
  tail call void @llvm.trap() #9
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4
  br label %93

93:                                               ; preds = %71, %76, %91
  %94 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 3, i32 0
  %95 = load i32, i32* %4, align 4
  store i32 %95, i32* %94, align 4
  %96 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 4
  %97 = getelementptr inbounds %"class.base::OnceCallback.647", %"class.base::OnceCallback.647"* %5, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.base::OnceCallback.647"* %5 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::__tuple_leaf.660"* %96 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4EEEEJN5blink14WeakPersistentINS3_15AsyncFindBufferEEENS4_INS3_15RangeInFlatTreeEEEN3WTF6StringEjN4base12OnceCallbackIFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEED2Ev(%"struct.std::__1::__tuple_impl"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #9
  %3 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #9
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #9
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #9
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #9
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink18WrapWeakPersistentINS_15AsyncFindBufferEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink18WrapWeakPersistentINS_15AsyncFindBufferEEENS_14WeakPersistentIT_EEPS3_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink18WrapWeakPersistentINS_15RangeInFlatTreeEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink18WrapWeakPersistentINS_15RangeInFlatTreeEEENS_14WeakPersistentIT_EEPS3_"}
!9 = !{!10, !12, !14}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink15AsyncFindBufferEFvPNS3_15RangeInFlatTreeEN3WTF6StringEjNS2_IFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEJNS3_14WeakPersistentIS4_EENSK_IS5_EERS8_RjSH_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink15AsyncFindBufferEFvPNS3_15RangeInFlatTreeEN3WTF6StringEjNS2_IFvRKNS3_22EphemeralRangeTemplateINS3_16EditingAlgorithmINS3_17FlatTreeTraversalEEEEEEEEEJNS3_14WeakPersistentIS4_EENSK_IS5_EERS8_RjSH_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN5blink15AsyncFindBufferEFvPNS1_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS1_22EphemeralRangeTemplateINS1_16EditingAlgorithmINS1_17FlatTreeTraversalEEEEEEEEEJNS1_14WeakPersistentIS2_EENSJ_IS3_EERS6_RjSG_EEENS7_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN5blink15AsyncFindBufferEFvPNS1_15RangeInFlatTreeEN3WTF6StringEjNS_12OnceCallbackIFvRKNS1_22EphemeralRangeTemplateINS1_16EditingAlgorithmINS1_17FlatTreeTraversalEEEEEEEEEJNS1_14WeakPersistentIS2_EENSJ_IS3_EERS6_RjSG_EEENS7_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_"}
!14 = distinct !{!14, !15, !"_ZN3WTF4BindIMN5blink15AsyncFindBufferEFvPNS1_15RangeInFlatTreeENS_6StringEjN4base12OnceCallbackIFvRKNS1_22EphemeralRangeTemplateINS1_16EditingAlgorithmINS1_17FlatTreeTraversalEEEEEEEEEJNS1_14WeakPersistentIS2_EENSJ_IS3_EERS5_RjSG_EFvvEEENS7_IT1_EEOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF4BindIMN5blink15AsyncFindBufferEFvPNS1_15RangeInFlatTreeENS_6StringEjN4base12OnceCallbackIFvRKNS1_22EphemeralRangeTemplateINS1_16EditingAlgorithmINS1_17FlatTreeTraversalEEEEEEEEEJNS1_14WeakPersistentIS2_EENSJ_IS3_EERS5_RjSG_EFvvEEENS7_IT1_EEOT_DpOT0_"}
