; ModuleID = '../../third_party/ffmpeg/libavformat/dump.c'
source_filename = "../../third_party/ffmpeg/libavformat/dump.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVStreamInternal = type opaque
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type opaque
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.AVReplayGain = type { i32, i32, i32, i32 }
%struct.AVStereo3D = type { i32, i32, i32 }
%struct.AVCPBProperties = type { i32, i32, i32, i32, i64 }
%struct.AVMasteringDisplayMetadata = type { [3 x [2 x %struct.AVRational]], [2 x %struct.AVRational], %struct.AVRational, %struct.AVRational, i32, i32 }
%struct.AVSphericalMapping = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVContentLightMetadata = type { i32, i32 }
%struct.AVDOVIDecoderConfigurationRecord = type { i8, i8, i8, i8, i8, i8, i8, i8 }

@.str = private unnamed_addr constant [22 x i8] c"%s #%d, %s, %s '%s':\0A\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Output\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"Input\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"  Duration: \00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"%02ld:%02ld:%02ld.%02ld\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"N/A\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c", start: \00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"%s%d.%06d\00", align 1
@.str.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c", bitrate: \00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"%ld kb/s\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"  Chapters:\0A\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"    Chapter #%d:%d: \00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"start %f, \00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"end %f\0A\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"  Program %d %s\0A\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"  No Program\0A\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"%08x \00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c" %02x\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"stream #%d:\0A\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"  keyframe=%d\0A\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"  duration=%0.3f\0A\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"  dts=\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"%0.3f\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"  pts=\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"  size=%d\0A\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"%sMetadata:\0A\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"%s  %-16s: \00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"\08\0A\0B\0C\0D\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"\0A%s  %-16s: \00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"dump_separator\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"  Stream #%d:%d\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"[0x%x]\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c", %d, %d/%d\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c": %s\00", align 1
@.str.49 = private unnamed_addr constant [22 x i8] c", SAR %d:%d DAR %d:%d\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"fps, \00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"fps\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"tbr, \00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"tbr\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"tbn, \00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"tbn\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"tbc\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c" (default)\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c" (dub)\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c" (original)\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c" (comment)\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c" (lyrics)\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c" (karaoke)\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c" (forced)\00", align 1
@.str.64 = private unnamed_addr constant [20 x i8] c" (hearing impaired)\00", align 1
@.str.65 = private unnamed_addr constant [19 x i8] c" (visual impaired)\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c" (clean effects)\00", align 1
@.str.67 = private unnamed_addr constant [16 x i8] c" (attached pic)\00", align 1
@.str.68 = private unnamed_addr constant [20 x i8] c" (timed thumbnails)\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c" (captions)\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c" (descriptions)\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c" (metadata)\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c" (dependent)\00", align 1
@.str.73 = private unnamed_addr constant [15 x i8] c" (still image)\00", align 1
@.str.74 = private unnamed_addr constant [9 x i8] c"%1.4f %s\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"%3.2f %s\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"%1.0f %s\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"%1.0fk %s\00", align 1
@.str.78 = private unnamed_addr constant [14 x i8] c"%sSide data:\0A\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"%s  \00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"palette\00", align 1
@.str.81 = private unnamed_addr constant [14 x i8] c"new extradata\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"paramchange: \00", align 1
@.str.83 = private unnamed_addr constant [22 x i8] c"H.263 macroblock info\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"replaygain: \00", align 1
@.str.85 = private unnamed_addr constant [40 x i8] c"displaymatrix: rotation of %.2f degrees\00", align 1
@.str.86 = private unnamed_addr constant [11 x i8] c"stereo3d: \00", align 1
@.str.87 = private unnamed_addr constant [21 x i8] c"audio service type: \00", align 1
@.str.88 = private unnamed_addr constant [34 x i8] c"quality factor: %d, pict_type: %c\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"cpb: \00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"spherical: \00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"ICC Profile\00", align 1
@.str.92 = private unnamed_addr constant [28 x i8] c"DOVI configuration record: \00", align 1
@.str.93 = private unnamed_addr constant [21 x i8] c"SMPTE ST 12-1:2014: \00", align 1
@.str.94 = private unnamed_addr constant [37 x i8] c"unknown side data type %d (%d bytes)\00", align 1
@.str.95 = private unnamed_addr constant [19 x i8] c"channel count %u, \00", align 1
@.str.96 = private unnamed_addr constant [21 x i8] c"channel layout: %s, \00", align 1
@.str.97 = private unnamed_addr constant [17 x i8] c"sample_rate %u, \00", align 1
@.str.98 = private unnamed_addr constant [19 x i8] c"width %u height %u\00", align 1
@.str.99 = private unnamed_addr constant [15 x i8] c"unknown param\0A\00", align 1
@.str.100 = private unnamed_addr constant [14 x i8] c"invalid data\0A\00", align 1
@.str.101 = private unnamed_addr constant [11 x i8] c"track gain\00", align 1
@.str.102 = private unnamed_addr constant [11 x i8] c"track peak\00", align 1
@.str.103 = private unnamed_addr constant [11 x i8] c"album gain\00", align 1
@.str.104 = private unnamed_addr constant [11 x i8] c"album peak\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"%s - \00", align 1
@.str.106 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.107 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.108 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.109 = private unnamed_addr constant [12 x i8] c" (inverted)\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.111 = private unnamed_addr constant [8 x i8] c"effects\00", align 1
@.str.112 = private unnamed_addr constant [18 x i8] c"visually impaired\00", align 1
@.str.113 = private unnamed_addr constant [17 x i8] c"hearing impaired\00", align 1
@.str.114 = private unnamed_addr constant [9 x i8] c"dialogue\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"commentary\00", align 1
@.str.116 = private unnamed_addr constant [10 x i8] c"emergency\00", align 1
@.str.117 = private unnamed_addr constant [11 x i8] c"voice over\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"karaoke\00", align 1
@.str.119 = private unnamed_addr constant [47 x i8] c"bitrate max/min/avg: %d/%d/%d buffer size: %d \00", align 1
@.str.120 = private unnamed_addr constant [15 x i8] c"vbv_delay: N/A\00", align 1
@.str.121 = private unnamed_addr constant [15 x i8] c"vbv_delay: %lu\00", align 1
@.str.122 = private unnamed_addr constant [159 x i8] c"Mastering Display Metadata, has_primaries:%d has_luminance:%d r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f) min_luminance=%f, max_luminance=%f\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.124 = private unnamed_addr constant [12 x i8] c"(%f/%f/%f) \00", align 1
@.str.125 = private unnamed_addr constant [22 x i8] c"[%zu, %zu, %zu, %zu] \00", align 1
@.str.126 = private unnamed_addr constant [10 x i8] c"[pad %u] \00", align 1
@.str.127 = private unnamed_addr constant [52 x i8] c"Content Light Level Metadata, MaxCLL=%d, MaxFALL=%d\00", align 1
@.str.128 = private unnamed_addr constant [101 x i8] c"version: %d.%d, profile: %d, level: %d, rpu flag: %d, el flag: %d, bl flag: %d, compatibility id: %d\00", align 1
@.str.129 = private unnamed_addr constant [16 x i8] c"timecode - %s%s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_hex_dump(%struct._IO_FILE*, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  tail call fastcc void @hex_dump_internal(i8* null, %struct._IO_FILE* %0, i32 0, i8* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @hex_dump_internal(i8*, %struct._IO_FILE*, i32, i8* nocapture readonly, i32) unnamed_addr #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %67

7:                                                ; preds = %5
  %8 = icmp ne %struct._IO_FILE* %1, null
  br label %9

9:                                                ; preds = %7, %63
  %10 = phi i64 [ 0, %7 ], [ %64, %63 ]
  %11 = trunc i64 %10 to i32
  %12 = sub nsw i32 %4, %11
  %13 = icmp slt i32 %12, 16
  %14 = select i1 %13, i32 %12, i32 16
  br i1 %8, label %16, label %15

15:                                               ; preds = %9
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i32 %11) #8
  br label %18

16:                                               ; preds = %9
  %17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i32 %11)
  br label %18

18:                                               ; preds = %16, %15
  %19 = sext i32 %14 to i64
  br label %20

20:                                               ; preds = %35, %18
  %21 = phi i64 [ 0, %18 ], [ %36, %35 ]
  %22 = icmp slt i64 %21, %19
  br i1 %22, label %23, label %31

23:                                               ; preds = %20
  %24 = add nuw nsw i64 %21, %10
  %25 = getelementptr inbounds i8, i8* %3, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  br i1 %8, label %29, label %28

28:                                               ; preds = %23
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), i32 %27) #8
  br label %35

29:                                               ; preds = %23
  %30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), i32 %27)
  br label %35

31:                                               ; preds = %20
  br i1 %8, label %33, label %32

32:                                               ; preds = %31
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #8
  br label %35

33:                                               ; preds = %31
  %34 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* nonnull %1)
  br label %35

35:                                               ; preds = %29, %28, %33, %32
  %36 = add nuw nsw i64 %21, 1
  %37 = icmp eq i64 %36, 16
  br i1 %37, label %38, label %20

38:                                               ; preds = %35
  br i1 %8, label %40, label %39

39:                                               ; preds = %38
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #8
  br label %42

40:                                               ; preds = %38
  %41 = tail call i32 @fputc(i32 32, %struct._IO_FILE* nonnull %1)
  br label %42

42:                                               ; preds = %40, %39
  %43 = icmp sgt i32 %12, 0
  br i1 %43, label %44, label %59

44:                                               ; preds = %42, %56
  %45 = phi i64 [ %57, %56 ], [ 0, %42 ]
  %46 = add nuw nsw i64 %45, %10
  %47 = getelementptr inbounds i8, i8* %3, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = add i8 %48, -32
  %50 = icmp ugt i8 %49, 94
  %51 = select i1 %50, i8 46, i8 %48
  %52 = zext i8 %51 to i32
  br i1 %8, label %54, label %53

53:                                               ; preds = %44
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i32 %52) #8
  br label %56

54:                                               ; preds = %44
  %55 = tail call i32 @fputc(i32 %52, %struct._IO_FILE* nonnull %1)
  br label %56

56:                                               ; preds = %53, %54
  %57 = add nuw nsw i64 %45, 1
  %58 = icmp slt i64 %57, %19
  br i1 %58, label %44, label %59

59:                                               ; preds = %56, %42
  br i1 %8, label %61, label %60

60:                                               ; preds = %59
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %63

61:                                               ; preds = %59
  %62 = tail call i32 @fputc(i32 10, %struct._IO_FILE* nonnull %1)
  br label %63

63:                                               ; preds = %60, %61
  %64 = add nuw i64 %10, 16
  %65 = trunc i64 %64 to i32
  %66 = icmp slt i32 %65, %4
  br i1 %66, label %9, label %67

67:                                               ; preds = %63, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_hex_dump_log(i8*, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  tail call fastcc void @hex_dump_internal(i8* %0, %struct._IO_FILE* null, i32 %1, i8* %2, i32 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_pkt_dump2(%struct._IO_FILE*, %struct.AVPacket* nocapture readonly, i32, %struct.AVStream* nocapture readonly) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %3, i64 0, i32 4
  %6 = bitcast %struct.AVRational* %5 to i64*
  %7 = load i64, i64* %6, align 8
  tail call fastcc void @pkt_dump_internal(i8* null, %struct._IO_FILE* %0, i32 0, %struct.AVPacket* %1, i32 %2, i64 %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @pkt_dump_internal(i8*, %struct._IO_FILE*, i32, %struct.AVPacket* nocapture readonly, i32, i64) unnamed_addr #0 {
  %7 = icmp ne %struct._IO_FILE* %1, null
  %8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  br i1 %7, label %14, label %10

10:                                               ; preds = %6
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i32 %9) #8
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), i32 %13) #8
  br label %20

14:                                               ; preds = %6
  %15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i32 %9)
  %16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 1
  %19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), i32 %18)
  br label %20

20:                                               ; preds = %14, %10
  %21 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 9
  %22 = load i64, i64* %21, align 8
  %23 = sitofp i64 %22 to double
  %24 = trunc i64 %5 to i32
  %25 = lshr i64 %5, 32
  %26 = trunc i64 %25 to i32
  %27 = sitofp i32 %24 to double
  %28 = sitofp i32 %26 to double
  %29 = fdiv nsz double %27, %28
  %30 = fmul nsz double %29, %23
  br i1 %7, label %32, label %31

31:                                               ; preds = %20
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), double %30) #8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #8
  br label %35

32:                                               ; preds = %20
  %33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), double %30)
  %34 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* nonnull %1)
  br label %35

35:                                               ; preds = %31, %32
  %36 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, -9223372036854775808
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  br i1 %7, label %41, label %40

40:                                               ; preds = %39
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %49

41:                                               ; preds = %39
  %42 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* nonnull %1)
  br label %50

43:                                               ; preds = %35
  %44 = sitofp i64 %37 to double
  %45 = fmul nsz double %29, %44
  br i1 %7, label %47, label %46

46:                                               ; preds = %43
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), double %45) #8
  br label %49

47:                                               ; preds = %43
  %48 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), double %45)
  br label %50

49:                                               ; preds = %46, %40
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)) #8
  br label %52

50:                                               ; preds = %41, %47
  %51 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* nonnull %1)
  br label %52

52:                                               ; preds = %49, %50
  %53 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, -9223372036854775808
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  br i1 %7, label %58, label %57

57:                                               ; preds = %56
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %66

58:                                               ; preds = %56
  %59 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* nonnull %1)
  br label %69

60:                                               ; preds = %52
  %61 = sitofp i64 %54 to double
  %62 = fmul nsz double %29, %61
  br i1 %7, label %64, label %63

63:                                               ; preds = %60
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), double %62) #8
  br label %66

64:                                               ; preds = %60
  %65 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), double %62)
  br label %69

66:                                               ; preds = %63, %57
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %67 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 4
  %68 = load i32, i32* %67, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0), i32 %68) #8
  br label %74

69:                                               ; preds = %64, %58
  %70 = tail call i32 @fputc(i32 10, %struct._IO_FILE* nonnull %1)
  %71 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0), i32 %72)
  br label %74

74:                                               ; preds = %66, %69
  %75 = phi i32* [ %67, %66 ], [ %71, %69 ]
  %76 = icmp eq i32 %4, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i64 0, i32 3
  %79 = load i8*, i8** %78, align 8
  %80 = load i32, i32* %75, align 8
  tail call fastcc void @hex_dump_internal(i8* %0, %struct._IO_FILE* %1, i32 %2, i8* %79, i32 %80)
  br label %81

81:                                               ; preds = %74, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_pkt_dump_log2(i8*, i32, %struct.AVPacket* nocapture readonly, i32, %struct.AVStream* nocapture readonly) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %4, i64 0, i32 4
  %7 = bitcast %struct.AVRational* %6 to i64*
  %8 = load i64, i64* %7, align 8
  tail call fastcc void @pkt_dump_internal(i8* %0, %struct._IO_FILE* null, i32 %1, %struct.AVPacket* %2, i32 %3, i64 %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_dump_format(%struct.AVFormatContext* nocapture readonly, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = zext i32 %6 to i64
  %10 = tail call noalias i8* @av_mallocz(i64 %9) #8
  %11 = load i32, i32* %5, align 4
  %12 = icmp eq i32 %11, 0
  %13 = icmp ne i8* %10, null
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %195

15:                                               ; preds = %4, %8
  %16 = phi i8* [ %10, %8 ], [ null, %4 ]
  %17 = icmp ne i32 %3, 0
  %18 = select i1 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)
  br i1 %17, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 2
  %21 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %20, align 8
  %22 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %21, i64 0, i32 0
  br label %27

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 1
  %25 = load %struct.AVInputFormat*, %struct.AVInputFormat** %24, align 8
  %26 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %25, i64 0, i32 0
  br label %27

27:                                               ; preds = %23, %19
  %28 = phi i8** [ %22, %19 ], [ %26, %23 ]
  %29 = load i8*, i8** %28, align 8
  %30 = select i1 %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %18, i32 %1, i8* %29, i8* %30, i8* %2) #8
  %31 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 29
  %32 = load %struct.AVDictionary*, %struct.AVDictionary** %31, align 8
  tail call fastcc void @dump_metadata(%struct.AVDictionary* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0))
  br i1 %17, label %76, label %33

33:                                               ; preds = %27
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #8
  %34 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 11
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, -9223372036854775808
  br i1 %36, label %48, label %37

37:                                               ; preds = %33
  %38 = icmp slt i64 %35, 9223372036854770808
  %39 = select i1 %38, i64 5000, i64 0
  %40 = add nsw i64 %39, %35
  %41 = sdiv i64 %40, 1000000
  %42 = srem i64 %40, 1000000
  %43 = sdiv i64 %40, 60000000
  %44 = srem i64 %41, 60
  %45 = sdiv i64 %40, 3600000000
  %46 = srem i64 %43, 60
  %47 = sdiv i64 %42, 10000
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i64 %45, i64 %46, i64 %44, i64 %47) #8
  br label %49

48:                                               ; preds = %33
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %49

49:                                               ; preds = %48, %37
  %50 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 10
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, -9223372036854775808
  br i1 %52, label %68, label %53

53:                                               ; preds = %49
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #8
  %54 = load i64, i64* %50, align 8
  %55 = sdiv i64 %54, 1000000
  %56 = icmp slt i64 %55, 0
  %57 = sub nsw i64 0, %55
  %58 = select i1 %56, i64 %57, i64 %55
  %59 = trunc i64 %58 to i32
  %60 = srem i64 %54, 1000000
  %61 = icmp slt i64 %60, 0
  %62 = sub nsw i64 0, %60
  %63 = select i1 %61, i64 %62, i64 %60
  %64 = icmp sgt i64 %54, -1
  %65 = select i1 %64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)
  %66 = tail call i64 @av_rescale(i64 %63, i64 1000000, i64 1000000) #9
  %67 = trunc i64 %66 to i32
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* %65, i32 %59, i32 %67) #8
  br label %68

68:                                               ; preds = %49, %53
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0)) #8
  %69 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 12
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = sdiv i64 %70, 1000
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i64 %73) #8
  br label %75

74:                                               ; preds = %68
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %75

75:                                               ; preds = %74, %72
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %76

76:                                               ; preds = %75, %27
  %77 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 27
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %121, label %80

80:                                               ; preds = %76
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #8
  %81 = load i32, i32* %77, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %121, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 28
  br label %85

85:                                               ; preds = %83, %85
  %86 = phi i64 [ 0, %83 ], [ %117, %85 ]
  %87 = load %struct.AVChapter**, %struct.AVChapter*** %84, align 8
  %88 = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %87, i64 %86
  %89 = load %struct.AVChapter*, %struct.AVChapter** %88, align 8
  %90 = trunc i64 %86 to i32
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 %1, i32 %90) #8
  %91 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %89, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = sitofp i64 %92 to double
  %94 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %89, i64 0, i32 1
  %95 = bitcast %struct.AVRational* %94 to i64*
  %96 = load i64, i64* %95, align 4
  %97 = trunc i64 %96 to i32
  %98 = lshr i64 %96, 32
  %99 = trunc i64 %98 to i32
  %100 = sitofp i32 %97 to double
  %101 = sitofp i32 %99 to double
  %102 = fdiv nsz double %100, %101
  %103 = fmul nsz double %102, %93
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), double %103) #8
  %104 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %89, i64 0, i32 3
  %105 = load i64, i64* %104, align 8
  %106 = sitofp i64 %105 to double
  %107 = load i64, i64* %95, align 4
  %108 = trunc i64 %107 to i32
  %109 = lshr i64 %107, 32
  %110 = trunc i64 %109 to i32
  %111 = sitofp i32 %108 to double
  %112 = sitofp i32 %110 to double
  %113 = fdiv nsz double %111, %112
  %114 = fmul nsz double %113, %106
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), double %114) #8
  %115 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %89, i64 0, i32 4
  %116 = load %struct.AVDictionary*, %struct.AVDictionary** %115, align 8
  tail call fastcc void @dump_metadata(%struct.AVDictionary* %116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0))
  %117 = add nuw nsw i64 %86, 1
  %118 = load i32, i32* %77, align 4
  %119 = zext i32 %118 to i64
  %120 = icmp ult i64 %117, %119
  br i1 %120, label %85, label %121

121:                                              ; preds = %85, %76, %80
  %122 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 20
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 21
  br label %127

127:                                              ; preds = %125, %164
  %128 = phi i64 [ 0, %125 ], [ %167, %164 ]
  %129 = phi i32 [ 0, %125 ], [ %166, %164 ]
  %130 = load %struct.AVProgram**, %struct.AVProgram*** %126, align 8
  %131 = getelementptr inbounds %struct.AVProgram*, %struct.AVProgram** %130, i64 %128
  %132 = load %struct.AVProgram*, %struct.AVProgram** %131, align 8
  %133 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %132, i64 0, i32 5
  %134 = load %struct.AVDictionary*, %struct.AVDictionary** %133, align 8
  %135 = tail call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %134, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 0) #8
  %136 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %132, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq %struct.AVDictionaryEntry* %135, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %127
  %140 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %135, i64 0, i32 1
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %127, %139
  %143 = phi i8* [ %141, %139 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), %127 ]
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i32 %137, i8* %143) #8
  %144 = load %struct.AVDictionary*, %struct.AVDictionary** %133, align 8
  tail call fastcc void @dump_metadata(%struct.AVDictionary* %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0))
  %145 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %132, i64 0, i32 4
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %132, i64 0, i32 3
  br label %150

150:                                              ; preds = %148, %150
  %151 = phi i64 [ 0, %148 ], [ %160, %150 ]
  %152 = load i32*, i32** %149, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 %151
  %154 = load i32, i32* %153, align 4
  tail call fastcc void @dump_stream_format(%struct.AVFormatContext* %0, i32 %154, i32 %1, i32 %3)
  %155 = load i32*, i32** %149, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 %151
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %16, i64 %158
  store i8 1, i8* %159, align 1
  %160 = add nuw nsw i64 %151, 1
  %161 = load i32, i32* %145, align 8
  %162 = zext i32 %161 to i64
  %163 = icmp ult i64 %160, %162
  br i1 %163, label %150, label %164

164:                                              ; preds = %150, %142
  %165 = phi i32 [ 0, %142 ], [ %161, %150 ]
  %166 = add i32 %165, %129
  %167 = add nuw nsw i64 %128, 1
  %168 = load i32, i32* %122, align 4
  %169 = zext i32 %168 to i64
  %170 = icmp ult i64 %167, %169
  br i1 %170, label %127, label %171

171:                                              ; preds = %164
  %172 = load i32, i32* %5, align 4
  %173 = icmp ult i32 %166, %172
  br i1 %173, label %174, label %177

174:                                              ; preds = %171
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)) #8
  br label %175

175:                                              ; preds = %121, %174
  %176 = load i32, i32* %5, align 4
  br label %177

177:                                              ; preds = %175, %171
  %178 = phi i32 [ %176, %175 ], [ %172, %171 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %194, label %180

180:                                              ; preds = %177, %189
  %181 = phi i32 [ %190, %189 ], [ %178, %177 ]
  %182 = phi i64 [ %191, %189 ], [ 0, %177 ]
  %183 = getelementptr inbounds i8, i8* %16, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %180
  %187 = trunc i64 %182 to i32
  tail call fastcc void @dump_stream_format(%struct.AVFormatContext* %0, i32 %187, i32 %1, i32 %3)
  %188 = load i32, i32* %5, align 4
  br label %189

189:                                              ; preds = %180, %186
  %190 = phi i32 [ %181, %180 ], [ %188, %186 ]
  %191 = add nuw nsw i64 %182, 1
  %192 = zext i32 %190 to i64
  %193 = icmp ult i64 %191, %192
  br i1 %193, label %180, label %194

194:                                              ; preds = %189, %177
  tail call void @av_free(i8* %16) #8
  br label %195

195:                                              ; preds = %8, %194
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @dump_metadata(%struct.AVDictionary*, i8*) unnamed_addr #0 {
  %3 = alloca [256 x i8], align 16
  %4 = icmp eq %struct.AVDictionary* %0, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @av_dict_count(%struct.AVDictionary* nonnull %0) #8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = tail call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 0) #8
  %10 = icmp eq %struct.AVDictionaryEntry* %9, null
  br i1 %10, label %11, label %55

11:                                               ; preds = %8, %5
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0), i8* %1) #8
  %12 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* nonnull %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 2) #8
  %13 = icmp eq %struct.AVDictionaryEntry* %12, null
  br i1 %13, label %55, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  br label %16

16:                                               ; preds = %14, %52
  %17 = phi %struct.AVDictionaryEntry* [ %12, %14 ], [ %53, %52 ]
  %18 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @strcmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8* %19) #10
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %52, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %17, i64 0, i32 1
  %24 = load i8*, i8** %23, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i8* %1, i8* %19) #8
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %51, label %27

27:                                               ; preds = %22, %44
  %28 = phi i8* [ %48, %44 ], [ %24, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 256, i1 false)
  %29 = call i64 @strcspn(i8* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0)) #10
  %30 = add i64 %29, 1
  %31 = icmp ult i64 %30, 256
  %32 = select i1 %31, i64 %30, i64 256
  %33 = call i64 @av_strlcpy(i8* nonnull %15, i8* %28, i64 %32) #8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i64 0, i64 0), i8* nonnull %15) #8
  %34 = getelementptr inbounds i8, i8* %28, i64 %29
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 13
  br i1 %36, label %37, label %39

37:                                               ; preds = %27
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #8
  %38 = load i8, i8* %34, align 1
  br label %39

39:                                               ; preds = %37, %27
  %40 = phi i8 [ %38, %37 ], [ %35, %27 ]
  %41 = icmp eq i8 %40, 10
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0), i8* %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0)) #8
  %43 = load i8, i8* %34, align 1
  br label %44

44:                                               ; preds = %42, %39
  %45 = phi i8 [ %43, %42 ], [ %40, %39 ]
  %46 = icmp eq i8 %45, 0
  %47 = getelementptr inbounds i8, i8* %34, i64 1
  %48 = select i1 %46, i8* %34, i8* %47
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %15) #8
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %27

51:                                               ; preds = %44, %22
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %52

52:                                               ; preds = %16, %51
  %53 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* nonnull %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), %struct.AVDictionaryEntry* %17, i32 2) #8
  %54 = icmp eq %struct.AVDictionaryEntry* %53, null
  br i1 %54, label %55, label %16

55:                                               ; preds = %52, %11, %8, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) local_unnamed_addr #3

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @dump_stream_format(%struct.AVFormatContext* nocapture readonly, i32, i32, i32) unnamed_addr #0 {
  %5 = alloca [23 x i8], align 16
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca [256 x i8], align 16
  %11 = alloca %struct.AVCodecContext*, align 8
  %12 = alloca %struct.AVRational, align 4
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 256, i1 false)
  %14 = icmp eq i32 %3, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 2
  %17 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %16, align 8
  %18 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %17, i64 0, i32 7
  br label %23

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 1
  %21 = load %struct.AVInputFormat*, %struct.AVInputFormat** %20, align 8
  %22 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %21, i64 0, i32 2
  br label %23

23:                                               ; preds = %19, %15
  %24 = phi i32* [ %18, %15 ], [ %22, %19 ]
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 7
  %27 = load %struct.AVStream**, %struct.AVStream*** %26, align 8
  %28 = sext i32 %1 to i64
  %29 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %27, i64 %28
  %30 = load %struct.AVStream*, %struct.AVStream** %29, align 8
  %31 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 11
  %32 = load %struct.AVDictionary*, %struct.AVDictionary** %31, align 8
  %33 = tail call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 0) #8
  %34 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i64 0, i32 65
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %struct.AVCodecContext** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  %37 = tail call %struct.AVCodecContext* @avcodec_alloc_context3(%struct.AVCodec* null) #8
  store %struct.AVCodecContext* %37, %struct.AVCodecContext** %11, align 8
  %38 = icmp eq %struct.AVCodecContext* %37, null
  %39 = bitcast %struct.AVCodecContext* %37 to i8*
  br i1 %38, label %756, label %40

40:                                               ; preds = %23
  %41 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 19
  %42 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %41, align 8
  %43 = tail call i32 @avcodec_parameters_to_context(%struct.AVCodecContext* nonnull %37, %struct.AVCodecParameters* %42) #8
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %11) #8
  br label %756

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 2
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %47, align 8
  %49 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i64 0, i32 179
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i64 0, i32 179
  store i32 %50, i32* %51, align 8
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %47, align 8
  %53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i64 0, i32 3
  %54 = bitcast %struct.AVCodec** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i64 0, i32 3
  %57 = bitcast %struct.AVCodec** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %47, align 8
  %59 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i64 0, i32 97
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i64 0, i32 97
  store i32 %60, i32* %61, align 4
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %47, align 8
  %63 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %62, i64 0, i32 98
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i64 0, i32 98
  store i32 %64, i32* %65, align 8
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %47, align 8
  %67 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %66, i64 0, i32 22
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i64 0, i32 22
  store i32 %68, i32* %69, align 4
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %47, align 8
  %71 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %70, i64 0, i32 23
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i64 0, i32 23
  store i32 %72, i32* %73, align 8
  %74 = icmp eq i8* %35, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %46
  %76 = tail call i32 @av_opt_set(i8* nonnull %39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0), i8* nonnull %35, i32 0) #8
  br label %77

77:                                               ; preds = %46, %75
  call void @avcodec_string(i8* nonnull %13, i32 256, %struct.AVCodecContext* nonnull %37, i32 %3) #8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %11) #8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i32 %2, i32 %1) #8
  %78 = and i32 %25, 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i32 %82) #8
  br label %83

83:                                               ; preds = %77, %80
  %84 = icmp eq %struct.AVDictionaryEntry* %33, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %33, i64 0, i32 1
  %87 = load i8*, i8** %86, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8* %87) #8
  br label %88

88:                                               ; preds = %83, %85
  %89 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 27
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 4
  %92 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 4, i32 1
  %95 = load i32, i32* %94, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i64 0, i64 0), i32 %90, i32 %93, i32 %95) #8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i8* nonnull %13) #8
  %96 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 10
  %97 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %96, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %152, label %100

100:                                              ; preds = %88
  %101 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %41, align 8
  %102 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %101, i64 0, i32 13
  %103 = bitcast %struct.AVRational* %96 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %struct.AVRational* %102 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = trunc i64 %104 to i32
  %108 = trunc i64 %106 to i32
  %109 = shl i64 %104, 32
  %110 = ashr exact i64 %109, 32
  %111 = ashr i64 %106, 32
  %112 = mul nsw i64 %110, %111
  %113 = shl i64 %106, 32
  %114 = ashr exact i64 %113, 32
  %115 = ashr i64 %104, 32
  %116 = mul nsw i64 %114, %115
  %117 = icmp eq i64 %112, %116
  br i1 %117, label %118, label %130

118:                                              ; preds = %100
  %119 = icmp ugt i64 %106, 4294967295
  %120 = icmp ugt i64 %104, 4294967295
  %121 = and i1 %120, %119
  br i1 %121, label %152, label %122

122:                                              ; preds = %118
  %123 = icmp eq i32 %107, 0
  %124 = icmp eq i32 %108, 0
  %125 = or i1 %123, %124
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = xor i64 %106, %104
  %128 = trunc i64 %127 to i32
  %129 = icmp sgt i32 %128, -1
  br i1 %129, label %152, label %130

130:                                              ; preds = %100, %122, %126
  %131 = bitcast %struct.AVRational* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #8
  %132 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %12, i64 0, i32 0
  store i32 -1431655766, i32* %132, align 4
  %133 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %12, i64 0, i32 1
  store i32 -1431655766, i32* %133, align 4
  %134 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %101, i64 0, i32 11
  %135 = load i32, i32* %134, align 8
  %136 = sext i32 %135 to i64
  %137 = shl i64 %104, 32
  %138 = ashr exact i64 %137, 32
  %139 = mul nsw i64 %138, %136
  %140 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %101, i64 0, i32 12
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 10, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %145, %142
  %147 = call i32 @av_reduce(i32* nonnull %132, i32* %133, i64 %139, i64 %146, i64 1048576) #8
  %148 = load i32, i32* %97, align 8
  %149 = load i32, i32* %143, align 4
  %150 = load i32, i32* %132, align 4
  %151 = load i32, i32* %133, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i64 0, i64 0), i32 %148, i32 %149, i32 %150, i32 %151) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #8
  br label %152

152:                                              ; preds = %118, %126, %88, %130
  %153 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %41, align 8
  %154 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %153, i64 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %249

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 12
  %159 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 12, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %166, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %158, i64 0, i32 0
  %164 = load i32, i32* %163, align 8
  %165 = icmp ne i32 %164, 0
  br label %166

166:                                              ; preds = %157, %162
  %167 = phi i1 [ false, %157 ], [ %165, %162 ]
  %168 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 17
  %169 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 17, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %176, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %168, i64 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = icmp ne i32 %174, 0
  br label %176

176:                                              ; preds = %166, %172
  %177 = phi i1 [ false, %166 ], [ %175, %172 ]
  %178 = load i32, i32* %94, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %176
  %181 = load i32, i32* %92, align 8
  %182 = icmp ne i32 %181, 0
  br label %183

183:                                              ; preds = %176, %180
  %184 = phi i1 [ false, %176 ], [ %182, %180 ]
  %185 = load %struct.AVCodecContext*, %struct.AVCodecContext** %47, align 8
  %186 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %185, i64 0, i32 17, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %193, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %185, i64 0, i32 17, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = icmp ne i32 %191, 0
  br label %193

193:                                              ; preds = %183, %189
  %194 = phi i1 [ false, %183 ], [ %192, %189 ]
  %195 = or i1 %167, %177
  %196 = or i1 %195, %184
  %197 = or i1 %196, %194
  br i1 %197, label %198, label %199

198:                                              ; preds = %193
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i64 0, i64 0), i8* %35) #8
  br label %199

199:                                              ; preds = %193, %198
  br i1 %167, label %200, label %212

200:                                              ; preds = %199
  %201 = bitcast %struct.AVRational* %158 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = trunc i64 %202 to i32
  %204 = lshr i64 %202, 32
  %205 = trunc i64 %204 to i32
  %206 = sitofp i32 %203 to double
  %207 = sitofp i32 %205 to double
  %208 = fdiv nsz double %206, %207
  %209 = or i1 %177, %184
  %210 = or i1 %209, %194
  %211 = select i1 %210, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0)
  call fastcc void @print_fps(double %208, i8* %211)
  br label %212

212:                                              ; preds = %200, %199
  br i1 %177, label %213, label %224

213:                                              ; preds = %212
  %214 = bitcast %struct.AVRational* %168 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = trunc i64 %215 to i32
  %217 = lshr i64 %215, 32
  %218 = trunc i64 %217 to i32
  %219 = sitofp i32 %216 to double
  %220 = sitofp i32 %218 to double
  %221 = fdiv nsz double %219, %220
  %222 = or i1 %184, %194
  %223 = select i1 %222, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0)
  call fastcc void @print_fps(double %221, i8* %223)
  br label %224

224:                                              ; preds = %213, %212
  br i1 %184, label %225, label %236

225:                                              ; preds = %224
  %226 = bitcast %struct.AVRational* %91 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = trunc i64 %227 to i32
  %229 = lshr i64 %227, 32
  %230 = trunc i64 %229 to i32
  %231 = sitofp i32 %228 to double
  %232 = sitofp i32 %230 to double
  %233 = fdiv nsz double %231, %232
  %234 = fdiv nsz double 1.000000e+00, %233
  %235 = select i1 %194, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0)
  call fastcc void @print_fps(double %234, i8* %235)
  br label %236

236:                                              ; preds = %225, %224
  br i1 %194, label %237, label %249

237:                                              ; preds = %236
  %238 = load %struct.AVCodecContext*, %struct.AVCodecContext** %47, align 8
  %239 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %238, i64 0, i32 17
  %240 = bitcast %struct.AVRational* %239 to i64*
  %241 = load i64, i64* %240, align 4
  %242 = trunc i64 %241 to i32
  %243 = lshr i64 %241, 32
  %244 = trunc i64 %243 to i32
  %245 = sitofp i32 %242 to double
  %246 = sitofp i32 %244 to double
  %247 = fdiv nsz double %245, %246
  %248 = fdiv nsz double 1.000000e+00, %247
  call fastcc void @print_fps(double %248, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0))
  br label %249

249:                                              ; preds = %236, %237, %152
  %250 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 8
  %251 = load i32, i32* %250, align 8
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %256, label %254

254:                                              ; preds = %249
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i64 0, i64 0)) #8
  %255 = load i32, i32* %250, align 8
  br label %256

256:                                              ; preds = %249, %254
  %257 = phi i32 [ %251, %249 ], [ %255, %254 ]
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0)) #8
  %261 = load i32, i32* %250, align 8
  br label %262

262:                                              ; preds = %256, %260
  %263 = phi i32 [ %257, %256 ], [ %261, %260 ]
  %264 = and i32 %263, 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %268, label %266

266:                                              ; preds = %262
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i64 0, i64 0)) #8
  %267 = load i32, i32* %250, align 8
  br label %268

268:                                              ; preds = %262, %266
  %269 = phi i32 [ %263, %262 ], [ %267, %266 ]
  %270 = and i32 %269, 8
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %274, label %272

272:                                              ; preds = %268
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0)) #8
  %273 = load i32, i32* %250, align 8
  br label %274

274:                                              ; preds = %268, %272
  %275 = phi i32 [ %269, %268 ], [ %273, %272 ]
  %276 = and i32 %275, 16
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i64 0, i64 0)) #8
  %279 = load i32, i32* %250, align 8
  br label %280

280:                                              ; preds = %274, %278
  %281 = phi i32 [ %275, %274 ], [ %279, %278 ]
  %282 = and i32 %281, 32
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %286, label %284

284:                                              ; preds = %280
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0)) #8
  %285 = load i32, i32* %250, align 8
  br label %286

286:                                              ; preds = %280, %284
  %287 = phi i32 [ %281, %280 ], [ %285, %284 ]
  %288 = and i32 %287, 64
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %292, label %290

290:                                              ; preds = %286
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0)) #8
  %291 = load i32, i32* %250, align 8
  br label %292

292:                                              ; preds = %286, %290
  %293 = phi i32 [ %287, %286 ], [ %291, %290 ]
  %294 = trunc i32 %293 to i8
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %292
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.64, i64 0, i64 0)) #8
  %297 = load i32, i32* %250, align 8
  br label %298

298:                                              ; preds = %296, %292
  %299 = phi i32 [ %297, %296 ], [ %293, %292 ]
  %300 = and i32 %299, 256
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %304, label %302

302:                                              ; preds = %298
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i64 0, i64 0)) #8
  %303 = load i32, i32* %250, align 8
  br label %304

304:                                              ; preds = %298, %302
  %305 = phi i32 [ %299, %298 ], [ %303, %302 ]
  %306 = and i32 %305, 512
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %310, label %308

308:                                              ; preds = %304
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i64 0, i64 0)) #8
  %309 = load i32, i32* %250, align 8
  br label %310

310:                                              ; preds = %304, %308
  %311 = phi i32 [ %305, %304 ], [ %309, %308 ]
  %312 = and i32 %311, 1024
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %310
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.67, i64 0, i64 0)) #8
  %315 = load i32, i32* %250, align 8
  br label %316

316:                                              ; preds = %310, %314
  %317 = phi i32 [ %311, %310 ], [ %315, %314 ]
  %318 = and i32 %317, 2048
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %322, label %320

320:                                              ; preds = %316
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0)) #8
  %321 = load i32, i32* %250, align 8
  br label %322

322:                                              ; preds = %316, %320
  %323 = phi i32 [ %317, %316 ], [ %321, %320 ]
  %324 = and i32 %323, 65536
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %328, label %326

326:                                              ; preds = %322
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0)) #8
  %327 = load i32, i32* %250, align 8
  br label %328

328:                                              ; preds = %322, %326
  %329 = phi i32 [ %323, %322 ], [ %327, %326 ]
  %330 = and i32 %329, 131072
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %334, label %332

332:                                              ; preds = %328
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0)) #8
  %333 = load i32, i32* %250, align 8
  br label %334

334:                                              ; preds = %328, %332
  %335 = phi i32 [ %329, %328 ], [ %333, %332 ]
  %336 = and i32 %335, 262144
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %340, label %338

338:                                              ; preds = %334
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #8
  %339 = load i32, i32* %250, align 8
  br label %340

340:                                              ; preds = %334, %338
  %341 = phi i32 [ %335, %334 ], [ %339, %338 ]
  %342 = and i32 %341, 524288
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %346, label %344

344:                                              ; preds = %340
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i64 0, i64 0)) #8
  %345 = load i32, i32* %250, align 8
  br label %346

346:                                              ; preds = %340, %344
  %347 = phi i32 [ %341, %340 ], [ %345, %344 ]
  %348 = and i32 %347, 1048576
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %351, label %350

350:                                              ; preds = %346
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73, i64 0, i64 0)) #8
  br label %351

351:                                              ; preds = %346, %350
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %352 = load %struct.AVDictionary*, %struct.AVDictionary** %31, align 8
  call fastcc void @dump_metadata(%struct.AVDictionary* %352, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0))
  %353 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 15
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %756, label %356

356:                                              ; preds = %351
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)) #8
  %357 = load i32, i32* %353, align 8
  %358 = icmp sgt i32 %357, 0
  br i1 %358, label %359, label %756

359:                                              ; preds = %356
  %360 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 14
  %361 = getelementptr inbounds [23 x i8], [23 x i8]* %5, i64 0, i64 0
  %362 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i64 0, i32 12
  %363 = bitcast %struct.AVRational* %362 to i64*
  %364 = bitcast i64* %6 to i8*
  %365 = bitcast i64* %7 to i8*
  %366 = bitcast i64* %8 to i8*
  %367 = bitcast i64* %9 to i8*
  br label %368

368:                                              ; preds = %751, %359
  %369 = phi i64 [ 0, %359 ], [ %752, %751 ]
  %370 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %360, align 8
  %371 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)) #8
  %372 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 2
  %373 = load i32, i32* %372, align 4
  switch i32 %373, label %748 [
    i32 0, label %374
    i32 1, label %375
    i32 2, label %376
    i32 3, label %437
    i32 4, label %438
    i32 5, label %482
    i32 6, label %486
    i32 7, label %502
    i32 8, label %521
    i32 10, label %531
    i32 20, label %552
    i32 21, label %648
    i32 22, label %687
    i32 28, label %694
    i32 29, label %695
    i32 30, label %722
  ]

374:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i64 0, i64 0)) #8
  br label %751

375:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i64 0, i64 0)) #8
  br label %751

376:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0)) #8
  %377 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %371, i64 0, i32 0
  %380 = load i8*, i8** %379, align 8
  %381 = icmp eq i8* %380, null
  %382 = icmp slt i32 %378, 4
  %383 = or i1 %382, %381
  br i1 %383, label %436, label %384

384:                                              ; preds = %376
  %385 = bitcast i8* %380 to i32*
  %386 = load i32, i32* %385, align 1
  %387 = getelementptr inbounds i8, i8* %380, i64 4
  %388 = add nsw i32 %378, -4
  %389 = and i32 %386, 1
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %398, label %391

391:                                              ; preds = %384
  %392 = icmp slt i32 %388, 4
  br i1 %392, label %436, label %393

393:                                              ; preds = %391
  %394 = bitcast i8* %387 to i32*
  %395 = load i32, i32* %394, align 1
  %396 = getelementptr inbounds i8, i8* %380, i64 8
  %397 = add nsw i32 %378, -8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.95, i64 0, i64 0), i32 %395) #8
  br label %398

398:                                              ; preds = %393, %384
  %399 = phi i32 [ %397, %393 ], [ %388, %384 ]
  %400 = phi i8* [ %396, %393 ], [ %387, %384 ]
  %401 = and i32 %386, 2
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %411, label %403

403:                                              ; preds = %398
  %404 = icmp slt i32 %399, 8
  br i1 %404, label %436, label %405

405:                                              ; preds = %403
  %406 = bitcast i8* %400 to i64*
  %407 = load i64, i64* %406, align 1
  %408 = getelementptr inbounds i8, i8* %400, i64 8
  %409 = add nsw i32 %399, -8
  %410 = call i8* @av_get_channel_name(i64 %407) #8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.96, i64 0, i64 0), i8* %410) #8
  br label %411

411:                                              ; preds = %405, %398
  %412 = phi i32 [ %409, %405 ], [ %399, %398 ]
  %413 = phi i8* [ %408, %405 ], [ %400, %398 ]
  %414 = and i32 %386, 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %423, label %416

416:                                              ; preds = %411
  %417 = icmp slt i32 %412, 4
  br i1 %417, label %436, label %418

418:                                              ; preds = %416
  %419 = bitcast i8* %413 to i32*
  %420 = load i32, i32* %419, align 1
  %421 = getelementptr inbounds i8, i8* %413, i64 4
  %422 = add nsw i32 %412, -4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.97, i64 0, i64 0), i32 %420) #8
  br label %423

423:                                              ; preds = %418, %411
  %424 = phi i32 [ %422, %418 ], [ %412, %411 ]
  %425 = phi i8* [ %421, %418 ], [ %413, %411 ]
  %426 = and i32 %386, 8
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %751, label %428

428:                                              ; preds = %423
  %429 = icmp slt i32 %424, 8
  br i1 %429, label %436, label %430

430:                                              ; preds = %428
  %431 = bitcast i8* %425 to i32*
  %432 = load i32, i32* %431, align 1
  %433 = getelementptr inbounds i8, i8* %425, i64 4
  %434 = bitcast i8* %433 to i32*
  %435 = load i32, i32* %434, align 1
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.98, i64 0, i64 0), i32 %432, i32 %435) #8
  br label %751

436:                                              ; preds = %428, %416, %403, %391, %376
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0)) #8
  br label %751

437:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i64 0, i64 0)) #8
  br label %751

438:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i64 0, i64 0)) #8
  %439 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 1
  %440 = load i32, i32* %439, align 8
  %441 = icmp ult i32 %440, 16
  br i1 %441, label %442, label %443

442:                                              ; preds = %438
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0)) #8
  br label %751

443:                                              ; preds = %438
  %444 = bitcast %struct.AVPacketSideData* %371 to %struct.AVReplayGain**
  %445 = load %struct.AVReplayGain*, %struct.AVReplayGain** %444, align 8
  %446 = getelementptr inbounds %struct.AVReplayGain, %struct.AVReplayGain* %445, i64 0, i32 0
  %447 = load i32, i32* %446, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.101, i64 0, i64 0)) #8
  %448 = icmp eq i32 %447, -2147483648
  br i1 %448, label %449, label %450

449:                                              ; preds = %443
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0)) #8
  br label %454

450:                                              ; preds = %443
  %451 = sitofp i32 %447 to float
  %452 = fdiv nsz float %451, 1.000000e+05
  %453 = fpext float %452 to double
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i64 0, i64 0), double %453) #8
  br label %454

454:                                              ; preds = %450, %449
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0)) #8
  %455 = getelementptr inbounds %struct.AVReplayGain, %struct.AVReplayGain* %445, i64 0, i32 1
  %456 = load i32, i32* %455, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.102, i64 0, i64 0)) #8
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %454
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0)) #8
  br label %463

459:                                              ; preds = %454
  %460 = uitofp i32 %456 to float
  %461 = fmul nsz float %460, 0x3DF0000000000000
  %462 = fpext float %461 to double
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i64 0, i64 0), double %462) #8
  br label %463

463:                                              ; preds = %459, %458
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0)) #8
  %464 = getelementptr inbounds %struct.AVReplayGain, %struct.AVReplayGain* %445, i64 0, i32 2
  %465 = load i32, i32* %464, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i64 0, i64 0)) #8
  %466 = icmp eq i32 %465, -2147483648
  br i1 %466, label %467, label %468

467:                                              ; preds = %463
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0)) #8
  br label %472

468:                                              ; preds = %463
  %469 = sitofp i32 %465 to float
  %470 = fdiv nsz float %469, 1.000000e+05
  %471 = fpext float %470 to double
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i64 0, i64 0), double %471) #8
  br label %472

472:                                              ; preds = %468, %467
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0)) #8
  %473 = getelementptr inbounds %struct.AVReplayGain, %struct.AVReplayGain* %445, i64 0, i32 3
  %474 = load i32, i32* %473, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i64 0, i64 0)) #8
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %477

476:                                              ; preds = %472
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0)) #8
  br label %481

477:                                              ; preds = %472
  %478 = uitofp i32 %474 to float
  %479 = fmul nsz float %478, 0x3DF0000000000000
  %480 = fpext float %479 to double
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i64 0, i64 0), double %480) #8
  br label %481

481:                                              ; preds = %477, %476
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0)) #8
  br label %751

482:                                              ; preds = %368
  %483 = bitcast %struct.AVPacketSideData* %371 to i32**
  %484 = load i32*, i32** %483, align 8
  %485 = call nsz double @av_display_rotation_get(i32* %484) #8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.85, i64 0, i64 0), double %485) #8
  br label %751

486:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.86, i64 0, i64 0)) #8
  %487 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 1
  %488 = load i32, i32* %487, align 8
  %489 = icmp ult i32 %488, 12
  br i1 %489, label %490, label %491

490:                                              ; preds = %486
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0)) #8
  br label %751

491:                                              ; preds = %486
  %492 = bitcast %struct.AVPacketSideData* %371 to %struct.AVStereo3D**
  %493 = load %struct.AVStereo3D*, %struct.AVStereo3D** %492, align 8
  %494 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %493, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  %496 = call i8* @av_stereo3d_type_name(i32 %495) #8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i64 0, i64 0), i8* %496) #8
  %497 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %493, i64 0, i32 1
  %498 = load i32, i32* %497, align 4
  %499 = and i32 %498, 1
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %751, label %501

501:                                              ; preds = %491
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.109, i64 0, i64 0)) #8
  br label %751

502:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i64 0, i64 0)) #8
  %503 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 1
  %504 = load i32, i32* %503, align 8
  %505 = icmp ult i32 %504, 4
  br i1 %505, label %506, label %507

506:                                              ; preds = %502
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0)) #8
  br label %751

507:                                              ; preds = %502
  %508 = bitcast %struct.AVPacketSideData* %371 to i32**
  %509 = load i32*, i32** %508, align 8
  %510 = load i32, i32* %509, align 4
  switch i32 %510, label %520 [
    i32 0, label %511
    i32 1, label %512
    i32 2, label %513
    i32 3, label %514
    i32 4, label %515
    i32 5, label %516
    i32 6, label %517
    i32 7, label %518
    i32 8, label %519
  ]

511:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i64 0, i64 0)) #8
  br label %751

512:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.111, i64 0, i64 0)) #8
  br label %751

513:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.112, i64 0, i64 0)) #8
  br label %751

514:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.113, i64 0, i64 0)) #8
  br label %751

515:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i64 0, i64 0)) #8
  br label %751

516:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i64 0, i64 0)) #8
  br label %751

517:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.116, i64 0, i64 0)) #8
  br label %751

518:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.117, i64 0, i64 0)) #8
  br label %751

519:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i64 0, i64 0)) #8
  br label %751

520:                                              ; preds = %507
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0)) #8
  br label %751

521:                                              ; preds = %368
  %522 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %371, i64 0, i32 0
  %523 = load i8*, i8** %522, align 8
  %524 = bitcast i8* %523 to i32*
  %525 = load i32, i32* %524, align 1
  %526 = getelementptr inbounds i8, i8* %523, i64 4
  %527 = load i8, i8* %526, align 1
  %528 = zext i8 %527 to i32
  %529 = call signext i8 @av_get_picture_type_char(i32 %528) #8
  %530 = sext i8 %529 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.88, i64 0, i64 0), i32 %525, i32 %530) #8
  br label %751

531:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0)) #8
  %532 = bitcast %struct.AVPacketSideData* %371 to %struct.AVCPBProperties**
  %533 = load %struct.AVCPBProperties*, %struct.AVCPBProperties** %532, align 8
  %534 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 1
  %535 = load i32, i32* %534, align 8
  %536 = icmp ult i32 %535, 24
  br i1 %536, label %537, label %538

537:                                              ; preds = %531
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0)) #8
  br label %751

538:                                              ; preds = %531
  %539 = getelementptr inbounds %struct.AVCPBProperties, %struct.AVCPBProperties* %533, i64 0, i32 0
  %540 = load i32, i32* %539, align 8
  %541 = getelementptr inbounds %struct.AVCPBProperties, %struct.AVCPBProperties* %533, i64 0, i32 1
  %542 = load i32, i32* %541, align 4
  %543 = getelementptr inbounds %struct.AVCPBProperties, %struct.AVCPBProperties* %533, i64 0, i32 2
  %544 = load i32, i32* %543, align 8
  %545 = getelementptr inbounds %struct.AVCPBProperties, %struct.AVCPBProperties* %533, i64 0, i32 3
  %546 = load i32, i32* %545, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.119, i64 0, i64 0), i32 %540, i32 %542, i32 %544, i32 %546) #8
  %547 = getelementptr inbounds %struct.AVCPBProperties, %struct.AVCPBProperties* %533, i64 0, i32 4
  %548 = load i64, i64* %547, align 8
  %549 = icmp eq i64 %548, -1
  br i1 %549, label %550, label %551

550:                                              ; preds = %538
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.120, i64 0, i64 0)) #8
  br label %751

551:                                              ; preds = %538
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i64 0, i64 0), i64 %548) #8
  br label %751

552:                                              ; preds = %368
  %553 = bitcast %struct.AVPacketSideData* %371 to %struct.AVMasteringDisplayMetadata**
  %554 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %553, align 8
  %555 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 4
  %556 = load i32, i32* %555, align 4
  %557 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 5
  %558 = load i32, i32* %557, align 4
  %559 = bitcast %struct.AVMasteringDisplayMetadata* %554 to i64*
  %560 = load i64, i64* %559, align 4
  %561 = trunc i64 %560 to i32
  %562 = lshr i64 %560, 32
  %563 = trunc i64 %562 to i32
  %564 = sitofp i32 %561 to double
  %565 = sitofp i32 %563 to double
  %566 = fdiv nsz double %564, %565
  %567 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 0, i64 0, i64 1
  %568 = bitcast %struct.AVRational* %567 to i64*
  %569 = load i64, i64* %568, align 4
  %570 = trunc i64 %569 to i32
  %571 = lshr i64 %569, 32
  %572 = trunc i64 %571 to i32
  %573 = sitofp i32 %570 to double
  %574 = sitofp i32 %572 to double
  %575 = fdiv nsz double %573, %574
  %576 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 0, i64 1
  %577 = bitcast [2 x %struct.AVRational]* %576 to i64*
  %578 = load i64, i64* %577, align 4
  %579 = trunc i64 %578 to i32
  %580 = lshr i64 %578, 32
  %581 = trunc i64 %580 to i32
  %582 = sitofp i32 %579 to double
  %583 = sitofp i32 %581 to double
  %584 = fdiv nsz double %582, %583
  %585 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 0, i64 1, i64 1
  %586 = bitcast %struct.AVRational* %585 to i64*
  %587 = load i64, i64* %586, align 4
  %588 = trunc i64 %587 to i32
  %589 = lshr i64 %587, 32
  %590 = trunc i64 %589 to i32
  %591 = sitofp i32 %588 to double
  %592 = sitofp i32 %590 to double
  %593 = fdiv nsz double %591, %592
  %594 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 0, i64 2
  %595 = bitcast [2 x %struct.AVRational]* %594 to i64*
  %596 = load i64, i64* %595, align 4
  %597 = trunc i64 %596 to i32
  %598 = lshr i64 %596, 32
  %599 = trunc i64 %598 to i32
  %600 = sitofp i32 %597 to double
  %601 = sitofp i32 %599 to double
  %602 = fdiv nsz double %600, %601
  %603 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 0, i64 2, i64 1
  %604 = bitcast %struct.AVRational* %603 to i64*
  %605 = load i64, i64* %604, align 4
  %606 = trunc i64 %605 to i32
  %607 = lshr i64 %605, 32
  %608 = trunc i64 %607 to i32
  %609 = sitofp i32 %606 to double
  %610 = sitofp i32 %608 to double
  %611 = fdiv nsz double %609, %610
  %612 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 1
  %613 = bitcast [2 x %struct.AVRational]* %612 to i64*
  %614 = load i64, i64* %613, align 4
  %615 = trunc i64 %614 to i32
  %616 = lshr i64 %614, 32
  %617 = trunc i64 %616 to i32
  %618 = sitofp i32 %615 to double
  %619 = sitofp i32 %617 to double
  %620 = fdiv nsz double %618, %619
  %621 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 1, i64 1
  %622 = bitcast %struct.AVRational* %621 to i64*
  %623 = load i64, i64* %622, align 4
  %624 = trunc i64 %623 to i32
  %625 = lshr i64 %623, 32
  %626 = trunc i64 %625 to i32
  %627 = sitofp i32 %624 to double
  %628 = sitofp i32 %626 to double
  %629 = fdiv nsz double %627, %628
  %630 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 2
  %631 = bitcast %struct.AVRational* %630 to i64*
  %632 = load i64, i64* %631, align 4
  %633 = trunc i64 %632 to i32
  %634 = lshr i64 %632, 32
  %635 = trunc i64 %634 to i32
  %636 = sitofp i32 %633 to double
  %637 = sitofp i32 %635 to double
  %638 = fdiv nsz double %636, %637
  %639 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %554, i64 0, i32 3
  %640 = bitcast %struct.AVRational* %639 to i64*
  %641 = load i64, i64* %640, align 4
  %642 = trunc i64 %641 to i32
  %643 = lshr i64 %641, 32
  %644 = trunc i64 %643 to i32
  %645 = sitofp i32 %642 to double
  %646 = sitofp i32 %644 to double
  %647 = fdiv nsz double %645, %646
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @.str.122, i64 0, i64 0), i32 %556, i32 %558, double %566, double %575, double %584, double %593, double %602, double %611, double %620, double %629, double %638, double %647) #8
  br label %751

648:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i64 0, i64 0)) #8
  %649 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %41, align 8
  %650 = bitcast %struct.AVPacketSideData* %371 to %struct.AVSphericalMapping**
  %651 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %650, align 8
  %652 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 1
  %653 = load i32, i32* %652, align 8
  %654 = icmp ult i32 %653, 36
  br i1 %654, label %655, label %656

655:                                              ; preds = %648
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0)) #8
  br label %751

656:                                              ; preds = %648
  %657 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %651, i64 0, i32 0
  %658 = load i32, i32* %657, align 4
  %659 = call i8* @av_spherical_projection_name(i32 %658) #8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0), i8* %659) #8
  %660 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %651, i64 0, i32 1
  %661 = load i32, i32* %660, align 4
  %662 = sitofp i32 %661 to double
  %663 = fmul nsz double %662, 0x3EF0000000000000
  %664 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %651, i64 0, i32 2
  %665 = load i32, i32* %664, align 4
  %666 = sitofp i32 %665 to double
  %667 = fmul nsz double %666, 0x3EF0000000000000
  %668 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %651, i64 0, i32 3
  %669 = load i32, i32* %668, align 4
  %670 = sitofp i32 %669 to double
  %671 = fmul nsz double %670, 0x3EF0000000000000
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.124, i64 0, i64 0), double %663, double %667, double %671) #8
  %672 = load i32, i32* %657, align 4
  switch i32 %672, label %751 [
    i32 2, label %673
    i32 1, label %684
  ]

673:                                              ; preds = %656
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %364) #8
  store i64 -6148914691236517206, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365) #8
  store i64 -6148914691236517206, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %366) #8
  store i64 -6148914691236517206, i64* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %367) #8
  store i64 -6148914691236517206, i64* %9, align 8
  %674 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %649, i64 0, i32 11
  %675 = load i32, i32* %674, align 8
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %649, i64 0, i32 12
  %678 = load i32, i32* %677, align 4
  %679 = sext i32 %678 to i64
  call void @av_spherical_tile_bounds(%struct.AVSphericalMapping* %651, i64 %676, i64 %679, i64* nonnull %6, i64* nonnull %7, i64* nonnull %8, i64* nonnull %9) #8
  %680 = load i64, i64* %6, align 8
  %681 = load i64, i64* %7, align 8
  %682 = load i64, i64* %8, align 8
  %683 = load i64, i64* %9, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.125, i64 0, i64 0), i64 %680, i64 %681, i64 %682, i64 %683) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %367) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %366) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %364) #8
  br label %751

684:                                              ; preds = %656
  %685 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %651, i64 0, i32 8
  %686 = load i32, i32* %685, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.126, i64 0, i64 0), i32 %686) #8
  br label %751

687:                                              ; preds = %368
  %688 = bitcast %struct.AVPacketSideData* %371 to %struct.AVContentLightMetadata**
  %689 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %688, align 8
  %690 = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %689, i64 0, i32 0
  %691 = load i32, i32* %690, align 4
  %692 = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %689, i64 0, i32 1
  %693 = load i32, i32* %692, align 4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.127, i64 0, i64 0), i32 %691, i32 %693) #8
  br label %751

694:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i64 0, i64 0)) #8
  br label %751

695:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.92, i64 0, i64 0)) #8
  %696 = bitcast %struct.AVPacketSideData* %371 to %struct.AVDOVIDecoderConfigurationRecord**
  %697 = load %struct.AVDOVIDecoderConfigurationRecord*, %struct.AVDOVIDecoderConfigurationRecord** %696, align 8
  %698 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %697, i64 0, i32 0
  %699 = load i8, i8* %698, align 1
  %700 = zext i8 %699 to i32
  %701 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %697, i64 0, i32 1
  %702 = load i8, i8* %701, align 1
  %703 = zext i8 %702 to i32
  %704 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %697, i64 0, i32 2
  %705 = load i8, i8* %704, align 1
  %706 = zext i8 %705 to i32
  %707 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %697, i64 0, i32 3
  %708 = load i8, i8* %707, align 1
  %709 = zext i8 %708 to i32
  %710 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %697, i64 0, i32 4
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  %713 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %697, i64 0, i32 5
  %714 = load i8, i8* %713, align 1
  %715 = zext i8 %714 to i32
  %716 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %697, i64 0, i32 6
  %717 = load i8, i8* %716, align 1
  %718 = zext i8 %717 to i32
  %719 = getelementptr inbounds %struct.AVDOVIDecoderConfigurationRecord, %struct.AVDOVIDecoderConfigurationRecord* %697, i64 0, i32 7
  %720 = load i8, i8* %719, align 1
  %721 = zext i8 %720 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.128, i64 0, i64 0), i32 %700, i32 %703, i32 %706, i32 %709, i32 %712, i32 %715, i32 %718, i32 %721) #8
  br label %751

722:                                              ; preds = %368
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i64 0, i64 0)) #8
  %723 = bitcast %struct.AVPacketSideData* %371 to i32**
  %724 = load i32*, i32** %723, align 8
  %725 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 1
  %726 = load i32, i32* %725, align 8
  %727 = icmp eq i32 %726, 16
  br i1 %727, label %728, label %733

728:                                              ; preds = %722
  %729 = load i32, i32* %724, align 4
  %730 = icmp ugt i32 %729, 3
  br i1 %730, label %733, label %731

731:                                              ; preds = %728
  %732 = icmp eq i32 %729, 0
  br i1 %732, label %751, label %734

733:                                              ; preds = %728, %722
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0)) #8
  br label %751

734:                                              ; preds = %731, %734
  %735 = phi i64 [ %744, %734 ], [ 1, %731 ]
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %361) #8
  %736 = getelementptr inbounds i32, i32* %724, i64 %735
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %361, i8 -86, i64 23, i1 false) #8
  %737 = load i32, i32* %736, align 4
  %738 = load i64, i64* %363, align 8
  %739 = call i8* @av_timecode_make_smpte_tc_string2(i8* nonnull %361, i64 %738, i32 %737, i32 0, i32 0) #8
  %740 = load i32, i32* %724, align 4
  %741 = zext i32 %740 to i64
  %742 = icmp eq i64 %735, %741
  %743 = select i1 %742, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0)
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.129, i64 0, i64 0), i8* nonnull %361, i8* %743) #8
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %361) #8
  %744 = add nuw nsw i64 %735, 1
  %745 = load i32, i32* %724, align 4
  %746 = zext i32 %745 to i64
  %747 = icmp ult i64 %735, %746
  br i1 %747, label %734, label %751

748:                                              ; preds = %368
  %749 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %370, i64 %369, i32 1
  %750 = load i32, i32* %749, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.94, i64 0, i64 0), i32 %373, i32 %750) #8
  br label %751

751:                                              ; preds = %734, %748, %733, %731, %695, %694, %687, %684, %673, %656, %655, %552, %551, %550, %537, %521, %520, %519, %518, %517, %516, %515, %514, %513, %512, %511, %506, %501, %491, %490, %482, %481, %442, %437, %436, %430, %423, %375, %374
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #8
  %752 = add nuw nsw i64 %369, 1
  %753 = load i32, i32* %353, align 8
  %754 = sext i32 %753 to i64
  %755 = icmp slt i64 %752, %754
  br i1 %755, label %368, label %756

756:                                              ; preds = %751, %356, %351, %23, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %13) #8
  ret void
}

declare void @av_free(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #4

declare i32 @av_dict_count(%struct.AVDictionary*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare i64 @av_strlcpy(i8*, i8*, i64) local_unnamed_addr #2

declare %struct.AVCodecContext* @avcodec_alloc_context3(%struct.AVCodec*) local_unnamed_addr #2

declare i32 @avcodec_parameters_to_context(%struct.AVCodecContext*, %struct.AVCodecParameters*) local_unnamed_addr #2

declare void @avcodec_free_context(%struct.AVCodecContext**) local_unnamed_addr #2

declare i32 @av_opt_set(i8*, i8*, i8*, i32) local_unnamed_addr #2

declare void @avcodec_string(i8*, i32, %struct.AVCodecContext*, i32) local_unnamed_addr #2

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @print_fps(double, i8*) unnamed_addr #0 {
  %3 = fmul nsz double %0, 1.000000e+02
  %4 = fptrunc double %3 to float
  %5 = tail call i64 @llvm.lrint.i64.f32(float %4)
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74, i64 0, i64 0), double %0, i8* %1) #8
  br label %18

8:                                                ; preds = %2
  %9 = urem i64 %5, 100
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i64 0, i64 0), double %0, i8* %1) #8
  br label %18

12:                                               ; preds = %8
  %13 = urem i64 %5, 100000
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0), double %0, i8* %1) #8
  br label %18

16:                                               ; preds = %12
  %17 = fdiv nsz double %0, 1.000000e+03
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i64 0, i64 0), double %17, i8* %1) #8
  br label %18

18:                                               ; preds = %11, %16, %15, %7
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.lrint.i64.f32(float) #6

declare double @av_display_rotation_get(i32*) local_unnamed_addr #2

declare signext i8 @av_get_picture_type_char(i32) local_unnamed_addr #2

declare i8* @av_get_channel_name(i64) local_unnamed_addr #2

declare i8* @av_stereo3d_type_name(i32) local_unnamed_addr #2

declare i8* @av_spherical_projection_name(i32) local_unnamed_addr #2

declare void @av_spherical_tile_bounds(%struct.AVSphericalMapping*, i64, i64, i64*, i64*, i64*, i64*) local_unnamed_addr #2

declare i8* @av_timecode_make_smpte_tc_string2(i8*, i64, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
