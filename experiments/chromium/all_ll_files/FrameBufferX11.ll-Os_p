; ModuleID = '../../third_party/swiftshader/src/Main/FrameBufferX11.cpp'
source_filename = "../../third_party/swiftshader/src/Main/FrameBufferX11.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.LibX11 = type { i8 }
%struct._XDisplay = type opaque
%struct.XErrorEvent = type { i32, %struct._XDisplay*, i64, i64, i8, i8, i8 }
%"class.sw::FrameBufferX11" = type { %"class.sw::FrameBuffer.base", i8, %struct._XDisplay*, i64, %struct._XImage*, %struct._XGC*, i8, %struct.XShmSegmentInfo }
%"class.sw::FrameBuffer.base" = type <{ i32 (...)**, i8, [7 x i8], i8*, i32, i32, i32, i32, i8*, void (i8*, i8*, %"struct.sw::FrameBuffer::Cursor"*)*, %"class.std::__1::shared_ptr", %"struct.sw::BlitState", %"struct.sw::BlitState", %"class.sw::Thread"*, %"class.sw::Event", %"class.sw::Event", i8 }>
%"struct.sw::FrameBuffer::Cursor" = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.sw::BlitState" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.sw::Thread" = type <{ i64, i8, [7 x i8] }>
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct._XImage = type { i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i8*, %"struct._XImage::funcs" }
%"struct._XImage::funcs" = type { %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)*, i32 (%struct._XImage*)*, i64 (%struct._XImage*, i32, i32)*, i32 (%struct._XImage*, i32, i32, i64)*, %struct._XImage* (%struct._XImage*, i32, i32, i32, i32)*, i32 (%struct._XImage*, i64)* }
%struct.Visual = type { %struct._XExtData*, i64, i32, i64, i64, i64, i32, i32 }
%struct._XExtData = type { i32, %struct._XExtData*, i32 (%struct._XExtData*)*, i8* }
%struct._XGC = type opaque
%struct.XShmSegmentInfo = type { i64, i32, i8*, i32 }
%struct.XVisualInfo = type { %struct.Visual*, i64, i32, i32, i32, i64, i64, i64, i32, i32 }
%"class.sw::FrameBuffer" = type <{ i32 (...)**, i8, [7 x i8], i8*, i32, i32, i32, i32, i8*, void (i8*, i8*, %"struct.sw::FrameBuffer::Cursor"*)*, %"class.std::__1::shared_ptr", %"struct.sw::BlitState", %"struct.sw::BlitState", %"class.sw::Thread"*, %"class.sw::Event", %"class.sw::Event", i8, [7 x i8] }>
%struct.LibX11exports = type { %struct._XDisplay* (i8*)*, i32 (%struct._XDisplay*, i64, %struct.XWindowAttributes*)*, %struct.Screen* (%struct._XDisplay*)*, i32 (%struct.Screen*)*, i32 (%struct.Screen*)*, i32 (%struct.Screen*)*, %struct._XGC* (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32, i32, i32, %struct.XVisualInfo*)*, %struct.Visual* (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, %struct.XErrorEvent*)* (i32 (%struct._XDisplay*, %struct.XErrorEvent*)*)*, i32 (%struct._XDisplay*, i32)*, %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)*, i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, i32, i32, i8*, i32)*, i32 (%struct._XDisplay*)*, %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i8*, %struct.XShmSegmentInfo*, i32, i32)*, i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)*, i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32, i1)* }
%struct.XWindowAttributes = type { i32, i32, i32, i32, i32, i32, %struct.Visual*, i64, i32, i32, i32, i32, i64, i64, i32, i64, i32, i32, i64, i64, i64, i32, %struct.Screen* }
%struct.Screen = type { %struct._XExtData*, %struct._XDisplay*, i64, i32, i32, i32, i32, i32, %struct.Depth*, i32, %struct.Visual*, %struct._XGC*, i64, i64, i64, i32, i32, i32, i32, i64 }
%struct.Depth = type { i32, i32, %struct.Visual* }
%struct.anon.2 = type { %struct._XExtData*, %struct._XPrivate*, i32, i32, i32, i32, i8*, i64, i64, i64, i32, i64 (%struct._XDisplay*)*, i32, i32, i32, i32, i32, %struct.ScreenFormat*, i32, i32, %struct._XPrivate*, %struct._XPrivate*, i32, i64, i64, i8*, i8*, i8*, i8*, i32, %struct._XrmHashBucketRec*, i32 (%struct._XDisplay*)*, i8*, i32, i32, %struct.Screen*, i64, i64, i32, i32, i8*, i8*, i32, i8* }
%struct.ScreenFormat = type { %struct._XExtData*, i32, i32, i32 }
%struct._XPrivate = type opaque
%struct._XrmHashBucketRec = type opaque
%struct.shmid_ds = type { %struct.ipc_perm, i64, i64, i64, i64, i32, i32, i64, i64, i64 }
%struct.ipc_perm = type { i32, i32, i32, i32, i32, i32, i16, i16, i64, i64 }
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.sw::RectT" = type opaque

$_ZN2sw14FrameBufferX114flipEPNS_7SurfaceE = comdat any

@_ZTVN2sw14FrameBufferX11E = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sw::FrameBufferX11"*)* @_ZN2sw14FrameBufferX11D2Ev to i8*), i8* bitcast (void (%"class.sw::FrameBufferX11"*)* @_ZN2sw14FrameBufferX11D0Ev to i8*), i8* bitcast (void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*)* @_ZN2sw14FrameBufferX114flipEPNS_7SurfaceE to i8*), i8* bitcast (void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"*, %"struct.sw::RectT"*)* @_ZN2sw14FrameBufferX114blitEPNS_7SurfaceEPKNS_5RectTIiEES6_ to i8*), i8* bitcast (i8* (%"class.sw::FrameBufferX11"*)* @_ZN2sw14FrameBufferX114lockEv to i8*), i8* bitcast (void (%"class.sw::FrameBufferX11"*)* @_ZN2sw14FrameBufferX116unlockEv to i8*)] }, align 8
@libX11 = external global %class.LibX11, align 1
@_ZN2swL21PreviousXErrorHandlerE = internal unnamed_addr global i32 (%struct._XDisplay*, %struct.XErrorEvent*)* null, align 8
@_ZN2swL12shmBadAccessE = internal unnamed_addr global i1 false, align 1

@_ZN2sw14FrameBufferX11C1EP9_XDisplaymii = hidden unnamed_addr alias void (%"class.sw::FrameBufferX11"*, %struct._XDisplay*, i64, i32, i32), void (%"class.sw::FrameBufferX11"*, %struct._XDisplay*, i64, i32, i32)* @_ZN2sw14FrameBufferX11C2EP9_XDisplaymii
@_ZN2sw14FrameBufferX11D1Ev = hidden unnamed_addr alias void (%"class.sw::FrameBufferX11"*), void (%"class.sw::FrameBufferX11"*)* @_ZN2sw14FrameBufferX11D2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw14FrameBufferX11C2EP9_XDisplaymii(%"class.sw::FrameBufferX11"*, %struct._XDisplay*, i64, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %struct.XVisualInfo, align 8
  %7 = bitcast %"class.sw::FrameBufferX11"* %0 to %"class.sw::FrameBuffer"*
  tail call void @_ZN2sw11FrameBufferC2Eiibb(%"class.sw::FrameBuffer"* %7, i32 %3, i32 %4, i1 zeroext false, i1 zeroext false) #8
  %8 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2sw14FrameBufferX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 1
  %10 = icmp eq %struct._XDisplay* %1, null
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %9, align 1
  %12 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 2
  store %struct._XDisplay* %1, %struct._XDisplay** %12, align 8
  %13 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 3
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 4
  store %struct._XImage* null, %struct._XImage** %14, align 8
  br i1 %10, label %15, label %20

15:                                               ; preds = %5
  %16 = tail call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %17 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %16, i64 0, i32 0
  %18 = load %struct._XDisplay* (i8*)*, %struct._XDisplay* (i8*)** %17, align 8
  %19 = tail call %struct._XDisplay* %18(i8* null) #8
  store %struct._XDisplay* %19, %struct._XDisplay** %12, align 8
  br label %20

20:                                               ; preds = %5, %15
  %21 = phi %struct._XDisplay* [ %1, %5 ], [ %19, %15 ]
  %22 = bitcast %struct._XDisplay* %21 to %struct.anon.2*
  %23 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i64 0, i32 33
  %24 = load i32, i32* %23, align 8
  %25 = tail call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %26 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %25, i64 0, i32 6
  %27 = load %struct._XGC* (%struct._XDisplay*, i32)*, %struct._XGC* (%struct._XDisplay*, i32)** %26, align 8
  %28 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %29 = tail call %struct._XGC* %27(%struct._XDisplay* %28, i32 %24) #8
  %30 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 5
  store %struct._XGC* %29, %struct._XGC** %30, align 8
  %31 = tail call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %32 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %31, i64 0, i32 7
  %33 = load i32 (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32)** %32, align 8
  %34 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %35 = tail call i32 %33(%struct._XDisplay* %34, i32 %24) #8
  %36 = bitcast %struct.XVisualInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 64, i1 false)
  %37 = tail call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %38 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %37, i64 0, i32 8
  %39 = load i32 (%struct._XDisplay*, i32, i32, i32, %struct.XVisualInfo*)*, i32 (%struct._XDisplay*, i32, i32, i32, %struct.XVisualInfo*)** %38, align 8
  %40 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %41 = call i32 %39(%struct._XDisplay* %40, i32 %24, i32 32, i32 4, %struct.XVisualInfo* nonnull %6) #8
  %42 = icmp ne i32 %41, 0
  %43 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %6, i64 0, i32 7
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 255
  %46 = and i1 %42, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %20
  %48 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %6, i64 0, i32 0
  %49 = load %struct.Visual*, %struct.Visual** %48, align 8
  br label %56

50:                                               ; preds = %20
  %51 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %52 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %51, i64 0, i32 9
  %53 = load %struct.Visual* (%struct._XDisplay*, i32)*, %struct.Visual* (%struct._XDisplay*, i32)** %52, align 8
  %54 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %55 = call %struct.Visual* %53(%struct._XDisplay* %54, i32 %24) #8
  br label %56

56:                                               ; preds = %50, %47
  %57 = phi %struct.Visual* [ %49, %47 ], [ %55, %50 ]
  %58 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %59 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %58, i64 0, i32 16
  %60 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %59, align 8
  %61 = icmp eq i32 (%struct._XDisplay*)* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 6
  store i8 0, i8* %63, align 8
  br label %125

64:                                               ; preds = %56
  %65 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %66 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %65, i64 0, i32 16
  %67 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %66, align 8
  %68 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %69 = call i32 %67(%struct._XDisplay* %68) #8
  %70 = icmp eq i32 %69, 1
  %71 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 6
  %72 = zext i1 %70 to i8
  store i8 %72, i8* %71, align 8
  br i1 %70, label %73, label %125

73:                                               ; preds = %64
  %74 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %75 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %74, i64 0, i32 17
  %76 = load %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i8*, %struct.XShmSegmentInfo*, i32, i32)*, %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i8*, %struct.XShmSegmentInfo*, i32, i32)** %75, align 8
  %77 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %78 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 7
  %79 = call %struct._XImage* %76(%struct._XDisplay* %77, %struct.Visual* %57, i32 %35, i32 2, i8* null, %struct.XShmSegmentInfo* %78, i32 %3, i32 %4) #8
  store %struct._XImage* %79, %struct._XImage** %14, align 8
  %80 = getelementptr inbounds %struct._XImage, %struct._XImage* %79, i64 0, i32 10
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %struct._XImage, %struct._XImage* %79, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %81
  %85 = sext i32 %84 to i64
  %86 = call i32 @shmget(i32 0, i64 %85, i32 896) #8
  %87 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 7, i32 1
  store i32 %86, i32* %87, align 8
  %88 = call i8* @shmat(i32 %86, i8* null, i32 0) #8
  %89 = load %struct._XImage*, %struct._XImage** %14, align 8
  %90 = getelementptr inbounds %struct._XImage, %struct._XImage* %89, i64 0, i32 4
  store i8* %88, i8** %90, align 8
  %91 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 7, i32 2
  store i8* %88, i8** %91, align 8
  %92 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 7, i32 3
  store i32 0, i32* %92, align 8
  %93 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %94 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %93, i64 0, i32 10
  %95 = load i32 (%struct._XDisplay*, %struct.XErrorEvent*)* (i32 (%struct._XDisplay*, %struct.XErrorEvent*)*)*, i32 (%struct._XDisplay*, %struct.XErrorEvent*)* (i32 (%struct._XDisplay*, %struct.XErrorEvent*)*)** %94, align 8
  %96 = call i32 (%struct._XDisplay*, %struct.XErrorEvent*)* %95(i32 (%struct._XDisplay*, %struct.XErrorEvent*)* nonnull @_ZN2swL16XShmErrorHandlerEP9_XDisplayP11XErrorEvent) #8
  store i32 (%struct._XDisplay*, %struct.XErrorEvent*)* %96, i32 (%struct._XDisplay*, %struct.XErrorEvent*)** @_ZN2swL21PreviousXErrorHandlerE, align 8
  %97 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %98 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %97, i64 0, i32 18
  %99 = load i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)*, i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)** %98, align 8
  %100 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %101 = call i32 %99(%struct._XDisplay* %100, %struct.XShmSegmentInfo* %78) #8
  %102 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %103 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %102, i64 0, i32 11
  %104 = load i32 (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32)** %103, align 8
  %105 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %106 = call i32 %104(%struct._XDisplay* %105, i32 0) #8
  %107 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %108 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %107, i64 0, i32 10
  %109 = load i32 (%struct._XDisplay*, %struct.XErrorEvent*)* (i32 (%struct._XDisplay*, %struct.XErrorEvent*)*)*, i32 (%struct._XDisplay*, %struct.XErrorEvent*)* (i32 (%struct._XDisplay*, %struct.XErrorEvent*)*)** %108, align 8
  %110 = load i32 (%struct._XDisplay*, %struct.XErrorEvent*)*, i32 (%struct._XDisplay*, %struct.XErrorEvent*)** @_ZN2swL21PreviousXErrorHandlerE, align 8
  %111 = call i32 (%struct._XDisplay*, %struct.XErrorEvent*)* %109(i32 (%struct._XDisplay*, %struct.XErrorEvent*)* %110) #8
  %112 = load i1, i1* @_ZN2swL12shmBadAccessE, align 1
  br i1 %112, label %113, label %122

113:                                              ; preds = %73
  store i8 0, i8* %71, align 8
  %114 = load %struct._XImage*, %struct._XImage** %14, align 8
  %115 = getelementptr inbounds %struct._XImage, %struct._XImage* %114, i64 0, i32 16, i32 1
  %116 = load i32 (%struct._XImage*)*, i32 (%struct._XImage*)** %115, align 8
  %117 = call i32 %116(%struct._XImage* %114) #8
  %118 = load i8*, i8** %91, align 8
  %119 = call i32 @shmdt(i8* %118) #8
  %120 = load i32, i32* %87, align 8
  %121 = call i32 @shmctl(i32 %120, i32 0, %struct.shmid_ds* null) #8
  store i1 false, i1* @_ZN2swL12shmBadAccessE, align 1
  br label %122

122:                                              ; preds = %73, %113
  %123 = load i8, i8* %71, align 8
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %64, %62, %122
  %126 = shl nsw i32 %3, 2
  %127 = mul nsw i32 %126, %4
  %128 = sext i32 %127 to i64
  %129 = call noalias i8* @malloc(i64 %128) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %129, i8 0, i64 %128, i1 false)
  %130 = call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %131 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %130, i64 0, i32 12
  %132 = load %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)*, %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)** %131, align 8
  %133 = load %struct._XDisplay*, %struct._XDisplay** %12, align 8
  %134 = call %struct._XImage* %132(%struct._XDisplay* %133, %struct.Visual* %57, i32 %35, i32 2, i32 0, i8* %129, i32 %3, i32 %4, i32 32, i32 %126) #8
  store %struct._XImage* %134, %struct._XImage** %14, align 8
  %135 = icmp eq %struct._XImage* %134, null
  br i1 %135, label %136, label %137

136:                                              ; preds = %125
  call void @free(i8* %129) #8
  br label %137

137:                                              ; preds = %136, %125, %122
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %36) #9
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw11FrameBufferC2Eiibb(%"class.sw::FrameBuffer"*, i32, i32, i1 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: optsize
declare %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind optsize
declare i32 @shmget(i32, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize
declare i8* @shmat(i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define internal i32 @_ZN2swL16XShmErrorHandlerEP9_XDisplayP11XErrorEvent(%struct._XDisplay*, %struct.XErrorEvent*) #0 {
  %3 = getelementptr inbounds %struct.XErrorEvent, %struct.XErrorEvent* %1, i64 0, i32 4
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 10
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i1 true, i1* @_ZN2swL12shmBadAccessE, align 1
  br label %10

7:                                                ; preds = %2
  %8 = load i32 (%struct._XDisplay*, %struct.XErrorEvent*)*, i32 (%struct._XDisplay*, %struct.XErrorEvent*)** @_ZN2swL21PreviousXErrorHandlerE, align 8
  %9 = tail call i32 %8(%struct._XDisplay* %0, %struct.XErrorEvent* %1) #8
  br label %10

10:                                               ; preds = %7, %6
  %11 = phi i32 [ 0, %6 ], [ %9, %7 ]
  ret i32 %11
}

; Function Attrs: nounwind optsize
declare i32 @shmdt(i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize
declare i32 @shmctl(i32, i32, %struct.shmid_ds*) local_unnamed_addr #3

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw14FrameBufferX11D2Ev(%"class.sw::FrameBufferX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2sw14FrameBufferX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 4
  %8 = load %struct._XImage*, %struct._XImage** %7, align 8
  %9 = getelementptr inbounds %struct._XImage, %struct._XImage* %8, i64 0, i32 16, i32 1
  %10 = load i32 (%struct._XImage*)*, i32 (%struct._XImage*)** %9, align 8
  %11 = tail call i32 %10(%struct._XImage* %8) #8
  br label %31

12:                                               ; preds = %1
  %13 = tail call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %14 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %13, i64 0, i32 19
  %15 = load i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)*, i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)** %14, align 8
  %16 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 2
  %17 = load %struct._XDisplay*, %struct._XDisplay** %16, align 8
  %18 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 7
  %19 = tail call i32 %15(%struct._XDisplay* %17, %struct.XShmSegmentInfo* %18) #8
  %20 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 4
  %21 = load %struct._XImage*, %struct._XImage** %20, align 8
  %22 = getelementptr inbounds %struct._XImage, %struct._XImage* %21, i64 0, i32 16, i32 1
  %23 = load i32 (%struct._XImage*)*, i32 (%struct._XImage*)** %22, align 8
  %24 = tail call i32 %23(%struct._XImage* %21) #8
  %25 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 7, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = tail call i32 @shmdt(i8* %26) #8
  %28 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 7, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = tail call i32 @shmctl(i32 %29, i32 0, %struct.shmid_ds* null) #8
  br label %31

31:                                               ; preds = %12, %6
  %32 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 1
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = tail call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %37 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %36, i64 0, i32 13
  %38 = load i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)** %37, align 8
  %39 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 2
  %40 = load %struct._XDisplay*, %struct._XDisplay** %39, align 8
  %41 = tail call i32 %38(%struct._XDisplay* %40) #8
  br label %42

42:                                               ; preds = %31, %35
  %43 = bitcast %"class.sw::FrameBufferX11"* %0 to %"class.sw::FrameBuffer"*
  tail call void @_ZN2sw11FrameBufferD2Ev(%"class.sw::FrameBuffer"* %43) #8
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN2sw11FrameBufferD2Ev(%"class.sw::FrameBuffer"*) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw14FrameBufferX11D0Ev(%"class.sw::FrameBufferX11"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2sw14FrameBufferX11D2Ev(%"class.sw::FrameBufferX11"* %0) #8
  %2 = bitcast %"class.sw::FrameBufferX11"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i8* @_ZN2sw14FrameBufferX114lockEv(%"class.sw::FrameBufferX11"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 4
  %3 = load %struct._XImage*, %struct._XImage** %2, align 8
  %4 = icmp eq %struct._XImage* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 3
  %7 = load i8*, i8** %6, align 8
  br label %18

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct._XImage, %struct._XImage* %3, i64 0, i32 10
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 6
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %struct._XImage, %struct._XImage* %3, i64 0, i32 4
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 3
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = inttoptr i64 %14 to i8*
  br label %18

18:                                               ; preds = %5, %8
  %19 = phi i8* [ %7, %5 ], [ %17, %8 ]
  ret i8* %19
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw14FrameBufferX116unlockEv(%"class.sw::FrameBufferX11"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 3
  store i8* null, i8** %2, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw14FrameBufferX114blitEPNS_7SurfaceEPKNS_5RectTIiEES6_(%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"* nocapture readnone, %"struct.sw::RectT"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.sw::FrameBufferX11"* %0 to %"class.sw::FrameBuffer"*
  tail call void @_ZN2sw11FrameBuffer4copyEPNS_7SurfaceE(%"class.sw::FrameBuffer"* %5, %"class.sw::Surface"* %1) #8
  %6 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = tail call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  br i1 %8, label %10, label %26

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %9, i64 0, i32 14
  %12 = load i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32)** %11, align 8
  %13 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 2
  %14 = load %struct._XDisplay*, %struct._XDisplay** %13, align 8
  %15 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 5
  %18 = load %struct._XGC*, %struct._XGC** %17, align 8
  %19 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 4
  %20 = load %struct._XImage*, %struct._XImage** %19, align 8
  %21 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = tail call i32 %12(%struct._XDisplay* %14, i64 %16, %struct._XGC* %18, %struct._XImage* %20, i32 0, i32 0, i32 0, i32 0, i32 %22, i32 %24) #8
  br label %42

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %9, i64 0, i32 20
  %28 = load i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32, i1)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32, i1)** %27, align 8
  %29 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 2
  %30 = load %struct._XDisplay*, %struct._XDisplay** %29, align 8
  %31 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 5
  %34 = load %struct._XGC*, %struct._XGC** %33, align 8
  %35 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 4
  %36 = load %struct._XImage*, %struct._XImage** %35, align 8
  %37 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 0, i32 5
  %40 = load i32, i32* %39, align 4
  %41 = tail call i32 %28(%struct._XDisplay* %30, i64 %32, %struct._XGC* %34, %struct._XImage* %36, i32 0, i32 0, i32 0, i32 0, i32 %38, i32 %40, i1 zeroext false) #8
  br label %42

42:                                               ; preds = %26, %10
  %43 = tail call %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nonnull @libX11) #8
  %44 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %43, i64 0, i32 11
  %45 = load i32 (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32)** %44, align 8
  %46 = getelementptr inbounds %"class.sw::FrameBufferX11", %"class.sw::FrameBufferX11"* %0, i64 0, i32 2
  %47 = load %struct._XDisplay*, %struct._XDisplay** %46, align 8
  %48 = tail call i32 %45(%struct._XDisplay* %47, i32 0) #8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw11FrameBuffer4copyEPNS_7SurfaceE(%"class.sw::FrameBuffer"*, %"class.sw::Surface"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2sw14FrameBufferX114flipEPNS_7SurfaceE(%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.sw::FrameBufferX11"* %0 to void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"*, %"struct.sw::RectT"*)***
  %4 = load void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"*, %"struct.sw::RectT"*)**, void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"*, %"struct.sw::RectT"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"*, %"struct.sw::RectT"*)*, void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"*, %"struct.sw::RectT"*)** %4, i64 3
  %6 = load void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"*, %"struct.sw::RectT"*)*, void (%"class.sw::FrameBufferX11"*, %"class.sw::Surface"*, %"struct.sw::RectT"*, %"struct.sw::RectT"*)** %5, align 8
  tail call void %6(%"class.sw::FrameBufferX11"* %0, %"class.sw::Surface"* %1, %"struct.sw::RectT"* null, %"struct.sw::RectT"* null) #8
  ret void
}

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
