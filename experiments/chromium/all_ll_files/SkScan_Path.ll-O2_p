; ModuleID = '../../third_party/skia/src/core/SkScan_Path.cpp'
source_filename = "../../third_party/skia/src/core/SkScan_Path.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkScanClipper = type { %class.SkRectClipBlitter, %class.SkRgnClipBlitter, %class.SkBlitter*, %struct.SkIRect* }
%class.SkRectClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %struct.SkIRect }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkRgnClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkRegion* }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.anon = type { i8 }
%class.SkBasicEdgeBuilder = type <{ %class.SkEdgeBuilder, i32, [4 x i8] }>
%class.SkEdgeBuilder = type { i32 (...)**, i8**, %class.SkTDArray.14, %class.SkSTArenaAlloc }
%class.SkTDArray.14 = type { i8**, i32, i32 }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [512 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%struct.SkEdge = type { %struct.SkEdge*, %struct.SkEdge*, i32, i32, i32, i32, i8, i8, i8, i8 }
%class.InverseBlitter = type <{ %class.SkBlitter, %class.SkBlitter*, i32, i32, i32, [4 x i8] }>
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%struct.SkCubicEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SkQuadraticEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.15 }
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%class.sk_sp.15 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkAAClipBlitterWrapper = type { %class.SkRegion, %class.SkAAClipBlitter, %class.SkRegion*, %class.SkBlitter* }
%class.SkAAClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkAAClip*, %struct.SkIRect, i16*, i8*, %class.SkAutoSMalloc, i8* }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.17, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }

$_ZN13SkEdgeBuilderD2Ev = comdat any

$_ZN13SkEdgeBuilderD0Ev = comdat any

$_Z12SkTIntroSortIP6SkEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_ = comdat any

$_ZN14InverseBlitterD0Ev = comdat any

$_ZN14InverseBlitter5blitHEiii = comdat any

$_ZN14InverseBlitter9blitAntiHEiiPKhPKs = comdat any

$_ZN14InverseBlitter5blitVEiiih = comdat any

$_ZN14InverseBlitter8blitRectEiiii = comdat any

$_ZN14InverseBlitter8blitMaskERK6SkMaskRK7SkIRect = comdat any

$_ZN14InverseBlitter17justAnOpaqueColorEPj = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZTV13SkEdgeBuilder = comdat any

$_ZTV14InverseBlitter = comdat any

@_ZTV18SkBasicEdgeBuilder = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTV13SkEdgeBuilder = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD2Ev to i8*), i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV14InverseBlitter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev to i8*), i8* bitcast (void (%class.InverseBlitter*)* @_ZN14InverseBlitterD0Ev to i8*), i8* bitcast (void (%class.InverseBlitter*, i32, i32, i32)* @_ZN14InverseBlitter5blitHEiii to i8*), i8* bitcast (void (%class.InverseBlitter*, i32, i32, i8*, i16*)* @_ZN14InverseBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.InverseBlitter*, i32, i32, i32, i8)* @_ZN14InverseBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.InverseBlitter*, i32, i32, i32, i32)* @_ZN14InverseBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.InverseBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN14InverseBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.InverseBlitter*, i32*)* @_ZN14InverseBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, comdat, align 8
@_ZTV17SkRectClipBlitter = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTV16SkRgnClipBlitter = external unnamed_addr constant { [16 x i8*] }, align 8

@_ZN13SkScanClipperC1EP9SkBlitterPK8SkRegionRK7SkIRectbb = hidden unnamed_addr alias void (%class.SkScanClipper*, %class.SkBlitter*, %class.SkRegion*, %struct.SkIRect*, i1, i1), void (%class.SkScanClipper*, %class.SkBlitter*, %class.SkRegion*, %struct.SkIRect*, i1, i1)* @_ZN13SkScanClipperC2EP9SkBlitterPK8SkRegionRK7SkIRectbb

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z12sk_fill_pathRK6SkPathRK7SkIRectP9SkBlitteriiib(%class.SkPath* dereferenceable(16), %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkBlitter*, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 {
  %8 = alloca %class.anon, align 1
  %9 = alloca %struct.SkIRect, align 4
  %10 = alloca %class.SkBasicEdgeBuilder, align 8
  %11 = alloca %struct.SkEdge, align 8
  %12 = alloca %struct.SkEdge, align 8
  %13 = alloca %class.InverseBlitter, align 8
  %14 = bitcast %struct.SkIRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 0
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 1
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 2
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 3
  %19 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %19, i64 16, i1 false)
  %20 = load i32, i32* %15, align 4
  %21 = shl i32 %20, %5
  store i32 %21, i32* %15, align 4
  %22 = load i32, i32* %17, align 4
  %23 = shl i32 %22, %5
  store i32 %23, i32* %17, align 4
  %24 = load i32, i32* %16, align 4
  %25 = shl i32 %24, %5
  store i32 %25, i32* %16, align 4
  %26 = load i32, i32* %18, align 4
  %27 = shl i32 %26, %5
  store i32 %27, i32* %18, align 4
  %28 = bitcast %class.SkBasicEdgeBuilder* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %28) #8
  %29 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %10, i64 0, i32 0, i32 3, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 552, i1 false)
  %30 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %10, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %10, i64 0, i32 0, i32 3, i32 0, i32 0, i64 512
  %33 = bitcast i8* %32 to %class.SkArenaAlloc*
  %34 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %10, i64 0, i32 0, i32 3, i32 0, i32 0, i64 0
  %35 = bitcast i8*** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #8
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %33, i8* %34, i64 512, i64 512) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18SkBasicEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %36 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %10, i64 0, i32 1
  store i32 %5, i32* %36, align 8
  %37 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %10, i64 0, i32 0
  %38 = select i1 %6, %struct.SkIRect* null, %struct.SkIRect* %9
  %39 = call i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder* nonnull %37, %class.SkPath* dereferenceable(16) %0, %struct.SkIRect* %38) #8
  %40 = bitcast i8*** %31 to %struct.SkEdge***
  %41 = load %struct.SkEdge**, %struct.SkEdge*** %40, align 8
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %43, label %85

43:                                               ; preds = %7
  %44 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %45 = load i8, i8* %44, align 2
  %46 = and i8 %45, 2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %409, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %52, %3
  %58 = select i1 %57, i32 %3, i32 %52
  %59 = icmp sgt i32 %56, %4
  %60 = select i1 %59, i32 %4, i32 %56
  %61 = sext i32 %54 to i64
  %62 = sext i32 %50 to i64
  %63 = sub nsw i64 %61, %62
  %64 = sext i32 %60 to i64
  %65 = sext i32 %58 to i64
  %66 = sub nsw i64 %64, %65
  %67 = icmp slt i64 %63, 1
  %68 = icmp slt i64 %66, 1
  %69 = or i1 %67, %68
  br i1 %69, label %409, label %70

70:                                               ; preds = %48
  %71 = or i64 %66, %63
  %72 = add nsw i64 %71, 2147483648
  %73 = icmp ugt i64 %72, 4294967295
  br i1 %73, label %409, label %74

74:                                               ; preds = %70
  %75 = shl i32 %50, %5
  %76 = shl i32 %58, %5
  %77 = sub i32 %54, %50
  %78 = shl i32 %77, %5
  %79 = sub i32 %60, %58
  %80 = shl i32 %79, %5
  %81 = bitcast %class.SkBlitter* %2 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %82 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %82, i64 5
  %84 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %83, align 8
  call void %84(%class.SkBlitter* %2, i32 %75, i32 %76, i32 %78, i32 %80) #8
  br label %409

85:                                               ; preds = %7
  %86 = bitcast %struct.SkEdge* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %86) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 40, i1 false)
  %87 = bitcast %struct.SkEdge* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %87) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 40, i1 false)
  %88 = getelementptr inbounds %class.anon, %class.anon* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %88) #8
  %89 = icmp slt i32 %39, 2
  br i1 %89, label %90, label %91

90:                                               ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %88) #8
  br label %148

91:                                               ; preds = %85
  %92 = add nsw i32 %39, -2
  %93 = call i32 @llvm.ctlz.i32(i32 %92, i1 false) #8, !range !2
  %94 = shl nuw nsw i32 %93, 1
  %95 = sub nsw i32 64, %94
  call void @_Z12SkTIntroSortIP6SkEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32 %95, %struct.SkEdge** %41, i32 %39, %class.anon* nonnull dereferenceable(1) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %88) #8
  %96 = zext i32 %39 to i64
  %97 = add nsw i64 %96, -1
  %98 = and i64 %97, 1
  %99 = icmp eq i32 %39, 2
  br i1 %99, label %132, label %100

100:                                              ; preds = %91
  %101 = sub nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 1, %100 ], [ %129, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %130, %102 ]
  %105 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %41, i64 %103
  %106 = bitcast %struct.SkEdge** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = add nsw i64 %103, -1
  %109 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %41, i64 %108
  %110 = bitcast %struct.SkEdge** %109 to i64**
  %111 = load i64*, i64** %110, align 8
  store i64 %107, i64* %111, align 8
  %112 = bitcast %struct.SkEdge** %109 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = load %struct.SkEdge*, %struct.SkEdge** %105, align 8
  %115 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %114, i64 0, i32 1
  %116 = bitcast %struct.SkEdge** %115 to i64*
  store i64 %113, i64* %116, align 8
  %117 = add nuw nsw i64 %103, 1
  %118 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %41, i64 %117
  %119 = bitcast %struct.SkEdge** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %41, i64 %103
  %122 = bitcast %struct.SkEdge** %121 to i64**
  %123 = load i64*, i64** %122, align 8
  store i64 %120, i64* %123, align 8
  %124 = bitcast %struct.SkEdge** %121 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = load %struct.SkEdge*, %struct.SkEdge** %118, align 8
  %127 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %126, i64 0, i32 1
  %128 = bitcast %struct.SkEdge** %127 to i64*
  store i64 %125, i64* %128, align 8
  %129 = add nuw nsw i64 %103, 2
  %130 = add i64 %104, -2
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %102

132:                                              ; preds = %102, %91
  %133 = phi i64 [ 1, %91 ], [ %129, %102 ]
  %134 = icmp eq i64 %98, 0
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %41, i64 %133
  %137 = bitcast %struct.SkEdge** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = add nsw i64 %133, -1
  %140 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %41, i64 %139
  %141 = bitcast %struct.SkEdge** %140 to i64**
  %142 = load i64*, i64** %141, align 8
  store i64 %138, i64* %142, align 8
  %143 = bitcast %struct.SkEdge** %140 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = load %struct.SkEdge*, %struct.SkEdge** %136, align 8
  %146 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %145, i64 0, i32 1
  %147 = bitcast %struct.SkEdge** %146 to i64*
  store i64 %144, i64* %147, align 8
  br label %148

148:                                              ; preds = %135, %132, %90
  %149 = add nsw i32 %39, -1
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %41, i64 %150
  %152 = bitcast %struct.SkEdge** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = load %struct.SkEdge*, %struct.SkEdge** %41, align 8
  %155 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %11, i64 0, i32 1
  store %struct.SkEdge* null, %struct.SkEdge** %155, align 8
  %156 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %11, i64 0, i32 0
  store %struct.SkEdge* %154, %struct.SkEdge** %156, align 8
  %157 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %11, i64 0, i32 4
  store i32 -2147483647, i32* %157, align 8
  %158 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %11, i64 0, i32 2
  store i32 -2147483647, i32* %158, align 8
  %159 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %154, i64 0, i32 1
  store %struct.SkEdge* %11, %struct.SkEdge** %159, align 8
  %160 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %12, i64 0, i32 1
  %161 = bitcast %struct.SkEdge** %160 to i64*
  store i64 %153, i64* %161, align 8
  %162 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %12, i64 0, i32 0
  store %struct.SkEdge* null, %struct.SkEdge** %162, align 8
  %163 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %12, i64 0, i32 4
  store i32 2147483647, i32* %163, align 8
  %164 = inttoptr i64 %153 to %struct.SkEdge*
  %165 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %164, i64 0, i32 0
  store %struct.SkEdge* %12, %struct.SkEdge** %165, align 8
  %166 = shl i32 %3, %5
  %167 = shl i32 %4, %5
  br i1 %6, label %175, label %168

168:                                              ; preds = %148
  %169 = load i32, i32* %16, align 4
  %170 = icmp slt i32 %166, %169
  %171 = select i1 %170, i32 %169, i32 %166
  %172 = load i32, i32* %18, align 4
  %173 = icmp sgt i32 %167, %172
  %174 = select i1 %173, i32 %172, i32 %167
  br label %175

175:                                              ; preds = %148, %168
  %176 = phi i32 [ %171, %168 ], [ %166, %148 ]
  %177 = phi i32 [ %174, %168 ], [ %167, %148 ]
  %178 = bitcast %class.InverseBlitter* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %178) #8
  %179 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %13, i64 0, i32 1
  %180 = bitcast %class.SkBlitter** %179 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 -86, i64 24, i1 false)
  %181 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %13, i64 0, i32 0, i32 0
  %182 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %13, i64 0, i32 0, i32 1
  %183 = bitcast %class.SkAutoMalloc* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV14InverseBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %184 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %185 = load i8, i8* %184, align 2
  %186 = and i8 %185, 2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %199, label %188

188:                                              ; preds = %175
  %189 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %13, i64 0, i32 1
  store %class.SkBlitter* %2, %class.SkBlitter** %189, align 8
  %190 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = shl i32 %191, %5
  %193 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %13, i64 0, i32 2
  store i32 %192, i32* %193, align 8
  %194 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = shl i32 %195, %5
  %197 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %13, i64 0, i32 3
  store i32 %196, i32* %197, align 4
  %198 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %13, i64 0, i32 0
  br label %199

199:                                              ; preds = %175, %188
  %200 = phi %class.SkBlitter* [ %198, %188 ], [ %2, %175 ]
  %201 = phi void (%class.SkBlitter*, i32, i1)* [ @_ZL25PrePostInverseBlitterProcP9SkBlitterib, %188 ], [ null, %175 ]
  %202 = call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %0) #8
  %203 = icmp eq i32 %202, 0
  %204 = icmp eq void (%class.SkBlitter*, i32, i1)* %201, null
  %205 = and i1 %204, %203
  %206 = icmp sgt i32 %39, 1
  %207 = and i1 %206, %205
  br i1 %207, label %208, label %209

208:                                              ; preds = %199
  call fastcc void @_ZL17walk_simple_edgesP6SkEdgeP9SkBlitterii(%struct.SkEdge* nonnull %11, %class.SkBlitter* %200, i32 %176, i32 %177)
  br label %407

209:                                              ; preds = %199
  %210 = load i8, i8* %184, align 2
  %211 = load i32, i32* %17, align 4
  %212 = and i8 %210, 1
  %213 = icmp eq i8 %212, 0
  %214 = select i1 %213, i32 -1, i32 1
  %215 = icmp ne void (%class.SkBlitter*, i32, i1)* %201, null
  %216 = bitcast %class.SkBlitter* %200 to void (%class.SkBlitter*, i32, i32, i32)***
  br label %217

217:                                              ; preds = %360, %209
  %218 = phi i32 [ %176, %209 ], [ %347, %360 ]
  %219 = load %struct.SkEdge*, %struct.SkEdge** %156, align 8
  %220 = load i32, i32* %158, align 8
  br i1 %215, label %221, label %222

221:                                              ; preds = %217
  call void %201(%class.SkBlitter* %200, i32 %218, i1 zeroext true) #8, !callees !3
  br label %222

222:                                              ; preds = %221, %217
  %223 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %219, i64 0, i32 4
  %224 = load i32, i32* %223, align 8
  %225 = icmp sgt i32 %224, %218
  br i1 %225, label %330, label %226

226:                                              ; preds = %222, %323
  %227 = phi %struct.SkEdge* [ %254, %323 ], [ %219, %222 ]
  %228 = phi i32 [ %324, %323 ], [ %220, %222 ]
  %229 = phi i32 [ %238, %323 ], [ 0, %222 ]
  %230 = phi i32 [ %242, %323 ], [ 0, %222 ]
  %231 = bitcast %struct.SkEdge* %227 to %struct.SkCubicEdge*
  %232 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %227, i64 0, i32 2
  %233 = load i32, i32* %232, align 8
  %234 = add nsw i32 %233, 32768
  %235 = ashr i32 %234, 16
  %236 = and i32 %230, %214
  %237 = icmp eq i32 %236, 0
  %238 = select i1 %237, i32 %235, i32 %229
  %239 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %227, i64 0, i32 9
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = add nsw i32 %230, %241
  %243 = and i32 %242, %214
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %252

245:                                              ; preds = %226
  %246 = sub nsw i32 %235, %238
  %247 = icmp sgt i32 %246, 0
  br i1 %247, label %248, label %252

248:                                              ; preds = %245
  %249 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %216, align 8
  %250 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %249, i64 2
  %251 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %250, align 8
  call void %251(%class.SkBlitter* %200, i32 %238, i32 %218, i32 %246) #8
  br label %252

252:                                              ; preds = %248, %245, %226
  %253 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %227, i64 0, i32 0
  %254 = load %struct.SkEdge*, %struct.SkEdge** %253, align 8
  %255 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %227, i64 0, i32 5
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, %218
  br i1 %257, label %258, label %286

258:                                              ; preds = %252
  %259 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %227, i64 0, i32 6
  %260 = load i8, i8* %259, align 8
  %261 = icmp sgt i8 %260, 0
  br i1 %261, label %262, label %268

262:                                              ; preds = %258
  %263 = bitcast %struct.SkEdge* %227 to %struct.SkQuadraticEdge*
  %264 = call i32 @_ZN15SkQuadraticEdge15updateQuadraticEv(%struct.SkQuadraticEdge* %263) #8
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %275, label %266

266:                                              ; preds = %262
  %267 = load i32, i32* %232, align 8
  br label %291

268:                                              ; preds = %258
  %269 = icmp slt i8 %260, 0
  br i1 %269, label %270, label %275

270:                                              ; preds = %268
  %271 = call i32 @_ZN11SkCubicEdge11updateCubicEv(%struct.SkCubicEdge* %231) #8
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = load i32, i32* %232, align 8
  br label %291

275:                                              ; preds = %270, %268, %262
  %276 = bitcast %struct.SkEdge* %227 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %227, i64 0, i32 1
  %279 = bitcast %struct.SkEdge** %278 to i64**
  %280 = load i64*, i64** %279, align 8
  store i64 %277, i64* %280, align 8
  %281 = bitcast %struct.SkEdge** %278 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = load %struct.SkEdge*, %struct.SkEdge** %253, align 8
  %284 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %283, i64 0, i32 1
  %285 = bitcast %struct.SkEdge** %284 to i64*
  store i64 %282, i64* %285, align 8
  br label %323

286:                                              ; preds = %252
  %287 = load i32, i32* %232, align 8
  %288 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %227, i64 0, i32 3
  %289 = load i32, i32* %288, align 4
  %290 = add nsw i32 %289, %287
  store i32 %290, i32* %232, align 8
  br label %291

291:                                              ; preds = %286, %273, %266
  %292 = phi i32 [ %267, %266 ], [ %274, %273 ], [ %290, %286 ]
  %293 = icmp slt i32 %292, %228
  br i1 %293, label %294, label %323

294:                                              ; preds = %291
  %295 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %227, i64 0, i32 1
  %296 = load %struct.SkEdge*, %struct.SkEdge** %295, align 8
  %297 = bitcast %struct.SkEdge* %296 to i64*
  br label %298

298:                                              ; preds = %303, %294
  %299 = phi %struct.SkEdge* [ %296, %294 ], [ %301, %303 ]
  %300 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %299, i64 0, i32 1
  %301 = load %struct.SkEdge*, %struct.SkEdge** %300, align 8
  %302 = icmp eq %struct.SkEdge* %301, null
  br i1 %302, label %307, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %299, i64 0, i32 2
  %305 = load i32, i32* %304, align 8
  %306 = icmp sgt i32 %305, %292
  br i1 %306, label %298, label %307

307:                                              ; preds = %303, %298
  %308 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %299, i64 0, i32 0
  %309 = load %struct.SkEdge*, %struct.SkEdge** %308, align 8
  %310 = icmp eq %struct.SkEdge* %309, %227
  br i1 %310, label %323, label %311

311:                                              ; preds = %307
  %312 = bitcast %struct.SkEdge* %227 to i64*
  %313 = load i64, i64* %312, align 8
  store i64 %313, i64* %297, align 8
  %314 = bitcast %struct.SkEdge** %295 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = load %struct.SkEdge*, %struct.SkEdge** %253, align 8
  %317 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %316, i64 0, i32 1
  %318 = bitcast %struct.SkEdge** %317 to i64*
  store i64 %315, i64* %318, align 8
  store %struct.SkEdge* %299, %struct.SkEdge** %295, align 8
  %319 = bitcast %struct.SkEdge* %299 to i64*
  %320 = load i64, i64* %319, align 8
  store i64 %320, i64* %312, align 8
  %321 = load %struct.SkEdge*, %struct.SkEdge** %308, align 8
  %322 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %321, i64 0, i32 1
  store %struct.SkEdge* %227, %struct.SkEdge** %322, align 8
  store %struct.SkEdge* %227, %struct.SkEdge** %308, align 8
  br label %323

323:                                              ; preds = %311, %307, %291, %275
  %324 = phi i32 [ %228, %275 ], [ %292, %291 ], [ %228, %307 ], [ %228, %311 ]
  %325 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %254, i64 0, i32 4
  %326 = load i32, i32* %325, align 8
  %327 = icmp sgt i32 %326, %218
  br i1 %327, label %328, label %226

328:                                              ; preds = %323
  %329 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %254, i64 0, i32 4
  br label %330

330:                                              ; preds = %328, %222
  %331 = phi i32 [ 0, %222 ], [ %242, %328 ]
  %332 = phi i32 [ 0, %222 ], [ %238, %328 ]
  %333 = phi %struct.SkEdge* [ %219, %222 ], [ %254, %328 ]
  %334 = phi i32* [ %223, %222 ], [ %329, %328 ]
  %335 = and i32 %331, %214
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %344, label %337

337:                                              ; preds = %330
  %338 = sub nsw i32 %211, %332
  %339 = icmp sgt i32 %338, 0
  br i1 %339, label %340, label %344

340:                                              ; preds = %337
  %341 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %216, align 8
  %342 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %341, i64 2
  %343 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %342, align 8
  call void %343(%class.SkBlitter* %200, i32 %332, i32 %218, i32 %338) #8
  br label %344

344:                                              ; preds = %340, %337, %330
  br i1 %215, label %345, label %346

345:                                              ; preds = %344
  call void %201(%class.SkBlitter* %200, i32 %218, i1 zeroext false) #8, !callees !3
  br label %346

346:                                              ; preds = %345, %344
  %347 = add nsw i32 %218, 1
  %348 = icmp slt i32 %347, %177
  br i1 %348, label %349, label %407

349:                                              ; preds = %346
  %350 = load i32, i32* %334, align 8
  %351 = icmp eq i32 %350, %347
  br i1 %351, label %352, label %360

352:                                              ; preds = %349
  %353 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %333, i64 0, i32 1
  %354 = load %struct.SkEdge*, %struct.SkEdge** %353, align 8
  %355 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %354, i64 0, i32 2
  %356 = load i32, i32* %355, align 8
  %357 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %333, i64 0, i32 2
  %358 = load i32, i32* %357, align 8
  %359 = icmp sgt i32 %356, %358
  br i1 %359, label %361, label %360

360:                                              ; preds = %403, %352, %349
  br label %217

361:                                              ; preds = %352, %366
  %362 = phi %struct.SkEdge* [ %364, %366 ], [ %354, %352 ]
  %363 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %362, i64 0, i32 1
  %364 = load %struct.SkEdge*, %struct.SkEdge** %363, align 8
  %365 = icmp eq %struct.SkEdge* %364, null
  br i1 %365, label %370, label %366

366:                                              ; preds = %361
  %367 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %362, i64 0, i32 2
  %368 = load i32, i32* %367, align 8
  %369 = icmp sgt i32 %368, %358
  br i1 %369, label %361, label %370

370:                                              ; preds = %366, %361
  br label %371

371:                                              ; preds = %370, %403
  %372 = phi %struct.SkEdge* [ %375, %403 ], [ %333, %370 ]
  %373 = phi %struct.SkEdge* [ %372, %403 ], [ %362, %370 ]
  %374 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %372, i64 0, i32 0
  %375 = load %struct.SkEdge*, %struct.SkEdge** %374, align 8
  %376 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %372, i64 0, i32 2
  %377 = ptrtoint %struct.SkEdge* %375 to i64
  br label %378

378:                                              ; preds = %383, %371
  %379 = phi %struct.SkEdge* [ %373, %371 ], [ %381, %383 ]
  %380 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %379, i64 0, i32 0
  %381 = load %struct.SkEdge*, %struct.SkEdge** %380, align 8
  %382 = icmp eq %struct.SkEdge* %381, %372
  br i1 %382, label %403, label %383

383:                                              ; preds = %378
  %384 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %381, i64 0, i32 2
  %385 = load i32, i32* %384, align 8
  %386 = load i32, i32* %376, align 8
  %387 = icmp slt i32 %385, %386
  br i1 %387, label %378, label %388

388:                                              ; preds = %383
  %389 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %379, i64 0, i32 0
  %390 = bitcast %struct.SkEdge* %372 to i64*
  %391 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %372, i64 0, i32 1
  %392 = bitcast %struct.SkEdge** %391 to i64**
  %393 = load i64*, i64** %392, align 8
  store i64 %377, i64* %393, align 8
  %394 = bitcast %struct.SkEdge** %391 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = load %struct.SkEdge*, %struct.SkEdge** %374, align 8
  %397 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %396, i64 0, i32 1
  %398 = bitcast %struct.SkEdge** %397 to i64*
  store i64 %395, i64* %398, align 8
  store %struct.SkEdge* %379, %struct.SkEdge** %391, align 8
  %399 = bitcast %struct.SkEdge* %379 to i64*
  %400 = load i64, i64* %399, align 8
  store i64 %400, i64* %390, align 8
  %401 = load %struct.SkEdge*, %struct.SkEdge** %389, align 8
  %402 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %401, i64 0, i32 1
  store %struct.SkEdge* %372, %struct.SkEdge** %402, align 8
  store %struct.SkEdge* %372, %struct.SkEdge** %389, align 8
  br label %403

403:                                              ; preds = %378, %388
  %404 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %375, i64 0, i32 4
  %405 = load i32, i32* %404, align 8
  %406 = icmp eq i32 %405, %347
  br i1 %406, label %371, label %360

407:                                              ; preds = %346, %208
  %408 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %13, i64 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %408) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %178) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %87) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %86) #8
  br label %409

409:                                              ; preds = %43, %48, %70, %74, %407
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %33) #8
  %410 = getelementptr inbounds %class.SkBasicEdgeBuilder, %class.SkBasicEdgeBuilder* %10, i64 0, i32 0, i32 2
  %411 = bitcast %class.SkTDArray.14* %410 to i8**
  %412 = load i8*, i8** %411, align 8
  call void @_Z7sk_freePv(i8* %412) #8
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder*, %class.SkPath* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL25PrePostInverseBlitterProcP9SkBlitterib(%class.SkBlitter* nocapture, i32, i1 zeroext) #0 {
  br i1 %2, label %4, label %10

4:                                                ; preds = %3
  %5 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 1, i32 1
  %6 = bitcast %class.SkAutoMalloc* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 1, i32 1, i32 1
  %9 = bitcast i64* %8 to i32*
  store i32 %7, i32* %9, align 8
  br label %27

10:                                               ; preds = %3
  %11 = bitcast %class.SkBlitter* %0 to %class.InverseBlitter*
  %12 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 1, i32 1, i32 1
  %15 = bitcast i64* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = sub nsw i32 %13, %16
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %10
  %20 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 1
  %21 = bitcast %class.SkBlitter* %20 to %class.SkBlitter**
  %22 = load %class.SkBlitter*, %class.SkBlitter** %21, align 8
  %23 = bitcast %class.SkBlitter* %22 to void (%class.SkBlitter*, i32, i32, i32)***
  %24 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %24, i64 2
  %26 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %25, align 8
  tail call void %26(%class.SkBlitter* %22, i32 %16, i32 %1, i32 %17) #8
  br label %27

27:                                               ; preds = %4, %10, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL17walk_simple_edgesP6SkEdgeP9SkBlitterii(%struct.SkEdge* nocapture readonly, %class.SkBlitter*, i32, i32) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %0, i64 0, i32 0
  %6 = load %struct.SkEdge*, %struct.SkEdge** %5, align 8
  %7 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %6, i64 0, i32 0
  %8 = load %struct.SkEdge*, %struct.SkEdge** %7, align 8
  %9 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %6, i64 0, i32 4
  %10 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp slt i32 %11, %12
  %14 = select i1 %13, i32 %12, i32 %11
  %15 = icmp sge i32 %14, %2
  %16 = icmp slt i32 %14, %3
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %152

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 0
  %20 = load %struct.SkEdge*, %struct.SkEdge** %19, align 8
  %21 = add nsw i32 %3, -1
  %22 = bitcast %class.SkBlitter* %1 to void (%class.SkBlitter*, i32, i32, i32)***
  %23 = bitcast %class.SkBlitter* %1 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  br label %24

24:                                               ; preds = %18, %148
  %25 = phi i32 [ %14, %18 ], [ %94, %148 ]
  %26 = phi %struct.SkEdge* [ %20, %18 ], [ %150, %148 ]
  %27 = phi %struct.SkEdge* [ %8, %18 ], [ %149, %148 ]
  %28 = phi %struct.SkEdge* [ %6, %18 ], [ %122, %148 ]
  %29 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %28, i64 0, i32 5
  %30 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %27, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %29, align 4
  %33 = icmp slt i32 %31, %32
  %34 = select i1 %33, i32 %31, i32 %32
  %35 = icmp slt i32 %21, %34
  %36 = select i1 %35, i32 %21, i32 %34
  %37 = icmp slt i32 %36, %25
  br i1 %37, label %152, label %38

38:                                               ; preds = %24
  %39 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %28, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %28, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %27, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %27, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 %36, %25
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %49, label %152

49:                                               ; preds = %38
  %50 = or i32 %46, %42
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %69

52:                                               ; preds = %49
  %53 = add nsw i32 %40, 32768
  %54 = ashr i32 %53, 16
  %55 = add nsw i32 %44, 32768
  %56 = ashr i32 %55, 16
  %57 = icmp sgt i32 %54, %56
  %58 = select i1 %57, i32 %56, i32 %54
  %59 = select i1 %57, i32 %54, i32 %56
  %60 = icmp sgt i32 %59, %58
  br i1 %60, label %61, label %67

61:                                               ; preds = %52
  %62 = add nuw nsw i32 %47, 1
  %63 = sub nsw i32 %59, %58
  %64 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %23, align 8
  %65 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %64, i64 5
  %66 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %65, align 8
  tail call void %66(%class.SkBlitter* %1, i32 %58, i32 %25, i32 %63, i32 %62) #8
  br label %67

67:                                               ; preds = %61, %52
  %68 = add nsw i32 %36, 1
  br label %93

69:                                               ; preds = %49, %87
  %70 = phi i32 [ %90, %87 ], [ %25, %49 ]
  %71 = phi i32 [ %88, %87 ], [ %40, %49 ]
  %72 = phi i32 [ %89, %87 ], [ %44, %49 ]
  %73 = phi i32 [ %91, %87 ], [ %47, %49 ]
  %74 = add nsw i32 %71, 32768
  %75 = ashr i32 %74, 16
  %76 = add nsw i32 %72, 32768
  %77 = ashr i32 %76, 16
  %78 = icmp sgt i32 %75, %77
  %79 = select i1 %78, i32 %77, i32 %75
  %80 = select i1 %78, i32 %75, i32 %77
  %81 = icmp sgt i32 %80, %79
  br i1 %81, label %82, label %87

82:                                               ; preds = %69
  %83 = sub nsw i32 %80, %79
  %84 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %22, align 8
  %85 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %84, i64 2
  %86 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %85, align 8
  tail call void %86(%class.SkBlitter* %1, i32 %79, i32 %70, i32 %83) #8
  br label %87

87:                                               ; preds = %82, %69
  %88 = add i32 %71, %42
  %89 = add i32 %72, %46
  %90 = add nsw i32 %70, 1
  %91 = add nsw i32 %73, -1
  %92 = icmp sgt i32 %73, 0
  br i1 %92, label %69, label %93

93:                                               ; preds = %87, %67
  %94 = phi i32 [ %68, %67 ], [ %90, %87 ]
  %95 = phi i32 [ %40, %67 ], [ %88, %87 ]
  %96 = phi i32 [ %44, %67 ], [ %89, %87 ]
  store i32 %95, i32* %39, align 8
  store i32 %96, i32* %43, align 8
  %97 = load i32, i32* %29, align 4
  %98 = icmp eq i32 %97, %36
  br i1 %98, label %99, label %121

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %28, i64 0, i32 6
  %101 = load i8, i8* %100, align 8
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = bitcast %struct.SkEdge* %28 to %struct.SkCubicEdge*
  %105 = tail call i32 @_ZN11SkCubicEdge11updateCubicEv(%struct.SkCubicEdge* %104) #8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %113, label %121

107:                                              ; preds = %99
  %108 = icmp eq i8 %101, 0
  br i1 %108, label %113, label %109

109:                                              ; preds = %107
  %110 = bitcast %struct.SkEdge* %28 to %struct.SkQuadraticEdge*
  %111 = tail call i32 @_ZN15SkQuadraticEdge15updateQuadraticEv(%struct.SkQuadraticEdge* %110) #8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %121

113:                                              ; preds = %109, %107, %103
  %114 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %26, i64 0, i32 4
  %115 = load i32, i32* %114, align 8
  %116 = icmp slt i32 %115, %3
  br i1 %116, label %117, label %152

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %26, i64 0, i32 0
  %119 = load %struct.SkEdge*, %struct.SkEdge** %118, align 8
  %120 = icmp eq i32 %115, %94
  br i1 %120, label %121, label %152

121:                                              ; preds = %93, %109, %103, %117
  %122 = phi %struct.SkEdge* [ %26, %117 ], [ %28, %103 ], [ %28, %109 ], [ %28, %93 ]
  %123 = phi %struct.SkEdge* [ %119, %117 ], [ %26, %103 ], [ %26, %109 ], [ %26, %93 ]
  %124 = load i32, i32* %30, align 4
  %125 = icmp eq i32 %124, %36
  br i1 %125, label %126, label %148

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %27, i64 0, i32 6
  %128 = load i8, i8* %127, align 8
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %126
  %131 = bitcast %struct.SkEdge* %27 to %struct.SkCubicEdge*
  %132 = tail call i32 @_ZN11SkCubicEdge11updateCubicEv(%struct.SkCubicEdge* %131) #8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %140, label %148

134:                                              ; preds = %126
  %135 = icmp eq i8 %128, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %134
  %137 = bitcast %struct.SkEdge* %27 to %struct.SkQuadraticEdge*
  %138 = tail call i32 @_ZN15SkQuadraticEdge15updateQuadraticEv(%struct.SkQuadraticEdge* %137) #8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %148

140:                                              ; preds = %136, %134, %130
  %141 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %123, i64 0, i32 4
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %142, %3
  br i1 %143, label %144, label %152

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %123, i64 0, i32 0
  %146 = load %struct.SkEdge*, %struct.SkEdge** %145, align 8
  %147 = icmp eq i32 %142, %94
  br i1 %147, label %148, label %152

148:                                              ; preds = %121, %136, %130, %144
  %149 = phi %struct.SkEdge* [ %123, %144 ], [ %27, %130 ], [ %27, %136 ], [ %27, %121 ]
  %150 = phi %struct.SkEdge* [ %146, %144 ], [ %123, %130 ], [ %123, %136 ], [ %123, %121 ]
  %151 = icmp slt i32 %94, %3
  br i1 %151, label %24, label %152

152:                                              ; preds = %148, %24, %38, %113, %117, %140, %144, %4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEdgeBuilderD2Ev(%class.SkEdgeBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 512
  %4 = bitcast i8* %3 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %4) #8
  %5 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 2
  %6 = bitcast %class.SkTDArray.14* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_Z7sk_freePv(i8* %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z13sk_blit_aboveP9SkBlitterRK7SkIRectRK8SkRegion(%class.SkBlitter*, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %10 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %6, align 4
  %12 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %8, align 4
  %14 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %7, align 4
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  %18 = sext i32 %13 to i64
  %19 = sext i32 %11 to i64
  %20 = sub nsw i64 %18, %19
  %21 = sext i32 %17 to i64
  %22 = sext i32 %15 to i64
  %23 = sub nsw i64 %21, %22
  %24 = icmp slt i64 %20, 1
  %25 = icmp slt i64 %23, 1
  %26 = or i1 %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %3
  %28 = or i64 %23, %20
  %29 = add nsw i64 %28, 2147483648
  %30 = icmp ugt i64 %29, 4294967295
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  call void @_ZN9SkBlitter14blitRectRegionERK7SkIRectRK8SkRegion(%class.SkBlitter* %0, %struct.SkIRect* nonnull dereferenceable(16) %4, %class.SkRegion* dereferenceable(24) %2) #8
  br label %32

32:                                               ; preds = %3, %31, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void
}

declare void @_ZN9SkBlitter14blitRectRegionERK7SkIRectRK8SkRegion(%class.SkBlitter*, %struct.SkIRect* dereferenceable(16), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z13sk_blit_belowP9SkBlitterRK7SkIRectRK8SkRegion(%class.SkBlitter*, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %10 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %6, align 4
  %12 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %8, align 4
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %7, align 4
  %16 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  %18 = sext i32 %13 to i64
  %19 = sext i32 %11 to i64
  %20 = sub nsw i64 %18, %19
  %21 = sext i32 %17 to i64
  %22 = sext i32 %15 to i64
  %23 = sub nsw i64 %21, %22
  %24 = icmp slt i64 %20, 1
  %25 = icmp slt i64 %23, 1
  %26 = or i1 %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %3
  %28 = or i64 %23, %20
  %29 = add nsw i64 %28, 2147483648
  %30 = icmp ugt i64 %29, 4294967295
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  call void @_ZN9SkBlitter14blitRectRegionERK7SkIRectRK8SkRegion(%class.SkBlitter* %0, %struct.SkIRect* nonnull dereferenceable(16) %4, %class.SkRegion* dereferenceable(24) %2) #8
  br label %32

32:                                               ; preds = %3, %31, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkScanClipperC2EP9SkBlitterPK8SkRegionRK7SkIRectbb(%class.SkScanClipper*, %class.SkBlitter*, %class.SkRegion*, %struct.SkIRect* dereferenceable(16), i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkIRect, align 4
  %8 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %class.SkAutoMalloc* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17SkRectClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 1
  %12 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %11, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %class.SkAutoMalloc* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16SkRgnClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %15 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 2
  %16 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 3
  %17 = icmp eq %class.SkRegion* %2, null
  %18 = bitcast %class.SkBlitter** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  br i1 %17, label %106, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0
  store %struct.SkIRect* %20, %struct.SkIRect** %16, align 8
  br i1 %4, label %24, label %21

21:                                               ; preds = %19
  %22 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 16, i1 false) #8
  %23 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %7, %struct.SkIRect* dereferenceable(16) %20, %struct.SkIRect* dereferenceable(16) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8
  br i1 %23, label %24, label %108

24:                                               ; preds = %21, %19
  %25 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 1
  %26 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %25, align 8
  %27 = icmp eq %"struct.SkRegion::RunHead"* %26, null
  br i1 %27, label %28, label %102

28:                                               ; preds = %24
  br i1 %5, label %29, label %32

29:                                               ; preds = %28
  %30 = bitcast %struct.SkIRect** %16 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %96

32:                                               ; preds = %28
  %33 = load %struct.SkIRect*, %struct.SkIRect** %16, align 8
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = sub nsw i64 %36, %39
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = sub nsw i64 %43, %46
  %48 = icmp slt i64 %40, 1
  %49 = icmp slt i64 %47, 1
  %50 = or i1 %48, %49
  %51 = bitcast %struct.SkIRect* %33 to i8*
  br i1 %50, label %88, label %52

52:                                               ; preds = %32
  %53 = or i64 %47, %40
  %54 = add nsw i64 %53, 2147483648
  %55 = icmp ugt i64 %54, 4294967295
  br i1 %55, label %88, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = sub nsw i64 %59, %62
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = sub nsw i64 %66, %69
  %71 = icmp slt i64 %63, 1
  %72 = icmp slt i64 %70, 1
  %73 = or i1 %71, %72
  br i1 %73, label %88, label %74

74:                                               ; preds = %56
  %75 = or i64 %70, %63
  %76 = add nsw i64 %75, 2147483648
  %77 = icmp ugt i64 %76, 4294967295
  %78 = icmp sgt i32 %61, %38
  %79 = or i1 %78, %77
  %80 = icmp sgt i32 %68, %45
  %81 = or i1 %80, %79
  %82 = icmp slt i32 %58, %35
  %83 = or i1 %82, %81
  %84 = icmp sge i32 %65, %42
  %85 = xor i1 %83, true
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %74
  store %struct.SkIRect* null, %struct.SkIRect** %16, align 8
  br label %106

88:                                               ; preds = %32, %52, %56, %74
  %89 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, %38
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %33, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, %35
  br i1 %95, label %96, label %106

96:                                               ; preds = %29, %92, %88
  %97 = phi i8* [ %31, %29 ], [ %51, %92 ], [ %51, %88 ]
  %98 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 0, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %98, align 8
  %99 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 0, i32 2
  %100 = bitcast %struct.SkIRect* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 4 %97, i64 16, i1 false) #8
  %101 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 0, i32 0
  br label %106

102:                                              ; preds = %24
  %103 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 1, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %103, align 8
  %104 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %0, i64 0, i32 1, i32 2
  store %class.SkRegion* %2, %class.SkRegion** %104, align 8
  %105 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %11, i64 0, i32 0
  br label %106

106:                                              ; preds = %6, %102, %96, %92, %87
  %107 = phi %class.SkBlitter* [ %101, %96 ], [ %1, %92 ], [ %1, %87 ], [ %105, %102 ], [ %1, %6 ]
  store %class.SkBlitter* %107, %class.SkBlitter** %15, align 8
  br label %108

108:                                              ; preds = %21, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan8FillPathERK6SkPathRK8SkRegionP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRegion* dereferenceable(24), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca <4 x i32>, align 16
  %7 = bitcast <4 x i32>* %6 to %struct.SkIRect*
  %8 = alloca %class.SkRegion, align 8
  %9 = alloca %struct.SkRect, align 4
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %14 = alloca %class.SkScanClipper, align 8
  %15 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %16 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %15, align 8
  %17 = icmp eq %"struct.SkRegion::RunHead"* %16, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %17, label %263, label %18

18:                                               ; preds = %3
  %19 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %8, i64 0, i32 1
  %21 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %8) #8
  %22 = bitcast <4 x i32>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #8
  store <4 x i32> <i32 -16383, i32 -16383, i32 16383, i32 16383>, <4 x i32>* %6, align 16
  %23 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = sub nsw i64 %25, %28
  %30 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = sub nsw i64 %32, %35
  %37 = icmp slt i64 %29, 1
  %38 = icmp slt i64 %36, 1
  %39 = or i1 %37, %38
  br i1 %39, label %54, label %40

40:                                               ; preds = %18
  %41 = or i64 %36, %29
  %42 = add nsw i64 %41, 2147483648
  %43 = icmp ugt i64 %42, 4294967295
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = icmp slt i32 %27, -16383
  %46 = icmp slt i32 %34, -16383
  %47 = or i1 %45, %46
  %48 = icmp sgt i32 %24, 16383
  %49 = or i1 %48, %47
  %50 = icmp slt i32 %31, 16384
  %51 = xor i1 %49, true
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8
  br label %58

54:                                               ; preds = %18, %40, %44
  %55 = call zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion* nonnull %8, %class.SkRegion* dereferenceable(24) %1, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8
  %56 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %20, align 8
  %57 = icmp eq %"struct.SkRegion::RunHead"* %56, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %57, label %262, label %58

58:                                               ; preds = %53, %54
  %59 = phi %class.SkRegion* [ %1, %53 ], [ %8, %54 ]
  %60 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8
  %61 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 0
  %62 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 1
  %63 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 2
  %64 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 3
  %65 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %66 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %66, i8 -1, i64 16, i1 false)
  %67 = load %class.SkPathRef*, %class.SkPathRef** %65, align 8
  %68 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 9
  %69 = load i8, i8* %68, align 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %80, label %71

71:                                               ; preds = %58
  %72 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 1
  %73 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 3, i32 0
  %74 = load %struct.SkPoint*, %struct.SkPoint** %73, align 8
  %75 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 3, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %72, %struct.SkPoint* %74, i32 %76) #8
  %78 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 10
  %79 = zext i1 %77 to i8
  store i8 %79, i8* %78, align 1
  store i8 0, i8* %68, align 8
  br label %80

80:                                               ; preds = %58, %71
  %81 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 1
  %82 = bitcast %struct.SkRect* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 %82, i64 16, i1 false)
  %83 = load float, float* %61, align 4
  %84 = load float, float* %63, align 4
  %85 = fcmp olt float %83, %84
  br i1 %85, label %86, label %98

86:                                               ; preds = %80
  %87 = load float, float* %62, align 4
  %88 = load float, float* %64, align 4
  %89 = fcmp uge float %87, %88
  %90 = fcmp ult float %83, 0xC1C0000000000000
  %91 = or i1 %90, %89
  br i1 %91, label %98, label %92

92:                                               ; preds = %86
  %93 = fcmp oge float %87, 0xC1C0000000000000
  %94 = fcmp ole float %84, 0x41C0000000000000
  %95 = fcmp ole float %88, 0x41C0000000000000
  %96 = and i1 %94, %93
  %97 = and i1 %95, %96
  br i1 %97, label %109, label %98

98:                                               ; preds = %80, %86, %92
  %99 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #8
  %100 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  store <2 x float> <float 0xC1C0000000000000, float 0xC1C0000000000000>, <2 x float>* %100, align 8
  %101 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  store <2 x float> <float 0x41C0000000000000, float 0x41C0000000000000>, <2 x float>* %101, align 8
  %102 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #8
  br i1 %102, label %103, label %108

103:                                              ; preds = %98
  %104 = load float, float* %61, align 4
  %105 = load float, float* %62, align 4
  %106 = load float, float* %63, align 4
  %107 = load float, float* %64, align 4
  br label %109

108:                                              ; preds = %98
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %60, i8 0, i64 16, i1 false) #8
  br label %109

109:                                              ; preds = %103, %108, %92
  %110 = phi float [ %88, %92 ], [ %107, %103 ], [ 0.000000e+00, %108 ]
  %111 = phi float [ %84, %92 ], [ %106, %103 ], [ 0.000000e+00, %108 ]
  %112 = phi float [ %87, %92 ], [ %105, %103 ], [ 0.000000e+00, %108 ]
  %113 = phi float [ %83, %92 ], [ %104, %103 ], [ 0.000000e+00, %108 ]
  %114 = phi i1 [ false, %92 ], [ true, %103 ], [ true, %108 ]
  %115 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #8
  %116 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 1
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %118 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 3
  %119 = fpext float %113 to double
  %120 = fadd double %119, 0xBFE0C00000000000
  %121 = call double @llvm.ceil.f64(double %120) #8
  %122 = fcmp olt double %121, 0x41DFFFFFFFC00000
  %123 = select i1 %122, double %121, double 0x41DFFFFFFFC00000
  %124 = fcmp ogt double %123, 0xC1DFFFFFFFC00000
  %125 = select i1 %124, double %123, double 0xC1DFFFFFFFC00000
  %126 = fptosi double %125 to i32
  %127 = fpext float %112 to double
  %128 = fadd double %127, 0xBFE0C00000000000
  %129 = call double @llvm.ceil.f64(double %128) #8
  %130 = fcmp olt double %129, 0x41DFFFFFFFC00000
  %131 = select i1 %130, double %129, double 0x41DFFFFFFFC00000
  %132 = fcmp ogt double %131, 0xC1DFFFFFFFC00000
  %133 = select i1 %132, double %131, double 0xC1DFFFFFFFC00000
  %134 = fptosi double %133 to i32
  %135 = fpext float %111 to double
  %136 = fadd double %135, 0x3FE0C00000000000
  %137 = call double @llvm.floor.f64(double %136) #8
  %138 = fcmp olt double %137, 0x41DFFFFFFFC00000
  %139 = select i1 %138, double %137, double 0x41DFFFFFFFC00000
  %140 = fcmp ogt double %139, 0xC1DFFFFFFFC00000
  %141 = select i1 %140, double %139, double 0xC1DFFFFFFFC00000
  %142 = fptosi double %141 to i32
  %143 = fpext float %110 to double
  %144 = fadd double %143, 0x3FE0C00000000000
  %145 = call double @llvm.floor.f64(double %144) #8
  %146 = fcmp olt double %145, 0x41DFFFFFFFC00000
  %147 = select i1 %146, double %145, double 0x41DFFFFFFFC00000
  %148 = fcmp ogt double %147, 0xC1DFFFFFFFC00000
  %149 = select i1 %148, double %147, double 0xC1DFFFFFFFC00000
  %150 = fptosi double %149 to i32
  %151 = zext i32 %134 to i64
  %152 = shl nuw i64 %151, 32
  %153 = zext i32 %126 to i64
  %154 = or i64 %152, %153
  %155 = zext i32 %150 to i64
  %156 = shl nuw i64 %155, 32
  %157 = zext i32 %142 to i64
  %158 = or i64 %156, %157
  %159 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %154, i64* %159, align 8
  store i64 %158, i64* %117, align 8
  %160 = sext i32 %142 to i64
  %161 = sext i32 %126 to i64
  %162 = sub nsw i64 %160, %161
  %163 = sext i32 %150 to i64
  %164 = sext i32 %134 to i64
  %165 = sub nsw i64 %163, %164
  %166 = icmp slt i64 %162, 1
  %167 = icmp slt i64 %165, 1
  %168 = or i1 %166, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %109
  %170 = or i64 %165, %162
  %171 = add nsw i64 %170, 2147483648
  %172 = icmp ugt i64 %171, 4294967295
  br i1 %172, label %173, label %179

173:                                              ; preds = %109, %169
  %174 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %175 = load i8, i8* %174, align 2
  %176 = and i8 %175, 2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %261, label %178

178:                                              ; preds = %173
  call void @_ZN9SkBlitter10blitRegionERK8SkRegion(%class.SkBlitter* %2, %class.SkRegion* dereferenceable(24) %59) #8
  br label %261

179:                                              ; preds = %169
  %180 = bitcast %class.SkScanClipper* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %180) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 -86, i64 104, i1 false)
  %181 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %182 = load i8, i8* %181, align 2
  %183 = and i8 %182, 2
  %184 = icmp ne i8 %183, 0
  call void @_ZN13SkScanClipperC2EP9SkBlitterPK8SkRegionRK7SkIRectbb(%class.SkScanClipper* nonnull %14, %class.SkBlitter* %2, %class.SkRegion* %59, %struct.SkIRect* nonnull dereferenceable(16) %13, i1 zeroext %184, i1 zeroext %114)
  %185 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %14, i64 0, i32 2
  %186 = load %class.SkBlitter*, %class.SkBlitter** %185, align 8
  %187 = icmp eq %class.SkBlitter* %186, null
  br i1 %187, label %258, label %188

188:                                              ; preds = %179
  %189 = load i8, i8* %181, align 2
  %190 = and i8 %189, 2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %220, label %192

192:                                              ; preds = %188
  %193 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #8
  %194 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %195 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %196 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %197 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %198 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %59, i64 0, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  store i32 %199, i32* %194, align 4
  %200 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %59, i64 0, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  store i32 %201, i32* %196, align 4
  %202 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %59, i64 0, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %195, align 4
  %204 = load i32, i32* %116, align 4
  store i32 %204, i32* %197, align 4
  %205 = sext i32 %201 to i64
  %206 = sext i32 %199 to i64
  %207 = sub nsw i64 %205, %206
  %208 = sext i32 %204 to i64
  %209 = sext i32 %203 to i64
  %210 = sub nsw i64 %208, %209
  %211 = icmp slt i64 %207, 1
  %212 = icmp slt i64 %210, 1
  %213 = or i1 %211, %212
  br i1 %213, label %219, label %214

214:                                              ; preds = %192
  %215 = or i64 %210, %207
  %216 = add nsw i64 %215, 2147483648
  %217 = icmp ugt i64 %216, 4294967295
  br i1 %217, label %219, label %218

218:                                              ; preds = %214
  call void @_ZN9SkBlitter14blitRectRegionERK7SkIRectRK8SkRegion(%class.SkBlitter* nonnull %186, %struct.SkIRect* nonnull dereferenceable(16) %4, %class.SkRegion* dereferenceable(24) %59) #8
  br label %219

219:                                              ; preds = %192, %214, %218
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #8
  br label %220

220:                                              ; preds = %188, %219
  %221 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %59, i64 0, i32 0
  %222 = load i32, i32* %116, align 4
  %223 = load i32, i32* %118, align 4
  %224 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %14, i64 0, i32 3
  %225 = load %struct.SkIRect*, %struct.SkIRect** %224, align 8
  %226 = icmp eq %struct.SkIRect* %225, null
  call void @_Z12sk_fill_pathRK6SkPathRK7SkIRectP9SkBlitteriiib(%class.SkPath* dereferenceable(16) %0, %struct.SkIRect* dereferenceable(16) %221, %class.SkBlitter* nonnull %186, i32 %222, i32 %223, i32 0, i1 zeroext %226)
  %227 = load i8, i8* %181, align 2
  %228 = and i8 %227, 2
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %258, label %230

230:                                              ; preds = %220
  %231 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #8
  %232 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %233 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %234 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %235 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %236 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %59, i64 0, i32 0, i32 0
  %237 = load i32, i32* %236, align 4
  store i32 %237, i32* %232, align 4
  %238 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %59, i64 0, i32 0, i32 2
  %239 = load i32, i32* %238, align 4
  store i32 %239, i32* %234, align 4
  %240 = load i32, i32* %118, align 4
  store i32 %240, i32* %233, align 4
  %241 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %59, i64 0, i32 0, i32 3
  %242 = load i32, i32* %241, align 4
  store i32 %242, i32* %235, align 4
  %243 = sext i32 %239 to i64
  %244 = sext i32 %237 to i64
  %245 = sub nsw i64 %243, %244
  %246 = sext i32 %242 to i64
  %247 = sext i32 %240 to i64
  %248 = sub nsw i64 %246, %247
  %249 = icmp slt i64 %245, 1
  %250 = icmp slt i64 %248, 1
  %251 = or i1 %249, %250
  br i1 %251, label %257, label %252

252:                                              ; preds = %230
  %253 = or i64 %248, %245
  %254 = add nsw i64 %253, 2147483648
  %255 = icmp ugt i64 %254, 4294967295
  br i1 %255, label %257, label %256

256:                                              ; preds = %252
  call void @_ZN9SkBlitter14blitRectRegionERK7SkIRectRK8SkRegion(%class.SkBlitter* nonnull %186, %struct.SkIRect* nonnull dereferenceable(16) %5, %class.SkRegion* dereferenceable(24) %59) #8
  br label %257

257:                                              ; preds = %230, %252, %256
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231) #8
  br label %258

258:                                              ; preds = %220, %179, %257
  %259 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %14, i64 0, i32 1, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %259) #8
  %260 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %14, i64 0, i32 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %260) #8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %180) #8
  br label %261

261:                                              ; preds = %173, %178, %258
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8
  br label %262

262:                                              ; preds = %54, %261
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  br label %263

263:                                              ; preds = %3, %262
  ret void
}

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN9SkBlitter10blitRegionERK8SkRegion(%class.SkBlitter*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan8FillPathERK6SkPathRK7SkIRectP9SkBlitter(%class.SkPath* dereferenceable(16), %struct.SkIRect* dereferenceable(16), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkRegion, align 8
  %5 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion* nonnull %4, %struct.SkIRect* dereferenceable(16) %1) #8
  call void @_ZN6SkScan8FillPathERK6SkPathRK8SkRegionP9SkBlitter(%class.SkPath* dereferenceable(16) %0, %class.SkRegion* nonnull dereferenceable(24) %4, %class.SkBlitter* %2)
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret void
}

declare void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan12FillTriangleEPK7SkPointRK12SkRasterClipP9SkBlitter(%struct.SkPoint*, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = alloca %class.anon, align 1
  %6 = alloca [3 x %struct.SkEdge], align 16
  %7 = alloca [3 x %struct.SkEdge*], align 16
  %8 = alloca %struct.SkEdge, align 8
  %9 = alloca %struct.SkEdge, align 8
  %10 = alloca %struct.SkRect, align 4
  %11 = alloca %class.SkPath, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %14 = alloca %class.SkAAClipBlitterWrapper, align 8
  %15 = alloca %class.SkScanClipper, align 8
  %16 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 3
  %17 = load i8, i8* %16, align 1, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %269

19:                                               ; preds = %3
  %20 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 0
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %23 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -1, i64 16, i1 false)
  %24 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %10, %struct.SkPoint* %0, i32 3) #8
  %25 = load float, float* %21, align 4
  %26 = load float, float* %22, align 4
  %27 = fcmp olt float %25, %26
  br i1 %27, label %28, label %42

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 3
  %30 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = load float, float* %29, align 4
  %33 = fcmp uge float %31, %32
  %34 = fcmp ult float %25, -1.638300e+04
  %35 = or i1 %34, %33
  br i1 %35, label %42, label %36

36:                                               ; preds = %28
  %37 = fcmp oge float %31, -1.638300e+04
  %38 = fcmp ole float %26, 1.638300e+04
  %39 = fcmp ole float %32, 1.638300e+04
  %40 = and i1 %38, %37
  %41 = and i1 %39, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %19, %28, %36
  %43 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #8
  %44 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %11) #8
  %45 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath* nonnull %11, %struct.SkPoint* %0, i32 3, i1 zeroext false) #8
  call void @_ZN6SkScan8FillPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* nonnull dereferenceable(16) %11, %class.SkRasterClip* dereferenceable(72) %1, %class.SkBlitter* %2) #8
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %11) #8
  br label %267

46:                                               ; preds = %36
  %47 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #8
  %48 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 1
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %50 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 3
  %51 = fpext float %25 to double
  %52 = fadd double %51, 0xBFE0C00000000000
  %53 = call double @llvm.ceil.f64(double %52) #8
  %54 = fcmp olt double %53, 0x41DFFFFFFFC00000
  %55 = select i1 %54, double %53, double 0x41DFFFFFFFC00000
  %56 = fcmp ogt double %55, 0xC1DFFFFFFFC00000
  %57 = select i1 %56, double %55, double 0xC1DFFFFFFFC00000
  %58 = fptosi double %57 to i32
  %59 = fpext float %31 to double
  %60 = fadd double %59, 0xBFE0C00000000000
  %61 = call double @llvm.ceil.f64(double %60) #8
  %62 = fcmp olt double %61, 0x41DFFFFFFFC00000
  %63 = select i1 %62, double %61, double 0x41DFFFFFFFC00000
  %64 = fcmp ogt double %63, 0xC1DFFFFFFFC00000
  %65 = select i1 %64, double %63, double 0xC1DFFFFFFFC00000
  %66 = fptosi double %65 to i32
  %67 = fpext float %26 to double
  %68 = fadd double %67, 0x3FE0C00000000000
  %69 = call double @llvm.floor.f64(double %68) #8
  %70 = fcmp olt double %69, 0x41DFFFFFFFC00000
  %71 = select i1 %70, double %69, double 0x41DFFFFFFFC00000
  %72 = fcmp ogt double %71, 0xC1DFFFFFFFC00000
  %73 = select i1 %72, double %71, double 0xC1DFFFFFFFC00000
  %74 = fptosi double %73 to i32
  %75 = fpext float %32 to double
  %76 = fadd double %75, 0x3FE0C00000000000
  %77 = call double @llvm.floor.f64(double %76) #8
  %78 = fcmp olt double %77, 0x41DFFFFFFFC00000
  %79 = select i1 %78, double %77, double 0x41DFFFFFFFC00000
  %80 = fcmp ogt double %79, 0xC1DFFFFFFFC00000
  %81 = select i1 %80, double %79, double 0xC1DFFFFFFFC00000
  %82 = fptosi double %81 to i32
  %83 = zext i32 %66 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %58 to i64
  %86 = or i64 %84, %85
  %87 = zext i32 %82 to i64
  %88 = shl nuw i64 %87, 32
  %89 = zext i32 %74 to i64
  %90 = or i64 %88, %89
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %86, i64* %91, align 8
  store i64 %90, i64* %49, align 8
  %92 = sext i32 %74 to i64
  %93 = sext i32 %58 to i64
  %94 = sub nsw i64 %92, %93
  %95 = sext i32 %82 to i64
  %96 = sext i32 %66 to i64
  %97 = sub nsw i64 %95, %96
  %98 = icmp slt i64 %94, 1
  %99 = icmp slt i64 %97, 1
  %100 = or i1 %98, %99
  br i1 %100, label %267, label %101

101:                                              ; preds = %46
  %102 = or i64 %97, %94
  %103 = add nsw i64 %102, 2147483648
  %104 = icmp ugt i64 %103, 4294967295
  br i1 %104, label %267, label %105

105:                                              ; preds = %101
  %106 = call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %1) #8
  %107 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %107, i8 -86, i64 16, i1 false) #8
  %108 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %4, %struct.SkIRect* nonnull dereferenceable(16) %13, %struct.SkIRect* dereferenceable(16) %106) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #8
  br i1 %108, label %109, label %267

109:                                              ; preds = %105
  %110 = bitcast %class.SkAAClipBlitterWrapper* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 1160, i1 false)
  call void @_ZN22SkAAClipBlitterWrapperC1Ev(%class.SkAAClipBlitterWrapper* nonnull %14) #8
  %111 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %112 = load i8, i8* %111, align 8, !range !4
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  br label %121

116:                                              ; preds = %109
  call void @_ZN22SkAAClipBlitterWrapper4initERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* nonnull %14, %class.SkRasterClip* dereferenceable(72) %1, %class.SkBlitter* %2) #8
  %117 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %14, i64 0, i32 2
  %118 = load %class.SkRegion*, %class.SkRegion** %117, align 8
  %119 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %14, i64 0, i32 3
  %120 = load %class.SkBlitter*, %class.SkBlitter** %119, align 8
  br label %121

121:                                              ; preds = %116, %114
  %122 = phi %class.SkBlitter* [ %2, %114 ], [ %120, %116 ]
  %123 = phi %class.SkRegion* [ %115, %114 ], [ %118, %116 ]
  %124 = bitcast %class.SkScanClipper* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %124) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 104, i1 false)
  call void @_ZN13SkScanClipperC2EP9SkBlitterPK8SkRegionRK7SkIRectbb(%class.SkScanClipper* nonnull %15, %class.SkBlitter* %122, %class.SkRegion* %123, %struct.SkIRect* nonnull dereferenceable(16) %13, i1 zeroext false, i1 zeroext false)
  %125 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %15, i64 0, i32 2
  %126 = load %class.SkBlitter*, %class.SkBlitter** %125, align 8
  %127 = icmp eq %class.SkBlitter* %126, null
  br i1 %127, label %262, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %15, i64 0, i32 3
  %130 = load %struct.SkIRect*, %struct.SkIRect** %129, align 8
  %131 = bitcast [3 x %struct.SkEdge]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %131) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %131, i8 -86, i64 120, i1 false) #8
  %132 = bitcast [3 x %struct.SkEdge*]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #8
  %133 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 0
  %134 = getelementptr inbounds [3 x %struct.SkEdge], [3 x %struct.SkEdge]* %6, i64 0, i64 0
  %135 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %132, i8 -86, i64 24, i1 false) #8
  %136 = call i32 @_ZN6SkEdge7setLineERK7SkPointS2_PK7SkIRecti(%struct.SkEdge* nonnull %134, %struct.SkPoint* dereferenceable(8) %0, %struct.SkPoint* dereferenceable(8) %135, %struct.SkIRect* %130, i32 0) #8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %128
  %139 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 1
  store %struct.SkEdge* %134, %struct.SkEdge** %133, align 16
  %140 = getelementptr inbounds [3 x %struct.SkEdge], [3 x %struct.SkEdge]* %6, i64 0, i64 1
  br label %141

141:                                              ; preds = %138, %128
  %142 = phi %struct.SkEdge* [ %140, %138 ], [ %134, %128 ]
  %143 = phi %struct.SkEdge** [ %139, %138 ], [ %133, %128 ]
  %144 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2
  %145 = call i32 @_ZN6SkEdge7setLineERK7SkPointS2_PK7SkIRecti(%struct.SkEdge* %142, %struct.SkPoint* dereferenceable(8) %135, %struct.SkPoint* dereferenceable(8) %144, %struct.SkIRect* %130, i32 0) #8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %143, i64 1
  store %struct.SkEdge* %142, %struct.SkEdge** %143, align 8
  %149 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %142, i64 1
  br label %150

150:                                              ; preds = %147, %141
  %151 = phi %struct.SkEdge* [ %149, %147 ], [ %142, %141 ]
  %152 = phi %struct.SkEdge** [ %148, %147 ], [ %143, %141 ]
  %153 = call i32 @_ZN6SkEdge7setLineERK7SkPointS2_PK7SkIRecti(%struct.SkEdge* %151, %struct.SkPoint* dereferenceable(8) %144, %struct.SkPoint* dereferenceable(8) %0, %struct.SkIRect* %130, i32 0) #8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %152, i64 1
  store %struct.SkEdge* %151, %struct.SkEdge** %152, align 8
  br label %157

157:                                              ; preds = %155, %150
  %158 = phi %struct.SkEdge** [ %156, %155 ], [ %152, %150 ]
  %159 = ptrtoint %struct.SkEdge** %158 to i64
  %160 = ptrtoint [3 x %struct.SkEdge*]* %7 to i64
  %161 = sub i64 %159, %160
  %162 = lshr exact i64 %161, 3
  %163 = trunc i64 %162 to i32
  %164 = icmp slt i32 %163, 2
  br i1 %164, label %261, label %165

165:                                              ; preds = %157
  %166 = bitcast %struct.SkEdge* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %166) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 40, i1 false) #8
  %167 = bitcast %struct.SkEdge* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %167) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -86, i64 40, i1 false) #8
  %168 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %168) #8
  %169 = add nsw i32 %163, -2
  %170 = call i32 @llvm.ctlz.i32(i32 %169, i1 false) #8, !range !2
  %171 = shl nuw nsw i32 %170, 1
  %172 = sub nsw i32 64, %171
  call void @_Z12SkTIntroSortIP6SkEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32 %172, %struct.SkEdge** nonnull %133, i32 %163, %class.anon* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %168) #8
  %173 = and i64 %162, 4294967295
  %174 = add nsw i64 %173, -1
  %175 = and i64 %174, 1
  %176 = icmp eq i64 %173, 2
  br i1 %176, label %209, label %177

177:                                              ; preds = %165
  %178 = sub nsw i64 %174, %175
  br label %179

179:                                              ; preds = %179, %177
  %180 = phi i64 [ 1, %177 ], [ %206, %179 ]
  %181 = phi i64 [ %178, %177 ], [ %207, %179 ]
  %182 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 %180
  %183 = bitcast %struct.SkEdge** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = add nsw i64 %180, -1
  %186 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 %185
  %187 = bitcast %struct.SkEdge** %186 to i64**
  %188 = load i64*, i64** %187, align 8
  store i64 %184, i64* %188, align 8
  %189 = bitcast %struct.SkEdge** %186 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = load %struct.SkEdge*, %struct.SkEdge** %182, align 8
  %192 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %191, i64 0, i32 1
  %193 = bitcast %struct.SkEdge** %192 to i64*
  store i64 %190, i64* %193, align 8
  %194 = add nuw nsw i64 %180, 1
  %195 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 %194
  %196 = bitcast %struct.SkEdge** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 %180
  %199 = bitcast %struct.SkEdge** %198 to i64**
  %200 = load i64*, i64** %199, align 8
  store i64 %197, i64* %200, align 8
  %201 = bitcast %struct.SkEdge** %198 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = load %struct.SkEdge*, %struct.SkEdge** %195, align 8
  %204 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %203, i64 0, i32 1
  %205 = bitcast %struct.SkEdge** %204 to i64*
  store i64 %202, i64* %205, align 8
  %206 = add nuw nsw i64 %180, 2
  %207 = add i64 %181, -2
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %179

209:                                              ; preds = %179, %165
  %210 = phi i64 [ 1, %165 ], [ %206, %179 ]
  %211 = icmp eq i64 %175, 0
  br i1 %211, label %225, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 %210
  %214 = bitcast %struct.SkEdge** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = add nsw i64 %210, -1
  %217 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 %216
  %218 = bitcast %struct.SkEdge** %217 to i64**
  %219 = load i64*, i64** %218, align 8
  store i64 %215, i64* %219, align 8
  %220 = bitcast %struct.SkEdge** %217 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = load %struct.SkEdge*, %struct.SkEdge** %213, align 8
  %223 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %222, i64 0, i32 1
  %224 = bitcast %struct.SkEdge** %223 to i64*
  store i64 %221, i64* %224, align 8
  br label %225

225:                                              ; preds = %209, %212
  %226 = shl i64 %161, 29
  %227 = add i64 %226, -4294967296
  %228 = ashr exact i64 %227, 32
  %229 = getelementptr inbounds [3 x %struct.SkEdge*], [3 x %struct.SkEdge*]* %7, i64 0, i64 %228
  %230 = bitcast %struct.SkEdge** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = load %struct.SkEdge*, %struct.SkEdge** %133, align 16
  %233 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 1
  store %struct.SkEdge* null, %struct.SkEdge** %233, align 8
  %234 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 0
  store %struct.SkEdge* %232, %struct.SkEdge** %234, align 8
  %235 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 4
  store i32 -2147483647, i32* %235, align 8
  %236 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 2
  store i32 -2147483647, i32* %236, align 8
  %237 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %232, i64 0, i32 1
  store %struct.SkEdge* %8, %struct.SkEdge** %237, align 8
  %238 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %9, i64 0, i32 1
  %239 = bitcast %struct.SkEdge** %238 to i64*
  store i64 %231, i64* %239, align 8
  %240 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %9, i64 0, i32 0
  store %struct.SkEdge* null, %struct.SkEdge** %240, align 8
  %241 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %9, i64 0, i32 4
  store i32 2147483647, i32* %241, align 8
  %242 = inttoptr i64 %231 to %struct.SkEdge*
  %243 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %242, i64 0, i32 0
  store %struct.SkEdge* %9, %struct.SkEdge** %243, align 8
  %244 = load i32, i32* %50, align 4
  %245 = icmp eq %struct.SkIRect* %130, null
  br i1 %245, label %246, label %248

246:                                              ; preds = %225
  %247 = load i32, i32* %48, align 4
  br label %258

248:                                              ; preds = %225
  %249 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %130, i64 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = icmp sgt i32 %244, %250
  %252 = select i1 %251, i32 %250, i32 %244
  %253 = load i32, i32* %48, align 4
  %254 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %130, i64 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = icmp slt i32 %253, %255
  %257 = select i1 %256, i32 %255, i32 %253
  br label %258

258:                                              ; preds = %248, %246
  %259 = phi i32 [ %244, %246 ], [ %252, %248 ]
  %260 = phi i32 [ %247, %246 ], [ %257, %248 ]
  call fastcc void @_ZL17walk_simple_edgesP6SkEdgeP9SkBlitterii(%struct.SkEdge* nonnull %8, %class.SkBlitter* nonnull %126, i32 %260, i32 %259) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %167) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %166) #8
  br label %261

261:                                              ; preds = %157, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %131) #8
  br label %262

262:                                              ; preds = %121, %261
  %263 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %15, i64 0, i32 1, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %263) #8
  %264 = getelementptr inbounds %class.SkScanClipper, %class.SkScanClipper* %15, i64 0, i32 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %264) #8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %124) #8
  %265 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %14, i64 0, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %265) #8
  %266 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %14, i64 0, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %266) #8
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %110) #8
  br label %267

267:                                              ; preds = %262, %105, %101, %46, %42
  %268 = phi i8* [ %43, %42 ], [ %47, %46 ], [ %47, %101 ], [ %47, %105 ], [ %47, %262 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  br label %269

269:                                              ; preds = %3, %267
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath*, %struct.SkPoint*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN6SkScan8FillPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

declare dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip*) local_unnamed_addr #2

declare void @_ZN22SkAAClipBlitterWrapperC1Ev(%class.SkAAClipBlitterWrapper*) unnamed_addr #2

declare void @_ZN22SkAAClipBlitterWrapper4initERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper*, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEdgeBuilderD0Ev(%class.SkEdgeBuilder*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z12SkTIntroSortIP6SkEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32, %struct.SkEdge**, i32, %class.anon* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp slt i32 %2, 33
  br i1 %5, label %6, label %58

6:                                                ; preds = %260, %4
  %7 = phi i32 [ %2, %4 ], [ %273, %260 ]
  %8 = phi %struct.SkEdge** [ %1, %4 ], [ %272, %260 ]
  %9 = sext i32 %7 to i64
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %8, i64 %10
  %12 = icmp slt i32 %7, 2
  br i1 %12, label %275, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %8, i64 1
  br label %15

15:                                               ; preds = %55, %13
  %16 = phi %struct.SkEdge** [ %56, %55 ], [ %14, %13 ]
  %17 = phi %struct.SkEdge** [ %16, %55 ], [ %8, %13 ]
  %18 = load %struct.SkEdge*, %struct.SkEdge** %16, align 8
  %19 = load %struct.SkEdge*, %struct.SkEdge** %17, align 8
  %20 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %18, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %19, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %21, %23
  %25 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %18, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %19, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = select i1 %24, i32 %26, i32 %21
  %30 = select i1 %24, i32 %28, i32 %23
  %31 = icmp slt i32 %29, %30
  %32 = ptrtoint %struct.SkEdge* %18 to i64
  br i1 %31, label %33, label %55

33:                                               ; preds = %15, %40
  %34 = phi %struct.SkEdge** [ %35, %40 ], [ %16, %15 ]
  %35 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %34, i64 -1
  %36 = bitcast %struct.SkEdge** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %struct.SkEdge** %34 to i64*
  store i64 %37, i64* %38, align 8
  %39 = icmp ugt %struct.SkEdge** %35, %8
  br i1 %39, label %40, label %53

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %34, i64 -2
  %42 = load %struct.SkEdge*, %struct.SkEdge** %41, align 8
  %43 = load i32, i32* %20, align 8
  %44 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %42, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  %47 = load i32, i32* %25, align 8
  %48 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %42, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = select i1 %46, i32 %47, i32 %43
  %51 = select i1 %46, i32 %49, i32 %45
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %33, label %53

53:                                               ; preds = %40, %33
  %54 = bitcast %struct.SkEdge** %35 to i64*
  store i64 %32, i64* %54, align 8
  br label %55

55:                                               ; preds = %53, %15
  %56 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %16, i64 1
  %57 = icmp ugt %struct.SkEdge** %56, %11
  br i1 %57, label %275, label %15

58:                                               ; preds = %4, %260
  %59 = phi i32 [ %217, %260 ], [ %0, %4 ]
  %60 = phi %struct.SkEdge** [ %272, %260 ], [ %1, %4 ]
  %61 = phi i32 [ %273, %260 ], [ %2, %4 ]
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %63, label %216

63:                                               ; preds = %58
  %64 = sext i32 %61 to i64
  %65 = lshr i64 %64, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %75

67:                                               ; preds = %63
  %68 = add nsw i64 %64, -1
  br label %72

69:                                               ; preds = %133
  %70 = add nsw i64 %64, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %275, label %72

72:                                               ; preds = %67, %69
  %73 = phi i64 [ %68, %67 ], [ %70, %69 ]
  %74 = bitcast %struct.SkEdge** %60 to i64*
  br label %137

75:                                               ; preds = %63, %133
  %76 = phi i64 [ %77, %133 ], [ %65, %63 ]
  %77 = add nsw i64 %76, -1
  %78 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %77
  %79 = load %struct.SkEdge*, %struct.SkEdge** %78, align 8
  %80 = shl i64 %76, 1
  %81 = icmp ugt i64 %80, %64
  br i1 %81, label %133, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %79, i64 0, i32 4
  %84 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %79, i64 0, i32 2
  br label %85

85:                                               ; preds = %126, %82
  %86 = phi i64 [ %80, %82 ], [ %131, %126 ]
  %87 = phi i64 [ %76, %82 ], [ %110, %126 ]
  %88 = icmp ult i64 %86, %64
  br i1 %88, label %89, label %109

89:                                               ; preds = %85
  %90 = add i64 %86, -1
  %91 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %90
  %92 = load %struct.SkEdge*, %struct.SkEdge** %91, align 8
  %93 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %86
  %94 = load %struct.SkEdge*, %struct.SkEdge** %93, align 8
  %95 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %92, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %94, i64 0, i32 4
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %96, %98
  %100 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %92, i64 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %94, i64 0, i32 2
  %103 = load i32, i32* %102, align 8
  %104 = select i1 %99, i32 %101, i32 %96
  %105 = select i1 %99, i32 %103, i32 %98
  %106 = icmp slt i32 %104, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %86, %107
  br label %109

109:                                              ; preds = %89, %85
  %110 = phi i64 [ %86, %85 ], [ %108, %89 ]
  %111 = add i64 %110, -1
  %112 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %111
  %113 = load %struct.SkEdge*, %struct.SkEdge** %112, align 8
  %114 = load i32, i32* %83, align 8
  %115 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %113, i64 0, i32 4
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %114, %116
  %118 = load i32, i32* %84, align 8
  %119 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %113, i64 0, i32 2
  %120 = load i32, i32* %119, align 8
  %121 = select i1 %117, i32 %118, i32 %114
  %122 = select i1 %117, i32 %120, i32 %116
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %109
  %125 = add i64 %87, -1
  br label %133

126:                                              ; preds = %109
  %127 = ptrtoint %struct.SkEdge* %113 to i64
  %128 = add i64 %87, -1
  %129 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %128
  %130 = bitcast %struct.SkEdge** %129 to i64*
  store i64 %127, i64* %130, align 8
  %131 = shl i64 %110, 1
  %132 = icmp ugt i64 %131, %64
  br i1 %132, label %133, label %85

133:                                              ; preds = %126, %75, %124
  %134 = phi i64 [ %77, %75 ], [ %125, %124 ], [ %111, %126 ]
  %135 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %134
  store %struct.SkEdge* %79, %struct.SkEdge** %135, align 8
  %136 = icmp eq i64 %77, 0
  br i1 %136, label %69, label %75

137:                                              ; preds = %211, %72
  %138 = phi i64 [ %73, %72 ], [ %214, %211 ]
  %139 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %138
  %140 = load i64, i64* %74, align 8
  %141 = bitcast %struct.SkEdge** %139 to i64*
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %74, align 8
  store i64 %140, i64* %141, align 8
  %143 = load %struct.SkEdge*, %struct.SkEdge** %60, align 8
  %144 = icmp ult i64 %138, 2
  br i1 %144, label %275, label %151

145:                                              ; preds = %175
  %146 = lshr i64 %176, 1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %211, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %143, i64 0, i32 4
  %150 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %143, i64 0, i32 2
  br label %186

151:                                              ; preds = %137, %175
  %152 = phi i64 [ %184, %175 ], [ 2, %137 ]
  %153 = phi i64 [ %176, %175 ], [ 1, %137 ]
  %154 = icmp ult i64 %152, %138
  br i1 %154, label %155, label %175

155:                                              ; preds = %151
  %156 = add i64 %152, -1
  %157 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %156
  %158 = load %struct.SkEdge*, %struct.SkEdge** %157, align 8
  %159 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %152
  %160 = load %struct.SkEdge*, %struct.SkEdge** %159, align 8
  %161 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %158, i64 0, i32 4
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %160, i64 0, i32 4
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %162, %164
  %166 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %158, i64 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %160, i64 0, i32 2
  %169 = load i32, i32* %168, align 8
  %170 = select i1 %165, i32 %167, i32 %162
  %171 = select i1 %165, i32 %169, i32 %164
  %172 = icmp slt i32 %170, %171
  %173 = zext i1 %172 to i64
  %174 = or i64 %152, %173
  br label %175

175:                                              ; preds = %155, %151
  %176 = phi i64 [ %152, %151 ], [ %174, %155 ]
  %177 = add i64 %176, -1
  %178 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %177
  %179 = bitcast %struct.SkEdge** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %153, -1
  %182 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %181
  %183 = bitcast %struct.SkEdge** %182 to i64*
  store i64 %180, i64* %183, align 8
  %184 = shl i64 %176, 1
  %185 = icmp ugt i64 %184, %138
  br i1 %185, label %145, label %151

186:                                              ; preds = %204, %148
  %187 = phi i64 [ %146, %148 ], [ %209, %204 ]
  %188 = phi i64 [ %176, %148 ], [ %187, %204 ]
  %189 = add nsw i64 %187, -1
  %190 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %189
  %191 = load %struct.SkEdge*, %struct.SkEdge** %190, align 8
  %192 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %191, i64 0, i32 4
  %193 = load i32, i32* %192, align 8
  %194 = load i32, i32* %149, align 8
  %195 = icmp eq i32 %193, %194
  %196 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %191, i64 0, i32 2
  %197 = load i32, i32* %196, align 8
  %198 = load i32, i32* %150, align 8
  %199 = select i1 %195, i32 %197, i32 %193
  %200 = select i1 %195, i32 %198, i32 %194
  %201 = icmp slt i32 %199, %200
  br i1 %201, label %204, label %202

202:                                              ; preds = %186
  %203 = add i64 %188, -1
  br label %211

204:                                              ; preds = %186
  %205 = ptrtoint %struct.SkEdge* %191 to i64
  %206 = add i64 %188, -1
  %207 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %206
  %208 = bitcast %struct.SkEdge** %207 to i64*
  store i64 %205, i64* %208, align 8
  %209 = lshr i64 %187, 1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %186

211:                                              ; preds = %204, %202, %145
  %212 = phi i64 [ %177, %145 ], [ %203, %202 ], [ %189, %204 ]
  %213 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %212
  store %struct.SkEdge* %143, %struct.SkEdge** %213, align 8
  %214 = add i64 %138, -1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %275, label %137

216:                                              ; preds = %58
  %217 = add nsw i32 %59, -1
  %218 = add nsw i32 %61, -1
  %219 = ashr i32 %218, 1
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %220
  %222 = sext i32 %61 to i64
  %223 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 -1
  %224 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %223, i64 %222
  %225 = load %struct.SkEdge*, %struct.SkEdge** %221, align 8
  %226 = bitcast %struct.SkEdge** %221 to i64*
  %227 = ptrtoint %struct.SkEdge* %225 to i64
  %228 = bitcast %struct.SkEdge** %224 to i64*
  %229 = load i64, i64* %228, align 8
  store i64 %229, i64* %226, align 8
  store i64 %227, i64* %228, align 8
  %230 = icmp ugt %struct.SkEdge** %224, %60
  br i1 %230, label %231, label %260

231:                                              ; preds = %216
  %232 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %225, i64 0, i32 4
  %233 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %225, i64 0, i32 2
  br label %234

234:                                              ; preds = %254, %231
  %235 = phi %struct.SkEdge** [ %60, %231 ], [ %255, %254 ]
  %236 = phi %struct.SkEdge** [ %60, %231 ], [ %256, %254 ]
  %237 = load %struct.SkEdge*, %struct.SkEdge** %236, align 8
  %238 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %237, i64 0, i32 4
  %239 = load i32, i32* %238, align 8
  %240 = load i32, i32* %232, align 8
  %241 = icmp eq i32 %239, %240
  %242 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %237, i64 0, i32 2
  %243 = load i32, i32* %242, align 8
  %244 = load i32, i32* %233, align 8
  %245 = select i1 %241, i32 %243, i32 %239
  %246 = select i1 %241, i32 %244, i32 %240
  %247 = icmp slt i32 %245, %246
  br i1 %247, label %248, label %254

248:                                              ; preds = %234
  %249 = ptrtoint %struct.SkEdge* %237 to i64
  %250 = bitcast %struct.SkEdge** %236 to i64*
  %251 = bitcast %struct.SkEdge** %235 to i64*
  %252 = load i64, i64* %251, align 8
  store i64 %252, i64* %250, align 8
  store i64 %249, i64* %251, align 8
  %253 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %235, i64 1
  br label %254

254:                                              ; preds = %248, %234
  %255 = phi %struct.SkEdge** [ %253, %248 ], [ %235, %234 ]
  %256 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %236, i64 1
  %257 = icmp ult %struct.SkEdge** %256, %224
  br i1 %257, label %234, label %258

258:                                              ; preds = %254
  %259 = load i64, i64* %228, align 8
  br label %260

260:                                              ; preds = %216, %258
  %261 = phi i64 [ %227, %216 ], [ %259, %258 ]
  %262 = phi %struct.SkEdge** [ %60, %216 ], [ %255, %258 ]
  %263 = bitcast %struct.SkEdge** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %261, i64* %263, align 8
  store i64 %264, i64* %228, align 8
  %265 = ptrtoint %struct.SkEdge** %262 to i64
  %266 = ptrtoint %struct.SkEdge** %60 to i64
  %267 = sub i64 %265, %266
  %268 = lshr exact i64 %267, 3
  %269 = trunc i64 %268 to i32
  tail call void @_Z12SkTIntroSortIP6SkEdgeZ8SkTQSortIS0_EvPPT_S5_EUlPKS0_S7_E_EviS4_iRKT0_(i32 %217, %struct.SkEdge** %60, i32 %269, %class.anon* dereferenceable(1) %3)
  %270 = add nsw i32 %269, 1
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds %struct.SkEdge*, %struct.SkEdge** %60, i64 %271
  %273 = sub nsw i32 %61, %270
  %274 = icmp slt i32 %273, 33
  br i1 %274, label %6, label %58

275:                                              ; preds = %211, %137, %55, %69, %6
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14InverseBlitterD0Ev(%class.InverseBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %2) #8
  %3 = bitcast %class.InverseBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14InverseBlitter5blitHEiii(%class.InverseBlitter*, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = sub nsw i32 %1, %6
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.InverseBlitter, %class.InverseBlitter* %0, i64 0, i32 1
  %11 = load %class.SkBlitter*, %class.SkBlitter** %10, align 8
  %12 = bitcast %class.SkBlitter* %11 to void (%class.SkBlitter*, i32, i32, i32)***
  %13 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %13, i64 2
  %15 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %14, align 8
  tail call void %15(%class.SkBlitter* %11, i32 %6, i32 %2, i32 %7) #8
  br label %16

16:                                               ; preds = %9, %4
  %17 = add nsw i32 %3, %1
  store i32 %17, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14InverseBlitter9blitAntiHEiiPKhPKs(%class.InverseBlitter*, i32, i32, i8*, i16*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14InverseBlitter5blitVEiiih(%class.InverseBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14InverseBlitter8blitRectEiiii(%class.InverseBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN9SkBlitter12blitAntiRectEiiiihh(%class.SkBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14InverseBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.InverseBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPixmap* @_ZN14InverseBlitter17justAnOpaqueColorEPj(%class.InverseBlitter*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkPixmap* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #8
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #8
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #8
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #8
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #8
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #2

declare i32 @_ZN11SkCubicEdge11updateCubicEv(%struct.SkCubicEdge*) local_unnamed_addr #2

declare i32 @_ZN15SkQuadraticEdge15updateQuadraticEv(%struct.SkQuadraticEdge*) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #5

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #5

declare i32 @_ZN6SkEdge7setLineERK7SkPointS2_PK7SkIRecti(%struct.SkEdge*, %struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), %struct.SkIRect*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{void (%class.SkBlitter*, i32, i1)* @_ZL25PrePostInverseBlitterProcP9SkBlitterib}
!4 = !{i8 0, i8 2}
