; ModuleID = '../../device/fido/u2f_command_constructor.cc'
source_filename = "../../device/fido/u2f_command_constructor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [32 x i8] }
%"struct.device::CtapMakeCredentialRequest" = type { %"class.std::__1::basic_string", %"struct.std::__1::array", %"struct.device::PublicKeyCredentialRpEntity", %"class.device::PublicKeyCredentialUserEntity", %"class.device::PublicKeyCredentialParams", i32, i32, i8, i8, i8, i8, i8, %"class.std::__1::vector.22", %"class.absl::optional.36", %"class.absl::optional.41", %"class.absl::optional.46", i8, %"class.absl::optional", %"class.absl::optional.51", i8, %"class.absl::optional.36" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.device::PublicKeyCredentialRpEntity" = type { %"class.std::__1::basic_string", %"class.absl::optional", %"class.absl::optional.2" }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%"class.device::PublicKeyCredentialUserEntity" = type { %"class.std::__1::vector", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i8* }
%"class.device::PublicKeyCredentialParams" = type { %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.device::PublicKeyCredentialParams::CredentialInfo"*, %"struct.device::PublicKeyCredentialParams::CredentialInfo"*, %"class.std::__1::__compressed_pair.17" }
%"struct.device::PublicKeyCredentialParams::CredentialInfo" = type { i32, i32 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.device::PublicKeyCredentialParams::CredentialInfo"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"*, %"class.std::__1::__compressed_pair.31" }
%"class.device::PublicKeyCredentialDescriptor" = type { i32, %"class.std::__1::vector", %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i8*, i8*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i8* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.device::PublicKeyCredentialDescriptor"* }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { i8 }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %"class.device::pin::TokenResponse" }
%"class.device::pin::TokenResponse" = type { i8, %"class.std::__1::vector" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { i8 }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.std::__1::vector" }
%"struct.device::CtapGetAssertionRequest" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array", i32, i8, [3 x i8], %"class.std::__1::vector.22", %"class.absl::optional.36", %"class.absl::optional.41", [6 x i8], %"class.absl::optional.56", %"class.absl::optional", %"class.absl::optional.74", [7 x i8], %"class.absl::optional.79", i8, i8, [6 x i8], %"class.absl::optional.36", i8, i8, i8, [5 x i8] }>
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.std::__1::vector.61" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.device::CableDiscoveryData"*, %"struct.device::CableDiscoveryData"*, %"class.std::__1::__compressed_pair.69" }
%"struct.device::CableDiscoveryData" = type { i32, %"class.absl::optional.63", %"class.absl::optional.36" }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"struct.device::CableDiscoveryData::V1Data" }
%"struct.device::CableDiscoveryData::V1Data" = type { %"struct.std::__1::array.68", %"struct.std::__1::array.68", %"struct.std::__1::array" }
%"struct.std::__1::array.68" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.device::CableDiscoveryData"* }
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"struct.std::__1::array" }
%"class.absl::optional.79" = type { %"class.absl::optional_internal::optional_data.80" }
%"class.absl::optional_internal::optional_data.80" = type { %"class.absl::optional_internal::optional_data_base.81" }
%"class.absl::optional_internal::optional_data_base.81" = type { %"class.absl::optional_internal::optional_data_dtor_base.82" }
%"class.absl::optional_internal::optional_data_dtor_base.82" = type { i8, %union.anon.83 }
%union.anon.83 = type { %"struct.device::CtapGetAssertionRequest::HMACSecret" }
%"struct.device::CtapGetAssertionRequest::HMACSecret" = type { %"struct.std::__1::array.84", %"class.std::__1::vector", %"class.std::__1::vector" }
%"struct.std::__1::array.84" = type { [65 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.apdu::ApduCommand" = type { i8, i8, i8, i8, i64, %"class.std::__1::vector" }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN6device15kBogusChallengeE = external global %"struct.std::__1::array", align 1
@_ZN6device14kBogusAppParamE = external global %"struct.std::__1::array", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6device33IsConvertibleToU2fRegisterCommandERKNS_25CtapMakeCredentialRequestE(%"struct.device::CtapMakeCredentialRequest"* nocapture readonly dereferenceable(680)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"struct.device::PublicKeyCredentialParams::CredentialInfo"*, %"struct.device::PublicKeyCredentialParams::CredentialInfo"** %10, align 8
  %12 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %13 = load %"struct.device::PublicKeyCredentialParams::CredentialInfo"*, %"struct.device::PublicKeyCredentialParams::CredentialInfo"** %12, align 8
  %14 = icmp eq %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %11, %13
  br i1 %14, label %23, label %17

15:                                               ; preds = %17
  %16 = icmp eq %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %22, %13
  br i1 %16, label %23, label %17

17:                                               ; preds = %9, %15
  %18 = phi %"struct.device::PublicKeyCredentialParams::CredentialInfo"* [ %22, %15 ], [ %11, %9 ]
  %19 = getelementptr inbounds %"struct.device::PublicKeyCredentialParams::CredentialInfo", %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, -7
  %22 = getelementptr inbounds %"struct.device::PublicKeyCredentialParams::CredentialInfo", %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %18, i64 1
  br i1 %21, label %23, label %15

23:                                               ; preds = %17, %15, %9, %1, %5
  %24 = phi i1 [ false, %5 ], [ false, %1 ], [ false, %9 ], [ true, %17 ], [ false, %15 ]
  ret i1 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6device34ShouldPreferCTAP2EvenIfItNeedsAPINERKNS_25CtapMakeCredentialRequestE(%"struct.device::CtapMakeCredentialRequest"* nocapture readonly dereferenceable(680)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  %5 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %0, i64 0, i32 16
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 3
  %8 = or i1 %4, %7
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6device29IsConvertibleToU2fSignCommandERKNS_23CtapGetAssertionRequestE(%"struct.device::CtapGetAssertionRequest"* nocapture readonly dereferenceable(432)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"** %6, align 8
  %8 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %0, i64 0, i32 6, i32 0, i32 1
  %9 = load %"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"** %8, align 8
  %10 = icmp ne %"class.device::PublicKeyCredentialDescriptor"* %7, %9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device27ConvertToU2fRegisterCommandERKNS_25CtapMakeCredentialRequestE(%"class.absl::optional.36"* noalias nocapture sret, %"struct.device::CtapMakeCredentialRequest"* dereferenceable(680)) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = alloca %"struct.std::__1::array", align 1
  %6 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 7
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"struct.device::PublicKeyCredentialParams::CredentialInfo"*, %"struct.device::PublicKeyCredentialParams::CredentialInfo"** %14, align 8
  %16 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %17 = load %"struct.device::PublicKeyCredentialParams::CredentialInfo"*, %"struct.device::PublicKeyCredentialParams::CredentialInfo"** %16, align 8
  %18 = icmp eq %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %15, %17
  br i1 %18, label %27, label %21

19:                                               ; preds = %21
  %20 = icmp eq %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %26, %17
  br i1 %20, label %27, label %21

21:                                               ; preds = %13, %19
  %22 = phi %"struct.device::PublicKeyCredentialParams::CredentialInfo"* [ %26, %19 ], [ %15, %13 ]
  %23 = getelementptr inbounds %"struct.device::PublicKeyCredentialParams::CredentialInfo", %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, -7
  %26 = getelementptr inbounds %"struct.device::PublicKeyCredentialParams::CredentialInfo", %"struct.device::PublicKeyCredentialParams::CredentialInfo"* %22, i64 1
  br i1 %25, label %31, label %19

27:                                               ; preds = %19, %9, %2, %13
  %28 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %union.anon.40* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #8
  br label %85

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %39, %41
  br i1 %42, label %43, label %55

43:                                               ; preds = %35
  %44 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #8
  call void @_ZN6device27ConstructU2fRegisterCommandEN4base4spanIKhLm32EEES3_b(%"class.std::__1::vector"* nonnull sret %3, i8* getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN6device14kBogusAppParamE, i64 0, i32 0, i64 0), i8* getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN6device15kBogusChallengeE, i64 0, i32 0, i64 0), i1 zeroext false) #8
  %45 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 16
  %49 = bitcast %"class.std::__1::vector"* %46 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 16
  %53 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast i8** %53 to i64*
  store i64 %52, i64* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #8
  br label %85

55:                                               ; preds = %35, %31
  %56 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 16
  %57 = load i8, i8* %56, align 8
  %58 = icmp eq i8 %57, 4
  %59 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #8
  %61 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 2, i32 0
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %69 = select i1 %65, i8* %67, i8* %68
  %70 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = zext i8 %64 to i64
  %73 = select i1 %65, i64 %71, i64 %72
  call void @_ZN6device18fido_parsing_utils16CreateSHA256HashEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::array"* nonnull sret %5, i8* %69, i64 %73) #8
  %74 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 1, i32 0, i64 0
  call void @_ZN6device27ConstructU2fRegisterCommandEN4base4spanIKhLm32EEES3_b(%"class.std::__1::vector"* nonnull sret %4, i8* nonnull %60, i8* %74, i1 zeroext %58)
  %75 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %75, align 8
  %76 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %77 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 16
  %79 = bitcast %"class.std::__1::vector"* %76 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast i8** %80 to i64*
  %82 = load i64, i64* %81, align 16
  %83 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast i8** %83 to i64*
  store i64 %82, i64* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #8
  br label %85

85:                                               ; preds = %55, %43, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device36ConstructBogusU2fRegistrationCommandEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #2 {
  tail call void @_ZN6device27ConstructU2fRegisterCommandEN4base4spanIKhLm32EEES3_b(%"class.std::__1::vector"* sret %0, i8* getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN6device14kBogusAppParamE, i64 0, i32 0, i64 0), i8* getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN6device15kBogusChallengeE, i64 0, i32 0, i64 0), i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device27ConstructU2fRegisterCommandEN4base4spanIKhLm32EEES3_b(%"class.std::__1::vector"* noalias sret, i8*, i8*, i1 zeroext) local_unnamed_addr #2 {
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca %"class.apdu::ApduCommand", align 8
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = bitcast %"class.std::__1::vector"* %5 to i64*
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = tail call i8* @_Znwm(i64 64) #9
  %15 = ptrtoint i8* %14 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 64
  %17 = ptrtoint i8* %16 to i64
  store i64 %15, i64* %11, align 16
  store i64 %15, i64* %13, align 8
  store i64 %17, i64* %10, align 16
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* nonnull %5, i64 32, i8* %2) #8
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* nonnull %5, i64 32, i8* %1) #8
  %18 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false)
  call void @_ZN4apdu11ApduCommandC1Ev(%"class.apdu::ApduCommand"* nonnull %6) #8
  %19 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %6, i64 0, i32 1
  store i8 1, i8* %19, align 1
  %20 = select i1 %3, i8 -125, i8 3
  %21 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %6, i64 0, i32 2
  store i8 %20, i8* %21, align 2
  %22 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 16
  %24 = load i64, i64* %10, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 24, i1 false) #8
  %25 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %6, i64 0, i32 5
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %4
  %30 = ptrtoint i8* %27 to i64
  %31 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %6, i64 0, i32 5, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  store i64 %30, i64* %32, align 8
  call void @_ZdlPv(i8* nonnull %27) #9
  %33 = bitcast %"class.std::__1::vector"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #8
  br label %34

34:                                               ; preds = %4, %29
  %35 = bitcast %"class.std::__1::vector"* %25 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %35, align 8
  %36 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %6, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast i8** %36 to i64*
  store i64 %24, i64* %37, align 8
  %38 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %6, i64 0, i32 4
  store i64 65536, i64* %38, align 8
  call void @_ZNK4apdu11ApduCommand17GetEncodedCommandEv(%"class.std::__1::vector"* sret %0, %"class.apdu::ApduCommand"* nonnull %6) #8
  call void @_ZN4apdu11ApduCommandD1Ev(%"class.apdu::ApduCommand"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #8
  %39 = load i8*, i8** %8, align 16
  %40 = icmp eq i8* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = ptrtoint i8* %39 to i64
  store i64 %42, i64* %13, align 8
  call void @_ZdlPv(i8* nonnull %39) #9
  br label %43

43:                                               ; preds = %34, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret void
}

declare void @_ZN6device18fido_parsing_utils16CreateSHA256HashEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::array"* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device41ConvertToU2fSignCommandWithBogusChallengeERKNS_25CtapMakeCredentialRequestEN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.36"* noalias nocapture sret, %"struct.device::CtapMakeCredentialRequest"* dereferenceable(680), i64, i8*) local_unnamed_addr #2 {
  %5 = alloca %"struct.std::__1::array", align 1
  %6 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 2, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"struct.device::CtapMakeCredentialRequest", %"struct.device::CtapMakeCredentialRequest"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  call void @_ZN6device18fido_parsing_utils16CreateSHA256HashEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::array"* nonnull sret %5, i8* %15, i64 %19) #8
  call void @_ZN6device23ConstructU2fSignCommandEN4base4spanIKhLm32EEES3_NS1_IS2_Lm18446744073709551615EEE(%"class.absl::optional.36"* sret %0, i8* nonnull %6, i8* getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN6device15kBogusChallengeE, i64 0, i32 0, i64 0), i64 %2, i8* %3)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device23ConstructU2fSignCommandEN4base4spanIKhLm32EEES3_NS1_IS2_Lm18446744073709551615EEE(%"class.absl::optional.36"* noalias nocapture sret, i8*, i8*, i64, i8*) local_unnamed_addr #2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.apdu::ApduCommand", align 8
  %8 = alloca %"class.std::__1::vector", align 16
  %9 = icmp ugt i64 %3, 255
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %union.anon.40* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #8
  br label %111

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = add nuw nsw i64 %3, 65
  %20 = bitcast i8** %18 to i64*
  %21 = bitcast %"class.std::__1::vector"* %6 to i64*
  %22 = bitcast i8** %17 to i64*
  %23 = tail call i8* @_Znwm(i64 %19) #9
  %24 = ptrtoint i8* %23 to i64
  %25 = getelementptr inbounds i8, i8* %23, i64 %19
  %26 = ptrtoint i8* %25 to i64
  store i64 %24, i64* %21, align 8
  store i64 %24, i64* %22, align 8
  store i64 %26, i64* %20, align 8
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* nonnull %6, i64 32, i8* %2) #8
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* nonnull %6, i64 32, i8* %1) #8
  %27 = trunc i64 %3 to i8
  %28 = load i8*, i8** %17, align 8
  %29 = load i8*, i8** %18, align 8
  %30 = icmp ult i8* %28, %29
  %31 = ptrtoint i8* %29 to i64
  br i1 %30, label %32, label %36

32:                                               ; preds = %14
  store i8 %27, i8* %28, align 1
  %33 = getelementptr inbounds i8, i8* %28, i64 1
  %34 = ptrtoint i8* %33 to i64
  %35 = bitcast i8** %17 to i64*
  store i64 %34, i64* %35, align 8
  br label %71

36:                                               ; preds = %14
  %37 = ptrtoint i8* %28 to i64
  %38 = bitcast i8** %17 to i64*
  %39 = load i64, i64* %21, align 8
  %40 = sub i64 %37, %39
  %41 = add i64 %40, 1
  %42 = icmp slt i64 %41, 0
  %43 = inttoptr i64 %39 to i8*
  br i1 %42, label %44, label %46

44:                                               ; preds = %36
  %45 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %45) #10
  unreachable

46:                                               ; preds = %36
  %47 = sub i64 %31, %39
  %48 = icmp ult i64 %47, 4611686018427387903
  br i1 %48, label %49, label %54

49:                                               ; preds = %46
  %50 = shl i64 %47, 1
  %51 = icmp ult i64 %50, %41
  %52 = select i1 %51, i64 %41, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %46
  %55 = phi i64 [ %52, %49 ], [ 9223372036854775807, %46 ]
  %56 = call i8* @_Znwm(i64 %55) #9
  br label %57

57:                                               ; preds = %54, %49
  %58 = phi i64 [ %55, %54 ], [ 0, %49 ]
  %59 = phi i8* [ %56, %54 ], [ null, %49 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %40
  %61 = getelementptr inbounds i8, i8* %59, i64 %58
  %62 = ptrtoint i8* %61 to i64
  store i8 %27, i8* %60, align 1
  %63 = getelementptr inbounds i8, i8* %60, i64 1
  %64 = ptrtoint i8* %63 to i64
  %65 = ptrtoint i8* %59 to i64
  %66 = icmp sgt i64 %40, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %43, i64 %40, i1 false) #8
  br label %68

68:                                               ; preds = %67, %57
  store i64 %65, i64* %21, align 8
  store i64 %64, i64* %38, align 8
  store i64 %62, i64* %20, align 8
  %69 = icmp eq i64 %39, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %68
  call void @_ZdlPv(i8* nonnull %43) #9
  br label %71

71:                                               ; preds = %32, %68, %70
  %72 = phi i64* [ %35, %32 ], [ %38, %68 ], [ %38, %70 ]
  call void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* nonnull %6, i64 %3, i8* %4) #8
  %73 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 40, i1 false)
  call void @_ZN4apdu11ApduCommandC1Ev(%"class.apdu::ApduCommand"* nonnull %7) #8
  %74 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %7, i64 0, i32 1
  store i8 2, i8* %74, align 1
  %75 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %7, i64 0, i32 2
  store i8 3, i8* %75, align 2
  %76 = load i64, i64* %21, align 8
  %77 = load i64, i64* %72, align 8
  %78 = load i64, i64* %20, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #8
  %79 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %7, i64 0, i32 5
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %79, i64 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %71
  %84 = ptrtoint i8* %81 to i64
  %85 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %7, i64 0, i32 5, i32 0, i32 1
  %86 = bitcast i8** %85 to i64*
  store i64 %84, i64* %86, align 8
  call void @_ZdlPv(i8* nonnull %81) #9
  %87 = bitcast %"class.std::__1::vector"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #8
  br label %88

88:                                               ; preds = %83, %71
  %89 = bitcast %"class.std::__1::vector"* %79 to i64*
  store i64 %76, i64* %89, align 8
  %90 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %7, i64 0, i32 5, i32 0, i32 1
  %91 = bitcast i8** %90 to i64*
  store i64 %77, i64* %91, align 8
  %92 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %7, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i8** %92 to i64*
  store i64 %78, i64* %93, align 8
  %94 = getelementptr inbounds %"class.apdu::ApduCommand", %"class.apdu::ApduCommand"* %7, i64 0, i32 4
  store i64 65536, i64* %94, align 8
  %95 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #8
  call void @_ZNK4apdu11ApduCommand17GetEncodedCommandEv(%"class.std::__1::vector"* nonnull sret %8, %"class.apdu::ApduCommand"* nonnull %7) #8
  %96 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %96, align 8
  %97 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %98 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 16
  %100 = bitcast %"class.std::__1::vector"* %97 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 16
  %104 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast i8** %104 to i64*
  store i64 %103, i64* %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #8
  call void @_ZN4apdu11ApduCommandD1Ev(%"class.apdu::ApduCommand"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #8
  %106 = load i8*, i8** %16, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %88
  %109 = ptrtoint i8* %106 to i64
  store i64 %109, i64* %72, align 8
  call void @_ZdlPv(i8* nonnull %106) #9
  br label %110

110:                                              ; preds = %88, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  br label %111

111:                                              ; preds = %110, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device23ConvertToU2fSignCommandERKNS_23CtapGetAssertionRequestENS_24ApplicationParameterTypeEN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.36"* noalias nocapture sret, %"struct.device::CtapGetAssertionRequest"* dereferenceable(432), i32, i64, i8*) local_unnamed_addr #2 {
  %6 = alloca %"struct.std::__1::array", align 1
  %7 = alloca [32 x i8], align 1
  %8 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %1, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"** %12, align 8
  %14 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %1, i64 0, i32 6, i32 0, i32 1
  %15 = load %"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"** %14, align 8
  %16 = icmp eq %"class.device::PublicKeyCredentialDescriptor"* %13, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %11, %5
  %18 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.absl::optional.36", %"class.absl::optional.36"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %union.anon.40* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #8
  br label %47

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #8
  %23 = icmp eq i32 %2, 0
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24)
  br i1 %23, label %25, label %38

25:                                               ; preds = %21
  %26 = bitcast %"struct.device::CtapGetAssertionRequest"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"struct.device::CtapGetAssertionRequest"* %1 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  call void @_ZN6device18fido_parsing_utils16CreateSHA256HashEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.std::__1::array"* nonnull sret %6, i8* %33, i64 %37) #8
  br label %45

38:                                               ; preds = %21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %24, i8 0, i64 32, i1 false)
  %39 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 1, !range !2, !noalias !3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 %43, i64 32, i1 false) #8
  br label %45

44:                                               ; preds = %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 1 %24, i64 32, i1 false)
  br label %45

45:                                               ; preds = %44, %42, %25
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24)
  %46 = getelementptr inbounds %"struct.device::CtapGetAssertionRequest", %"struct.device::CtapGetAssertionRequest"* %1, i64 0, i32 2, i32 0, i64 0
  call void @_ZN6device23ConstructU2fSignCommandEN4base4spanIKhLm32EEES3_NS1_IS2_Lm18446744073709551615EEE(%"class.absl::optional.36"* sret %0, i8* nonnull %22, i8* %46, i64 %3, i8* %4)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8
  br label %47

47:                                               ; preds = %45, %17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6device18fido_parsing_utils6AppendEPNSt3__16vectorIhNS1_9allocatorIhEEEEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"*, i64, i8*) local_unnamed_addr #3

declare void @_ZN4apdu11ApduCommandC1Ev(%"class.apdu::ApduCommand"*) unnamed_addr #3

declare void @_ZNK4apdu11ApduCommand17GetEncodedCommandEv(%"class.std::__1::vector"* sret, %"class.apdu::ApduCommand"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4apdu11ApduCommandD1Ev(%"class.apdu::ApduCommand"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNKR4absl8optionalINSt3__15arrayIhLm32EEEE8value_orIS3_EES3_OT_: argument 0"}
!5 = distinct !{!5, !"_ZNKR4absl8optionalINSt3__15arrayIhLm32EEEE8value_orIS3_EES3_OT_"}
