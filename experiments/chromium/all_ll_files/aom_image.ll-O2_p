; ModuleID = '../../third_party/libaom/source/libaom/aom/src/aom_image.c'
source_filename = "../../third_party/libaom/source/libaom/aom/src/aom_image.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.aom_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i8*], [3 x i32], i64, i32, i32, i32, i8*, i8*, i32, i32, %struct.aom_metadata_array*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.aom_image* @aom_img_alloc(%struct.aom_image*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %6 = tail call fastcc %struct.aom_image* @img_alloc_helper(%struct.aom_image* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %4, i32 1, i32 0, i8* null, i8* (i8*, i64)* null, i8* null)
  ret %struct.aom_image* %6
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.aom_image* @img_alloc_helper(%struct.aom_image*, i32, i32, i32, i32, i32, i32, i32, i8*, i8* (i8*, i64)*, i8*) unnamed_addr #0 {
  %12 = icmp ne %struct.aom_image* %0, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = bitcast %struct.aom_image* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 168, i1 false)
  br label %15

15:                                               ; preds = %13, %11
  %16 = icmp eq i32 %4, 0
  %17 = select i1 %16, i32 1, i32 %4
  %18 = add i32 %17, -1
  %19 = tail call i32 @llvm.ctpop.i32(i32 %17), !range !2
  %20 = icmp ugt i32 %19, 1
  br i1 %20, label %152, label %21

21:                                               ; preds = %15
  %22 = icmp eq i32 %5, 0
  %23 = select i1 %22, i32 1, i32 %5
  %24 = tail call i32 @llvm.ctpop.i32(i32 %23), !range !2
  %25 = icmp ugt i32 %24, 1
  br i1 %25, label %152, label %26

26:                                               ; preds = %21
  %27 = icmp eq i32 %6, 0
  %28 = select i1 %27, i32 1, i32 %6
  %29 = tail call i32 @llvm.ctpop.i32(i32 %28), !range !2
  %30 = icmp ugt i32 %29, 1
  br i1 %30, label %152, label %31

31:                                               ; preds = %26
  switch i32 %1, label %35 [
    i32 258, label %46
    i32 769, label %46
    i32 260, label %46
    i32 771, label %46
    i32 261, label %41
    i32 262, label %36
    i32 2817, label %32
    i32 2306, label %32
    i32 2309, label %33
    i32 2310, label %34
  ]

32:                                               ; preds = %31, %31
  br label %46

33:                                               ; preds = %31
  br label %41

34:                                               ; preds = %31
  br label %36

35:                                               ; preds = %31
  br label %46

36:                                               ; preds = %34, %31
  %37 = phi i32 [ 48, %34 ], [ 24, %31 ]
  %38 = and i32 %1, 2048
  %39 = icmp eq i32 %38, 0
  %40 = select i1 %39, i32 8, i32 16
  br label %51

41:                                               ; preds = %33, %31
  %42 = phi i32 [ 32, %33 ], [ 16, %31 ]
  %43 = and i32 %1, 2048
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, i32 8, i32 16
  br label %55

46:                                               ; preds = %31, %31, %31, %31, %35, %32
  %47 = phi i32 [ 16, %35 ], [ 24, %32 ], [ 12, %31 ], [ 12, %31 ], [ 12, %31 ], [ 12, %31 ]
  %48 = and i32 %1, 2048
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, i32 8, i32 16
  switch i32 %1, label %51 [
    i32 258, label %55
    i32 769, label %55
    i32 260, label %55
    i32 771, label %55
    i32 261, label %55
    i32 2306, label %55
    i32 2817, label %55
    i32 2309, label %55
  ]

51:                                               ; preds = %36, %46
  %52 = phi i32 [ %40, %36 ], [ %50, %46 ]
  %53 = phi i1 [ %39, %36 ], [ %49, %46 ]
  %54 = phi i32 [ %37, %36 ], [ %47, %46 ]
  br label %55

55:                                               ; preds = %41, %46, %46, %46, %46, %46, %46, %46, %46, %51
  %56 = phi i32 [ %52, %51 ], [ %50, %46 ], [ %50, %46 ], [ %50, %46 ], [ %50, %46 ], [ %50, %46 ], [ %50, %46 ], [ %50, %46 ], [ %50, %46 ], [ %45, %41 ]
  %57 = phi i1 [ %53, %51 ], [ %49, %46 ], [ %49, %46 ], [ %49, %46 ], [ %49, %46 ], [ %49, %46 ], [ %49, %46 ], [ %49, %46 ], [ %49, %46 ], [ %44, %41 ]
  %58 = phi i32 [ %54, %51 ], [ %47, %46 ], [ %47, %46 ], [ %47, %46 ], [ %47, %46 ], [ %47, %46 ], [ %47, %46 ], [ %47, %46 ], [ %47, %46 ], [ %42, %41 ]
  %59 = phi i32 [ 0, %51 ], [ 1, %46 ], [ 1, %46 ], [ 1, %46 ], [ 1, %46 ], [ 1, %46 ], [ 1, %46 ], [ 1, %46 ], [ 1, %46 ], [ 1, %41 ]
  switch i32 %1, label %60 [
    i32 258, label %61
    i32 769, label %61
    i32 260, label %61
    i32 771, label %61
    i32 2817, label %61
    i32 2306, label %61
  ]

60:                                               ; preds = %55
  br label %61

61:                                               ; preds = %55, %55, %55, %55, %55, %55, %60
  %62 = phi i32 [ 0, %60 ], [ 1, %55 ], [ 1, %55 ], [ 1, %55 ], [ 1, %55 ], [ 1, %55 ], [ 1, %55 ]
  %63 = shl nsw i32 -1, %59
  %64 = xor i32 %63, -1
  %65 = add i32 %28, -1
  %66 = icmp ugt i32 %65, %64
  %67 = select i1 %66, i32 %65, i32 %64
  %68 = add i32 %67, %2
  %69 = xor i32 %67, -1
  %70 = and i32 %68, %69
  %71 = shl nsw i32 -1, %62
  %72 = xor i32 %71, -1
  %73 = icmp ugt i32 %65, %72
  %74 = select i1 %73, i32 %65, i32 %72
  %75 = add i32 %74, %3
  %76 = xor i32 %74, -1
  %77 = and i32 %75, %76
  %78 = and i32 %1, 256
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %61
  %81 = mul i32 %70, %58
  %82 = select i1 %57, i32 3, i32 4
  %83 = lshr i32 %81, %82
  br label %84

84:                                               ; preds = %61, %80
  %85 = phi i32 [ %83, %80 ], [ %70, %61 ]
  %86 = shl i32 %7, 1
  %87 = add i32 %23, -1
  %88 = add i32 %87, %86
  %89 = add i32 %88, %85
  %90 = sub i32 0, %23
  %91 = and i32 %89, %90
  %92 = mul i32 %91, %56
  %93 = lshr exact i32 %92, 3
  br i1 %12, label %101, label %94

94:                                               ; preds = %84
  %95 = tail call noalias i8* @calloc(i64 1, i64 168) #8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %152, label %97

97:                                               ; preds = %94
  %98 = bitcast i8* %95 to %struct.aom_image*
  %99 = getelementptr inbounds i8, i8* %95, i64 148
  %100 = bitcast i8* %99 to i32*
  store i32 1, i32* %100, align 4
  br label %101

101:                                              ; preds = %97, %84
  %102 = phi %struct.aom_image* [ %0, %84 ], [ %98, %97 ]
  %103 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 23
  store i8* %8, i8** %103, align 8
  %104 = icmp eq i8* %8, null
  br i1 %104, label %105, label %139

105:                                              ; preds = %101
  %106 = add i32 %77, %86
  %107 = zext i32 %106 to i64
  %108 = zext i32 %93 to i64
  %109 = mul nuw nsw i64 %108, %107
  br i1 %79, label %110, label %115

110:                                              ; preds = %105
  %111 = zext i32 %58 to i64
  %112 = mul i64 %109, %111
  %113 = zext i32 %56 to i64
  %114 = udiv i64 %112, %113
  br label %115

115:                                              ; preds = %110, %105
  %116 = phi i64 [ %114, %110 ], [ %109, %105 ]
  %117 = icmp eq i8* (i8*, i64)* %9, null
  %118 = zext i32 %17 to i64
  br i1 %117, label %131, label %119

119:                                              ; preds = %115
  %120 = add nsw i64 %118, -1
  %121 = add nsw i64 %120, %116
  %122 = tail call i8* %9(i8* %10, i64 %121) #8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %133, label %124

124:                                              ; preds = %119
  %125 = ptrtoint i8* %122 to i64
  %126 = zext i32 %18 to i64
  %127 = add i64 %125, %126
  %128 = xor i64 %126, -1
  %129 = and i64 %127, %128
  %130 = inttoptr i64 %129 to i8*
  br label %133

131:                                              ; preds = %115
  %132 = tail call i8* @aom_memalign(i64 %118, i64 %116) #8
  br label %133

133:                                              ; preds = %124, %119, %131
  %134 = phi i8* [ %132, %131 ], [ %130, %124 ], [ null, %119 ]
  %135 = phi i32 [ 1, %131 ], [ 0, %124 ], [ 0, %119 ]
  store i8* %134, i8** %103, align 8
  %136 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 24
  store i32 %135, i32* %136, align 8
  %137 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 18
  store i64 %116, i64* %137, align 8
  %138 = icmp eq i8* %134, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %101, %133
  %140 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 0
  store i32 %1, i32* %140, align 8
  %141 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 9
  store i32 %56, i32* %141, align 4
  %142 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 7
  store i32 %70, i32* %142, align 4
  %143 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 8
  store i32 %77, i32* %143, align 8
  %144 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 14
  store i32 %59, i32* %144, align 8
  %145 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 15
  store i32 %62, i32* %145, align 4
  %146 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 19
  store i32 %58, i32* %146, align 8
  %147 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 17, i64 0
  store i32 %93, i32* %147, align 8
  %148 = lshr i32 %93, %59
  %149 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 17, i64 2
  store i32 %148, i32* %149, align 8
  %150 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %102, i64 0, i32 17, i64 1
  store i32 %148, i32* %150, align 4
  %151 = tail call i32 @aom_img_set_rect(%struct.aom_image* %102, i32 0, i32 0, i32 %2, i32 %3, i32 %7)
  br label %154

152:                                              ; preds = %133, %94, %26, %21, %15
  %153 = phi %struct.aom_image* [ %0, %15 ], [ %0, %21 ], [ %0, %26 ], [ %102, %133 ], [ null, %94 ]
  tail call void @aom_img_free(%struct.aom_image* %153)
  br label %154

154:                                              ; preds = %152, %139
  %155 = phi %struct.aom_image* [ null, %152 ], [ %102, %139 ]
  ret %struct.aom_image* %155
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.aom_image* @aom_img_alloc_with_cb(%struct.aom_image*, i32, i32, i32, i32, i8* (i8*, i64)*, i8*) local_unnamed_addr #0 {
  %8 = tail call fastcc %struct.aom_image* @img_alloc_helper(%struct.aom_image* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %4, i32 1, i32 0, i8* null, i8* (i8*, i64)* %5, i8* %6)
  ret %struct.aom_image* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.aom_image* @aom_img_wrap(%struct.aom_image*, i32, i32, i32, i32, i8*) local_unnamed_addr #0 {
  %7 = tail call fastcc %struct.aom_image* @img_alloc_helper(%struct.aom_image* %0, i32 %1, i32 %2, i32 %3, i32 1, i32 %4, i32 1, i32 0, i8* %5, i8* (i8*, i64)* null, i8* null)
  ret %struct.aom_image* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.aom_image* @aom_img_alloc_with_border(%struct.aom_image*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %8 = tail call fastcc %struct.aom_image* @img_alloc_helper(%struct.aom_image* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %4, i32 %5, i32 %6, i8* null, i8* (i8*, i64)* null, i8* null)
  ret %struct.aom_image* %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @aom_img_set_rect(%struct.aom_image*, i32, i32, i32, i32, i32) local_unnamed_addr #1 {
  %7 = add i32 %3, %1
  %8 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %7, %9
  br i1 %10, label %112, label %11

11:                                               ; preds = %6
  %12 = add i32 %4, %2
  %13 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = icmp ugt i32 %12, %14
  br i1 %15, label %112, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 10
  store i32 %3, i32* %17, align 8
  %18 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 11
  store i32 %4, i32* %18, align 4
  %19 = add i32 %5, %1
  %20 = add i32 %5, %2
  %21 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 256
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %40

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 23
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 19
  %29 = load i32, i32* %28, align 8
  %30 = mul i32 %29, %19
  %31 = lshr i32 %30, 3
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %27, i64 %32
  %34 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 0
  %35 = load i32, i32* %34, align 8
  %36 = mul i32 %35, %20
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %33, i64 %37
  %39 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 0
  store i8* %38, i8** %39, align 8
  br label %112

40:                                               ; preds = %16
  %41 = and i32 %22, 2048
  %42 = icmp eq i32 %41, 0
  %43 = select i1 %42, i32 1, i32 2
  %44 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 23
  %45 = load i8*, i8** %44, align 8
  %46 = mul i32 %43, %19
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  %49 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 0
  %50 = load i32, i32* %49, align 8
  %51 = mul i32 %50, %20
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %48, i64 %52
  %54 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 0
  store i8* %53, i8** %54, align 8
  %55 = shl i32 %5, 1
  %56 = add i32 %14, %55
  %57 = mul i32 %50, %56
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %45, i64 %58
  %60 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 15
  %61 = load i32, i32* %60, align 4
  %62 = lshr i32 %5, %61
  %63 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 14
  %64 = load i32, i32* %63, align 8
  %65 = lshr i32 %19, %64
  %66 = lshr i32 %20, %61
  %67 = and i32 %22, 512
  %68 = icmp eq i32 %67, 0
  %69 = mul i32 %65, %43
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %59, i64 %70
  br i1 %68, label %72, label %92

72:                                               ; preds = %40
  %73 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 1
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 %74, %66
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %71, i64 %76
  %78 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 1
  store i8* %77, i8** %78, align 8
  %79 = lshr i32 %14, %61
  %80 = shl i32 %62, 1
  %81 = add i32 %80, %79
  %82 = mul i32 %74, %81
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %59, i64 %83
  %85 = getelementptr inbounds i8, i8* %84, i64 %70
  %86 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 2
  %87 = load i32, i32* %86, align 8
  %88 = mul i32 %87, %66
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %85, i64 %89
  %91 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 2
  store i8* %90, i8** %91, align 8
  br label %112

92:                                               ; preds = %40
  %93 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 2
  %94 = load i32, i32* %93, align 8
  %95 = mul i32 %94, %66
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %71, i64 %96
  %98 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 2
  store i8* %97, i8** %98, align 8
  %99 = lshr i32 %14, %61
  %100 = shl i32 %62, 1
  %101 = add i32 %100, %99
  %102 = mul i32 %94, %101
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %59, i64 %103
  %105 = getelementptr inbounds i8, i8* %104, i64 %70
  %106 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 1
  %107 = load i32, i32* %106, align 4
  %108 = mul i32 %107, %66
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %105, i64 %109
  %111 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 1
  store i8* %110, i8** %111, align 8
  br label %112

112:                                              ; preds = %6, %11, %25, %92, %72
  %113 = phi i32 [ 0, %72 ], [ 0, %92 ], [ 0, %25 ], [ -1, %11 ], [ -1, %6 ]
  ret i32 %113
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @aom_img_flip(%struct.aom_image* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1
  %5 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 0
  %6 = load i32, i32* %5, align 8
  %7 = mul nsw i32 %4, %6
  %8 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 0
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  store i8* %11, i8** %8, align 8
  %12 = sub nsw i32 0, %6
  store i32 %12, i32* %5, align 8
  %13 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 15
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %3, %14
  %16 = add i32 %15, -1
  %17 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = mul nsw i32 %16, %18
  %20 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 1
  %21 = load i8*, i8** %20, align 8
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  store i8* %23, i8** %20, align 8
  %24 = sub nsw i32 0, %18
  store i32 %24, i32* %17, align 4
  %25 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 17, i64 2
  %26 = load i32, i32* %25, align 8
  %27 = mul nsw i32 %26, %16
  %28 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 16, i64 2
  %29 = load i8*, i8** %28, align 8
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  store i8* %31, i8** %28, align 8
  %32 = sub nsw i32 0, %26
  store i32 %32, i32* %25, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_img_free(%struct.aom_image*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.aom_image* %0, null
  br i1 %2, label %59, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 26
  %5 = load %struct.aom_metadata_array*, %struct.aom_metadata_array** %4, align 8
  %6 = icmp eq %struct.aom_metadata_array* %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %5, i64 0, i32 1
  %9 = load %struct.aom_metadata**, %struct.aom_metadata*** %8, align 8
  %10 = icmp eq %struct.aom_metadata** %9, null
  br i1 %10, label %42, label %11

11:                                               ; preds = %7
  %12 = bitcast %struct.aom_metadata** %9 to i8*
  %13 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %5, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %19, label %21

16:                                               ; preds = %36
  %17 = bitcast %struct.aom_metadata*** %8 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %11
  %20 = phi i8* [ %18, %16 ], [ %12, %11 ]
  tail call void @free(i8* %20) #8
  br label %42

21:                                               ; preds = %11, %40
  %22 = phi i64 [ %37, %40 ], [ %14, %11 ]
  %23 = phi %struct.aom_metadata** [ %41, %40 ], [ %9, %11 ]
  %24 = phi i64 [ %38, %40 ], [ 0, %11 ]
  %25 = getelementptr inbounds %struct.aom_metadata*, %struct.aom_metadata** %23, i64 %24
  %26 = load %struct.aom_metadata*, %struct.aom_metadata** %25, align 8
  %27 = icmp eq %struct.aom_metadata* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.aom_metadata, %struct.aom_metadata* %26, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  tail call void @free(i8* nonnull %30) #8
  br label %33

33:                                               ; preds = %32, %28
  %34 = bitcast %struct.aom_metadata* %26 to i8*
  tail call void @free(i8* %34) #8
  %35 = load i64, i64* %13, align 8
  br label %36

36:                                               ; preds = %33, %21
  %37 = phi i64 [ %22, %21 ], [ %35, %33 ]
  %38 = add nuw i64 %24, 1
  %39 = icmp ult i64 %38, %37
  br i1 %39, label %40, label %16

40:                                               ; preds = %36
  %41 = load %struct.aom_metadata**, %struct.aom_metadata*** %8, align 8
  br label %21

42:                                               ; preds = %19, %7
  %43 = bitcast %struct.aom_metadata_array* %5 to i8*
  tail call void @free(i8* %43) #8
  store %struct.aom_metadata_array* null, %struct.aom_metadata_array** %4, align 8
  br label %44

44:                                               ; preds = %3, %42
  %45 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 23
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 24
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void @aom_free(i8* nonnull %46) #8
  br label %53

53:                                               ; preds = %48, %44, %52
  %54 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 25
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %struct.aom_image* %0 to i8*
  tail call void @free(i8* %58) #8
  br label %59

59:                                               ; preds = %53, %1, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_img_remove_metadata(%struct.aom_image*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.aom_image* %0, null
  br i1 %2, label %44, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 26
  %5 = load %struct.aom_metadata_array*, %struct.aom_metadata_array** %4, align 8
  %6 = icmp eq %struct.aom_metadata_array* %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %5, i64 0, i32 1
  %9 = load %struct.aom_metadata**, %struct.aom_metadata*** %8, align 8
  %10 = icmp eq %struct.aom_metadata** %9, null
  br i1 %10, label %42, label %11

11:                                               ; preds = %7
  %12 = bitcast %struct.aom_metadata** %9 to i8*
  %13 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %5, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %19, label %21

16:                                               ; preds = %36
  %17 = bitcast %struct.aom_metadata*** %8 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %11
  %20 = phi i8* [ %18, %16 ], [ %12, %11 ]
  tail call void @free(i8* %20) #8
  br label %42

21:                                               ; preds = %11, %40
  %22 = phi i64 [ %37, %40 ], [ %14, %11 ]
  %23 = phi %struct.aom_metadata** [ %41, %40 ], [ %9, %11 ]
  %24 = phi i64 [ %38, %40 ], [ 0, %11 ]
  %25 = getelementptr inbounds %struct.aom_metadata*, %struct.aom_metadata** %23, i64 %24
  %26 = load %struct.aom_metadata*, %struct.aom_metadata** %25, align 8
  %27 = icmp eq %struct.aom_metadata* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.aom_metadata, %struct.aom_metadata* %26, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  tail call void @free(i8* nonnull %30) #8
  br label %33

33:                                               ; preds = %32, %28
  %34 = bitcast %struct.aom_metadata* %26 to i8*
  tail call void @free(i8* %34) #8
  %35 = load i64, i64* %13, align 8
  br label %36

36:                                               ; preds = %33, %21
  %37 = phi i64 [ %22, %21 ], [ %35, %33 ]
  %38 = add nuw i64 %24, 1
  %39 = icmp ult i64 %38, %37
  br i1 %39, label %40, label %16

40:                                               ; preds = %36
  %41 = load %struct.aom_metadata**, %struct.aom_metadata*** %8, align 8
  br label %21

42:                                               ; preds = %7, %19
  %43 = bitcast %struct.aom_metadata_array* %5 to i8*
  tail call void @free(i8* %43) #8
  store %struct.aom_metadata_array* null, %struct.aom_metadata_array** %4, align 8
  br label %44

44:                                               ; preds = %3, %1, %42
  ret void
}

declare void @aom_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @aom_img_plane_width(%struct.aom_image* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 14
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 10
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  %12 = lshr i32 %11, %6
  br label %16

13:                                               ; preds = %4, %2
  %14 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 10
  %15 = load i32, i32* %14, align 8
  br label %16

16:                                               ; preds = %13, %8
  %17 = phi i32 [ %12, %8 ], [ %15, %13 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @aom_img_plane_height(%struct.aom_image* nocapture readonly, i32) local_unnamed_addr #4 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, 1
  %12 = lshr i32 %11, %6
  br label %16

13:                                               ; preds = %4, %2
  %14 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %13, %8
  %17 = phi i32 [ %12, %8 ], [ %15, %13 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.aom_metadata* @aom_img_metadata_alloc(i32, i8* readonly, i64, i32) local_unnamed_addr #0 {
  %5 = icmp eq i8* %1, null
  %6 = icmp eq i64 %2, 0
  %7 = or i1 %5, %6
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = tail call noalias i8* @malloc(i64 32) #8
  %10 = bitcast i8* %9 to %struct.aom_metadata*
  %11 = icmp eq i8* %9, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %8
  %13 = bitcast i8* %9 to i32*
  store i32 %0, i32* %13, align 8
  %14 = tail call noalias i8* @malloc(i64 %2) #8
  %15 = getelementptr inbounds i8, i8* %9, i64 8
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = icmp eq i8* %14, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void @free(i8* nonnull %9) #8
  br label %24

19:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* nonnull align 1 %1, i64 %2, i1 false)
  %20 = getelementptr inbounds i8, i8* %9, i64 16
  %21 = bitcast i8* %20 to i64*
  store i64 %2, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %9, i64 24
  %23 = bitcast i8* %22 to i32*
  store i32 %3, i32* %23, align 8
  br label %24

24:                                               ; preds = %18, %19, %8, %4
  %25 = phi %struct.aom_metadata* [ null, %4 ], [ %10, %19 ], [ null, %18 ], [ null, %8 ]
  ret %struct.aom_metadata* %25
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_img_metadata_free(%struct.aom_metadata*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.aom_metadata* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.aom_metadata, %struct.aom_metadata* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @free(i8* nonnull %5) #8
  br label %8

8:                                                ; preds = %3, %7
  %9 = bitcast %struct.aom_metadata* %0 to i8*
  tail call void @free(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.aom_metadata_array* @aom_img_metadata_array_alloc(i64) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @calloc(i64 1, i64 16) #8
  %3 = bitcast i8* %2 to %struct.aom_metadata_array*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = tail call noalias i8* @calloc(i64 %0, i64 8) #8
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = icmp eq i8* %8, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @free(i8* nonnull %2) #8
  br label %15

13:                                               ; preds = %7
  %14 = bitcast i8* %2 to i64*
  store i64 %0, i64* %14, align 8
  br label %15

15:                                               ; preds = %13, %5, %1, %12
  %16 = phi %struct.aom_metadata_array* [ null, %12 ], [ null, %1 ], [ %3, %5 ], [ %3, %13 ]
  ret %struct.aom_metadata_array* %16
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_img_metadata_array_free(%struct.aom_metadata_array*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.aom_metadata_array* %0, null
  br i1 %2, label %40, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %0, i64 0, i32 1
  %5 = load %struct.aom_metadata**, %struct.aom_metadata*** %4, align 8
  %6 = icmp eq %struct.aom_metadata** %5, null
  br i1 %6, label %38, label %7

7:                                                ; preds = %3
  %8 = bitcast %struct.aom_metadata** %5 to i8*
  %9 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %15, label %17

12:                                               ; preds = %32
  %13 = bitcast %struct.aom_metadata*** %4 to i8**
  %14 = load i8*, i8** %13, align 8
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i8* [ %14, %12 ], [ %8, %7 ]
  tail call void @free(i8* %16) #8
  br label %38

17:                                               ; preds = %7, %36
  %18 = phi i64 [ %33, %36 ], [ %10, %7 ]
  %19 = phi %struct.aom_metadata** [ %37, %36 ], [ %5, %7 ]
  %20 = phi i64 [ %34, %36 ], [ 0, %7 ]
  %21 = getelementptr inbounds %struct.aom_metadata*, %struct.aom_metadata** %19, i64 %20
  %22 = load %struct.aom_metadata*, %struct.aom_metadata** %21, align 8
  %23 = icmp eq %struct.aom_metadata* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.aom_metadata, %struct.aom_metadata* %22, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @free(i8* nonnull %26) #8
  br label %29

29:                                               ; preds = %28, %24
  %30 = bitcast %struct.aom_metadata* %22 to i8*
  tail call void @free(i8* %30) #8
  %31 = load i64, i64* %9, align 8
  br label %32

32:                                               ; preds = %17, %29
  %33 = phi i64 [ %18, %17 ], [ %31, %29 ]
  %34 = add nuw i64 %20, 1
  %35 = icmp ult i64 %34, %33
  br i1 %35, label %36, label %12

36:                                               ; preds = %32
  %37 = load %struct.aom_metadata**, %struct.aom_metadata*** %4, align 8
  br label %17

38:                                               ; preds = %3, %15
  %39 = bitcast %struct.aom_metadata_array* %0 to i8*
  tail call void @free(i8* %39) #8
  br label %40

40:                                               ; preds = %1, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_img_add_metadata(%struct.aom_image*, i32, i8* readonly, i64, i32) local_unnamed_addr #0 {
  %6 = icmp eq %struct.aom_image* %0, null
  br i1 %6, label %67, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 26
  %9 = load %struct.aom_metadata_array*, %struct.aom_metadata_array** %8, align 8
  %10 = icmp eq %struct.aom_metadata_array* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = tail call noalias i8* @calloc(i64 1, i64 16) #8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  store %struct.aom_metadata_array* null, %struct.aom_metadata_array** %8, align 8
  br label %67

15:                                               ; preds = %11
  %16 = bitcast %struct.aom_metadata_array** %8 to i8**
  store i8* %12, i8** %16, align 8
  %17 = bitcast i8* %12 to %struct.aom_metadata_array*
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi %struct.aom_metadata_array* [ %17, %15 ], [ %9, %7 ]
  %20 = icmp eq i8* %2, null
  %21 = icmp eq i64 %3, 0
  %22 = or i1 %20, %21
  br i1 %22, label %67, label %23

23:                                               ; preds = %18
  %24 = tail call noalias i8* @malloc(i64 32) #8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %67, label %26

26:                                               ; preds = %23
  %27 = bitcast i8* %24 to i32*
  store i32 %1, i32* %27, align 8
  %28 = tail call noalias i8* @malloc(i64 %3) #8
  %29 = getelementptr inbounds i8, i8* %24, i64 8
  %30 = bitcast i8* %29 to i8**
  store i8* %28, i8** %30, align 8
  %31 = icmp eq i8* %28, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  tail call void @free(i8* nonnull %24) #8
  br label %67

33:                                               ; preds = %26
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %2, i64 %3, i1 false) #8
  %34 = getelementptr inbounds i8, i8* %24, i64 16
  %35 = bitcast i8* %34 to i64*
  store i64 %3, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %24, i64 24
  %37 = bitcast i8* %36 to i32*
  store i32 %4, i32* %37, align 8
  %38 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %19, i64 0, i32 1
  %39 = bitcast %struct.aom_metadata*** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %19, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = shl i64 %42, 3
  %44 = add i64 %43, 8
  %45 = tail call i8* @realloc(i8* %40, i64 %44) #8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %52

47:                                               ; preds = %33
  %48 = load i8*, i8** %30, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  tail call void @free(i8* nonnull %48) #8
  br label %51

51:                                               ; preds = %47, %50
  tail call void @free(i8* nonnull %24) #8
  br label %67

52:                                               ; preds = %33
  %53 = load %struct.aom_metadata_array*, %struct.aom_metadata_array** %8, align 8
  %54 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %53, i64 0, i32 1
  %55 = bitcast %struct.aom_metadata*** %54 to i8**
  store i8* %45, i8** %55, align 8
  %56 = load %struct.aom_metadata_array*, %struct.aom_metadata_array** %8, align 8
  %57 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %56, i64 0, i32 1
  %58 = load %struct.aom_metadata**, %struct.aom_metadata*** %57, align 8
  %59 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %56, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %struct.aom_metadata*, %struct.aom_metadata** %58, i64 %60
  %62 = bitcast %struct.aom_metadata** %61 to i8**
  store i8* %24, i8** %62, align 8
  %63 = load %struct.aom_metadata_array*, %struct.aom_metadata_array** %8, align 8
  %64 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %63, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %64, align 8
  br label %67

67:                                               ; preds = %23, %32, %18, %14, %52, %51, %5
  %68 = phi i32 [ -1, %5 ], [ 0, %52 ], [ -1, %51 ], [ -1, %14 ], [ -1, %18 ], [ -1, %32 ], [ -1, %23 ]
  ret i32 %68
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.aom_metadata* @aom_img_get_metadata(%struct.aom_image* readonly, i64) local_unnamed_addr #4 {
  %3 = icmp eq %struct.aom_image* %0, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 26
  %6 = load %struct.aom_metadata_array*, %struct.aom_metadata_array** %5, align 8
  %7 = icmp eq %struct.aom_metadata_array* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %6, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %1
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %6, i64 0, i32 1
  %14 = load %struct.aom_metadata**, %struct.aom_metadata*** %13, align 8
  %15 = getelementptr inbounds %struct.aom_metadata*, %struct.aom_metadata** %14, i64 %1
  %16 = load %struct.aom_metadata*, %struct.aom_metadata** %15, align 8
  br label %17

17:                                               ; preds = %12, %4, %8, %2
  %18 = phi %struct.aom_metadata* [ null, %2 ], [ %16, %12 ], [ null, %4 ], [ null, %8 ]
  ret %struct.aom_metadata* %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @aom_img_num_metadata(%struct.aom_image* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.aom_image* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.aom_image, %struct.aom_image* %0, i64 0, i32 26
  %5 = load %struct.aom_metadata_array*, %struct.aom_metadata_array** %4, align 8
  %6 = icmp eq %struct.aom_metadata_array* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.aom_metadata_array, %struct.aom_metadata_array* %5, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %1, %3, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i64 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare i8* @aom_memalign(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
