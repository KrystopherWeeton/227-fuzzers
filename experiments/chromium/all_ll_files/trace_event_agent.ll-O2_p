; ModuleID = '../../services/tracing/public/cpp/trace_event_agent.cc'
source_filename = "../../services/tracing/public/cpp/trace_event_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [32 x i8] }
%"class.tracing::TraceEventAgent" = type { %"class.tracing::BaseAgent", %"class.std::__1::vector" }
%"class.tracing::BaseAgent" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"*, %"class.std::__1::__compressed_pair" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::RepeatingCallback"* }
%"class.base::RepeatingCallback.2" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.278" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::trace_event::TraceLog" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.base::Lock", i8, i32, %"class.std::__1::unique_ptr", %"class.std::__1::vector.6", %"class.base::Lock", i8, %"class.std::__1::vector.14", %"class.std::__1::map", %"class.std::__1::vector.29", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", i32, [4 x i8], %"class.std::__1::unordered_map.61", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.85", %"class.std::__1::unordered_map.109", %"class.base::TimeTicks", i64, i32, %"class.base::TimeDelta", %"struct.std::__1::atomic.137", %"class.base::trace_event::TraceConfig", %"class.std::__1::vector.186", %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalBoolean", %"class.base::ThreadLocalBoolean", %"class.std::__1::unordered_map.245", %"class.std::__1::unique_ptr.269", i64, %"class.base::RepeatingCallback.275", %class.scoped_refptr.276, %"class.base::RepeatingCallback.2", %"class.base::RepeatingCallback.278", i64, i8, %"struct.std::__1::atomic.279", %"struct.std::__1::atomic.301", %"struct.std::__1::atomic.305", {}* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::trace_event::TraceBuffer"* }
%"class.base::trace_event::TraceBuffer" = type opaque
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::unique_ptr.8"*, %"class.std::__1::unique_ptr.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.8"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.std::__1::__compressed_pair.16" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::unique_ptr.31" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::unique_ptr.31"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.61" = type { %"class.std::__1::__hash_table.62" }
%"class.std::__1::__hash_table.62" = type <{ %"class.std::__1::unique_ptr.63", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.66"** }
%"struct.std::__1::__hash_node_base.66" = type { %"struct.std::__1::__hash_node_base.66"* }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__bucket_list_deallocator.68" }
%"class.std::__1::__bucket_list_deallocator.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base.66" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { float }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.42", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.57", [4 x i8] }>
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unordered_map.85" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.90" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unordered_map.109" = type { %"class.std::__1::__hash_table.110" }
%"class.std::__1::__hash_table.110" = type <{ %"class.std::__1::unique_ptr.111", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.131", [4 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.114"** }
%"struct.std::__1::__hash_node_base.114" = type { %"struct.std::__1::__hash_node_base.114"* }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::__bucket_list_deallocator.116" }
%"class.std::__1::__bucket_list_deallocator.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::__hash_node_base.114" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i32 }
%"class.base::trace_event::TraceConfig" = type { i32, i64, i64, i8, %"class.base::trace_event::TraceConfigCategoryFilter", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"class.base::trace_event::TraceConfig::ProcessFilterConfig", %"class.std::__1::vector.186", %"class.std::__1::unordered_set.222", %"class.std::__1::unordered_set.222" }
%"class.base::trace_event::TraceConfigCategoryFilter" = type { %"class.std::__1::vector.142", %"class.std::__1::vector.142", %"class.std::__1::vector.142" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::basic_string"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig" = type <{ %"class.std::__1::set", %"class.std::__1::vector.158", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler", [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.149" }
%"class.std::__1::__tree.149" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"class.std::__1::__compressed_pair.160" }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler" = type { i32 }
%"class.base::trace_event::TraceConfig::ProcessFilterConfig" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.165" }
%"class.std::__1::__hash_table.165" = type <{ %"class.std::__1::unique_ptr.166", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.183", [4 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base.169"** }
%"struct.std::__1::__hash_node_base.169" = type { %"struct.std::__1::__hash_node_base.169"* }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::__bucket_list_deallocator.171" }
%"class.std::__1::__bucket_list_deallocator.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.169" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unordered_set.222" = type { %"class.std::__1::__hash_table.223" }
%"class.std::__1::__hash_table.223" = type <{ %"class.std::__1::unique_ptr.224", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.241", [4 x i8] }>
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base.227"** }
%"struct.std::__1::__hash_node_base.227" = type { %"struct.std::__1::__hash_node_base.227"* }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::__bucket_list_deallocator.229" }
%"class.std::__1::__bucket_list_deallocator.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.227" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.std::__1::__compressed_pair.217" }
%"class.base::trace_event::TraceConfig::EventFilterConfig" = type { %"class.std::__1::basic_string", %"class.base::trace_event::TraceConfigCategoryFilter", %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.188" }
%"union.absl::variant_internal::DestructibleUnionImpl.188" = type { %"union.absl::variant_internal::DestructibleUnionImpl.189" }
%"union.absl::variant_internal::DestructibleUnionImpl.189" = type { %"union.absl::variant_internal::DestructibleUnionImpl.190" }
%"union.absl::variant_internal::DestructibleUnionImpl.190" = type { %"union.absl::variant_internal::DestructibleUnionImpl.191" }
%"union.absl::variant_internal::DestructibleUnionImpl.191" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer.244" }
%"class.base::ThreadLocalPointer.244" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::unordered_map.245" = type { %"class.std::__1::__hash_table.246" }
%"class.std::__1::__hash_table.246" = type <{ %"class.std::__1::unique_ptr.247", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.265", [4 x i8] }>
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.250"** }
%"struct.std::__1::__hash_node_base.250" = type { %"struct.std::__1::__hash_node_base.250"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator.252" }
%"class.std::__1::__bucket_list_deallocator.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.250" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.base::trace_event::TraceBufferChunk" = type opaque
%"class.base::RepeatingCallback.275" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.276 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.277" }>
%"class.base::RefCountedThreadSafe.277" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.279" = type { %"struct.std::__1::__atomic_base.280" }
%"struct.std::__1::__atomic_base.280" = type { %"struct.std::__1::__cxx_atomic_impl.281" }
%"struct.std::__1::__cxx_atomic_impl.281" = type { %"struct.std::__1::__cxx_atomic_base_impl.282" }
%"struct.std::__1::__cxx_atomic_base_impl.282" = type { void (%"class.base::trace_event::TraceEvent"*, i1, %"struct.base::trace_event::TraceEventHandle"*)* }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon.300, i32, i64, i8, [7 x i8] }>
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.283" }
%"class.base::time_internal::TimeBase.283" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%union.anon.300 = type { i32 }
%"struct.base::trace_event::TraceEventHandle" = type { i32, i32 }
%"struct.std::__1::atomic.301" = type { %"struct.std::__1::__atomic_base.302" }
%"struct.std::__1::__atomic_base.302" = type { %"struct.std::__1::__cxx_atomic_impl.303" }
%"struct.std::__1::__cxx_atomic_impl.303" = type { %"struct.std::__1::__cxx_atomic_base_impl.304" }
%"struct.std::__1::__cxx_atomic_base_impl.304" = type { void ()* }
%"struct.std::__1::atomic.305" = type { %"struct.std::__1::__atomic_base.306" }
%"struct.std::__1::__atomic_base.306" = type { %"struct.std::__1::__cxx_atomic_impl.307" }
%"struct.std::__1::__cxx_atomic_impl.307" = type { %"struct.std::__1::__cxx_atomic_base_impl.308" }
%"struct.std::__1::__cxx_atomic_base_impl.308" = type { void (i8*, i8*, i64, i32, i1, %"class.base::TimeTicks"*, %"class.base::ThreadTicks"*, i64)* }
%"class.tracing::PerfettoTracedProcess" = type { %"class.tracing::PerfettoTracingBackend::Delegate", %"class.perfetto::TracingPolicy", %"class.base::Lock", %"class.base::RepeatingCallback.311", %class.scoped_refptr.276, i8, %"class.base::Lock", %"class.std::__1::set.312", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.340", %class.scoped_refptr.276, %"class.tracing::mojom::TracingService"* ()*, %"class.base::OnceCallback" }
%"class.tracing::PerfettoTracingBackend::Delegate" = type { i32 (...)** }
%"class.perfetto::TracingPolicy" = type { i32 (...)** }
%"class.base::RepeatingCallback.311" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::set.312" = type { %"class.std::__1::__tree.313" }
%"class.std::__1::__tree.313" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.tracing::ProducerClient"* }
%"class.tracing::ProducerClient" = type opaque
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.tracing::SystemProducer"* }
%"class.tracing::SystemProducer" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.base::tracing::PerfettoPlatform"* }
%"class.base::tracing::PerfettoPlatform" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.tracing::PerfettoTracingBackend"* }
%"class.tracing::PerfettoTracingBackend" = type { %"class.perfetto::TracingBackend", %"class.tracing::PerfettoTracingBackend::Delegate"* }
%"class.perfetto::TracingBackend" = type { i32 (...)** }
%"class.tracing::mojom::TracingService" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.tracing::TraceEventDataSource" = type { %"class.tracing::PerfettoTracedProcess::DataSourceBase", i8, %"class.base::OnceCallback.346", %"class.base::TimeTicks", %"struct.std::__1::atomic.347", %"class.base::Lock", %"class.tracing::PerfettoProducer"*, i32, %"class.std::__1::unique_ptr.351", i8, i8, %"class.base::OnceCallback.346", %"class.std::__1::vector.142", %"class.std::__1::map.357", %"class.std::__1::vector.142", i8, %"class.std::__1::basic_string", i32, %"class.base::RepeatingCallback.367" }
%"class.tracing::PerfettoTracedProcess::DataSourceBase" = type { i32 (...)**, i64, %"class.std::__1::basic_string", %"class.tracing::PerfettoProducer"* }
%"struct.std::__1::atomic.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__cxx_atomic_impl.349" }
%"struct.std::__1::__cxx_atomic_impl.349" = type { %"struct.std::__1::__cxx_atomic_base_impl.350" }
%"struct.std::__1::__cxx_atomic_base_impl.350" = type { %"struct.tracing::TraceEventDataSource::SessionFlags" }
%"struct.tracing::TraceEventDataSource::SessionFlags" = type { i32 }
%"class.tracing::PerfettoProducer" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.perfetto::TraceWriter"* }
%"class.perfetto::TraceWriter" = type { %"class.perfetto::TraceWriterBase" }
%"class.perfetto::TraceWriterBase" = type { i32 (...)** }
%"class.base::OnceCallback.346" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::map.357" = type { %"class.std::__1::__tree.358" }
%"class.std::__1::__tree.358" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.359", %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::RepeatingCallback.367" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.310" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::set.368" = type { %"class.std::__1::__tree.369" }
%"class.std::__1::__tree.369" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.370", %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.tracing::TraceEventMetadataSource" = type <{ %"class.tracing::PerfettoTracedProcess::DataSourceBase", %"class.base::Lock", %"class.std::__1::vector", %"class.std::__1::vector.377", %"class.std::__1::vector.385", %class.scoped_refptr.276, %"class.std::__1::unique_ptr.351", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.393", i8, [7 x i8] }>
%"class.std::__1::vector.377" = type { %"class.std::__1::__vector_base.378" }
%"class.std::__1::__vector_base.378" = type { %"class.base::RepeatingCallback.379"*, %"class.base::RepeatingCallback.379"*, %"class.std::__1::__compressed_pair.380" }
%"class.base::RepeatingCallback.379" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.base::RepeatingCallback.379"* }
%"class.std::__1::vector.385" = type { %"class.std::__1::__vector_base.386" }
%"class.std::__1::__vector_base.386" = type { %"class.base::RepeatingCallback.387"*, %"class.base::RepeatingCallback.387"*, %"class.std::__1::__compressed_pair.388" }
%"class.base::RepeatingCallback.387" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.base::RepeatingCallback.387"* }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.base::trace_event::TraceConfig"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKcS4_PNS_17RepeatingCallbackIFbS4_EEEEJEEES9_E3RunEPNS0_13BindStateBaseES4_S4_S8_ = comdat any

$_ZN4base8internal9BindStateIPFbPKcS3_PNS_17RepeatingCallbackIFbS3_EEEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJEEESC_E3RunEPNS0_13BindStateBaseESB_ = comdat any

$_ZN4base8internal9BindStateIPFbRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN4base17RepeatingCallbackIFNS_10unique_ptrINS1_15DictionaryValueENS_14default_deleteIS4_EEEEvEEENS_9allocatorIS9_EEE21__push_back_slow_pathIRKS9_EEvOT_ = comdat any

@_ZZN7tracing15TraceEventAgent11GetInstanceEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN7tracing15TraceEventAgent11GetInstanceEvE8instance = internal global i64 0, align 8
@_ZTVN7tracing15TraceEventAgentE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tracing::TraceEventAgent"*)* @_ZN7tracing15TraceEventAgentD2Ev to i8*), i8* bitcast (void (%"class.tracing::TraceEventAgent"*)* @_ZN7tracing15TraceEventAgentD0Ev to i8*), i8* bitcast (void (%"class.tracing::TraceEventAgent"*, %"class.std::__1::set.368"*)* @_ZN7tracing15TraceEventAgent13GetCategoriesEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [59 x i8] c"tracing_categories_exhausted._must_increase_kMaxCategories\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"tracing_already_shutdown\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"__metadata\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"accessibility\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"AccountFetcherService\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"android_webview\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"aogh\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"audio\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"benchmark\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"blink\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"blink.animations\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"blink.bindings\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"blink.console\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"blink.net\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"blink.resource\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"blink.user_timing\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"blink.worker\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"blink_gc\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"blink_style\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"Blob\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"browser\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"browsing_data\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"CacheStorage\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"Calculators\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"CameraStream\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"camera\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"cast_app\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"cast_perf_test\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"cast.mdns\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"cast.mdns.socket\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"cast.stream\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"cc\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"cc.debug\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"cdp.perf\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"chromeos\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"cma\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"compositor\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"content\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"content_capture\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"devtools\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"devtools.contrast\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"devtools.timeline\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"disk_cache\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"download\00", align 1
@.str.46 = private unnamed_addr constant [17 x i8] c"download_service\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"drm\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"drmcursor\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"dwrite\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"DXVA_Decoding\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"evdev\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"exo\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"explore_sites\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"FileSystem\00", align 1
@.str.56 = private unnamed_addr constant [21 x i8] c"file_system_provider\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"fonts\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"GAMEPAD\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"gpu\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"gpu.angle\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"gpu.capture\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"headless\00", align 1
@.str.63 = private unnamed_addr constant [11 x i8] c"hwoverlays\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"identity\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"ime\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"IndexedDB\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"io\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"ipc\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"Java\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"jni\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"jpeg\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"latency\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"latencyInfo\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"leveldb\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"loading\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"media\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"media_router\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"midi\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"mojom\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"mus\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"native\00", align 1
@.str.86 = private unnamed_addr constant [11 x i8] c"navigation\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"net\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"netlog\00", align 1
@.str.89 = private unnamed_addr constant [14 x i8] c"offline_pages\00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"omnibox\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"oobe\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"ozone\00", align 1
@.str.93 = private unnamed_addr constant [16 x i8] c"partition_alloc\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"passwords\00", align 1
@.str.95 = private unnamed_addr constant [4 x i8] c"p2p\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"page-serialization\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"paint_preview\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"pepper\00", align 1
@.str.99 = private unnamed_addr constant [15 x i8] c"PlatformMalloc\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"power\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"ppapi\00", align 1
@.str.102 = private unnamed_addr constant [12 x i8] c"ppapi_proxy\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str.104 = private unnamed_addr constant [5 x i8] c"rail\00", align 1
@.str.105 = private unnamed_addr constant [9 x i8] c"renderer\00", align 1
@.str.106 = private unnamed_addr constant [14 x i8] c"renderer_host\00", align 1
@.str.107 = private unnamed_addr constant [19 x i8] c"renderer.scheduler\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"RLZ\00", align 1
@.str.109 = private unnamed_addr constant [14 x i8] c"safe_browsing\00", align 1
@.str.110 = private unnamed_addr constant [19 x i8] c"screenlock_monitor\00", align 1
@.str.111 = private unnamed_addr constant [17 x i8] c"sequence_manager\00", align 1
@.str.112 = private unnamed_addr constant [16 x i8] c"service_manager\00", align 1
@.str.113 = private unnamed_addr constant [14 x i8] c"ServiceWorker\00", align 1
@.str.114 = private unnamed_addr constant [8 x i8] c"sharing\00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.116 = private unnamed_addr constant [16 x i8] c"shortcut_viewer\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@.str.118 = private unnamed_addr constant [15 x i8] c"SiteEngagement\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"skia\00", align 1
@.str.120 = private unnamed_addr constant [4 x i8] c"sql\00", align 1
@.str.121 = private unnamed_addr constant [13 x i8] c"stadia_media\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"stadia_rtc\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"startup\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@.str.125 = private unnamed_addr constant [9 x i8] c"test_gpu\00", align 1
@.str.126 = private unnamed_addr constant [12 x i8] c"thread_pool\00", align 1
@.str.127 = private unnamed_addr constant [9 x i8] c"toplevel\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"toplevel.flow\00", align 1
@.str.129 = private unnamed_addr constant [3 x i8] c"ui\00", align 1
@.str.130 = private unnamed_addr constant [3 x i8] c"v8\00", align 1
@.str.131 = private unnamed_addr constant [11 x i8] c"v8.execute\00", align 1
@.str.132 = private unnamed_addr constant [8 x i8] c"v8.wasm\00", align 1
@.str.133 = private unnamed_addr constant [28 x i8] c"ValueStoreFrontend::Backend\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"views\00", align 1
@.str.135 = private unnamed_addr constant [12 x i8] c"views.frame\00", align 1
@.str.136 = private unnamed_addr constant [4 x i8] c"viz\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"vk\00", align 1
@.str.138 = private unnamed_addr constant [8 x i8] c"wayland\00", align 1
@.str.139 = private unnamed_addr constant [9 x i8] c"webaudio\00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"weblayer\00", align 1
@.str.141 = private unnamed_addr constant [8 x i8] c"WebCore\00", align 1
@.str.142 = private unnamed_addr constant [7 x i8] c"webrtc\00", align 1
@.str.143 = private unnamed_addr constant [3 x i8] c"xr\00", align 1
@.str.144 = private unnamed_addr constant [38 x i8] c"disabled-by-default-animation-worklet\00", align 1
@.str.145 = private unnamed_addr constant [26 x i8] c"disabled-by-default-audio\00", align 1
@.str.146 = private unnamed_addr constant [34 x i8] c"disabled-by-default-audio-worklet\00", align 1
@.str.147 = private unnamed_addr constant [25 x i8] c"disabled-by-default-base\00", align 1
@.str.148 = private unnamed_addr constant [32 x i8] c"disabled-by-default-blink.debug\00", align 1
@.str.149 = private unnamed_addr constant [45 x i8] c"disabled-by-default-blink.debug.display_lock\00", align 1
@.str.150 = private unnamed_addr constant [39 x i8] c"disabled-by-default-blink.debug.layout\00", align 1
@.str.151 = private unnamed_addr constant [45 x i8] c"disabled-by-default-blink.debug.layout.trees\00", align 1
@.str.152 = private unnamed_addr constant [40 x i8] c"disabled-by-default-blink.feature_usage\00", align 1
@.str.153 = private unnamed_addr constant [29 x i8] c"disabled-by-default-blink_gc\00", align 1
@.str.154 = private unnamed_addr constant [41 x i8] c"disabled-by-default-blink.image_decoding\00", align 1
@.str.155 = private unnamed_addr constant [39 x i8] c"disabled-by-default-blink.invalidation\00", align 1
@.str.156 = private unnamed_addr constant [23 x i8] c"disabled-by-default-cc\00", align 1
@.str.157 = private unnamed_addr constant [29 x i8] c"disabled-by-default-cc.debug\00", align 1
@.str.158 = private unnamed_addr constant [38 x i8] c"disabled-by-default-cc.debug.cdp-perf\00", align 1
@.str.159 = private unnamed_addr constant [43 x i8] c"disabled-by-default-cc.debug.display_items\00", align 1
@.str.160 = private unnamed_addr constant [37 x i8] c"disabled-by-default-cc.debug.picture\00", align 1
@.str.161 = private unnamed_addr constant [39 x i8] c"disabled-by-default-cc.debug.scheduler\00", align 1
@.str.162 = private unnamed_addr constant [46 x i8] c"disabled-by-default-cc.debug.scheduler.frames\00", align 1
@.str.163 = private unnamed_addr constant [43 x i8] c"disabled-by-default-cc.debug.scheduler.now\00", align 1
@.str.164 = private unnamed_addr constant [36 x i8] c"disabled-by-default-content.verbose\00", align 1
@.str.165 = private unnamed_addr constant [33 x i8] c"disabled-by-default-cpu_profiler\00", align 1
@.str.166 = private unnamed_addr constant [39 x i8] c"disabled-by-default-cpu_profiler.debug\00", align 1
@.str.167 = private unnamed_addr constant [40 x i8] c"disabled-by-default-devtools.screenshot\00", align 1
@.str.168 = private unnamed_addr constant [38 x i8] c"disabled-by-default-devtools.timeline\00", align 1
@.str.169 = private unnamed_addr constant [44 x i8] c"disabled-by-default-devtools.timeline.frame\00", align 1
@.str.170 = private unnamed_addr constant [45 x i8] c"disabled-by-default-devtools.timeline.inputs\00", align 1
@.str.171 = private unnamed_addr constant [59 x i8] c"disabled-by-default-devtools.timeline.invalidationTracking\00", align 1
@.str.172 = private unnamed_addr constant [45 x i8] c"disabled-by-default-devtools.timeline.layers\00", align 1
@.str.173 = private unnamed_addr constant [46 x i8] c"disabled-by-default-devtools.timeline.picture\00", align 1
@.str.174 = private unnamed_addr constant [25 x i8] c"disabled-by-default-file\00", align 1
@.str.175 = private unnamed_addr constant [26 x i8] c"disabled-by-default-fonts\00", align 1
@.str.176 = private unnamed_addr constant [34 x i8] c"disabled-by-default-gpu_cmd_queue\00", align 1
@.str.177 = private unnamed_addr constant [29 x i8] c"disabled-by-default-gpu.dawn\00", align 1
@.str.178 = private unnamed_addr constant [30 x i8] c"disabled-by-default-gpu.debug\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"disabled-by-default-gpu.decoder\00", align 1
@.str.180 = private unnamed_addr constant [31 x i8] c"disabled-by-default-gpu.device\00", align 1
@.str.181 = private unnamed_addr constant [32 x i8] c"disabled-by-default-gpu.service\00", align 1
@.str.182 = private unnamed_addr constant [35 x i8] c"disabled-by-default-gpu.vulkan.vma\00", align 1
@.str.183 = private unnamed_addr constant [38 x i8] c"disabled-by-default-histogram_samples\00", align 1
@.str.184 = private unnamed_addr constant [39 x i8] c"disabled-by-default-java-heap-profiler\00", align 1
@.str.185 = private unnamed_addr constant [34 x i8] c"disabled-by-default-layer-element\00", align 1
@.str.186 = private unnamed_addr constant [39 x i8] c"disabled-by-default-layout_shift.debug\00", align 1
@.str.187 = private unnamed_addr constant [31 x i8] c"disabled-by-default-lifecycles\00", align 1
@.str.188 = private unnamed_addr constant [28 x i8] c"disabled-by-default-loading\00", align 1
@.str.189 = private unnamed_addr constant [32 x i8] c"disabled-by-default-mediastream\00", align 1
@.str.190 = private unnamed_addr constant [33 x i8] c"disabled-by-default-memory-infra\00", align 1
@.str.191 = private unnamed_addr constant [47 x i8] c"disabled-by-default-memory-infra.v8.code_stats\00", align 1
@.str.192 = private unnamed_addr constant [26 x i8] c"disabled-by-default-mojom\00", align 1
@.str.193 = private unnamed_addr constant [24 x i8] c"disabled-by-default-net\00", align 1
@.str.194 = private unnamed_addr constant [28 x i8] c"disabled-by-default-network\00", align 1
@.str.195 = private unnamed_addr constant [34 x i8] c"disabled-by-default-paint-worklet\00", align 1
@.str.196 = private unnamed_addr constant [26 x i8] c"disabled-by-default-power\00", align 1
@.str.197 = private unnamed_addr constant [39 x i8] c"disabled-by-default-renderer.scheduler\00", align 1
@.str.198 = private unnamed_addr constant [45 x i8] c"disabled-by-default-renderer.scheduler.debug\00", align 1
@.str.199 = private unnamed_addr constant [28 x i8] c"disabled-by-default-sandbox\00", align 1
@.str.200 = private unnamed_addr constant [37 x i8] c"disabled-by-default-sequence_manager\00", align 1
@.str.201 = private unnamed_addr constant [43 x i8] c"disabled-by-default-sequence_manager.debug\00", align 1
@.str.202 = private unnamed_addr constant [55 x i8] c"disabled-by-default-sequence_manager.verbose_snapshots\00", align 1
@.str.203 = private unnamed_addr constant [25 x i8] c"disabled-by-default-skia\00", align 1
@.str.204 = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@.str.205 = private unnamed_addr constant [35 x i8] c"disabled-by-default-skia.gpu.cache\00", align 1
@.str.206 = private unnamed_addr constant [33 x i8] c"disabled-by-default-skia.shaders\00", align 1
@.str.207 = private unnamed_addr constant [35 x i8] c"disabled-by-default-SyncFileSystem\00", align 1
@.str.208 = private unnamed_addr constant [33 x i8] c"disabled-by-default-system_stats\00", align 1
@.str.209 = private unnamed_addr constant [44 x i8] c"disabled-by-default-thread_pool_diagnostics\00", align 1
@.str.210 = private unnamed_addr constant [33 x i8] c"disabled-by-default-toplevel.ipc\00", align 1
@.str.211 = private unnamed_addr constant [40 x i8] c"disabled-by-default-user_action_samples\00", align 1
@.str.212 = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.compile\00", align 1
@.str.213 = private unnamed_addr constant [36 x i8] c"disabled-by-default-v8.cpu_profiler\00", align 1
@.str.214 = private unnamed_addr constant [26 x i8] c"disabled-by-default-v8.gc\00", align 1
@.str.215 = private unnamed_addr constant [32 x i8] c"disabled-by-default-v8.gc_stats\00", align 1
@.str.216 = private unnamed_addr constant [32 x i8] c"disabled-by-default-v8.ic_stats\00", align 1
@.str.217 = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.218 = private unnamed_addr constant [37 x i8] c"disabled-by-default-v8.runtime_stats\00", align 1
@.str.219 = private unnamed_addr constant [46 x i8] c"disabled-by-default-v8.runtime_stats_sampling\00", align 1
@.str.220 = private unnamed_addr constant [35 x i8] c"disabled-by-default-v8.stack_trace\00", align 1
@.str.221 = private unnamed_addr constant [32 x i8] c"disabled-by-default-v8.turbofan\00", align 1
@.str.222 = private unnamed_addr constant [37 x i8] c"disabled-by-default-v8.wasm.detailed\00", align 1
@.str.223 = private unnamed_addr constant [37 x i8] c"disabled-by-default-v8.wasm.turbofan\00", align 1
@.str.224 = private unnamed_addr constant [44 x i8] c"disabled-by-default-video_and_image_capture\00", align 1
@.str.225 = private unnamed_addr constant [43 x i8] c"disabled-by-default-viz.gpu_composite_time\00", align 1
@.str.226 = private unnamed_addr constant [45 x i8] c"disabled-by-default-viz.debug.overlay_planes\00", align 1
@.str.227 = private unnamed_addr constant [41 x i8] c"disabled-by-default-viz.hit_testing_flow\00", align 1
@.str.228 = private unnamed_addr constant [33 x i8] c"disabled-by-default-viz.overdraw\00", align 1
@.str.229 = private unnamed_addr constant [30 x i8] c"disabled-by-default-viz.quads\00", align 1
@.str.230 = private unnamed_addr constant [40 x i8] c"disabled-by-default-viz.surface_id_flow\00", align 1
@.str.231 = private unnamed_addr constant [41 x i8] c"disabled-by-default-viz.surface_lifetime\00", align 1
@.str.232 = private unnamed_addr constant [34 x i8] c"disabled-by-default-viz.triangles\00", align 1
@.str.233 = private unnamed_addr constant [39 x i8] c"disabled-by-default-webaudio.audionode\00", align 1
@.str.234 = private unnamed_addr constant [27 x i8] c"disabled-by-default-webrtc\00", align 1
@.str.235 = private unnamed_addr constant [37 x i8] c"disabled-by-default-worker.scheduler\00", align 1
@.str.236 = private unnamed_addr constant [29 x i8] c"disabled-by-default-xr.debug\00", align 1
@_ZN4base11trace_event17BuiltinCategories18kBuiltinCategoriesE.const = private unnamed_addr constant [237 x i8*] [i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.236, i32 0, i32 0)], align 16

@_ZN7tracing15TraceEventAgentC1Ev = hidden unnamed_addr alias void (%"class.tracing::TraceEventAgent"*), void (%"class.tracing::TraceEventAgent"*)* @_ZN7tracing15TraceEventAgentC2Ev
@_ZN7tracing15TraceEventAgentD1Ev = hidden unnamed_addr alias void (%"class.tracing::TraceEventAgent"*), void (%"class.tracing::TraceEventAgent"*)* @_ZN7tracing15TraceEventAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.tracing::TraceEventAgent"* @_ZN7tracing15TraceEventAgent11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN7tracing15TraceEventAgent11GetInstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7tracing15TraceEventAgent11GetInstanceEvE8instance) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN7tracing15TraceEventAgentC2Ev(%"class.tracing::TraceEventAgent"* bitcast (%"class.base::NoDestructor"* @_ZZN7tracing15TraceEventAgent11GetInstanceEvE8instance to %"class.tracing::TraceEventAgent"*)) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN7tracing15TraceEventAgent11GetInstanceEvE8instance) #12
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.tracing::TraceEventAgent"* bitcast (%"class.base::NoDestructor"* @_ZZN7tracing15TraceEventAgent11GetInstanceEvE8instance to %"class.tracing::TraceEventAgent"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing15TraceEventAgentC2Ev(%"class.tracing::TraceEventAgent"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback.2", align 8
  %3 = alloca %"class.base::RepeatingCallback.2", align 8
  %4 = alloca %"class.base::RepeatingCallback.278", align 8
  %5 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 0
  tail call void @_ZN7tracing9BaseAgentC2Ev(%"class.tracing::BaseAgent"* %5) #12
  %6 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7tracing15TraceEventAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = bitcast %"class.base::RepeatingCallback.2"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #12
  call void @_ZNK4base11trace_event8TraceLog26GetArgumentFilterPredicateEv(%"class.base::RepeatingCallback.2"* nonnull sret %2, %"class.base::trace_event::TraceLog"* %10) #12
  %11 = getelementptr inbounds %"class.base::RepeatingCallback.2", %"class.base::RepeatingCallback.2"* %2, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RepeatingCallback.2", %"class.base::RepeatingCallback.2"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = icmp eq %"class.base::internal::BindStateBase"* %13, null
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  br i1 %14, label %15, label %32

15:                                               ; preds = %1
  %16 = call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #12
  %17 = bitcast %"class.base::RepeatingCallback.2"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = call i8* @_Znwm(i64 48) #13, !noalias !3
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, i8*, i8*, %"class.base::RepeatingCallback.310"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKcS4_PNS_17RepeatingCallbackIFbS4_EEEEJEEES9_E3RunEPNS0_13BindStateBaseES4_S4_S8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKcS3_PNS_17RepeatingCallbackIFbS3_EEEEJEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !3
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i64*
  store i64 ptrtoint (i1 (i8*, i8*, %"class.base::RepeatingCallback.310"*)* @_ZN7tracing27IsTraceEventArgsAllowlistedEPKcS1_PN4base17RepeatingCallbackIFbS1_EEE to i64), i64* %21, align 8, !noalias !3
  %22 = bitcast %"class.base::RepeatingCallback.2"* %3 to i8**
  store i8* %18, i8** %22, align 8, !alias.scope !3
  call void @_ZN4base11trace_event8TraceLog26SetArgumentFilterPredicateERKNS_17RepeatingCallbackIFbPKcS4_PNS2_IFbS4_EEEEEE(%"class.base::trace_event::TraceLog"* %16, %"class.base::RepeatingCallback.2"* nonnull dereferenceable(8) %3) #12
  %23 = getelementptr inbounds %"class.base::RepeatingCallback.2", %"class.base::RepeatingCallback.2"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %24 = call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #12
  %25 = bitcast %"class.base::RepeatingCallback.278"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = call i8* @_Znwm(i64 48) #13, !noalias !8
  %27 = bitcast i8* %26 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %27, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJEEESC_E3RunEPNS0_13BindStateBaseESB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !8
  %28 = getelementptr inbounds i8, i8* %26, i64 32
  %29 = bitcast i8* %28 to i64*
  store i64 ptrtoint (i1 (%"class.std::__1::basic_string"*)* @_ZN7tracing21IsMetadataAllowlistedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE to i64), i64* %29, align 8, !noalias !8
  %30 = bitcast %"class.base::RepeatingCallback.278"* %4 to i8**
  store i8* %26, i8** %30, align 8, !alias.scope !8
  call void @_ZN4base11trace_event8TraceLog26SetMetadataFilterPredicateERKNS_17RepeatingCallbackIFbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEE(%"class.base::trace_event::TraceLog"* %24, %"class.base::RepeatingCallback.278"* nonnull dereferenceable(8) %4) #12
  %31 = getelementptr inbounds %"class.base::RepeatingCallback.278", %"class.base::RepeatingCallback.278"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  br label %32

32:                                               ; preds = %15, %1
  %33 = call %"class.tracing::PerfettoTracedProcess"* @_ZN7tracing21PerfettoTracedProcess3GetEv() #12
  %34 = call %"class.tracing::TraceEventDataSource"* @_ZN7tracing20TraceEventDataSource11GetInstanceEv() #12
  %35 = getelementptr inbounds %"class.tracing::TraceEventDataSource", %"class.tracing::TraceEventDataSource"* %34, i64 0, i32 0
  call void @_ZN7tracing21PerfettoTracedProcess13AddDataSourceEPNS0_14DataSourceBaseE(%"class.tracing::PerfettoTracedProcess"* %33, %"class.tracing::PerfettoTracedProcess::DataSourceBase"* %35) #12
  call void @_ZN7tracing22TracingSamplerProfiler18RegisterDataSourceEv() #12
  ret void
}

declare void @_ZN7tracing9BaseAgentC2Ev(%"class.tracing::BaseAgent"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() local_unnamed_addr #2

declare void @_ZNK4base11trace_event8TraceLog26GetArgumentFilterPredicateEv(%"class.base::RepeatingCallback.2"* sret, %"class.base::trace_event::TraceLog"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base11trace_event8TraceLog26SetArgumentFilterPredicateERKNS_17RepeatingCallbackIFbPKcS4_PNS2_IFbS4_EEEEEE(%"class.base::trace_event::TraceLog"*, %"class.base::RepeatingCallback.2"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN7tracing27IsTraceEventArgsAllowlistedEPKcS1_PN4base17RepeatingCallbackIFbS1_EEE(i8*, i8*, %"class.base::RepeatingCallback.310"*) #2

declare void @_ZN4base11trace_event8TraceLog26SetMetadataFilterPredicateERKNS_17RepeatingCallbackIFbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEE(%"class.base::trace_event::TraceLog"*, %"class.base::RepeatingCallback.278"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN7tracing21IsMetadataAllowlistedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) #2

declare %"class.tracing::PerfettoTracedProcess"* @_ZN7tracing21PerfettoTracedProcess3GetEv() local_unnamed_addr #2

declare void @_ZN7tracing21PerfettoTracedProcess13AddDataSourceEPNS0_14DataSourceBaseE(%"class.tracing::PerfettoTracedProcess"*, %"class.tracing::PerfettoTracedProcess::DataSourceBase"*) local_unnamed_addr #2

declare %"class.tracing::TraceEventDataSource"* @_ZN7tracing20TraceEventDataSource11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN7tracing22TracingSamplerProfiler18RegisterDataSourceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing15TraceEventAgentD2Ev(%"class.tracing::TraceEventAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7tracing15TraceEventAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %4, align 8
  %6 = icmp eq %"class.base::RepeatingCallback"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  %9 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %9, align 8
  %11 = icmp eq %"class.base::RepeatingCallback"* %10, %5
  br i1 %11, label %20, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.base::RepeatingCallback"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %13, i64 -1
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #12
  %16 = icmp eq %"class.base::RepeatingCallback"* %14, %5
  br i1 %16, label %17, label %12

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::vector"* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %7
  %21 = phi i8* [ %19, %17 ], [ %8, %7 ]
  store %"class.base::RepeatingCallback"* %5, %"class.base::RepeatingCallback"** %9, align 8
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %1, %20
  %23 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 0
  tail call void @_ZN7tracing9BaseAgentD2Ev(%"class.tracing::BaseAgent"* %23) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7tracing9BaseAgentD2Ev(%"class.tracing::BaseAgent"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing15TraceEventAgentD0Ev(%"class.tracing::TraceEventAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7tracing15TraceEventAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %4, align 8
  %6 = icmp eq %"class.base::RepeatingCallback"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  %9 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %9, align 8
  %11 = icmp eq %"class.base::RepeatingCallback"* %10, %5
  br i1 %11, label %20, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.base::RepeatingCallback"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %13, i64 -1
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #12
  %16 = icmp eq %"class.base::RepeatingCallback"* %14, %5
  br i1 %16, label %17, label %12

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::vector"* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %7
  %21 = phi i8* [ %19, %17 ], [ %8, %7 ]
  store %"class.base::RepeatingCallback"* %5, %"class.base::RepeatingCallback"** %9, align 8
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %1, %20
  %23 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 0
  tail call void @_ZN7tracing9BaseAgentD2Ev(%"class.tracing::BaseAgent"* %23) #12
  %24 = bitcast %"class.tracing::TraceEventAgent"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing15TraceEventAgent13GetCategoriesEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.tracing::TraceEventAgent"* nocapture readnone, %"class.std::__1::set.368"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::set.368", %"class.std::__1::set.368"* %1, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %13 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %14 = getelementptr inbounds %"class.std::__1::set.368", %"class.std::__1::set.368"* %1, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::set.368"* %1 to i64*
  %16 = getelementptr inbounds %"class.std::__1::set.368", %"class.std::__1::set.368"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::set.368", %"class.std::__1::set.368"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %19

18:                                               ; preds = %71
  ret void

19:                                               ; preds = %71, %2
  %20 = phi i64 [ 3, %2 ], [ %72, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %21 = getelementptr inbounds [237 x i8*], [237 x i8*]* @_ZN4base11trace_event17BuiltinCategories18kBuiltinCategoriesE.const, i64 0, i64 %20
  %22 = load i8*, i8** %21, align 8
  %23 = call i64 @strlen(i8* %22) #12
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #14
  unreachable

27:                                               ; preds = %19
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = call i8* @_Znwm(i64 %31) #13
  store i8* %32, i8** %6, align 8
  %33 = or i64 %31, -9223372036854775808
  store i64 %33, i64* %7, align 8
  store i64 %23, i64* %8, align 8
  br label %37

34:                                               ; preds = %27
  %35 = trunc i64 %23 to i8
  store i8 %35, i8* %10, align 1
  %36 = icmp eq i64 %23, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34, %29
  %38 = phi i8* [ %32, %29 ], [ %5, %34 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %22, i64 %23, i1 false) #12
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i8* [ %5, %34 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %23
  store i8 0, i8* %41, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %42 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.369"* %11, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node"**
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %66

46:                                               ; preds = %39
  %47 = call i8* @_Znwm(i64 56) #13, !noalias !13
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %5, i64 24, i1 false) #12, !noalias !13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #12, !noalias !13
  %49 = load i64, i64* %13, align 8
  %50 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %51 = getelementptr inbounds i8, i8* %47, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #12
  %52 = bitcast i8* %51 to i64*
  store i64 %49, i64* %52, align 8
  %53 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %53, align 8
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %46
  %59 = ptrtoint %"class.std::__1::__tree_node_base"* %56 to i64
  store i64 %59, i64* %15, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %61

61:                                               ; preds = %58, %46
  %62 = phi %"class.std::__1::__tree_node_base"* [ %50, %46 ], [ %60, %58 ]
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %63, %"class.std::__1::__tree_node_base"* %62) #12
  %64 = load i64, i64* %17, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %17, align 8
  br label %66

66:                                               ; preds = %39, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %67 = load i8, i8* %10, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  %72 = add nuw nsw i64 %20, 1
  %73 = icmp eq i64 %72, 237
  br i1 %73, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing15TraceEventAgent28AddMetadataGeneratorFunctionEN4base17RepeatingCallbackIFNSt3__110unique_ptrINS1_15DictionaryValueENS3_14default_deleteIS5_EEEEvEEE(%"class.tracing::TraceEventAgent"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %4, align 8
  %6 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %6, align 8
  %8 = icmp eq %"class.base::RepeatingCallback"* %5, %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %10, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %11) #12
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 1
  %13 = ptrtoint %"class.base::RepeatingCallback"* %12 to i64
  %14 = bitcast %"class.base::RepeatingCallback"** %4 to i64*
  store i64 %13, i64* %14, align 8
  br label %17

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.tracing::TraceEventAgent", %"class.tracing::TraceEventAgent"* %0, i64 0, i32 1
  tail call void @_ZNSt3__16vectorIN4base17RepeatingCallbackIFNS_10unique_ptrINS1_15DictionaryValueENS_14default_deleteIS4_EEEEvEEENS_9allocatorIS9_EEE21__push_back_slow_pathIRKS9_EEvOT_(%"class.std::__1::vector"* %16, %"class.base::RepeatingCallback"* dereferenceable(8) %1) #12
  br label %17

17:                                               ; preds = %9, %15
  %18 = tail call %"class.tracing::TraceEventMetadataSource"* @_ZN7tracing24TraceEventMetadataSource11GetInstanceEv() #12
  %19 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %19, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %20) #12
  call void @_ZN7tracing24TraceEventMetadataSource20AddGeneratorFunctionEN4base17RepeatingCallbackIFNSt3__110unique_ptrINS1_15DictionaryValueENS3_14default_deleteIS5_EEEEvEEE(%"class.tracing::TraceEventMetadataSource"* %18, %"class.base::RepeatingCallback"* nonnull %3) #12
  %21 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #12
  ret void
}

declare %"class.tracing::TraceEventMetadataSource"* @_ZN7tracing24TraceEventMetadataSource11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN7tracing24TraceEventMetadataSource20AddGeneratorFunctionEN4base17RepeatingCallbackIFNSt3__110unique_ptrINS1_15DictionaryValueENS3_14default_deleteIS5_EEEEvEEE(%"class.tracing::TraceEventMetadataSource"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #2

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKcS4_PNS_17RepeatingCallbackIFbS4_EEEEJEEES9_E3RunEPNS0_13BindStateBaseES4_S4_S8_(%"class.base::internal::BindStateBase"*, i8*, i8*, %"class.base::RepeatingCallback.310"*) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to i1 (i8*, i8*, %"class.base::RepeatingCallback.310"*)**
  %7 = load i1 (i8*, i8*, %"class.base::RepeatingCallback.310"*)*, i1 (i8*, i8*, %"class.base::RepeatingCallback.310"*)** %6, align 8
  %8 = tail call zeroext i1 %7(i8* %1, i8* %2, %"class.base::RepeatingCallback.310"* %3) #12
  ret i1 %8
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKcS3_PNS_17RepeatingCallbackIFbS3_EEEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJEEESC_E3RunEPNS0_13BindStateBaseESB_(%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to i1 (%"class.std::__1::basic_string"*)**
  %5 = load i1 (%"class.std::__1::basic_string"*)*, i1 (%"class.std::__1::basic_string"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.369"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.369", %"class.std::__1::__tree.369"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.369", %"class.std::__1::__tree.369"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !16
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base17RepeatingCallbackIFNS_10unique_ptrINS1_15DictionaryValueENS_14default_deleteIS4_EEEEvEEENS_9allocatorIS9_EEE21__push_back_slow_pathIRKS9_EEvOT_(%"class.std::__1::vector"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::RepeatingCallback"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::RepeatingCallback"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.base::RepeatingCallback"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::RepeatingCallback"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %36, i64 %35
  %39 = ptrtoint %"class.base::RepeatingCallback"* %38 to i64
  %40 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %40, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %41) #12
  %42 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %37, i64 1
  %43 = ptrtoint %"class.base::RepeatingCallback"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %45 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %44, align 8
  %46 = ptrtoint %"class.base::RepeatingCallback"* %45 to i64
  %47 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %3, align 8
  %48 = icmp eq %"class.base::RepeatingCallback"* %47, %45
  br i1 %48, label %130, label %49

49:                                               ; preds = %34
  %50 = getelementptr %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %47, i64 -1, i32 0, i32 0, i32 0, i32 0
  %51 = ptrtoint %"class.base::internal::BindStateBase"** %50 to i64
  %52 = sub i64 %51, %46
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %49, %57
  %58 = phi %"class.base::RepeatingCallback"* [ %61, %57 ], [ %37, %49 ]
  %59 = phi %"class.base::RepeatingCallback"* [ %62, %57 ], [ %47, %49 ]
  %60 = phi i64 [ %67, %57 ], [ %55, %49 ]
  %61 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %58, i64 -1
  %62 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %59, i64 -1
  %63 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::RepeatingCallback"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::RepeatingCallback"* %61 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !17

69:                                               ; preds = %57, %49
  %70 = phi %"class.base::RepeatingCallback"* [ undef, %49 ], [ %61, %57 ]
  %71 = phi %"class.base::RepeatingCallback"* [ %37, %49 ], [ %61, %57 ]
  %72 = phi %"class.base::RepeatingCallback"* [ %47, %49 ], [ %62, %57 ]
  %73 = icmp ult i64 %52, 56
  br i1 %73, label %126, label %74

74:                                               ; preds = %69, %74
  %75 = phi %"class.base::RepeatingCallback"* [ %119, %74 ], [ %71, %69 ]
  %76 = phi %"class.base::RepeatingCallback"* [ %120, %74 ], [ %72, %69 ]
  %77 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -1
  %78 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -1
  %79 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.base::RepeatingCallback"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.base::RepeatingCallback"* %77 to i64*
  store i64 %81, i64* %82, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %79, align 8
  %83 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -2
  %84 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -2
  %85 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.base::RepeatingCallback"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.base::RepeatingCallback"* %83 to i64*
  store i64 %87, i64* %88, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %85, align 8
  %89 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -3
  %90 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -3
  %91 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.base::RepeatingCallback"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::RepeatingCallback"* %89 to i64*
  store i64 %93, i64* %94, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %91, align 8
  %95 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -4
  %96 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -4
  %97 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.base::RepeatingCallback"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.base::RepeatingCallback"* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8
  %101 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -5
  %102 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -5
  %103 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.base::RepeatingCallback"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.base::RepeatingCallback"* %101 to i64*
  store i64 %105, i64* %106, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %103, align 8
  %107 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -6
  %108 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -6
  %109 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.base::RepeatingCallback"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.base::RepeatingCallback"* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %109, align 8
  %113 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -7
  %114 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -7
  %115 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.base::RepeatingCallback"* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.base::RepeatingCallback"* %113 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %115, align 8
  %119 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -8
  %120 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -8
  %121 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.base::RepeatingCallback"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.base::RepeatingCallback"* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %121, align 8
  %125 = icmp eq %"class.base::RepeatingCallback"* %120, %45
  br i1 %125, label %126, label %74

126:                                              ; preds = %74, %69
  %127 = phi %"class.base::RepeatingCallback"* [ %70, %69 ], [ %119, %74 ]
  %128 = load i64, i64* %6, align 8
  %129 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %3, align 8
  br label %130

130:                                              ; preds = %34, %126
  %131 = phi %"class.base::RepeatingCallback"* [ %129, %126 ], [ %45, %34 ]
  %132 = phi %"class.base::RepeatingCallback"* [ %127, %126 ], [ %37, %34 ]
  %133 = phi i64 [ %128, %126 ], [ %46, %34 ]
  %134 = ptrtoint %"class.base::RepeatingCallback"* %132 to i64
  store i64 %134, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %135 = inttoptr i64 %133 to %"class.base::RepeatingCallback"*
  %136 = icmp eq %"class.base::RepeatingCallback"* %131, %135
  br i1 %136, label %142, label %137

137:                                              ; preds = %130, %137
  %138 = phi %"class.base::RepeatingCallback"* [ %139, %137 ], [ %131, %130 ]
  %139 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %138, i64 -1
  %140 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %139, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %140) #12
  %141 = icmp eq %"class.base::RepeatingCallback"* %139, %135
  br i1 %141, label %142, label %137

142:                                              ; preds = %137, %130
  %143 = icmp eq i64 %133, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = inttoptr i64 %133 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %142, %144
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbPKcS4_PNS2_IFbS4_EEEEJEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbPKcS4_PNS2_IFbS4_EEEEJEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIPFbPKcS2_PNS_17RepeatingCallbackIFbS2_EEEEJEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIPFbPKcS2_PNS_17RepeatingCallbackIFbS2_EEEEJEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base13BindRepeatingIPFbRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!12 = distinct !{!12, !"_ZN4base13BindRepeatingIPFbRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!16 = !{i8 0, i8 2}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
