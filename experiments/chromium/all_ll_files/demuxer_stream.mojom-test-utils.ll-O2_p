; ModuleID = 'gen/media/mojo/mojom/demuxer_stream.mojom-test-utils.cc'
source_filename = "gen/media/mojo/mojom/demuxer_stream.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::mojom::DemuxerStreamAsyncWaiter" = type { %"class.media::mojom::DemuxerStream"* }
%"class.media::mojom::DemuxerStream" = type { i32 (...)** }
%"class.media::mojom::DemuxerStreamInterceptorForTesting" = type { %"class.media::mojom::DemuxerStream" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.1" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"class.media::AudioDecoderConfig" }
%"class.media::AudioDecoderConfig" = type <{ i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, i32, i32, i32, %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.3" = type { %"class.absl::optional_internal::optional_data.4" }
%"class.absl::optional_internal::optional_data.4" = type { %"class.absl::optional_internal::optional_data_base.5" }
%"class.absl::optional_internal::optional_data_base.5" = type { %"class.absl::optional_internal::optional_data_dtor_base.6" }
%"class.absl::optional_internal::optional_data_dtor_base.6" = type { i8, [7 x i8], %union.anon.7 }
%union.anon.7 = type { %"class.media::VideoDecoderConfig" }
%"class.media::VideoDecoderConfig" = type <{ i32, i32, i32, i32, %"struct.media::VideoTransformation", %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector", i32, %"class.media::VideoColorSpace", %"class.absl::optional.8", i8, [3 x i8] }>
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.27, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.20", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.22" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.27 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.28" }>
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.30", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.media::mojom::DecoderBuffer"* }
%"class.media::mojom::DecoderBuffer" = type { %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i32, i8, %"class.std::__1::vector", %"class.mojo::StructPtr.38", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.mojo::StructPtr.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.media::mojom::DecryptConfig"* }
%"class.media::mojom::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.48", %"class.absl::optional.55", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.44 }
%union.anon.44 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.50" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5media5mojom13DemuxerStreamD2Ev = comdat any

$_ZN5media5mojom34DemuxerStreamInterceptorForTestingD0Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@.str = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@.str.1 = private unnamed_addr constant [56 x i8] c"gen/media/mojo/mojom/demuxer_stream.mojom-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Read\00", align 1
@_ZTVN5media5mojom34DemuxerStreamInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::mojom::DemuxerStream"*)* @_ZN5media5mojom13DemuxerStreamD2Ev to i8*), i8* bitcast (void (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)* @_ZN5media5mojom34DemuxerStreamInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5media5mojom34DemuxerStreamInterceptorForTesting10InitializeEN4base12OnceCallbackIFvNS_13DemuxerStream4TypeEN4mojo16ScopedHandleBaseINS6_22DataPipeConsumerHandleEEERKN4absl8optionalINS_18AudioDecoderConfigEEERKNSB_INS_18VideoDecoderConfigEEEEEE to i8*), i8* bitcast (void (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*, %"class.base::OnceCallback.1"*)* @_ZN5media5mojom34DemuxerStreamInterceptorForTesting4ReadEN4base12OnceCallbackIFvNS_13DemuxerStream6StatusEN4mojo9StructPtrINS0_13DecoderBufferEEERKN4absl8optionalINS_18AudioDecoderConfigEEERKNSB_INS_18VideoDecoderConfigEEEEEE to i8*), i8* bitcast (void (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)* @_ZN5media5mojom34DemuxerStreamInterceptorForTesting24EnableBitstreamConverterEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5media5mojom24DemuxerStreamAsyncWaiterC1EPNS0_13DemuxerStreamE = hidden unnamed_addr alias void (%"class.media::mojom::DemuxerStreamAsyncWaiter"*, %"class.media::mojom::DemuxerStream"*), void (%"class.media::mojom::DemuxerStreamAsyncWaiter"*, %"class.media::mojom::DemuxerStream"*)* @_ZN5media5mojom24DemuxerStreamAsyncWaiterC2EPNS0_13DemuxerStreamE
@_ZN5media5mojom24DemuxerStreamAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.media::mojom::DemuxerStreamAsyncWaiter"*), void (%"class.media::mojom::DemuxerStreamAsyncWaiter"*)* @_ZN5media5mojom24DemuxerStreamAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom34DemuxerStreamInterceptorForTesting10InitializeEN4base12OnceCallbackIFvNS_13DemuxerStream4TypeEN4mojo16ScopedHandleBaseINS6_22DataPipeConsumerHandleEEERKN4absl8optionalINS_18AudioDecoderConfigEEERKNSB_INS_18VideoDecoderConfigEEEEEE(%"class.media::mojom::DemuxerStreamInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.media::mojom::DemuxerStreamInterceptorForTesting"* %0 to %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)***
  %5 = load %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)**, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.media::mojom::DemuxerStream"* %7(%"class.media::mojom::DemuxerStreamInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.media::mojom::DemuxerStream"* %8 to void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)**, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)*, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)** %14, i64 2
  %16 = load void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)*, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.media::mojom::DemuxerStream"* %8, %"class.base::OnceCallback"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom34DemuxerStreamInterceptorForTesting4ReadEN4base12OnceCallbackIFvNS_13DemuxerStream6StatusEN4mojo9StructPtrINS0_13DecoderBufferEEERKN4absl8optionalINS_18AudioDecoderConfigEEERKNSB_INS_18VideoDecoderConfigEEEEEE(%"class.media::mojom::DemuxerStreamInterceptorForTesting"*, %"class.base::OnceCallback.1"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.1", align 8
  %4 = bitcast %"class.media::mojom::DemuxerStreamInterceptorForTesting"* %0 to %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)***
  %5 = load %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)**, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.media::mojom::DemuxerStream"* %7(%"class.media::mojom::DemuxerStreamInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.1"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.1"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.media::mojom::DemuxerStream"* %8 to void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)***
  %14 = load void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)**, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)*, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)** %14, i64 3
  %16 = load void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)*, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)** %15, align 8
  call void %16(%"class.media::mojom::DemuxerStream"* %8, %"class.base::OnceCallback.1"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom34DemuxerStreamInterceptorForTesting24EnableBitstreamConverterEv(%"class.media::mojom::DemuxerStreamInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::mojom::DemuxerStreamInterceptorForTesting"* %0 to %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)***
  %3 = load %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)**, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)*, %"class.media::mojom::DemuxerStream"* (%"class.media::mojom::DemuxerStreamInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.media::mojom::DemuxerStream"* %5(%"class.media::mojom::DemuxerStreamInterceptorForTesting"* %0) #11
  %7 = bitcast %"class.media::mojom::DemuxerStream"* %6 to void (%"class.media::mojom::DemuxerStream"*)***
  %8 = load void (%"class.media::mojom::DemuxerStream"*)**, void (%"class.media::mojom::DemuxerStream"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::mojom::DemuxerStream"*)*, void (%"class.media::mojom::DemuxerStream"*)** %8, i64 4
  %10 = load void (%"class.media::mojom::DemuxerStream"*)*, void (%"class.media::mojom::DemuxerStream"*)** %9, align 8
  tail call void %10(%"class.media::mojom::DemuxerStream"* %6) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media5mojom24DemuxerStreamAsyncWaiterC2EPNS0_13DemuxerStreamE(%"class.media::mojom::DemuxerStreamAsyncWaiter"* nocapture, %"class.media::mojom::DemuxerStream"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.media::mojom::DemuxerStreamAsyncWaiter", %"class.media::mojom::DemuxerStreamAsyncWaiter"* %0, i64 0, i32 0
  store %"class.media::mojom::DemuxerStream"* %1, %"class.media::mojom::DemuxerStream"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media5mojom24DemuxerStreamAsyncWaiterD2Ev(%"class.media::mojom::DemuxerStreamAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS5_22DataPipeConsumerHandleEEEPN4absl8optionalINS_18AudioDecoderConfigEEEPNSB_INS_18VideoDecoderConfigEEE(%"class.media::mojom::DemuxerStreamAsyncWaiter"* nocapture readonly, i32*, %"class.mojo::ScopedHandleBase"*, %"class.absl::optional"*, %"class.absl::optional.3"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RunLoop", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i32* %1 to i64
  %10 = ptrtoint %"class.mojo::ScopedHandleBase"* %2 to i64
  %11 = ptrtoint %"class.absl::optional"* %3 to i64
  %12 = ptrtoint %"class.absl::optional.3"* %4 to i64
  %13 = bitcast %"class.base::RunLoop"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %6, i32 0) #11
  %14 = getelementptr inbounds %"class.media::mojom::DemuxerStreamAsyncWaiter", %"class.media::mojom::DemuxerStreamAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.media::mojom::DemuxerStream"*, %"class.media::mojom::DemuxerStream"** %14, align 8
  %16 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %17 = call i8* @_Znwm(i64 80) #12, !noalias !2
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.mojo::ScopedHandleBase"*, %"class.absl::optional"*, %"class.absl::optional.3"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS3_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS9_22DataPipeConsumerHandleEEEPN4absl8optionalINS3_18AudioDecoderConfigEEEPNSF_INS3_18VideoDecoderConfigEEEE3$_0JPNS_7RunLoopES8_SD_SI_SL_EEEFvS7_SC_RKSH_RKSK_EE7RunOnceEPNS0_13BindStateBaseES7_OSC_SR_ST_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS2_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS8_22DataPipeConsumerHandleEEEPN4absl8optionalINS2_18AudioDecoderConfigEEEPNSE_INS2_18VideoDecoderConfigEEEE3$_0JPNS_7RunLoopES7_SC_SH_SK_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !2
  %19 = getelementptr inbounds i8, i8* %17, i64 40
  %20 = bitcast i8* %19 to i64*
  store i64 %16, i64* %20, align 8, !noalias !2
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %9, i64* %22, align 8, !noalias !2
  %23 = getelementptr inbounds i8, i8* %17, i64 56
  %24 = bitcast i8* %23 to i64*
  store i64 %10, i64* %24, align 8, !noalias !2
  %25 = getelementptr inbounds i8, i8* %17, i64 64
  %26 = bitcast i8* %25 to i64*
  store i64 %11, i64* %26, align 8, !noalias !2
  %27 = getelementptr inbounds i8, i8* %17, i64 72
  %28 = bitcast i8* %27 to i64*
  store i64 %12, i64* %28, align 8, !noalias !2
  %29 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %17, i8** %29, align 8, !alias.scope !2
  %30 = bitcast %"class.media::mojom::DemuxerStream"* %15 to void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)***
  %31 = load void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)**, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)*, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)** %31, i64 2
  %33 = load void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)*, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback"*)** %32, align 8
  call void %33(%"class.media::mojom::DemuxerStream"* %15, %"class.base::OnceCallback"* nonnull %7) #11
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #11
  %35 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1, i64 0, i64 0), i32 71) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS_13DemuxerStream6StatusEPN4mojo9StructPtrINS0_13DecoderBufferEEEPN4absl8optionalINS_18AudioDecoderConfigEEEPNSB_INS_18VideoDecoderConfigEEE(%"class.media::mojom::DemuxerStreamAsyncWaiter"* nocapture readonly, i32*, %"class.mojo::StructPtr"*, %"class.absl::optional"*, %"class.absl::optional.3"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RunLoop", align 8
  %7 = alloca %"class.base::OnceCallback.1", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i32* %1 to i64
  %10 = ptrtoint %"class.mojo::StructPtr"* %2 to i64
  %11 = ptrtoint %"class.absl::optional"* %3 to i64
  %12 = ptrtoint %"class.absl::optional.3"* %4 to i64
  %13 = bitcast %"class.base::RunLoop"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %6, i32 0) #11
  %14 = getelementptr inbounds %"class.media::mojom::DemuxerStreamAsyncWaiter", %"class.media::mojom::DemuxerStreamAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.media::mojom::DemuxerStream"*, %"class.media::mojom::DemuxerStream"** %14, align 8
  %16 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %17 = call i8* @_Znwm(i64 80) #12, !noalias !7
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.mojo::StructPtr"*, %"class.absl::optional"*, %"class.absl::optional.3"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS3_13DemuxerStream6StatusEPN4mojo9StructPtrINS4_13DecoderBufferEEEPN4absl8optionalINS3_18AudioDecoderConfigEEEPNSF_INS3_18VideoDecoderConfigEEEE3$_1JPNS_7RunLoopES8_SD_SI_SL_EEEFvS7_SC_RKSH_RKSK_EE7RunOnceEPNS0_13BindStateBaseES7_OSC_SR_ST_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS2_13DemuxerStream6StatusEPN4mojo9StructPtrINS3_13DecoderBufferEEEPN4absl8optionalINS2_18AudioDecoderConfigEEEPNSE_INS2_18VideoDecoderConfigEEEE3$_1JPNS_7RunLoopES7_SC_SH_SK_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !7
  %19 = getelementptr inbounds i8, i8* %17, i64 40
  %20 = bitcast i8* %19 to i64*
  store i64 %16, i64* %20, align 8, !noalias !7
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %9, i64* %22, align 8, !noalias !7
  %23 = getelementptr inbounds i8, i8* %17, i64 56
  %24 = bitcast i8* %23 to i64*
  store i64 %10, i64* %24, align 8, !noalias !7
  %25 = getelementptr inbounds i8, i8* %17, i64 64
  %26 = bitcast i8* %25 to i64*
  store i64 %11, i64* %26, align 8, !noalias !7
  %27 = getelementptr inbounds i8, i8* %17, i64 72
  %28 = bitcast i8* %27 to i64*
  store i64 %12, i64* %28, align 8, !noalias !7
  %29 = bitcast %"class.base::OnceCallback.1"* %7 to i8**
  store i8* %17, i8** %29, align 8, !alias.scope !7
  %30 = bitcast %"class.media::mojom::DemuxerStream"* %15 to void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)***
  %31 = load void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)**, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)*, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)** %31, i64 3
  %33 = load void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)*, void (%"class.media::mojom::DemuxerStream"*, %"class.base::OnceCallback.1"*)** %32, align 8
  call void %33(%"class.media::mojom::DemuxerStream"* %15, %"class.base::OnceCallback.1"* nonnull %7) #11
  %34 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #11
  %35 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1, i64 0, i64 0), i32 98) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom13DemuxerStreamD2Ev(%"class.media::mojom::DemuxerStream"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media5mojom34DemuxerStreamInterceptorForTestingD0Ev(%"class.media::mojom::DemuxerStreamInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS3_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS9_22DataPipeConsumerHandleEEEPN4absl8optionalINS3_18AudioDecoderConfigEEEPNSF_INS3_18VideoDecoderConfigEEEE3$_0JPNS_7RunLoopES8_SD_SI_SL_EEEFvS7_SC_RKSH_RKSK_EE7RunOnceEPNS0_13BindStateBaseES7_OSC_SR_ST_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.mojo::ScopedHandleBase"* nocapture dereferenceable(4), %"class.absl::optional"* dereferenceable(88), %"class.absl::optional.3"* dereferenceable(152)) #0 align 2 {
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RunLoop"**
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to i32**
  %10 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %11 = bitcast void ()** %10 to %"class.mojo::ScopedHandleBase"**
  %12 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %13 = bitcast void ()** %12 to %"class.absl::optional"**
  %14 = getelementptr inbounds void ()*, void ()** %6, i64 4
  %15 = bitcast void ()** %14 to %"class.absl::optional.3"**
  %16 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %7, align 8
  %17 = load i32*, i32** %9, align 8
  %18 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %11, align 8
  %19 = load %"class.absl::optional"*, %"class.absl::optional"** %13, align 8
  %20 = load %"class.absl::optional.3"*, %"class.absl::optional.3"** %15, align 8
  %21 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4, !noalias !12
  store i32 0, i32* %21, align 4, !noalias !12
  store i32 %1, i32* %17, align 4
  %23 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %18, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %5
  %27 = tail call i32 @MojoClose(i32 %24) #11
  br label %28

28:                                               ; preds = %26, %5
  store i32 %22, i32* %23, align 4
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !15
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %54, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !15
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %36, label %53, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.media::AudioDecoderConfig"* %37 to i8*
  %40 = bitcast %"class.media::AudioDecoderConfig"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #11
  %41 = icmp eq %"class.absl::optional"* %19, %3
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6, i32 0, i32 1
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %43, i8* %45, i8* %47) #11
  br label %48

48:                                               ; preds = %42, %38
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 7
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 7
  %51 = bitcast i32* %49 to i8*
  %52 = bitcast i32* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 29, i1 false) #11
  br label %60

53:                                               ; preds = %32
  tail call void @_ZN5media18AudioDecoderConfigC1ERKS0_(%"class.media::AudioDecoderConfig"* %37, %"class.media::AudioDecoderConfig"* dereferenceable(80) %33) #11
  store i8 1, i8* %34, align 8
  br label %60

54:                                               ; preds = %28
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !15
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5media18AudioDecoderConfigD1Ev(%"class.media::AudioDecoderConfig"* %59) #11
  store i8 0, i8* %55, align 8
  br label %60

60:                                               ; preds = %58, %54, %53, %48
  %61 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !15
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %107, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %66 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 8, !range !15
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %68, label %106, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.media::VideoDecoderConfig"* %69 to i8*
  %72 = bitcast %"class.media::VideoDecoderConfig"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 56, i1 false) #11
  %73 = icmp eq %"class.absl::optional.3"* %20, %4
  br i1 %73, label %80, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 8
  %76 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 8, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 8, i32 0, i32 1
  %79 = load i8*, i8** %78, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %75, i8* %77, i8* %79) #11
  br label %80

80:                                               ; preds = %74, %70
  %81 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 9
  %82 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 9
  %83 = bitcast i32* %82 to i64*
  %84 = bitcast i32* %81 to i64*
  %85 = load i64, i64* %83, align 8
  store i64 %85, i64* %84, align 8
  %86 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 11
  %87 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %88 = load i8, i8* %87, align 4, !range !15
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %92, align 4, !range !15
  %94 = icmp eq i8 %93, 0
  %95 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %94, label %99, label %96

96:                                               ; preds = %90
  %97 = bitcast %"struct.gfx::HDRMetadata"* %95 to i8*
  %98 = bitcast %"struct.gfx::HDRMetadata"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 48, i1 false) #11
  br label %102

99:                                               ; preds = %90
  tail call void @_ZN3gfx11HDRMetadataC1ERKS0_(%"struct.gfx::HDRMetadata"* %95, %"struct.gfx::HDRMetadata"* dereferenceable(48) %91) #11
  store i8 1, i8* %92, align 4
  br label %102

100:                                              ; preds = %80
  %101 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %101, align 4
  br label %102

102:                                              ; preds = %100, %99, %96
  %103 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 12
  %104 = load i8, i8* %103, align 4, !range !15
  %105 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 12
  store i8 %104, i8* %105, align 4
  br label %113

106:                                              ; preds = %64
  tail call void @_ZN5media18VideoDecoderConfigC1ERKS0_(%"class.media::VideoDecoderConfig"* %69, %"class.media::VideoDecoderConfig"* dereferenceable(144) %65) #11
  store i8 1, i8* %66, align 8
  br label %113

107:                                              ; preds = %60
  %108 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 8, !range !15
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5media18VideoDecoderConfigD1Ev(%"class.media::VideoDecoderConfig"* %112) #11
  store i8 0, i8* %108, align 8
  br label %113

113:                                              ; preds = %102, %106, %107, %111
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %16) #11
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @MojoClose(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #11
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #12
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #13
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #12
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #11
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN5media18AudioDecoderConfigC1ERKS0_(%"class.media::AudioDecoderConfig"*, %"class.media::AudioDecoderConfig"* dereferenceable(80)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5media18AudioDecoderConfigD1Ev(%"class.media::AudioDecoderConfig"*) unnamed_addr #1

declare void @_ZN3gfx11HDRMetadataC1ERKS0_(%"struct.gfx::HDRMetadata"*, %"struct.gfx::HDRMetadata"* dereferenceable(48)) unnamed_addr #5

declare void @_ZN5media18VideoDecoderConfigC1ERKS0_(%"class.media::VideoDecoderConfig"*, %"class.media::VideoDecoderConfig"* dereferenceable(144)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5media18VideoDecoderConfigD1Ev(%"class.media::VideoDecoderConfig"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS2_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS8_22DataPipeConsumerHandleEEEPN4absl8optionalINS2_18AudioDecoderConfigEEEPNSE_INS2_18VideoDecoderConfigEEEE3$_0JPNS_7RunLoopES7_SC_SH_SK_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS3_13DemuxerStream6StatusEPN4mojo9StructPtrINS4_13DecoderBufferEEEPN4absl8optionalINS3_18AudioDecoderConfigEEEPNSF_INS3_18VideoDecoderConfigEEEE3$_1JPNS_7RunLoopES8_SD_SI_SL_EEEFvS7_SC_RKSH_RKSK_EE7RunOnceEPNS0_13BindStateBaseES7_OSC_SR_ST_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.mojo::StructPtr"* nocapture dereferenceable(8), %"class.absl::optional"* dereferenceable(88), %"class.absl::optional.3"* dereferenceable(152)) #0 align 2 {
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RunLoop"**
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to i32**
  %10 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %11 = bitcast void ()** %10 to %"class.mojo::StructPtr"**
  %12 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %13 = bitcast void ()** %12 to %"class.absl::optional"**
  %14 = getelementptr inbounds void ()*, void ()** %6, i64 4
  %15 = bitcast void ()** %14 to %"class.absl::optional.3"**
  %16 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %7, align 8
  %17 = load i32*, i32** %9, align 8
  %18 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %11, align 8
  %19 = load %"class.absl::optional"*, %"class.absl::optional"** %13, align 8
  %20 = load %"class.absl::optional.3"*, %"class.absl::optional.3"** %15, align 8
  %21 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 0, i64* %21, align 8
  store i32 %1, i32* %17, align 4
  %23 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.media::mojom::DecoderBuffer"*, %"class.media::mojom::DecoderBuffer"** %23, align 8
  store %"class.media::mojom::DecoderBuffer"* null, %"class.media::mojom::DecoderBuffer"** %23, align 8
  %25 = icmp eq %"class.media::mojom::DecoderBuffer"* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %5
  tail call void @_ZN5media5mojom13DecoderBufferD1Ev(%"class.media::mojom::DecoderBuffer"* nonnull %24) #11
  %27 = bitcast %"class.media::mojom::DecoderBuffer"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  %28 = load %"class.media::mojom::DecoderBuffer"*, %"class.media::mojom::DecoderBuffer"** %23, align 8
  %29 = bitcast %"class.media::mojom::DecoderBuffer"* %28 to i8*
  br label %30

30:                                               ; preds = %26, %5
  %31 = phi i8* [ %29, %26 ], [ null, %5 ]
  %32 = phi %"class.media::mojom::DecoderBuffer"* [ %28, %26 ], [ null, %5 ]
  %33 = bitcast %"class.mojo::StructPtr"* %18 to i64*
  store i64 %22, i64* %33, align 8
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !15
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %59, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !15
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %41, label %58, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.media::AudioDecoderConfig"* %42 to i8*
  %45 = bitcast %"class.media::AudioDecoderConfig"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false) #11
  %46 = icmp eq %"class.absl::optional"* %19, %3
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6, i32 0, i32 1
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %48, i8* %50, i8* %52) #11
  br label %53

53:                                               ; preds = %47, %43
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 7
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 7
  %56 = bitcast i32* %54 to i8*
  %57 = bitcast i32* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 29, i1 false) #11
  br label %65

58:                                               ; preds = %37
  tail call void @_ZN5media18AudioDecoderConfigC1ERKS0_(%"class.media::AudioDecoderConfig"* %42, %"class.media::AudioDecoderConfig"* dereferenceable(80) %38) #11
  store i8 1, i8* %39, align 8
  br label %65

59:                                               ; preds = %30
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !15
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %19, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5media18AudioDecoderConfigD1Ev(%"class.media::AudioDecoderConfig"* %64) #11
  store i8 0, i8* %60, align 8
  br label %65

65:                                               ; preds = %63, %59, %58, %53
  %66 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 8, !range !15
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %112, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %71 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !15
  %73 = icmp eq i8 %72, 0
  %74 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %73, label %111, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.media::VideoDecoderConfig"* %74 to i8*
  %77 = bitcast %"class.media::VideoDecoderConfig"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 56, i1 false) #11
  %78 = icmp eq %"class.absl::optional.3"* %20, %4
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 8
  %81 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 8, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 8, i32 0, i32 1
  %84 = load i8*, i8** %83, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %80, i8* %82, i8* %84) #11
  br label %85

85:                                               ; preds = %79, %75
  %86 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 9
  %87 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 9
  %88 = bitcast i32* %87 to i64*
  %89 = bitcast i32* %86 to i64*
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 11
  %92 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %92, align 4, !range !15
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %85
  %96 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !15
  %99 = icmp eq i8 %98, 0
  %100 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %99, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"struct.gfx::HDRMetadata"* %100 to i8*
  %103 = bitcast %"struct.gfx::HDRMetadata"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 48, i1 false) #11
  br label %107

104:                                              ; preds = %95
  tail call void @_ZN3gfx11HDRMetadataC1ERKS0_(%"struct.gfx::HDRMetadata"* %100, %"struct.gfx::HDRMetadata"* dereferenceable(48) %96) #11
  store i8 1, i8* %97, align 4
  br label %107

105:                                              ; preds = %85
  %106 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %106, align 4
  br label %107

107:                                              ; preds = %105, %104, %101
  %108 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 12
  %109 = load i8, i8* %108, align 4, !range !15
  %110 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 12
  store i8 %109, i8* %110, align 4
  br label %118

111:                                              ; preds = %69
  tail call void @_ZN5media18VideoDecoderConfigC1ERKS0_(%"class.media::VideoDecoderConfig"* %74, %"class.media::VideoDecoderConfig"* dereferenceable(144) %70) #11
  store i8 1, i8* %71, align 8
  br label %118

112:                                              ; preds = %65
  %113 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8, i8* %113, align 8, !range !15
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.absl::optional.3", %"class.absl::optional.3"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5media18VideoDecoderConfigD1Ev(%"class.media::VideoDecoderConfig"* %117) #11
  store i8 0, i8* %113, align 8
  br label %118

118:                                              ; preds = %116, %112, %111, %107
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %16) #11
  %119 = icmp eq %"class.media::mojom::DecoderBuffer"* %32, null
  br i1 %119, label %121, label %120

120:                                              ; preds = %118
  tail call void @_ZN5media5mojom13DecoderBufferD1Ev(%"class.media::mojom::DecoderBuffer"* nonnull %32) #11
  tail call void @_ZdlPv(i8* %31) #12
  br label %121

121:                                              ; preds = %118, %120
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media5mojom13DecoderBufferD1Ev(%"class.media::mojom::DecoderBuffer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS2_13DemuxerStream6StatusEPN4mojo9StructPtrINS3_13DecoderBufferEEEPN4absl8optionalINS2_18AudioDecoderConfigEEEPNSE_INS2_18VideoDecoderConfigEEEE3$_1JPNS_7RunLoopES7_SC_SH_SK_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS3_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS9_22DataPipeConsumerHandleEEEPN4absl8optionalINS3_18AudioDecoderConfigEEEPNSF_INS3_18VideoDecoderConfigEEEE3$_0JPNS_7RunLoopERS8_RSD_RSI_RSL_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS3_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS9_22DataPipeConsumerHandleEEEPN4absl8optionalINS3_18AudioDecoderConfigEEEPNSF_INS3_18VideoDecoderConfigEEEE3$_0JPNS_7RunLoopERS8_RSD_RSI_RSL_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS1_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS7_22DataPipeConsumerHandleEEEPN4absl8optionalINS1_18AudioDecoderConfigEEEPNSD_INS1_18VideoDecoderConfigEEEE3$_0JPNS_7RunLoopERS6_RSB_RSG_RSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5media5mojom24DemuxerStreamAsyncWaiter10InitializeEPNS1_13DemuxerStream4TypeEPN4mojo16ScopedHandleBaseINS7_22DataPipeConsumerHandleEEEPN4absl8optionalINS1_18AudioDecoderConfigEEEPNSD_INS1_18VideoDecoderConfigEEEE3$_0JPNS_7RunLoopERS6_RSB_RSG_RSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS3_13DemuxerStream6StatusEPN4mojo9StructPtrINS4_13DecoderBufferEEEPN4absl8optionalINS3_18AudioDecoderConfigEEEPNSF_INS3_18VideoDecoderConfigEEEE3$_1JPNS_7RunLoopERS8_RSD_RSI_RSL_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS3_13DemuxerStream6StatusEPN4mojo9StructPtrINS4_13DecoderBufferEEEPN4absl8optionalINS3_18AudioDecoderConfigEEEPNSF_INS3_18VideoDecoderConfigEEEE3$_1JPNS_7RunLoopERS8_RSD_RSI_RSL_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS1_13DemuxerStream6StatusEPN4mojo9StructPtrINS2_13DecoderBufferEEEPN4absl8optionalINS1_18AudioDecoderConfigEEEPNSD_INS1_18VideoDecoderConfigEEEE3$_1JPNS_7RunLoopERS6_RSB_RSG_RSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5media5mojom24DemuxerStreamAsyncWaiter4ReadEPNS1_13DemuxerStream6StatusEPN4mojo9StructPtrINS2_13DecoderBufferEEEPN4absl8optionalINS1_18AudioDecoderConfigEEEPNSD_INS1_18VideoDecoderConfigEEEE3$_1JPNS_7RunLoopERS6_RSB_RSG_RSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!14 = distinct !{!14, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!15 = !{i8 0, i8 2}
