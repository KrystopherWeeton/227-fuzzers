; ModuleID = '../../third_party/nasm/output/outform.c'
source_filename = "../../third_party/nasm/output/outform.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ofmt = type { i8*, i8*, i8*, i32, i32, %struct.dfmt**, %struct.dfmt*, i8*, void ()*, void ()*, void (%struct.out_data*)*, void (i32, i8*, i32, i64, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, i32 (i8*, i32*)*, i32 (i8*, i32, i32, i32*, i8*)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.dfmt = type { i8*, i8*, void ()*, void (i8*, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, void (i8*, i8*)*, void (i32)*, void (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.out_data = type { i64, i32, i32, i32, i32, i32, i32, i64, %struct.itemplate*, i8*, i64, i32, i32, i64, %struct.src_location }
%struct.itemplate = type opaque
%struct.src_location = type { i8*, i32 }
%struct.pragma_facility = type { i8*, i32 (%struct.pragma*)* }
%struct.pragma = type { %struct.pragma_facility*, i8*, i8*, i8*, i32 }
%struct.ofmt_alias = type { i8*, %struct.ofmt* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@drivers = internal unnamed_addr constant [19 x %struct.ofmt*] [%struct.ofmt* @of_bin, %struct.ofmt* @of_ith, %struct.ofmt* @of_srec, %struct.ofmt* @of_aout, %struct.ofmt* @of_aoutb, %struct.ofmt* @of_coff, %struct.ofmt* @of_elf32, %struct.ofmt* @of_elf64, %struct.ofmt* @of_elfx32, %struct.ofmt* @of_as86, %struct.ofmt* @of_obj, %struct.ofmt* @of_win32, %struct.ofmt* @of_win64, %struct.ofmt* @of_rdf2, %struct.ofmt* @of_ieee, %struct.ofmt* @of_macho32, %struct.ofmt* @of_macho64, %struct.ofmt* @of_dbg, %struct.ofmt* null], align 16
@ofmt_aliases = internal constant [4 x %struct.ofmt_alias] [%struct.ofmt_alias { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), %struct.ofmt* @of_elf32 }, %struct.ofmt_alias { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct.ofmt* @of_macho32 }, %struct.ofmt_alias { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), %struct.ofmt* @of_win32 }, %struct.ofmt_alias zeroinitializer], align 16
@.str = private unnamed_addr constant [19 x i8] c"       %-20s %s%s\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c" [default]\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"       %-20s Legacy alias for \22%s\22\0A\00", align 1
@null_debug_arr = external constant [2 x %struct.dfmt*], align 16
@.str.4 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@null_debug_form = external constant %struct.dfmt, align 8
@.str.5 = private unnamed_addr constant [24 x i8] c"       %-10s %-9s %s%s\0A\00", align 1
@of_bin = external constant %struct.ofmt, align 8
@of_ith = external constant %struct.ofmt, align 8
@of_srec = external constant %struct.ofmt, align 8
@of_aout = external constant %struct.ofmt, align 8
@of_aoutb = external constant %struct.ofmt, align 8
@of_coff = external constant %struct.ofmt, align 8
@of_elf32 = external constant %struct.ofmt, align 8
@of_elf64 = external constant %struct.ofmt, align 8
@of_elfx32 = external constant %struct.ofmt, align 8
@of_as86 = external constant %struct.ofmt, align 8
@of_obj = external constant %struct.ofmt, align 8
@of_win32 = external constant %struct.ofmt, align 8
@of_win64 = external constant %struct.ofmt, align 8
@of_rdf2 = external constant %struct.ofmt, align 8
@of_ieee = external constant %struct.ofmt, align 8
@of_macho32 = external constant %struct.ofmt, align 8
@of_macho64 = external constant %struct.ofmt, align 8
@of_dbg = external constant %struct.ofmt, align 8
@.str.6 = private unnamed_addr constant [4 x i8] c"elf\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"macho\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"win\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden %struct.ofmt* @ofmt_find(i8* nocapture readonly, %struct.ofmt_alias** nocapture) local_unnamed_addr #0 {
  store %struct.ofmt_alias* null, %struct.ofmt_alias** %1, align 8
  %3 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_bin, i64 0, i32 1), align 8
  %4 = tail call i32 @strcasecmp(i8* %0, i8* %3) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_ith, i64 0, i32 1), align 8
  %8 = tail call i32 @strcasecmp(i8* %0, i8* %7) #6
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %18, label %26

10:                                               ; preds = %86
  %11 = tail call i32 @strcasecmp(i8* %0, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)) #6
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %23, %20, %10
  %14 = phi i64 [ 0, %10 ], [ 1, %20 ], [ 2, %23 ]
  %15 = phi %struct.ofmt_alias* [ getelementptr inbounds ([4 x %struct.ofmt_alias], [4 x %struct.ofmt_alias]* @ofmt_aliases, i64 0, i64 0), %10 ], [ getelementptr inbounds ([4 x %struct.ofmt_alias], [4 x %struct.ofmt_alias]* @ofmt_aliases, i64 0, i64 1), %20 ], [ getelementptr inbounds ([4 x %struct.ofmt_alias], [4 x %struct.ofmt_alias]* @ofmt_aliases, i64 0, i64 2), %23 ]
  store %struct.ofmt_alias* %15, %struct.ofmt_alias** %1, align 8
  %16 = getelementptr inbounds [4 x %struct.ofmt_alias], [4 x %struct.ofmt_alias]* @ofmt_aliases, i64 0, i64 %14, i32 1
  %17 = load %struct.ofmt*, %struct.ofmt** %16, align 8
  br label %18

18:                                               ; preds = %23, %2, %6, %26, %30, %34, %38, %42, %46, %50, %54, %58, %62, %66, %70, %74, %78, %82, %86, %13
  %19 = phi %struct.ofmt* [ %17, %13 ], [ @of_bin, %2 ], [ @of_ith, %6 ], [ @of_srec, %26 ], [ @of_aout, %30 ], [ @of_aoutb, %34 ], [ @of_coff, %38 ], [ @of_elf32, %42 ], [ @of_elf64, %46 ], [ @of_elfx32, %50 ], [ @of_as86, %54 ], [ @of_obj, %58 ], [ @of_win32, %62 ], [ @of_win64, %66 ], [ @of_rdf2, %70 ], [ @of_ieee, %74 ], [ @of_macho32, %78 ], [ @of_macho64, %82 ], [ @of_dbg, %86 ], [ null, %23 ]
  ret %struct.ofmt* %19

20:                                               ; preds = %10
  %21 = tail call i32 @strcasecmp(i8* %0, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #6
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %13, label %23

23:                                               ; preds = %20
  %24 = tail call i32 @strcasecmp(i8* %0, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #6
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %13, label %18

26:                                               ; preds = %6
  %27 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_srec, i64 0, i32 1), align 8
  %28 = tail call i32 @strcasecmp(i8* %0, i8* %27) #6
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %26
  %31 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_aout, i64 0, i32 1), align 8
  %32 = tail call i32 @strcasecmp(i8* %0, i8* %31) #6
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %18, label %34

34:                                               ; preds = %30
  %35 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_aoutb, i64 0, i32 1), align 8
  %36 = tail call i32 @strcasecmp(i8* %0, i8* %35) #6
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %18, label %38

38:                                               ; preds = %34
  %39 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_coff, i64 0, i32 1), align 8
  %40 = tail call i32 @strcasecmp(i8* %0, i8* %39) #6
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %18, label %42

42:                                               ; preds = %38
  %43 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_elf32, i64 0, i32 1), align 8
  %44 = tail call i32 @strcasecmp(i8* %0, i8* %43) #6
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %18, label %46

46:                                               ; preds = %42
  %47 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_elf64, i64 0, i32 1), align 8
  %48 = tail call i32 @strcasecmp(i8* %0, i8* %47) #6
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %18, label %50

50:                                               ; preds = %46
  %51 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_elfx32, i64 0, i32 1), align 8
  %52 = tail call i32 @strcasecmp(i8* %0, i8* %51) #6
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %18, label %54

54:                                               ; preds = %50
  %55 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_as86, i64 0, i32 1), align 8
  %56 = tail call i32 @strcasecmp(i8* %0, i8* %55) #6
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %18, label %58

58:                                               ; preds = %54
  %59 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_obj, i64 0, i32 1), align 8
  %60 = tail call i32 @strcasecmp(i8* %0, i8* %59) #6
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %18, label %62

62:                                               ; preds = %58
  %63 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_win32, i64 0, i32 1), align 8
  %64 = tail call i32 @strcasecmp(i8* %0, i8* %63) #6
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %18, label %66

66:                                               ; preds = %62
  %67 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_win64, i64 0, i32 1), align 8
  %68 = tail call i32 @strcasecmp(i8* %0, i8* %67) #6
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %18, label %70

70:                                               ; preds = %66
  %71 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_rdf2, i64 0, i32 1), align 8
  %72 = tail call i32 @strcasecmp(i8* %0, i8* %71) #6
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %18, label %74

74:                                               ; preds = %70
  %75 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_ieee, i64 0, i32 1), align 8
  %76 = tail call i32 @strcasecmp(i8* %0, i8* %75) #6
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %18, label %78

78:                                               ; preds = %74
  %79 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_macho32, i64 0, i32 1), align 8
  %80 = tail call i32 @strcasecmp(i8* %0, i8* %79) #6
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %18, label %82

82:                                               ; preds = %78
  %83 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_macho64, i64 0, i32 1), align 8
  %84 = tail call i32 @strcasecmp(i8* %0, i8* %83) #6
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %18, label %86

86:                                               ; preds = %82
  %87 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_dbg, i64 0, i32 1), align 8
  %88 = tail call i32 @strcasecmp(i8* %0, i8* %87) #6
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %18, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden %struct.dfmt* @dfmt_find(%struct.ofmt* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %0, i64 0, i32 5
  %4 = load %struct.dfmt**, %struct.dfmt*** %3, align 8
  %5 = load %struct.dfmt*, %struct.dfmt** %4, align 8
  %6 = icmp eq %struct.dfmt* %5, null
  br i1 %6, label %18, label %10

7:                                                ; preds = %10
  %8 = load %struct.dfmt*, %struct.dfmt** %17, align 8
  %9 = icmp eq %struct.dfmt* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2, %7
  %11 = phi %struct.dfmt* [ %8, %7 ], [ %5, %2 ]
  %12 = phi %struct.dfmt** [ %17, %7 ], [ %4, %2 ]
  %13 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %11, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = tail call i32 @strcasecmp(i8* %1, i8* %14) #6
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %struct.dfmt*, %struct.dfmt** %12, i64 1
  br i1 %16, label %18, label %7

18:                                               ; preds = %10, %7, %2
  %19 = phi %struct.dfmt* [ null, %2 ], [ null, %7 ], [ %11, %10 ]
  ret %struct.dfmt* %19
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @ofmt_list(%struct.ofmt* readnone, %struct._IO_FILE* nocapture) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %2, %3
  %4 = phi %struct.ofmt* [ @of_bin, %2 ], [ %14, %3 ]
  %5 = phi %struct.ofmt** [ getelementptr inbounds ([19 x %struct.ofmt*], [19 x %struct.ofmt*]* @drivers, i64 0, i64 0), %2 ], [ %13, %3 ]
  %6 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %4, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %4, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq %struct.ofmt* %4, %0
  %11 = select i1 %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* %7, i8* %9, i8* %11)
  %13 = getelementptr inbounds %struct.ofmt*, %struct.ofmt** %5, i64 1
  %14 = load %struct.ofmt*, %struct.ofmt** %13, align 8
  %15 = icmp eq %struct.ofmt* %14, null
  br i1 %15, label %16, label %3

16:                                               ; preds = %3
  %17 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_elf32, i64 0, i32 1), align 8
  %18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8* %17)
  %19 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_macho32, i64 0, i32 1), align 8
  %20 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8* %19)
  %21 = load i8*, i8** getelementptr inbounds (%struct.ofmt, %struct.ofmt* @of_win32, i64 0, i32 1), align 8
  %22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8* %21)
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @dfmt_list(%struct._IO_FILE* nocapture) local_unnamed_addr #5 {
  %2 = alloca [32 x i8], align 16
  %3 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 32, i1 false)
  br label %4

4:                                                ; preds = %1, %52
  %5 = phi %struct.ofmt* [ @of_bin, %1 ], [ %54, %52 ]
  %6 = phi %struct.ofmt** [ getelementptr inbounds ([19 x %struct.ofmt*], [19 x %struct.ofmt*]* @drivers, i64 0, i64 0), %1 ], [ %53, %52 ]
  %7 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %5, i64 0, i32 5
  %8 = load %struct.dfmt**, %struct.dfmt*** %7, align 8
  %9 = icmp eq %struct.dfmt** %8, null
  %10 = icmp eq %struct.dfmt** %8, getelementptr inbounds ([2 x %struct.dfmt*], [2 x %struct.dfmt*]* @null_debug_arr, i64 0, i64 0)
  %11 = or i1 %9, %10
  br i1 %11, label %52, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %5, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %14) #7
  %16 = load %struct.dfmt**, %struct.dfmt*** %7, align 8
  %17 = load %struct.dfmt*, %struct.dfmt** %16, align 8
  %18 = icmp eq %struct.dfmt* %17, null
  br i1 %18, label %52, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.ofmt, %struct.ofmt* %5, i64 0, i32 6
  %21 = icmp eq %struct.dfmt* %17, @null_debug_form
  br i1 %21, label %31, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %17, i64 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %17, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = load %struct.dfmt*, %struct.dfmt** %20, align 8
  %28 = icmp eq %struct.dfmt* %17, %27
  %29 = select i1 %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i8* %3, i8* %24, i8* %26, i8* %29)
  br label %31

31:                                               ; preds = %22, %19
  %32 = getelementptr inbounds %struct.dfmt*, %struct.dfmt** %16, i64 1
  %33 = load %struct.dfmt*, %struct.dfmt** %32, align 8
  %34 = icmp eq %struct.dfmt* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %31, %48
  %36 = phi %struct.dfmt* [ %50, %48 ], [ %33, %31 ]
  %37 = phi %struct.dfmt** [ %49, %48 ], [ %32, %31 ]
  %38 = icmp eq %struct.dfmt* %36, @null_debug_form
  br i1 %38, label %48, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %36, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.dfmt, %struct.dfmt* %36, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = load %struct.dfmt*, %struct.dfmt** %20, align 8
  %45 = icmp eq %struct.dfmt* %36, %44
  %46 = select i1 %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %41, i8* %43, i8* %46)
  br label %48

48:                                               ; preds = %35, %39
  %49 = getelementptr inbounds %struct.dfmt*, %struct.dfmt** %37, i64 1
  %50 = load %struct.dfmt*, %struct.dfmt** %49, align 8
  %51 = icmp eq %struct.dfmt* %50, null
  br i1 %51, label %52, label %35, !llvm.loop !2

52:                                               ; preds = %31, %48, %12, %4
  %53 = getelementptr inbounds %struct.ofmt*, %struct.ofmt** %6, i64 1
  %54 = load %struct.ofmt*, %struct.ofmt** %53, align 8
  %55 = icmp eq %struct.ofmt* %54, null
  br i1 %55, label %56, label %4

56:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #7
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
