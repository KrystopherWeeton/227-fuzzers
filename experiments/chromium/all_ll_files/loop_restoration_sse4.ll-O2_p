; ModuleID = '../../third_party/libgav1/src/src/dsp/x86/loop_restoration_sse4.cc'
source_filename = "../../third_party/libgav1/src/src/dsp/x86/loop_restoration_sse4.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array", %"struct.std::__1::array.0", %"struct.std::__1::array.0", %"struct.std::__1::array.1", %"struct.std::__1::array.2", %"class.libgav1::Array2D", %"class.libgav1::Array2D.4" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::array.0" = type { [8 x i8] }
%"struct.std::__1::array.1" = type { [8 x i8] }
%"struct.std::__1::array.2" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"class.libgav1::Array2D.4" = type { %"class.std::__1::unique_ptr.5", i64, i64, %"class.libgav1::Array2DView.11" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }
%"class.libgav1::Array2DView.11" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.4", %"class.libgav1::Array2D.12" }
%"class.libgav1::Array2D.12" = type { %"class.std::__1::unique_ptr.13", i64, i64, %"class.libgav1::Array2DView.19" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.libgav1::Array2DView.19" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }

@_ZN7libgav114kSgrProjParamsE = external local_unnamed_addr constant [16 x [4 x i8]], align 16
@_ZN7libgav118kSgrScaleParameterE = external local_unnamed_addr constant [16 x [2 x i16]], align 16
@_ZN7libgav13dsp12kSgrMaLookupE = external local_unnamed_addr constant [256 x i8], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav13dsp26LoopRestorationInit_SSE4_1Ev() local_unnamed_addr #0 {
  %1 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32 8) #5
  %2 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 19, i64 0
  %3 = bitcast void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)** %2 to <2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*>*
  store <2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*> <void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)* @_ZN7libgav13dsp12low_bitdepth12_GLOBAL__N_119WienerFilter_SSE4_1ERKNS_19RestorationUnitInfoEPKvlS7_lS7_liiPNS_17RestorationBufferEPv, void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)* @_ZN7libgav13dsp12low_bitdepth12_GLOBAL__N_123SelfGuidedFilter_SSE4_1ERKNS_19RestorationUnitInfoEPKvlS7_lS7_liiPNS_17RestorationBufferEPv>, <2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*>* %3, align 8
  ret void
}

declare %"struct.libgav1::dsp::Dsp"* @_ZN7libgav112dsp_internal19GetWritableDspTableEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12low_bitdepth12_GLOBAL__N_119WienerFilter_SSE4_1ERKNS_19RestorationUnitInfoEPKvlS7_lS7_liiPNS_17RestorationBufferEPv(%"struct.libgav1::RestorationUnitInfo"* nocapture readonly dereferenceable(96), i8* nocapture readonly, i64, i8* nocapture readonly, i64, i8* nocapture readonly, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8* nocapture) #2 {
  %12 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 0, i64 0
  %13 = load i16, i16* %12, align 2
  %14 = sext i16 %13 to i32
  %15 = icmp sgt i32 %14, 1
  %16 = select i1 %15, i32 %14, i32 1
  %17 = add i32 %7, 15
  %18 = and i32 %17, -16
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 0
  %21 = zext i32 %16 to i64
  %22 = mul nsw i64 %21, %19
  %23 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %22
  %24 = shl nuw nsw i32 %16, 1
  %25 = sub nsw i32 6, %24
  %26 = ashr exact i32 %25, 1
  %27 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 2, i64 1, i64 0
  %28 = bitcast i16* %27 to i64*
  %29 = load i64, i64* %28, align 1
  %30 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %29, i32 0
  %31 = bitcast <2 x i64> %30 to <8 x i16>
  %32 = add <8 x i16> %31, <i16 0, i16 0, i16 0, i16 -128, i16 0, i16 0, i16 0, i16 0>
  %33 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 0, i64 1
  %34 = load i16, i16* %33, align 2
  %35 = trunc i64 %29 to i16
  switch i16 %34, label %551 [
    i16 0, label %36
    i16 1, label %311
  ]

36:                                               ; preds = %11
  %37 = bitcast <8 x i16> %32 to <16 x i8>
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> <i32 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 2>
  %39 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> <i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6>
  %40 = shufflevector <16 x i8> %37, <16 x i8> undef, <16 x i32> <i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2>
  %41 = icmp eq i32 %25, 0
  br i1 %41, label %132, label %42

42:                                               ; preds = %36
  %43 = sub nsw i32 2, %26
  %44 = sext i32 %43 to i64
  %45 = mul nsw i64 %44, %4
  %46 = getelementptr inbounds i8, i8* %3, i64 %45
  %47 = getelementptr inbounds i8, i8* %46, i64 -3
  %48 = and i16 %35, 255
  %49 = or i16 %48, 256
  %50 = insertelement <8 x i16> undef, i16 %49, i32 0
  %51 = shufflevector <8 x i16> %50, <8 x i16> undef, <8 x i32> zeroinitializer
  %52 = bitcast <8 x i16> %51 to <16 x i8>
  br label %53

53:                                               ; preds = %127, %42
  %54 = phi i16* [ %23, %42 ], [ %129, %127 ]
  %55 = phi i32 [ %26, %42 ], [ %130, %127 ]
  %56 = phi i8* [ %47, %42 ], [ %128, %127 ]
  %57 = getelementptr inbounds i16, i16* %54, i64 8
  br label %58

58:                                               ; preds = %58, %53
  %59 = phi i64 [ %125, %58 ], [ 0, %53 ]
  %60 = getelementptr inbounds i8, i8* %56, i64 %59
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1
  %63 = getelementptr inbounds i8, i8* %60, i64 1
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = getelementptr inbounds i8, i8* %60, i64 2
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = getelementptr inbounds i8, i8* %60, i64 3
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = getelementptr inbounds i8, i8* %60, i64 4
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = getelementptr inbounds i8, i8* %60, i64 5
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1
  %78 = getelementptr inbounds i8, i8* %60, i64 6
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = shufflevector <16 x i8> %62, <16 x i8> %65, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %82 = shufflevector <16 x i8> %68, <16 x i8> %71, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %83 = shufflevector <16 x i8> %74, <16 x i8> %77, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %84 = shufflevector <16 x i8> %80, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %85 = getelementptr inbounds i16, i16* %54, i64 %59
  %86 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %81, <16 x i8> %38) #5
  %87 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %82, <16 x i8> %39) #5
  %88 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %83, <16 x i8> %40) #5
  %89 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %84, <16 x i8> %52) #5
  %90 = bitcast <16 x i8> %82 to <8 x i16>
  %91 = lshr <8 x i16> %90, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %92 = shl nuw nsw <8 x i16> %91, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %93 = add <8 x i16> %87, %86
  %94 = add <8 x i16> %93, %88
  %95 = add <8 x i16> %94, %89
  %96 = ashr <8 x i16> %95, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %97 = add nsw <8 x i16> %96, %92
  %98 = icmp sgt <8 x i16> %97, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %99 = select <8 x i1> %98, <8 x i16> %97, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %100 = icmp slt <8 x i16> %99, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %101 = select <8 x i1> %100, <8 x i16> %99, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %102 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %102, align 16
  %103 = shufflevector <16 x i8> %62, <16 x i8> %65, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %104 = shufflevector <16 x i8> %68, <16 x i8> %71, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %105 = shufflevector <16 x i8> %74, <16 x i8> %77, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %106 = shufflevector <16 x i8> %80, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %107 = getelementptr inbounds i16, i16* %57, i64 %59
  %108 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %103, <16 x i8> %38) #5
  %109 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %104, <16 x i8> %39) #5
  %110 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %105, <16 x i8> %40) #5
  %111 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %106, <16 x i8> %52) #5
  %112 = bitcast <16 x i8> %104 to <8 x i16>
  %113 = lshr <8 x i16> %112, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %114 = shl nuw nsw <8 x i16> %113, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %115 = add <8 x i16> %109, %108
  %116 = add <8 x i16> %115, %110
  %117 = add <8 x i16> %116, %111
  %118 = ashr <8 x i16> %117, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %119 = add nsw <8 x i16> %118, %114
  %120 = icmp sgt <8 x i16> %119, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %121 = select <8 x i1> %120, <8 x i16> %119, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %122 = icmp slt <8 x i16> %121, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %123 = select <8 x i1> %122, <8 x i16> %121, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %124 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %124, align 16
  %125 = add nuw nsw i64 %59, 16
  %126 = icmp slt i64 %125, %19
  br i1 %126, label %58, label %127

127:                                              ; preds = %58
  %128 = getelementptr inbounds i8, i8* %56, i64 %4
  %129 = getelementptr inbounds i16, i16* %54, i64 %19
  %130 = add nsw i32 %55, -1
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %53

132:                                              ; preds = %127, %36
  %133 = phi i16* [ %23, %36 ], [ %129, %127 ]
  %134 = icmp eq i32 %8, 0
  br i1 %134, label %222, label %135

135:                                              ; preds = %132
  %136 = load i16, i16* %27, align 2
  %137 = getelementptr inbounds i8, i8* %1, i64 -3
  %138 = and i16 %136, 255
  %139 = or i16 %138, 256
  %140 = insertelement <8 x i16> undef, i16 %139, i32 0
  %141 = shufflevector <8 x i16> %140, <8 x i16> undef, <8 x i32> zeroinitializer
  %142 = bitcast <8 x i16> %141 to <16 x i8>
  br label %143

143:                                              ; preds = %217, %135
  %144 = phi i16* [ %133, %135 ], [ %219, %217 ]
  %145 = phi i32 [ %8, %135 ], [ %220, %217 ]
  %146 = phi i8* [ %137, %135 ], [ %218, %217 ]
  %147 = getelementptr inbounds i16, i16* %144, i64 8
  br label %148

148:                                              ; preds = %148, %143
  %149 = phi i64 [ %215, %148 ], [ 0, %143 ]
  %150 = getelementptr inbounds i8, i8* %146, i64 %149
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1
  %153 = getelementptr inbounds i8, i8* %150, i64 1
  %154 = bitcast i8* %153 to <16 x i8>*
  %155 = load <16 x i8>, <16 x i8>* %154, align 1
  %156 = getelementptr inbounds i8, i8* %150, i64 2
  %157 = bitcast i8* %156 to <16 x i8>*
  %158 = load <16 x i8>, <16 x i8>* %157, align 1
  %159 = getelementptr inbounds i8, i8* %150, i64 3
  %160 = bitcast i8* %159 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1
  %162 = getelementptr inbounds i8, i8* %150, i64 4
  %163 = bitcast i8* %162 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1
  %165 = getelementptr inbounds i8, i8* %150, i64 5
  %166 = bitcast i8* %165 to <16 x i8>*
  %167 = load <16 x i8>, <16 x i8>* %166, align 1
  %168 = getelementptr inbounds i8, i8* %150, i64 6
  %169 = bitcast i8* %168 to <16 x i8>*
  %170 = load <16 x i8>, <16 x i8>* %169, align 1
  %171 = shufflevector <16 x i8> %152, <16 x i8> %155, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %172 = shufflevector <16 x i8> %158, <16 x i8> %161, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %173 = shufflevector <16 x i8> %164, <16 x i8> %167, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %174 = shufflevector <16 x i8> %170, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %175 = getelementptr inbounds i16, i16* %144, i64 %149
  %176 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %171, <16 x i8> %38) #5
  %177 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %172, <16 x i8> %39) #5
  %178 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %173, <16 x i8> %40) #5
  %179 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %174, <16 x i8> %142) #5
  %180 = bitcast <16 x i8> %172 to <8 x i16>
  %181 = lshr <8 x i16> %180, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %182 = shl nuw nsw <8 x i16> %181, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %183 = add <8 x i16> %177, %176
  %184 = add <8 x i16> %183, %178
  %185 = add <8 x i16> %184, %179
  %186 = ashr <8 x i16> %185, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %187 = add nsw <8 x i16> %186, %182
  %188 = icmp sgt <8 x i16> %187, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %189 = select <8 x i1> %188, <8 x i16> %187, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %190 = icmp slt <8 x i16> %189, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %191 = select <8 x i1> %190, <8 x i16> %189, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %192 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %192, align 16
  %193 = shufflevector <16 x i8> %152, <16 x i8> %155, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %194 = shufflevector <16 x i8> %158, <16 x i8> %161, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %195 = shufflevector <16 x i8> %164, <16 x i8> %167, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %196 = shufflevector <16 x i8> %170, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %197 = getelementptr inbounds i16, i16* %147, i64 %149
  %198 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %193, <16 x i8> %38) #5
  %199 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %194, <16 x i8> %39) #5
  %200 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %195, <16 x i8> %40) #5
  %201 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %196, <16 x i8> %142) #5
  %202 = bitcast <16 x i8> %194 to <8 x i16>
  %203 = lshr <8 x i16> %202, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %204 = shl nuw nsw <8 x i16> %203, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %205 = add <8 x i16> %199, %198
  %206 = add <8 x i16> %205, %200
  %207 = add <8 x i16> %206, %201
  %208 = ashr <8 x i16> %207, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %209 = add nsw <8 x i16> %208, %204
  %210 = icmp sgt <8 x i16> %209, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %211 = select <8 x i1> %210, <8 x i16> %209, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %212 = icmp slt <8 x i16> %211, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %213 = select <8 x i1> %212, <8 x i16> %211, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %214 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %214, align 16
  %215 = add nuw nsw i64 %149, 16
  %216 = icmp slt i64 %215, %19
  br i1 %216, label %148, label %217

217:                                              ; preds = %148
  %218 = getelementptr inbounds i8, i8* %146, i64 %2
  %219 = getelementptr inbounds i16, i16* %144, i64 %19
  %220 = add nsw i32 %145, -1
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %143

222:                                              ; preds = %217, %132
  %223 = phi i16* [ %133, %132 ], [ %219, %217 ]
  br i1 %41, label %844, label %224

224:                                              ; preds = %222
  %225 = load i16, i16* %27, align 2
  %226 = getelementptr inbounds i8, i8* %5, i64 -3
  %227 = and i16 %225, 255
  %228 = or i16 %227, 256
  %229 = insertelement <8 x i16> undef, i16 %228, i32 0
  %230 = shufflevector <8 x i16> %229, <8 x i16> undef, <8 x i32> zeroinitializer
  %231 = bitcast <8 x i16> %230 to <16 x i8>
  br label %232

232:                                              ; preds = %306, %224
  %233 = phi i16* [ %223, %224 ], [ %308, %306 ]
  %234 = phi i32 [ %26, %224 ], [ %309, %306 ]
  %235 = phi i8* [ %226, %224 ], [ %307, %306 ]
  %236 = getelementptr inbounds i16, i16* %233, i64 8
  br label %237

237:                                              ; preds = %237, %232
  %238 = phi i64 [ %304, %237 ], [ 0, %232 ]
  %239 = getelementptr inbounds i8, i8* %235, i64 %238
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1
  %242 = getelementptr inbounds i8, i8* %239, i64 1
  %243 = bitcast i8* %242 to <16 x i8>*
  %244 = load <16 x i8>, <16 x i8>* %243, align 1
  %245 = getelementptr inbounds i8, i8* %239, i64 2
  %246 = bitcast i8* %245 to <16 x i8>*
  %247 = load <16 x i8>, <16 x i8>* %246, align 1
  %248 = getelementptr inbounds i8, i8* %239, i64 3
  %249 = bitcast i8* %248 to <16 x i8>*
  %250 = load <16 x i8>, <16 x i8>* %249, align 1
  %251 = getelementptr inbounds i8, i8* %239, i64 4
  %252 = bitcast i8* %251 to <16 x i8>*
  %253 = load <16 x i8>, <16 x i8>* %252, align 1
  %254 = getelementptr inbounds i8, i8* %239, i64 5
  %255 = bitcast i8* %254 to <16 x i8>*
  %256 = load <16 x i8>, <16 x i8>* %255, align 1
  %257 = getelementptr inbounds i8, i8* %239, i64 6
  %258 = bitcast i8* %257 to <16 x i8>*
  %259 = load <16 x i8>, <16 x i8>* %258, align 1
  %260 = shufflevector <16 x i8> %241, <16 x i8> %244, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %261 = shufflevector <16 x i8> %247, <16 x i8> %250, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %262 = shufflevector <16 x i8> %253, <16 x i8> %256, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %263 = shufflevector <16 x i8> %259, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %264 = getelementptr inbounds i16, i16* %233, i64 %238
  %265 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %260, <16 x i8> %38) #5
  %266 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %261, <16 x i8> %39) #5
  %267 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %262, <16 x i8> %40) #5
  %268 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %263, <16 x i8> %231) #5
  %269 = bitcast <16 x i8> %261 to <8 x i16>
  %270 = lshr <8 x i16> %269, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %271 = shl nuw nsw <8 x i16> %270, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %272 = add <8 x i16> %266, %265
  %273 = add <8 x i16> %272, %267
  %274 = add <8 x i16> %273, %268
  %275 = ashr <8 x i16> %274, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %276 = add nsw <8 x i16> %275, %271
  %277 = icmp sgt <8 x i16> %276, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %278 = select <8 x i1> %277, <8 x i16> %276, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %279 = icmp slt <8 x i16> %278, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %280 = select <8 x i1> %279, <8 x i16> %278, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %281 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %281, align 16
  %282 = shufflevector <16 x i8> %241, <16 x i8> %244, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %283 = shufflevector <16 x i8> %247, <16 x i8> %250, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %284 = shufflevector <16 x i8> %253, <16 x i8> %256, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %285 = shufflevector <16 x i8> %259, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %286 = getelementptr inbounds i16, i16* %236, i64 %238
  %287 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %282, <16 x i8> %38) #5
  %288 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %283, <16 x i8> %39) #5
  %289 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %284, <16 x i8> %40) #5
  %290 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %285, <16 x i8> %231) #5
  %291 = bitcast <16 x i8> %283 to <8 x i16>
  %292 = lshr <8 x i16> %291, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %293 = shl nuw nsw <8 x i16> %292, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %294 = add <8 x i16> %288, %287
  %295 = add <8 x i16> %294, %289
  %296 = add <8 x i16> %295, %290
  %297 = ashr <8 x i16> %296, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %298 = add nsw <8 x i16> %297, %293
  %299 = icmp sgt <8 x i16> %298, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %300 = select <8 x i1> %299, <8 x i16> %298, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %301 = icmp slt <8 x i16> %300, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %302 = select <8 x i1> %301, <8 x i16> %300, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %303 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %303, align 16
  %304 = add nuw nsw i64 %238, 16
  %305 = icmp slt i64 %304, %19
  br i1 %305, label %237, label %306

306:                                              ; preds = %237
  %307 = getelementptr inbounds i8, i8* %235, i64 %6
  %308 = getelementptr inbounds i16, i16* %233, i64 %19
  %309 = add nsw i32 %234, -1
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %844, label %232

311:                                              ; preds = %11
  %312 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 2, i64 1, i64 1
  %313 = bitcast <8 x i16> %32 to <16 x i8>
  %314 = shufflevector <16 x i8> %313, <16 x i8> undef, <16 x i32> <i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4, i32 2, i32 4>
  %315 = shufflevector <16 x i8> %313, <16 x i8> undef, <16 x i32> <i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4>
  %316 = icmp eq i32 %25, 0
  br i1 %316, label %396, label %317

317:                                              ; preds = %311
  %318 = load i16, i16* %312, align 2
  %319 = sub nsw i32 2, %26
  %320 = sext i32 %319 to i64
  %321 = mul nsw i64 %320, %4
  %322 = getelementptr inbounds i8, i8* %3, i64 %321
  %323 = getelementptr inbounds i8, i8* %322, i64 -2
  %324 = and i16 %318, 255
  %325 = or i16 %324, 256
  %326 = insertelement <8 x i16> undef, i16 %325, i32 0
  %327 = shufflevector <8 x i16> %326, <8 x i16> undef, <8 x i32> zeroinitializer
  %328 = bitcast <8 x i16> %327 to <16 x i8>
  br label %329

329:                                              ; preds = %391, %317
  %330 = phi i16* [ %23, %317 ], [ %393, %391 ]
  %331 = phi i32 [ %26, %317 ], [ %394, %391 ]
  %332 = phi i8* [ %323, %317 ], [ %392, %391 ]
  %333 = getelementptr inbounds i16, i16* %330, i64 8
  br label %334

334:                                              ; preds = %334, %329
  %335 = phi i64 [ %389, %334 ], [ 0, %329 ]
  %336 = getelementptr inbounds i8, i8* %332, i64 %335
  %337 = bitcast i8* %336 to <16 x i8>*
  %338 = load <16 x i8>, <16 x i8>* %337, align 1
  %339 = getelementptr inbounds i8, i8* %336, i64 1
  %340 = bitcast i8* %339 to <16 x i8>*
  %341 = load <16 x i8>, <16 x i8>* %340, align 1
  %342 = getelementptr inbounds i8, i8* %336, i64 2
  %343 = bitcast i8* %342 to <16 x i8>*
  %344 = load <16 x i8>, <16 x i8>* %343, align 1
  %345 = getelementptr inbounds i8, i8* %336, i64 3
  %346 = bitcast i8* %345 to <16 x i8>*
  %347 = load <16 x i8>, <16 x i8>* %346, align 1
  %348 = getelementptr inbounds i8, i8* %336, i64 4
  %349 = bitcast i8* %348 to <16 x i8>*
  %350 = load <16 x i8>, <16 x i8>* %349, align 1
  %351 = shufflevector <16 x i8> %338, <16 x i8> %341, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %352 = shufflevector <16 x i8> %344, <16 x i8> %347, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %353 = shufflevector <16 x i8> %350, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %354 = getelementptr inbounds i16, i16* %330, i64 %335
  %355 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %351, <16 x i8> %314) #5
  %356 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %352, <16 x i8> %315) #5
  %357 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %353, <16 x i8> %328) #5
  %358 = bitcast <16 x i8> %352 to <8 x i16>
  %359 = shl <8 x i16> %358, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %360 = and <8 x i16> %359, <i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080>
  %361 = add <8 x i16> %356, %355
  %362 = add <8 x i16> %361, %357
  %363 = ashr <8 x i16> %362, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %364 = add nsw <8 x i16> %363, %360
  %365 = icmp sgt <8 x i16> %364, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %366 = select <8 x i1> %365, <8 x i16> %364, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %367 = icmp slt <8 x i16> %366, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %368 = select <8 x i1> %367, <8 x i16> %366, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %369 = bitcast i16* %354 to <8 x i16>*
  store <8 x i16> %368, <8 x i16>* %369, align 16
  %370 = shufflevector <16 x i8> %338, <16 x i8> %341, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %371 = shufflevector <16 x i8> %344, <16 x i8> %347, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %372 = shufflevector <16 x i8> %350, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %373 = getelementptr inbounds i16, i16* %333, i64 %335
  %374 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %370, <16 x i8> %314) #5
  %375 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %371, <16 x i8> %315) #5
  %376 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %372, <16 x i8> %328) #5
  %377 = bitcast <16 x i8> %371 to <8 x i16>
  %378 = shl <8 x i16> %377, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %379 = and <8 x i16> %378, <i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080>
  %380 = add <8 x i16> %375, %374
  %381 = add <8 x i16> %380, %376
  %382 = ashr <8 x i16> %381, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %383 = add nsw <8 x i16> %382, %379
  %384 = icmp sgt <8 x i16> %383, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %385 = select <8 x i1> %384, <8 x i16> %383, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %386 = icmp slt <8 x i16> %385, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %387 = select <8 x i1> %386, <8 x i16> %385, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %388 = bitcast i16* %373 to <8 x i16>*
  store <8 x i16> %387, <8 x i16>* %388, align 16
  %389 = add nuw nsw i64 %335, 16
  %390 = icmp slt i64 %389, %19
  br i1 %390, label %334, label %391

391:                                              ; preds = %334
  %392 = getelementptr inbounds i8, i8* %332, i64 %4
  %393 = getelementptr inbounds i16, i16* %330, i64 %19
  %394 = add nsw i32 %331, -1
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %329

396:                                              ; preds = %391, %311
  %397 = phi i16* [ %23, %311 ], [ %393, %391 ]
  %398 = icmp eq i32 %8, 0
  br i1 %398, label %474, label %399

399:                                              ; preds = %396
  %400 = load i16, i16* %312, align 2
  %401 = getelementptr inbounds i8, i8* %1, i64 -2
  %402 = and i16 %400, 255
  %403 = or i16 %402, 256
  %404 = insertelement <8 x i16> undef, i16 %403, i32 0
  %405 = shufflevector <8 x i16> %404, <8 x i16> undef, <8 x i32> zeroinitializer
  %406 = bitcast <8 x i16> %405 to <16 x i8>
  br label %407

407:                                              ; preds = %469, %399
  %408 = phi i16* [ %397, %399 ], [ %471, %469 ]
  %409 = phi i32 [ %8, %399 ], [ %472, %469 ]
  %410 = phi i8* [ %401, %399 ], [ %470, %469 ]
  %411 = getelementptr inbounds i16, i16* %408, i64 8
  br label %412

412:                                              ; preds = %412, %407
  %413 = phi i64 [ %467, %412 ], [ 0, %407 ]
  %414 = getelementptr inbounds i8, i8* %410, i64 %413
  %415 = bitcast i8* %414 to <16 x i8>*
  %416 = load <16 x i8>, <16 x i8>* %415, align 1
  %417 = getelementptr inbounds i8, i8* %414, i64 1
  %418 = bitcast i8* %417 to <16 x i8>*
  %419 = load <16 x i8>, <16 x i8>* %418, align 1
  %420 = getelementptr inbounds i8, i8* %414, i64 2
  %421 = bitcast i8* %420 to <16 x i8>*
  %422 = load <16 x i8>, <16 x i8>* %421, align 1
  %423 = getelementptr inbounds i8, i8* %414, i64 3
  %424 = bitcast i8* %423 to <16 x i8>*
  %425 = load <16 x i8>, <16 x i8>* %424, align 1
  %426 = getelementptr inbounds i8, i8* %414, i64 4
  %427 = bitcast i8* %426 to <16 x i8>*
  %428 = load <16 x i8>, <16 x i8>* %427, align 1
  %429 = shufflevector <16 x i8> %416, <16 x i8> %419, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %430 = shufflevector <16 x i8> %422, <16 x i8> %425, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %431 = shufflevector <16 x i8> %428, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %432 = getelementptr inbounds i16, i16* %408, i64 %413
  %433 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %429, <16 x i8> %314) #5
  %434 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %430, <16 x i8> %315) #5
  %435 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %431, <16 x i8> %406) #5
  %436 = bitcast <16 x i8> %430 to <8 x i16>
  %437 = shl <8 x i16> %436, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %438 = and <8 x i16> %437, <i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080>
  %439 = add <8 x i16> %434, %433
  %440 = add <8 x i16> %439, %435
  %441 = ashr <8 x i16> %440, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %442 = add nsw <8 x i16> %441, %438
  %443 = icmp sgt <8 x i16> %442, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %444 = select <8 x i1> %443, <8 x i16> %442, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %445 = icmp slt <8 x i16> %444, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %446 = select <8 x i1> %445, <8 x i16> %444, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %447 = bitcast i16* %432 to <8 x i16>*
  store <8 x i16> %446, <8 x i16>* %447, align 16
  %448 = shufflevector <16 x i8> %416, <16 x i8> %419, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %449 = shufflevector <16 x i8> %422, <16 x i8> %425, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %450 = shufflevector <16 x i8> %428, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %451 = getelementptr inbounds i16, i16* %411, i64 %413
  %452 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %448, <16 x i8> %314) #5
  %453 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %449, <16 x i8> %315) #5
  %454 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %450, <16 x i8> %406) #5
  %455 = bitcast <16 x i8> %449 to <8 x i16>
  %456 = shl <8 x i16> %455, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %457 = and <8 x i16> %456, <i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080>
  %458 = add <8 x i16> %453, %452
  %459 = add <8 x i16> %458, %454
  %460 = ashr <8 x i16> %459, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %461 = add nsw <8 x i16> %460, %457
  %462 = icmp sgt <8 x i16> %461, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %463 = select <8 x i1> %462, <8 x i16> %461, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %464 = icmp slt <8 x i16> %463, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %465 = select <8 x i1> %464, <8 x i16> %463, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %466 = bitcast i16* %451 to <8 x i16>*
  store <8 x i16> %465, <8 x i16>* %466, align 16
  %467 = add nuw nsw i64 %413, 16
  %468 = icmp slt i64 %467, %19
  br i1 %468, label %412, label %469

469:                                              ; preds = %412
  %470 = getelementptr inbounds i8, i8* %410, i64 %2
  %471 = getelementptr inbounds i16, i16* %408, i64 %19
  %472 = add nsw i32 %409, -1
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %407

474:                                              ; preds = %469, %396
  %475 = phi i16* [ %397, %396 ], [ %471, %469 ]
  br i1 %316, label %844, label %476

476:                                              ; preds = %474
  %477 = load i16, i16* %312, align 2
  %478 = getelementptr inbounds i8, i8* %5, i64 -2
  %479 = and i16 %477, 255
  %480 = or i16 %479, 256
  %481 = insertelement <8 x i16> undef, i16 %480, i32 0
  %482 = shufflevector <8 x i16> %481, <8 x i16> undef, <8 x i32> zeroinitializer
  %483 = bitcast <8 x i16> %482 to <16 x i8>
  br label %484

484:                                              ; preds = %546, %476
  %485 = phi i16* [ %475, %476 ], [ %548, %546 ]
  %486 = phi i32 [ %26, %476 ], [ %549, %546 ]
  %487 = phi i8* [ %478, %476 ], [ %547, %546 ]
  %488 = getelementptr inbounds i16, i16* %485, i64 8
  br label %489

489:                                              ; preds = %489, %484
  %490 = phi i64 [ %544, %489 ], [ 0, %484 ]
  %491 = getelementptr inbounds i8, i8* %487, i64 %490
  %492 = bitcast i8* %491 to <16 x i8>*
  %493 = load <16 x i8>, <16 x i8>* %492, align 1
  %494 = getelementptr inbounds i8, i8* %491, i64 1
  %495 = bitcast i8* %494 to <16 x i8>*
  %496 = load <16 x i8>, <16 x i8>* %495, align 1
  %497 = getelementptr inbounds i8, i8* %491, i64 2
  %498 = bitcast i8* %497 to <16 x i8>*
  %499 = load <16 x i8>, <16 x i8>* %498, align 1
  %500 = getelementptr inbounds i8, i8* %491, i64 3
  %501 = bitcast i8* %500 to <16 x i8>*
  %502 = load <16 x i8>, <16 x i8>* %501, align 1
  %503 = getelementptr inbounds i8, i8* %491, i64 4
  %504 = bitcast i8* %503 to <16 x i8>*
  %505 = load <16 x i8>, <16 x i8>* %504, align 1
  %506 = shufflevector <16 x i8> %493, <16 x i8> %496, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %507 = shufflevector <16 x i8> %499, <16 x i8> %502, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %508 = shufflevector <16 x i8> %505, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %509 = getelementptr inbounds i16, i16* %485, i64 %490
  %510 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %506, <16 x i8> %314) #5
  %511 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %507, <16 x i8> %315) #5
  %512 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %508, <16 x i8> %483) #5
  %513 = bitcast <16 x i8> %507 to <8 x i16>
  %514 = shl <8 x i16> %513, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %515 = and <8 x i16> %514, <i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080>
  %516 = add <8 x i16> %511, %510
  %517 = add <8 x i16> %516, %512
  %518 = ashr <8 x i16> %517, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %519 = add nsw <8 x i16> %518, %515
  %520 = icmp sgt <8 x i16> %519, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %521 = select <8 x i1> %520, <8 x i16> %519, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %522 = icmp slt <8 x i16> %521, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %523 = select <8 x i1> %522, <8 x i16> %521, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %524 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> %523, <8 x i16>* %524, align 16
  %525 = shufflevector <16 x i8> %493, <16 x i8> %496, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %526 = shufflevector <16 x i8> %499, <16 x i8> %502, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %527 = shufflevector <16 x i8> %505, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %528 = getelementptr inbounds i16, i16* %488, i64 %490
  %529 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %525, <16 x i8> %314) #5
  %530 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %526, <16 x i8> %315) #5
  %531 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %527, <16 x i8> %483) #5
  %532 = bitcast <16 x i8> %526 to <8 x i16>
  %533 = shl <8 x i16> %532, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %534 = and <8 x i16> %533, <i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080, i16 4080>
  %535 = add <8 x i16> %530, %529
  %536 = add <8 x i16> %535, %531
  %537 = ashr <8 x i16> %536, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %538 = add nsw <8 x i16> %537, %534
  %539 = icmp sgt <8 x i16> %538, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %540 = select <8 x i1> %539, <8 x i16> %538, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %541 = icmp slt <8 x i16> %540, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %542 = select <8 x i1> %541, <8 x i16> %540, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %543 = bitcast i16* %528 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %543, align 16
  %544 = add nuw nsw i64 %490, 16
  %545 = icmp slt i64 %544, %19
  br i1 %545, label %489, label %546

546:                                              ; preds = %489
  %547 = getelementptr inbounds i8, i8* %487, i64 %6
  %548 = getelementptr inbounds i16, i16* %485, i64 %19
  %549 = add nsw i32 %486, -1
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %844, label %484

551:                                              ; preds = %11
  %552 = icmp eq i16 %34, 2
  %553 = sub nsw i32 2, %26
  %554 = sext i32 %553 to i64
  %555 = mul nsw i64 %554, %4
  %556 = getelementptr inbounds i8, i8* %3, i64 %555
  br i1 %552, label %557, label %756

557:                                              ; preds = %551
  %558 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 2, i64 1, i64 2
  %559 = bitcast <8 x i16> %32 to <16 x i8>
  %560 = shufflevector <16 x i8> %559, <16 x i8> undef, <16 x i32> <i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6, i32 4, i32 6>
  %561 = icmp eq i32 %25, 0
  br i1 %561, label %625, label %562

562:                                              ; preds = %557
  %563 = load i16, i16* %558, align 2
  %564 = getelementptr inbounds i8, i8* %556, i64 -1
  %565 = and i16 %563, 255
  %566 = or i16 %565, 256
  %567 = insertelement <8 x i16> undef, i16 %566, i32 0
  %568 = shufflevector <8 x i16> %567, <8 x i16> undef, <8 x i32> zeroinitializer
  %569 = bitcast <8 x i16> %568 to <16 x i8>
  br label %570

570:                                              ; preds = %620, %562
  %571 = phi i16* [ %23, %562 ], [ %622, %620 ]
  %572 = phi i32 [ %26, %562 ], [ %623, %620 ]
  %573 = phi i8* [ %564, %562 ], [ %621, %620 ]
  %574 = getelementptr inbounds i16, i16* %571, i64 8
  br label %575

575:                                              ; preds = %575, %570
  %576 = phi i64 [ %618, %575 ], [ 0, %570 ]
  %577 = getelementptr inbounds i8, i8* %573, i64 %576
  %578 = bitcast i8* %577 to <16 x i8>*
  %579 = load <16 x i8>, <16 x i8>* %578, align 1
  %580 = getelementptr inbounds i8, i8* %577, i64 1
  %581 = bitcast i8* %580 to <16 x i8>*
  %582 = load <16 x i8>, <16 x i8>* %581, align 1
  %583 = getelementptr inbounds i8, i8* %577, i64 2
  %584 = bitcast i8* %583 to <16 x i8>*
  %585 = load <16 x i8>, <16 x i8>* %584, align 1
  %586 = shufflevector <16 x i8> %579, <16 x i8> %582, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %587 = shufflevector <16 x i8> %585, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %588 = getelementptr inbounds i16, i16* %571, i64 %576
  %589 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %586, <16 x i8> %560) #5
  %590 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %587, <16 x i8> %569) #5
  %591 = bitcast <16 x i8> %586 to <8 x i16>
  %592 = lshr <8 x i16> %591, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %593 = shl nuw nsw <8 x i16> %592, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %594 = add <8 x i16> %590, %589
  %595 = ashr <8 x i16> %594, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %596 = add nsw <8 x i16> %595, %593
  %597 = icmp sgt <8 x i16> %596, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %598 = select <8 x i1> %597, <8 x i16> %596, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %599 = icmp slt <8 x i16> %598, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %600 = select <8 x i1> %599, <8 x i16> %598, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %601 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %600, <8 x i16>* %601, align 16
  %602 = shufflevector <16 x i8> %579, <16 x i8> %582, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %603 = shufflevector <16 x i8> %585, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %604 = getelementptr inbounds i16, i16* %574, i64 %576
  %605 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %602, <16 x i8> %560) #5
  %606 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %603, <16 x i8> %569) #5
  %607 = bitcast <16 x i8> %602 to <8 x i16>
  %608 = lshr <8 x i16> %607, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %609 = shl nuw nsw <8 x i16> %608, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %610 = add <8 x i16> %606, %605
  %611 = ashr <8 x i16> %610, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %612 = add nsw <8 x i16> %611, %609
  %613 = icmp sgt <8 x i16> %612, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %614 = select <8 x i1> %613, <8 x i16> %612, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %615 = icmp slt <8 x i16> %614, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %616 = select <8 x i1> %615, <8 x i16> %614, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %617 = bitcast i16* %604 to <8 x i16>*
  store <8 x i16> %616, <8 x i16>* %617, align 16
  %618 = add nuw nsw i64 %576, 16
  %619 = icmp slt i64 %618, %19
  br i1 %619, label %575, label %620

620:                                              ; preds = %575
  %621 = getelementptr inbounds i8, i8* %573, i64 %4
  %622 = getelementptr inbounds i16, i16* %571, i64 %19
  %623 = add nsw i32 %572, -1
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %625, label %570

625:                                              ; preds = %620, %557
  %626 = phi i16* [ %23, %557 ], [ %622, %620 ]
  %627 = icmp eq i32 %8, 0
  br i1 %627, label %691, label %628

628:                                              ; preds = %625
  %629 = load i16, i16* %558, align 2
  %630 = getelementptr inbounds i8, i8* %1, i64 -1
  %631 = and i16 %629, 255
  %632 = or i16 %631, 256
  %633 = insertelement <8 x i16> undef, i16 %632, i32 0
  %634 = shufflevector <8 x i16> %633, <8 x i16> undef, <8 x i32> zeroinitializer
  %635 = bitcast <8 x i16> %634 to <16 x i8>
  br label %636

636:                                              ; preds = %686, %628
  %637 = phi i16* [ %626, %628 ], [ %688, %686 ]
  %638 = phi i32 [ %8, %628 ], [ %689, %686 ]
  %639 = phi i8* [ %630, %628 ], [ %687, %686 ]
  %640 = getelementptr inbounds i16, i16* %637, i64 8
  br label %641

641:                                              ; preds = %641, %636
  %642 = phi i64 [ %684, %641 ], [ 0, %636 ]
  %643 = getelementptr inbounds i8, i8* %639, i64 %642
  %644 = bitcast i8* %643 to <16 x i8>*
  %645 = load <16 x i8>, <16 x i8>* %644, align 1
  %646 = getelementptr inbounds i8, i8* %643, i64 1
  %647 = bitcast i8* %646 to <16 x i8>*
  %648 = load <16 x i8>, <16 x i8>* %647, align 1
  %649 = getelementptr inbounds i8, i8* %643, i64 2
  %650 = bitcast i8* %649 to <16 x i8>*
  %651 = load <16 x i8>, <16 x i8>* %650, align 1
  %652 = shufflevector <16 x i8> %645, <16 x i8> %648, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %653 = shufflevector <16 x i8> %651, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %654 = getelementptr inbounds i16, i16* %637, i64 %642
  %655 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %652, <16 x i8> %560) #5
  %656 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %653, <16 x i8> %635) #5
  %657 = bitcast <16 x i8> %652 to <8 x i16>
  %658 = lshr <8 x i16> %657, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %659 = shl nuw nsw <8 x i16> %658, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %660 = add <8 x i16> %656, %655
  %661 = ashr <8 x i16> %660, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %662 = add nsw <8 x i16> %661, %659
  %663 = icmp sgt <8 x i16> %662, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %664 = select <8 x i1> %663, <8 x i16> %662, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %665 = icmp slt <8 x i16> %664, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %666 = select <8 x i1> %665, <8 x i16> %664, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %667 = bitcast i16* %654 to <8 x i16>*
  store <8 x i16> %666, <8 x i16>* %667, align 16
  %668 = shufflevector <16 x i8> %645, <16 x i8> %648, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %669 = shufflevector <16 x i8> %651, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %670 = getelementptr inbounds i16, i16* %640, i64 %642
  %671 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %668, <16 x i8> %560) #5
  %672 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %669, <16 x i8> %635) #5
  %673 = bitcast <16 x i8> %668 to <8 x i16>
  %674 = lshr <8 x i16> %673, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %675 = shl nuw nsw <8 x i16> %674, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %676 = add <8 x i16> %672, %671
  %677 = ashr <8 x i16> %676, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %678 = add nsw <8 x i16> %677, %675
  %679 = icmp sgt <8 x i16> %678, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %680 = select <8 x i1> %679, <8 x i16> %678, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %681 = icmp slt <8 x i16> %680, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %682 = select <8 x i1> %681, <8 x i16> %680, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %683 = bitcast i16* %670 to <8 x i16>*
  store <8 x i16> %682, <8 x i16>* %683, align 16
  %684 = add nuw nsw i64 %642, 16
  %685 = icmp slt i64 %684, %19
  br i1 %685, label %641, label %686

686:                                              ; preds = %641
  %687 = getelementptr inbounds i8, i8* %639, i64 %2
  %688 = getelementptr inbounds i16, i16* %637, i64 %19
  %689 = add nsw i32 %638, -1
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %636

691:                                              ; preds = %686, %625
  %692 = phi i16* [ %626, %625 ], [ %688, %686 ]
  br i1 %561, label %844, label %693

693:                                              ; preds = %691
  %694 = load i16, i16* %558, align 2
  %695 = getelementptr inbounds i8, i8* %5, i64 -1
  %696 = and i16 %694, 255
  %697 = or i16 %696, 256
  %698 = insertelement <8 x i16> undef, i16 %697, i32 0
  %699 = shufflevector <8 x i16> %698, <8 x i16> undef, <8 x i32> zeroinitializer
  %700 = bitcast <8 x i16> %699 to <16 x i8>
  br label %701

701:                                              ; preds = %751, %693
  %702 = phi i16* [ %692, %693 ], [ %753, %751 ]
  %703 = phi i32 [ %26, %693 ], [ %754, %751 ]
  %704 = phi i8* [ %695, %693 ], [ %752, %751 ]
  %705 = getelementptr inbounds i16, i16* %702, i64 8
  br label %706

706:                                              ; preds = %706, %701
  %707 = phi i64 [ %749, %706 ], [ 0, %701 ]
  %708 = getelementptr inbounds i8, i8* %704, i64 %707
  %709 = bitcast i8* %708 to <16 x i8>*
  %710 = load <16 x i8>, <16 x i8>* %709, align 1
  %711 = getelementptr inbounds i8, i8* %708, i64 1
  %712 = bitcast i8* %711 to <16 x i8>*
  %713 = load <16 x i8>, <16 x i8>* %712, align 1
  %714 = getelementptr inbounds i8, i8* %708, i64 2
  %715 = bitcast i8* %714 to <16 x i8>*
  %716 = load <16 x i8>, <16 x i8>* %715, align 1
  %717 = shufflevector <16 x i8> %710, <16 x i8> %713, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %718 = shufflevector <16 x i8> %716, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %719 = getelementptr inbounds i16, i16* %702, i64 %707
  %720 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %717, <16 x i8> %560) #5
  %721 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %718, <16 x i8> %700) #5
  %722 = bitcast <16 x i8> %717 to <8 x i16>
  %723 = lshr <8 x i16> %722, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %724 = shl nuw nsw <8 x i16> %723, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %725 = add <8 x i16> %721, %720
  %726 = ashr <8 x i16> %725, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %727 = add nsw <8 x i16> %726, %724
  %728 = icmp sgt <8 x i16> %727, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %729 = select <8 x i1> %728, <8 x i16> %727, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %730 = icmp slt <8 x i16> %729, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %731 = select <8 x i1> %730, <8 x i16> %729, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %732 = bitcast i16* %719 to <8 x i16>*
  store <8 x i16> %731, <8 x i16>* %732, align 16
  %733 = shufflevector <16 x i8> %710, <16 x i8> %713, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %734 = shufflevector <16 x i8> %716, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %735 = getelementptr inbounds i16, i16* %705, i64 %707
  %736 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %733, <16 x i8> %560) #5
  %737 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %734, <16 x i8> %700) #5
  %738 = bitcast <16 x i8> %733 to <8 x i16>
  %739 = lshr <8 x i16> %738, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %740 = shl nuw nsw <8 x i16> %739, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %741 = add <8 x i16> %737, %736
  %742 = ashr <8 x i16> %741, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %743 = add nsw <8 x i16> %742, %740
  %744 = icmp sgt <8 x i16> %743, <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %745 = select <8 x i1> %744, <8 x i16> %743, <8 x i16> <i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048, i16 -2048>
  %746 = icmp slt <8 x i16> %745, <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %747 = select <8 x i1> %746, <8 x i16> %745, <8 x i16> <i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143, i16 6143>
  %748 = bitcast i16* %735 to <8 x i16>*
  store <8 x i16> %747, <8 x i16>* %748, align 16
  %749 = add nuw nsw i64 %707, 16
  %750 = icmp slt i64 %749, %19
  br i1 %750, label %706, label %751

751:                                              ; preds = %706
  %752 = getelementptr inbounds i8, i8* %704, i64 %6
  %753 = getelementptr inbounds i16, i16* %702, i64 %19
  %754 = add nsw i32 %703, -1
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %844, label %701

756:                                              ; preds = %551
  %757 = icmp eq i32 %25, 0
  br i1 %757, label %785, label %758

758:                                              ; preds = %756, %780
  %759 = phi i16* [ %782, %780 ], [ %23, %756 ]
  %760 = phi i8* [ %781, %780 ], [ %556, %756 ]
  %761 = phi i32 [ %783, %780 ], [ %26, %756 ]
  %762 = getelementptr inbounds i16, i16* %759, i64 8
  br label %763

763:                                              ; preds = %763, %758
  %764 = phi i64 [ %778, %763 ], [ 0, %758 ]
  %765 = getelementptr inbounds i8, i8* %760, i64 %764
  %766 = bitcast i8* %765 to <16 x i8>*
  %767 = load <16 x i8>, <16 x i8>* %766, align 1
  %768 = shufflevector <16 x i8> %767, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %769 = shufflevector <16 x i8> %767, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %770 = bitcast <16 x i8> %768 to <8 x i16>
  %771 = shl <8 x i16> %770, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %772 = bitcast <16 x i8> %769 to <8 x i16>
  %773 = shl <8 x i16> %772, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %774 = getelementptr inbounds i16, i16* %759, i64 %764
  %775 = bitcast i16* %774 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %775, align 16
  %776 = getelementptr inbounds i16, i16* %762, i64 %764
  %777 = bitcast i16* %776 to <8 x i16>*
  store <8 x i16> %773, <8 x i16>* %777, align 16
  %778 = add nuw nsw i64 %764, 16
  %779 = icmp slt i64 %778, %19
  br i1 %779, label %763, label %780

780:                                              ; preds = %763
  %781 = getelementptr inbounds i8, i8* %760, i64 %4
  %782 = getelementptr inbounds i16, i16* %759, i64 %19
  %783 = add nsw i32 %761, -1
  %784 = icmp eq i32 %783, 0
  br i1 %784, label %785, label %758

785:                                              ; preds = %780, %756
  %786 = phi i16* [ %23, %756 ], [ %782, %780 ]
  %787 = icmp eq i32 %8, 0
  br i1 %787, label %815, label %788

788:                                              ; preds = %785, %810
  %789 = phi i16* [ %812, %810 ], [ %786, %785 ]
  %790 = phi i8* [ %811, %810 ], [ %1, %785 ]
  %791 = phi i32 [ %813, %810 ], [ %8, %785 ]
  %792 = getelementptr inbounds i16, i16* %789, i64 8
  br label %793

793:                                              ; preds = %793, %788
  %794 = phi i64 [ %808, %793 ], [ 0, %788 ]
  %795 = getelementptr inbounds i8, i8* %790, i64 %794
  %796 = bitcast i8* %795 to <16 x i8>*
  %797 = load <16 x i8>, <16 x i8>* %796, align 1
  %798 = shufflevector <16 x i8> %797, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %799 = shufflevector <16 x i8> %797, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %800 = bitcast <16 x i8> %798 to <8 x i16>
  %801 = shl <8 x i16> %800, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %802 = bitcast <16 x i8> %799 to <8 x i16>
  %803 = shl <8 x i16> %802, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %804 = getelementptr inbounds i16, i16* %789, i64 %794
  %805 = bitcast i16* %804 to <8 x i16>*
  store <8 x i16> %801, <8 x i16>* %805, align 16
  %806 = getelementptr inbounds i16, i16* %792, i64 %794
  %807 = bitcast i16* %806 to <8 x i16>*
  store <8 x i16> %803, <8 x i16>* %807, align 16
  %808 = add nuw nsw i64 %794, 16
  %809 = icmp slt i64 %808, %19
  br i1 %809, label %793, label %810

810:                                              ; preds = %793
  %811 = getelementptr inbounds i8, i8* %790, i64 %2
  %812 = getelementptr inbounds i16, i16* %789, i64 %19
  %813 = add nsw i32 %791, -1
  %814 = icmp eq i32 %813, 0
  br i1 %814, label %815, label %788

815:                                              ; preds = %810, %785
  %816 = phi i16* [ %786, %785 ], [ %812, %810 ]
  br i1 %757, label %844, label %817

817:                                              ; preds = %815, %839
  %818 = phi i16* [ %841, %839 ], [ %816, %815 ]
  %819 = phi i8* [ %840, %839 ], [ %5, %815 ]
  %820 = phi i32 [ %842, %839 ], [ %26, %815 ]
  %821 = getelementptr inbounds i16, i16* %818, i64 8
  br label %822

822:                                              ; preds = %822, %817
  %823 = phi i64 [ %837, %822 ], [ 0, %817 ]
  %824 = getelementptr inbounds i8, i8* %819, i64 %823
  %825 = bitcast i8* %824 to <16 x i8>*
  %826 = load <16 x i8>, <16 x i8>* %825, align 1
  %827 = shufflevector <16 x i8> %826, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %828 = shufflevector <16 x i8> %826, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %829 = bitcast <16 x i8> %827 to <8 x i16>
  %830 = shl <8 x i16> %829, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %831 = bitcast <16 x i8> %828 to <8 x i16>
  %832 = shl <8 x i16> %831, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %833 = getelementptr inbounds i16, i16* %818, i64 %823
  %834 = bitcast i16* %833 to <8 x i16>*
  store <8 x i16> %830, <8 x i16>* %834, align 16
  %835 = getelementptr inbounds i16, i16* %821, i64 %823
  %836 = bitcast i16* %835 to <8 x i16>*
  store <8 x i16> %832, <8 x i16>* %836, align 16
  %837 = add nuw nsw i64 %823, 16
  %838 = icmp slt i64 %837, %19
  br i1 %838, label %822, label %839

839:                                              ; preds = %822
  %840 = getelementptr inbounds i8, i8* %819, i64 %6
  %841 = getelementptr inbounds i16, i16* %818, i64 %19
  %842 = add nsw i32 %820, -1
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %844, label %817

844:                                              ; preds = %546, %306, %839, %751, %815, %691, %474, %222
  %845 = phi i16* [ %223, %222 ], [ %475, %474 ], [ %692, %691 ], [ %816, %815 ], [ %753, %751 ], [ %841, %839 ], [ %308, %306 ], [ %548, %546 ]
  %846 = load i16, i16* %12, align 2
  switch i16 %846, label %1478 [
    i16 0, label %847
    i16 1, label %1111
    i16 2, label %1328
  ]

847:                                              ; preds = %844
  %848 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 2, i64 0, i64 0
  %849 = bitcast i16* %845 to i8*
  %850 = sub nsw i64 0, %19
  %851 = getelementptr inbounds i16, i16* %845, i64 %850
  %852 = bitcast i16* %851 to i8*
  %853 = shl nsw i64 %19, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %849, i8* align 2 %852, i64 %853, i1 false)
  %854 = bitcast %"union.libgav1::RestorationBuffer"* %9 to i8*
  %855 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %19
  %856 = bitcast i16* %855 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 32 %854, i8* align 2 %856, i64 %853, i1 false)
  %857 = bitcast i16* %848 to i64*
  %858 = load i64, i64* %857, align 1
  %859 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %858, i32 0
  %860 = bitcast <2 x i64> %859 to <4 x i32>
  %861 = shufflevector <4 x i32> %860, <4 x i32> undef, <4 x i32> zeroinitializer
  %862 = shufflevector <4 x i32> %860, <4 x i32> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %863 = icmp sgt i32 %8, 1
  br i1 %863, label %864, label %879

864:                                              ; preds = %847
  %865 = lshr i32 %8, 1
  %866 = mul nsw i64 %19, 3
  %867 = shl nsw i64 %19, 2
  %868 = mul nsw i64 %19, 5
  %869 = mul nsw i64 %19, 6
  %870 = bitcast <4 x i32> %861 to <8 x i16>
  %871 = bitcast <4 x i32> %862 to <8 x i16>
  %872 = mul nsw i64 %19, 7
  %873 = shl nsw i64 %2, 1
  br label %874

874:                                              ; preds = %1021, %864
  %875 = phi i16* [ %20, %864 ], [ %1023, %1021 ]
  %876 = phi i8* [ %10, %864 ], [ %1022, %1021 ]
  %877 = phi i32 [ %865, %864 ], [ %1024, %1021 ]
  %878 = getelementptr inbounds i8, i8* %876, i64 %2
  br label %891

879:                                              ; preds = %1021, %847
  %880 = phi i8* [ %10, %847 ], [ %1022, %1021 ]
  %881 = phi i16* [ %20, %847 ], [ %1023, %1021 ]
  %882 = and i32 %8, 1
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %1549, label %884

884:                                              ; preds = %879
  %885 = mul nsw i64 %19, 3
  %886 = shl nsw i64 %19, 2
  %887 = mul nsw i64 %19, 5
  %888 = mul nsw i64 %19, 6
  %889 = bitcast <4 x i32> %861 to <8 x i16>
  %890 = bitcast <4 x i32> %862 to <8 x i16>
  br label %1026

891:                                              ; preds = %891, %874
  %892 = phi i64 [ %1019, %891 ], [ 0, %874 ]
  %893 = getelementptr inbounds i16, i16* %875, i64 %892
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 16
  %896 = getelementptr inbounds i16, i16* %893, i64 %19
  %897 = bitcast i16* %896 to <8 x i16>*
  %898 = load <8 x i16>, <8 x i16>* %897, align 16
  %899 = getelementptr inbounds i16, i16* %893, i64 %853
  %900 = bitcast i16* %899 to <8 x i16>*
  %901 = load <8 x i16>, <8 x i16>* %900, align 16
  %902 = getelementptr inbounds i16, i16* %893, i64 %866
  %903 = bitcast i16* %902 to <8 x i16>*
  %904 = load <8 x i16>, <8 x i16>* %903, align 16
  %905 = getelementptr inbounds i16, i16* %893, i64 %867
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 16
  %908 = getelementptr inbounds i16, i16* %893, i64 %868
  %909 = bitcast i16* %908 to <8 x i16>*
  %910 = load <8 x i16>, <8 x i16>* %909, align 16
  %911 = getelementptr inbounds i16, i16* %893, i64 %869
  %912 = bitcast i16* %911 to <8 x i16>*
  %913 = load <8 x i16>, <8 x i16>* %912, align 16
  %914 = add <8 x i16> %913, %895
  %915 = add <8 x i16> %910, %898
  %916 = add <8 x i16> %907, %901
  %917 = shufflevector <8 x i16> %914, <8 x i16> %915, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %918 = shufflevector <8 x i16> %916, <8 x i16> %904, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %919 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %917, <8 x i16> %870) #5
  %920 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %918, <8 x i16> %871) #5
  %921 = add <4 x i32> %919, <i32 1024, i32 1024, i32 1024, i32 1024>
  %922 = add <4 x i32> %921, %920
  %923 = ashr <4 x i32> %922, <i32 11, i32 11, i32 11, i32 11>
  %924 = shufflevector <8 x i16> %914, <8 x i16> %915, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %925 = shufflevector <8 x i16> %916, <8 x i16> %904, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %926 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %924, <8 x i16> %870) #5
  %927 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %925, <8 x i16> %871) #5
  %928 = add <4 x i32> %926, <i32 1024, i32 1024, i32 1024, i32 1024>
  %929 = add <4 x i32> %928, %927
  %930 = ashr <4 x i32> %929, <i32 11, i32 11, i32 11, i32 11>
  %931 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %923, <4 x i32> %930) #5
  %932 = getelementptr inbounds i16, i16* %893, i64 %872
  %933 = bitcast i16* %932 to <8 x i16>*
  %934 = load <8 x i16>, <8 x i16>* %933, align 16
  %935 = add <8 x i16> %934, %898
  %936 = add <8 x i16> %913, %901
  %937 = add <8 x i16> %910, %904
  %938 = shufflevector <8 x i16> %935, <8 x i16> %936, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %939 = shufflevector <8 x i16> %937, <8 x i16> %907, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %940 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %938, <8 x i16> %870) #5
  %941 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %939, <8 x i16> %871) #5
  %942 = add <4 x i32> %940, <i32 1024, i32 1024, i32 1024, i32 1024>
  %943 = add <4 x i32> %942, %941
  %944 = ashr <4 x i32> %943, <i32 11, i32 11, i32 11, i32 11>
  %945 = shufflevector <8 x i16> %935, <8 x i16> %936, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %946 = shufflevector <8 x i16> %937, <8 x i16> %907, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %947 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %945, <8 x i16> %870) #5
  %948 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %946, <8 x i16> %871) #5
  %949 = add <4 x i32> %947, <i32 1024, i32 1024, i32 1024, i32 1024>
  %950 = add <4 x i32> %949, %948
  %951 = ashr <4 x i32> %950, <i32 11, i32 11, i32 11, i32 11>
  %952 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %944, <4 x i32> %951) #5
  %953 = getelementptr inbounds i16, i16* %893, i64 8
  %954 = bitcast i16* %953 to <8 x i16>*
  %955 = load <8 x i16>, <8 x i16>* %954, align 16
  %956 = getelementptr inbounds i16, i16* %953, i64 %19
  %957 = bitcast i16* %956 to <8 x i16>*
  %958 = load <8 x i16>, <8 x i16>* %957, align 16
  %959 = getelementptr inbounds i16, i16* %953, i64 %853
  %960 = bitcast i16* %959 to <8 x i16>*
  %961 = load <8 x i16>, <8 x i16>* %960, align 16
  %962 = getelementptr inbounds i16, i16* %953, i64 %866
  %963 = bitcast i16* %962 to <8 x i16>*
  %964 = load <8 x i16>, <8 x i16>* %963, align 16
  %965 = getelementptr inbounds i16, i16* %953, i64 %867
  %966 = bitcast i16* %965 to <8 x i16>*
  %967 = load <8 x i16>, <8 x i16>* %966, align 16
  %968 = getelementptr inbounds i16, i16* %953, i64 %868
  %969 = bitcast i16* %968 to <8 x i16>*
  %970 = load <8 x i16>, <8 x i16>* %969, align 16
  %971 = getelementptr inbounds i16, i16* %953, i64 %869
  %972 = bitcast i16* %971 to <8 x i16>*
  %973 = load <8 x i16>, <8 x i16>* %972, align 16
  %974 = add <8 x i16> %973, %955
  %975 = add <8 x i16> %970, %958
  %976 = add <8 x i16> %967, %961
  %977 = shufflevector <8 x i16> %974, <8 x i16> %975, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %978 = shufflevector <8 x i16> %976, <8 x i16> %964, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %979 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %977, <8 x i16> %870) #5
  %980 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %978, <8 x i16> %871) #5
  %981 = add <4 x i32> %979, <i32 1024, i32 1024, i32 1024, i32 1024>
  %982 = add <4 x i32> %981, %980
  %983 = ashr <4 x i32> %982, <i32 11, i32 11, i32 11, i32 11>
  %984 = shufflevector <8 x i16> %974, <8 x i16> %975, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %985 = shufflevector <8 x i16> %976, <8 x i16> %964, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %986 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %984, <8 x i16> %870) #5
  %987 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %985, <8 x i16> %871) #5
  %988 = add <4 x i32> %986, <i32 1024, i32 1024, i32 1024, i32 1024>
  %989 = add <4 x i32> %988, %987
  %990 = ashr <4 x i32> %989, <i32 11, i32 11, i32 11, i32 11>
  %991 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %983, <4 x i32> %990) #5
  %992 = getelementptr inbounds i16, i16* %953, i64 %872
  %993 = bitcast i16* %992 to <8 x i16>*
  %994 = load <8 x i16>, <8 x i16>* %993, align 16
  %995 = add <8 x i16> %994, %958
  %996 = add <8 x i16> %973, %961
  %997 = add <8 x i16> %970, %964
  %998 = shufflevector <8 x i16> %995, <8 x i16> %996, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %999 = shufflevector <8 x i16> %997, <8 x i16> %967, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1000 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %998, <8 x i16> %870) #5
  %1001 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %999, <8 x i16> %871) #5
  %1002 = add <4 x i32> %1000, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1003 = add <4 x i32> %1002, %1001
  %1004 = ashr <4 x i32> %1003, <i32 11, i32 11, i32 11, i32 11>
  %1005 = shufflevector <8 x i16> %995, <8 x i16> %996, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1006 = shufflevector <8 x i16> %997, <8 x i16> %967, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1007 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1005, <8 x i16> %870) #5
  %1008 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1006, <8 x i16> %871) #5
  %1009 = add <4 x i32> %1007, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1010 = add <4 x i32> %1009, %1008
  %1011 = ashr <4 x i32> %1010, <i32 11, i32 11, i32 11, i32 11>
  %1012 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1004, <4 x i32> %1011) #5
  %1013 = getelementptr inbounds i8, i8* %876, i64 %892
  %1014 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %931, <8 x i16> %991) #5
  %1015 = bitcast i8* %1013 to <16 x i8>*
  store <16 x i8> %1014, <16 x i8>* %1015, align 16
  %1016 = getelementptr inbounds i8, i8* %878, i64 %892
  %1017 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %952, <8 x i16> %1012) #5
  %1018 = bitcast i8* %1016 to <16 x i8>*
  store <16 x i8> %1017, <16 x i8>* %1018, align 16
  %1019 = add nuw nsw i64 %892, 16
  %1020 = icmp slt i64 %1019, %19
  br i1 %1020, label %891, label %1021

1021:                                             ; preds = %891
  %1022 = getelementptr inbounds i8, i8* %876, i64 %873
  %1023 = getelementptr inbounds i16, i16* %875, i64 %853
  %1024 = add nsw i32 %877, -1
  %1025 = icmp sgt i32 %1024, 0
  br i1 %1025, label %874, label %879

1026:                                             ; preds = %1026, %884
  %1027 = phi i64 [ %1109, %1026 ], [ 0, %884 ]
  %1028 = getelementptr inbounds i16, i16* %881, i64 %1027
  %1029 = bitcast i16* %1028 to <8 x i16>*
  %1030 = load <8 x i16>, <8 x i16>* %1029, align 16
  %1031 = getelementptr inbounds i16, i16* %1028, i64 %19
  %1032 = bitcast i16* %1031 to <8 x i16>*
  %1033 = load <8 x i16>, <8 x i16>* %1032, align 16
  %1034 = getelementptr inbounds i16, i16* %1028, i64 %853
  %1035 = bitcast i16* %1034 to <8 x i16>*
  %1036 = load <8 x i16>, <8 x i16>* %1035, align 16
  %1037 = getelementptr inbounds i16, i16* %1028, i64 %885
  %1038 = bitcast i16* %1037 to <8 x i16>*
  %1039 = load <8 x i16>, <8 x i16>* %1038, align 16
  %1040 = getelementptr inbounds i16, i16* %1028, i64 %886
  %1041 = bitcast i16* %1040 to <8 x i16>*
  %1042 = load <8 x i16>, <8 x i16>* %1041, align 16
  %1043 = getelementptr inbounds i16, i16* %1028, i64 %887
  %1044 = bitcast i16* %1043 to <8 x i16>*
  %1045 = load <8 x i16>, <8 x i16>* %1044, align 16
  %1046 = getelementptr inbounds i16, i16* %1028, i64 %888
  %1047 = bitcast i16* %1046 to <8 x i16>*
  %1048 = load <8 x i16>, <8 x i16>* %1047, align 16
  %1049 = add <8 x i16> %1048, %1030
  %1050 = add <8 x i16> %1045, %1033
  %1051 = add <8 x i16> %1042, %1036
  %1052 = shufflevector <8 x i16> %1049, <8 x i16> %1050, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1053 = shufflevector <8 x i16> %1051, <8 x i16> %1039, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1054 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1052, <8 x i16> %889) #5
  %1055 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1053, <8 x i16> %890) #5
  %1056 = add <4 x i32> %1054, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1057 = add <4 x i32> %1056, %1055
  %1058 = ashr <4 x i32> %1057, <i32 11, i32 11, i32 11, i32 11>
  %1059 = shufflevector <8 x i16> %1049, <8 x i16> %1050, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1060 = shufflevector <8 x i16> %1051, <8 x i16> %1039, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1061 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1059, <8 x i16> %889) #5
  %1062 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1060, <8 x i16> %890) #5
  %1063 = add <4 x i32> %1061, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1064 = add <4 x i32> %1063, %1062
  %1065 = ashr <4 x i32> %1064, <i32 11, i32 11, i32 11, i32 11>
  %1066 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1058, <4 x i32> %1065) #5
  %1067 = getelementptr inbounds i16, i16* %1028, i64 8
  %1068 = bitcast i16* %1067 to <8 x i16>*
  %1069 = load <8 x i16>, <8 x i16>* %1068, align 16
  %1070 = getelementptr inbounds i16, i16* %1067, i64 %19
  %1071 = bitcast i16* %1070 to <8 x i16>*
  %1072 = load <8 x i16>, <8 x i16>* %1071, align 16
  %1073 = getelementptr inbounds i16, i16* %1067, i64 %853
  %1074 = bitcast i16* %1073 to <8 x i16>*
  %1075 = load <8 x i16>, <8 x i16>* %1074, align 16
  %1076 = getelementptr inbounds i16, i16* %1067, i64 %885
  %1077 = bitcast i16* %1076 to <8 x i16>*
  %1078 = load <8 x i16>, <8 x i16>* %1077, align 16
  %1079 = getelementptr inbounds i16, i16* %1067, i64 %886
  %1080 = bitcast i16* %1079 to <8 x i16>*
  %1081 = load <8 x i16>, <8 x i16>* %1080, align 16
  %1082 = getelementptr inbounds i16, i16* %1067, i64 %887
  %1083 = bitcast i16* %1082 to <8 x i16>*
  %1084 = load <8 x i16>, <8 x i16>* %1083, align 16
  %1085 = getelementptr inbounds i16, i16* %1067, i64 %888
  %1086 = bitcast i16* %1085 to <8 x i16>*
  %1087 = load <8 x i16>, <8 x i16>* %1086, align 16
  %1088 = add <8 x i16> %1087, %1069
  %1089 = add <8 x i16> %1084, %1072
  %1090 = add <8 x i16> %1081, %1075
  %1091 = shufflevector <8 x i16> %1088, <8 x i16> %1089, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1092 = shufflevector <8 x i16> %1090, <8 x i16> %1078, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1093 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1091, <8 x i16> %889) #5
  %1094 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1092, <8 x i16> %890) #5
  %1095 = add <4 x i32> %1093, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1096 = add <4 x i32> %1095, %1094
  %1097 = ashr <4 x i32> %1096, <i32 11, i32 11, i32 11, i32 11>
  %1098 = shufflevector <8 x i16> %1088, <8 x i16> %1089, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1099 = shufflevector <8 x i16> %1090, <8 x i16> %1078, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1100 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1098, <8 x i16> %889) #5
  %1101 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1099, <8 x i16> %890) #5
  %1102 = add <4 x i32> %1100, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1103 = add <4 x i32> %1102, %1101
  %1104 = ashr <4 x i32> %1103, <i32 11, i32 11, i32 11, i32 11>
  %1105 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1097, <4 x i32> %1104) #5
  %1106 = getelementptr inbounds i8, i8* %880, i64 %1027
  %1107 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1066, <8 x i16> %1105) #5
  %1108 = bitcast i8* %1106 to <16 x i8>*
  store <16 x i8> %1107, <16 x i8>* %1108, align 16
  %1109 = add nuw nsw i64 %1027, 16
  %1110 = icmp slt i64 %1109, %19
  br i1 %1110, label %1026, label %1549

1111:                                             ; preds = %844
  %1112 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %19
  %1113 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 2, i64 0, i64 1
  %1114 = bitcast i16* %1113 to i32*
  %1115 = load i32, i32* %1114, align 1
  %1116 = insertelement <4 x i32> undef, i32 %1115, i32 0
  %1117 = shufflevector <4 x i32> %1116, <4 x i32> undef, <4 x i32> zeroinitializer
  %1118 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 2, i64 0, i64 3
  %1119 = load i16, i16* %1118, align 2
  %1120 = zext i16 %1119 to i32
  %1121 = or i32 %1120, 65536
  %1122 = insertelement <4 x i32> undef, i32 %1121, i32 0
  %1123 = shufflevector <4 x i32> %1122, <4 x i32> undef, <4 x i32> zeroinitializer
  %1124 = icmp sgt i32 %8, 1
  br i1 %1124, label %1125, label %1139

1125:                                             ; preds = %1111
  %1126 = lshr i32 %8, 1
  %1127 = shl nsw i64 %19, 1
  %1128 = mul nsw i64 %19, 3
  %1129 = shl nsw i64 %19, 2
  %1130 = bitcast <4 x i32> %1117 to <8 x i16>
  %1131 = bitcast <4 x i32> %1123 to <8 x i16>
  %1132 = mul nsw i64 %19, 5
  %1133 = shl nsw i64 %2, 1
  br label %1134

1134:                                             ; preds = %1256, %1125
  %1135 = phi i16* [ %1112, %1125 ], [ %1258, %1256 ]
  %1136 = phi i8* [ %10, %1125 ], [ %1257, %1256 ]
  %1137 = phi i32 [ %1126, %1125 ], [ %1259, %1256 ]
  %1138 = getelementptr inbounds i8, i8* %1136, i64 %2
  br label %1150

1139:                                             ; preds = %1256, %1111
  %1140 = phi i8* [ %10, %1111 ], [ %1257, %1256 ]
  %1141 = phi i16* [ %1112, %1111 ], [ %1258, %1256 ]
  %1142 = and i32 %8, 1
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1549, label %1144

1144:                                             ; preds = %1139
  %1145 = shl nsw i64 %19, 1
  %1146 = mul nsw i64 %19, 3
  %1147 = shl nsw i64 %19, 2
  %1148 = bitcast <4 x i32> %1117 to <8 x i16>
  %1149 = bitcast <4 x i32> %1123 to <8 x i16>
  br label %1261

1150:                                             ; preds = %1150, %1134
  %1151 = phi i64 [ %1254, %1150 ], [ 0, %1134 ]
  %1152 = getelementptr inbounds i16, i16* %1135, i64 %1151
  %1153 = bitcast i16* %1152 to <8 x i16>*
  %1154 = load <8 x i16>, <8 x i16>* %1153, align 16
  %1155 = getelementptr inbounds i16, i16* %1152, i64 %19
  %1156 = bitcast i16* %1155 to <8 x i16>*
  %1157 = load <8 x i16>, <8 x i16>* %1156, align 16
  %1158 = getelementptr inbounds i16, i16* %1152, i64 %1127
  %1159 = bitcast i16* %1158 to <8 x i16>*
  %1160 = load <8 x i16>, <8 x i16>* %1159, align 16
  %1161 = getelementptr inbounds i16, i16* %1152, i64 %1128
  %1162 = bitcast i16* %1161 to <8 x i16>*
  %1163 = load <8 x i16>, <8 x i16>* %1162, align 16
  %1164 = getelementptr inbounds i16, i16* %1152, i64 %1129
  %1165 = bitcast i16* %1164 to <8 x i16>*
  %1166 = load <8 x i16>, <8 x i16>* %1165, align 16
  %1167 = add <8 x i16> %1166, %1154
  %1168 = add <8 x i16> %1163, %1157
  %1169 = shufflevector <8 x i16> %1167, <8 x i16> %1168, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1170 = shufflevector <8 x i16> %1160, <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1171 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1169, <8 x i16> %1130) #5
  %1172 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1170, <8 x i16> %1131) #5
  %1173 = add <4 x i32> %1172, %1171
  %1174 = ashr <4 x i32> %1173, <i32 11, i32 11, i32 11, i32 11>
  %1175 = shufflevector <8 x i16> %1167, <8 x i16> %1168, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1176 = shufflevector <8 x i16> %1160, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1177 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1175, <8 x i16> %1130) #5
  %1178 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1176, <8 x i16> %1131) #5
  %1179 = add <4 x i32> %1178, %1177
  %1180 = ashr <4 x i32> %1179, <i32 11, i32 11, i32 11, i32 11>
  %1181 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1174, <4 x i32> %1180) #5
  %1182 = getelementptr inbounds i16, i16* %1152, i64 %1132
  %1183 = bitcast i16* %1182 to <8 x i16>*
  %1184 = load <8 x i16>, <8 x i16>* %1183, align 16
  %1185 = add <8 x i16> %1184, %1157
  %1186 = add <8 x i16> %1166, %1160
  %1187 = shufflevector <8 x i16> %1185, <8 x i16> %1186, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1188 = shufflevector <8 x i16> %1163, <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1189 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1187, <8 x i16> %1130) #5
  %1190 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1188, <8 x i16> %1131) #5
  %1191 = add <4 x i32> %1190, %1189
  %1192 = ashr <4 x i32> %1191, <i32 11, i32 11, i32 11, i32 11>
  %1193 = shufflevector <8 x i16> %1185, <8 x i16> %1186, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1194 = shufflevector <8 x i16> %1163, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1195 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1193, <8 x i16> %1130) #5
  %1196 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1194, <8 x i16> %1131) #5
  %1197 = add <4 x i32> %1196, %1195
  %1198 = ashr <4 x i32> %1197, <i32 11, i32 11, i32 11, i32 11>
  %1199 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1192, <4 x i32> %1198) #5
  %1200 = getelementptr inbounds i16, i16* %1152, i64 8
  %1201 = bitcast i16* %1200 to <8 x i16>*
  %1202 = load <8 x i16>, <8 x i16>* %1201, align 16
  %1203 = getelementptr inbounds i16, i16* %1200, i64 %19
  %1204 = bitcast i16* %1203 to <8 x i16>*
  %1205 = load <8 x i16>, <8 x i16>* %1204, align 16
  %1206 = getelementptr inbounds i16, i16* %1200, i64 %1127
  %1207 = bitcast i16* %1206 to <8 x i16>*
  %1208 = load <8 x i16>, <8 x i16>* %1207, align 16
  %1209 = getelementptr inbounds i16, i16* %1200, i64 %1128
  %1210 = bitcast i16* %1209 to <8 x i16>*
  %1211 = load <8 x i16>, <8 x i16>* %1210, align 16
  %1212 = getelementptr inbounds i16, i16* %1200, i64 %1129
  %1213 = bitcast i16* %1212 to <8 x i16>*
  %1214 = load <8 x i16>, <8 x i16>* %1213, align 16
  %1215 = add <8 x i16> %1214, %1202
  %1216 = add <8 x i16> %1211, %1205
  %1217 = shufflevector <8 x i16> %1215, <8 x i16> %1216, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1218 = shufflevector <8 x i16> %1208, <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1219 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1217, <8 x i16> %1130) #5
  %1220 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1218, <8 x i16> %1131) #5
  %1221 = add <4 x i32> %1220, %1219
  %1222 = ashr <4 x i32> %1221, <i32 11, i32 11, i32 11, i32 11>
  %1223 = shufflevector <8 x i16> %1215, <8 x i16> %1216, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1224 = shufflevector <8 x i16> %1208, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1225 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1223, <8 x i16> %1130) #5
  %1226 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1224, <8 x i16> %1131) #5
  %1227 = add <4 x i32> %1226, %1225
  %1228 = ashr <4 x i32> %1227, <i32 11, i32 11, i32 11, i32 11>
  %1229 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1222, <4 x i32> %1228) #5
  %1230 = getelementptr inbounds i16, i16* %1200, i64 %1132
  %1231 = bitcast i16* %1230 to <8 x i16>*
  %1232 = load <8 x i16>, <8 x i16>* %1231, align 16
  %1233 = add <8 x i16> %1232, %1205
  %1234 = add <8 x i16> %1214, %1208
  %1235 = shufflevector <8 x i16> %1233, <8 x i16> %1234, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1236 = shufflevector <8 x i16> %1211, <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1237 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1235, <8 x i16> %1130) #5
  %1238 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1236, <8 x i16> %1131) #5
  %1239 = add <4 x i32> %1238, %1237
  %1240 = ashr <4 x i32> %1239, <i32 11, i32 11, i32 11, i32 11>
  %1241 = shufflevector <8 x i16> %1233, <8 x i16> %1234, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1242 = shufflevector <8 x i16> %1211, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1243 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1241, <8 x i16> %1130) #5
  %1244 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1242, <8 x i16> %1131) #5
  %1245 = add <4 x i32> %1244, %1243
  %1246 = ashr <4 x i32> %1245, <i32 11, i32 11, i32 11, i32 11>
  %1247 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1240, <4 x i32> %1246) #5
  %1248 = getelementptr inbounds i8, i8* %1136, i64 %1151
  %1249 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1181, <8 x i16> %1229) #5
  %1250 = bitcast i8* %1248 to <16 x i8>*
  store <16 x i8> %1249, <16 x i8>* %1250, align 16
  %1251 = getelementptr inbounds i8, i8* %1138, i64 %1151
  %1252 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1199, <8 x i16> %1247) #5
  %1253 = bitcast i8* %1251 to <16 x i8>*
  store <16 x i8> %1252, <16 x i8>* %1253, align 16
  %1254 = add nuw nsw i64 %1151, 16
  %1255 = icmp slt i64 %1254, %19
  br i1 %1255, label %1150, label %1256

1256:                                             ; preds = %1150
  %1257 = getelementptr inbounds i8, i8* %1136, i64 %1133
  %1258 = getelementptr inbounds i16, i16* %1135, i64 %1127
  %1259 = add nsw i32 %1137, -1
  %1260 = icmp sgt i32 %1259, 0
  br i1 %1260, label %1134, label %1139

1261:                                             ; preds = %1261, %1144
  %1262 = phi i64 [ %1326, %1261 ], [ 0, %1144 ]
  %1263 = getelementptr inbounds i16, i16* %1141, i64 %1262
  %1264 = bitcast i16* %1263 to <8 x i16>*
  %1265 = load <8 x i16>, <8 x i16>* %1264, align 16
  %1266 = getelementptr inbounds i16, i16* %1263, i64 %19
  %1267 = bitcast i16* %1266 to <8 x i16>*
  %1268 = load <8 x i16>, <8 x i16>* %1267, align 16
  %1269 = getelementptr inbounds i16, i16* %1263, i64 %1145
  %1270 = bitcast i16* %1269 to <8 x i16>*
  %1271 = load <8 x i16>, <8 x i16>* %1270, align 16
  %1272 = getelementptr inbounds i16, i16* %1263, i64 %1146
  %1273 = bitcast i16* %1272 to <8 x i16>*
  %1274 = load <8 x i16>, <8 x i16>* %1273, align 16
  %1275 = getelementptr inbounds i16, i16* %1263, i64 %1147
  %1276 = bitcast i16* %1275 to <8 x i16>*
  %1277 = load <8 x i16>, <8 x i16>* %1276, align 16
  %1278 = add <8 x i16> %1277, %1265
  %1279 = add <8 x i16> %1274, %1268
  %1280 = shufflevector <8 x i16> %1278, <8 x i16> %1279, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1281 = shufflevector <8 x i16> %1271, <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1282 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1280, <8 x i16> %1148) #5
  %1283 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1281, <8 x i16> %1149) #5
  %1284 = add <4 x i32> %1283, %1282
  %1285 = ashr <4 x i32> %1284, <i32 11, i32 11, i32 11, i32 11>
  %1286 = shufflevector <8 x i16> %1278, <8 x i16> %1279, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1287 = shufflevector <8 x i16> %1271, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1288 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1286, <8 x i16> %1148) #5
  %1289 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1287, <8 x i16> %1149) #5
  %1290 = add <4 x i32> %1289, %1288
  %1291 = ashr <4 x i32> %1290, <i32 11, i32 11, i32 11, i32 11>
  %1292 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1285, <4 x i32> %1291) #5
  %1293 = getelementptr inbounds i16, i16* %1263, i64 8
  %1294 = bitcast i16* %1293 to <8 x i16>*
  %1295 = load <8 x i16>, <8 x i16>* %1294, align 16
  %1296 = getelementptr inbounds i16, i16* %1293, i64 %19
  %1297 = bitcast i16* %1296 to <8 x i16>*
  %1298 = load <8 x i16>, <8 x i16>* %1297, align 16
  %1299 = getelementptr inbounds i16, i16* %1293, i64 %1145
  %1300 = bitcast i16* %1299 to <8 x i16>*
  %1301 = load <8 x i16>, <8 x i16>* %1300, align 16
  %1302 = getelementptr inbounds i16, i16* %1293, i64 %1146
  %1303 = bitcast i16* %1302 to <8 x i16>*
  %1304 = load <8 x i16>, <8 x i16>* %1303, align 16
  %1305 = getelementptr inbounds i16, i16* %1293, i64 %1147
  %1306 = bitcast i16* %1305 to <8 x i16>*
  %1307 = load <8 x i16>, <8 x i16>* %1306, align 16
  %1308 = add <8 x i16> %1307, %1295
  %1309 = add <8 x i16> %1304, %1298
  %1310 = shufflevector <8 x i16> %1308, <8 x i16> %1309, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1311 = shufflevector <8 x i16> %1301, <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1312 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1310, <8 x i16> %1148) #5
  %1313 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1311, <8 x i16> %1149) #5
  %1314 = add <4 x i32> %1313, %1312
  %1315 = ashr <4 x i32> %1314, <i32 11, i32 11, i32 11, i32 11>
  %1316 = shufflevector <8 x i16> %1308, <8 x i16> %1309, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1317 = shufflevector <8 x i16> %1301, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1318 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1316, <8 x i16> %1148) #5
  %1319 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1317, <8 x i16> %1149) #5
  %1320 = add <4 x i32> %1319, %1318
  %1321 = ashr <4 x i32> %1320, <i32 11, i32 11, i32 11, i32 11>
  %1322 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1315, <4 x i32> %1321) #5
  %1323 = getelementptr inbounds i8, i8* %1140, i64 %1262
  %1324 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1292, <8 x i16> %1322) #5
  %1325 = bitcast i8* %1323 to <16 x i8>*
  store <16 x i8> %1324, <16 x i8>* %1325, align 16
  %1326 = add nuw nsw i64 %1262, 16
  %1327 = icmp slt i64 %1326, %19
  br i1 %1327, label %1261, label %1549

1328:                                             ; preds = %844
  %1329 = shl nsw i64 %19, 1
  %1330 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %1329
  %1331 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 3, i32 2, i64 0, i64 2
  %1332 = bitcast i16* %1331 to i32*
  %1333 = load i32, i32* %1332, align 4
  %1334 = insertelement <4 x i32> undef, i32 %1333, i32 0
  %1335 = shufflevector <4 x i32> %1334, <4 x i32> undef, <4 x i32> zeroinitializer
  %1336 = icmp sgt i32 %8, 1
  br i1 %1336, label %1337, label %1347

1337:                                             ; preds = %1328
  %1338 = lshr i32 %8, 1
  %1339 = bitcast <4 x i32> %1335 to <8 x i16>
  %1340 = mul nsw i64 %19, 3
  %1341 = shl nsw i64 %2, 1
  br label %1342

1342:                                             ; preds = %1428, %1337
  %1343 = phi i16* [ %1330, %1337 ], [ %1430, %1428 ]
  %1344 = phi i8* [ %10, %1337 ], [ %1429, %1428 ]
  %1345 = phi i32 [ %1338, %1337 ], [ %1431, %1428 ]
  %1346 = getelementptr inbounds i8, i8* %1344, i64 %2
  br label %1354

1347:                                             ; preds = %1428, %1328
  %1348 = phi i8* [ %10, %1328 ], [ %1429, %1428 ]
  %1349 = phi i16* [ %1330, %1328 ], [ %1430, %1428 ]
  %1350 = and i32 %8, 1
  %1351 = icmp eq i32 %1350, 0
  br i1 %1351, label %1549, label %1352

1352:                                             ; preds = %1347
  %1353 = bitcast <4 x i32> %1335 to <8 x i16>
  br label %1433

1354:                                             ; preds = %1354, %1342
  %1355 = phi i64 [ %1426, %1354 ], [ 0, %1342 ]
  %1356 = getelementptr inbounds i16, i16* %1343, i64 %1355
  %1357 = bitcast i16* %1356 to <8 x i16>*
  %1358 = load <8 x i16>, <8 x i16>* %1357, align 16
  %1359 = getelementptr inbounds i16, i16* %1356, i64 %19
  %1360 = bitcast i16* %1359 to <8 x i16>*
  %1361 = load <8 x i16>, <8 x i16>* %1360, align 16
  %1362 = getelementptr inbounds i16, i16* %1356, i64 %1329
  %1363 = bitcast i16* %1362 to <8 x i16>*
  %1364 = load <8 x i16>, <8 x i16>* %1363, align 16
  %1365 = add <8 x i16> %1364, %1358
  %1366 = shufflevector <8 x i16> %1365, <8 x i16> %1361, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1367 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1366, <8 x i16> %1339) #5
  %1368 = add <4 x i32> %1367, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1369 = ashr <4 x i32> %1368, <i32 11, i32 11, i32 11, i32 11>
  %1370 = shufflevector <8 x i16> %1365, <8 x i16> %1361, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1371 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1370, <8 x i16> %1339) #5
  %1372 = add <4 x i32> %1371, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1373 = ashr <4 x i32> %1372, <i32 11, i32 11, i32 11, i32 11>
  %1374 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1369, <4 x i32> %1373) #5
  %1375 = getelementptr inbounds i16, i16* %1356, i64 %1340
  %1376 = bitcast i16* %1375 to <8 x i16>*
  %1377 = load <8 x i16>, <8 x i16>* %1376, align 16
  %1378 = add <8 x i16> %1377, %1361
  %1379 = shufflevector <8 x i16> %1378, <8 x i16> %1364, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1380 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1379, <8 x i16> %1339) #5
  %1381 = add <4 x i32> %1380, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1382 = ashr <4 x i32> %1381, <i32 11, i32 11, i32 11, i32 11>
  %1383 = shufflevector <8 x i16> %1378, <8 x i16> %1364, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1384 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1383, <8 x i16> %1339) #5
  %1385 = add <4 x i32> %1384, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1386 = ashr <4 x i32> %1385, <i32 11, i32 11, i32 11, i32 11>
  %1387 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1382, <4 x i32> %1386) #5
  %1388 = getelementptr inbounds i16, i16* %1356, i64 8
  %1389 = bitcast i16* %1388 to <8 x i16>*
  %1390 = load <8 x i16>, <8 x i16>* %1389, align 16
  %1391 = getelementptr inbounds i16, i16* %1388, i64 %19
  %1392 = bitcast i16* %1391 to <8 x i16>*
  %1393 = load <8 x i16>, <8 x i16>* %1392, align 16
  %1394 = getelementptr inbounds i16, i16* %1388, i64 %1329
  %1395 = bitcast i16* %1394 to <8 x i16>*
  %1396 = load <8 x i16>, <8 x i16>* %1395, align 16
  %1397 = add <8 x i16> %1396, %1390
  %1398 = shufflevector <8 x i16> %1397, <8 x i16> %1393, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1399 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1398, <8 x i16> %1339) #5
  %1400 = add <4 x i32> %1399, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1401 = ashr <4 x i32> %1400, <i32 11, i32 11, i32 11, i32 11>
  %1402 = shufflevector <8 x i16> %1397, <8 x i16> %1393, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1403 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1402, <8 x i16> %1339) #5
  %1404 = add <4 x i32> %1403, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1405 = ashr <4 x i32> %1404, <i32 11, i32 11, i32 11, i32 11>
  %1406 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1401, <4 x i32> %1405) #5
  %1407 = getelementptr inbounds i16, i16* %1388, i64 %1340
  %1408 = bitcast i16* %1407 to <8 x i16>*
  %1409 = load <8 x i16>, <8 x i16>* %1408, align 16
  %1410 = add <8 x i16> %1409, %1393
  %1411 = shufflevector <8 x i16> %1410, <8 x i16> %1396, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1412 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1411, <8 x i16> %1339) #5
  %1413 = add <4 x i32> %1412, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1414 = ashr <4 x i32> %1413, <i32 11, i32 11, i32 11, i32 11>
  %1415 = shufflevector <8 x i16> %1410, <8 x i16> %1396, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1416 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1415, <8 x i16> %1339) #5
  %1417 = add <4 x i32> %1416, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1418 = ashr <4 x i32> %1417, <i32 11, i32 11, i32 11, i32 11>
  %1419 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1414, <4 x i32> %1418) #5
  %1420 = getelementptr inbounds i8, i8* %1344, i64 %1355
  %1421 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1374, <8 x i16> %1406) #5
  %1422 = bitcast i8* %1420 to <16 x i8>*
  store <16 x i8> %1421, <16 x i8>* %1422, align 16
  %1423 = getelementptr inbounds i8, i8* %1346, i64 %1355
  %1424 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1387, <8 x i16> %1419) #5
  %1425 = bitcast i8* %1423 to <16 x i8>*
  store <16 x i8> %1424, <16 x i8>* %1425, align 16
  %1426 = add nuw nsw i64 %1355, 16
  %1427 = icmp slt i64 %1426, %19
  br i1 %1427, label %1354, label %1428

1428:                                             ; preds = %1354
  %1429 = getelementptr inbounds i8, i8* %1344, i64 %1341
  %1430 = getelementptr inbounds i16, i16* %1343, i64 %1329
  %1431 = add nsw i32 %1345, -1
  %1432 = icmp sgt i32 %1431, 0
  br i1 %1432, label %1342, label %1347

1433:                                             ; preds = %1433, %1352
  %1434 = phi i64 [ %1476, %1433 ], [ 0, %1352 ]
  %1435 = getelementptr inbounds i16, i16* %1349, i64 %1434
  %1436 = bitcast i16* %1435 to <8 x i16>*
  %1437 = load <8 x i16>, <8 x i16>* %1436, align 16
  %1438 = getelementptr inbounds i16, i16* %1435, i64 %19
  %1439 = bitcast i16* %1438 to <8 x i16>*
  %1440 = load <8 x i16>, <8 x i16>* %1439, align 16
  %1441 = getelementptr inbounds i16, i16* %1435, i64 %1329
  %1442 = bitcast i16* %1441 to <8 x i16>*
  %1443 = load <8 x i16>, <8 x i16>* %1442, align 16
  %1444 = add <8 x i16> %1443, %1437
  %1445 = shufflevector <8 x i16> %1444, <8 x i16> %1440, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1446 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1445, <8 x i16> %1353) #5
  %1447 = add <4 x i32> %1446, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1448 = ashr <4 x i32> %1447, <i32 11, i32 11, i32 11, i32 11>
  %1449 = shufflevector <8 x i16> %1444, <8 x i16> %1440, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1450 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1449, <8 x i16> %1353) #5
  %1451 = add <4 x i32> %1450, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1452 = ashr <4 x i32> %1451, <i32 11, i32 11, i32 11, i32 11>
  %1453 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1448, <4 x i32> %1452) #5
  %1454 = getelementptr inbounds i16, i16* %1435, i64 8
  %1455 = bitcast i16* %1454 to <8 x i16>*
  %1456 = load <8 x i16>, <8 x i16>* %1455, align 16
  %1457 = getelementptr inbounds i16, i16* %1454, i64 %19
  %1458 = bitcast i16* %1457 to <8 x i16>*
  %1459 = load <8 x i16>, <8 x i16>* %1458, align 16
  %1460 = getelementptr inbounds i16, i16* %1454, i64 %1329
  %1461 = bitcast i16* %1460 to <8 x i16>*
  %1462 = load <8 x i16>, <8 x i16>* %1461, align 16
  %1463 = add <8 x i16> %1462, %1456
  %1464 = shufflevector <8 x i16> %1463, <8 x i16> %1459, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1465 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1464, <8 x i16> %1353) #5
  %1466 = add <4 x i32> %1465, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1467 = ashr <4 x i32> %1466, <i32 11, i32 11, i32 11, i32 11>
  %1468 = shufflevector <8 x i16> %1463, <8 x i16> %1459, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1469 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1468, <8 x i16> %1353) #5
  %1470 = add <4 x i32> %1469, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1471 = ashr <4 x i32> %1470, <i32 11, i32 11, i32 11, i32 11>
  %1472 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1467, <4 x i32> %1471) #5
  %1473 = getelementptr inbounds i8, i8* %1348, i64 %1434
  %1474 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1453, <8 x i16> %1472) #5
  %1475 = bitcast i8* %1473 to <16 x i8>*
  store <16 x i8> %1474, <16 x i8>* %1475, align 16
  %1476 = add nuw nsw i64 %1434, 16
  %1477 = icmp slt i64 %1476, %19
  br i1 %1477, label %1433, label %1549

1478:                                             ; preds = %844
  %1479 = mul nsw i64 %19, 3
  %1480 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %1479
  %1481 = icmp sgt i32 %8, 1
  br i1 %1481, label %1482, label %1492

1482:                                             ; preds = %1478
  %1483 = lshr i32 %8, 1
  %1484 = shl nsw i64 %2, 1
  %1485 = shl nsw i64 %19, 1
  br label %1486

1486:                                             ; preds = %1527, %1482
  %1487 = phi i32 [ %1483, %1482 ], [ %1530, %1527 ]
  %1488 = phi i16* [ %1480, %1482 ], [ %1529, %1527 ]
  %1489 = phi i8* [ %10, %1482 ], [ %1528, %1527 ]
  %1490 = getelementptr inbounds i16, i16* %1488, i64 %19
  %1491 = getelementptr inbounds i8, i8* %1489, i64 %2
  br label %1497

1492:                                             ; preds = %1527, %1478
  %1493 = phi i8* [ %10, %1478 ], [ %1528, %1527 ]
  %1494 = phi i16* [ %1480, %1478 ], [ %1529, %1527 ]
  %1495 = and i32 %8, 1
  %1496 = icmp eq i32 %1495, 0
  br i1 %1496, label %1549, label %1532

1497:                                             ; preds = %1497, %1486
  %1498 = phi i64 [ %1525, %1497 ], [ 0, %1486 ]
  %1499 = getelementptr inbounds i16, i16* %1488, i64 %1498
  %1500 = getelementptr inbounds i8, i8* %1489, i64 %1498
  %1501 = bitcast i16* %1499 to <8 x i16>*
  %1502 = load <8 x i16>, <8 x i16>* %1501, align 16
  %1503 = getelementptr inbounds i16, i16* %1499, i64 8
  %1504 = bitcast i16* %1503 to <8 x i16>*
  %1505 = load <8 x i16>, <8 x i16>* %1504, align 16
  %1506 = add <8 x i16> %1502, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1507 = add <8 x i16> %1505, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1508 = ashr <8 x i16> %1506, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %1509 = ashr <8 x i16> %1507, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %1510 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1508, <8 x i16> %1509) #5
  %1511 = bitcast i8* %1500 to <16 x i8>*
  store <16 x i8> %1510, <16 x i8>* %1511, align 16
  %1512 = getelementptr inbounds i16, i16* %1490, i64 %1498
  %1513 = getelementptr inbounds i8, i8* %1491, i64 %1498
  %1514 = bitcast i16* %1512 to <8 x i16>*
  %1515 = load <8 x i16>, <8 x i16>* %1514, align 16
  %1516 = getelementptr inbounds i16, i16* %1512, i64 8
  %1517 = bitcast i16* %1516 to <8 x i16>*
  %1518 = load <8 x i16>, <8 x i16>* %1517, align 16
  %1519 = add <8 x i16> %1515, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1520 = add <8 x i16> %1518, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1521 = ashr <8 x i16> %1519, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %1522 = ashr <8 x i16> %1520, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %1523 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1521, <8 x i16> %1522) #5
  %1524 = bitcast i8* %1513 to <16 x i8>*
  store <16 x i8> %1523, <16 x i8>* %1524, align 16
  %1525 = add nuw nsw i64 %1498, 16
  %1526 = icmp slt i64 %1525, %19
  br i1 %1526, label %1497, label %1527

1527:                                             ; preds = %1497
  %1528 = getelementptr inbounds i8, i8* %1489, i64 %1484
  %1529 = getelementptr inbounds i16, i16* %1488, i64 %1485
  %1530 = add nsw i32 %1487, -1
  %1531 = icmp sgt i32 %1530, 0
  br i1 %1531, label %1486, label %1492

1532:                                             ; preds = %1492, %1532
  %1533 = phi i64 [ %1547, %1532 ], [ 0, %1492 ]
  %1534 = getelementptr inbounds i16, i16* %1494, i64 %1533
  %1535 = getelementptr inbounds i8, i8* %1493, i64 %1533
  %1536 = bitcast i16* %1534 to <8 x i16>*
  %1537 = load <8 x i16>, <8 x i16>* %1536, align 16
  %1538 = getelementptr inbounds i16, i16* %1534, i64 8
  %1539 = bitcast i16* %1538 to <8 x i16>*
  %1540 = load <8 x i16>, <8 x i16>* %1539, align 16
  %1541 = add <8 x i16> %1537, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1542 = add <8 x i16> %1540, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %1543 = ashr <8 x i16> %1541, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %1544 = ashr <8 x i16> %1542, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %1545 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1543, <8 x i16> %1544) #5
  %1546 = bitcast i8* %1535 to <16 x i8>*
  store <16 x i8> %1545, <16 x i8>* %1546, align 16
  %1547 = add nuw nsw i64 %1533, 16
  %1548 = icmp slt i64 %1547, %19
  br i1 %1548, label %1532, label %1549

1549:                                             ; preds = %1433, %1261, %1026, %1532, %1492, %1347, %1139, %879
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7libgav13dsp12low_bitdepth12_GLOBAL__N_123SelfGuidedFilter_SSE4_1ERKNS_19RestorationUnitInfoEPKvlS7_lS7_liiPNS_17RestorationBufferEPv(%"struct.libgav1::RestorationUnitInfo"* nocapture readonly dereferenceable(96), i8* nocapture readonly, i64, i8* nocapture readonly, i64, i8* nocapture readonly, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8* nocapture) #2 {
  %12 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [16 x [4 x i8]], [16 x [4 x i8]]* @_ZN7libgav114kSgrProjParamsE, i64 0, i64 %14, i64 2
  %16 = load i8, i8* %15, align 2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %3741

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %3, i64 -3
  %20 = sext i32 %7 to i64
  %21 = add nsw i64 %20, 15
  %22 = and i64 %21, -16
  %23 = add nsw i64 %20, 23
  %24 = add nsw i64 %22, 16
  %25 = getelementptr inbounds [16 x [2 x i16]], [16 x [2 x i16]]* @_ZN7libgav118kSgrScaleParameterE, i64 0, i64 %14, i64 0
  %26 = load i16, i16* %25, align 4
  %27 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 1, i32 1, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 1, i64 0
  %30 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 1, i64 %24
  %31 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 3, i64 %24
  %32 = getelementptr inbounds i16, i16* %30, i64 %24
  %33 = getelementptr inbounds i32, i32* %31, i64 %24
  %34 = getelementptr inbounds i16, i16* %32, i64 %24
  %35 = getelementptr inbounds i32, i32* %33, i64 %24
  %36 = getelementptr inbounds i16, i16* %34, i64 %24
  %37 = getelementptr inbounds i32, i32* %35, i64 %24
  %38 = and i64 %23, -16
  %39 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 6, i64 0
  %40 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 9, i64 0
  %41 = sub nsw i64 %4, %38
  %42 = sub nsw i64 %24, %38
  br label %43

43:                                               ; preds = %191, %18
  %44 = phi i16* [ %30, %18 ], [ %193, %191 ]
  %45 = phi i32* [ %31, %18 ], [ %194, %191 ]
  %46 = phi i8* [ %19, %18 ], [ %192, %191 ]
  %47 = phi i32 [ 2, %18 ], [ %195, %191 ]
  %48 = bitcast i8* %46 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 1
  %50 = bitcast <2 x i64> %49 to <16 x i8>
  %51 = shufflevector <16 x i8> %50, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %52 = bitcast <16 x i8> %51 to <8 x i16>
  %53 = mul <8 x i16> %52, %52
  br label %54

54:                                               ; preds = %54, %43
  %55 = phi <8 x i16> [ %53, %43 ], [ %72, %54 ]
  %56 = phi <2 x i64> [ %49, %43 ], [ %64, %54 ]
  %57 = phi i16* [ %44, %43 ], [ %188, %54 ]
  %58 = phi i32* [ %45, %43 ], [ %189, %54 ]
  %59 = phi i8* [ %46, %43 ], [ %62, %54 ]
  %60 = phi i64 [ %38, %43 ], [ %61, %54 ]
  %61 = add nsw i64 %60, -16
  %62 = getelementptr inbounds i8, i8* %59, i64 16
  %63 = bitcast i8* %62 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 1
  %65 = bitcast <2 x i64> %56 to <16 x i8>
  %66 = shufflevector <16 x i8> %65, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %67 = bitcast <16 x i8> %66 to <8 x i16>
  %68 = mul <8 x i16> %67, %67
  %69 = bitcast <2 x i64> %64 to <16 x i8>
  %70 = shufflevector <16 x i8> %69, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %71 = bitcast <16 x i8> %70 to <8 x i16>
  %72 = mul <8 x i16> %71, %71
  %73 = shufflevector <16 x i8> %65, <16 x i8> %69, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %74 = shufflevector <16 x i8> %65, <16 x i8> %69, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %75 = shufflevector <16 x i8> %65, <16 x i8> %69, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %76 = shufflevector <16 x i8> %65, <16 x i8> %69, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %77 = shufflevector <16 x i8> %65, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %78 = shufflevector <16 x i8> %73, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %79 = bitcast <16 x i8> %77 to <8 x i16>
  %80 = bitcast <16 x i8> %78 to <8 x i16>
  %81 = shufflevector <16 x i8> %74, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %82 = shufflevector <16 x i8> %75, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %83 = bitcast <16 x i8> %81 to <8 x i16>
  %84 = bitcast <16 x i8> %82 to <8 x i16>
  %85 = shufflevector <16 x i8> %76, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %86 = bitcast <16 x i8> %85 to <8 x i16>
  %87 = add <8 x i16> %80, %79
  %88 = add <8 x i16> %87, %83
  %89 = add <8 x i16> %88, %84
  %90 = add <8 x i16> %89, %86
  %91 = shufflevector <16 x i8> %73, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %92 = bitcast <16 x i8> %91 to <8 x i16>
  %93 = shufflevector <16 x i8> %74, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %94 = shufflevector <16 x i8> %75, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %95 = bitcast <16 x i8> %93 to <8 x i16>
  %96 = bitcast <16 x i8> %94 to <8 x i16>
  %97 = shufflevector <16 x i8> %76, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %98 = bitcast <16 x i8> %97 to <8 x i16>
  %99 = add <8 x i16> %92, %67
  %100 = add <8 x i16> %99, %95
  %101 = add <8 x i16> %100, %96
  %102 = add <8 x i16> %101, %98
  %103 = bitcast <8 x i16> %68 to <16 x i8>
  %104 = bitcast <8 x i16> %55 to <16 x i8>
  %105 = shufflevector <16 x i8> %104, <16 x i8> %103, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %106 = shufflevector <16 x i8> %104, <16 x i8> %103, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %107 = shufflevector <16 x i8> %104, <16 x i8> %103, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %108 = shufflevector <16 x i8> %104, <16 x i8> %103, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %109 = shufflevector <8 x i16> %55, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %110 = bitcast <16 x i8> %105 to <8 x i16>
  %111 = shufflevector <8 x i16> %110, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %112 = bitcast <8 x i16> %109 to <4 x i32>
  %113 = bitcast <8 x i16> %111 to <4 x i32>
  %114 = bitcast <16 x i8> %106 to <8 x i16>
  %115 = shufflevector <8 x i16> %114, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %116 = bitcast <16 x i8> %107 to <8 x i16>
  %117 = shufflevector <8 x i16> %116, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %118 = bitcast <8 x i16> %115 to <4 x i32>
  %119 = bitcast <8 x i16> %117 to <4 x i32>
  %120 = bitcast <16 x i8> %108 to <8 x i16>
  %121 = shufflevector <8 x i16> %120, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %122 = bitcast <8 x i16> %121 to <4 x i32>
  %123 = add <4 x i32> %118, %112
  %124 = add <4 x i32> %123, %119
  %125 = add <4 x i32> %124, %113
  %126 = add <4 x i32> %125, %122
  %127 = shufflevector <8 x i16> %55, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %128 = shufflevector <8 x i16> %110, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %129 = bitcast <8 x i16> %127 to <4 x i32>
  %130 = bitcast <8 x i16> %128 to <4 x i32>
  %131 = shufflevector <8 x i16> %114, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %132 = shufflevector <8 x i16> %116, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %133 = bitcast <8 x i16> %131 to <4 x i32>
  %134 = bitcast <8 x i16> %132 to <4 x i32>
  %135 = shufflevector <8 x i16> %120, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %136 = bitcast <8 x i16> %135 to <4 x i32>
  %137 = add <4 x i32> %133, %129
  %138 = add <4 x i32> %137, %134
  %139 = add <4 x i32> %138, %130
  %140 = add <4 x i32> %139, %136
  %141 = bitcast <8 x i16> %72 to <16 x i8>
  %142 = shufflevector <16 x i8> %103, <16 x i8> %141, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %143 = shufflevector <16 x i8> %103, <16 x i8> %141, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %144 = shufflevector <16 x i8> %103, <16 x i8> %141, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %145 = shufflevector <16 x i8> %103, <16 x i8> %141, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %146 = shufflevector <8 x i16> %68, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %147 = bitcast <16 x i8> %142 to <8 x i16>
  %148 = shufflevector <8 x i16> %147, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %149 = bitcast <8 x i16> %146 to <4 x i32>
  %150 = bitcast <8 x i16> %148 to <4 x i32>
  %151 = bitcast <16 x i8> %143 to <8 x i16>
  %152 = shufflevector <8 x i16> %151, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %153 = bitcast <16 x i8> %144 to <8 x i16>
  %154 = shufflevector <8 x i16> %153, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %155 = bitcast <8 x i16> %152 to <4 x i32>
  %156 = bitcast <8 x i16> %154 to <4 x i32>
  %157 = bitcast <16 x i8> %145 to <8 x i16>
  %158 = shufflevector <8 x i16> %157, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %159 = bitcast <8 x i16> %158 to <4 x i32>
  %160 = add <4 x i32> %155, %149
  %161 = add <4 x i32> %160, %156
  %162 = add <4 x i32> %161, %150
  %163 = add <4 x i32> %162, %159
  %164 = shufflevector <8 x i16> %68, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %165 = shufflevector <8 x i16> %147, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %166 = bitcast <8 x i16> %164 to <4 x i32>
  %167 = bitcast <8 x i16> %165 to <4 x i32>
  %168 = shufflevector <8 x i16> %151, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %169 = shufflevector <8 x i16> %153, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %170 = bitcast <8 x i16> %168 to <4 x i32>
  %171 = bitcast <8 x i16> %169 to <4 x i32>
  %172 = shufflevector <8 x i16> %157, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %173 = bitcast <8 x i16> %172 to <4 x i32>
  %174 = add <4 x i32> %170, %166
  %175 = add <4 x i32> %174, %171
  %176 = add <4 x i32> %175, %167
  %177 = add <4 x i32> %176, %173
  %178 = bitcast i16* %57 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %178, align 16
  %179 = getelementptr inbounds i16, i16* %57, i64 8
  %180 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %180, align 16
  %181 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %181, align 16
  %182 = getelementptr inbounds i32, i32* %58, i64 4
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %183, align 16
  %184 = getelementptr inbounds i32, i32* %58, i64 8
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %163, <4 x i32>* %185, align 16
  %186 = getelementptr inbounds i32, i32* %58, i64 12
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %177, <4 x i32>* %187, align 16
  %188 = getelementptr inbounds i16, i16* %57, i64 16
  %189 = getelementptr inbounds i32, i32* %58, i64 16
  %190 = icmp eq i64 %61, 0
  br i1 %190, label %191, label %54

191:                                              ; preds = %54
  %192 = getelementptr inbounds i8, i8* %62, i64 %41
  %193 = getelementptr inbounds i16, i16* %188, i64 %42
  %194 = getelementptr inbounds i32, i32* %189, i64 %42
  %195 = add nsw i32 %47, -1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %43

197:                                              ; preds = %191
  %198 = getelementptr inbounds i8, i8* %1, i64 -3
  %199 = getelementptr inbounds i8, i8* %5, i64 -3
  %200 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 3, i64 0
  %201 = ptrtoint i16* %30 to i64
  %202 = ptrtoint i32* %31 to i64
  %203 = ptrtoint i16* %32 to i64
  %204 = ptrtoint i32* %33 to i64
  %205 = ptrtoint i16* %34 to i64
  %206 = ptrtoint i32* %35 to i64
  %207 = ptrtoint i16* %36 to i64
  %208 = ptrtoint i32* %37 to i64
  %209 = zext i16 %26 to i32
  %210 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 6, i64 %22
  %211 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 9, i64 %22
  %212 = ptrtoint i16* %39 to i64
  %213 = ptrtoint i32* %40 to i64
  %214 = icmp sgt i32 %8, 1
  %215 = getelementptr inbounds i8, i8* %198, i64 %2
  %216 = select i1 %214, i8* %215, i8* %199
  %217 = bitcast i8* %198 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 1
  %219 = bitcast i8* %216 to <2 x i64>*
  %220 = load <2 x i64>, <2 x i64>* %219, align 1
  %221 = bitcast <2 x i64> %218 to <16 x i8>
  %222 = shufflevector <16 x i8> %221, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %223 = bitcast <16 x i8> %222 to <8 x i16>
  %224 = mul <8 x i16> %223, %223
  %225 = bitcast <2 x i64> %220 to <16 x i8>
  %226 = shufflevector <16 x i8> %225, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %227 = bitcast <16 x i8> %226 to <8 x i16>
  %228 = mul <8 x i16> %227, %227
  %229 = shufflevector <16 x i8> %221, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %230 = bitcast <16 x i8> %229 to <8 x i16>
  %231 = mul <8 x i16> %230, %230
  %232 = shufflevector <16 x i8> %225, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %233 = bitcast <16 x i8> %232 to <8 x i16>
  %234 = mul <8 x i16> %233, %233
  %235 = shufflevector <16 x i8> %221, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %236 = shufflevector <16 x i8> %221, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %237 = shufflevector <16 x i8> %221, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %238 = shufflevector <16 x i8> %221, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %239 = shufflevector <16 x i8> %235, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %240 = bitcast <16 x i8> %239 to <8 x i16>
  %241 = shufflevector <16 x i8> %236, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %242 = shufflevector <16 x i8> %237, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %243 = bitcast <16 x i8> %241 to <8 x i16>
  %244 = bitcast <16 x i8> %242 to <8 x i16>
  %245 = shufflevector <16 x i8> %238, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %246 = bitcast <16 x i8> %245 to <8 x i16>
  %247 = add <8 x i16> %240, %223
  %248 = add <8 x i16> %247, %243
  %249 = add <8 x i16> %248, %244
  %250 = add <8 x i16> %249, %246
  %251 = bitcast i16* %34 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %251, align 16
  %252 = shufflevector <16 x i8> %225, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %253 = shufflevector <16 x i8> %225, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %254 = shufflevector <16 x i8> %225, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %255 = shufflevector <16 x i8> %225, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %256 = shufflevector <16 x i8> %252, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %257 = bitcast <16 x i8> %256 to <8 x i16>
  %258 = shufflevector <16 x i8> %253, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %259 = shufflevector <16 x i8> %254, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %260 = bitcast <16 x i8> %258 to <8 x i16>
  %261 = bitcast <16 x i8> %259 to <8 x i16>
  %262 = shufflevector <16 x i8> %255, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %263 = bitcast <16 x i8> %262 to <8 x i16>
  %264 = add <8 x i16> %257, %227
  %265 = add <8 x i16> %264, %260
  %266 = add <8 x i16> %265, %261
  %267 = add <8 x i16> %266, %263
  %268 = bitcast i16* %36 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %268, align 16
  %269 = bitcast <8 x i16> %231 to <16 x i8>
  %270 = bitcast <8 x i16> %224 to <16 x i8>
  %271 = shufflevector <16 x i8> %270, <16 x i8> %269, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %272 = shufflevector <16 x i8> %270, <16 x i8> %269, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %273 = shufflevector <16 x i8> %270, <16 x i8> %269, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %274 = shufflevector <16 x i8> %270, <16 x i8> %269, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %275 = shufflevector <8 x i16> %224, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %276 = bitcast <16 x i8> %271 to <8 x i16>
  %277 = shufflevector <8 x i16> %276, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %278 = bitcast <8 x i16> %275 to <4 x i32>
  %279 = bitcast <8 x i16> %277 to <4 x i32>
  %280 = bitcast <16 x i8> %272 to <8 x i16>
  %281 = shufflevector <8 x i16> %280, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %282 = bitcast <16 x i8> %273 to <8 x i16>
  %283 = shufflevector <8 x i16> %282, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %284 = bitcast <8 x i16> %281 to <4 x i32>
  %285 = bitcast <8 x i16> %283 to <4 x i32>
  %286 = bitcast <16 x i8> %274 to <8 x i16>
  %287 = shufflevector <8 x i16> %286, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %288 = bitcast <8 x i16> %287 to <4 x i32>
  %289 = add <4 x i32> %284, %278
  %290 = add <4 x i32> %289, %285
  %291 = add <4 x i32> %290, %279
  %292 = add <4 x i32> %291, %288
  %293 = shufflevector <8 x i16> %224, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %294 = shufflevector <8 x i16> %276, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %295 = bitcast <8 x i16> %293 to <4 x i32>
  %296 = bitcast <8 x i16> %294 to <4 x i32>
  %297 = shufflevector <8 x i16> %280, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %298 = shufflevector <8 x i16> %282, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %299 = bitcast <8 x i16> %297 to <4 x i32>
  %300 = bitcast <8 x i16> %298 to <4 x i32>
  %301 = shufflevector <8 x i16> %286, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %302 = bitcast <8 x i16> %301 to <4 x i32>
  %303 = add <4 x i32> %299, %295
  %304 = add <4 x i32> %303, %300
  %305 = add <4 x i32> %304, %296
  %306 = add <4 x i32> %305, %302
  %307 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> %292, <4 x i32>* %307, align 16
  %308 = getelementptr inbounds i32, i32* %35, i64 4
  %309 = bitcast i32* %308 to <4 x i32>*
  store <4 x i32> %306, <4 x i32>* %309, align 16
  %310 = bitcast <8 x i16> %234 to <16 x i8>
  %311 = bitcast <8 x i16> %228 to <16 x i8>
  %312 = shufflevector <16 x i8> %311, <16 x i8> %310, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %313 = shufflevector <16 x i8> %311, <16 x i8> %310, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %314 = shufflevector <16 x i8> %311, <16 x i8> %310, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %315 = shufflevector <16 x i8> %311, <16 x i8> %310, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %316 = shufflevector <8 x i16> %228, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %317 = bitcast <16 x i8> %312 to <8 x i16>
  %318 = shufflevector <8 x i16> %317, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %319 = bitcast <8 x i16> %316 to <4 x i32>
  %320 = bitcast <8 x i16> %318 to <4 x i32>
  %321 = bitcast <16 x i8> %313 to <8 x i16>
  %322 = shufflevector <8 x i16> %321, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %323 = bitcast <16 x i8> %314 to <8 x i16>
  %324 = shufflevector <8 x i16> %323, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %325 = bitcast <8 x i16> %322 to <4 x i32>
  %326 = bitcast <8 x i16> %324 to <4 x i32>
  %327 = bitcast <16 x i8> %315 to <8 x i16>
  %328 = shufflevector <8 x i16> %327, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %329 = bitcast <8 x i16> %328 to <4 x i32>
  %330 = add <4 x i32> %325, %319
  %331 = add <4 x i32> %330, %326
  %332 = add <4 x i32> %331, %320
  %333 = add <4 x i32> %332, %329
  %334 = shufflevector <8 x i16> %228, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %335 = shufflevector <8 x i16> %317, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %336 = bitcast <8 x i16> %334 to <4 x i32>
  %337 = bitcast <8 x i16> %335 to <4 x i32>
  %338 = shufflevector <8 x i16> %321, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %339 = shufflevector <8 x i16> %323, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %340 = bitcast <8 x i16> %338 to <4 x i32>
  %341 = bitcast <8 x i16> %339 to <4 x i32>
  %342 = shufflevector <8 x i16> %327, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %343 = bitcast <8 x i16> %342 to <4 x i32>
  %344 = add <4 x i32> %340, %336
  %345 = add <4 x i32> %344, %341
  %346 = add <4 x i32> %345, %337
  %347 = add <4 x i32> %346, %343
  %348 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> %333, <4 x i32>* %348, align 16
  %349 = getelementptr inbounds i32, i32* %37, i64 4
  %350 = bitcast i32* %349 to <4 x i32>*
  store <4 x i32> %347, <4 x i32>* %350, align 16
  %351 = bitcast i16* %30 to <8 x i16>*
  %352 = load <8 x i16>, <8 x i16>* %351, align 16
  %353 = bitcast i16* %32 to <8 x i16>*
  %354 = load <8 x i16>, <8 x i16>* %353, align 16
  %355 = bitcast i32* %31 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 16
  %357 = getelementptr inbounds i32, i32* %31, i64 4
  %358 = bitcast i32* %357 to <4 x i32>*
  %359 = load <4 x i32>, <4 x i32>* %358, align 16
  %360 = bitcast i32* %33 to <4 x i32>*
  %361 = load <4 x i32>, <4 x i32>* %360, align 16
  %362 = getelementptr inbounds i32, i32* %33, i64 4
  %363 = bitcast i32* %362 to <4 x i32>*
  %364 = load <4 x i32>, <4 x i32>* %363, align 16
  %365 = shl <8 x i16> %352, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %366 = add <8 x i16> %267, %250
  %367 = add <8 x i16> %366, %354
  %368 = add <8 x i16> %367, %365
  %369 = shl <4 x i32> %356, <i32 1, i32 1, i32 1, i32 1>
  %370 = add <4 x i32> %361, %369
  %371 = add <4 x i32> %370, %292
  %372 = add <4 x i32> %371, %333
  %373 = shl <4 x i32> %359, <i32 1, i32 1, i32 1, i32 1>
  %374 = add <4 x i32> %306, %373
  %375 = add <4 x i32> %374, %364
  %376 = add <4 x i32> %375, %347
  %377 = shufflevector <8 x i16> %368, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %378 = shufflevector <8 x i16> %368, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %379 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %377, <8 x i16> %377) #5
  %380 = mul <4 x i32> %372, <i32 25, i32 25, i32 25, i32 25>
  %381 = sub <4 x i32> %380, %379
  %382 = icmp sgt <4 x i32> %381, zeroinitializer
  %383 = select <4 x i1> %382, <4 x i32> %381, <4 x i32> zeroinitializer
  %384 = insertelement <4 x i32> undef, i32 %209, i32 0
  %385 = shufflevector <4 x i32> %384, <4 x i32> undef, <4 x i32> zeroinitializer
  %386 = mul <4 x i32> %383, %385
  %387 = add <4 x i32> %386, <i32 524288, i32 524288, i32 524288, i32 524288>
  %388 = lshr <4 x i32> %387, <i32 20, i32 20, i32 20, i32 20>
  %389 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %378, <8 x i16> %378) #5
  %390 = mul <4 x i32> %376, <i32 25, i32 25, i32 25, i32 25>
  %391 = sub <4 x i32> %390, %389
  %392 = icmp sgt <4 x i32> %391, zeroinitializer
  %393 = select <4 x i1> %392, <4 x i32> %391, <4 x i32> zeroinitializer
  %394 = mul <4 x i32> %393, %385
  %395 = add <4 x i32> %394, <i32 524288, i32 524288, i32 524288, i32 524288>
  %396 = lshr <4 x i32> %395, <i32 20, i32 20, i32 20, i32 20>
  %397 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %388, <4 x i32> %396) #5
  %398 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %397, <8 x i16> undef) #5
  %399 = bitcast <16 x i8> %398 to <2 x i64>
  %400 = extractelement <2 x i64> %399, i32 0
  %401 = lshr i64 %400, 8
  %402 = lshr i64 %400, 16
  %403 = lshr i64 %400, 24
  %404 = lshr i64 %400, 32
  %405 = lshr i64 %400, 40
  %406 = lshr i64 %400, 48
  %407 = lshr i64 %400, 56
  %408 = and i64 %400, 255
  %409 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %408
  %410 = load i8, i8* %409, align 1
  %411 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %410, i64 0
  %412 = and i64 %401, 255
  %413 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %412
  %414 = load i8, i8* %413, align 1
  %415 = insertelement <16 x i8> %411, i8 %414, i64 1
  %416 = and i64 %402, 255
  %417 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %416
  %418 = load i8, i8* %417, align 1
  %419 = insertelement <16 x i8> %415, i8 %418, i64 2
  %420 = and i64 %403, 255
  %421 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %420
  %422 = load i8, i8* %421, align 1
  %423 = insertelement <16 x i8> %419, i8 %422, i64 3
  %424 = and i64 %404, 255
  %425 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %424
  %426 = load i8, i8* %425, align 1
  %427 = insertelement <16 x i8> %423, i8 %426, i64 4
  %428 = and i64 %405, 255
  %429 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %428
  %430 = load i8, i8* %429, align 1
  %431 = insertelement <16 x i8> %427, i8 %430, i64 5
  %432 = and i64 %406, 255
  %433 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = insertelement <16 x i8> %431, i8 %434, i64 6
  %436 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %407
  %437 = load i8, i8* %436, align 1
  %438 = insertelement <16 x i8> %435, i8 %437, i64 7
  %439 = shufflevector <16 x i8> %438, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %440 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %439, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %441 = shufflevector <8 x i16> %440, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %442 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %441, <8 x i16> %377) #5
  %443 = shufflevector <8 x i16> %440, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %444 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %443, <8 x i16> %378) #5
  %445 = add <4 x i32> %442, <i32 512, i32 512, i32 512, i32 512>
  %446 = lshr <4 x i32> %445, <i32 10, i32 10, i32 10, i32 10>
  %447 = add <4 x i32> %444, <i32 512, i32 512, i32 512, i32 512>
  %448 = lshr <4 x i32> %447, <i32 10, i32 10, i32 10, i32 10>
  %449 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %446, <4 x i32> %448) #5
  %450 = getelementptr inbounds i8, i8* %1, i64 13
  %451 = getelementptr inbounds i8, i8* %216, i64 16
  %452 = getelementptr inbounds i16, i16* %34, i64 8
  %453 = getelementptr inbounds i16, i16* %36, i64 8
  %454 = getelementptr inbounds i32, i32* %35, i64 8
  %455 = getelementptr inbounds i32, i32* %37, i64 8
  br label %456

456:                                              ; preds = %456, %197
  %457 = phi i64 [ %468, %456 ], [ 0, %197 ]
  %458 = phi <2 x i64> [ %470, %456 ], [ %218, %197 ]
  %459 = phi <16 x i8> [ %922, %456 ], [ <i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, %197 ]
  %460 = phi <16 x i8> [ %922, %456 ], [ %438, %197 ]
  %461 = phi <8 x i16> [ %749, %456 ], [ %234, %197 ]
  %462 = phi <8 x i16> [ %746, %456 ], [ %231, %197 ]
  %463 = phi <8 x i16> [ %933, %456 ], [ %449, %197 ]
  %464 = phi <2 x i64> [ %473, %456 ], [ %220, %197 ]
  %465 = phi i16* [ %1016, %456 ], [ %39, %197 ]
  %466 = phi i32* [ %1017, %456 ], [ %40, %197 ]
  %467 = getelementptr inbounds i8, i8* %450, i64 %457
  %468 = add nuw nsw i64 %457, 16
  %469 = bitcast i8* %467 to <2 x i64>*
  %470 = load <2 x i64>, <2 x i64>* %469, align 1
  %471 = getelementptr inbounds i8, i8* %451, i64 %457
  %472 = bitcast i8* %471 to <2 x i64>*
  %473 = load <2 x i64>, <2 x i64>* %472, align 1
  %474 = or i64 %457, 8
  %475 = bitcast <2 x i64> %470 to <16 x i8>
  %476 = shufflevector <16 x i8> %475, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %477 = bitcast <16 x i8> %476 to <8 x i16>
  %478 = mul <8 x i16> %477, %477
  %479 = bitcast <2 x i64> %473 to <16 x i8>
  %480 = shufflevector <16 x i8> %479, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %481 = bitcast <16 x i8> %480 to <8 x i16>
  %482 = mul <8 x i16> %481, %481
  %483 = bitcast <2 x i64> %458 to <16 x i8>
  %484 = shufflevector <16 x i8> %483, <16 x i8> %475, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %485 = shufflevector <16 x i8> %483, <16 x i8> %475, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %486 = shufflevector <16 x i8> %483, <16 x i8> %475, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %487 = shufflevector <16 x i8> %483, <16 x i8> %475, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %488 = shufflevector <16 x i8> %483, <16 x i8> %475, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %489 = shufflevector <16 x i8> %484, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %490 = shufflevector <16 x i8> %485, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %491 = bitcast <16 x i8> %489 to <8 x i16>
  %492 = bitcast <16 x i8> %490 to <8 x i16>
  %493 = shufflevector <16 x i8> %486, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %494 = shufflevector <16 x i8> %487, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %495 = bitcast <16 x i8> %493 to <8 x i16>
  %496 = bitcast <16 x i8> %494 to <8 x i16>
  %497 = shufflevector <16 x i8> %488, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %498 = bitcast <16 x i8> %497 to <8 x i16>
  %499 = add <8 x i16> %492, %491
  %500 = add <8 x i16> %499, %495
  %501 = add <8 x i16> %500, %496
  %502 = add <8 x i16> %501, %498
  %503 = shufflevector <16 x i8> %484, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %504 = shufflevector <16 x i8> %485, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %505 = bitcast <16 x i8> %503 to <8 x i16>
  %506 = bitcast <16 x i8> %504 to <8 x i16>
  %507 = shufflevector <16 x i8> %486, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %508 = shufflevector <16 x i8> %487, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %509 = bitcast <16 x i8> %507 to <8 x i16>
  %510 = bitcast <16 x i8> %508 to <8 x i16>
  %511 = shufflevector <16 x i8> %488, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %512 = bitcast <16 x i8> %511 to <8 x i16>
  %513 = add <8 x i16> %506, %505
  %514 = add <8 x i16> %513, %509
  %515 = add <8 x i16> %514, %510
  %516 = add <8 x i16> %515, %512
  %517 = getelementptr inbounds i16, i16* %34, i64 %474
  %518 = bitcast i16* %517 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %518, align 16
  %519 = getelementptr inbounds i16, i16* %452, i64 %474
  %520 = bitcast i16* %519 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %520, align 16
  %521 = bitcast <2 x i64> %464 to <16 x i8>
  %522 = shufflevector <16 x i8> %521, <16 x i8> %479, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %523 = shufflevector <16 x i8> %521, <16 x i8> %479, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %524 = shufflevector <16 x i8> %521, <16 x i8> %479, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %525 = shufflevector <16 x i8> %521, <16 x i8> %479, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %526 = shufflevector <16 x i8> %521, <16 x i8> %479, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %527 = shufflevector <16 x i8> %522, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %528 = shufflevector <16 x i8> %523, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %529 = bitcast <16 x i8> %527 to <8 x i16>
  %530 = bitcast <16 x i8> %528 to <8 x i16>
  %531 = shufflevector <16 x i8> %524, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %532 = shufflevector <16 x i8> %525, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %533 = bitcast <16 x i8> %531 to <8 x i16>
  %534 = bitcast <16 x i8> %532 to <8 x i16>
  %535 = shufflevector <16 x i8> %526, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %536 = bitcast <16 x i8> %535 to <8 x i16>
  %537 = add <8 x i16> %530, %529
  %538 = add <8 x i16> %537, %533
  %539 = add <8 x i16> %538, %534
  %540 = add <8 x i16> %539, %536
  %541 = shufflevector <16 x i8> %522, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %542 = shufflevector <16 x i8> %523, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %543 = bitcast <16 x i8> %541 to <8 x i16>
  %544 = bitcast <16 x i8> %542 to <8 x i16>
  %545 = shufflevector <16 x i8> %524, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %546 = shufflevector <16 x i8> %525, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %547 = bitcast <16 x i8> %545 to <8 x i16>
  %548 = bitcast <16 x i8> %546 to <8 x i16>
  %549 = shufflevector <16 x i8> %526, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %550 = bitcast <16 x i8> %549 to <8 x i16>
  %551 = add <8 x i16> %544, %543
  %552 = add <8 x i16> %551, %547
  %553 = add <8 x i16> %552, %548
  %554 = add <8 x i16> %553, %550
  %555 = getelementptr inbounds i16, i16* %36, i64 %474
  %556 = bitcast i16* %555 to <8 x i16>*
  store <8 x i16> %540, <8 x i16>* %556, align 16
  %557 = getelementptr inbounds i16, i16* %453, i64 %474
  %558 = bitcast i16* %557 to <8 x i16>*
  store <8 x i16> %554, <8 x i16>* %558, align 16
  %559 = bitcast <8 x i16> %478 to <16 x i8>
  %560 = bitcast <8 x i16> %462 to <16 x i8>
  %561 = shufflevector <16 x i8> %560, <16 x i8> %559, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %562 = shufflevector <16 x i8> %560, <16 x i8> %559, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %563 = shufflevector <16 x i8> %560, <16 x i8> %559, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %564 = shufflevector <16 x i8> %560, <16 x i8> %559, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %565 = shufflevector <8 x i16> %462, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %566 = bitcast <16 x i8> %561 to <8 x i16>
  %567 = shufflevector <8 x i16> %566, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %568 = bitcast <8 x i16> %565 to <4 x i32>
  %569 = bitcast <8 x i16> %567 to <4 x i32>
  %570 = bitcast <16 x i8> %562 to <8 x i16>
  %571 = shufflevector <8 x i16> %570, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %572 = bitcast <16 x i8> %563 to <8 x i16>
  %573 = shufflevector <8 x i16> %572, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %574 = bitcast <8 x i16> %571 to <4 x i32>
  %575 = bitcast <8 x i16> %573 to <4 x i32>
  %576 = bitcast <16 x i8> %564 to <8 x i16>
  %577 = shufflevector <8 x i16> %576, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %578 = bitcast <8 x i16> %577 to <4 x i32>
  %579 = add <4 x i32> %574, %568
  %580 = add <4 x i32> %579, %575
  %581 = add <4 x i32> %580, %569
  %582 = add <4 x i32> %581, %578
  %583 = shufflevector <8 x i16> %462, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %584 = shufflevector <8 x i16> %566, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %585 = bitcast <8 x i16> %583 to <4 x i32>
  %586 = bitcast <8 x i16> %584 to <4 x i32>
  %587 = shufflevector <8 x i16> %570, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %588 = shufflevector <8 x i16> %572, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %589 = bitcast <8 x i16> %587 to <4 x i32>
  %590 = bitcast <8 x i16> %588 to <4 x i32>
  %591 = shufflevector <8 x i16> %576, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %592 = bitcast <8 x i16> %591 to <4 x i32>
  %593 = add <4 x i32> %589, %585
  %594 = add <4 x i32> %593, %590
  %595 = add <4 x i32> %594, %586
  %596 = add <4 x i32> %595, %592
  %597 = getelementptr inbounds i32, i32* %35, i64 %474
  %598 = bitcast i32* %597 to <4 x i32>*
  store <4 x i32> %582, <4 x i32>* %598, align 16
  %599 = getelementptr inbounds i32, i32* %597, i64 4
  %600 = bitcast i32* %599 to <4 x i32>*
  store <4 x i32> %596, <4 x i32>* %600, align 16
  %601 = bitcast <8 x i16> %482 to <16 x i8>
  %602 = bitcast <8 x i16> %461 to <16 x i8>
  %603 = shufflevector <16 x i8> %602, <16 x i8> %601, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %604 = shufflevector <16 x i8> %602, <16 x i8> %601, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %605 = shufflevector <16 x i8> %602, <16 x i8> %601, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %606 = shufflevector <16 x i8> %602, <16 x i8> %601, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %607 = shufflevector <8 x i16> %461, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %608 = bitcast <16 x i8> %603 to <8 x i16>
  %609 = shufflevector <8 x i16> %608, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %610 = bitcast <8 x i16> %607 to <4 x i32>
  %611 = bitcast <8 x i16> %609 to <4 x i32>
  %612 = bitcast <16 x i8> %604 to <8 x i16>
  %613 = shufflevector <8 x i16> %612, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %614 = bitcast <16 x i8> %605 to <8 x i16>
  %615 = shufflevector <8 x i16> %614, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %616 = bitcast <8 x i16> %613 to <4 x i32>
  %617 = bitcast <8 x i16> %615 to <4 x i32>
  %618 = bitcast <16 x i8> %606 to <8 x i16>
  %619 = shufflevector <8 x i16> %618, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %620 = bitcast <8 x i16> %619 to <4 x i32>
  %621 = add <4 x i32> %616, %610
  %622 = add <4 x i32> %621, %617
  %623 = add <4 x i32> %622, %611
  %624 = add <4 x i32> %623, %620
  %625 = shufflevector <8 x i16> %461, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %626 = shufflevector <8 x i16> %608, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %627 = bitcast <8 x i16> %625 to <4 x i32>
  %628 = bitcast <8 x i16> %626 to <4 x i32>
  %629 = shufflevector <8 x i16> %612, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %630 = shufflevector <8 x i16> %614, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %631 = bitcast <8 x i16> %629 to <4 x i32>
  %632 = bitcast <8 x i16> %630 to <4 x i32>
  %633 = shufflevector <8 x i16> %618, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %634 = bitcast <8 x i16> %633 to <4 x i32>
  %635 = add <4 x i32> %631, %627
  %636 = add <4 x i32> %635, %632
  %637 = add <4 x i32> %636, %628
  %638 = add <4 x i32> %637, %634
  %639 = getelementptr inbounds i32, i32* %37, i64 %474
  %640 = bitcast i32* %639 to <4 x i32>*
  store <4 x i32> %624, <4 x i32>* %640, align 16
  %641 = getelementptr inbounds i32, i32* %639, i64 4
  %642 = bitcast i32* %641 to <4 x i32>*
  store <4 x i32> %638, <4 x i32>* %642, align 16
  %643 = getelementptr inbounds i16, i16* %30, i64 %474
  %644 = bitcast i16* %643 to <8 x i16>*
  %645 = load <8 x i16>, <8 x i16>* %644, align 16
  %646 = getelementptr inbounds i16, i16* %32, i64 %474
  %647 = bitcast i16* %646 to <8 x i16>*
  %648 = load <8 x i16>, <8 x i16>* %647, align 16
  %649 = getelementptr inbounds i32, i32* %31, i64 %474
  %650 = bitcast i32* %649 to <4 x i32>*
  %651 = load <4 x i32>, <4 x i32>* %650, align 16
  %652 = getelementptr inbounds i32, i32* %649, i64 4
  %653 = bitcast i32* %652 to <4 x i32>*
  %654 = load <4 x i32>, <4 x i32>* %653, align 16
  %655 = getelementptr inbounds i32, i32* %33, i64 %474
  %656 = bitcast i32* %655 to <4 x i32>*
  %657 = load <4 x i32>, <4 x i32>* %656, align 16
  %658 = getelementptr inbounds i32, i32* %655, i64 4
  %659 = bitcast i32* %658 to <4 x i32>*
  %660 = load <4 x i32>, <4 x i32>* %659, align 16
  %661 = shl <8 x i16> %645, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %662 = add <8 x i16> %540, %502
  %663 = add <8 x i16> %662, %648
  %664 = add <8 x i16> %663, %661
  %665 = shl <4 x i32> %651, <i32 1, i32 1, i32 1, i32 1>
  %666 = add <4 x i32> %665, %582
  %667 = add <4 x i32> %666, %624
  %668 = add <4 x i32> %667, %657
  %669 = shl <4 x i32> %654, <i32 1, i32 1, i32 1, i32 1>
  %670 = add <4 x i32> %638, %596
  %671 = add <4 x i32> %670, %669
  %672 = add <4 x i32> %671, %660
  %673 = shufflevector <8 x i16> %664, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %674 = shufflevector <8 x i16> %664, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %675 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %673, <8 x i16> %673) #5
  %676 = mul <4 x i32> %668, <i32 25, i32 25, i32 25, i32 25>
  %677 = sub <4 x i32> %676, %675
  %678 = icmp sgt <4 x i32> %677, zeroinitializer
  %679 = select <4 x i1> %678, <4 x i32> %677, <4 x i32> zeroinitializer
  %680 = mul <4 x i32> %679, %385
  %681 = add <4 x i32> %680, <i32 524288, i32 524288, i32 524288, i32 524288>
  %682 = lshr <4 x i32> %681, <i32 20, i32 20, i32 20, i32 20>
  %683 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %674, <8 x i16> %674) #5
  %684 = mul <4 x i32> %672, <i32 25, i32 25, i32 25, i32 25>
  %685 = sub <4 x i32> %684, %683
  %686 = icmp sgt <4 x i32> %685, zeroinitializer
  %687 = select <4 x i1> %686, <4 x i32> %685, <4 x i32> zeroinitializer
  %688 = mul <4 x i32> %687, %385
  %689 = add <4 x i32> %688, <i32 524288, i32 524288, i32 524288, i32 524288>
  %690 = lshr <4 x i32> %689, <i32 20, i32 20, i32 20, i32 20>
  %691 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %682, <4 x i32> %690) #5
  %692 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %691, <8 x i16> undef) #5
  %693 = bitcast <16 x i8> %692 to <2 x i64>
  %694 = extractelement <2 x i64> %693, i32 0
  %695 = lshr i64 %694, 8
  %696 = lshr i64 %694, 16
  %697 = lshr i64 %694, 24
  %698 = lshr i64 %694, 32
  %699 = lshr i64 %694, 40
  %700 = lshr i64 %694, 48
  %701 = lshr i64 %694, 56
  %702 = and i64 %694, 255
  %703 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %702
  %704 = load i8, i8* %703, align 1
  %705 = insertelement <16 x i8> %460, i8 %704, i64 8
  %706 = and i64 %695, 255
  %707 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %706
  %708 = load i8, i8* %707, align 1
  %709 = insertelement <16 x i8> %705, i8 %708, i64 9
  %710 = and i64 %696, 255
  %711 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %710
  %712 = load i8, i8* %711, align 1
  %713 = insertelement <16 x i8> %709, i8 %712, i64 10
  %714 = and i64 %697, 255
  %715 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %714
  %716 = load i8, i8* %715, align 1
  %717 = insertelement <16 x i8> %713, i8 %716, i64 11
  %718 = and i64 %698, 255
  %719 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %718
  %720 = load i8, i8* %719, align 1
  %721 = insertelement <16 x i8> %717, i8 %720, i64 12
  %722 = and i64 %699, 255
  %723 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %722
  %724 = load i8, i8* %723, align 1
  %725 = insertelement <16 x i8> %721, i8 %724, i64 13
  %726 = and i64 %700, 255
  %727 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %726
  %728 = load i8, i8* %727, align 1
  %729 = insertelement <16 x i8> %725, i8 %728, i64 14
  %730 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %701
  %731 = load i8, i8* %730, align 1
  %732 = insertelement <16 x i8> %729, i8 %731, i64 15
  %733 = shufflevector <16 x i8> %732, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %734 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %733, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %735 = shufflevector <8 x i16> %734, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %736 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %735, <8 x i16> %673) #5
  %737 = shufflevector <8 x i16> %734, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %738 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %737, <8 x i16> %674) #5
  %739 = add <4 x i32> %736, <i32 512, i32 512, i32 512, i32 512>
  %740 = lshr <4 x i32> %739, <i32 10, i32 10, i32 10, i32 10>
  %741 = add <4 x i32> %738, <i32 512, i32 512, i32 512, i32 512>
  %742 = lshr <4 x i32> %741, <i32 10, i32 10, i32 10, i32 10>
  %743 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %740, <4 x i32> %742) #5
  %744 = shufflevector <16 x i8> %475, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %745 = bitcast <16 x i8> %744 to <8 x i16>
  %746 = mul <8 x i16> %745, %745
  %747 = shufflevector <16 x i8> %479, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %748 = bitcast <16 x i8> %747 to <8 x i16>
  %749 = mul <8 x i16> %748, %748
  %750 = bitcast <8 x i16> %746 to <16 x i8>
  %751 = shufflevector <16 x i8> %559, <16 x i8> %750, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %752 = shufflevector <16 x i8> %559, <16 x i8> %750, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %753 = shufflevector <16 x i8> %559, <16 x i8> %750, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %754 = shufflevector <16 x i8> %559, <16 x i8> %750, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %755 = shufflevector <8 x i16> %478, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %756 = bitcast <16 x i8> %751 to <8 x i16>
  %757 = shufflevector <8 x i16> %756, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %758 = bitcast <8 x i16> %755 to <4 x i32>
  %759 = bitcast <8 x i16> %757 to <4 x i32>
  %760 = bitcast <16 x i8> %752 to <8 x i16>
  %761 = shufflevector <8 x i16> %760, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %762 = bitcast <16 x i8> %753 to <8 x i16>
  %763 = shufflevector <8 x i16> %762, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %764 = bitcast <8 x i16> %761 to <4 x i32>
  %765 = bitcast <8 x i16> %763 to <4 x i32>
  %766 = bitcast <16 x i8> %754 to <8 x i16>
  %767 = shufflevector <8 x i16> %766, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %768 = bitcast <8 x i16> %767 to <4 x i32>
  %769 = add <4 x i32> %764, %758
  %770 = add <4 x i32> %769, %765
  %771 = add <4 x i32> %770, %759
  %772 = add <4 x i32> %771, %768
  %773 = shufflevector <8 x i16> %478, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %774 = shufflevector <8 x i16> %756, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %775 = bitcast <8 x i16> %773 to <4 x i32>
  %776 = bitcast <8 x i16> %774 to <4 x i32>
  %777 = shufflevector <8 x i16> %760, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %778 = shufflevector <8 x i16> %762, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %779 = bitcast <8 x i16> %777 to <4 x i32>
  %780 = bitcast <8 x i16> %778 to <4 x i32>
  %781 = shufflevector <8 x i16> %766, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %782 = bitcast <8 x i16> %781 to <4 x i32>
  %783 = add <4 x i32> %779, %775
  %784 = add <4 x i32> %783, %780
  %785 = add <4 x i32> %784, %776
  %786 = add <4 x i32> %785, %782
  %787 = getelementptr inbounds i32, i32* %454, i64 %474
  %788 = bitcast i32* %787 to <4 x i32>*
  store <4 x i32> %772, <4 x i32>* %788, align 16
  %789 = getelementptr inbounds i32, i32* %787, i64 4
  %790 = bitcast i32* %789 to <4 x i32>*
  store <4 x i32> %786, <4 x i32>* %790, align 16
  %791 = bitcast <8 x i16> %749 to <16 x i8>
  %792 = shufflevector <16 x i8> %601, <16 x i8> %791, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %793 = shufflevector <16 x i8> %601, <16 x i8> %791, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %794 = shufflevector <16 x i8> %601, <16 x i8> %791, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %795 = shufflevector <16 x i8> %601, <16 x i8> %791, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %796 = shufflevector <8 x i16> %482, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %797 = bitcast <16 x i8> %792 to <8 x i16>
  %798 = shufflevector <8 x i16> %797, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %799 = bitcast <8 x i16> %796 to <4 x i32>
  %800 = bitcast <8 x i16> %798 to <4 x i32>
  %801 = bitcast <16 x i8> %793 to <8 x i16>
  %802 = shufflevector <8 x i16> %801, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %803 = bitcast <16 x i8> %794 to <8 x i16>
  %804 = shufflevector <8 x i16> %803, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %805 = bitcast <8 x i16> %802 to <4 x i32>
  %806 = bitcast <8 x i16> %804 to <4 x i32>
  %807 = bitcast <16 x i8> %795 to <8 x i16>
  %808 = shufflevector <8 x i16> %807, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %809 = bitcast <8 x i16> %808 to <4 x i32>
  %810 = add <4 x i32> %805, %799
  %811 = add <4 x i32> %810, %806
  %812 = add <4 x i32> %811, %800
  %813 = add <4 x i32> %812, %809
  %814 = shufflevector <8 x i16> %482, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %815 = shufflevector <8 x i16> %797, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %816 = bitcast <8 x i16> %814 to <4 x i32>
  %817 = bitcast <8 x i16> %815 to <4 x i32>
  %818 = shufflevector <8 x i16> %801, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %819 = shufflevector <8 x i16> %803, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %820 = bitcast <8 x i16> %818 to <4 x i32>
  %821 = bitcast <8 x i16> %819 to <4 x i32>
  %822 = shufflevector <8 x i16> %807, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %823 = bitcast <8 x i16> %822 to <4 x i32>
  %824 = add <4 x i32> %820, %816
  %825 = add <4 x i32> %824, %821
  %826 = add <4 x i32> %825, %817
  %827 = add <4 x i32> %826, %823
  %828 = getelementptr inbounds i32, i32* %455, i64 %474
  %829 = bitcast i32* %828 to <4 x i32>*
  store <4 x i32> %813, <4 x i32>* %829, align 16
  %830 = getelementptr inbounds i32, i32* %828, i64 4
  %831 = bitcast i32* %830 to <4 x i32>*
  store <4 x i32> %827, <4 x i32>* %831, align 16
  %832 = add nuw nsw i64 %474, 8
  %833 = getelementptr inbounds i16, i16* %30, i64 %832
  %834 = bitcast i16* %833 to <8 x i16>*
  %835 = load <8 x i16>, <8 x i16>* %834, align 16
  %836 = getelementptr inbounds i16, i16* %32, i64 %832
  %837 = bitcast i16* %836 to <8 x i16>*
  %838 = load <8 x i16>, <8 x i16>* %837, align 16
  %839 = getelementptr inbounds i32, i32* %31, i64 %832
  %840 = bitcast i32* %839 to <4 x i32>*
  %841 = load <4 x i32>, <4 x i32>* %840, align 16
  %842 = getelementptr inbounds i32, i32* %839, i64 4
  %843 = bitcast i32* %842 to <4 x i32>*
  %844 = load <4 x i32>, <4 x i32>* %843, align 16
  %845 = getelementptr inbounds i32, i32* %33, i64 %832
  %846 = bitcast i32* %845 to <4 x i32>*
  %847 = load <4 x i32>, <4 x i32>* %846, align 16
  %848 = getelementptr inbounds i32, i32* %845, i64 4
  %849 = bitcast i32* %848 to <4 x i32>*
  %850 = load <4 x i32>, <4 x i32>* %849, align 16
  %851 = shl <8 x i16> %835, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %852 = add <8 x i16> %554, %516
  %853 = add <8 x i16> %852, %838
  %854 = add <8 x i16> %853, %851
  %855 = shl <4 x i32> %841, <i32 1, i32 1, i32 1, i32 1>
  %856 = add <4 x i32> %813, %772
  %857 = add <4 x i32> %856, %855
  %858 = add <4 x i32> %857, %847
  %859 = shl <4 x i32> %844, <i32 1, i32 1, i32 1, i32 1>
  %860 = add <4 x i32> %827, %786
  %861 = add <4 x i32> %860, %859
  %862 = add <4 x i32> %861, %850
  %863 = shufflevector <8 x i16> %854, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %864 = shufflevector <8 x i16> %854, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %865 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %863, <8 x i16> %863) #5
  %866 = mul <4 x i32> %858, <i32 25, i32 25, i32 25, i32 25>
  %867 = sub <4 x i32> %866, %865
  %868 = icmp sgt <4 x i32> %867, zeroinitializer
  %869 = select <4 x i1> %868, <4 x i32> %867, <4 x i32> zeroinitializer
  %870 = mul <4 x i32> %869, %385
  %871 = add <4 x i32> %870, <i32 524288, i32 524288, i32 524288, i32 524288>
  %872 = lshr <4 x i32> %871, <i32 20, i32 20, i32 20, i32 20>
  %873 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %864, <8 x i16> %864) #5
  %874 = mul <4 x i32> %862, <i32 25, i32 25, i32 25, i32 25>
  %875 = sub <4 x i32> %874, %873
  %876 = icmp sgt <4 x i32> %875, zeroinitializer
  %877 = select <4 x i1> %876, <4 x i32> %875, <4 x i32> zeroinitializer
  %878 = mul <4 x i32> %877, %385
  %879 = add <4 x i32> %878, <i32 524288, i32 524288, i32 524288, i32 524288>
  %880 = lshr <4 x i32> %879, <i32 20, i32 20, i32 20, i32 20>
  %881 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %872, <4 x i32> %880) #5
  %882 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %881, <8 x i16> undef) #5
  %883 = bitcast <16 x i8> %882 to <2 x i64>
  %884 = extractelement <2 x i64> %883, i32 0
  %885 = lshr i64 %884, 8
  %886 = lshr i64 %884, 16
  %887 = lshr i64 %884, 24
  %888 = lshr i64 %884, 32
  %889 = lshr i64 %884, 40
  %890 = lshr i64 %884, 48
  %891 = lshr i64 %884, 56
  %892 = and i64 %884, 255
  %893 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %892
  %894 = load i8, i8* %893, align 1
  %895 = insertelement <16 x i8> %459, i8 %894, i64 0
  %896 = and i64 %885, 255
  %897 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %896
  %898 = load i8, i8* %897, align 1
  %899 = insertelement <16 x i8> %895, i8 %898, i64 1
  %900 = and i64 %886, 255
  %901 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %900
  %902 = load i8, i8* %901, align 1
  %903 = insertelement <16 x i8> %899, i8 %902, i64 2
  %904 = and i64 %887, 255
  %905 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %904
  %906 = load i8, i8* %905, align 1
  %907 = insertelement <16 x i8> %903, i8 %906, i64 3
  %908 = and i64 %888, 255
  %909 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %908
  %910 = load i8, i8* %909, align 1
  %911 = insertelement <16 x i8> %907, i8 %910, i64 4
  %912 = and i64 %889, 255
  %913 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %912
  %914 = load i8, i8* %913, align 1
  %915 = insertelement <16 x i8> %911, i8 %914, i64 5
  %916 = and i64 %890, 255
  %917 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %916
  %918 = load i8, i8* %917, align 1
  %919 = insertelement <16 x i8> %915, i8 %918, i64 6
  %920 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %891
  %921 = load i8, i8* %920, align 1
  %922 = insertelement <16 x i8> %919, i8 %921, i64 7
  %923 = shufflevector <16 x i8> %922, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %924 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %923, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %925 = shufflevector <8 x i16> %924, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %926 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %925, <8 x i16> %863) #5
  %927 = shufflevector <8 x i16> %924, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %928 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %927, <8 x i16> %864) #5
  %929 = add <4 x i32> %926, <i32 512, i32 512, i32 512, i32 512>
  %930 = lshr <4 x i32> %929, <i32 10, i32 10, i32 10, i32 10>
  %931 = add <4 x i32> %928, <i32 512, i32 512, i32 512, i32 512>
  %932 = lshr <4 x i32> %931, <i32 10, i32 10, i32 10, i32 10>
  %933 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %930, <4 x i32> %932) #5
  %934 = shufflevector <16 x i8> %732, <16 x i8> %922, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %935 = shufflevector <16 x i8> %732, <16 x i8> %922, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %936 = shufflevector <16 x i8> %732, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %937 = shufflevector <16 x i8> %934, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %938 = bitcast <16 x i8> %936 to <8 x i16>
  %939 = bitcast <16 x i8> %937 to <8 x i16>
  %940 = add <8 x i16> %939, %938
  %941 = shufflevector <16 x i8> %935, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %942 = bitcast <16 x i8> %941 to <8 x i16>
  %943 = add <8 x i16> %940, %942
  %944 = mul <8 x i16> %943, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %945 = add <8 x i16> %944, %939
  %946 = shufflevector <16 x i8> %934, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %947 = bitcast <16 x i8> %733 to <8 x i16>
  %948 = bitcast <16 x i8> %946 to <8 x i16>
  %949 = add <8 x i16> %948, %947
  %950 = shufflevector <16 x i8> %935, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %951 = bitcast <16 x i8> %950 to <8 x i16>
  %952 = add <8 x i16> %949, %951
  %953 = mul <8 x i16> %952, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %954 = add <8 x i16> %953, %948
  %955 = bitcast i16* %465 to <8 x i16>*
  store <8 x i16> %945, <8 x i16>* %955, align 16
  %956 = getelementptr inbounds i16, i16* %465, i64 8
  %957 = bitcast i16* %956 to <8 x i16>*
  store <8 x i16> %954, <8 x i16>* %957, align 16
  %958 = bitcast <8 x i16> %743 to <16 x i8>
  %959 = bitcast <8 x i16> %463 to <16 x i8>
  %960 = shufflevector <16 x i8> %959, <16 x i8> %958, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %961 = bitcast <16 x i8> %960 to <8 x i16>
  %962 = shufflevector <16 x i8> %959, <16 x i8> %958, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %963 = bitcast <16 x i8> %962 to <8 x i16>
  %964 = shufflevector <8 x i16> %463, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %965 = shufflevector <8 x i16> %961, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %966 = bitcast <8 x i16> %964 to <4 x i32>
  %967 = bitcast <8 x i16> %965 to <4 x i32>
  %968 = add <4 x i32> %967, %966
  %969 = shufflevector <8 x i16> %963, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %970 = bitcast <8 x i16> %969 to <4 x i32>
  %971 = add <4 x i32> %968, %970
  %972 = mul <4 x i32> %971, <i32 5, i32 5, i32 5, i32 5>
  %973 = add <4 x i32> %972, %967
  %974 = shufflevector <8 x i16> %463, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %975 = shufflevector <8 x i16> %961, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %976 = bitcast <8 x i16> %974 to <4 x i32>
  %977 = bitcast <8 x i16> %975 to <4 x i32>
  %978 = add <4 x i32> %977, %976
  %979 = shufflevector <8 x i16> %963, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %980 = bitcast <8 x i16> %979 to <4 x i32>
  %981 = add <4 x i32> %978, %980
  %982 = mul <4 x i32> %981, <i32 5, i32 5, i32 5, i32 5>
  %983 = add <4 x i32> %982, %977
  %984 = bitcast <8 x i16> %933 to <16 x i8>
  %985 = shufflevector <16 x i8> %958, <16 x i8> %984, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %986 = bitcast <16 x i8> %985 to <8 x i16>
  %987 = shufflevector <16 x i8> %958, <16 x i8> %984, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %988 = bitcast <16 x i8> %987 to <8 x i16>
  %989 = shufflevector <8 x i16> %743, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %990 = shufflevector <8 x i16> %986, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %991 = bitcast <8 x i16> %989 to <4 x i32>
  %992 = bitcast <8 x i16> %990 to <4 x i32>
  %993 = add <4 x i32> %992, %991
  %994 = shufflevector <8 x i16> %988, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %995 = bitcast <8 x i16> %994 to <4 x i32>
  %996 = add <4 x i32> %993, %995
  %997 = mul <4 x i32> %996, <i32 5, i32 5, i32 5, i32 5>
  %998 = add <4 x i32> %997, %992
  %999 = shufflevector <8 x i16> %743, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1000 = shufflevector <8 x i16> %986, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1001 = bitcast <8 x i16> %999 to <4 x i32>
  %1002 = bitcast <8 x i16> %1000 to <4 x i32>
  %1003 = add <4 x i32> %1002, %1001
  %1004 = shufflevector <8 x i16> %988, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1005 = bitcast <8 x i16> %1004 to <4 x i32>
  %1006 = add <4 x i32> %1003, %1005
  %1007 = mul <4 x i32> %1006, <i32 5, i32 5, i32 5, i32 5>
  %1008 = add <4 x i32> %1007, %1002
  %1009 = bitcast i32* %466 to <4 x i32>*
  store <4 x i32> %973, <4 x i32>* %1009, align 16
  %1010 = getelementptr inbounds i32, i32* %466, i64 4
  %1011 = bitcast i32* %1010 to <4 x i32>*
  store <4 x i32> %983, <4 x i32>* %1011, align 16
  %1012 = getelementptr inbounds i32, i32* %466, i64 8
  %1013 = bitcast i32* %1012 to <4 x i32>*
  store <4 x i32> %998, <4 x i32>* %1013, align 16
  %1014 = getelementptr inbounds i32, i32* %466, i64 12
  %1015 = bitcast i32* %1014 to <4 x i32>*
  store <4 x i32> %1008, <4 x i32>* %1015, align 16
  %1016 = getelementptr inbounds i16, i16* %465, i64 16
  %1017 = getelementptr inbounds i32, i32* %466, i64 16
  %1018 = icmp slt i64 %468, %20
  br i1 %1018, label %456, label %1019

1019:                                             ; preds = %456
  %1020 = ptrtoint i16* %210 to i64
  %1021 = ptrtoint i32* %211 to i64
  %1022 = ashr i32 %8, 1
  %1023 = shl nsw i64 %2, 1
  %1024 = mul nsw i64 %2, 3
  %1025 = shl i32 %28, 16
  %1026 = ashr exact i32 %1025, 16
  %1027 = insertelement <4 x i32> undef, i32 %1026, i32 0
  %1028 = shufflevector <4 x i32> %1027, <4 x i32> undef, <4 x i32> zeroinitializer
  %1029 = bitcast <4 x i32> %1028 to <8 x i16>
  %1030 = ptrtoint i16* %29 to i64
  %1031 = ptrtoint i32* %200 to i64
  %1032 = add nsw i32 %1022, -1
  %1033 = icmp sgt i32 %1032, 0
  br i1 %1033, label %1054, label %1034

1034:                                             ; preds = %2054, %1019
  %1035 = phi i64 [ %207, %1019 ], [ %1068, %2054 ]
  %1036 = phi i64 [ %205, %1019 ], [ %1062, %2054 ]
  %1037 = phi i64 [ %203, %1019 ], [ %1071, %2054 ]
  %1038 = phi i64 [ %201, %1019 ], [ %1070, %2054 ]
  %1039 = phi i64 [ %208, %1019 ], [ %1064, %2054 ]
  %1040 = phi i64 [ %206, %1019 ], [ %1063, %2054 ]
  %1041 = phi i64 [ %204, %1019 ], [ %1067, %2054 ]
  %1042 = phi i64 [ %202, %1019 ], [ %1066, %2054 ]
  %1043 = phi i64 [ %1031, %1019 ], [ %1065, %2054 ]
  %1044 = phi i64 [ %1030, %1019 ], [ %1069, %2054 ]
  %1045 = phi i64 [ %1020, %1019 ], [ %1060, %2054 ]
  %1046 = phi i64 [ %212, %1019 ], [ %1061, %2054 ]
  %1047 = phi i64 [ %1021, %1019 ], [ %1058, %2054 ]
  %1048 = phi i64 [ %213, %1019 ], [ %1059, %2054 ]
  %1049 = phi i8* [ %10, %1019 ], [ %2055, %2054 ]
  %1050 = phi i8* [ %198, %1019 ], [ %1074, %2054 ]
  %1051 = and i32 %8, 1
  %1052 = icmp eq i32 %1051, 0
  %1053 = or i1 %214, %1052
  br i1 %1053, label %2058, label %3043

1054:                                             ; preds = %1019, %2054
  %1055 = phi i32 [ %2056, %2054 ], [ %1032, %1019 ]
  %1056 = phi i8* [ %1074, %2054 ], [ %198, %1019 ]
  %1057 = phi i8* [ %2055, %2054 ], [ %10, %1019 ]
  %1058 = phi i64 [ %1059, %2054 ], [ %213, %1019 ]
  %1059 = phi i64 [ %1058, %2054 ], [ %1021, %1019 ]
  %1060 = phi i64 [ %1061, %2054 ], [ %212, %1019 ]
  %1061 = phi i64 [ %1060, %2054 ], [ %1020, %1019 ]
  %1062 = phi i64 [ %1069, %2054 ], [ %1030, %1019 ]
  %1063 = phi i64 [ %1065, %2054 ], [ %1031, %1019 ]
  %1064 = phi i64 [ %1066, %2054 ], [ %202, %1019 ]
  %1065 = phi i64 [ %1067, %2054 ], [ %204, %1019 ]
  %1066 = phi i64 [ %1063, %2054 ], [ %206, %1019 ]
  %1067 = phi i64 [ %1064, %2054 ], [ %208, %1019 ]
  %1068 = phi i64 [ %1070, %2054 ], [ %201, %1019 ]
  %1069 = phi i64 [ %1071, %2054 ], [ %203, %1019 ]
  %1070 = phi i64 [ %1062, %2054 ], [ %205, %1019 ]
  %1071 = phi i64 [ %1068, %2054 ], [ %207, %1019 ]
  %1072 = inttoptr i64 %1062 to <8 x i16>*
  %1073 = getelementptr inbounds i8, i8* %1056, i64 3
  %1074 = getelementptr inbounds i8, i8* %1056, i64 %1023
  %1075 = getelementptr inbounds i8, i8* %1056, i64 %1024
  %1076 = bitcast i8* %1074 to <2 x i64>*
  %1077 = load <2 x i64>, <2 x i64>* %1076, align 1
  %1078 = bitcast i8* %1075 to <2 x i64>*
  %1079 = load <2 x i64>, <2 x i64>* %1078, align 1
  %1080 = bitcast <2 x i64> %1077 to <16 x i8>
  %1081 = shufflevector <16 x i8> %1080, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1082 = bitcast <16 x i8> %1081 to <8 x i16>
  %1083 = mul <8 x i16> %1082, %1082
  %1084 = bitcast <2 x i64> %1079 to <16 x i8>
  %1085 = shufflevector <16 x i8> %1084, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1086 = bitcast <16 x i8> %1085 to <8 x i16>
  %1087 = mul <8 x i16> %1086, %1086
  %1088 = shufflevector <16 x i8> %1080, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1089 = bitcast <16 x i8> %1088 to <8 x i16>
  %1090 = mul <8 x i16> %1089, %1089
  %1091 = shufflevector <16 x i8> %1084, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1092 = bitcast <16 x i8> %1091 to <8 x i16>
  %1093 = mul <8 x i16> %1092, %1092
  %1094 = shufflevector <16 x i8> %1080, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1095 = shufflevector <16 x i8> %1080, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1096 = shufflevector <16 x i8> %1080, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1097 = shufflevector <16 x i8> %1080, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1098 = shufflevector <16 x i8> %1094, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1099 = bitcast <16 x i8> %1098 to <8 x i16>
  %1100 = shufflevector <16 x i8> %1095, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1101 = shufflevector <16 x i8> %1096, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1102 = bitcast <16 x i8> %1100 to <8 x i16>
  %1103 = bitcast <16 x i8> %1101 to <8 x i16>
  %1104 = shufflevector <16 x i8> %1097, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1105 = bitcast <16 x i8> %1104 to <8 x i16>
  %1106 = add <8 x i16> %1099, %1082
  %1107 = add <8 x i16> %1106, %1102
  %1108 = add <8 x i16> %1107, %1103
  %1109 = add <8 x i16> %1108, %1105
  store <8 x i16> %1109, <8 x i16>* %1072, align 16
  %1110 = shufflevector <16 x i8> %1084, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1111 = shufflevector <16 x i8> %1084, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1112 = shufflevector <16 x i8> %1084, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1113 = shufflevector <16 x i8> %1084, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %1114 = shufflevector <16 x i8> %1110, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1115 = bitcast <16 x i8> %1114 to <8 x i16>
  %1116 = shufflevector <16 x i8> %1111, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1117 = shufflevector <16 x i8> %1112, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1118 = bitcast <16 x i8> %1116 to <8 x i16>
  %1119 = bitcast <16 x i8> %1117 to <8 x i16>
  %1120 = shufflevector <16 x i8> %1113, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1121 = bitcast <16 x i8> %1120 to <8 x i16>
  %1122 = add <8 x i16> %1115, %1086
  %1123 = add <8 x i16> %1122, %1118
  %1124 = add <8 x i16> %1123, %1119
  %1125 = add <8 x i16> %1124, %1121
  %1126 = inttoptr i64 %1068 to <8 x i16>*
  store <8 x i16> %1125, <8 x i16>* %1126, align 16
  %1127 = bitcast <8 x i16> %1090 to <16 x i8>
  %1128 = bitcast <8 x i16> %1083 to <16 x i8>
  %1129 = shufflevector <16 x i8> %1128, <16 x i8> %1127, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1130 = shufflevector <16 x i8> %1128, <16 x i8> %1127, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1131 = shufflevector <16 x i8> %1128, <16 x i8> %1127, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %1132 = shufflevector <16 x i8> %1128, <16 x i8> %1127, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1133 = shufflevector <8 x i16> %1083, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1134 = bitcast <16 x i8> %1129 to <8 x i16>
  %1135 = shufflevector <8 x i16> %1134, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1136 = bitcast <8 x i16> %1133 to <4 x i32>
  %1137 = bitcast <8 x i16> %1135 to <4 x i32>
  %1138 = bitcast <16 x i8> %1130 to <8 x i16>
  %1139 = shufflevector <8 x i16> %1138, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1140 = bitcast <16 x i8> %1131 to <8 x i16>
  %1141 = shufflevector <8 x i16> %1140, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1142 = bitcast <8 x i16> %1139 to <4 x i32>
  %1143 = bitcast <8 x i16> %1141 to <4 x i32>
  %1144 = bitcast <16 x i8> %1132 to <8 x i16>
  %1145 = shufflevector <8 x i16> %1144, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1146 = bitcast <8 x i16> %1145 to <4 x i32>
  %1147 = add <4 x i32> %1142, %1136
  %1148 = add <4 x i32> %1147, %1143
  %1149 = add <4 x i32> %1148, %1137
  %1150 = add <4 x i32> %1149, %1146
  %1151 = shufflevector <8 x i16> %1083, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1152 = shufflevector <8 x i16> %1134, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1153 = bitcast <8 x i16> %1151 to <4 x i32>
  %1154 = bitcast <8 x i16> %1152 to <4 x i32>
  %1155 = shufflevector <8 x i16> %1138, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1156 = shufflevector <8 x i16> %1140, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1157 = bitcast <8 x i16> %1155 to <4 x i32>
  %1158 = bitcast <8 x i16> %1156 to <4 x i32>
  %1159 = shufflevector <8 x i16> %1144, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1160 = bitcast <8 x i16> %1159 to <4 x i32>
  %1161 = add <4 x i32> %1157, %1153
  %1162 = add <4 x i32> %1161, %1158
  %1163 = add <4 x i32> %1162, %1154
  %1164 = add <4 x i32> %1163, %1160
  %1165 = inttoptr i64 %1063 to i32*
  %1166 = inttoptr i64 %1063 to <4 x i32>*
  store <4 x i32> %1150, <4 x i32>* %1166, align 16
  %1167 = getelementptr inbounds i32, i32* %1165, i64 4
  %1168 = bitcast i32* %1167 to <4 x i32>*
  store <4 x i32> %1164, <4 x i32>* %1168, align 16
  %1169 = bitcast <8 x i16> %1093 to <16 x i8>
  %1170 = bitcast <8 x i16> %1087 to <16 x i8>
  %1171 = shufflevector <16 x i8> %1170, <16 x i8> %1169, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1172 = shufflevector <16 x i8> %1170, <16 x i8> %1169, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1173 = shufflevector <16 x i8> %1170, <16 x i8> %1169, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %1174 = shufflevector <16 x i8> %1170, <16 x i8> %1169, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1175 = shufflevector <8 x i16> %1087, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1176 = bitcast <16 x i8> %1171 to <8 x i16>
  %1177 = shufflevector <8 x i16> %1176, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1178 = bitcast <8 x i16> %1175 to <4 x i32>
  %1179 = bitcast <8 x i16> %1177 to <4 x i32>
  %1180 = bitcast <16 x i8> %1172 to <8 x i16>
  %1181 = shufflevector <8 x i16> %1180, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1182 = bitcast <16 x i8> %1173 to <8 x i16>
  %1183 = shufflevector <8 x i16> %1182, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1184 = bitcast <8 x i16> %1181 to <4 x i32>
  %1185 = bitcast <8 x i16> %1183 to <4 x i32>
  %1186 = bitcast <16 x i8> %1174 to <8 x i16>
  %1187 = shufflevector <8 x i16> %1186, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1188 = bitcast <8 x i16> %1187 to <4 x i32>
  %1189 = add <4 x i32> %1184, %1178
  %1190 = add <4 x i32> %1189, %1185
  %1191 = add <4 x i32> %1190, %1179
  %1192 = add <4 x i32> %1191, %1188
  %1193 = shufflevector <8 x i16> %1087, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1194 = shufflevector <8 x i16> %1176, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1195 = bitcast <8 x i16> %1193 to <4 x i32>
  %1196 = bitcast <8 x i16> %1194 to <4 x i32>
  %1197 = shufflevector <8 x i16> %1180, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1198 = shufflevector <8 x i16> %1182, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1199 = bitcast <8 x i16> %1197 to <4 x i32>
  %1200 = bitcast <8 x i16> %1198 to <4 x i32>
  %1201 = shufflevector <8 x i16> %1186, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1202 = bitcast <8 x i16> %1201 to <4 x i32>
  %1203 = add <4 x i32> %1199, %1195
  %1204 = add <4 x i32> %1203, %1200
  %1205 = add <4 x i32> %1204, %1196
  %1206 = add <4 x i32> %1205, %1202
  %1207 = inttoptr i64 %1064 to i32*
  %1208 = inttoptr i64 %1064 to <4 x i32>*
  store <4 x i32> %1192, <4 x i32>* %1208, align 16
  %1209 = getelementptr inbounds i32, i32* %1207, i64 4
  %1210 = bitcast i32* %1209 to <4 x i32>*
  store <4 x i32> %1206, <4 x i32>* %1210, align 16
  %1211 = inttoptr i64 %1069 to <8 x i16>*
  %1212 = load <8 x i16>, <8 x i16>* %1211, align 16
  %1213 = inttoptr i64 %1070 to <8 x i16>*
  %1214 = load <8 x i16>, <8 x i16>* %1213, align 16
  %1215 = inttoptr i64 %1071 to <8 x i16>*
  %1216 = load <8 x i16>, <8 x i16>* %1215, align 16
  %1217 = inttoptr i64 %1065 to i32*
  %1218 = inttoptr i64 %1065 to <4 x i32>*
  %1219 = load <4 x i32>, <4 x i32>* %1218, align 16
  %1220 = getelementptr inbounds i32, i32* %1217, i64 4
  %1221 = bitcast i32* %1220 to <4 x i32>*
  %1222 = load <4 x i32>, <4 x i32>* %1221, align 16
  %1223 = inttoptr i64 %1066 to i32*
  %1224 = inttoptr i64 %1066 to <4 x i32>*
  %1225 = load <4 x i32>, <4 x i32>* %1224, align 16
  %1226 = getelementptr inbounds i32, i32* %1223, i64 4
  %1227 = bitcast i32* %1226 to <4 x i32>*
  %1228 = load <4 x i32>, <4 x i32>* %1227, align 16
  %1229 = inttoptr i64 %1067 to i32*
  %1230 = inttoptr i64 %1067 to <4 x i32>*
  %1231 = load <4 x i32>, <4 x i32>* %1230, align 16
  %1232 = getelementptr inbounds i32, i32* %1229, i64 4
  %1233 = bitcast i32* %1232 to <4 x i32>*
  %1234 = load <4 x i32>, <4 x i32>* %1233, align 16
  %1235 = add <8 x i16> %1212, %1109
  %1236 = add <8 x i16> %1235, %1125
  %1237 = add <8 x i16> %1236, %1214
  %1238 = add <8 x i16> %1237, %1216
  %1239 = add <4 x i32> %1150, %1219
  %1240 = add <4 x i32> %1239, %1225
  %1241 = add <4 x i32> %1240, %1192
  %1242 = add <4 x i32> %1241, %1231
  %1243 = add <4 x i32> %1164, %1222
  %1244 = add <4 x i32> %1243, %1206
  %1245 = add <4 x i32> %1244, %1228
  %1246 = add <4 x i32> %1245, %1234
  %1247 = shufflevector <8 x i16> %1238, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1248 = shufflevector <8 x i16> %1238, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1249 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1247, <8 x i16> %1247) #5
  %1250 = mul <4 x i32> %1242, <i32 25, i32 25, i32 25, i32 25>
  %1251 = sub <4 x i32> %1250, %1249
  %1252 = icmp sgt <4 x i32> %1251, zeroinitializer
  %1253 = select <4 x i1> %1252, <4 x i32> %1251, <4 x i32> zeroinitializer
  %1254 = mul <4 x i32> %1253, %385
  %1255 = add <4 x i32> %1254, <i32 524288, i32 524288, i32 524288, i32 524288>
  %1256 = lshr <4 x i32> %1255, <i32 20, i32 20, i32 20, i32 20>
  %1257 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1248, <8 x i16> %1248) #5
  %1258 = mul <4 x i32> %1246, <i32 25, i32 25, i32 25, i32 25>
  %1259 = sub <4 x i32> %1258, %1257
  %1260 = icmp sgt <4 x i32> %1259, zeroinitializer
  %1261 = select <4 x i1> %1260, <4 x i32> %1259, <4 x i32> zeroinitializer
  %1262 = mul <4 x i32> %1261, %385
  %1263 = add <4 x i32> %1262, <i32 524288, i32 524288, i32 524288, i32 524288>
  %1264 = lshr <4 x i32> %1263, <i32 20, i32 20, i32 20, i32 20>
  %1265 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %1256, <4 x i32> %1264) #5
  %1266 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1265, <8 x i16> undef) #5
  %1267 = bitcast <16 x i8> %1266 to <2 x i64>
  %1268 = extractelement <2 x i64> %1267, i32 0
  %1269 = lshr i64 %1268, 8
  %1270 = lshr i64 %1268, 16
  %1271 = lshr i64 %1268, 24
  %1272 = lshr i64 %1268, 32
  %1273 = lshr i64 %1268, 40
  %1274 = lshr i64 %1268, 48
  %1275 = lshr i64 %1268, 56
  %1276 = and i64 %1268, 255
  %1277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1276
  %1278 = load i8, i8* %1277, align 1
  %1279 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %1278, i64 0
  %1280 = and i64 %1269, 255
  %1281 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1280
  %1282 = load i8, i8* %1281, align 1
  %1283 = insertelement <16 x i8> %1279, i8 %1282, i64 1
  %1284 = and i64 %1270, 255
  %1285 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1284
  %1286 = load i8, i8* %1285, align 1
  %1287 = insertelement <16 x i8> %1283, i8 %1286, i64 2
  %1288 = and i64 %1271, 255
  %1289 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1288
  %1290 = load i8, i8* %1289, align 1
  %1291 = insertelement <16 x i8> %1287, i8 %1290, i64 3
  %1292 = and i64 %1272, 255
  %1293 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1292
  %1294 = load i8, i8* %1293, align 1
  %1295 = insertelement <16 x i8> %1291, i8 %1294, i64 4
  %1296 = and i64 %1273, 255
  %1297 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1296
  %1298 = load i8, i8* %1297, align 1
  %1299 = insertelement <16 x i8> %1295, i8 %1298, i64 5
  %1300 = and i64 %1274, 255
  %1301 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1300
  %1302 = load i8, i8* %1301, align 1
  %1303 = insertelement <16 x i8> %1299, i8 %1302, i64 6
  %1304 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1275
  %1305 = load i8, i8* %1304, align 1
  %1306 = insertelement <16 x i8> %1303, i8 %1305, i64 7
  %1307 = shufflevector <16 x i8> %1306, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1308 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %1307, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %1309 = shufflevector <8 x i16> %1308, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1310 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1309, <8 x i16> %1247) #5
  %1311 = shufflevector <8 x i16> %1308, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1312 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1311, <8 x i16> %1248) #5
  %1313 = add <4 x i32> %1310, <i32 512, i32 512, i32 512, i32 512>
  %1314 = lshr <4 x i32> %1313, <i32 10, i32 10, i32 10, i32 10>
  %1315 = add <4 x i32> %1312, <i32 512, i32 512, i32 512, i32 512>
  %1316 = lshr <4 x i32> %1315, <i32 10, i32 10, i32 10, i32 10>
  %1317 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %1314, <4 x i32> %1316) #5
  %1318 = getelementptr inbounds i8, i8* %1074, i64 16
  %1319 = getelementptr inbounds i8, i8* %1075, i64 16
  %1320 = getelementptr inbounds i8, i8* %1073, i64 %2
  %1321 = getelementptr inbounds i8, i8* %1057, i64 %2
  %1322 = inttoptr i64 %1061 to i16*
  %1323 = inttoptr i64 %1059 to i32*
  %1324 = inttoptr i64 %1060 to i16*
  %1325 = inttoptr i64 %1058 to i32*
  %1326 = getelementptr inbounds i16, i16* %1322, i64 8
  %1327 = getelementptr inbounds i32, i32* %1323, i64 8
  %1328 = getelementptr inbounds i16, i16* %1324, i64 8
  %1329 = getelementptr inbounds i32, i32* %1325, i64 8
  %1330 = inttoptr i64 %1062 to i16*
  %1331 = getelementptr inbounds i16, i16* %1330, i64 8
  %1332 = inttoptr i64 %1068 to i16*
  %1333 = getelementptr inbounds i16, i16* %1332, i64 8
  %1334 = inttoptr i64 %1069 to i16*
  %1335 = inttoptr i64 %1070 to i16*
  %1336 = inttoptr i64 %1071 to i16*
  %1337 = getelementptr inbounds i32, i32* %1165, i64 8
  %1338 = getelementptr inbounds i32, i32* %1207, i64 8
  br label %1339

1339:                                             ; preds = %1339, %1054
  %1340 = phi i64 [ %1349, %1339 ], [ 0, %1054 ]
  %1341 = phi <2 x i64> [ %1351, %1339 ], [ %1077, %1054 ]
  %1342 = phi <16 x i8> [ %1821, %1339 ], [ <i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, %1054 ]
  %1343 = phi <16 x i8> [ %1821, %1339 ], [ %1306, %1054 ]
  %1344 = phi <8 x i16> [ %1639, %1339 ], [ %1093, %1054 ]
  %1345 = phi <8 x i16> [ %1636, %1339 ], [ %1090, %1054 ]
  %1346 = phi <8 x i16> [ %1832, %1339 ], [ %1317, %1054 ]
  %1347 = phi <2 x i64> [ %1354, %1339 ], [ %1079, %1054 ]
  %1348 = getelementptr inbounds i8, i8* %1318, i64 %1340
  %1349 = add nuw nsw i64 %1340, 16
  %1350 = bitcast i8* %1348 to <2 x i64>*
  %1351 = load <2 x i64>, <2 x i64>* %1350, align 1
  %1352 = getelementptr inbounds i8, i8* %1319, i64 %1340
  %1353 = bitcast i8* %1352 to <2 x i64>*
  %1354 = load <2 x i64>, <2 x i64>* %1353, align 1
  %1355 = or i64 %1340, 8
  %1356 = bitcast <2 x i64> %1351 to <16 x i8>
  %1357 = shufflevector <16 x i8> %1356, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1358 = bitcast <16 x i8> %1357 to <8 x i16>
  %1359 = mul <8 x i16> %1358, %1358
  %1360 = bitcast <2 x i64> %1354 to <16 x i8>
  %1361 = shufflevector <16 x i8> %1360, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1362 = bitcast <16 x i8> %1361 to <8 x i16>
  %1363 = mul <8 x i16> %1362, %1362
  %1364 = bitcast <2 x i64> %1341 to <16 x i8>
  %1365 = shufflevector <16 x i8> %1364, <16 x i8> %1356, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1366 = shufflevector <16 x i8> %1364, <16 x i8> %1356, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %1367 = shufflevector <16 x i8> %1364, <16 x i8> %1356, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %1368 = shufflevector <16 x i8> %1364, <16 x i8> %1356, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %1369 = shufflevector <16 x i8> %1364, <16 x i8> %1356, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %1370 = shufflevector <16 x i8> %1365, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1371 = shufflevector <16 x i8> %1366, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1372 = bitcast <16 x i8> %1370 to <8 x i16>
  %1373 = bitcast <16 x i8> %1371 to <8 x i16>
  %1374 = shufflevector <16 x i8> %1367, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1375 = shufflevector <16 x i8> %1368, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1376 = bitcast <16 x i8> %1374 to <8 x i16>
  %1377 = bitcast <16 x i8> %1375 to <8 x i16>
  %1378 = shufflevector <16 x i8> %1369, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1379 = bitcast <16 x i8> %1378 to <8 x i16>
  %1380 = add <8 x i16> %1373, %1372
  %1381 = add <8 x i16> %1380, %1376
  %1382 = add <8 x i16> %1381, %1377
  %1383 = add <8 x i16> %1382, %1379
  %1384 = shufflevector <16 x i8> %1365, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1385 = shufflevector <16 x i8> %1366, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1386 = bitcast <16 x i8> %1384 to <8 x i16>
  %1387 = bitcast <16 x i8> %1385 to <8 x i16>
  %1388 = shufflevector <16 x i8> %1367, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1389 = shufflevector <16 x i8> %1368, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1390 = bitcast <16 x i8> %1388 to <8 x i16>
  %1391 = bitcast <16 x i8> %1389 to <8 x i16>
  %1392 = shufflevector <16 x i8> %1369, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1393 = bitcast <16 x i8> %1392 to <8 x i16>
  %1394 = add <8 x i16> %1387, %1386
  %1395 = add <8 x i16> %1394, %1390
  %1396 = add <8 x i16> %1395, %1391
  %1397 = add <8 x i16> %1396, %1393
  %1398 = getelementptr inbounds i16, i16* %1330, i64 %1355
  %1399 = bitcast i16* %1398 to <8 x i16>*
  store <8 x i16> %1383, <8 x i16>* %1399, align 16
  %1400 = getelementptr inbounds i16, i16* %1331, i64 %1355
  %1401 = bitcast i16* %1400 to <8 x i16>*
  store <8 x i16> %1397, <8 x i16>* %1401, align 16
  %1402 = bitcast <2 x i64> %1347 to <16 x i8>
  %1403 = shufflevector <16 x i8> %1402, <16 x i8> %1360, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1404 = shufflevector <16 x i8> %1402, <16 x i8> %1360, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %1405 = shufflevector <16 x i8> %1402, <16 x i8> %1360, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %1406 = shufflevector <16 x i8> %1402, <16 x i8> %1360, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %1407 = shufflevector <16 x i8> %1402, <16 x i8> %1360, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %1408 = shufflevector <16 x i8> %1403, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1409 = shufflevector <16 x i8> %1404, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1410 = bitcast <16 x i8> %1408 to <8 x i16>
  %1411 = bitcast <16 x i8> %1409 to <8 x i16>
  %1412 = shufflevector <16 x i8> %1405, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1413 = shufflevector <16 x i8> %1406, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1414 = bitcast <16 x i8> %1412 to <8 x i16>
  %1415 = bitcast <16 x i8> %1413 to <8 x i16>
  %1416 = shufflevector <16 x i8> %1407, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1417 = bitcast <16 x i8> %1416 to <8 x i16>
  %1418 = add <8 x i16> %1411, %1410
  %1419 = add <8 x i16> %1418, %1414
  %1420 = add <8 x i16> %1419, %1415
  %1421 = add <8 x i16> %1420, %1417
  %1422 = shufflevector <16 x i8> %1403, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1423 = shufflevector <16 x i8> %1404, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1424 = bitcast <16 x i8> %1422 to <8 x i16>
  %1425 = bitcast <16 x i8> %1423 to <8 x i16>
  %1426 = shufflevector <16 x i8> %1405, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1427 = shufflevector <16 x i8> %1406, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1428 = bitcast <16 x i8> %1426 to <8 x i16>
  %1429 = bitcast <16 x i8> %1427 to <8 x i16>
  %1430 = shufflevector <16 x i8> %1407, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1431 = bitcast <16 x i8> %1430 to <8 x i16>
  %1432 = add <8 x i16> %1425, %1424
  %1433 = add <8 x i16> %1432, %1428
  %1434 = add <8 x i16> %1433, %1429
  %1435 = add <8 x i16> %1434, %1431
  %1436 = getelementptr inbounds i16, i16* %1332, i64 %1355
  %1437 = bitcast i16* %1436 to <8 x i16>*
  store <8 x i16> %1421, <8 x i16>* %1437, align 16
  %1438 = getelementptr inbounds i16, i16* %1333, i64 %1355
  %1439 = bitcast i16* %1438 to <8 x i16>*
  store <8 x i16> %1435, <8 x i16>* %1439, align 16
  %1440 = bitcast <8 x i16> %1359 to <16 x i8>
  %1441 = bitcast <8 x i16> %1345 to <16 x i8>
  %1442 = shufflevector <16 x i8> %1441, <16 x i8> %1440, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1443 = shufflevector <16 x i8> %1441, <16 x i8> %1440, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1444 = shufflevector <16 x i8> %1441, <16 x i8> %1440, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %1445 = shufflevector <16 x i8> %1441, <16 x i8> %1440, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1446 = shufflevector <8 x i16> %1345, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1447 = bitcast <16 x i8> %1442 to <8 x i16>
  %1448 = shufflevector <8 x i16> %1447, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1449 = bitcast <8 x i16> %1446 to <4 x i32>
  %1450 = bitcast <8 x i16> %1448 to <4 x i32>
  %1451 = bitcast <16 x i8> %1443 to <8 x i16>
  %1452 = shufflevector <8 x i16> %1451, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1453 = bitcast <16 x i8> %1444 to <8 x i16>
  %1454 = shufflevector <8 x i16> %1453, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1455 = bitcast <8 x i16> %1452 to <4 x i32>
  %1456 = bitcast <8 x i16> %1454 to <4 x i32>
  %1457 = bitcast <16 x i8> %1445 to <8 x i16>
  %1458 = shufflevector <8 x i16> %1457, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1459 = bitcast <8 x i16> %1458 to <4 x i32>
  %1460 = add <4 x i32> %1455, %1449
  %1461 = add <4 x i32> %1460, %1456
  %1462 = add <4 x i32> %1461, %1450
  %1463 = add <4 x i32> %1462, %1459
  %1464 = shufflevector <8 x i16> %1345, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1465 = shufflevector <8 x i16> %1447, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1466 = bitcast <8 x i16> %1464 to <4 x i32>
  %1467 = bitcast <8 x i16> %1465 to <4 x i32>
  %1468 = shufflevector <8 x i16> %1451, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1469 = shufflevector <8 x i16> %1453, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1470 = bitcast <8 x i16> %1468 to <4 x i32>
  %1471 = bitcast <8 x i16> %1469 to <4 x i32>
  %1472 = shufflevector <8 x i16> %1457, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1473 = bitcast <8 x i16> %1472 to <4 x i32>
  %1474 = add <4 x i32> %1470, %1466
  %1475 = add <4 x i32> %1474, %1471
  %1476 = add <4 x i32> %1475, %1467
  %1477 = add <4 x i32> %1476, %1473
  %1478 = getelementptr inbounds i32, i32* %1165, i64 %1355
  %1479 = bitcast i32* %1478 to <4 x i32>*
  store <4 x i32> %1463, <4 x i32>* %1479, align 16
  %1480 = getelementptr inbounds i32, i32* %1478, i64 4
  %1481 = bitcast i32* %1480 to <4 x i32>*
  store <4 x i32> %1477, <4 x i32>* %1481, align 16
  %1482 = bitcast <8 x i16> %1363 to <16 x i8>
  %1483 = bitcast <8 x i16> %1344 to <16 x i8>
  %1484 = shufflevector <16 x i8> %1483, <16 x i8> %1482, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1485 = shufflevector <16 x i8> %1483, <16 x i8> %1482, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1486 = shufflevector <16 x i8> %1483, <16 x i8> %1482, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %1487 = shufflevector <16 x i8> %1483, <16 x i8> %1482, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1488 = shufflevector <8 x i16> %1344, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1489 = bitcast <16 x i8> %1484 to <8 x i16>
  %1490 = shufflevector <8 x i16> %1489, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1491 = bitcast <8 x i16> %1488 to <4 x i32>
  %1492 = bitcast <8 x i16> %1490 to <4 x i32>
  %1493 = bitcast <16 x i8> %1485 to <8 x i16>
  %1494 = shufflevector <8 x i16> %1493, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1495 = bitcast <16 x i8> %1486 to <8 x i16>
  %1496 = shufflevector <8 x i16> %1495, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1497 = bitcast <8 x i16> %1494 to <4 x i32>
  %1498 = bitcast <8 x i16> %1496 to <4 x i32>
  %1499 = bitcast <16 x i8> %1487 to <8 x i16>
  %1500 = shufflevector <8 x i16> %1499, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1501 = bitcast <8 x i16> %1500 to <4 x i32>
  %1502 = add <4 x i32> %1497, %1491
  %1503 = add <4 x i32> %1502, %1498
  %1504 = add <4 x i32> %1503, %1492
  %1505 = add <4 x i32> %1504, %1501
  %1506 = shufflevector <8 x i16> %1344, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1507 = shufflevector <8 x i16> %1489, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1508 = bitcast <8 x i16> %1506 to <4 x i32>
  %1509 = bitcast <8 x i16> %1507 to <4 x i32>
  %1510 = shufflevector <8 x i16> %1493, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1511 = shufflevector <8 x i16> %1495, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1512 = bitcast <8 x i16> %1510 to <4 x i32>
  %1513 = bitcast <8 x i16> %1511 to <4 x i32>
  %1514 = shufflevector <8 x i16> %1499, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1515 = bitcast <8 x i16> %1514 to <4 x i32>
  %1516 = add <4 x i32> %1512, %1508
  %1517 = add <4 x i32> %1516, %1513
  %1518 = add <4 x i32> %1517, %1509
  %1519 = add <4 x i32> %1518, %1515
  %1520 = getelementptr inbounds i32, i32* %1207, i64 %1355
  %1521 = bitcast i32* %1520 to <4 x i32>*
  store <4 x i32> %1505, <4 x i32>* %1521, align 16
  %1522 = getelementptr inbounds i32, i32* %1520, i64 4
  %1523 = bitcast i32* %1522 to <4 x i32>*
  store <4 x i32> %1519, <4 x i32>* %1523, align 16
  %1524 = getelementptr inbounds i16, i16* %1334, i64 %1355
  %1525 = bitcast i16* %1524 to <8 x i16>*
  %1526 = load <8 x i16>, <8 x i16>* %1525, align 16
  %1527 = getelementptr inbounds i16, i16* %1335, i64 %1355
  %1528 = bitcast i16* %1527 to <8 x i16>*
  %1529 = load <8 x i16>, <8 x i16>* %1528, align 16
  %1530 = getelementptr inbounds i16, i16* %1336, i64 %1355
  %1531 = bitcast i16* %1530 to <8 x i16>*
  %1532 = load <8 x i16>, <8 x i16>* %1531, align 16
  %1533 = getelementptr inbounds i32, i32* %1217, i64 %1355
  %1534 = bitcast i32* %1533 to <4 x i32>*
  %1535 = load <4 x i32>, <4 x i32>* %1534, align 16
  %1536 = getelementptr inbounds i32, i32* %1533, i64 4
  %1537 = bitcast i32* %1536 to <4 x i32>*
  %1538 = load <4 x i32>, <4 x i32>* %1537, align 16
  %1539 = getelementptr inbounds i32, i32* %1223, i64 %1355
  %1540 = bitcast i32* %1539 to <4 x i32>*
  %1541 = load <4 x i32>, <4 x i32>* %1540, align 16
  %1542 = getelementptr inbounds i32, i32* %1539, i64 4
  %1543 = bitcast i32* %1542 to <4 x i32>*
  %1544 = load <4 x i32>, <4 x i32>* %1543, align 16
  %1545 = getelementptr inbounds i32, i32* %1229, i64 %1355
  %1546 = bitcast i32* %1545 to <4 x i32>*
  %1547 = load <4 x i32>, <4 x i32>* %1546, align 16
  %1548 = getelementptr inbounds i32, i32* %1545, i64 4
  %1549 = bitcast i32* %1548 to <4 x i32>*
  %1550 = load <4 x i32>, <4 x i32>* %1549, align 16
  %1551 = add <8 x i16> %1421, %1383
  %1552 = add <8 x i16> %1551, %1526
  %1553 = add <8 x i16> %1552, %1529
  %1554 = add <8 x i16> %1553, %1532
  %1555 = add <4 x i32> %1535, %1463
  %1556 = add <4 x i32> %1555, %1505
  %1557 = add <4 x i32> %1556, %1541
  %1558 = add <4 x i32> %1557, %1547
  %1559 = add <4 x i32> %1519, %1477
  %1560 = add <4 x i32> %1559, %1538
  %1561 = add <4 x i32> %1560, %1544
  %1562 = add <4 x i32> %1561, %1550
  %1563 = shufflevector <8 x i16> %1554, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1564 = shufflevector <8 x i16> %1554, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1565 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1563, <8 x i16> %1563) #5
  %1566 = mul <4 x i32> %1558, <i32 25, i32 25, i32 25, i32 25>
  %1567 = sub <4 x i32> %1566, %1565
  %1568 = icmp sgt <4 x i32> %1567, zeroinitializer
  %1569 = select <4 x i1> %1568, <4 x i32> %1567, <4 x i32> zeroinitializer
  %1570 = mul <4 x i32> %1569, %385
  %1571 = add <4 x i32> %1570, <i32 524288, i32 524288, i32 524288, i32 524288>
  %1572 = lshr <4 x i32> %1571, <i32 20, i32 20, i32 20, i32 20>
  %1573 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1564, <8 x i16> %1564) #5
  %1574 = mul <4 x i32> %1562, <i32 25, i32 25, i32 25, i32 25>
  %1575 = sub <4 x i32> %1574, %1573
  %1576 = icmp sgt <4 x i32> %1575, zeroinitializer
  %1577 = select <4 x i1> %1576, <4 x i32> %1575, <4 x i32> zeroinitializer
  %1578 = mul <4 x i32> %1577, %385
  %1579 = add <4 x i32> %1578, <i32 524288, i32 524288, i32 524288, i32 524288>
  %1580 = lshr <4 x i32> %1579, <i32 20, i32 20, i32 20, i32 20>
  %1581 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %1572, <4 x i32> %1580) #5
  %1582 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1581, <8 x i16> undef) #5
  %1583 = bitcast <16 x i8> %1582 to <2 x i64>
  %1584 = extractelement <2 x i64> %1583, i32 0
  %1585 = lshr i64 %1584, 8
  %1586 = lshr i64 %1584, 16
  %1587 = lshr i64 %1584, 24
  %1588 = lshr i64 %1584, 32
  %1589 = lshr i64 %1584, 40
  %1590 = lshr i64 %1584, 48
  %1591 = lshr i64 %1584, 56
  %1592 = and i64 %1584, 255
  %1593 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1592
  %1594 = load i8, i8* %1593, align 1
  %1595 = insertelement <16 x i8> %1343, i8 %1594, i64 8
  %1596 = and i64 %1585, 255
  %1597 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1596
  %1598 = load i8, i8* %1597, align 1
  %1599 = insertelement <16 x i8> %1595, i8 %1598, i64 9
  %1600 = and i64 %1586, 255
  %1601 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1600
  %1602 = load i8, i8* %1601, align 1
  %1603 = insertelement <16 x i8> %1599, i8 %1602, i64 10
  %1604 = and i64 %1587, 255
  %1605 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1604
  %1606 = load i8, i8* %1605, align 1
  %1607 = insertelement <16 x i8> %1603, i8 %1606, i64 11
  %1608 = and i64 %1588, 255
  %1609 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1608
  %1610 = load i8, i8* %1609, align 1
  %1611 = insertelement <16 x i8> %1607, i8 %1610, i64 12
  %1612 = and i64 %1589, 255
  %1613 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1612
  %1614 = load i8, i8* %1613, align 1
  %1615 = insertelement <16 x i8> %1611, i8 %1614, i64 13
  %1616 = and i64 %1590, 255
  %1617 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1616
  %1618 = load i8, i8* %1617, align 1
  %1619 = insertelement <16 x i8> %1615, i8 %1618, i64 14
  %1620 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1591
  %1621 = load i8, i8* %1620, align 1
  %1622 = insertelement <16 x i8> %1619, i8 %1621, i64 15
  %1623 = shufflevector <16 x i8> %1622, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1624 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %1623, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %1625 = shufflevector <8 x i16> %1624, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1626 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1625, <8 x i16> %1563) #5
  %1627 = shufflevector <8 x i16> %1624, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1628 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1627, <8 x i16> %1564) #5
  %1629 = add <4 x i32> %1626, <i32 512, i32 512, i32 512, i32 512>
  %1630 = lshr <4 x i32> %1629, <i32 10, i32 10, i32 10, i32 10>
  %1631 = add <4 x i32> %1628, <i32 512, i32 512, i32 512, i32 512>
  %1632 = lshr <4 x i32> %1631, <i32 10, i32 10, i32 10, i32 10>
  %1633 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %1630, <4 x i32> %1632) #5
  %1634 = shufflevector <16 x i8> %1356, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1635 = bitcast <16 x i8> %1634 to <8 x i16>
  %1636 = mul <8 x i16> %1635, %1635
  %1637 = shufflevector <16 x i8> %1360, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1638 = bitcast <16 x i8> %1637 to <8 x i16>
  %1639 = mul <8 x i16> %1638, %1638
  %1640 = bitcast <8 x i16> %1636 to <16 x i8>
  %1641 = shufflevector <16 x i8> %1440, <16 x i8> %1640, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1642 = shufflevector <16 x i8> %1440, <16 x i8> %1640, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1643 = shufflevector <16 x i8> %1440, <16 x i8> %1640, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %1644 = shufflevector <16 x i8> %1440, <16 x i8> %1640, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1645 = shufflevector <8 x i16> %1359, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1646 = bitcast <16 x i8> %1641 to <8 x i16>
  %1647 = shufflevector <8 x i16> %1646, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1648 = bitcast <8 x i16> %1645 to <4 x i32>
  %1649 = bitcast <8 x i16> %1647 to <4 x i32>
  %1650 = bitcast <16 x i8> %1642 to <8 x i16>
  %1651 = shufflevector <8 x i16> %1650, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1652 = bitcast <16 x i8> %1643 to <8 x i16>
  %1653 = shufflevector <8 x i16> %1652, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1654 = bitcast <8 x i16> %1651 to <4 x i32>
  %1655 = bitcast <8 x i16> %1653 to <4 x i32>
  %1656 = bitcast <16 x i8> %1644 to <8 x i16>
  %1657 = shufflevector <8 x i16> %1656, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1658 = bitcast <8 x i16> %1657 to <4 x i32>
  %1659 = add <4 x i32> %1654, %1648
  %1660 = add <4 x i32> %1659, %1655
  %1661 = add <4 x i32> %1660, %1649
  %1662 = add <4 x i32> %1661, %1658
  %1663 = shufflevector <8 x i16> %1359, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1664 = shufflevector <8 x i16> %1646, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1665 = bitcast <8 x i16> %1663 to <4 x i32>
  %1666 = bitcast <8 x i16> %1664 to <4 x i32>
  %1667 = shufflevector <8 x i16> %1650, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1668 = shufflevector <8 x i16> %1652, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1669 = bitcast <8 x i16> %1667 to <4 x i32>
  %1670 = bitcast <8 x i16> %1668 to <4 x i32>
  %1671 = shufflevector <8 x i16> %1656, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1672 = bitcast <8 x i16> %1671 to <4 x i32>
  %1673 = add <4 x i32> %1669, %1665
  %1674 = add <4 x i32> %1673, %1670
  %1675 = add <4 x i32> %1674, %1666
  %1676 = add <4 x i32> %1675, %1672
  %1677 = getelementptr inbounds i32, i32* %1337, i64 %1355
  %1678 = bitcast i32* %1677 to <4 x i32>*
  store <4 x i32> %1662, <4 x i32>* %1678, align 16
  %1679 = getelementptr inbounds i32, i32* %1677, i64 4
  %1680 = bitcast i32* %1679 to <4 x i32>*
  store <4 x i32> %1676, <4 x i32>* %1680, align 16
  %1681 = bitcast <8 x i16> %1639 to <16 x i8>
  %1682 = shufflevector <16 x i8> %1482, <16 x i8> %1681, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1683 = shufflevector <16 x i8> %1482, <16 x i8> %1681, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1684 = shufflevector <16 x i8> %1482, <16 x i8> %1681, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %1685 = shufflevector <16 x i8> %1482, <16 x i8> %1681, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1686 = shufflevector <8 x i16> %1363, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1687 = bitcast <16 x i8> %1682 to <8 x i16>
  %1688 = shufflevector <8 x i16> %1687, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1689 = bitcast <8 x i16> %1686 to <4 x i32>
  %1690 = bitcast <8 x i16> %1688 to <4 x i32>
  %1691 = bitcast <16 x i8> %1683 to <8 x i16>
  %1692 = shufflevector <8 x i16> %1691, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1693 = bitcast <16 x i8> %1684 to <8 x i16>
  %1694 = shufflevector <8 x i16> %1693, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1695 = bitcast <8 x i16> %1692 to <4 x i32>
  %1696 = bitcast <8 x i16> %1694 to <4 x i32>
  %1697 = bitcast <16 x i8> %1685 to <8 x i16>
  %1698 = shufflevector <8 x i16> %1697, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1699 = bitcast <8 x i16> %1698 to <4 x i32>
  %1700 = add <4 x i32> %1695, %1689
  %1701 = add <4 x i32> %1700, %1696
  %1702 = add <4 x i32> %1701, %1690
  %1703 = add <4 x i32> %1702, %1699
  %1704 = shufflevector <8 x i16> %1363, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1705 = shufflevector <8 x i16> %1687, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1706 = bitcast <8 x i16> %1704 to <4 x i32>
  %1707 = bitcast <8 x i16> %1705 to <4 x i32>
  %1708 = shufflevector <8 x i16> %1691, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1709 = shufflevector <8 x i16> %1693, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1710 = bitcast <8 x i16> %1708 to <4 x i32>
  %1711 = bitcast <8 x i16> %1709 to <4 x i32>
  %1712 = shufflevector <8 x i16> %1697, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1713 = bitcast <8 x i16> %1712 to <4 x i32>
  %1714 = add <4 x i32> %1710, %1706
  %1715 = add <4 x i32> %1714, %1711
  %1716 = add <4 x i32> %1715, %1707
  %1717 = add <4 x i32> %1716, %1713
  %1718 = getelementptr inbounds i32, i32* %1338, i64 %1355
  %1719 = bitcast i32* %1718 to <4 x i32>*
  store <4 x i32> %1703, <4 x i32>* %1719, align 16
  %1720 = getelementptr inbounds i32, i32* %1718, i64 4
  %1721 = bitcast i32* %1720 to <4 x i32>*
  store <4 x i32> %1717, <4 x i32>* %1721, align 16
  %1722 = add nuw nsw i64 %1355, 8
  %1723 = getelementptr inbounds i16, i16* %1334, i64 %1722
  %1724 = bitcast i16* %1723 to <8 x i16>*
  %1725 = load <8 x i16>, <8 x i16>* %1724, align 16
  %1726 = getelementptr inbounds i16, i16* %1335, i64 %1722
  %1727 = bitcast i16* %1726 to <8 x i16>*
  %1728 = load <8 x i16>, <8 x i16>* %1727, align 16
  %1729 = getelementptr inbounds i16, i16* %1336, i64 %1722
  %1730 = bitcast i16* %1729 to <8 x i16>*
  %1731 = load <8 x i16>, <8 x i16>* %1730, align 16
  %1732 = getelementptr inbounds i32, i32* %1217, i64 %1722
  %1733 = bitcast i32* %1732 to <4 x i32>*
  %1734 = load <4 x i32>, <4 x i32>* %1733, align 16
  %1735 = getelementptr inbounds i32, i32* %1732, i64 4
  %1736 = bitcast i32* %1735 to <4 x i32>*
  %1737 = load <4 x i32>, <4 x i32>* %1736, align 16
  %1738 = getelementptr inbounds i32, i32* %1223, i64 %1722
  %1739 = bitcast i32* %1738 to <4 x i32>*
  %1740 = load <4 x i32>, <4 x i32>* %1739, align 16
  %1741 = getelementptr inbounds i32, i32* %1738, i64 4
  %1742 = bitcast i32* %1741 to <4 x i32>*
  %1743 = load <4 x i32>, <4 x i32>* %1742, align 16
  %1744 = getelementptr inbounds i32, i32* %1229, i64 %1722
  %1745 = bitcast i32* %1744 to <4 x i32>*
  %1746 = load <4 x i32>, <4 x i32>* %1745, align 16
  %1747 = getelementptr inbounds i32, i32* %1744, i64 4
  %1748 = bitcast i32* %1747 to <4 x i32>*
  %1749 = load <4 x i32>, <4 x i32>* %1748, align 16
  %1750 = add <8 x i16> %1435, %1397
  %1751 = add <8 x i16> %1750, %1725
  %1752 = add <8 x i16> %1751, %1728
  %1753 = add <8 x i16> %1752, %1731
  %1754 = add <4 x i32> %1703, %1662
  %1755 = add <4 x i32> %1754, %1734
  %1756 = add <4 x i32> %1755, %1740
  %1757 = add <4 x i32> %1756, %1746
  %1758 = add <4 x i32> %1717, %1676
  %1759 = add <4 x i32> %1758, %1737
  %1760 = add <4 x i32> %1759, %1743
  %1761 = add <4 x i32> %1760, %1749
  %1762 = shufflevector <8 x i16> %1753, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1763 = shufflevector <8 x i16> %1753, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1764 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1762, <8 x i16> %1762) #5
  %1765 = mul <4 x i32> %1757, <i32 25, i32 25, i32 25, i32 25>
  %1766 = sub <4 x i32> %1765, %1764
  %1767 = icmp sgt <4 x i32> %1766, zeroinitializer
  %1768 = select <4 x i1> %1767, <4 x i32> %1766, <4 x i32> zeroinitializer
  %1769 = mul <4 x i32> %1768, %385
  %1770 = add <4 x i32> %1769, <i32 524288, i32 524288, i32 524288, i32 524288>
  %1771 = lshr <4 x i32> %1770, <i32 20, i32 20, i32 20, i32 20>
  %1772 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1763, <8 x i16> %1763) #5
  %1773 = mul <4 x i32> %1761, <i32 25, i32 25, i32 25, i32 25>
  %1774 = sub <4 x i32> %1773, %1772
  %1775 = icmp sgt <4 x i32> %1774, zeroinitializer
  %1776 = select <4 x i1> %1775, <4 x i32> %1774, <4 x i32> zeroinitializer
  %1777 = mul <4 x i32> %1776, %385
  %1778 = add <4 x i32> %1777, <i32 524288, i32 524288, i32 524288, i32 524288>
  %1779 = lshr <4 x i32> %1778, <i32 20, i32 20, i32 20, i32 20>
  %1780 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %1771, <4 x i32> %1779) #5
  %1781 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1780, <8 x i16> undef) #5
  %1782 = bitcast <16 x i8> %1781 to <2 x i64>
  %1783 = extractelement <2 x i64> %1782, i32 0
  %1784 = lshr i64 %1783, 8
  %1785 = lshr i64 %1783, 16
  %1786 = lshr i64 %1783, 24
  %1787 = lshr i64 %1783, 32
  %1788 = lshr i64 %1783, 40
  %1789 = lshr i64 %1783, 48
  %1790 = lshr i64 %1783, 56
  %1791 = and i64 %1783, 255
  %1792 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1791
  %1793 = load i8, i8* %1792, align 1
  %1794 = insertelement <16 x i8> %1342, i8 %1793, i64 0
  %1795 = and i64 %1784, 255
  %1796 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1795
  %1797 = load i8, i8* %1796, align 1
  %1798 = insertelement <16 x i8> %1794, i8 %1797, i64 1
  %1799 = and i64 %1785, 255
  %1800 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1799
  %1801 = load i8, i8* %1800, align 1
  %1802 = insertelement <16 x i8> %1798, i8 %1801, i64 2
  %1803 = and i64 %1786, 255
  %1804 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1803
  %1805 = load i8, i8* %1804, align 1
  %1806 = insertelement <16 x i8> %1802, i8 %1805, i64 3
  %1807 = and i64 %1787, 255
  %1808 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1807
  %1809 = load i8, i8* %1808, align 1
  %1810 = insertelement <16 x i8> %1806, i8 %1809, i64 4
  %1811 = and i64 %1788, 255
  %1812 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1811
  %1813 = load i8, i8* %1812, align 1
  %1814 = insertelement <16 x i8> %1810, i8 %1813, i64 5
  %1815 = and i64 %1789, 255
  %1816 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1815
  %1817 = load i8, i8* %1816, align 1
  %1818 = insertelement <16 x i8> %1814, i8 %1817, i64 6
  %1819 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %1790
  %1820 = load i8, i8* %1819, align 1
  %1821 = insertelement <16 x i8> %1818, i8 %1820, i64 7
  %1822 = shufflevector <16 x i8> %1821, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1823 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %1822, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %1824 = shufflevector <8 x i16> %1823, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1825 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1824, <8 x i16> %1762) #5
  %1826 = shufflevector <8 x i16> %1823, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1827 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1826, <8 x i16> %1763) #5
  %1828 = add <4 x i32> %1825, <i32 512, i32 512, i32 512, i32 512>
  %1829 = lshr <4 x i32> %1828, <i32 10, i32 10, i32 10, i32 10>
  %1830 = add <4 x i32> %1827, <i32 512, i32 512, i32 512, i32 512>
  %1831 = lshr <4 x i32> %1830, <i32 10, i32 10, i32 10, i32 10>
  %1832 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %1829, <4 x i32> %1831) #5
  %1833 = shufflevector <16 x i8> %1622, <16 x i8> %1821, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %1834 = shufflevector <16 x i8> %1622, <16 x i8> %1821, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1835 = shufflevector <16 x i8> %1622, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1836 = shufflevector <16 x i8> %1833, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1837 = bitcast <16 x i8> %1835 to <8 x i16>
  %1838 = bitcast <16 x i8> %1836 to <8 x i16>
  %1839 = add <8 x i16> %1838, %1837
  %1840 = shufflevector <16 x i8> %1834, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1841 = bitcast <16 x i8> %1840 to <8 x i16>
  %1842 = add <8 x i16> %1839, %1841
  %1843 = mul <8 x i16> %1842, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %1844 = add <8 x i16> %1843, %1838
  %1845 = getelementptr inbounds i16, i16* %1322, i64 %1340
  %1846 = bitcast i16* %1845 to <8 x i16>*
  store <8 x i16> %1844, <8 x i16>* %1846, align 16
  %1847 = bitcast <8 x i16> %1633 to <16 x i8>
  %1848 = bitcast <8 x i16> %1346 to <16 x i8>
  %1849 = shufflevector <16 x i8> %1848, <16 x i8> %1847, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1850 = bitcast <16 x i8> %1849 to <8 x i16>
  %1851 = shufflevector <16 x i8> %1848, <16 x i8> %1847, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1852 = bitcast <16 x i8> %1851 to <8 x i16>
  %1853 = shufflevector <8 x i16> %1346, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1854 = shufflevector <8 x i16> %1850, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1855 = bitcast <8 x i16> %1853 to <4 x i32>
  %1856 = bitcast <8 x i16> %1854 to <4 x i32>
  %1857 = add <4 x i32> %1856, %1855
  %1858 = shufflevector <8 x i16> %1852, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1859 = bitcast <8 x i16> %1858 to <4 x i32>
  %1860 = add <4 x i32> %1857, %1859
  %1861 = mul <4 x i32> %1860, <i32 5, i32 5, i32 5, i32 5>
  %1862 = add <4 x i32> %1861, %1856
  %1863 = shufflevector <8 x i16> %1346, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1864 = shufflevector <8 x i16> %1850, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1865 = bitcast <8 x i16> %1863 to <4 x i32>
  %1866 = bitcast <8 x i16> %1864 to <4 x i32>
  %1867 = add <4 x i32> %1866, %1865
  %1868 = shufflevector <8 x i16> %1852, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1869 = bitcast <8 x i16> %1868 to <4 x i32>
  %1870 = add <4 x i32> %1867, %1869
  %1871 = mul <4 x i32> %1870, <i32 5, i32 5, i32 5, i32 5>
  %1872 = add <4 x i32> %1871, %1866
  %1873 = getelementptr inbounds i32, i32* %1323, i64 %1340
  %1874 = bitcast i32* %1873 to <4 x i32>*
  store <4 x i32> %1862, <4 x i32>* %1874, align 16
  %1875 = getelementptr inbounds i32, i32* %1873, i64 4
  %1876 = bitcast i32* %1875 to <4 x i32>*
  store <4 x i32> %1872, <4 x i32>* %1876, align 16
  %1877 = getelementptr inbounds i8, i8* %1073, i64 %1340
  %1878 = bitcast i8* %1877 to <16 x i8>*
  %1879 = load <16 x i8>, <16 x i8>* %1878, align 16
  %1880 = getelementptr inbounds i8, i8* %1320, i64 %1340
  %1881 = bitcast i8* %1880 to <16 x i8>*
  %1882 = load <16 x i8>, <16 x i8>* %1881, align 16
  %1883 = shufflevector <16 x i8> %1879, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1884 = shufflevector <16 x i8> %1882, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %1885 = getelementptr inbounds i16, i16* %1324, i64 %1340
  %1886 = bitcast i16* %1885 to <8 x i16>*
  %1887 = load <8 x i16>, <8 x i16>* %1886, align 16
  %1888 = getelementptr inbounds i32, i32* %1325, i64 %1340
  %1889 = bitcast i32* %1888 to <4 x i32>*
  %1890 = load <4 x i32>, <4 x i32>* %1889, align 16
  %1891 = getelementptr inbounds i32, i32* %1888, i64 4
  %1892 = bitcast i32* %1891 to <4 x i32>*
  %1893 = load <4 x i32>, <4 x i32>* %1892, align 16
  %1894 = add <8 x i16> %1887, %1844
  %1895 = shufflevector <8 x i16> %1894, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1896 = bitcast <16 x i8> %1883 to <8 x i16>
  %1897 = shufflevector <8 x i16> %1896, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1898 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1895, <8 x i16> %1897) #5
  %1899 = shufflevector <8 x i16> %1894, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1900 = shufflevector <8 x i16> %1896, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1901 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1899, <8 x i16> %1900) #5
  %1902 = add <4 x i32> %1862, <i32 256, i32 256, i32 256, i32 256>
  %1903 = add <4 x i32> %1902, %1890
  %1904 = sub <4 x i32> %1903, %1898
  %1905 = ashr <4 x i32> %1904, <i32 9, i32 9, i32 9, i32 9>
  %1906 = add <4 x i32> %1872, <i32 256, i32 256, i32 256, i32 256>
  %1907 = add <4 x i32> %1906, %1893
  %1908 = sub <4 x i32> %1907, %1901
  %1909 = ashr <4 x i32> %1908, <i32 9, i32 9, i32 9, i32 9>
  %1910 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1905, <4 x i32> %1909) #5
  %1911 = shufflevector <8 x i16> %1844, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1912 = bitcast <16 x i8> %1884 to <8 x i16>
  %1913 = shufflevector <8 x i16> %1912, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1914 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1911, <8 x i16> %1913) #5
  %1915 = shufflevector <8 x i16> %1844, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1916 = shufflevector <8 x i16> %1912, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1917 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1915, <8 x i16> %1916) #5
  %1918 = add <4 x i32> %1862, <i32 128, i32 128, i32 128, i32 128>
  %1919 = sub <4 x i32> %1918, %1914
  %1920 = ashr <4 x i32> %1919, <i32 8, i32 8, i32 8, i32 8>
  %1921 = add <4 x i32> %1872, <i32 128, i32 128, i32 128, i32 128>
  %1922 = sub <4 x i32> %1921, %1917
  %1923 = ashr <4 x i32> %1922, <i32 8, i32 8, i32 8, i32 8>
  %1924 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1920, <4 x i32> %1923) #5
  %1925 = shufflevector <8 x i16> %1910, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1926 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1925, <8 x i16> %1029) #5
  %1927 = shufflevector <8 x i16> %1910, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1928 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1927, <8 x i16> %1029) #5
  %1929 = add <4 x i32> %1926, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1930 = ashr <4 x i32> %1929, <i32 11, i32 11, i32 11, i32 11>
  %1931 = add <4 x i32> %1928, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1932 = ashr <4 x i32> %1931, <i32 11, i32 11, i32 11, i32 11>
  %1933 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1930, <4 x i32> %1932) #5
  %1934 = add <8 x i16> %1933, %1896
  %1935 = shufflevector <8 x i16> %1924, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1936 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1935, <8 x i16> %1029) #5
  %1937 = shufflevector <8 x i16> %1924, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1938 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1937, <8 x i16> %1029) #5
  %1939 = add <4 x i32> %1936, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1940 = ashr <4 x i32> %1939, <i32 11, i32 11, i32 11, i32 11>
  %1941 = add <4 x i32> %1938, <i32 1024, i32 1024, i32 1024, i32 1024>
  %1942 = ashr <4 x i32> %1941, <i32 11, i32 11, i32 11, i32 11>
  %1943 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1940, <4 x i32> %1942) #5
  %1944 = add <8 x i16> %1943, %1912
  %1945 = shufflevector <16 x i8> %1833, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1946 = bitcast <16 x i8> %1623 to <8 x i16>
  %1947 = bitcast <16 x i8> %1945 to <8 x i16>
  %1948 = add <8 x i16> %1947, %1946
  %1949 = shufflevector <16 x i8> %1834, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1950 = bitcast <16 x i8> %1949 to <8 x i16>
  %1951 = add <8 x i16> %1948, %1950
  %1952 = mul <8 x i16> %1951, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %1953 = add <8 x i16> %1952, %1947
  %1954 = getelementptr inbounds i16, i16* %1326, i64 %1340
  %1955 = bitcast i16* %1954 to <8 x i16>*
  store <8 x i16> %1953, <8 x i16>* %1955, align 16
  %1956 = bitcast <8 x i16> %1832 to <16 x i8>
  %1957 = shufflevector <16 x i8> %1847, <16 x i8> %1956, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1958 = bitcast <16 x i8> %1957 to <8 x i16>
  %1959 = shufflevector <16 x i8> %1847, <16 x i8> %1956, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1960 = bitcast <16 x i8> %1959 to <8 x i16>
  %1961 = shufflevector <8 x i16> %1633, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1962 = shufflevector <8 x i16> %1958, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1963 = bitcast <8 x i16> %1961 to <4 x i32>
  %1964 = bitcast <8 x i16> %1962 to <4 x i32>
  %1965 = add <4 x i32> %1964, %1963
  %1966 = shufflevector <8 x i16> %1960, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1967 = bitcast <8 x i16> %1966 to <4 x i32>
  %1968 = add <4 x i32> %1965, %1967
  %1969 = mul <4 x i32> %1968, <i32 5, i32 5, i32 5, i32 5>
  %1970 = add <4 x i32> %1969, %1964
  %1971 = shufflevector <8 x i16> %1633, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1972 = shufflevector <8 x i16> %1958, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1973 = bitcast <8 x i16> %1971 to <4 x i32>
  %1974 = bitcast <8 x i16> %1972 to <4 x i32>
  %1975 = add <4 x i32> %1974, %1973
  %1976 = shufflevector <8 x i16> %1960, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %1977 = bitcast <8 x i16> %1976 to <4 x i32>
  %1978 = add <4 x i32> %1975, %1977
  %1979 = mul <4 x i32> %1978, <i32 5, i32 5, i32 5, i32 5>
  %1980 = add <4 x i32> %1979, %1974
  %1981 = getelementptr inbounds i32, i32* %1327, i64 %1340
  %1982 = bitcast i32* %1981 to <4 x i32>*
  store <4 x i32> %1970, <4 x i32>* %1982, align 16
  %1983 = getelementptr inbounds i32, i32* %1981, i64 4
  %1984 = bitcast i32* %1983 to <4 x i32>*
  store <4 x i32> %1980, <4 x i32>* %1984, align 16
  %1985 = shufflevector <16 x i8> %1879, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1986 = shufflevector <16 x i8> %1882, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %1987 = getelementptr inbounds i16, i16* %1328, i64 %1340
  %1988 = bitcast i16* %1987 to <8 x i16>*
  %1989 = load <8 x i16>, <8 x i16>* %1988, align 16
  %1990 = getelementptr inbounds i32, i32* %1329, i64 %1340
  %1991 = bitcast i32* %1990 to <4 x i32>*
  %1992 = load <4 x i32>, <4 x i32>* %1991, align 16
  %1993 = getelementptr inbounds i32, i32* %1990, i64 4
  %1994 = bitcast i32* %1993 to <4 x i32>*
  %1995 = load <4 x i32>, <4 x i32>* %1994, align 16
  %1996 = add <8 x i16> %1989, %1953
  %1997 = shufflevector <8 x i16> %1996, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %1998 = bitcast <16 x i8> %1985 to <8 x i16>
  %1999 = shufflevector <8 x i16> %1998, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2000 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %1997, <8 x i16> %1999) #5
  %2001 = shufflevector <8 x i16> %1996, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2002 = shufflevector <8 x i16> %1998, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2003 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2001, <8 x i16> %2002) #5
  %2004 = add <4 x i32> %1970, <i32 256, i32 256, i32 256, i32 256>
  %2005 = add <4 x i32> %2004, %1992
  %2006 = sub <4 x i32> %2005, %2000
  %2007 = ashr <4 x i32> %2006, <i32 9, i32 9, i32 9, i32 9>
  %2008 = add <4 x i32> %1980, <i32 256, i32 256, i32 256, i32 256>
  %2009 = add <4 x i32> %2008, %1995
  %2010 = sub <4 x i32> %2009, %2003
  %2011 = ashr <4 x i32> %2010, <i32 9, i32 9, i32 9, i32 9>
  %2012 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2007, <4 x i32> %2011) #5
  %2013 = shufflevector <8 x i16> %1953, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2014 = bitcast <16 x i8> %1986 to <8 x i16>
  %2015 = shufflevector <8 x i16> %2014, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2016 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2013, <8 x i16> %2015) #5
  %2017 = shufflevector <8 x i16> %1953, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2018 = shufflevector <8 x i16> %2014, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2019 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2017, <8 x i16> %2018) #5
  %2020 = add <4 x i32> %1970, <i32 128, i32 128, i32 128, i32 128>
  %2021 = sub <4 x i32> %2020, %2016
  %2022 = ashr <4 x i32> %2021, <i32 8, i32 8, i32 8, i32 8>
  %2023 = add <4 x i32> %1980, <i32 128, i32 128, i32 128, i32 128>
  %2024 = sub <4 x i32> %2023, %2019
  %2025 = ashr <4 x i32> %2024, <i32 8, i32 8, i32 8, i32 8>
  %2026 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2022, <4 x i32> %2025) #5
  %2027 = shufflevector <8 x i16> %2012, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2028 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2027, <8 x i16> %1029) #5
  %2029 = shufflevector <8 x i16> %2012, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2030 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2029, <8 x i16> %1029) #5
  %2031 = add <4 x i32> %2028, <i32 1024, i32 1024, i32 1024, i32 1024>
  %2032 = ashr <4 x i32> %2031, <i32 11, i32 11, i32 11, i32 11>
  %2033 = add <4 x i32> %2030, <i32 1024, i32 1024, i32 1024, i32 1024>
  %2034 = ashr <4 x i32> %2033, <i32 11, i32 11, i32 11, i32 11>
  %2035 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2032, <4 x i32> %2034) #5
  %2036 = add <8 x i16> %2035, %1998
  %2037 = getelementptr inbounds i8, i8* %1057, i64 %1340
  %2038 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1934, <8 x i16> %2036) #5
  %2039 = bitcast i8* %2037 to <16 x i8>*
  store <16 x i8> %2038, <16 x i8>* %2039, align 16
  %2040 = shufflevector <8 x i16> %2026, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2041 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2040, <8 x i16> %1029) #5
  %2042 = shufflevector <8 x i16> %2026, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2043 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2042, <8 x i16> %1029) #5
  %2044 = add <4 x i32> %2041, <i32 1024, i32 1024, i32 1024, i32 1024>
  %2045 = ashr <4 x i32> %2044, <i32 11, i32 11, i32 11, i32 11>
  %2046 = add <4 x i32> %2043, <i32 1024, i32 1024, i32 1024, i32 1024>
  %2047 = ashr <4 x i32> %2046, <i32 11, i32 11, i32 11, i32 11>
  %2048 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2045, <4 x i32> %2047) #5
  %2049 = add <8 x i16> %2048, %2014
  %2050 = getelementptr inbounds i8, i8* %1321, i64 %1340
  %2051 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1944, <8 x i16> %2049) #5
  %2052 = bitcast i8* %2050 to <16 x i8>*
  store <16 x i8> %2051, <16 x i8>* %2052, align 16
  %2053 = icmp slt i64 %1349, %20
  br i1 %2053, label %1339, label %2054

2054:                                             ; preds = %1339
  %2055 = getelementptr inbounds i8, i8* %1057, i64 %1023
  %2056 = add nsw i32 %1055, -1
  %2057 = icmp sgt i32 %2056, 0
  br i1 %2057, label %1054, label %1034

2058:                                             ; preds = %1034
  %2059 = inttoptr i64 %1044 to <8 x i16>*
  %2060 = getelementptr inbounds i8, i8* %199, i64 %6
  %2061 = getelementptr inbounds i8, i8* %1050, i64 %1023
  %2062 = select i1 %1052, i8* %2060, i8* %199
  %2063 = select i1 %1052, i8* %199, i8* %2061
  %2064 = getelementptr inbounds i8, i8* %1050, i64 3
  %2065 = bitcast i8* %2063 to <2 x i64>*
  %2066 = load <2 x i64>, <2 x i64>* %2065, align 1
  %2067 = bitcast i8* %2062 to <2 x i64>*
  %2068 = load <2 x i64>, <2 x i64>* %2067, align 1
  %2069 = bitcast <2 x i64> %2066 to <16 x i8>
  %2070 = shufflevector <16 x i8> %2069, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2071 = bitcast <16 x i8> %2070 to <8 x i16>
  %2072 = mul <8 x i16> %2071, %2071
  %2073 = bitcast <2 x i64> %2068 to <16 x i8>
  %2074 = shufflevector <16 x i8> %2073, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2075 = bitcast <16 x i8> %2074 to <8 x i16>
  %2076 = mul <8 x i16> %2075, %2075
  %2077 = shufflevector <16 x i8> %2069, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2078 = bitcast <16 x i8> %2077 to <8 x i16>
  %2079 = mul <8 x i16> %2078, %2078
  %2080 = shufflevector <16 x i8> %2073, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2081 = bitcast <16 x i8> %2080 to <8 x i16>
  %2082 = mul <8 x i16> %2081, %2081
  %2083 = shufflevector <16 x i8> %2069, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2084 = shufflevector <16 x i8> %2069, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2085 = shufflevector <16 x i8> %2069, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2086 = shufflevector <16 x i8> %2069, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2087 = shufflevector <16 x i8> %2083, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2088 = bitcast <16 x i8> %2087 to <8 x i16>
  %2089 = shufflevector <16 x i8> %2084, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2090 = shufflevector <16 x i8> %2085, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2091 = bitcast <16 x i8> %2089 to <8 x i16>
  %2092 = bitcast <16 x i8> %2090 to <8 x i16>
  %2093 = shufflevector <16 x i8> %2086, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2094 = bitcast <16 x i8> %2093 to <8 x i16>
  %2095 = add <8 x i16> %2088, %2071
  %2096 = add <8 x i16> %2095, %2091
  %2097 = add <8 x i16> %2096, %2092
  %2098 = add <8 x i16> %2097, %2094
  store <8 x i16> %2098, <8 x i16>* %2059, align 16
  %2099 = shufflevector <16 x i8> %2073, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2100 = shufflevector <16 x i8> %2073, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2101 = shufflevector <16 x i8> %2073, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2102 = shufflevector <16 x i8> %2073, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %2103 = shufflevector <16 x i8> %2099, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2104 = bitcast <16 x i8> %2103 to <8 x i16>
  %2105 = shufflevector <16 x i8> %2100, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2106 = shufflevector <16 x i8> %2101, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2107 = bitcast <16 x i8> %2105 to <8 x i16>
  %2108 = bitcast <16 x i8> %2106 to <8 x i16>
  %2109 = shufflevector <16 x i8> %2102, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2110 = bitcast <16 x i8> %2109 to <8 x i16>
  %2111 = add <8 x i16> %2104, %2075
  %2112 = add <8 x i16> %2111, %2107
  %2113 = add <8 x i16> %2112, %2108
  %2114 = add <8 x i16> %2113, %2110
  %2115 = inttoptr i64 %1038 to <8 x i16>*
  store <8 x i16> %2114, <8 x i16>* %2115, align 16
  %2116 = bitcast <8 x i16> %2079 to <16 x i8>
  %2117 = bitcast <8 x i16> %2072 to <16 x i8>
  %2118 = shufflevector <16 x i8> %2117, <16 x i8> %2116, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2119 = shufflevector <16 x i8> %2117, <16 x i8> %2116, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %2120 = shufflevector <16 x i8> %2117, <16 x i8> %2116, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2121 = shufflevector <16 x i8> %2117, <16 x i8> %2116, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2122 = shufflevector <8 x i16> %2072, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2123 = bitcast <16 x i8> %2118 to <8 x i16>
  %2124 = shufflevector <8 x i16> %2123, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2125 = bitcast <8 x i16> %2122 to <4 x i32>
  %2126 = bitcast <8 x i16> %2124 to <4 x i32>
  %2127 = bitcast <16 x i8> %2119 to <8 x i16>
  %2128 = shufflevector <8 x i16> %2127, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2129 = bitcast <16 x i8> %2120 to <8 x i16>
  %2130 = shufflevector <8 x i16> %2129, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2131 = bitcast <8 x i16> %2128 to <4 x i32>
  %2132 = bitcast <8 x i16> %2130 to <4 x i32>
  %2133 = bitcast <16 x i8> %2121 to <8 x i16>
  %2134 = shufflevector <8 x i16> %2133, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2135 = bitcast <8 x i16> %2134 to <4 x i32>
  %2136 = add <4 x i32> %2131, %2125
  %2137 = add <4 x i32> %2136, %2132
  %2138 = add <4 x i32> %2137, %2126
  %2139 = add <4 x i32> %2138, %2135
  %2140 = shufflevector <8 x i16> %2072, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2141 = shufflevector <8 x i16> %2123, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2142 = bitcast <8 x i16> %2140 to <4 x i32>
  %2143 = bitcast <8 x i16> %2141 to <4 x i32>
  %2144 = shufflevector <8 x i16> %2127, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2145 = shufflevector <8 x i16> %2129, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2146 = bitcast <8 x i16> %2144 to <4 x i32>
  %2147 = bitcast <8 x i16> %2145 to <4 x i32>
  %2148 = shufflevector <8 x i16> %2133, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2149 = bitcast <8 x i16> %2148 to <4 x i32>
  %2150 = add <4 x i32> %2146, %2142
  %2151 = add <4 x i32> %2150, %2147
  %2152 = add <4 x i32> %2151, %2143
  %2153 = add <4 x i32> %2152, %2149
  %2154 = inttoptr i64 %1043 to i32*
  %2155 = inttoptr i64 %1043 to <4 x i32>*
  store <4 x i32> %2139, <4 x i32>* %2155, align 16
  %2156 = getelementptr inbounds i32, i32* %2154, i64 4
  %2157 = bitcast i32* %2156 to <4 x i32>*
  store <4 x i32> %2153, <4 x i32>* %2157, align 16
  %2158 = bitcast <8 x i16> %2082 to <16 x i8>
  %2159 = bitcast <8 x i16> %2076 to <16 x i8>
  %2160 = shufflevector <16 x i8> %2159, <16 x i8> %2158, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2161 = shufflevector <16 x i8> %2159, <16 x i8> %2158, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %2162 = shufflevector <16 x i8> %2159, <16 x i8> %2158, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2163 = shufflevector <16 x i8> %2159, <16 x i8> %2158, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2164 = shufflevector <8 x i16> %2076, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2165 = bitcast <16 x i8> %2160 to <8 x i16>
  %2166 = shufflevector <8 x i16> %2165, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2167 = bitcast <8 x i16> %2164 to <4 x i32>
  %2168 = bitcast <8 x i16> %2166 to <4 x i32>
  %2169 = bitcast <16 x i8> %2161 to <8 x i16>
  %2170 = shufflevector <8 x i16> %2169, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2171 = bitcast <16 x i8> %2162 to <8 x i16>
  %2172 = shufflevector <8 x i16> %2171, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2173 = bitcast <8 x i16> %2170 to <4 x i32>
  %2174 = bitcast <8 x i16> %2172 to <4 x i32>
  %2175 = bitcast <16 x i8> %2163 to <8 x i16>
  %2176 = shufflevector <8 x i16> %2175, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2177 = bitcast <8 x i16> %2176 to <4 x i32>
  %2178 = add <4 x i32> %2173, %2167
  %2179 = add <4 x i32> %2178, %2174
  %2180 = add <4 x i32> %2179, %2168
  %2181 = add <4 x i32> %2180, %2177
  %2182 = shufflevector <8 x i16> %2076, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2183 = shufflevector <8 x i16> %2165, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2184 = bitcast <8 x i16> %2182 to <4 x i32>
  %2185 = bitcast <8 x i16> %2183 to <4 x i32>
  %2186 = shufflevector <8 x i16> %2169, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2187 = shufflevector <8 x i16> %2171, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2188 = bitcast <8 x i16> %2186 to <4 x i32>
  %2189 = bitcast <8 x i16> %2187 to <4 x i32>
  %2190 = shufflevector <8 x i16> %2175, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2191 = bitcast <8 x i16> %2190 to <4 x i32>
  %2192 = add <4 x i32> %2188, %2184
  %2193 = add <4 x i32> %2192, %2189
  %2194 = add <4 x i32> %2193, %2185
  %2195 = add <4 x i32> %2194, %2191
  %2196 = inttoptr i64 %1042 to i32*
  %2197 = inttoptr i64 %1042 to <4 x i32>*
  store <4 x i32> %2181, <4 x i32>* %2197, align 16
  %2198 = getelementptr inbounds i32, i32* %2196, i64 4
  %2199 = bitcast i32* %2198 to <4 x i32>*
  store <4 x i32> %2195, <4 x i32>* %2199, align 16
  %2200 = inttoptr i64 %1037 to <8 x i16>*
  %2201 = load <8 x i16>, <8 x i16>* %2200, align 16
  %2202 = inttoptr i64 %1036 to <8 x i16>*
  %2203 = load <8 x i16>, <8 x i16>* %2202, align 16
  %2204 = inttoptr i64 %1035 to <8 x i16>*
  %2205 = load <8 x i16>, <8 x i16>* %2204, align 16
  %2206 = inttoptr i64 %1041 to i32*
  %2207 = inttoptr i64 %1041 to <4 x i32>*
  %2208 = load <4 x i32>, <4 x i32>* %2207, align 16
  %2209 = getelementptr inbounds i32, i32* %2206, i64 4
  %2210 = bitcast i32* %2209 to <4 x i32>*
  %2211 = load <4 x i32>, <4 x i32>* %2210, align 16
  %2212 = inttoptr i64 %1040 to i32*
  %2213 = inttoptr i64 %1040 to <4 x i32>*
  %2214 = load <4 x i32>, <4 x i32>* %2213, align 16
  %2215 = getelementptr inbounds i32, i32* %2212, i64 4
  %2216 = bitcast i32* %2215 to <4 x i32>*
  %2217 = load <4 x i32>, <4 x i32>* %2216, align 16
  %2218 = inttoptr i64 %1039 to i32*
  %2219 = inttoptr i64 %1039 to <4 x i32>*
  %2220 = load <4 x i32>, <4 x i32>* %2219, align 16
  %2221 = getelementptr inbounds i32, i32* %2218, i64 4
  %2222 = bitcast i32* %2221 to <4 x i32>*
  %2223 = load <4 x i32>, <4 x i32>* %2222, align 16
  %2224 = add <8 x i16> %2201, %2098
  %2225 = add <8 x i16> %2224, %2114
  %2226 = add <8 x i16> %2225, %2203
  %2227 = add <8 x i16> %2226, %2205
  %2228 = add <4 x i32> %2139, %2208
  %2229 = add <4 x i32> %2228, %2214
  %2230 = add <4 x i32> %2229, %2181
  %2231 = add <4 x i32> %2230, %2220
  %2232 = add <4 x i32> %2153, %2211
  %2233 = add <4 x i32> %2232, %2195
  %2234 = add <4 x i32> %2233, %2217
  %2235 = add <4 x i32> %2234, %2223
  %2236 = shufflevector <8 x i16> %2227, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2237 = shufflevector <8 x i16> %2227, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2238 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2236, <8 x i16> %2236) #5
  %2239 = mul <4 x i32> %2231, <i32 25, i32 25, i32 25, i32 25>
  %2240 = sub <4 x i32> %2239, %2238
  %2241 = icmp sgt <4 x i32> %2240, zeroinitializer
  %2242 = select <4 x i1> %2241, <4 x i32> %2240, <4 x i32> zeroinitializer
  %2243 = mul <4 x i32> %2242, %385
  %2244 = add <4 x i32> %2243, <i32 524288, i32 524288, i32 524288, i32 524288>
  %2245 = lshr <4 x i32> %2244, <i32 20, i32 20, i32 20, i32 20>
  %2246 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2237, <8 x i16> %2237) #5
  %2247 = mul <4 x i32> %2235, <i32 25, i32 25, i32 25, i32 25>
  %2248 = sub <4 x i32> %2247, %2246
  %2249 = icmp sgt <4 x i32> %2248, zeroinitializer
  %2250 = select <4 x i1> %2249, <4 x i32> %2248, <4 x i32> zeroinitializer
  %2251 = mul <4 x i32> %2250, %385
  %2252 = add <4 x i32> %2251, <i32 524288, i32 524288, i32 524288, i32 524288>
  %2253 = lshr <4 x i32> %2252, <i32 20, i32 20, i32 20, i32 20>
  %2254 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %2245, <4 x i32> %2253) #5
  %2255 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %2254, <8 x i16> undef) #5
  %2256 = bitcast <16 x i8> %2255 to <2 x i64>
  %2257 = extractelement <2 x i64> %2256, i32 0
  %2258 = lshr i64 %2257, 8
  %2259 = lshr i64 %2257, 16
  %2260 = lshr i64 %2257, 24
  %2261 = lshr i64 %2257, 32
  %2262 = lshr i64 %2257, 40
  %2263 = lshr i64 %2257, 48
  %2264 = lshr i64 %2257, 56
  %2265 = and i64 %2257, 255
  %2266 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2265
  %2267 = load i8, i8* %2266, align 1
  %2268 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %2267, i64 0
  %2269 = and i64 %2258, 255
  %2270 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2269
  %2271 = load i8, i8* %2270, align 1
  %2272 = insertelement <16 x i8> %2268, i8 %2271, i64 1
  %2273 = and i64 %2259, 255
  %2274 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2273
  %2275 = load i8, i8* %2274, align 1
  %2276 = insertelement <16 x i8> %2272, i8 %2275, i64 2
  %2277 = and i64 %2260, 255
  %2278 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2277
  %2279 = load i8, i8* %2278, align 1
  %2280 = insertelement <16 x i8> %2276, i8 %2279, i64 3
  %2281 = and i64 %2261, 255
  %2282 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2281
  %2283 = load i8, i8* %2282, align 1
  %2284 = insertelement <16 x i8> %2280, i8 %2283, i64 4
  %2285 = and i64 %2262, 255
  %2286 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2285
  %2287 = load i8, i8* %2286, align 1
  %2288 = insertelement <16 x i8> %2284, i8 %2287, i64 5
  %2289 = and i64 %2263, 255
  %2290 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2289
  %2291 = load i8, i8* %2290, align 1
  %2292 = insertelement <16 x i8> %2288, i8 %2291, i64 6
  %2293 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2264
  %2294 = load i8, i8* %2293, align 1
  %2295 = insertelement <16 x i8> %2292, i8 %2294, i64 7
  %2296 = shufflevector <16 x i8> %2295, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2297 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %2296, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %2298 = shufflevector <8 x i16> %2297, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2299 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2298, <8 x i16> %2236) #5
  %2300 = shufflevector <8 x i16> %2297, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2301 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2300, <8 x i16> %2237) #5
  %2302 = add <4 x i32> %2299, <i32 512, i32 512, i32 512, i32 512>
  %2303 = lshr <4 x i32> %2302, <i32 10, i32 10, i32 10, i32 10>
  %2304 = add <4 x i32> %2301, <i32 512, i32 512, i32 512, i32 512>
  %2305 = lshr <4 x i32> %2304, <i32 10, i32 10, i32 10, i32 10>
  %2306 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %2303, <4 x i32> %2305) #5
  %2307 = getelementptr inbounds i8, i8* %2063, i64 16
  %2308 = getelementptr inbounds i8, i8* %2062, i64 16
  %2309 = getelementptr inbounds i8, i8* %2064, i64 %2
  %2310 = getelementptr inbounds i8, i8* %1049, i64 %2
  %2311 = inttoptr i64 %1045 to i16*
  %2312 = inttoptr i64 %1047 to i32*
  %2313 = inttoptr i64 %1046 to i16*
  %2314 = inttoptr i64 %1048 to i32*
  %2315 = getelementptr inbounds i16, i16* %2311, i64 8
  %2316 = getelementptr inbounds i32, i32* %2312, i64 8
  %2317 = getelementptr inbounds i16, i16* %2313, i64 8
  %2318 = getelementptr inbounds i32, i32* %2314, i64 8
  %2319 = inttoptr i64 %1044 to i16*
  %2320 = getelementptr inbounds i16, i16* %2319, i64 8
  %2321 = inttoptr i64 %1038 to i16*
  %2322 = getelementptr inbounds i16, i16* %2321, i64 8
  %2323 = inttoptr i64 %1037 to i16*
  %2324 = inttoptr i64 %1036 to i16*
  %2325 = inttoptr i64 %1035 to i16*
  %2326 = getelementptr inbounds i32, i32* %2154, i64 8
  %2327 = getelementptr inbounds i32, i32* %2196, i64 8
  br label %2328

2328:                                             ; preds = %2328, %2058
  %2329 = phi i64 [ %2338, %2328 ], [ 0, %2058 ]
  %2330 = phi <2 x i64> [ %2340, %2328 ], [ %2066, %2058 ]
  %2331 = phi <16 x i8> [ %2810, %2328 ], [ <i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, %2058 ]
  %2332 = phi <16 x i8> [ %2810, %2328 ], [ %2295, %2058 ]
  %2333 = phi <8 x i16> [ %2628, %2328 ], [ %2082, %2058 ]
  %2334 = phi <8 x i16> [ %2625, %2328 ], [ %2079, %2058 ]
  %2335 = phi <8 x i16> [ %2821, %2328 ], [ %2306, %2058 ]
  %2336 = phi <2 x i64> [ %2343, %2328 ], [ %2068, %2058 ]
  %2337 = getelementptr inbounds i8, i8* %2307, i64 %2329
  %2338 = add nuw nsw i64 %2329, 16
  %2339 = bitcast i8* %2337 to <2 x i64>*
  %2340 = load <2 x i64>, <2 x i64>* %2339, align 1
  %2341 = getelementptr inbounds i8, i8* %2308, i64 %2329
  %2342 = bitcast i8* %2341 to <2 x i64>*
  %2343 = load <2 x i64>, <2 x i64>* %2342, align 1
  %2344 = or i64 %2329, 8
  %2345 = bitcast <2 x i64> %2340 to <16 x i8>
  %2346 = shufflevector <16 x i8> %2345, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2347 = bitcast <16 x i8> %2346 to <8 x i16>
  %2348 = mul <8 x i16> %2347, %2347
  %2349 = bitcast <2 x i64> %2343 to <16 x i8>
  %2350 = shufflevector <16 x i8> %2349, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2351 = bitcast <16 x i8> %2350 to <8 x i16>
  %2352 = mul <8 x i16> %2351, %2351
  %2353 = bitcast <2 x i64> %2330 to <16 x i8>
  %2354 = shufflevector <16 x i8> %2353, <16 x i8> %2345, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2355 = shufflevector <16 x i8> %2353, <16 x i8> %2345, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %2356 = shufflevector <16 x i8> %2353, <16 x i8> %2345, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %2357 = shufflevector <16 x i8> %2353, <16 x i8> %2345, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %2358 = shufflevector <16 x i8> %2353, <16 x i8> %2345, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %2359 = shufflevector <16 x i8> %2354, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2360 = shufflevector <16 x i8> %2355, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2361 = bitcast <16 x i8> %2359 to <8 x i16>
  %2362 = bitcast <16 x i8> %2360 to <8 x i16>
  %2363 = shufflevector <16 x i8> %2356, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2364 = shufflevector <16 x i8> %2357, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2365 = bitcast <16 x i8> %2363 to <8 x i16>
  %2366 = bitcast <16 x i8> %2364 to <8 x i16>
  %2367 = shufflevector <16 x i8> %2358, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2368 = bitcast <16 x i8> %2367 to <8 x i16>
  %2369 = add <8 x i16> %2362, %2361
  %2370 = add <8 x i16> %2369, %2365
  %2371 = add <8 x i16> %2370, %2366
  %2372 = add <8 x i16> %2371, %2368
  %2373 = shufflevector <16 x i8> %2354, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2374 = shufflevector <16 x i8> %2355, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2375 = bitcast <16 x i8> %2373 to <8 x i16>
  %2376 = bitcast <16 x i8> %2374 to <8 x i16>
  %2377 = shufflevector <16 x i8> %2356, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2378 = shufflevector <16 x i8> %2357, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2379 = bitcast <16 x i8> %2377 to <8 x i16>
  %2380 = bitcast <16 x i8> %2378 to <8 x i16>
  %2381 = shufflevector <16 x i8> %2358, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2382 = bitcast <16 x i8> %2381 to <8 x i16>
  %2383 = add <8 x i16> %2376, %2375
  %2384 = add <8 x i16> %2383, %2379
  %2385 = add <8 x i16> %2384, %2380
  %2386 = add <8 x i16> %2385, %2382
  %2387 = getelementptr inbounds i16, i16* %2319, i64 %2344
  %2388 = bitcast i16* %2387 to <8 x i16>*
  store <8 x i16> %2372, <8 x i16>* %2388, align 16
  %2389 = getelementptr inbounds i16, i16* %2320, i64 %2344
  %2390 = bitcast i16* %2389 to <8 x i16>*
  store <8 x i16> %2386, <8 x i16>* %2390, align 16
  %2391 = bitcast <2 x i64> %2336 to <16 x i8>
  %2392 = shufflevector <16 x i8> %2391, <16 x i8> %2349, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2393 = shufflevector <16 x i8> %2391, <16 x i8> %2349, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %2394 = shufflevector <16 x i8> %2391, <16 x i8> %2349, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %2395 = shufflevector <16 x i8> %2391, <16 x i8> %2349, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %2396 = shufflevector <16 x i8> %2391, <16 x i8> %2349, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %2397 = shufflevector <16 x i8> %2392, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2398 = shufflevector <16 x i8> %2393, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2399 = bitcast <16 x i8> %2397 to <8 x i16>
  %2400 = bitcast <16 x i8> %2398 to <8 x i16>
  %2401 = shufflevector <16 x i8> %2394, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2402 = shufflevector <16 x i8> %2395, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2403 = bitcast <16 x i8> %2401 to <8 x i16>
  %2404 = bitcast <16 x i8> %2402 to <8 x i16>
  %2405 = shufflevector <16 x i8> %2396, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2406 = bitcast <16 x i8> %2405 to <8 x i16>
  %2407 = add <8 x i16> %2400, %2399
  %2408 = add <8 x i16> %2407, %2403
  %2409 = add <8 x i16> %2408, %2404
  %2410 = add <8 x i16> %2409, %2406
  %2411 = shufflevector <16 x i8> %2392, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2412 = shufflevector <16 x i8> %2393, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2413 = bitcast <16 x i8> %2411 to <8 x i16>
  %2414 = bitcast <16 x i8> %2412 to <8 x i16>
  %2415 = shufflevector <16 x i8> %2394, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2416 = shufflevector <16 x i8> %2395, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2417 = bitcast <16 x i8> %2415 to <8 x i16>
  %2418 = bitcast <16 x i8> %2416 to <8 x i16>
  %2419 = shufflevector <16 x i8> %2396, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2420 = bitcast <16 x i8> %2419 to <8 x i16>
  %2421 = add <8 x i16> %2414, %2413
  %2422 = add <8 x i16> %2421, %2417
  %2423 = add <8 x i16> %2422, %2418
  %2424 = add <8 x i16> %2423, %2420
  %2425 = getelementptr inbounds i16, i16* %2321, i64 %2344
  %2426 = bitcast i16* %2425 to <8 x i16>*
  store <8 x i16> %2410, <8 x i16>* %2426, align 16
  %2427 = getelementptr inbounds i16, i16* %2322, i64 %2344
  %2428 = bitcast i16* %2427 to <8 x i16>*
  store <8 x i16> %2424, <8 x i16>* %2428, align 16
  %2429 = bitcast <8 x i16> %2348 to <16 x i8>
  %2430 = bitcast <8 x i16> %2334 to <16 x i8>
  %2431 = shufflevector <16 x i8> %2430, <16 x i8> %2429, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2432 = shufflevector <16 x i8> %2430, <16 x i8> %2429, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %2433 = shufflevector <16 x i8> %2430, <16 x i8> %2429, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2434 = shufflevector <16 x i8> %2430, <16 x i8> %2429, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2435 = shufflevector <8 x i16> %2334, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2436 = bitcast <16 x i8> %2431 to <8 x i16>
  %2437 = shufflevector <8 x i16> %2436, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2438 = bitcast <8 x i16> %2435 to <4 x i32>
  %2439 = bitcast <8 x i16> %2437 to <4 x i32>
  %2440 = bitcast <16 x i8> %2432 to <8 x i16>
  %2441 = shufflevector <8 x i16> %2440, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2442 = bitcast <16 x i8> %2433 to <8 x i16>
  %2443 = shufflevector <8 x i16> %2442, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2444 = bitcast <8 x i16> %2441 to <4 x i32>
  %2445 = bitcast <8 x i16> %2443 to <4 x i32>
  %2446 = bitcast <16 x i8> %2434 to <8 x i16>
  %2447 = shufflevector <8 x i16> %2446, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2448 = bitcast <8 x i16> %2447 to <4 x i32>
  %2449 = add <4 x i32> %2444, %2438
  %2450 = add <4 x i32> %2449, %2445
  %2451 = add <4 x i32> %2450, %2439
  %2452 = add <4 x i32> %2451, %2448
  %2453 = shufflevector <8 x i16> %2334, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2454 = shufflevector <8 x i16> %2436, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2455 = bitcast <8 x i16> %2453 to <4 x i32>
  %2456 = bitcast <8 x i16> %2454 to <4 x i32>
  %2457 = shufflevector <8 x i16> %2440, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2458 = shufflevector <8 x i16> %2442, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2459 = bitcast <8 x i16> %2457 to <4 x i32>
  %2460 = bitcast <8 x i16> %2458 to <4 x i32>
  %2461 = shufflevector <8 x i16> %2446, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2462 = bitcast <8 x i16> %2461 to <4 x i32>
  %2463 = add <4 x i32> %2459, %2455
  %2464 = add <4 x i32> %2463, %2460
  %2465 = add <4 x i32> %2464, %2456
  %2466 = add <4 x i32> %2465, %2462
  %2467 = getelementptr inbounds i32, i32* %2154, i64 %2344
  %2468 = bitcast i32* %2467 to <4 x i32>*
  store <4 x i32> %2452, <4 x i32>* %2468, align 16
  %2469 = getelementptr inbounds i32, i32* %2467, i64 4
  %2470 = bitcast i32* %2469 to <4 x i32>*
  store <4 x i32> %2466, <4 x i32>* %2470, align 16
  %2471 = bitcast <8 x i16> %2352 to <16 x i8>
  %2472 = bitcast <8 x i16> %2333 to <16 x i8>
  %2473 = shufflevector <16 x i8> %2472, <16 x i8> %2471, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2474 = shufflevector <16 x i8> %2472, <16 x i8> %2471, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %2475 = shufflevector <16 x i8> %2472, <16 x i8> %2471, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2476 = shufflevector <16 x i8> %2472, <16 x i8> %2471, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2477 = shufflevector <8 x i16> %2333, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2478 = bitcast <16 x i8> %2473 to <8 x i16>
  %2479 = shufflevector <8 x i16> %2478, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2480 = bitcast <8 x i16> %2477 to <4 x i32>
  %2481 = bitcast <8 x i16> %2479 to <4 x i32>
  %2482 = bitcast <16 x i8> %2474 to <8 x i16>
  %2483 = shufflevector <8 x i16> %2482, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2484 = bitcast <16 x i8> %2475 to <8 x i16>
  %2485 = shufflevector <8 x i16> %2484, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2486 = bitcast <8 x i16> %2483 to <4 x i32>
  %2487 = bitcast <8 x i16> %2485 to <4 x i32>
  %2488 = bitcast <16 x i8> %2476 to <8 x i16>
  %2489 = shufflevector <8 x i16> %2488, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2490 = bitcast <8 x i16> %2489 to <4 x i32>
  %2491 = add <4 x i32> %2486, %2480
  %2492 = add <4 x i32> %2491, %2487
  %2493 = add <4 x i32> %2492, %2481
  %2494 = add <4 x i32> %2493, %2490
  %2495 = shufflevector <8 x i16> %2333, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2496 = shufflevector <8 x i16> %2478, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2497 = bitcast <8 x i16> %2495 to <4 x i32>
  %2498 = bitcast <8 x i16> %2496 to <4 x i32>
  %2499 = shufflevector <8 x i16> %2482, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2500 = shufflevector <8 x i16> %2484, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2501 = bitcast <8 x i16> %2499 to <4 x i32>
  %2502 = bitcast <8 x i16> %2500 to <4 x i32>
  %2503 = shufflevector <8 x i16> %2488, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2504 = bitcast <8 x i16> %2503 to <4 x i32>
  %2505 = add <4 x i32> %2501, %2497
  %2506 = add <4 x i32> %2505, %2502
  %2507 = add <4 x i32> %2506, %2498
  %2508 = add <4 x i32> %2507, %2504
  %2509 = getelementptr inbounds i32, i32* %2196, i64 %2344
  %2510 = bitcast i32* %2509 to <4 x i32>*
  store <4 x i32> %2494, <4 x i32>* %2510, align 16
  %2511 = getelementptr inbounds i32, i32* %2509, i64 4
  %2512 = bitcast i32* %2511 to <4 x i32>*
  store <4 x i32> %2508, <4 x i32>* %2512, align 16
  %2513 = getelementptr inbounds i16, i16* %2323, i64 %2344
  %2514 = bitcast i16* %2513 to <8 x i16>*
  %2515 = load <8 x i16>, <8 x i16>* %2514, align 16
  %2516 = getelementptr inbounds i16, i16* %2324, i64 %2344
  %2517 = bitcast i16* %2516 to <8 x i16>*
  %2518 = load <8 x i16>, <8 x i16>* %2517, align 16
  %2519 = getelementptr inbounds i16, i16* %2325, i64 %2344
  %2520 = bitcast i16* %2519 to <8 x i16>*
  %2521 = load <8 x i16>, <8 x i16>* %2520, align 16
  %2522 = getelementptr inbounds i32, i32* %2206, i64 %2344
  %2523 = bitcast i32* %2522 to <4 x i32>*
  %2524 = load <4 x i32>, <4 x i32>* %2523, align 16
  %2525 = getelementptr inbounds i32, i32* %2522, i64 4
  %2526 = bitcast i32* %2525 to <4 x i32>*
  %2527 = load <4 x i32>, <4 x i32>* %2526, align 16
  %2528 = getelementptr inbounds i32, i32* %2212, i64 %2344
  %2529 = bitcast i32* %2528 to <4 x i32>*
  %2530 = load <4 x i32>, <4 x i32>* %2529, align 16
  %2531 = getelementptr inbounds i32, i32* %2528, i64 4
  %2532 = bitcast i32* %2531 to <4 x i32>*
  %2533 = load <4 x i32>, <4 x i32>* %2532, align 16
  %2534 = getelementptr inbounds i32, i32* %2218, i64 %2344
  %2535 = bitcast i32* %2534 to <4 x i32>*
  %2536 = load <4 x i32>, <4 x i32>* %2535, align 16
  %2537 = getelementptr inbounds i32, i32* %2534, i64 4
  %2538 = bitcast i32* %2537 to <4 x i32>*
  %2539 = load <4 x i32>, <4 x i32>* %2538, align 16
  %2540 = add <8 x i16> %2410, %2372
  %2541 = add <8 x i16> %2540, %2515
  %2542 = add <8 x i16> %2541, %2518
  %2543 = add <8 x i16> %2542, %2521
  %2544 = add <4 x i32> %2524, %2452
  %2545 = add <4 x i32> %2544, %2494
  %2546 = add <4 x i32> %2545, %2530
  %2547 = add <4 x i32> %2546, %2536
  %2548 = add <4 x i32> %2508, %2466
  %2549 = add <4 x i32> %2548, %2527
  %2550 = add <4 x i32> %2549, %2533
  %2551 = add <4 x i32> %2550, %2539
  %2552 = shufflevector <8 x i16> %2543, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2553 = shufflevector <8 x i16> %2543, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2554 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2552, <8 x i16> %2552) #5
  %2555 = mul <4 x i32> %2547, <i32 25, i32 25, i32 25, i32 25>
  %2556 = sub <4 x i32> %2555, %2554
  %2557 = icmp sgt <4 x i32> %2556, zeroinitializer
  %2558 = select <4 x i1> %2557, <4 x i32> %2556, <4 x i32> zeroinitializer
  %2559 = mul <4 x i32> %2558, %385
  %2560 = add <4 x i32> %2559, <i32 524288, i32 524288, i32 524288, i32 524288>
  %2561 = lshr <4 x i32> %2560, <i32 20, i32 20, i32 20, i32 20>
  %2562 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2553, <8 x i16> %2553) #5
  %2563 = mul <4 x i32> %2551, <i32 25, i32 25, i32 25, i32 25>
  %2564 = sub <4 x i32> %2563, %2562
  %2565 = icmp sgt <4 x i32> %2564, zeroinitializer
  %2566 = select <4 x i1> %2565, <4 x i32> %2564, <4 x i32> zeroinitializer
  %2567 = mul <4 x i32> %2566, %385
  %2568 = add <4 x i32> %2567, <i32 524288, i32 524288, i32 524288, i32 524288>
  %2569 = lshr <4 x i32> %2568, <i32 20, i32 20, i32 20, i32 20>
  %2570 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %2561, <4 x i32> %2569) #5
  %2571 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %2570, <8 x i16> undef) #5
  %2572 = bitcast <16 x i8> %2571 to <2 x i64>
  %2573 = extractelement <2 x i64> %2572, i32 0
  %2574 = lshr i64 %2573, 8
  %2575 = lshr i64 %2573, 16
  %2576 = lshr i64 %2573, 24
  %2577 = lshr i64 %2573, 32
  %2578 = lshr i64 %2573, 40
  %2579 = lshr i64 %2573, 48
  %2580 = lshr i64 %2573, 56
  %2581 = and i64 %2573, 255
  %2582 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2581
  %2583 = load i8, i8* %2582, align 1
  %2584 = insertelement <16 x i8> %2332, i8 %2583, i64 8
  %2585 = and i64 %2574, 255
  %2586 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2585
  %2587 = load i8, i8* %2586, align 1
  %2588 = insertelement <16 x i8> %2584, i8 %2587, i64 9
  %2589 = and i64 %2575, 255
  %2590 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2589
  %2591 = load i8, i8* %2590, align 1
  %2592 = insertelement <16 x i8> %2588, i8 %2591, i64 10
  %2593 = and i64 %2576, 255
  %2594 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2593
  %2595 = load i8, i8* %2594, align 1
  %2596 = insertelement <16 x i8> %2592, i8 %2595, i64 11
  %2597 = and i64 %2577, 255
  %2598 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2597
  %2599 = load i8, i8* %2598, align 1
  %2600 = insertelement <16 x i8> %2596, i8 %2599, i64 12
  %2601 = and i64 %2578, 255
  %2602 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2601
  %2603 = load i8, i8* %2602, align 1
  %2604 = insertelement <16 x i8> %2600, i8 %2603, i64 13
  %2605 = and i64 %2579, 255
  %2606 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2605
  %2607 = load i8, i8* %2606, align 1
  %2608 = insertelement <16 x i8> %2604, i8 %2607, i64 14
  %2609 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2580
  %2610 = load i8, i8* %2609, align 1
  %2611 = insertelement <16 x i8> %2608, i8 %2610, i64 15
  %2612 = shufflevector <16 x i8> %2611, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2613 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %2612, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %2614 = shufflevector <8 x i16> %2613, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2615 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2614, <8 x i16> %2552) #5
  %2616 = shufflevector <8 x i16> %2613, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2617 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2616, <8 x i16> %2553) #5
  %2618 = add <4 x i32> %2615, <i32 512, i32 512, i32 512, i32 512>
  %2619 = lshr <4 x i32> %2618, <i32 10, i32 10, i32 10, i32 10>
  %2620 = add <4 x i32> %2617, <i32 512, i32 512, i32 512, i32 512>
  %2621 = lshr <4 x i32> %2620, <i32 10, i32 10, i32 10, i32 10>
  %2622 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %2619, <4 x i32> %2621) #5
  %2623 = shufflevector <16 x i8> %2345, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2624 = bitcast <16 x i8> %2623 to <8 x i16>
  %2625 = mul <8 x i16> %2624, %2624
  %2626 = shufflevector <16 x i8> %2349, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2627 = bitcast <16 x i8> %2626 to <8 x i16>
  %2628 = mul <8 x i16> %2627, %2627
  %2629 = bitcast <8 x i16> %2625 to <16 x i8>
  %2630 = shufflevector <16 x i8> %2429, <16 x i8> %2629, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2631 = shufflevector <16 x i8> %2429, <16 x i8> %2629, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %2632 = shufflevector <16 x i8> %2429, <16 x i8> %2629, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2633 = shufflevector <16 x i8> %2429, <16 x i8> %2629, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2634 = shufflevector <8 x i16> %2348, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2635 = bitcast <16 x i8> %2630 to <8 x i16>
  %2636 = shufflevector <8 x i16> %2635, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2637 = bitcast <8 x i16> %2634 to <4 x i32>
  %2638 = bitcast <8 x i16> %2636 to <4 x i32>
  %2639 = bitcast <16 x i8> %2631 to <8 x i16>
  %2640 = shufflevector <8 x i16> %2639, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2641 = bitcast <16 x i8> %2632 to <8 x i16>
  %2642 = shufflevector <8 x i16> %2641, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2643 = bitcast <8 x i16> %2640 to <4 x i32>
  %2644 = bitcast <8 x i16> %2642 to <4 x i32>
  %2645 = bitcast <16 x i8> %2633 to <8 x i16>
  %2646 = shufflevector <8 x i16> %2645, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2647 = bitcast <8 x i16> %2646 to <4 x i32>
  %2648 = add <4 x i32> %2643, %2637
  %2649 = add <4 x i32> %2648, %2644
  %2650 = add <4 x i32> %2649, %2638
  %2651 = add <4 x i32> %2650, %2647
  %2652 = shufflevector <8 x i16> %2348, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2653 = shufflevector <8 x i16> %2635, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2654 = bitcast <8 x i16> %2652 to <4 x i32>
  %2655 = bitcast <8 x i16> %2653 to <4 x i32>
  %2656 = shufflevector <8 x i16> %2639, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2657 = shufflevector <8 x i16> %2641, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2658 = bitcast <8 x i16> %2656 to <4 x i32>
  %2659 = bitcast <8 x i16> %2657 to <4 x i32>
  %2660 = shufflevector <8 x i16> %2645, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2661 = bitcast <8 x i16> %2660 to <4 x i32>
  %2662 = add <4 x i32> %2658, %2654
  %2663 = add <4 x i32> %2662, %2659
  %2664 = add <4 x i32> %2663, %2655
  %2665 = add <4 x i32> %2664, %2661
  %2666 = getelementptr inbounds i32, i32* %2326, i64 %2344
  %2667 = bitcast i32* %2666 to <4 x i32>*
  store <4 x i32> %2651, <4 x i32>* %2667, align 16
  %2668 = getelementptr inbounds i32, i32* %2666, i64 4
  %2669 = bitcast i32* %2668 to <4 x i32>*
  store <4 x i32> %2665, <4 x i32>* %2669, align 16
  %2670 = bitcast <8 x i16> %2628 to <16 x i8>
  %2671 = shufflevector <16 x i8> %2471, <16 x i8> %2670, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2672 = shufflevector <16 x i8> %2471, <16 x i8> %2670, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %2673 = shufflevector <16 x i8> %2471, <16 x i8> %2670, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2674 = shufflevector <16 x i8> %2471, <16 x i8> %2670, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2675 = shufflevector <8 x i16> %2352, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2676 = bitcast <16 x i8> %2671 to <8 x i16>
  %2677 = shufflevector <8 x i16> %2676, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2678 = bitcast <8 x i16> %2675 to <4 x i32>
  %2679 = bitcast <8 x i16> %2677 to <4 x i32>
  %2680 = bitcast <16 x i8> %2672 to <8 x i16>
  %2681 = shufflevector <8 x i16> %2680, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2682 = bitcast <16 x i8> %2673 to <8 x i16>
  %2683 = shufflevector <8 x i16> %2682, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2684 = bitcast <8 x i16> %2681 to <4 x i32>
  %2685 = bitcast <8 x i16> %2683 to <4 x i32>
  %2686 = bitcast <16 x i8> %2674 to <8 x i16>
  %2687 = shufflevector <8 x i16> %2686, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2688 = bitcast <8 x i16> %2687 to <4 x i32>
  %2689 = add <4 x i32> %2684, %2678
  %2690 = add <4 x i32> %2689, %2685
  %2691 = add <4 x i32> %2690, %2679
  %2692 = add <4 x i32> %2691, %2688
  %2693 = shufflevector <8 x i16> %2352, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2694 = shufflevector <8 x i16> %2676, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2695 = bitcast <8 x i16> %2693 to <4 x i32>
  %2696 = bitcast <8 x i16> %2694 to <4 x i32>
  %2697 = shufflevector <8 x i16> %2680, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2698 = shufflevector <8 x i16> %2682, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2699 = bitcast <8 x i16> %2697 to <4 x i32>
  %2700 = bitcast <8 x i16> %2698 to <4 x i32>
  %2701 = shufflevector <8 x i16> %2686, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2702 = bitcast <8 x i16> %2701 to <4 x i32>
  %2703 = add <4 x i32> %2699, %2695
  %2704 = add <4 x i32> %2703, %2700
  %2705 = add <4 x i32> %2704, %2696
  %2706 = add <4 x i32> %2705, %2702
  %2707 = getelementptr inbounds i32, i32* %2327, i64 %2344
  %2708 = bitcast i32* %2707 to <4 x i32>*
  store <4 x i32> %2692, <4 x i32>* %2708, align 16
  %2709 = getelementptr inbounds i32, i32* %2707, i64 4
  %2710 = bitcast i32* %2709 to <4 x i32>*
  store <4 x i32> %2706, <4 x i32>* %2710, align 16
  %2711 = add nuw nsw i64 %2344, 8
  %2712 = getelementptr inbounds i16, i16* %2323, i64 %2711
  %2713 = bitcast i16* %2712 to <8 x i16>*
  %2714 = load <8 x i16>, <8 x i16>* %2713, align 16
  %2715 = getelementptr inbounds i16, i16* %2324, i64 %2711
  %2716 = bitcast i16* %2715 to <8 x i16>*
  %2717 = load <8 x i16>, <8 x i16>* %2716, align 16
  %2718 = getelementptr inbounds i16, i16* %2325, i64 %2711
  %2719 = bitcast i16* %2718 to <8 x i16>*
  %2720 = load <8 x i16>, <8 x i16>* %2719, align 16
  %2721 = getelementptr inbounds i32, i32* %2206, i64 %2711
  %2722 = bitcast i32* %2721 to <4 x i32>*
  %2723 = load <4 x i32>, <4 x i32>* %2722, align 16
  %2724 = getelementptr inbounds i32, i32* %2721, i64 4
  %2725 = bitcast i32* %2724 to <4 x i32>*
  %2726 = load <4 x i32>, <4 x i32>* %2725, align 16
  %2727 = getelementptr inbounds i32, i32* %2212, i64 %2711
  %2728 = bitcast i32* %2727 to <4 x i32>*
  %2729 = load <4 x i32>, <4 x i32>* %2728, align 16
  %2730 = getelementptr inbounds i32, i32* %2727, i64 4
  %2731 = bitcast i32* %2730 to <4 x i32>*
  %2732 = load <4 x i32>, <4 x i32>* %2731, align 16
  %2733 = getelementptr inbounds i32, i32* %2218, i64 %2711
  %2734 = bitcast i32* %2733 to <4 x i32>*
  %2735 = load <4 x i32>, <4 x i32>* %2734, align 16
  %2736 = getelementptr inbounds i32, i32* %2733, i64 4
  %2737 = bitcast i32* %2736 to <4 x i32>*
  %2738 = load <4 x i32>, <4 x i32>* %2737, align 16
  %2739 = add <8 x i16> %2424, %2386
  %2740 = add <8 x i16> %2739, %2714
  %2741 = add <8 x i16> %2740, %2717
  %2742 = add <8 x i16> %2741, %2720
  %2743 = add <4 x i32> %2692, %2651
  %2744 = add <4 x i32> %2743, %2723
  %2745 = add <4 x i32> %2744, %2729
  %2746 = add <4 x i32> %2745, %2735
  %2747 = add <4 x i32> %2706, %2665
  %2748 = add <4 x i32> %2747, %2726
  %2749 = add <4 x i32> %2748, %2732
  %2750 = add <4 x i32> %2749, %2738
  %2751 = shufflevector <8 x i16> %2742, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2752 = shufflevector <8 x i16> %2742, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2753 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2751, <8 x i16> %2751) #5
  %2754 = mul <4 x i32> %2746, <i32 25, i32 25, i32 25, i32 25>
  %2755 = sub <4 x i32> %2754, %2753
  %2756 = icmp sgt <4 x i32> %2755, zeroinitializer
  %2757 = select <4 x i1> %2756, <4 x i32> %2755, <4 x i32> zeroinitializer
  %2758 = mul <4 x i32> %2757, %385
  %2759 = add <4 x i32> %2758, <i32 524288, i32 524288, i32 524288, i32 524288>
  %2760 = lshr <4 x i32> %2759, <i32 20, i32 20, i32 20, i32 20>
  %2761 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2752, <8 x i16> %2752) #5
  %2762 = mul <4 x i32> %2750, <i32 25, i32 25, i32 25, i32 25>
  %2763 = sub <4 x i32> %2762, %2761
  %2764 = icmp sgt <4 x i32> %2763, zeroinitializer
  %2765 = select <4 x i1> %2764, <4 x i32> %2763, <4 x i32> zeroinitializer
  %2766 = mul <4 x i32> %2765, %385
  %2767 = add <4 x i32> %2766, <i32 524288, i32 524288, i32 524288, i32 524288>
  %2768 = lshr <4 x i32> %2767, <i32 20, i32 20, i32 20, i32 20>
  %2769 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %2760, <4 x i32> %2768) #5
  %2770 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %2769, <8 x i16> undef) #5
  %2771 = bitcast <16 x i8> %2770 to <2 x i64>
  %2772 = extractelement <2 x i64> %2771, i32 0
  %2773 = lshr i64 %2772, 8
  %2774 = lshr i64 %2772, 16
  %2775 = lshr i64 %2772, 24
  %2776 = lshr i64 %2772, 32
  %2777 = lshr i64 %2772, 40
  %2778 = lshr i64 %2772, 48
  %2779 = lshr i64 %2772, 56
  %2780 = and i64 %2772, 255
  %2781 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2780
  %2782 = load i8, i8* %2781, align 1
  %2783 = insertelement <16 x i8> %2331, i8 %2782, i64 0
  %2784 = and i64 %2773, 255
  %2785 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2784
  %2786 = load i8, i8* %2785, align 1
  %2787 = insertelement <16 x i8> %2783, i8 %2786, i64 1
  %2788 = and i64 %2774, 255
  %2789 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2788
  %2790 = load i8, i8* %2789, align 1
  %2791 = insertelement <16 x i8> %2787, i8 %2790, i64 2
  %2792 = and i64 %2775, 255
  %2793 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2792
  %2794 = load i8, i8* %2793, align 1
  %2795 = insertelement <16 x i8> %2791, i8 %2794, i64 3
  %2796 = and i64 %2776, 255
  %2797 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2796
  %2798 = load i8, i8* %2797, align 1
  %2799 = insertelement <16 x i8> %2795, i8 %2798, i64 4
  %2800 = and i64 %2777, 255
  %2801 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2800
  %2802 = load i8, i8* %2801, align 1
  %2803 = insertelement <16 x i8> %2799, i8 %2802, i64 5
  %2804 = and i64 %2778, 255
  %2805 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2804
  %2806 = load i8, i8* %2805, align 1
  %2807 = insertelement <16 x i8> %2803, i8 %2806, i64 6
  %2808 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %2779
  %2809 = load i8, i8* %2808, align 1
  %2810 = insertelement <16 x i8> %2807, i8 %2809, i64 7
  %2811 = shufflevector <16 x i8> %2810, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2812 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %2811, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %2813 = shufflevector <8 x i16> %2812, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2814 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2813, <8 x i16> %2751) #5
  %2815 = shufflevector <8 x i16> %2812, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2816 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2815, <8 x i16> %2752) #5
  %2817 = add <4 x i32> %2814, <i32 512, i32 512, i32 512, i32 512>
  %2818 = lshr <4 x i32> %2817, <i32 10, i32 10, i32 10, i32 10>
  %2819 = add <4 x i32> %2816, <i32 512, i32 512, i32 512, i32 512>
  %2820 = lshr <4 x i32> %2819, <i32 10, i32 10, i32 10, i32 10>
  %2821 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %2818, <4 x i32> %2820) #5
  %2822 = shufflevector <16 x i8> %2611, <16 x i8> %2810, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %2823 = shufflevector <16 x i8> %2611, <16 x i8> %2810, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2824 = shufflevector <16 x i8> %2611, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2825 = shufflevector <16 x i8> %2822, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2826 = bitcast <16 x i8> %2824 to <8 x i16>
  %2827 = bitcast <16 x i8> %2825 to <8 x i16>
  %2828 = add <8 x i16> %2827, %2826
  %2829 = shufflevector <16 x i8> %2823, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2830 = bitcast <16 x i8> %2829 to <8 x i16>
  %2831 = add <8 x i16> %2828, %2830
  %2832 = mul <8 x i16> %2831, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %2833 = add <8 x i16> %2832, %2827
  %2834 = getelementptr inbounds i16, i16* %2311, i64 %2329
  %2835 = bitcast i16* %2834 to <8 x i16>*
  store <8 x i16> %2833, <8 x i16>* %2835, align 16
  %2836 = bitcast <8 x i16> %2622 to <16 x i8>
  %2837 = bitcast <8 x i16> %2335 to <16 x i8>
  %2838 = shufflevector <16 x i8> %2837, <16 x i8> %2836, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2839 = bitcast <16 x i8> %2838 to <8 x i16>
  %2840 = shufflevector <16 x i8> %2837, <16 x i8> %2836, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %2841 = bitcast <16 x i8> %2840 to <8 x i16>
  %2842 = shufflevector <8 x i16> %2335, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2843 = shufflevector <8 x i16> %2839, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2844 = bitcast <8 x i16> %2842 to <4 x i32>
  %2845 = bitcast <8 x i16> %2843 to <4 x i32>
  %2846 = add <4 x i32> %2845, %2844
  %2847 = shufflevector <8 x i16> %2841, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2848 = bitcast <8 x i16> %2847 to <4 x i32>
  %2849 = add <4 x i32> %2846, %2848
  %2850 = mul <4 x i32> %2849, <i32 5, i32 5, i32 5, i32 5>
  %2851 = add <4 x i32> %2850, %2845
  %2852 = shufflevector <8 x i16> %2335, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2853 = shufflevector <8 x i16> %2839, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2854 = bitcast <8 x i16> %2852 to <4 x i32>
  %2855 = bitcast <8 x i16> %2853 to <4 x i32>
  %2856 = add <4 x i32> %2855, %2854
  %2857 = shufflevector <8 x i16> %2841, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2858 = bitcast <8 x i16> %2857 to <4 x i32>
  %2859 = add <4 x i32> %2856, %2858
  %2860 = mul <4 x i32> %2859, <i32 5, i32 5, i32 5, i32 5>
  %2861 = add <4 x i32> %2860, %2855
  %2862 = getelementptr inbounds i32, i32* %2312, i64 %2329
  %2863 = bitcast i32* %2862 to <4 x i32>*
  store <4 x i32> %2851, <4 x i32>* %2863, align 16
  %2864 = getelementptr inbounds i32, i32* %2862, i64 4
  %2865 = bitcast i32* %2864 to <4 x i32>*
  store <4 x i32> %2861, <4 x i32>* %2865, align 16
  %2866 = getelementptr inbounds i8, i8* %2064, i64 %2329
  %2867 = bitcast i8* %2866 to <16 x i8>*
  %2868 = load <16 x i8>, <16 x i8>* %2867, align 16
  %2869 = getelementptr inbounds i8, i8* %2309, i64 %2329
  %2870 = bitcast i8* %2869 to <16 x i8>*
  %2871 = load <16 x i8>, <16 x i8>* %2870, align 16
  %2872 = shufflevector <16 x i8> %2868, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2873 = shufflevector <16 x i8> %2871, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %2874 = getelementptr inbounds i16, i16* %2313, i64 %2329
  %2875 = bitcast i16* %2874 to <8 x i16>*
  %2876 = load <8 x i16>, <8 x i16>* %2875, align 16
  %2877 = getelementptr inbounds i32, i32* %2314, i64 %2329
  %2878 = bitcast i32* %2877 to <4 x i32>*
  %2879 = load <4 x i32>, <4 x i32>* %2878, align 16
  %2880 = getelementptr inbounds i32, i32* %2877, i64 4
  %2881 = bitcast i32* %2880 to <4 x i32>*
  %2882 = load <4 x i32>, <4 x i32>* %2881, align 16
  %2883 = add <8 x i16> %2876, %2833
  %2884 = shufflevector <8 x i16> %2883, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2885 = bitcast <16 x i8> %2872 to <8 x i16>
  %2886 = shufflevector <8 x i16> %2885, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2887 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2884, <8 x i16> %2886) #5
  %2888 = shufflevector <8 x i16> %2883, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2889 = shufflevector <8 x i16> %2885, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2890 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2888, <8 x i16> %2889) #5
  %2891 = add <4 x i32> %2851, <i32 256, i32 256, i32 256, i32 256>
  %2892 = add <4 x i32> %2891, %2879
  %2893 = sub <4 x i32> %2892, %2887
  %2894 = ashr <4 x i32> %2893, <i32 9, i32 9, i32 9, i32 9>
  %2895 = add <4 x i32> %2861, <i32 256, i32 256, i32 256, i32 256>
  %2896 = add <4 x i32> %2895, %2882
  %2897 = sub <4 x i32> %2896, %2890
  %2898 = ashr <4 x i32> %2897, <i32 9, i32 9, i32 9, i32 9>
  %2899 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2894, <4 x i32> %2898) #5
  %2900 = shufflevector <8 x i16> %2833, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2901 = bitcast <16 x i8> %2873 to <8 x i16>
  %2902 = shufflevector <8 x i16> %2901, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2903 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2900, <8 x i16> %2902) #5
  %2904 = shufflevector <8 x i16> %2833, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2905 = shufflevector <8 x i16> %2901, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2906 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2904, <8 x i16> %2905) #5
  %2907 = add <4 x i32> %2851, <i32 128, i32 128, i32 128, i32 128>
  %2908 = sub <4 x i32> %2907, %2903
  %2909 = ashr <4 x i32> %2908, <i32 8, i32 8, i32 8, i32 8>
  %2910 = add <4 x i32> %2861, <i32 128, i32 128, i32 128, i32 128>
  %2911 = sub <4 x i32> %2910, %2906
  %2912 = ashr <4 x i32> %2911, <i32 8, i32 8, i32 8, i32 8>
  %2913 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2909, <4 x i32> %2912) #5
  %2914 = shufflevector <8 x i16> %2899, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2915 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2914, <8 x i16> %1029) #5
  %2916 = shufflevector <8 x i16> %2899, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2917 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2916, <8 x i16> %1029) #5
  %2918 = add <4 x i32> %2915, <i32 1024, i32 1024, i32 1024, i32 1024>
  %2919 = ashr <4 x i32> %2918, <i32 11, i32 11, i32 11, i32 11>
  %2920 = add <4 x i32> %2917, <i32 1024, i32 1024, i32 1024, i32 1024>
  %2921 = ashr <4 x i32> %2920, <i32 11, i32 11, i32 11, i32 11>
  %2922 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2919, <4 x i32> %2921) #5
  %2923 = add <8 x i16> %2922, %2885
  %2924 = shufflevector <8 x i16> %2913, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2925 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2924, <8 x i16> %1029) #5
  %2926 = shufflevector <8 x i16> %2913, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2927 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2926, <8 x i16> %1029) #5
  %2928 = add <4 x i32> %2925, <i32 1024, i32 1024, i32 1024, i32 1024>
  %2929 = ashr <4 x i32> %2928, <i32 11, i32 11, i32 11, i32 11>
  %2930 = add <4 x i32> %2927, <i32 1024, i32 1024, i32 1024, i32 1024>
  %2931 = ashr <4 x i32> %2930, <i32 11, i32 11, i32 11, i32 11>
  %2932 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2929, <4 x i32> %2931) #5
  %2933 = add <8 x i16> %2932, %2901
  %2934 = shufflevector <16 x i8> %2822, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2935 = bitcast <16 x i8> %2612 to <8 x i16>
  %2936 = bitcast <16 x i8> %2934 to <8 x i16>
  %2937 = add <8 x i16> %2936, %2935
  %2938 = shufflevector <16 x i8> %2823, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2939 = bitcast <16 x i8> %2938 to <8 x i16>
  %2940 = add <8 x i16> %2937, %2939
  %2941 = mul <8 x i16> %2940, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %2942 = add <8 x i16> %2941, %2936
  %2943 = getelementptr inbounds i16, i16* %2315, i64 %2329
  %2944 = bitcast i16* %2943 to <8 x i16>*
  store <8 x i16> %2942, <8 x i16>* %2944, align 16
  %2945 = bitcast <8 x i16> %2821 to <16 x i8>
  %2946 = shufflevector <16 x i8> %2836, <16 x i8> %2945, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %2947 = bitcast <16 x i8> %2946 to <8 x i16>
  %2948 = shufflevector <16 x i8> %2836, <16 x i8> %2945, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %2949 = bitcast <16 x i8> %2948 to <8 x i16>
  %2950 = shufflevector <8 x i16> %2622, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2951 = shufflevector <8 x i16> %2947, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2952 = bitcast <8 x i16> %2950 to <4 x i32>
  %2953 = bitcast <8 x i16> %2951 to <4 x i32>
  %2954 = add <4 x i32> %2953, %2952
  %2955 = shufflevector <8 x i16> %2949, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2956 = bitcast <8 x i16> %2955 to <4 x i32>
  %2957 = add <4 x i32> %2954, %2956
  %2958 = mul <4 x i32> %2957, <i32 5, i32 5, i32 5, i32 5>
  %2959 = add <4 x i32> %2958, %2953
  %2960 = shufflevector <8 x i16> %2622, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2961 = shufflevector <8 x i16> %2947, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2962 = bitcast <8 x i16> %2960 to <4 x i32>
  %2963 = bitcast <8 x i16> %2961 to <4 x i32>
  %2964 = add <4 x i32> %2963, %2962
  %2965 = shufflevector <8 x i16> %2949, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2966 = bitcast <8 x i16> %2965 to <4 x i32>
  %2967 = add <4 x i32> %2964, %2966
  %2968 = mul <4 x i32> %2967, <i32 5, i32 5, i32 5, i32 5>
  %2969 = add <4 x i32> %2968, %2963
  %2970 = getelementptr inbounds i32, i32* %2316, i64 %2329
  %2971 = bitcast i32* %2970 to <4 x i32>*
  store <4 x i32> %2959, <4 x i32>* %2971, align 16
  %2972 = getelementptr inbounds i32, i32* %2970, i64 4
  %2973 = bitcast i32* %2972 to <4 x i32>*
  store <4 x i32> %2969, <4 x i32>* %2973, align 16
  %2974 = shufflevector <16 x i8> %2868, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2975 = shufflevector <16 x i8> %2871, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %2976 = getelementptr inbounds i16, i16* %2317, i64 %2329
  %2977 = bitcast i16* %2976 to <8 x i16>*
  %2978 = load <8 x i16>, <8 x i16>* %2977, align 16
  %2979 = getelementptr inbounds i32, i32* %2318, i64 %2329
  %2980 = bitcast i32* %2979 to <4 x i32>*
  %2981 = load <4 x i32>, <4 x i32>* %2980, align 16
  %2982 = getelementptr inbounds i32, i32* %2979, i64 4
  %2983 = bitcast i32* %2982 to <4 x i32>*
  %2984 = load <4 x i32>, <4 x i32>* %2983, align 16
  %2985 = add <8 x i16> %2978, %2942
  %2986 = shufflevector <8 x i16> %2985, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2987 = bitcast <16 x i8> %2974 to <8 x i16>
  %2988 = shufflevector <8 x i16> %2987, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %2989 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2986, <8 x i16> %2988) #5
  %2990 = shufflevector <8 x i16> %2985, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2991 = shufflevector <8 x i16> %2987, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %2992 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %2990, <8 x i16> %2991) #5
  %2993 = add <4 x i32> %2959, <i32 256, i32 256, i32 256, i32 256>
  %2994 = add <4 x i32> %2993, %2981
  %2995 = sub <4 x i32> %2994, %2989
  %2996 = ashr <4 x i32> %2995, <i32 9, i32 9, i32 9, i32 9>
  %2997 = add <4 x i32> %2969, <i32 256, i32 256, i32 256, i32 256>
  %2998 = add <4 x i32> %2997, %2984
  %2999 = sub <4 x i32> %2998, %2992
  %3000 = ashr <4 x i32> %2999, <i32 9, i32 9, i32 9, i32 9>
  %3001 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %2996, <4 x i32> %3000) #5
  %3002 = shufflevector <8 x i16> %2942, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3003 = bitcast <16 x i8> %2975 to <8 x i16>
  %3004 = shufflevector <8 x i16> %3003, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3005 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3002, <8 x i16> %3004) #5
  %3006 = shufflevector <8 x i16> %2942, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3007 = shufflevector <8 x i16> %3003, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3008 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3006, <8 x i16> %3007) #5
  %3009 = add <4 x i32> %2959, <i32 128, i32 128, i32 128, i32 128>
  %3010 = sub <4 x i32> %3009, %3005
  %3011 = ashr <4 x i32> %3010, <i32 8, i32 8, i32 8, i32 8>
  %3012 = add <4 x i32> %2969, <i32 128, i32 128, i32 128, i32 128>
  %3013 = sub <4 x i32> %3012, %3008
  %3014 = ashr <4 x i32> %3013, <i32 8, i32 8, i32 8, i32 8>
  %3015 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %3011, <4 x i32> %3014) #5
  %3016 = shufflevector <8 x i16> %3001, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3017 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3016, <8 x i16> %1029) #5
  %3018 = shufflevector <8 x i16> %3001, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3019 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3018, <8 x i16> %1029) #5
  %3020 = add <4 x i32> %3017, <i32 1024, i32 1024, i32 1024, i32 1024>
  %3021 = ashr <4 x i32> %3020, <i32 11, i32 11, i32 11, i32 11>
  %3022 = add <4 x i32> %3019, <i32 1024, i32 1024, i32 1024, i32 1024>
  %3023 = ashr <4 x i32> %3022, <i32 11, i32 11, i32 11, i32 11>
  %3024 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %3021, <4 x i32> %3023) #5
  %3025 = add <8 x i16> %3024, %2987
  %3026 = getelementptr inbounds i8, i8* %1049, i64 %2329
  %3027 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %2923, <8 x i16> %3025) #5
  %3028 = bitcast i8* %3026 to <16 x i8>*
  store <16 x i8> %3027, <16 x i8>* %3028, align 16
  %3029 = shufflevector <8 x i16> %3015, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3030 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3029, <8 x i16> %1029) #5
  %3031 = shufflevector <8 x i16> %3015, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3032 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3031, <8 x i16> %1029) #5
  %3033 = add <4 x i32> %3030, <i32 1024, i32 1024, i32 1024, i32 1024>
  %3034 = ashr <4 x i32> %3033, <i32 11, i32 11, i32 11, i32 11>
  %3035 = add <4 x i32> %3032, <i32 1024, i32 1024, i32 1024, i32 1024>
  %3036 = ashr <4 x i32> %3035, <i32 11, i32 11, i32 11, i32 11>
  %3037 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %3034, <4 x i32> %3036) #5
  %3038 = add <8 x i16> %3037, %3003
  %3039 = getelementptr inbounds i8, i8* %2310, i64 %2329
  %3040 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %2933, <8 x i16> %3038) #5
  %3041 = bitcast i8* %3039 to <16 x i8>*
  store <16 x i8> %3040, <16 x i8>* %3041, align 16
  %3042 = icmp slt i64 %2338, %20
  br i1 %3042, label %2328, label %3043

3043:                                             ; preds = %2328, %1034
  br i1 %1052, label %12577, label %3044

3044:                                             ; preds = %3043
  %3045 = getelementptr inbounds i8, i8* %1050, i64 3
  br i1 %214, label %3046, label %3049

3046:                                             ; preds = %3044
  %3047 = getelementptr inbounds i8, i8* %3045, i64 %1023
  %3048 = getelementptr inbounds i8, i8* %1049, i64 %1023
  br label %3049

3049:                                             ; preds = %3044, %3046
  %3050 = phi i64 [ %1038, %3046 ], [ %1035, %3044 ]
  %3051 = phi i64 [ %1044, %3046 ], [ %1036, %3044 ]
  %3052 = phi i64 [ %1035, %3046 ], [ %1037, %3044 ]
  %3053 = phi i64 [ %1042, %3046 ], [ %1039, %3044 ]
  %3054 = phi i64 [ %1043, %3046 ], [ %1040, %3044 ]
  %3055 = phi i64 [ %1039, %3046 ], [ %1041, %3044 ]
  %3056 = phi i64 [ %1045, %3046 ], [ %1046, %3044 ]
  %3057 = phi i64 [ %1047, %3046 ], [ %1048, %3044 ]
  %3058 = phi i8* [ %3048, %3046 ], [ %1049, %3044 ]
  %3059 = phi i8* [ %3047, %3046 ], [ %3045, %3044 ]
  %3060 = inttoptr i64 %3052 to <8 x i16>*
  %3061 = inttoptr i64 %3051 to <8 x i16>*
  %3062 = inttoptr i64 %3050 to <8 x i16>*
  %3063 = inttoptr i64 %3055 to i32*
  %3064 = inttoptr i64 %3054 to i32*
  %3065 = inttoptr i64 %3053 to i32*
  %3066 = getelementptr inbounds i8, i8* %199, i64 %6
  %3067 = inttoptr i64 %3056 to i16*
  %3068 = inttoptr i64 %3057 to i32*
  %3069 = bitcast i8* %3066 to <2 x i64>*
  %3070 = load <2 x i64>, <2 x i64>* %3069, align 1
  %3071 = bitcast <2 x i64> %3070 to <16 x i8>
  %3072 = shufflevector <16 x i8> %3071, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3073 = bitcast <16 x i8> %3072 to <8 x i16>
  %3074 = mul <8 x i16> %3073, %3073
  %3075 = shufflevector <16 x i8> %3071, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3076 = bitcast <16 x i8> %3075 to <8 x i16>
  %3077 = mul <8 x i16> %3076, %3076
  %3078 = shufflevector <16 x i8> %3071, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3079 = shufflevector <16 x i8> %3071, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3080 = shufflevector <16 x i8> %3071, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3081 = shufflevector <16 x i8> %3071, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3082 = shufflevector <16 x i8> %3078, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3083 = bitcast <16 x i8> %3082 to <8 x i16>
  %3084 = shufflevector <16 x i8> %3079, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3085 = shufflevector <16 x i8> %3080, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3086 = bitcast <16 x i8> %3084 to <8 x i16>
  %3087 = bitcast <16 x i8> %3085 to <8 x i16>
  %3088 = shufflevector <16 x i8> %3081, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3089 = bitcast <16 x i8> %3088 to <8 x i16>
  %3090 = add <8 x i16> %3083, %3073
  %3091 = add <8 x i16> %3090, %3086
  %3092 = add <8 x i16> %3091, %3087
  %3093 = add <8 x i16> %3092, %3089
  %3094 = bitcast <8 x i16> %3077 to <16 x i8>
  %3095 = bitcast <8 x i16> %3074 to <16 x i8>
  %3096 = shufflevector <16 x i8> %3095, <16 x i8> %3094, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3097 = shufflevector <16 x i8> %3095, <16 x i8> %3094, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %3098 = shufflevector <16 x i8> %3095, <16 x i8> %3094, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %3099 = shufflevector <16 x i8> %3095, <16 x i8> %3094, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3100 = shufflevector <8 x i16> %3074, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3101 = bitcast <16 x i8> %3096 to <8 x i16>
  %3102 = shufflevector <8 x i16> %3101, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3103 = bitcast <8 x i16> %3100 to <4 x i32>
  %3104 = bitcast <8 x i16> %3102 to <4 x i32>
  %3105 = bitcast <16 x i8> %3097 to <8 x i16>
  %3106 = shufflevector <8 x i16> %3105, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3107 = bitcast <16 x i8> %3098 to <8 x i16>
  %3108 = shufflevector <8 x i16> %3107, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3109 = bitcast <8 x i16> %3106 to <4 x i32>
  %3110 = bitcast <8 x i16> %3108 to <4 x i32>
  %3111 = bitcast <16 x i8> %3099 to <8 x i16>
  %3112 = shufflevector <8 x i16> %3111, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3113 = bitcast <8 x i16> %3112 to <4 x i32>
  %3114 = add <4 x i32> %3109, %3103
  %3115 = add <4 x i32> %3114, %3110
  %3116 = add <4 x i32> %3115, %3104
  %3117 = add <4 x i32> %3116, %3113
  %3118 = shufflevector <8 x i16> %3074, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3119 = shufflevector <8 x i16> %3101, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3120 = bitcast <8 x i16> %3118 to <4 x i32>
  %3121 = bitcast <8 x i16> %3119 to <4 x i32>
  %3122 = shufflevector <8 x i16> %3105, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3123 = shufflevector <8 x i16> %3107, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3124 = bitcast <8 x i16> %3122 to <4 x i32>
  %3125 = bitcast <8 x i16> %3123 to <4 x i32>
  %3126 = shufflevector <8 x i16> %3111, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3127 = bitcast <8 x i16> %3126 to <4 x i32>
  %3128 = add <4 x i32> %3124, %3120
  %3129 = add <4 x i32> %3128, %3125
  %3130 = add <4 x i32> %3129, %3121
  %3131 = add <4 x i32> %3130, %3127
  %3132 = load <8 x i16>, <8 x i16>* %3060, align 16
  %3133 = load <8 x i16>, <8 x i16>* %3061, align 16
  %3134 = load <8 x i16>, <8 x i16>* %3062, align 16
  %3135 = inttoptr i64 %3055 to <4 x i32>*
  %3136 = load <4 x i32>, <4 x i32>* %3135, align 16
  %3137 = getelementptr inbounds i32, i32* %3063, i64 4
  %3138 = bitcast i32* %3137 to <4 x i32>*
  %3139 = load <4 x i32>, <4 x i32>* %3138, align 16
  %3140 = inttoptr i64 %3054 to <4 x i32>*
  %3141 = load <4 x i32>, <4 x i32>* %3140, align 16
  %3142 = getelementptr inbounds i32, i32* %3064, i64 4
  %3143 = bitcast i32* %3142 to <4 x i32>*
  %3144 = load <4 x i32>, <4 x i32>* %3143, align 16
  %3145 = inttoptr i64 %3053 to <4 x i32>*
  %3146 = load <4 x i32>, <4 x i32>* %3145, align 16
  %3147 = getelementptr inbounds i32, i32* %3065, i64 4
  %3148 = bitcast i32* %3147 to <4 x i32>*
  %3149 = load <4 x i32>, <4 x i32>* %3148, align 16
  %3150 = shl <8 x i16> %3093, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3151 = add <8 x i16> %3133, %3132
  %3152 = add <8 x i16> %3151, %3134
  %3153 = add <8 x i16> %3152, %3150
  %3154 = shl <4 x i32> %3117, <i32 1, i32 1, i32 1, i32 1>
  %3155 = add <4 x i32> %3141, %3136
  %3156 = add <4 x i32> %3155, %3146
  %3157 = add <4 x i32> %3156, %3154
  %3158 = shl <4 x i32> %3131, <i32 1, i32 1, i32 1, i32 1>
  %3159 = add <4 x i32> %3144, %3139
  %3160 = add <4 x i32> %3159, %3149
  %3161 = add <4 x i32> %3160, %3158
  %3162 = shufflevector <8 x i16> %3153, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3163 = shufflevector <8 x i16> %3153, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3164 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3162, <8 x i16> %3162) #5
  %3165 = mul <4 x i32> %3157, <i32 25, i32 25, i32 25, i32 25>
  %3166 = sub <4 x i32> %3165, %3164
  %3167 = icmp sgt <4 x i32> %3166, zeroinitializer
  %3168 = select <4 x i1> %3167, <4 x i32> %3166, <4 x i32> zeroinitializer
  %3169 = mul <4 x i32> %3168, %385
  %3170 = add <4 x i32> %3169, <i32 524288, i32 524288, i32 524288, i32 524288>
  %3171 = lshr <4 x i32> %3170, <i32 20, i32 20, i32 20, i32 20>
  %3172 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3163, <8 x i16> %3163) #5
  %3173 = mul <4 x i32> %3161, <i32 25, i32 25, i32 25, i32 25>
  %3174 = sub <4 x i32> %3173, %3172
  %3175 = icmp sgt <4 x i32> %3174, zeroinitializer
  %3176 = select <4 x i1> %3175, <4 x i32> %3174, <4 x i32> zeroinitializer
  %3177 = mul <4 x i32> %3176, %385
  %3178 = add <4 x i32> %3177, <i32 524288, i32 524288, i32 524288, i32 524288>
  %3179 = lshr <4 x i32> %3178, <i32 20, i32 20, i32 20, i32 20>
  %3180 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %3171, <4 x i32> %3179) #5
  %3181 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %3180, <8 x i16> undef) #5
  %3182 = bitcast <16 x i8> %3181 to <2 x i64>
  %3183 = extractelement <2 x i64> %3182, i32 0
  %3184 = lshr i64 %3183, 8
  %3185 = lshr i64 %3183, 16
  %3186 = lshr i64 %3183, 24
  %3187 = lshr i64 %3183, 32
  %3188 = lshr i64 %3183, 40
  %3189 = lshr i64 %3183, 48
  %3190 = lshr i64 %3183, 56
  %3191 = and i64 %3183, 255
  %3192 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3191
  %3193 = load i8, i8* %3192, align 1
  %3194 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %3193, i64 0
  %3195 = and i64 %3184, 255
  %3196 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3195
  %3197 = load i8, i8* %3196, align 1
  %3198 = insertelement <16 x i8> %3194, i8 %3197, i64 1
  %3199 = and i64 %3185, 255
  %3200 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3199
  %3201 = load i8, i8* %3200, align 1
  %3202 = insertelement <16 x i8> %3198, i8 %3201, i64 2
  %3203 = and i64 %3186, 255
  %3204 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3203
  %3205 = load i8, i8* %3204, align 1
  %3206 = insertelement <16 x i8> %3202, i8 %3205, i64 3
  %3207 = and i64 %3187, 255
  %3208 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3207
  %3209 = load i8, i8* %3208, align 1
  %3210 = insertelement <16 x i8> %3206, i8 %3209, i64 4
  %3211 = and i64 %3188, 255
  %3212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3211
  %3213 = load i8, i8* %3212, align 1
  %3214 = insertelement <16 x i8> %3210, i8 %3213, i64 5
  %3215 = and i64 %3189, 255
  %3216 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3215
  %3217 = load i8, i8* %3216, align 1
  %3218 = insertelement <16 x i8> %3214, i8 %3217, i64 6
  %3219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3190
  %3220 = load i8, i8* %3219, align 1
  %3221 = insertelement <16 x i8> %3218, i8 %3220, i64 7
  %3222 = shufflevector <16 x i8> %3221, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3223 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %3222, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %3224 = shufflevector <8 x i16> %3223, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3225 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3224, <8 x i16> %3162) #5
  %3226 = shufflevector <8 x i16> %3223, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3227 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3226, <8 x i16> %3163) #5
  %3228 = add <4 x i32> %3225, <i32 512, i32 512, i32 512, i32 512>
  %3229 = lshr <4 x i32> %3228, <i32 10, i32 10, i32 10, i32 10>
  %3230 = add <4 x i32> %3227, <i32 512, i32 512, i32 512, i32 512>
  %3231 = lshr <4 x i32> %3230, <i32 10, i32 10, i32 10, i32 10>
  %3232 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %3229, <4 x i32> %3231) #5
  %3233 = getelementptr inbounds i8, i8* %3066, i64 16
  %3234 = inttoptr i64 %3052 to i16*
  %3235 = inttoptr i64 %3051 to i16*
  %3236 = inttoptr i64 %3050 to i16*
  br label %3237

3237:                                             ; preds = %3237, %3049
  %3238 = phi i64 [ %3247, %3237 ], [ 0, %3049 ]
  %3239 = phi <16 x i8> [ %3576, %3237 ], [ <i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, %3049 ]
  %3240 = phi <16 x i8> [ %3576, %3237 ], [ %3221, %3049 ]
  %3241 = phi <8 x i16> [ %3439, %3237 ], [ %3077, %3049 ]
  %3242 = phi <8 x i16> [ %3587, %3237 ], [ %3232, %3049 ]
  %3243 = phi <2 x i64> [ %3249, %3237 ], [ %3070, %3049 ]
  %3244 = phi i32* [ %3739, %3237 ], [ %3068, %3049 ]
  %3245 = phi i16* [ %3738, %3237 ], [ %3067, %3049 ]
  %3246 = getelementptr inbounds i8, i8* %3233, i64 %3238
  %3247 = add nuw nsw i64 %3238, 16
  %3248 = bitcast i8* %3246 to <2 x i64>*
  %3249 = load <2 x i64>, <2 x i64>* %3248, align 1
  %3250 = or i64 %3238, 8
  %3251 = bitcast <2 x i64> %3249 to <16 x i8>
  %3252 = shufflevector <16 x i8> %3251, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3253 = bitcast <16 x i8> %3252 to <8 x i16>
  %3254 = mul <8 x i16> %3253, %3253
  %3255 = bitcast <2 x i64> %3243 to <16 x i8>
  %3256 = shufflevector <16 x i8> %3255, <16 x i8> %3251, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3257 = shufflevector <16 x i8> %3255, <16 x i8> %3251, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3258 = shufflevector <16 x i8> %3255, <16 x i8> %3251, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3259 = shufflevector <16 x i8> %3255, <16 x i8> %3251, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3260 = shufflevector <16 x i8> %3255, <16 x i8> %3251, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %3261 = shufflevector <16 x i8> %3256, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3262 = shufflevector <16 x i8> %3257, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3263 = bitcast <16 x i8> %3261 to <8 x i16>
  %3264 = bitcast <16 x i8> %3262 to <8 x i16>
  %3265 = shufflevector <16 x i8> %3258, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3266 = shufflevector <16 x i8> %3259, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3267 = bitcast <16 x i8> %3265 to <8 x i16>
  %3268 = bitcast <16 x i8> %3266 to <8 x i16>
  %3269 = shufflevector <16 x i8> %3260, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3270 = bitcast <16 x i8> %3269 to <8 x i16>
  %3271 = add <8 x i16> %3264, %3263
  %3272 = add <8 x i16> %3271, %3267
  %3273 = add <8 x i16> %3272, %3268
  %3274 = add <8 x i16> %3273, %3270
  %3275 = shufflevector <16 x i8> %3256, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3276 = shufflevector <16 x i8> %3257, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3277 = bitcast <16 x i8> %3275 to <8 x i16>
  %3278 = bitcast <16 x i8> %3276 to <8 x i16>
  %3279 = shufflevector <16 x i8> %3258, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3280 = shufflevector <16 x i8> %3259, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3281 = bitcast <16 x i8> %3279 to <8 x i16>
  %3282 = bitcast <16 x i8> %3280 to <8 x i16>
  %3283 = shufflevector <16 x i8> %3260, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3284 = bitcast <16 x i8> %3283 to <8 x i16>
  %3285 = add <8 x i16> %3278, %3277
  %3286 = add <8 x i16> %3285, %3281
  %3287 = add <8 x i16> %3286, %3282
  %3288 = add <8 x i16> %3287, %3284
  %3289 = bitcast <8 x i16> %3254 to <16 x i8>
  %3290 = bitcast <8 x i16> %3241 to <16 x i8>
  %3291 = shufflevector <16 x i8> %3290, <16 x i8> %3289, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3292 = shufflevector <16 x i8> %3290, <16 x i8> %3289, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %3293 = shufflevector <16 x i8> %3290, <16 x i8> %3289, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %3294 = shufflevector <16 x i8> %3290, <16 x i8> %3289, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3295 = shufflevector <8 x i16> %3241, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3296 = bitcast <16 x i8> %3291 to <8 x i16>
  %3297 = shufflevector <8 x i16> %3296, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3298 = bitcast <8 x i16> %3295 to <4 x i32>
  %3299 = bitcast <8 x i16> %3297 to <4 x i32>
  %3300 = bitcast <16 x i8> %3292 to <8 x i16>
  %3301 = shufflevector <8 x i16> %3300, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3302 = bitcast <16 x i8> %3293 to <8 x i16>
  %3303 = shufflevector <8 x i16> %3302, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3304 = bitcast <8 x i16> %3301 to <4 x i32>
  %3305 = bitcast <8 x i16> %3303 to <4 x i32>
  %3306 = bitcast <16 x i8> %3294 to <8 x i16>
  %3307 = shufflevector <8 x i16> %3306, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3308 = bitcast <8 x i16> %3307 to <4 x i32>
  %3309 = add <4 x i32> %3304, %3298
  %3310 = add <4 x i32> %3309, %3305
  %3311 = add <4 x i32> %3310, %3299
  %3312 = add <4 x i32> %3311, %3308
  %3313 = shufflevector <8 x i16> %3241, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3314 = shufflevector <8 x i16> %3296, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3315 = bitcast <8 x i16> %3313 to <4 x i32>
  %3316 = bitcast <8 x i16> %3314 to <4 x i32>
  %3317 = shufflevector <8 x i16> %3300, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3318 = shufflevector <8 x i16> %3302, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3319 = bitcast <8 x i16> %3317 to <4 x i32>
  %3320 = bitcast <8 x i16> %3318 to <4 x i32>
  %3321 = shufflevector <8 x i16> %3306, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3322 = bitcast <8 x i16> %3321 to <4 x i32>
  %3323 = add <4 x i32> %3319, %3315
  %3324 = add <4 x i32> %3323, %3320
  %3325 = add <4 x i32> %3324, %3316
  %3326 = add <4 x i32> %3325, %3322
  %3327 = getelementptr inbounds i16, i16* %3234, i64 %3250
  %3328 = bitcast i16* %3327 to <8 x i16>*
  %3329 = load <8 x i16>, <8 x i16>* %3328, align 16
  %3330 = getelementptr inbounds i16, i16* %3235, i64 %3250
  %3331 = bitcast i16* %3330 to <8 x i16>*
  %3332 = load <8 x i16>, <8 x i16>* %3331, align 16
  %3333 = getelementptr inbounds i16, i16* %3236, i64 %3250
  %3334 = bitcast i16* %3333 to <8 x i16>*
  %3335 = load <8 x i16>, <8 x i16>* %3334, align 16
  %3336 = getelementptr inbounds i32, i32* %3063, i64 %3250
  %3337 = bitcast i32* %3336 to <4 x i32>*
  %3338 = load <4 x i32>, <4 x i32>* %3337, align 16
  %3339 = getelementptr inbounds i32, i32* %3336, i64 4
  %3340 = bitcast i32* %3339 to <4 x i32>*
  %3341 = load <4 x i32>, <4 x i32>* %3340, align 16
  %3342 = getelementptr inbounds i32, i32* %3064, i64 %3250
  %3343 = bitcast i32* %3342 to <4 x i32>*
  %3344 = load <4 x i32>, <4 x i32>* %3343, align 16
  %3345 = getelementptr inbounds i32, i32* %3342, i64 4
  %3346 = bitcast i32* %3345 to <4 x i32>*
  %3347 = load <4 x i32>, <4 x i32>* %3346, align 16
  %3348 = getelementptr inbounds i32, i32* %3065, i64 %3250
  %3349 = bitcast i32* %3348 to <4 x i32>*
  %3350 = load <4 x i32>, <4 x i32>* %3349, align 16
  %3351 = getelementptr inbounds i32, i32* %3348, i64 4
  %3352 = bitcast i32* %3351 to <4 x i32>*
  %3353 = load <4 x i32>, <4 x i32>* %3352, align 16
  %3354 = shl <8 x i16> %3274, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3355 = add <8 x i16> %3332, %3329
  %3356 = add <8 x i16> %3355, %3335
  %3357 = add <8 x i16> %3356, %3354
  %3358 = shl <4 x i32> %3312, <i32 1, i32 1, i32 1, i32 1>
  %3359 = add <4 x i32> %3344, %3338
  %3360 = add <4 x i32> %3359, %3350
  %3361 = add <4 x i32> %3360, %3358
  %3362 = shl <4 x i32> %3326, <i32 1, i32 1, i32 1, i32 1>
  %3363 = add <4 x i32> %3347, %3341
  %3364 = add <4 x i32> %3363, %3353
  %3365 = add <4 x i32> %3364, %3362
  %3366 = shufflevector <8 x i16> %3357, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3367 = shufflevector <8 x i16> %3357, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3368 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3366, <8 x i16> %3366) #5
  %3369 = mul <4 x i32> %3361, <i32 25, i32 25, i32 25, i32 25>
  %3370 = sub <4 x i32> %3369, %3368
  %3371 = icmp sgt <4 x i32> %3370, zeroinitializer
  %3372 = select <4 x i1> %3371, <4 x i32> %3370, <4 x i32> zeroinitializer
  %3373 = mul <4 x i32> %3372, %385
  %3374 = add <4 x i32> %3373, <i32 524288, i32 524288, i32 524288, i32 524288>
  %3375 = lshr <4 x i32> %3374, <i32 20, i32 20, i32 20, i32 20>
  %3376 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3367, <8 x i16> %3367) #5
  %3377 = mul <4 x i32> %3365, <i32 25, i32 25, i32 25, i32 25>
  %3378 = sub <4 x i32> %3377, %3376
  %3379 = icmp sgt <4 x i32> %3378, zeroinitializer
  %3380 = select <4 x i1> %3379, <4 x i32> %3378, <4 x i32> zeroinitializer
  %3381 = mul <4 x i32> %3380, %385
  %3382 = add <4 x i32> %3381, <i32 524288, i32 524288, i32 524288, i32 524288>
  %3383 = lshr <4 x i32> %3382, <i32 20, i32 20, i32 20, i32 20>
  %3384 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %3375, <4 x i32> %3383) #5
  %3385 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %3384, <8 x i16> undef) #5
  %3386 = bitcast <16 x i8> %3385 to <2 x i64>
  %3387 = extractelement <2 x i64> %3386, i32 0
  %3388 = lshr i64 %3387, 8
  %3389 = lshr i64 %3387, 16
  %3390 = lshr i64 %3387, 24
  %3391 = lshr i64 %3387, 32
  %3392 = lshr i64 %3387, 40
  %3393 = lshr i64 %3387, 48
  %3394 = lshr i64 %3387, 56
  %3395 = and i64 %3387, 255
  %3396 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3395
  %3397 = load i8, i8* %3396, align 1
  %3398 = insertelement <16 x i8> %3240, i8 %3397, i64 8
  %3399 = and i64 %3388, 255
  %3400 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3399
  %3401 = load i8, i8* %3400, align 1
  %3402 = insertelement <16 x i8> %3398, i8 %3401, i64 9
  %3403 = and i64 %3389, 255
  %3404 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3403
  %3405 = load i8, i8* %3404, align 1
  %3406 = insertelement <16 x i8> %3402, i8 %3405, i64 10
  %3407 = and i64 %3390, 255
  %3408 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3407
  %3409 = load i8, i8* %3408, align 1
  %3410 = insertelement <16 x i8> %3406, i8 %3409, i64 11
  %3411 = and i64 %3391, 255
  %3412 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3411
  %3413 = load i8, i8* %3412, align 1
  %3414 = insertelement <16 x i8> %3410, i8 %3413, i64 12
  %3415 = and i64 %3392, 255
  %3416 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3415
  %3417 = load i8, i8* %3416, align 1
  %3418 = insertelement <16 x i8> %3414, i8 %3417, i64 13
  %3419 = and i64 %3393, 255
  %3420 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3419
  %3421 = load i8, i8* %3420, align 1
  %3422 = insertelement <16 x i8> %3418, i8 %3421, i64 14
  %3423 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3394
  %3424 = load i8, i8* %3423, align 1
  %3425 = insertelement <16 x i8> %3422, i8 %3424, i64 15
  %3426 = shufflevector <16 x i8> %3425, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3427 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %3426, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %3428 = shufflevector <8 x i16> %3427, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3429 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3428, <8 x i16> %3366) #5
  %3430 = shufflevector <8 x i16> %3427, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3431 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3430, <8 x i16> %3367) #5
  %3432 = add <4 x i32> %3429, <i32 512, i32 512, i32 512, i32 512>
  %3433 = lshr <4 x i32> %3432, <i32 10, i32 10, i32 10, i32 10>
  %3434 = add <4 x i32> %3431, <i32 512, i32 512, i32 512, i32 512>
  %3435 = lshr <4 x i32> %3434, <i32 10, i32 10, i32 10, i32 10>
  %3436 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %3433, <4 x i32> %3435) #5
  %3437 = shufflevector <16 x i8> %3251, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3438 = bitcast <16 x i8> %3437 to <8 x i16>
  %3439 = mul <8 x i16> %3438, %3438
  %3440 = bitcast <8 x i16> %3439 to <16 x i8>
  %3441 = shufflevector <16 x i8> %3289, <16 x i8> %3440, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3442 = shufflevector <16 x i8> %3289, <16 x i8> %3440, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %3443 = shufflevector <16 x i8> %3289, <16 x i8> %3440, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %3444 = shufflevector <16 x i8> %3289, <16 x i8> %3440, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3445 = shufflevector <8 x i16> %3254, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3446 = bitcast <16 x i8> %3441 to <8 x i16>
  %3447 = shufflevector <8 x i16> %3446, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3448 = bitcast <8 x i16> %3445 to <4 x i32>
  %3449 = bitcast <8 x i16> %3447 to <4 x i32>
  %3450 = bitcast <16 x i8> %3442 to <8 x i16>
  %3451 = shufflevector <8 x i16> %3450, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3452 = bitcast <16 x i8> %3443 to <8 x i16>
  %3453 = shufflevector <8 x i16> %3452, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3454 = bitcast <8 x i16> %3451 to <4 x i32>
  %3455 = bitcast <8 x i16> %3453 to <4 x i32>
  %3456 = bitcast <16 x i8> %3444 to <8 x i16>
  %3457 = shufflevector <8 x i16> %3456, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3458 = bitcast <8 x i16> %3457 to <4 x i32>
  %3459 = add <4 x i32> %3454, %3448
  %3460 = add <4 x i32> %3459, %3455
  %3461 = add <4 x i32> %3460, %3449
  %3462 = add <4 x i32> %3461, %3458
  %3463 = shufflevector <8 x i16> %3254, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3464 = shufflevector <8 x i16> %3446, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3465 = bitcast <8 x i16> %3463 to <4 x i32>
  %3466 = bitcast <8 x i16> %3464 to <4 x i32>
  %3467 = shufflevector <8 x i16> %3450, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3468 = shufflevector <8 x i16> %3452, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3469 = bitcast <8 x i16> %3467 to <4 x i32>
  %3470 = bitcast <8 x i16> %3468 to <4 x i32>
  %3471 = shufflevector <8 x i16> %3456, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3472 = bitcast <8 x i16> %3471 to <4 x i32>
  %3473 = add <4 x i32> %3469, %3465
  %3474 = add <4 x i32> %3473, %3470
  %3475 = add <4 x i32> %3474, %3466
  %3476 = add <4 x i32> %3475, %3472
  %3477 = add nuw nsw i64 %3250, 8
  %3478 = getelementptr inbounds i16, i16* %3234, i64 %3477
  %3479 = bitcast i16* %3478 to <8 x i16>*
  %3480 = load <8 x i16>, <8 x i16>* %3479, align 16
  %3481 = getelementptr inbounds i16, i16* %3235, i64 %3477
  %3482 = bitcast i16* %3481 to <8 x i16>*
  %3483 = load <8 x i16>, <8 x i16>* %3482, align 16
  %3484 = getelementptr inbounds i16, i16* %3236, i64 %3477
  %3485 = bitcast i16* %3484 to <8 x i16>*
  %3486 = load <8 x i16>, <8 x i16>* %3485, align 16
  %3487 = getelementptr inbounds i32, i32* %3063, i64 %3477
  %3488 = bitcast i32* %3487 to <4 x i32>*
  %3489 = load <4 x i32>, <4 x i32>* %3488, align 16
  %3490 = getelementptr inbounds i32, i32* %3487, i64 4
  %3491 = bitcast i32* %3490 to <4 x i32>*
  %3492 = load <4 x i32>, <4 x i32>* %3491, align 16
  %3493 = getelementptr inbounds i32, i32* %3064, i64 %3477
  %3494 = bitcast i32* %3493 to <4 x i32>*
  %3495 = load <4 x i32>, <4 x i32>* %3494, align 16
  %3496 = getelementptr inbounds i32, i32* %3493, i64 4
  %3497 = bitcast i32* %3496 to <4 x i32>*
  %3498 = load <4 x i32>, <4 x i32>* %3497, align 16
  %3499 = getelementptr inbounds i32, i32* %3065, i64 %3477
  %3500 = bitcast i32* %3499 to <4 x i32>*
  %3501 = load <4 x i32>, <4 x i32>* %3500, align 16
  %3502 = getelementptr inbounds i32, i32* %3499, i64 4
  %3503 = bitcast i32* %3502 to <4 x i32>*
  %3504 = load <4 x i32>, <4 x i32>* %3503, align 16
  %3505 = shl <8 x i16> %3288, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %3506 = add <8 x i16> %3480, %3505
  %3507 = add <8 x i16> %3506, %3483
  %3508 = add <8 x i16> %3507, %3486
  %3509 = shl <4 x i32> %3462, <i32 1, i32 1, i32 1, i32 1>
  %3510 = add <4 x i32> %3489, %3509
  %3511 = add <4 x i32> %3510, %3495
  %3512 = add <4 x i32> %3511, %3501
  %3513 = shl <4 x i32> %3476, <i32 1, i32 1, i32 1, i32 1>
  %3514 = add <4 x i32> %3492, %3513
  %3515 = add <4 x i32> %3514, %3498
  %3516 = add <4 x i32> %3515, %3504
  %3517 = shufflevector <8 x i16> %3508, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3518 = shufflevector <8 x i16> %3508, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3519 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3517, <8 x i16> %3517) #5
  %3520 = mul <4 x i32> %3512, <i32 25, i32 25, i32 25, i32 25>
  %3521 = sub <4 x i32> %3520, %3519
  %3522 = icmp sgt <4 x i32> %3521, zeroinitializer
  %3523 = select <4 x i1> %3522, <4 x i32> %3521, <4 x i32> zeroinitializer
  %3524 = mul <4 x i32> %3523, %385
  %3525 = add <4 x i32> %3524, <i32 524288, i32 524288, i32 524288, i32 524288>
  %3526 = lshr <4 x i32> %3525, <i32 20, i32 20, i32 20, i32 20>
  %3527 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3518, <8 x i16> %3518) #5
  %3528 = mul <4 x i32> %3516, <i32 25, i32 25, i32 25, i32 25>
  %3529 = sub <4 x i32> %3528, %3527
  %3530 = icmp sgt <4 x i32> %3529, zeroinitializer
  %3531 = select <4 x i1> %3530, <4 x i32> %3529, <4 x i32> zeroinitializer
  %3532 = mul <4 x i32> %3531, %385
  %3533 = add <4 x i32> %3532, <i32 524288, i32 524288, i32 524288, i32 524288>
  %3534 = lshr <4 x i32> %3533, <i32 20, i32 20, i32 20, i32 20>
  %3535 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %3526, <4 x i32> %3534) #5
  %3536 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %3535, <8 x i16> undef) #5
  %3537 = bitcast <16 x i8> %3536 to <2 x i64>
  %3538 = extractelement <2 x i64> %3537, i32 0
  %3539 = lshr i64 %3538, 8
  %3540 = lshr i64 %3538, 16
  %3541 = lshr i64 %3538, 24
  %3542 = lshr i64 %3538, 32
  %3543 = lshr i64 %3538, 40
  %3544 = lshr i64 %3538, 48
  %3545 = lshr i64 %3538, 56
  %3546 = and i64 %3538, 255
  %3547 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3546
  %3548 = load i8, i8* %3547, align 1
  %3549 = insertelement <16 x i8> %3239, i8 %3548, i64 0
  %3550 = and i64 %3539, 255
  %3551 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3550
  %3552 = load i8, i8* %3551, align 1
  %3553 = insertelement <16 x i8> %3549, i8 %3552, i64 1
  %3554 = and i64 %3540, 255
  %3555 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3554
  %3556 = load i8, i8* %3555, align 1
  %3557 = insertelement <16 x i8> %3553, i8 %3556, i64 2
  %3558 = and i64 %3541, 255
  %3559 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3558
  %3560 = load i8, i8* %3559, align 1
  %3561 = insertelement <16 x i8> %3557, i8 %3560, i64 3
  %3562 = and i64 %3542, 255
  %3563 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3562
  %3564 = load i8, i8* %3563, align 1
  %3565 = insertelement <16 x i8> %3561, i8 %3564, i64 4
  %3566 = and i64 %3543, 255
  %3567 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3566
  %3568 = load i8, i8* %3567, align 1
  %3569 = insertelement <16 x i8> %3565, i8 %3568, i64 5
  %3570 = and i64 %3544, 255
  %3571 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3570
  %3572 = load i8, i8* %3571, align 1
  %3573 = insertelement <16 x i8> %3569, i8 %3572, i64 6
  %3574 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3545
  %3575 = load i8, i8* %3574, align 1
  %3576 = insertelement <16 x i8> %3573, i8 %3575, i64 7
  %3577 = shufflevector <16 x i8> %3576, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3578 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %3577, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %3579 = shufflevector <8 x i16> %3578, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3580 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3579, <8 x i16> %3517) #5
  %3581 = shufflevector <8 x i16> %3578, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3582 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3581, <8 x i16> %3518) #5
  %3583 = add <4 x i32> %3580, <i32 512, i32 512, i32 512, i32 512>
  %3584 = lshr <4 x i32> %3583, <i32 10, i32 10, i32 10, i32 10>
  %3585 = add <4 x i32> %3582, <i32 512, i32 512, i32 512, i32 512>
  %3586 = lshr <4 x i32> %3585, <i32 10, i32 10, i32 10, i32 10>
  %3587 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %3584, <4 x i32> %3586) #5
  %3588 = shufflevector <16 x i8> %3425, <16 x i8> %3576, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %3589 = shufflevector <16 x i8> %3425, <16 x i8> %3576, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3590 = shufflevector <16 x i8> %3425, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3591 = shufflevector <16 x i8> %3588, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3592 = bitcast <16 x i8> %3590 to <8 x i16>
  %3593 = bitcast <16 x i8> %3591 to <8 x i16>
  %3594 = add <8 x i16> %3593, %3592
  %3595 = shufflevector <16 x i8> %3589, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3596 = bitcast <16 x i8> %3595 to <8 x i16>
  %3597 = add <8 x i16> %3594, %3596
  %3598 = mul <8 x i16> %3597, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %3599 = bitcast <8 x i16> %3436 to <16 x i8>
  %3600 = bitcast <8 x i16> %3242 to <16 x i8>
  %3601 = shufflevector <16 x i8> %3600, <16 x i8> %3599, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3602 = bitcast <16 x i8> %3601 to <8 x i16>
  %3603 = shufflevector <16 x i8> %3600, <16 x i8> %3599, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %3604 = bitcast <16 x i8> %3603 to <8 x i16>
  %3605 = shufflevector <8 x i16> %3242, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3606 = shufflevector <8 x i16> %3602, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3607 = bitcast <8 x i16> %3605 to <4 x i32>
  %3608 = bitcast <8 x i16> %3606 to <4 x i32>
  %3609 = add <4 x i32> %3608, %3607
  %3610 = shufflevector <8 x i16> %3604, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3611 = bitcast <8 x i16> %3610 to <4 x i32>
  %3612 = add <4 x i32> %3609, %3611
  %3613 = mul <4 x i32> %3612, <i32 5, i32 5, i32 5, i32 5>
  %3614 = shufflevector <8 x i16> %3242, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3615 = shufflevector <8 x i16> %3602, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3616 = bitcast <8 x i16> %3614 to <4 x i32>
  %3617 = bitcast <8 x i16> %3615 to <4 x i32>
  %3618 = add <4 x i32> %3617, %3616
  %3619 = shufflevector <8 x i16> %3604, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3620 = bitcast <8 x i16> %3619 to <4 x i32>
  %3621 = add <4 x i32> %3618, %3620
  %3622 = mul <4 x i32> %3621, <i32 5, i32 5, i32 5, i32 5>
  %3623 = bitcast i16* %3245 to <8 x i16>*
  %3624 = load <8 x i16>, <8 x i16>* %3623, align 16
  %3625 = bitcast i32* %3244 to <4 x i32>*
  %3626 = load <4 x i32>, <4 x i32>* %3625, align 16
  %3627 = getelementptr inbounds i32, i32* %3244, i64 4
  %3628 = bitcast i32* %3627 to <4 x i32>*
  %3629 = load <4 x i32>, <4 x i32>* %3628, align 16
  %3630 = getelementptr inbounds i8, i8* %3059, i64 %3238
  %3631 = bitcast i8* %3630 to <16 x i8>*
  %3632 = load <16 x i8>, <16 x i8>* %3631, align 16
  %3633 = shufflevector <16 x i8> %3632, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3634 = add <8 x i16> %3624, %3593
  %3635 = add <8 x i16> %3634, %3598
  %3636 = shufflevector <8 x i16> %3635, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3637 = bitcast <16 x i8> %3633 to <8 x i16>
  %3638 = shufflevector <8 x i16> %3637, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3639 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3636, <8 x i16> %3638) #5
  %3640 = shufflevector <8 x i16> %3635, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3641 = shufflevector <8 x i16> %3637, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3642 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3640, <8 x i16> %3641) #5
  %3643 = add <4 x i32> %3608, <i32 256, i32 256, i32 256, i32 256>
  %3644 = add <4 x i32> %3643, %3613
  %3645 = add <4 x i32> %3644, %3626
  %3646 = sub <4 x i32> %3645, %3639
  %3647 = ashr <4 x i32> %3646, <i32 9, i32 9, i32 9, i32 9>
  %3648 = add <4 x i32> %3617, <i32 256, i32 256, i32 256, i32 256>
  %3649 = add <4 x i32> %3648, %3622
  %3650 = add <4 x i32> %3649, %3629
  %3651 = sub <4 x i32> %3650, %3642
  %3652 = ashr <4 x i32> %3651, <i32 9, i32 9, i32 9, i32 9>
  %3653 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %3647, <4 x i32> %3652) #5
  %3654 = shufflevector <8 x i16> %3653, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3655 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3654, <8 x i16> %1029) #5
  %3656 = shufflevector <8 x i16> %3653, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3657 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3656, <8 x i16> %1029) #5
  %3658 = add <4 x i32> %3655, <i32 1024, i32 1024, i32 1024, i32 1024>
  %3659 = ashr <4 x i32> %3658, <i32 11, i32 11, i32 11, i32 11>
  %3660 = add <4 x i32> %3657, <i32 1024, i32 1024, i32 1024, i32 1024>
  %3661 = ashr <4 x i32> %3660, <i32 11, i32 11, i32 11, i32 11>
  %3662 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %3659, <4 x i32> %3661) #5
  %3663 = add <8 x i16> %3662, %3637
  %3664 = shufflevector <16 x i8> %3588, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3665 = bitcast <16 x i8> %3426 to <8 x i16>
  %3666 = bitcast <16 x i8> %3664 to <8 x i16>
  %3667 = add <8 x i16> %3666, %3665
  %3668 = shufflevector <16 x i8> %3589, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3669 = bitcast <16 x i8> %3668 to <8 x i16>
  %3670 = add <8 x i16> %3667, %3669
  %3671 = mul <8 x i16> %3670, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %3672 = add <8 x i16> %3671, %3666
  %3673 = bitcast <8 x i16> %3587 to <16 x i8>
  %3674 = shufflevector <16 x i8> %3599, <16 x i8> %3673, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3675 = bitcast <16 x i8> %3674 to <8 x i16>
  %3676 = shufflevector <16 x i8> %3599, <16 x i8> %3673, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %3677 = bitcast <16 x i8> %3676 to <8 x i16>
  %3678 = shufflevector <8 x i16> %3436, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3679 = shufflevector <8 x i16> %3675, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3680 = bitcast <8 x i16> %3678 to <4 x i32>
  %3681 = bitcast <8 x i16> %3679 to <4 x i32>
  %3682 = add <4 x i32> %3681, %3680
  %3683 = shufflevector <8 x i16> %3677, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3684 = bitcast <8 x i16> %3683 to <4 x i32>
  %3685 = add <4 x i32> %3682, %3684
  %3686 = mul <4 x i32> %3685, <i32 5, i32 5, i32 5, i32 5>
  %3687 = shufflevector <8 x i16> %3436, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3688 = shufflevector <8 x i16> %3675, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3689 = bitcast <8 x i16> %3687 to <4 x i32>
  %3690 = bitcast <8 x i16> %3688 to <4 x i32>
  %3691 = add <4 x i32> %3690, %3689
  %3692 = shufflevector <8 x i16> %3677, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3693 = bitcast <8 x i16> %3692 to <4 x i32>
  %3694 = add <4 x i32> %3691, %3693
  %3695 = mul <4 x i32> %3694, <i32 5, i32 5, i32 5, i32 5>
  %3696 = getelementptr inbounds i16, i16* %3245, i64 8
  %3697 = bitcast i16* %3696 to <8 x i16>*
  %3698 = load <8 x i16>, <8 x i16>* %3697, align 16
  %3699 = getelementptr inbounds i32, i32* %3244, i64 8
  %3700 = bitcast i32* %3699 to <4 x i32>*
  %3701 = load <4 x i32>, <4 x i32>* %3700, align 16
  %3702 = getelementptr inbounds i32, i32* %3244, i64 12
  %3703 = bitcast i32* %3702 to <4 x i32>*
  %3704 = load <4 x i32>, <4 x i32>* %3703, align 16
  %3705 = shufflevector <16 x i8> %3632, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3706 = add <8 x i16> %3672, %3698
  %3707 = shufflevector <8 x i16> %3706, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3708 = bitcast <16 x i8> %3705 to <8 x i16>
  %3709 = shufflevector <8 x i16> %3708, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3710 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3707, <8 x i16> %3709) #5
  %3711 = shufflevector <8 x i16> %3706, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3712 = shufflevector <8 x i16> %3708, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3713 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3711, <8 x i16> %3712) #5
  %3714 = add <4 x i32> %3681, <i32 256, i32 256, i32 256, i32 256>
  %3715 = add <4 x i32> %3714, %3686
  %3716 = add <4 x i32> %3715, %3701
  %3717 = sub <4 x i32> %3716, %3710
  %3718 = ashr <4 x i32> %3717, <i32 9, i32 9, i32 9, i32 9>
  %3719 = add <4 x i32> %3690, <i32 256, i32 256, i32 256, i32 256>
  %3720 = add <4 x i32> %3719, %3695
  %3721 = add <4 x i32> %3720, %3704
  %3722 = sub <4 x i32> %3721, %3713
  %3723 = ashr <4 x i32> %3722, <i32 9, i32 9, i32 9, i32 9>
  %3724 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %3718, <4 x i32> %3723) #5
  %3725 = shufflevector <8 x i16> %3724, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3726 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3725, <8 x i16> %1029) #5
  %3727 = shufflevector <8 x i16> %3724, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3728 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3727, <8 x i16> %1029) #5
  %3729 = add <4 x i32> %3726, <i32 1024, i32 1024, i32 1024, i32 1024>
  %3730 = ashr <4 x i32> %3729, <i32 11, i32 11, i32 11, i32 11>
  %3731 = add <4 x i32> %3728, <i32 1024, i32 1024, i32 1024, i32 1024>
  %3732 = ashr <4 x i32> %3731, <i32 11, i32 11, i32 11, i32 11>
  %3733 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %3730, <4 x i32> %3732) #5
  %3734 = add <8 x i16> %3733, %3708
  %3735 = getelementptr inbounds i8, i8* %3058, i64 %3238
  %3736 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %3663, <8 x i16> %3734) #5
  %3737 = bitcast i8* %3735 to <16 x i8>*
  store <16 x i8> %3736, <16 x i8>* %3737, align 16
  %3738 = getelementptr inbounds i16, i16* %3245, i64 16
  %3739 = getelementptr inbounds i32, i32* %3244, i64 16
  %3740 = icmp slt i64 %3247, %20
  br i1 %3740, label %3237, label %12577

3741:                                             ; preds = %11
  %3742 = getelementptr inbounds [16 x [4 x i8]], [16 x [4 x i8]]* @_ZN7libgav114kSgrProjParamsE, i64 0, i64 %14, i64 0
  %3743 = load i8, i8* %3742, align 4
  %3744 = icmp eq i8 %3743, 0
  br i1 %3744, label %3745, label %6175

3745:                                             ; preds = %3741
  %3746 = getelementptr inbounds i8, i8* %3, i64 -2
  %3747 = sext i32 %7 to i64
  %3748 = add nsw i64 %3747, 15
  %3749 = and i64 %3748, -16
  %3750 = add nsw i64 %3747, 23
  %3751 = add nsw i64 %3749, 16
  %3752 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 1, i32 1, i64 1
  %3753 = load i32, i32* %3752, align 4
  %3754 = trunc i32 %3753 to i16
  %3755 = getelementptr inbounds [16 x [2 x i16]], [16 x [2 x i16]]* @_ZN7libgav118kSgrScaleParameterE, i64 0, i64 %14, i64 1
  %3756 = load i16, i16* %3755, align 2
  %3757 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 0
  %3758 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 0
  %3759 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 4, i64 0
  %3760 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 7, i64 0
  %3761 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %3751
  %3762 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 %3751
  %3763 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 4, i64 %3749
  %3764 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 7, i64 %3749
  %3765 = getelementptr inbounds i16, i16* %3761, i64 %3751
  %3766 = getelementptr inbounds i32, i32* %3762, i64 %3751
  %3767 = getelementptr inbounds i16, i16* %3763, i64 %3749
  %3768 = getelementptr inbounds i32, i32* %3764, i64 %3749
  %3769 = and i64 %3750, -16
  %3770 = sub i16 128, %3754
  %3771 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 5, i64 0
  %3772 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 8, i64 0
  %3773 = sub nsw i64 %4, %3769
  %3774 = sub nsw i64 %3751, %3769
  br label %3775

3775:                                             ; preds = %3877, %3745
  %3776 = phi i16* [ %3757, %3745 ], [ %3879, %3877 ]
  %3777 = phi i32* [ %3758, %3745 ], [ %3880, %3877 ]
  %3778 = phi i8* [ %3746, %3745 ], [ %3878, %3877 ]
  %3779 = phi i32 [ 2, %3745 ], [ %3881, %3877 ]
  %3780 = bitcast i8* %3778 to <2 x i64>*
  %3781 = load <2 x i64>, <2 x i64>* %3780, align 1
  %3782 = bitcast <2 x i64> %3781 to <16 x i8>
  %3783 = shufflevector <16 x i8> %3782, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3784 = bitcast <16 x i8> %3783 to <8 x i16>
  %3785 = mul <8 x i16> %3784, %3784
  br label %3786

3786:                                             ; preds = %3786, %3775
  %3787 = phi <8 x i16> [ %3785, %3775 ], [ %3804, %3786 ]
  %3788 = phi <2 x i64> [ %3781, %3775 ], [ %3796, %3786 ]
  %3789 = phi i16* [ %3776, %3775 ], [ %3874, %3786 ]
  %3790 = phi i32* [ %3777, %3775 ], [ %3875, %3786 ]
  %3791 = phi i8* [ %3778, %3775 ], [ %3794, %3786 ]
  %3792 = phi i64 [ %3769, %3775 ], [ %3793, %3786 ]
  %3793 = add nsw i64 %3792, -16
  %3794 = getelementptr inbounds i8, i8* %3791, i64 16
  %3795 = bitcast i8* %3794 to <2 x i64>*
  %3796 = load <2 x i64>, <2 x i64>* %3795, align 1
  %3797 = bitcast <2 x i64> %3788 to <16 x i8>
  %3798 = shufflevector <16 x i8> %3797, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3799 = bitcast <16 x i8> %3798 to <8 x i16>
  %3800 = mul <8 x i16> %3799, %3799
  %3801 = bitcast <2 x i64> %3796 to <16 x i8>
  %3802 = shufflevector <16 x i8> %3801, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3803 = bitcast <16 x i8> %3802 to <8 x i16>
  %3804 = mul <8 x i16> %3803, %3803
  %3805 = shufflevector <16 x i8> %3797, <16 x i8> %3801, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %3806 = shufflevector <16 x i8> %3797, <16 x i8> %3801, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3807 = shufflevector <16 x i8> %3797, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3808 = shufflevector <16 x i8> %3805, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3809 = bitcast <16 x i8> %3807 to <8 x i16>
  %3810 = bitcast <16 x i8> %3808 to <8 x i16>
  %3811 = add <8 x i16> %3810, %3809
  %3812 = shufflevector <16 x i8> %3806, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3813 = bitcast <16 x i8> %3812 to <8 x i16>
  %3814 = add <8 x i16> %3811, %3813
  %3815 = shufflevector <16 x i8> %3805, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3816 = bitcast <16 x i8> %3815 to <8 x i16>
  %3817 = add <8 x i16> %3816, %3799
  %3818 = shufflevector <16 x i8> %3806, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3819 = bitcast <16 x i8> %3818 to <8 x i16>
  %3820 = add <8 x i16> %3817, %3819
  %3821 = bitcast <8 x i16> %3800 to <16 x i8>
  %3822 = bitcast <8 x i16> %3787 to <16 x i8>
  %3823 = shufflevector <16 x i8> %3822, <16 x i8> %3821, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3824 = bitcast <16 x i8> %3823 to <8 x i16>
  %3825 = shufflevector <16 x i8> %3822, <16 x i8> %3821, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %3826 = bitcast <16 x i8> %3825 to <8 x i16>
  %3827 = shufflevector <8 x i16> %3787, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3828 = shufflevector <8 x i16> %3824, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3829 = bitcast <8 x i16> %3827 to <4 x i32>
  %3830 = bitcast <8 x i16> %3828 to <4 x i32>
  %3831 = add <4 x i32> %3830, %3829
  %3832 = shufflevector <8 x i16> %3826, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3833 = bitcast <8 x i16> %3832 to <4 x i32>
  %3834 = add <4 x i32> %3831, %3833
  %3835 = shufflevector <8 x i16> %3787, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3836 = shufflevector <8 x i16> %3824, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3837 = bitcast <8 x i16> %3835 to <4 x i32>
  %3838 = bitcast <8 x i16> %3836 to <4 x i32>
  %3839 = add <4 x i32> %3838, %3837
  %3840 = shufflevector <8 x i16> %3826, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3841 = bitcast <8 x i16> %3840 to <4 x i32>
  %3842 = add <4 x i32> %3839, %3841
  %3843 = bitcast <8 x i16> %3804 to <16 x i8>
  %3844 = shufflevector <16 x i8> %3821, <16 x i8> %3843, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3845 = bitcast <16 x i8> %3844 to <8 x i16>
  %3846 = shufflevector <16 x i8> %3821, <16 x i8> %3843, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %3847 = bitcast <16 x i8> %3846 to <8 x i16>
  %3848 = shufflevector <8 x i16> %3800, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3849 = shufflevector <8 x i16> %3845, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3850 = bitcast <8 x i16> %3848 to <4 x i32>
  %3851 = bitcast <8 x i16> %3849 to <4 x i32>
  %3852 = add <4 x i32> %3851, %3850
  %3853 = shufflevector <8 x i16> %3847, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3854 = bitcast <8 x i16> %3853 to <4 x i32>
  %3855 = add <4 x i32> %3852, %3854
  %3856 = shufflevector <8 x i16> %3800, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3857 = shufflevector <8 x i16> %3845, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3858 = bitcast <8 x i16> %3856 to <4 x i32>
  %3859 = bitcast <8 x i16> %3857 to <4 x i32>
  %3860 = add <4 x i32> %3859, %3858
  %3861 = shufflevector <8 x i16> %3847, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3862 = bitcast <8 x i16> %3861 to <4 x i32>
  %3863 = add <4 x i32> %3860, %3862
  %3864 = bitcast i16* %3789 to <8 x i16>*
  store <8 x i16> %3814, <8 x i16>* %3864, align 16
  %3865 = getelementptr inbounds i16, i16* %3789, i64 8
  %3866 = bitcast i16* %3865 to <8 x i16>*
  store <8 x i16> %3820, <8 x i16>* %3866, align 16
  %3867 = bitcast i32* %3790 to <4 x i32>*
  store <4 x i32> %3834, <4 x i32>* %3867, align 16
  %3868 = getelementptr inbounds i32, i32* %3790, i64 4
  %3869 = bitcast i32* %3868 to <4 x i32>*
  store <4 x i32> %3842, <4 x i32>* %3869, align 16
  %3870 = getelementptr inbounds i32, i32* %3790, i64 8
  %3871 = bitcast i32* %3870 to <4 x i32>*
  store <4 x i32> %3855, <4 x i32>* %3871, align 16
  %3872 = getelementptr inbounds i32, i32* %3790, i64 12
  %3873 = bitcast i32* %3872 to <4 x i32>*
  store <4 x i32> %3863, <4 x i32>* %3873, align 16
  %3874 = getelementptr inbounds i16, i16* %3789, i64 16
  %3875 = getelementptr inbounds i32, i32* %3790, i64 16
  %3876 = icmp eq i64 %3793, 0
  br i1 %3876, label %3877, label %3786

3877:                                             ; preds = %3786
  %3878 = getelementptr inbounds i8, i8* %3794, i64 %3773
  %3879 = getelementptr inbounds i16, i16* %3874, i64 %3774
  %3880 = getelementptr inbounds i32, i32* %3875, i64 %3774
  %3881 = add nsw i32 %3779, -1
  %3882 = icmp eq i32 %3881, 0
  br i1 %3882, label %3883, label %3775

3883:                                             ; preds = %3877
  %3884 = getelementptr inbounds i8, i8* %1, i64 -2
  %3885 = getelementptr inbounds i8, i8* %5, i64 -2
  %3886 = ptrtoint %"union.libgav1::RestorationBuffer"* %9 to i64
  %3887 = ptrtoint i32* %3758 to i64
  %3888 = ptrtoint i16* %3759 to i64
  %3889 = ptrtoint i32* %3760 to i64
  %3890 = ptrtoint i16* %3761 to i64
  %3891 = ptrtoint i32* %3762 to i64
  %3892 = ptrtoint i16* %3763 to i64
  %3893 = ptrtoint i32* %3764 to i64
  %3894 = ptrtoint i16* %3765 to i64
  %3895 = ptrtoint i32* %3766 to i64
  %3896 = ptrtoint i16* %3767 to i64
  %3897 = ptrtoint i32* %3768 to i64
  %3898 = zext i16 %3756 to i32
  %3899 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 5, i64 %3749
  %3900 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 8, i64 %3749
  %3901 = ptrtoint i16* %3771 to i64
  %3902 = ptrtoint i32* %3772 to i64
  %3903 = bitcast i8* %3884 to <2 x i64>*
  %3904 = load <2 x i64>, <2 x i64>* %3903, align 1
  %3905 = bitcast <2 x i64> %3904 to <16 x i8>
  %3906 = shufflevector <16 x i8> %3905, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3907 = bitcast <16 x i8> %3906 to <8 x i16>
  %3908 = mul <8 x i16> %3907, %3907
  %3909 = shufflevector <16 x i8> %3905, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %3910 = bitcast <16 x i8> %3909 to <8 x i16>
  %3911 = mul <8 x i16> %3910, %3910
  %3912 = shufflevector <16 x i8> %3905, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3913 = shufflevector <16 x i8> %3905, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %3914 = shufflevector <16 x i8> %3912, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3915 = bitcast <16 x i8> %3914 to <8 x i16>
  %3916 = add <8 x i16> %3915, %3907
  %3917 = shufflevector <16 x i8> %3913, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %3918 = bitcast <16 x i8> %3917 to <8 x i16>
  %3919 = add <8 x i16> %3916, %3918
  %3920 = bitcast i16* %3765 to <8 x i16>*
  store <8 x i16> %3919, <8 x i16>* %3920, align 16
  %3921 = bitcast <8 x i16> %3911 to <16 x i8>
  %3922 = bitcast <8 x i16> %3908 to <16 x i8>
  %3923 = shufflevector <16 x i8> %3922, <16 x i8> %3921, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %3924 = bitcast <16 x i8> %3923 to <8 x i16>
  %3925 = shufflevector <16 x i8> %3922, <16 x i8> %3921, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %3926 = bitcast <16 x i8> %3925 to <8 x i16>
  %3927 = shufflevector <8 x i16> %3908, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3928 = shufflevector <8 x i16> %3924, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3929 = bitcast <8 x i16> %3927 to <4 x i32>
  %3930 = bitcast <8 x i16> %3928 to <4 x i32>
  %3931 = add <4 x i32> %3930, %3929
  %3932 = shufflevector <8 x i16> %3926, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3933 = bitcast <8 x i16> %3932 to <4 x i32>
  %3934 = add <4 x i32> %3931, %3933
  %3935 = shufflevector <8 x i16> %3908, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3936 = shufflevector <8 x i16> %3924, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3937 = bitcast <8 x i16> %3935 to <4 x i32>
  %3938 = bitcast <8 x i16> %3936 to <4 x i32>
  %3939 = add <4 x i32> %3938, %3937
  %3940 = shufflevector <8 x i16> %3926, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3941 = bitcast <8 x i16> %3940 to <4 x i32>
  %3942 = add <4 x i32> %3939, %3941
  %3943 = bitcast i32* %3766 to <4 x i32>*
  store <4 x i32> %3934, <4 x i32>* %3943, align 16
  %3944 = getelementptr inbounds i32, i32* %3766, i64 4
  %3945 = bitcast i32* %3944 to <4 x i32>*
  store <4 x i32> %3942, <4 x i32>* %3945, align 16
  %3946 = bitcast %"union.libgav1::RestorationBuffer"* %9 to <8 x i16>*
  %3947 = load <8 x i16>, <8 x i16>* %3946, align 16
  %3948 = bitcast i16* %3761 to <8 x i16>*
  %3949 = load <8 x i16>, <8 x i16>* %3948, align 16
  %3950 = bitcast i32* %3758 to <4 x i32>*
  %3951 = load <4 x i32>, <4 x i32>* %3950, align 16
  %3952 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 4
  %3953 = bitcast i32* %3952 to <4 x i32>*
  %3954 = load <4 x i32>, <4 x i32>* %3953, align 16
  %3955 = bitcast i32* %3762 to <4 x i32>*
  %3956 = load <4 x i32>, <4 x i32>* %3955, align 16
  %3957 = getelementptr inbounds i32, i32* %3762, i64 4
  %3958 = bitcast i32* %3957 to <4 x i32>*
  %3959 = load <4 x i32>, <4 x i32>* %3958, align 16
  %3960 = add <8 x i16> %3949, %3947
  %3961 = add <8 x i16> %3960, %3919
  %3962 = add <4 x i32> %3956, %3951
  %3963 = add <4 x i32> %3962, %3934
  %3964 = add <4 x i32> %3959, %3954
  %3965 = add <4 x i32> %3964, %3942
  %3966 = shufflevector <8 x i16> %3961, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %3967 = shufflevector <8 x i16> %3961, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %3968 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3966, <8 x i16> %3966) #5
  %3969 = mul <4 x i32> %3963, <i32 9, i32 9, i32 9, i32 9>
  %3970 = sub <4 x i32> %3969, %3968
  %3971 = icmp sgt <4 x i32> %3970, zeroinitializer
  %3972 = select <4 x i1> %3971, <4 x i32> %3970, <4 x i32> zeroinitializer
  %3973 = insertelement <4 x i32> undef, i32 %3898, i32 0
  %3974 = shufflevector <4 x i32> %3973, <4 x i32> undef, <4 x i32> zeroinitializer
  %3975 = mul <4 x i32> %3972, %3974
  %3976 = add <4 x i32> %3975, <i32 524288, i32 524288, i32 524288, i32 524288>
  %3977 = lshr <4 x i32> %3976, <i32 20, i32 20, i32 20, i32 20>
  %3978 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %3967, <8 x i16> %3967) #5
  %3979 = mul <4 x i32> %3965, <i32 9, i32 9, i32 9, i32 9>
  %3980 = sub <4 x i32> %3979, %3978
  %3981 = icmp sgt <4 x i32> %3980, zeroinitializer
  %3982 = select <4 x i1> %3981, <4 x i32> %3980, <4 x i32> zeroinitializer
  %3983 = mul <4 x i32> %3982, %3974
  %3984 = add <4 x i32> %3983, <i32 524288, i32 524288, i32 524288, i32 524288>
  %3985 = lshr <4 x i32> %3984, <i32 20, i32 20, i32 20, i32 20>
  %3986 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %3977, <4 x i32> %3985) #5
  %3987 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %3986, <8 x i16> undef) #5
  %3988 = bitcast <16 x i8> %3987 to <2 x i64>
  %3989 = extractelement <2 x i64> %3988, i32 0
  %3990 = lshr i64 %3989, 8
  %3991 = lshr i64 %3989, 16
  %3992 = lshr i64 %3989, 24
  %3993 = lshr i64 %3989, 32
  %3994 = lshr i64 %3989, 40
  %3995 = lshr i64 %3989, 48
  %3996 = lshr i64 %3989, 56
  %3997 = and i64 %3989, 255
  %3998 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3997
  %3999 = load i8, i8* %3998, align 1
  %4000 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %3999, i64 0
  %4001 = and i64 %3990, 255
  %4002 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4001
  %4003 = load i8, i8* %4002, align 1
  %4004 = insertelement <16 x i8> %4000, i8 %4003, i64 1
  %4005 = and i64 %3991, 255
  %4006 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4005
  %4007 = load i8, i8* %4006, align 1
  %4008 = insertelement <16 x i8> %4004, i8 %4007, i64 2
  %4009 = and i64 %3992, 255
  %4010 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4009
  %4011 = load i8, i8* %4010, align 1
  %4012 = insertelement <16 x i8> %4008, i8 %4011, i64 3
  %4013 = and i64 %3993, 255
  %4014 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4013
  %4015 = load i8, i8* %4014, align 1
  %4016 = insertelement <16 x i8> %4012, i8 %4015, i64 4
  %4017 = and i64 %3994, 255
  %4018 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4017
  %4019 = load i8, i8* %4018, align 1
  %4020 = insertelement <16 x i8> %4016, i8 %4019, i64 5
  %4021 = and i64 %3995, 255
  %4022 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4021
  %4023 = load i8, i8* %4022, align 1
  %4024 = insertelement <16 x i8> %4020, i8 %4023, i64 6
  %4025 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %3996
  %4026 = load i8, i8* %4025, align 1
  %4027 = insertelement <16 x i8> %4024, i8 %4026, i64 7
  %4028 = shufflevector <16 x i8> %4027, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4029 = bitcast <16 x i8> %4028 to <8 x i16>
  %4030 = shufflevector <8 x i16> %4029, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4031 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4030, <8 x i16> %3966) #5
  %4032 = shufflevector <8 x i16> %4029, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4033 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4032, <8 x i16> %3967) #5
  %4034 = mul <4 x i32> %4031, <i32 455, i32 455, i32 455, i32 455>
  %4035 = mul <4 x i32> %4033, <i32 455, i32 455, i32 455, i32 455>
  %4036 = add <4 x i32> %4034, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4037 = lshr <4 x i32> %4036, <i32 12, i32 12, i32 12, i32 12>
  %4038 = add <4 x i32> %4035, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4039 = lshr <4 x i32> %4038, <i32 12, i32 12, i32 12, i32 12>
  %4040 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4037, <4 x i32> %4039) #5
  %4041 = getelementptr inbounds i8, i8* %1, i64 14
  %4042 = load <16 x i8>, <16 x i8>* bitcast ([256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE to <16 x i8>*), align 16
  %4043 = load <16 x i8>, <16 x i8>* bitcast (i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 16) to <16 x i8>*), align 16
  %4044 = load <16 x i8>, <16 x i8>* bitcast (i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 32) to <16 x i8>*), align 16
  %4045 = getelementptr inbounds i32, i32* %3766, i64 8
  br label %4046

4046:                                             ; preds = %4046, %3883
  %4047 = phi i64 [ %4056, %4046 ], [ 0, %3883 ]
  %4048 = phi <16 x i8> [ %4291, %4046 ], [ %4027, %3883 ]
  %4049 = phi <8 x i16> [ %4159, %4046 ], [ %3911, %3883 ]
  %4050 = phi <8 x i16> [ %4289, %4046 ], [ %4040, %3883 ]
  %4051 = phi <2 x i64> [ %4058, %4046 ], [ %3904, %3883 ]
  %4052 = phi i32* [ %4377, %4046 ], [ %3760, %3883 ]
  %4053 = phi i16* [ %4376, %4046 ], [ %3759, %3883 ]
  %4054 = bitcast <16 x i8> %4048 to <2 x i64>
  %4055 = getelementptr inbounds i8, i8* %4041, i64 %4047
  %4056 = add nuw nsw i64 %4047, 16
  %4057 = bitcast i8* %4055 to <2 x i64>*
  %4058 = load <2 x i64>, <2 x i64>* %4057, align 1
  %4059 = or i64 %4047, 8
  %4060 = bitcast <2 x i64> %4058 to <16 x i8>
  %4061 = shufflevector <16 x i8> %4060, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4062 = bitcast <16 x i8> %4061 to <8 x i16>
  %4063 = mul <8 x i16> %4062, %4062
  %4064 = bitcast <2 x i64> %4051 to <16 x i8>
  %4065 = shufflevector <16 x i8> %4064, <16 x i8> %4060, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %4066 = shufflevector <16 x i8> %4064, <16 x i8> %4060, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %4067 = shufflevector <16 x i8> %4064, <16 x i8> %4060, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %4068 = shufflevector <16 x i8> %4065, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4069 = shufflevector <16 x i8> %4066, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4070 = bitcast <16 x i8> %4068 to <8 x i16>
  %4071 = bitcast <16 x i8> %4069 to <8 x i16>
  %4072 = add <8 x i16> %4071, %4070
  %4073 = shufflevector <16 x i8> %4067, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4074 = bitcast <16 x i8> %4073 to <8 x i16>
  %4075 = add <8 x i16> %4072, %4074
  %4076 = shufflevector <16 x i8> %4065, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4077 = shufflevector <16 x i8> %4066, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4078 = bitcast <16 x i8> %4076 to <8 x i16>
  %4079 = bitcast <16 x i8> %4077 to <8 x i16>
  %4080 = add <8 x i16> %4079, %4078
  %4081 = shufflevector <16 x i8> %4067, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4082 = bitcast <16 x i8> %4081 to <8 x i16>
  %4083 = add <8 x i16> %4080, %4082
  %4084 = getelementptr inbounds i16, i16* %3765, i64 %4059
  %4085 = bitcast i16* %4084 to <8 x i16>*
  store <8 x i16> %4075, <8 x i16>* %4085, align 16
  %4086 = getelementptr inbounds i16, i16* %4084, i64 8
  %4087 = bitcast i16* %4086 to <8 x i16>*
  store <8 x i16> %4083, <8 x i16>* %4087, align 16
  %4088 = bitcast <8 x i16> %4063 to <16 x i8>
  %4089 = bitcast <8 x i16> %4049 to <16 x i8>
  %4090 = shufflevector <16 x i8> %4089, <16 x i8> %4088, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4091 = bitcast <16 x i8> %4090 to <8 x i16>
  %4092 = shufflevector <16 x i8> %4089, <16 x i8> %4088, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4093 = bitcast <16 x i8> %4092 to <8 x i16>
  %4094 = shufflevector <8 x i16> %4049, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4095 = shufflevector <8 x i16> %4091, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4096 = bitcast <8 x i16> %4094 to <4 x i32>
  %4097 = bitcast <8 x i16> %4095 to <4 x i32>
  %4098 = add <4 x i32> %4097, %4096
  %4099 = shufflevector <8 x i16> %4093, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4100 = bitcast <8 x i16> %4099 to <4 x i32>
  %4101 = add <4 x i32> %4098, %4100
  %4102 = shufflevector <8 x i16> %4049, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4103 = shufflevector <8 x i16> %4091, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4104 = bitcast <8 x i16> %4102 to <4 x i32>
  %4105 = bitcast <8 x i16> %4103 to <4 x i32>
  %4106 = add <4 x i32> %4105, %4104
  %4107 = shufflevector <8 x i16> %4093, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4108 = bitcast <8 x i16> %4107 to <4 x i32>
  %4109 = add <4 x i32> %4106, %4108
  %4110 = getelementptr inbounds i32, i32* %3766, i64 %4059
  %4111 = bitcast i32* %4110 to <4 x i32>*
  store <4 x i32> %4101, <4 x i32>* %4111, align 16
  %4112 = getelementptr inbounds i32, i32* %4110, i64 4
  %4113 = bitcast i32* %4112 to <4 x i32>*
  store <4 x i32> %4109, <4 x i32>* %4113, align 16
  %4114 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %4059
  %4115 = bitcast i16* %4114 to <8 x i16>*
  %4116 = load <8 x i16>, <8 x i16>* %4115, align 16
  %4117 = getelementptr inbounds i16, i16* %3761, i64 %4059
  %4118 = bitcast i16* %4117 to <8 x i16>*
  %4119 = load <8 x i16>, <8 x i16>* %4118, align 16
  %4120 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 %4059
  %4121 = bitcast i32* %4120 to <4 x i32>*
  %4122 = load <4 x i32>, <4 x i32>* %4121, align 16
  %4123 = getelementptr inbounds i32, i32* %4120, i64 4
  %4124 = bitcast i32* %4123 to <4 x i32>*
  %4125 = load <4 x i32>, <4 x i32>* %4124, align 16
  %4126 = getelementptr inbounds i32, i32* %3762, i64 %4059
  %4127 = bitcast i32* %4126 to <4 x i32>*
  %4128 = load <4 x i32>, <4 x i32>* %4127, align 16
  %4129 = getelementptr inbounds i32, i32* %4126, i64 4
  %4130 = bitcast i32* %4129 to <4 x i32>*
  %4131 = load <4 x i32>, <4 x i32>* %4130, align 16
  %4132 = add <8 x i16> %4075, %4116
  %4133 = add <8 x i16> %4132, %4119
  %4134 = add <4 x i32> %4128, %4122
  %4135 = add <4 x i32> %4134, %4101
  %4136 = add <4 x i32> %4131, %4125
  %4137 = add <4 x i32> %4136, %4109
  %4138 = shufflevector <8 x i16> %4133, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4139 = shufflevector <8 x i16> %4133, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4140 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4138, <8 x i16> %4138) #5
  %4141 = mul <4 x i32> %4135, <i32 9, i32 9, i32 9, i32 9>
  %4142 = sub <4 x i32> %4141, %4140
  %4143 = icmp sgt <4 x i32> %4142, zeroinitializer
  %4144 = select <4 x i1> %4143, <4 x i32> %4142, <4 x i32> zeroinitializer
  %4145 = mul <4 x i32> %4144, %3974
  %4146 = add <4 x i32> %4145, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4147 = lshr <4 x i32> %4146, <i32 20, i32 20, i32 20, i32 20>
  %4148 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4139, <8 x i16> %4139) #5
  %4149 = mul <4 x i32> %4137, <i32 9, i32 9, i32 9, i32 9>
  %4150 = sub <4 x i32> %4149, %4148
  %4151 = icmp sgt <4 x i32> %4150, zeroinitializer
  %4152 = select <4 x i1> %4151, <4 x i32> %4150, <4 x i32> zeroinitializer
  %4153 = mul <4 x i32> %4152, %3974
  %4154 = add <4 x i32> %4153, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4155 = lshr <4 x i32> %4154, <i32 20, i32 20, i32 20, i32 20>
  %4156 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4147, <4 x i32> %4155) #5
  %4157 = shufflevector <16 x i8> %4060, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4158 = bitcast <16 x i8> %4157 to <8 x i16>
  %4159 = mul <8 x i16> %4158, %4158
  %4160 = bitcast <8 x i16> %4159 to <16 x i8>
  %4161 = shufflevector <16 x i8> %4088, <16 x i8> %4160, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4162 = bitcast <16 x i8> %4161 to <8 x i16>
  %4163 = shufflevector <16 x i8> %4088, <16 x i8> %4160, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4164 = bitcast <16 x i8> %4163 to <8 x i16>
  %4165 = shufflevector <8 x i16> %4063, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4166 = shufflevector <8 x i16> %4162, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4167 = bitcast <8 x i16> %4165 to <4 x i32>
  %4168 = bitcast <8 x i16> %4166 to <4 x i32>
  %4169 = add <4 x i32> %4168, %4167
  %4170 = shufflevector <8 x i16> %4164, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4171 = bitcast <8 x i16> %4170 to <4 x i32>
  %4172 = add <4 x i32> %4169, %4171
  %4173 = shufflevector <8 x i16> %4063, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4174 = shufflevector <8 x i16> %4162, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4175 = bitcast <8 x i16> %4173 to <4 x i32>
  %4176 = bitcast <8 x i16> %4174 to <4 x i32>
  %4177 = add <4 x i32> %4176, %4175
  %4178 = shufflevector <8 x i16> %4164, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4179 = bitcast <8 x i16> %4178 to <4 x i32>
  %4180 = add <4 x i32> %4177, %4179
  %4181 = getelementptr inbounds i32, i32* %4045, i64 %4059
  %4182 = bitcast i32* %4181 to <4 x i32>*
  store <4 x i32> %4172, <4 x i32>* %4182, align 16
  %4183 = getelementptr inbounds i32, i32* %4181, i64 4
  %4184 = bitcast i32* %4183 to <4 x i32>*
  store <4 x i32> %4180, <4 x i32>* %4184, align 16
  %4185 = add nuw nsw i64 %4059, 8
  %4186 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %4185
  %4187 = bitcast i16* %4186 to <8 x i16>*
  %4188 = load <8 x i16>, <8 x i16>* %4187, align 16
  %4189 = getelementptr inbounds i16, i16* %3761, i64 %4185
  %4190 = bitcast i16* %4189 to <8 x i16>*
  %4191 = load <8 x i16>, <8 x i16>* %4190, align 16
  %4192 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 %4185
  %4193 = bitcast i32* %4192 to <4 x i32>*
  %4194 = load <4 x i32>, <4 x i32>* %4193, align 16
  %4195 = getelementptr inbounds i32, i32* %4192, i64 4
  %4196 = bitcast i32* %4195 to <4 x i32>*
  %4197 = load <4 x i32>, <4 x i32>* %4196, align 16
  %4198 = getelementptr inbounds i32, i32* %3762, i64 %4185
  %4199 = bitcast i32* %4198 to <4 x i32>*
  %4200 = load <4 x i32>, <4 x i32>* %4199, align 16
  %4201 = getelementptr inbounds i32, i32* %4198, i64 4
  %4202 = bitcast i32* %4201 to <4 x i32>*
  %4203 = load <4 x i32>, <4 x i32>* %4202, align 16
  %4204 = add <8 x i16> %4188, %4083
  %4205 = add <8 x i16> %4204, %4191
  %4206 = add <4 x i32> %4194, %4172
  %4207 = add <4 x i32> %4206, %4200
  %4208 = add <4 x i32> %4197, %4180
  %4209 = add <4 x i32> %4208, %4203
  %4210 = shufflevector <8 x i16> %4205, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4211 = shufflevector <8 x i16> %4205, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4212 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4210, <8 x i16> %4210) #5
  %4213 = mul <4 x i32> %4207, <i32 9, i32 9, i32 9, i32 9>
  %4214 = sub <4 x i32> %4213, %4212
  %4215 = icmp sgt <4 x i32> %4214, zeroinitializer
  %4216 = select <4 x i1> %4215, <4 x i32> %4214, <4 x i32> zeroinitializer
  %4217 = mul <4 x i32> %4216, %3974
  %4218 = add <4 x i32> %4217, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4219 = lshr <4 x i32> %4218, <i32 20, i32 20, i32 20, i32 20>
  %4220 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4211, <8 x i16> %4211) #5
  %4221 = mul <4 x i32> %4209, <i32 9, i32 9, i32 9, i32 9>
  %4222 = sub <4 x i32> %4221, %4220
  %4223 = icmp sgt <4 x i32> %4222, zeroinitializer
  %4224 = select <4 x i1> %4223, <4 x i32> %4222, <4 x i32> zeroinitializer
  %4225 = mul <4 x i32> %4224, %3974
  %4226 = add <4 x i32> %4225, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4227 = lshr <4 x i32> %4226, <i32 20, i32 20, i32 20, i32 20>
  %4228 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4219, <4 x i32> %4227) #5
  %4229 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %4156, <8 x i16> %4228) #5
  %4230 = icmp ult <16 x i8> %4229, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %4231 = select <16 x i1> %4230, <16 x i8> %4229, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %4232 = icmp sgt <16 x i8> %4231, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %4233 = select <16 x i1> %4232, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %4231
  %4234 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4042, <16 x i8> %4233) #5
  %4235 = add nsw <16 x i8> %4231, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %4236 = icmp sgt <16 x i8> %4235, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %4237 = select <16 x i1> %4236, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %4235
  %4238 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4043, <16 x i8> %4237) #5
  %4239 = or <16 x i8> %4238, %4234
  %4240 = add nsw <16 x i8> %4231, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %4241 = icmp sgt <16 x i8> %4240, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %4242 = select <16 x i1> %4241, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %4240
  %4243 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4044, <16 x i8> %4242) #5
  %4244 = or <16 x i8> %4239, %4243
  %4245 = xor <16 x i8> %4229, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %4246 = icmp ugt <16 x i8> %4244, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %4247 = select <16 x i1> %4246, <16 x i8> %4244, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %4248 = icmp sgt <16 x i8> %4245, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %4249 = icmp sgt <16 x i8> %4245, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %4250 = sext <16 x i1> %4249 to <16 x i8>
  %4251 = icmp sgt <16 x i8> %4245, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %4252 = icmp sgt <16 x i8> %4245, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %4253 = icmp eq <16 x i8> %4245, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %4254 = zext <16 x i1> %4248 to <16 x i8>
  %4255 = sub nsw <16 x i8> %4250, %4254
  %4256 = zext <16 x i1> %4251 to <16 x i8>
  %4257 = sub nsw <16 x i8> %4255, %4256
  %4258 = zext <16 x i1> %4252 to <16 x i8>
  %4259 = sub nsw <16 x i8> %4257, %4258
  %4260 = zext <16 x i1> %4253 to <16 x i8>
  %4261 = sub nsw <16 x i8> %4259, %4260
  %4262 = add <16 x i8> %4261, %4247
  %4263 = bitcast <16 x i8> %4262 to <2 x i64>
  %4264 = shufflevector <16 x i8> %4262, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4265 = bitcast <16 x i8> %4264 to <8 x i16>
  %4266 = shufflevector <8 x i16> %4265, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4267 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4266, <8 x i16> %4138) #5
  %4268 = shufflevector <8 x i16> %4265, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4269 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4268, <8 x i16> %4139) #5
  %4270 = mul <4 x i32> %4267, <i32 455, i32 455, i32 455, i32 455>
  %4271 = mul <4 x i32> %4269, <i32 455, i32 455, i32 455, i32 455>
  %4272 = add <4 x i32> %4270, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4273 = lshr <4 x i32> %4272, <i32 12, i32 12, i32 12, i32 12>
  %4274 = add <4 x i32> %4271, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4275 = lshr <4 x i32> %4274, <i32 12, i32 12, i32 12, i32 12>
  %4276 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4273, <4 x i32> %4275) #5
  %4277 = shufflevector <16 x i8> %4262, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4278 = bitcast <16 x i8> %4277 to <8 x i16>
  %4279 = shufflevector <8 x i16> %4278, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4280 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4279, <8 x i16> %4210) #5
  %4281 = shufflevector <8 x i16> %4278, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4282 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4281, <8 x i16> %4211) #5
  %4283 = mul <4 x i32> %4280, <i32 455, i32 455, i32 455, i32 455>
  %4284 = mul <4 x i32> %4282, <i32 455, i32 455, i32 455, i32 455>
  %4285 = add <4 x i32> %4283, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4286 = lshr <4 x i32> %4285, <i32 12, i32 12, i32 12, i32 12>
  %4287 = add <4 x i32> %4284, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4288 = lshr <4 x i32> %4287, <i32 12, i32 12, i32 12, i32 12>
  %4289 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4286, <4 x i32> %4288) #5
  %4290 = shufflevector <2 x i64> %4054, <2 x i64> %4263, <2 x i32> <i32 0, i32 2>
  %4291 = shufflevector <16 x i8> %4262, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %4292 = bitcast <2 x i64> %4290 to <16 x i8>
  %4293 = shufflevector <16 x i8> %4292, <16 x i8> %4291, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %4294 = shufflevector <16 x i8> %4292, <16 x i8> %4291, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4295 = shufflevector <16 x i8> %4292, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4296 = shufflevector <16 x i8> %4293, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4297 = bitcast <16 x i8> %4295 to <8 x i16>
  %4298 = bitcast <16 x i8> %4296 to <8 x i16>
  %4299 = add <8 x i16> %4298, %4297
  %4300 = shufflevector <16 x i8> %4294, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4301 = bitcast <16 x i8> %4300 to <8 x i16>
  %4302 = add <8 x i16> %4299, %4301
  %4303 = mul <8 x i16> %4302, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %4304 = add <8 x i16> %4303, %4298
  %4305 = shufflevector <16 x i8> %4292, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4306 = shufflevector <16 x i8> %4293, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4307 = bitcast <16 x i8> %4305 to <8 x i16>
  %4308 = bitcast <16 x i8> %4306 to <8 x i16>
  %4309 = add <8 x i16> %4308, %4307
  %4310 = shufflevector <16 x i8> %4294, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4311 = bitcast <16 x i8> %4310 to <8 x i16>
  %4312 = add <8 x i16> %4309, %4311
  %4313 = mul <8 x i16> %4312, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %4314 = add <8 x i16> %4313, %4308
  %4315 = bitcast i16* %4053 to <8 x i16>*
  store <8 x i16> %4304, <8 x i16>* %4315, align 16
  %4316 = getelementptr inbounds i16, i16* %4053, i64 8
  %4317 = bitcast i16* %4316 to <8 x i16>*
  store <8 x i16> %4314, <8 x i16>* %4317, align 16
  %4318 = bitcast <8 x i16> %4276 to <16 x i8>
  %4319 = bitcast <8 x i16> %4050 to <16 x i8>
  %4320 = shufflevector <16 x i8> %4319, <16 x i8> %4318, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4321 = bitcast <16 x i8> %4320 to <8 x i16>
  %4322 = shufflevector <16 x i8> %4319, <16 x i8> %4318, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4323 = bitcast <16 x i8> %4322 to <8 x i16>
  %4324 = shufflevector <8 x i16> %4050, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4325 = shufflevector <8 x i16> %4321, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4326 = bitcast <8 x i16> %4324 to <4 x i32>
  %4327 = bitcast <8 x i16> %4325 to <4 x i32>
  %4328 = add <4 x i32> %4327, %4326
  %4329 = shufflevector <8 x i16> %4323, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4330 = bitcast <8 x i16> %4329 to <4 x i32>
  %4331 = add <4 x i32> %4328, %4330
  %4332 = mul <4 x i32> %4331, <i32 3, i32 3, i32 3, i32 3>
  %4333 = add <4 x i32> %4332, %4327
  %4334 = shufflevector <8 x i16> %4050, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4335 = shufflevector <8 x i16> %4321, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4336 = bitcast <8 x i16> %4334 to <4 x i32>
  %4337 = bitcast <8 x i16> %4335 to <4 x i32>
  %4338 = add <4 x i32> %4337, %4336
  %4339 = shufflevector <8 x i16> %4323, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4340 = bitcast <8 x i16> %4339 to <4 x i32>
  %4341 = add <4 x i32> %4338, %4340
  %4342 = mul <4 x i32> %4341, <i32 3, i32 3, i32 3, i32 3>
  %4343 = add <4 x i32> %4342, %4337
  %4344 = bitcast <8 x i16> %4289 to <16 x i8>
  %4345 = shufflevector <16 x i8> %4318, <16 x i8> %4344, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4346 = bitcast <16 x i8> %4345 to <8 x i16>
  %4347 = shufflevector <16 x i8> %4318, <16 x i8> %4344, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4348 = bitcast <16 x i8> %4347 to <8 x i16>
  %4349 = shufflevector <8 x i16> %4276, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4350 = shufflevector <8 x i16> %4346, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4351 = bitcast <8 x i16> %4349 to <4 x i32>
  %4352 = bitcast <8 x i16> %4350 to <4 x i32>
  %4353 = add <4 x i32> %4352, %4351
  %4354 = shufflevector <8 x i16> %4348, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4355 = bitcast <8 x i16> %4354 to <4 x i32>
  %4356 = add <4 x i32> %4353, %4355
  %4357 = mul <4 x i32> %4356, <i32 3, i32 3, i32 3, i32 3>
  %4358 = add <4 x i32> %4357, %4352
  %4359 = shufflevector <8 x i16> %4276, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4360 = shufflevector <8 x i16> %4346, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4361 = bitcast <8 x i16> %4359 to <4 x i32>
  %4362 = bitcast <8 x i16> %4360 to <4 x i32>
  %4363 = add <4 x i32> %4362, %4361
  %4364 = shufflevector <8 x i16> %4348, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4365 = bitcast <8 x i16> %4364 to <4 x i32>
  %4366 = add <4 x i32> %4363, %4365
  %4367 = mul <4 x i32> %4366, <i32 3, i32 3, i32 3, i32 3>
  %4368 = add <4 x i32> %4367, %4362
  %4369 = bitcast i32* %4052 to <4 x i32>*
  store <4 x i32> %4333, <4 x i32>* %4369, align 16
  %4370 = getelementptr inbounds i32, i32* %4052, i64 4
  %4371 = bitcast i32* %4370 to <4 x i32>*
  store <4 x i32> %4343, <4 x i32>* %4371, align 16
  %4372 = getelementptr inbounds i32, i32* %4052, i64 8
  %4373 = bitcast i32* %4372 to <4 x i32>*
  store <4 x i32> %4358, <4 x i32>* %4373, align 16
  %4374 = getelementptr inbounds i32, i32* %4052, i64 12
  %4375 = bitcast i32* %4374 to <4 x i32>*
  store <4 x i32> %4368, <4 x i32>* %4375, align 16
  %4376 = getelementptr inbounds i16, i16* %4053, i64 16
  %4377 = getelementptr inbounds i32, i32* %4052, i64 16
  %4378 = icmp slt i64 %4056, %3747
  br i1 %4378, label %4046, label %4379

4379:                                             ; preds = %4046
  %4380 = ptrtoint i16* %3899 to i64
  %4381 = ptrtoint i32* %3900 to i64
  %4382 = icmp sgt i32 %8, 1
  %4383 = getelementptr inbounds i8, i8* %3884, i64 %2
  %4384 = select i1 %4382, i8* %4383, i8* %3885
  %4385 = bitcast i8* %4384 to <2 x i64>*
  %4386 = load <2 x i64>, <2 x i64>* %4385, align 1
  %4387 = bitcast <2 x i64> %4386 to <16 x i8>
  %4388 = shufflevector <16 x i8> %4387, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4389 = bitcast <16 x i8> %4388 to <8 x i16>
  %4390 = mul <8 x i16> %4389, %4389
  %4391 = shufflevector <16 x i8> %4387, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4392 = bitcast <16 x i8> %4391 to <8 x i16>
  %4393 = mul <8 x i16> %4392, %4392
  %4394 = shufflevector <16 x i8> %4387, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4395 = shufflevector <16 x i8> %4387, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4396 = shufflevector <16 x i8> %4394, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4397 = bitcast <16 x i8> %4396 to <8 x i16>
  %4398 = add <8 x i16> %4397, %4389
  %4399 = shufflevector <16 x i8> %4395, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4400 = bitcast <16 x i8> %4399 to <8 x i16>
  %4401 = add <8 x i16> %4398, %4400
  store <8 x i16> %4401, <8 x i16>* %3946, align 16
  %4402 = bitcast <8 x i16> %4393 to <16 x i8>
  %4403 = bitcast <8 x i16> %4390 to <16 x i8>
  %4404 = shufflevector <16 x i8> %4403, <16 x i8> %4402, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4405 = bitcast <16 x i8> %4404 to <8 x i16>
  %4406 = shufflevector <16 x i8> %4403, <16 x i8> %4402, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4407 = bitcast <16 x i8> %4406 to <8 x i16>
  %4408 = shufflevector <8 x i16> %4390, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4409 = shufflevector <8 x i16> %4405, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4410 = bitcast <8 x i16> %4408 to <4 x i32>
  %4411 = bitcast <8 x i16> %4409 to <4 x i32>
  %4412 = add <4 x i32> %4411, %4410
  %4413 = shufflevector <8 x i16> %4407, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4414 = bitcast <8 x i16> %4413 to <4 x i32>
  %4415 = add <4 x i32> %4412, %4414
  %4416 = shufflevector <8 x i16> %4390, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4417 = shufflevector <8 x i16> %4405, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4418 = bitcast <8 x i16> %4416 to <4 x i32>
  %4419 = bitcast <8 x i16> %4417 to <4 x i32>
  %4420 = add <4 x i32> %4419, %4418
  %4421 = shufflevector <8 x i16> %4407, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4422 = bitcast <8 x i16> %4421 to <4 x i32>
  %4423 = add <4 x i32> %4420, %4422
  store <4 x i32> %4415, <4 x i32>* %3950, align 16
  store <4 x i32> %4423, <4 x i32>* %3953, align 16
  %4424 = load <8 x i16>, <8 x i16>* %3948, align 16
  %4425 = load <8 x i16>, <8 x i16>* %3920, align 16
  %4426 = load <4 x i32>, <4 x i32>* %3955, align 16
  %4427 = load <4 x i32>, <4 x i32>* %3958, align 16
  %4428 = load <4 x i32>, <4 x i32>* %3943, align 16
  %4429 = load <4 x i32>, <4 x i32>* %3945, align 16
  %4430 = add <8 x i16> %4425, %4424
  %4431 = add <8 x i16> %4430, %4401
  %4432 = add <4 x i32> %4428, %4426
  %4433 = add <4 x i32> %4432, %4415
  %4434 = add <4 x i32> %4429, %4427
  %4435 = add <4 x i32> %4434, %4423
  %4436 = shufflevector <8 x i16> %4431, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4437 = shufflevector <8 x i16> %4431, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4438 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4436, <8 x i16> %4436) #5
  %4439 = mul <4 x i32> %4433, <i32 9, i32 9, i32 9, i32 9>
  %4440 = sub <4 x i32> %4439, %4438
  %4441 = icmp sgt <4 x i32> %4440, zeroinitializer
  %4442 = select <4 x i1> %4441, <4 x i32> %4440, <4 x i32> zeroinitializer
  %4443 = mul <4 x i32> %4442, %3974
  %4444 = add <4 x i32> %4443, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4445 = lshr <4 x i32> %4444, <i32 20, i32 20, i32 20, i32 20>
  %4446 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4437, <8 x i16> %4437) #5
  %4447 = mul <4 x i32> %4435, <i32 9, i32 9, i32 9, i32 9>
  %4448 = sub <4 x i32> %4447, %4446
  %4449 = icmp sgt <4 x i32> %4448, zeroinitializer
  %4450 = select <4 x i1> %4449, <4 x i32> %4448, <4 x i32> zeroinitializer
  %4451 = mul <4 x i32> %4450, %3974
  %4452 = add <4 x i32> %4451, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4453 = lshr <4 x i32> %4452, <i32 20, i32 20, i32 20, i32 20>
  %4454 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4445, <4 x i32> %4453) #5
  %4455 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %4454, <8 x i16> undef) #5
  %4456 = bitcast <16 x i8> %4455 to <2 x i64>
  %4457 = extractelement <2 x i64> %4456, i32 0
  %4458 = lshr i64 %4457, 8
  %4459 = lshr i64 %4457, 16
  %4460 = lshr i64 %4457, 24
  %4461 = lshr i64 %4457, 32
  %4462 = lshr i64 %4457, 40
  %4463 = lshr i64 %4457, 48
  %4464 = lshr i64 %4457, 56
  %4465 = and i64 %4457, 255
  %4466 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4465
  %4467 = load i8, i8* %4466, align 1
  %4468 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %4467, i64 0
  %4469 = and i64 %4458, 255
  %4470 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4469
  %4471 = load i8, i8* %4470, align 1
  %4472 = insertelement <16 x i8> %4468, i8 %4471, i64 1
  %4473 = and i64 %4459, 255
  %4474 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4473
  %4475 = load i8, i8* %4474, align 1
  %4476 = insertelement <16 x i8> %4472, i8 %4475, i64 2
  %4477 = and i64 %4460, 255
  %4478 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4477
  %4479 = load i8, i8* %4478, align 1
  %4480 = insertelement <16 x i8> %4476, i8 %4479, i64 3
  %4481 = and i64 %4461, 255
  %4482 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4481
  %4483 = load i8, i8* %4482, align 1
  %4484 = insertelement <16 x i8> %4480, i8 %4483, i64 4
  %4485 = and i64 %4462, 255
  %4486 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4485
  %4487 = load i8, i8* %4486, align 1
  %4488 = insertelement <16 x i8> %4484, i8 %4487, i64 5
  %4489 = and i64 %4463, 255
  %4490 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4489
  %4491 = load i8, i8* %4490, align 1
  %4492 = insertelement <16 x i8> %4488, i8 %4491, i64 6
  %4493 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %4464
  %4494 = load i8, i8* %4493, align 1
  %4495 = insertelement <16 x i8> %4492, i8 %4494, i64 7
  %4496 = shufflevector <16 x i8> %4495, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4497 = bitcast <16 x i8> %4496 to <8 x i16>
  %4498 = shufflevector <8 x i16> %4497, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4499 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4498, <8 x i16> %4436) #5
  %4500 = shufflevector <8 x i16> %4497, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4501 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4500, <8 x i16> %4437) #5
  %4502 = mul <4 x i32> %4499, <i32 455, i32 455, i32 455, i32 455>
  %4503 = mul <4 x i32> %4501, <i32 455, i32 455, i32 455, i32 455>
  %4504 = add <4 x i32> %4502, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4505 = lshr <4 x i32> %4504, <i32 12, i32 12, i32 12, i32 12>
  %4506 = add <4 x i32> %4503, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4507 = lshr <4 x i32> %4506, <i32 12, i32 12, i32 12, i32 12>
  %4508 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4505, <4 x i32> %4507) #5
  %4509 = getelementptr inbounds i8, i8* %4384, i64 16
  %4510 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 8
  br label %4511

4511:                                             ; preds = %4511, %4379
  %4512 = phi i64 [ %4523, %4511 ], [ 0, %4379 ]
  %4513 = phi <2 x i64> [ %4525, %4511 ], [ %4386, %4379 ]
  %4514 = phi <16 x i8> [ %4758, %4511 ], [ %4495, %4379 ]
  %4515 = phi <8 x i16> [ %4626, %4511 ], [ %4393, %4379 ]
  %4516 = phi <8 x i16> [ %4756, %4511 ], [ %4508, %4379 ]
  %4517 = phi i16* [ %4861, %4511 ], [ %3763, %4379 ]
  %4518 = phi i16* [ %4859, %4511 ], [ %3771, %4379 ]
  %4519 = phi i32* [ %4862, %4511 ], [ %3764, %4379 ]
  %4520 = phi i32* [ %4860, %4511 ], [ %3772, %4379 ]
  %4521 = bitcast <16 x i8> %4514 to <2 x i64>
  %4522 = getelementptr inbounds i8, i8* %4509, i64 %4512
  %4523 = add nuw nsw i64 %4512, 16
  %4524 = bitcast i8* %4522 to <2 x i64>*
  %4525 = load <2 x i64>, <2 x i64>* %4524, align 1
  %4526 = or i64 %4512, 8
  %4527 = bitcast <2 x i64> %4525 to <16 x i8>
  %4528 = shufflevector <16 x i8> %4527, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4529 = bitcast <16 x i8> %4528 to <8 x i16>
  %4530 = mul <8 x i16> %4529, %4529
  %4531 = bitcast <2 x i64> %4513 to <16 x i8>
  %4532 = shufflevector <16 x i8> %4531, <16 x i8> %4527, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %4533 = shufflevector <16 x i8> %4531, <16 x i8> %4527, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %4534 = shufflevector <16 x i8> %4531, <16 x i8> %4527, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %4535 = shufflevector <16 x i8> %4532, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4536 = shufflevector <16 x i8> %4533, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4537 = bitcast <16 x i8> %4535 to <8 x i16>
  %4538 = bitcast <16 x i8> %4536 to <8 x i16>
  %4539 = add <8 x i16> %4538, %4537
  %4540 = shufflevector <16 x i8> %4534, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4541 = bitcast <16 x i8> %4540 to <8 x i16>
  %4542 = add <8 x i16> %4539, %4541
  %4543 = shufflevector <16 x i8> %4532, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4544 = shufflevector <16 x i8> %4533, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4545 = bitcast <16 x i8> %4543 to <8 x i16>
  %4546 = bitcast <16 x i8> %4544 to <8 x i16>
  %4547 = add <8 x i16> %4546, %4545
  %4548 = shufflevector <16 x i8> %4534, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4549 = bitcast <16 x i8> %4548 to <8 x i16>
  %4550 = add <8 x i16> %4547, %4549
  %4551 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %4526
  %4552 = bitcast i16* %4551 to <8 x i16>*
  store <8 x i16> %4542, <8 x i16>* %4552, align 16
  %4553 = getelementptr inbounds i16, i16* %4551, i64 8
  %4554 = bitcast i16* %4553 to <8 x i16>*
  store <8 x i16> %4550, <8 x i16>* %4554, align 16
  %4555 = bitcast <8 x i16> %4530 to <16 x i8>
  %4556 = bitcast <8 x i16> %4515 to <16 x i8>
  %4557 = shufflevector <16 x i8> %4556, <16 x i8> %4555, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4558 = bitcast <16 x i8> %4557 to <8 x i16>
  %4559 = shufflevector <16 x i8> %4556, <16 x i8> %4555, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4560 = bitcast <16 x i8> %4559 to <8 x i16>
  %4561 = shufflevector <8 x i16> %4515, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4562 = shufflevector <8 x i16> %4558, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4563 = bitcast <8 x i16> %4561 to <4 x i32>
  %4564 = bitcast <8 x i16> %4562 to <4 x i32>
  %4565 = add <4 x i32> %4564, %4563
  %4566 = shufflevector <8 x i16> %4560, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4567 = bitcast <8 x i16> %4566 to <4 x i32>
  %4568 = add <4 x i32> %4565, %4567
  %4569 = shufflevector <8 x i16> %4515, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4570 = shufflevector <8 x i16> %4558, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4571 = bitcast <8 x i16> %4569 to <4 x i32>
  %4572 = bitcast <8 x i16> %4570 to <4 x i32>
  %4573 = add <4 x i32> %4572, %4571
  %4574 = shufflevector <8 x i16> %4560, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4575 = bitcast <8 x i16> %4574 to <4 x i32>
  %4576 = add <4 x i32> %4573, %4575
  %4577 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 %4526
  %4578 = bitcast i32* %4577 to <4 x i32>*
  store <4 x i32> %4568, <4 x i32>* %4578, align 16
  %4579 = getelementptr inbounds i32, i32* %4577, i64 4
  %4580 = bitcast i32* %4579 to <4 x i32>*
  store <4 x i32> %4576, <4 x i32>* %4580, align 16
  %4581 = getelementptr inbounds <8 x i16>, <8 x i16>* %3948, i64 0, i64 %4526
  %4582 = bitcast i16* %4581 to <8 x i16>*
  %4583 = load <8 x i16>, <8 x i16>* %4582, align 16
  %4584 = getelementptr inbounds <8 x i16>, <8 x i16>* %3920, i64 0, i64 %4526
  %4585 = bitcast i16* %4584 to <8 x i16>*
  %4586 = load <8 x i16>, <8 x i16>* %4585, align 16
  %4587 = getelementptr inbounds i32, i32* %3762, i64 %4526
  %4588 = bitcast i32* %4587 to <4 x i32>*
  %4589 = load <4 x i32>, <4 x i32>* %4588, align 16
  %4590 = getelementptr inbounds i32, i32* %4587, i64 4
  %4591 = bitcast i32* %4590 to <4 x i32>*
  %4592 = load <4 x i32>, <4 x i32>* %4591, align 16
  %4593 = getelementptr inbounds i32, i32* %3766, i64 %4526
  %4594 = bitcast i32* %4593 to <4 x i32>*
  %4595 = load <4 x i32>, <4 x i32>* %4594, align 16
  %4596 = getelementptr inbounds i32, i32* %4593, i64 4
  %4597 = bitcast i32* %4596 to <4 x i32>*
  %4598 = load <4 x i32>, <4 x i32>* %4597, align 16
  %4599 = add <8 x i16> %4542, %4583
  %4600 = add <8 x i16> %4599, %4586
  %4601 = add <4 x i32> %4595, %4589
  %4602 = add <4 x i32> %4601, %4568
  %4603 = add <4 x i32> %4598, %4592
  %4604 = add <4 x i32> %4603, %4576
  %4605 = shufflevector <8 x i16> %4600, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4606 = shufflevector <8 x i16> %4600, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4607 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4605, <8 x i16> %4605) #5
  %4608 = mul <4 x i32> %4602, <i32 9, i32 9, i32 9, i32 9>
  %4609 = sub <4 x i32> %4608, %4607
  %4610 = icmp sgt <4 x i32> %4609, zeroinitializer
  %4611 = select <4 x i1> %4610, <4 x i32> %4609, <4 x i32> zeroinitializer
  %4612 = mul <4 x i32> %4611, %3974
  %4613 = add <4 x i32> %4612, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4614 = lshr <4 x i32> %4613, <i32 20, i32 20, i32 20, i32 20>
  %4615 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4606, <8 x i16> %4606) #5
  %4616 = mul <4 x i32> %4604, <i32 9, i32 9, i32 9, i32 9>
  %4617 = sub <4 x i32> %4616, %4615
  %4618 = icmp sgt <4 x i32> %4617, zeroinitializer
  %4619 = select <4 x i1> %4618, <4 x i32> %4617, <4 x i32> zeroinitializer
  %4620 = mul <4 x i32> %4619, %3974
  %4621 = add <4 x i32> %4620, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4622 = lshr <4 x i32> %4621, <i32 20, i32 20, i32 20, i32 20>
  %4623 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4614, <4 x i32> %4622) #5
  %4624 = shufflevector <16 x i8> %4527, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4625 = bitcast <16 x i8> %4624 to <8 x i16>
  %4626 = mul <8 x i16> %4625, %4625
  %4627 = bitcast <8 x i16> %4626 to <16 x i8>
  %4628 = shufflevector <16 x i8> %4555, <16 x i8> %4627, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4629 = bitcast <16 x i8> %4628 to <8 x i16>
  %4630 = shufflevector <16 x i8> %4555, <16 x i8> %4627, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4631 = bitcast <16 x i8> %4630 to <8 x i16>
  %4632 = shufflevector <8 x i16> %4530, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4633 = shufflevector <8 x i16> %4629, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4634 = bitcast <8 x i16> %4632 to <4 x i32>
  %4635 = bitcast <8 x i16> %4633 to <4 x i32>
  %4636 = add <4 x i32> %4635, %4634
  %4637 = shufflevector <8 x i16> %4631, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4638 = bitcast <8 x i16> %4637 to <4 x i32>
  %4639 = add <4 x i32> %4636, %4638
  %4640 = shufflevector <8 x i16> %4530, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4641 = shufflevector <8 x i16> %4629, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4642 = bitcast <8 x i16> %4640 to <4 x i32>
  %4643 = bitcast <8 x i16> %4641 to <4 x i32>
  %4644 = add <4 x i32> %4643, %4642
  %4645 = shufflevector <8 x i16> %4631, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4646 = bitcast <8 x i16> %4645 to <4 x i32>
  %4647 = add <4 x i32> %4644, %4646
  %4648 = getelementptr inbounds i32, i32* %4510, i64 %4526
  %4649 = bitcast i32* %4648 to <4 x i32>*
  store <4 x i32> %4639, <4 x i32>* %4649, align 16
  %4650 = getelementptr inbounds i32, i32* %4648, i64 4
  %4651 = bitcast i32* %4650 to <4 x i32>*
  store <4 x i32> %4647, <4 x i32>* %4651, align 16
  %4652 = add nuw nsw i64 %4526, 8
  %4653 = getelementptr inbounds <8 x i16>, <8 x i16>* %3948, i64 0, i64 %4652
  %4654 = bitcast i16* %4653 to <8 x i16>*
  %4655 = load <8 x i16>, <8 x i16>* %4654, align 16
  %4656 = getelementptr inbounds <8 x i16>, <8 x i16>* %3920, i64 0, i64 %4652
  %4657 = bitcast i16* %4656 to <8 x i16>*
  %4658 = load <8 x i16>, <8 x i16>* %4657, align 16
  %4659 = getelementptr inbounds i32, i32* %3762, i64 %4652
  %4660 = bitcast i32* %4659 to <4 x i32>*
  %4661 = load <4 x i32>, <4 x i32>* %4660, align 16
  %4662 = getelementptr inbounds i32, i32* %4659, i64 4
  %4663 = bitcast i32* %4662 to <4 x i32>*
  %4664 = load <4 x i32>, <4 x i32>* %4663, align 16
  %4665 = getelementptr inbounds i32, i32* %3766, i64 %4652
  %4666 = bitcast i32* %4665 to <4 x i32>*
  %4667 = load <4 x i32>, <4 x i32>* %4666, align 16
  %4668 = getelementptr inbounds i32, i32* %4665, i64 4
  %4669 = bitcast i32* %4668 to <4 x i32>*
  %4670 = load <4 x i32>, <4 x i32>* %4669, align 16
  %4671 = add <8 x i16> %4655, %4550
  %4672 = add <8 x i16> %4671, %4658
  %4673 = add <4 x i32> %4661, %4639
  %4674 = add <4 x i32> %4673, %4667
  %4675 = add <4 x i32> %4664, %4647
  %4676 = add <4 x i32> %4675, %4670
  %4677 = shufflevector <8 x i16> %4672, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4678 = shufflevector <8 x i16> %4672, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4679 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4677, <8 x i16> %4677) #5
  %4680 = mul <4 x i32> %4674, <i32 9, i32 9, i32 9, i32 9>
  %4681 = sub <4 x i32> %4680, %4679
  %4682 = icmp sgt <4 x i32> %4681, zeroinitializer
  %4683 = select <4 x i1> %4682, <4 x i32> %4681, <4 x i32> zeroinitializer
  %4684 = mul <4 x i32> %4683, %3974
  %4685 = add <4 x i32> %4684, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4686 = lshr <4 x i32> %4685, <i32 20, i32 20, i32 20, i32 20>
  %4687 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4678, <8 x i16> %4678) #5
  %4688 = mul <4 x i32> %4676, <i32 9, i32 9, i32 9, i32 9>
  %4689 = sub <4 x i32> %4688, %4687
  %4690 = icmp sgt <4 x i32> %4689, zeroinitializer
  %4691 = select <4 x i1> %4690, <4 x i32> %4689, <4 x i32> zeroinitializer
  %4692 = mul <4 x i32> %4691, %3974
  %4693 = add <4 x i32> %4692, <i32 524288, i32 524288, i32 524288, i32 524288>
  %4694 = lshr <4 x i32> %4693, <i32 20, i32 20, i32 20, i32 20>
  %4695 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4686, <4 x i32> %4694) #5
  %4696 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %4623, <8 x i16> %4695) #5
  %4697 = icmp ult <16 x i8> %4696, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %4698 = select <16 x i1> %4697, <16 x i8> %4696, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %4699 = icmp sgt <16 x i8> %4698, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %4700 = select <16 x i1> %4699, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %4698
  %4701 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4042, <16 x i8> %4700) #5
  %4702 = add nsw <16 x i8> %4698, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %4703 = icmp sgt <16 x i8> %4702, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %4704 = select <16 x i1> %4703, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %4702
  %4705 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4043, <16 x i8> %4704) #5
  %4706 = or <16 x i8> %4705, %4701
  %4707 = add nsw <16 x i8> %4698, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %4708 = icmp sgt <16 x i8> %4707, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %4709 = select <16 x i1> %4708, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %4707
  %4710 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4044, <16 x i8> %4709) #5
  %4711 = or <16 x i8> %4706, %4710
  %4712 = xor <16 x i8> %4696, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %4713 = icmp ugt <16 x i8> %4711, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %4714 = select <16 x i1> %4713, <16 x i8> %4711, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %4715 = icmp sgt <16 x i8> %4712, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %4716 = icmp sgt <16 x i8> %4712, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %4717 = sext <16 x i1> %4716 to <16 x i8>
  %4718 = icmp sgt <16 x i8> %4712, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %4719 = icmp sgt <16 x i8> %4712, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %4720 = icmp eq <16 x i8> %4712, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %4721 = zext <16 x i1> %4715 to <16 x i8>
  %4722 = sub nsw <16 x i8> %4717, %4721
  %4723 = zext <16 x i1> %4718 to <16 x i8>
  %4724 = sub nsw <16 x i8> %4722, %4723
  %4725 = zext <16 x i1> %4719 to <16 x i8>
  %4726 = sub nsw <16 x i8> %4724, %4725
  %4727 = zext <16 x i1> %4720 to <16 x i8>
  %4728 = sub nsw <16 x i8> %4726, %4727
  %4729 = add <16 x i8> %4728, %4714
  %4730 = bitcast <16 x i8> %4729 to <2 x i64>
  %4731 = shufflevector <16 x i8> %4729, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4732 = bitcast <16 x i8> %4731 to <8 x i16>
  %4733 = shufflevector <8 x i16> %4732, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4734 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4733, <8 x i16> %4605) #5
  %4735 = shufflevector <8 x i16> %4732, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4736 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4735, <8 x i16> %4606) #5
  %4737 = mul <4 x i32> %4734, <i32 455, i32 455, i32 455, i32 455>
  %4738 = mul <4 x i32> %4736, <i32 455, i32 455, i32 455, i32 455>
  %4739 = add <4 x i32> %4737, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4740 = lshr <4 x i32> %4739, <i32 12, i32 12, i32 12, i32 12>
  %4741 = add <4 x i32> %4738, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4742 = lshr <4 x i32> %4741, <i32 12, i32 12, i32 12, i32 12>
  %4743 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4740, <4 x i32> %4742) #5
  %4744 = shufflevector <16 x i8> %4729, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4745 = bitcast <16 x i8> %4744 to <8 x i16>
  %4746 = shufflevector <8 x i16> %4745, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4747 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4746, <8 x i16> %4677) #5
  %4748 = shufflevector <8 x i16> %4745, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4749 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4748, <8 x i16> %4678) #5
  %4750 = mul <4 x i32> %4747, <i32 455, i32 455, i32 455, i32 455>
  %4751 = mul <4 x i32> %4749, <i32 455, i32 455, i32 455, i32 455>
  %4752 = add <4 x i32> %4750, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4753 = lshr <4 x i32> %4752, <i32 12, i32 12, i32 12, i32 12>
  %4754 = add <4 x i32> %4751, <i32 2048, i32 2048, i32 2048, i32 2048>
  %4755 = lshr <4 x i32> %4754, <i32 12, i32 12, i32 12, i32 12>
  %4756 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %4753, <4 x i32> %4755) #5
  %4757 = shufflevector <2 x i64> %4521, <2 x i64> %4730, <2 x i32> <i32 0, i32 2>
  %4758 = shufflevector <16 x i8> %4729, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %4759 = bitcast <2 x i64> %4757 to <16 x i8>
  %4760 = shufflevector <16 x i8> %4759, <16 x i8> %4758, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %4761 = shufflevector <16 x i8> %4759, <16 x i8> %4758, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4762 = shufflevector <16 x i8> %4759, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4763 = shufflevector <16 x i8> %4760, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4764 = bitcast <16 x i8> %4762 to <8 x i16>
  %4765 = bitcast <16 x i8> %4763 to <8 x i16>
  %4766 = add <8 x i16> %4765, %4764
  %4767 = shufflevector <16 x i8> %4761, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4768 = bitcast <16 x i8> %4767 to <8 x i16>
  %4769 = add <8 x i16> %4766, %4768
  %4770 = shl <8 x i16> %4769, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %4771 = bitcast i16* %4518 to <8 x i16>*
  store <8 x i16> %4770, <8 x i16>* %4771, align 16
  %4772 = mul <8 x i16> %4769, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %4773 = add <8 x i16> %4772, %4765
  %4774 = bitcast i16* %4517 to <8 x i16>*
  store <8 x i16> %4773, <8 x i16>* %4774, align 16
  %4775 = bitcast <8 x i16> %4743 to <16 x i8>
  %4776 = bitcast <8 x i16> %4516 to <16 x i8>
  %4777 = shufflevector <16 x i8> %4776, <16 x i8> %4775, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4778 = shufflevector <16 x i8> %4776, <16 x i8> %4775, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4779 = bitcast <16 x i8> %4778 to <8 x i16>
  %4780 = bitcast <16 x i8> %4777 to <8 x i16>
  %4781 = shufflevector <8 x i16> %4516, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4782 = shufflevector <8 x i16> %4780, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4783 = bitcast <8 x i16> %4781 to <4 x i32>
  %4784 = bitcast <8 x i16> %4782 to <4 x i32>
  %4785 = add <4 x i32> %4784, %4783
  %4786 = shufflevector <8 x i16> %4779, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4787 = bitcast <8 x i16> %4786 to <4 x i32>
  %4788 = add <4 x i32> %4785, %4787
  %4789 = shufflevector <8 x i16> %4516, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4790 = shufflevector <8 x i16> %4780, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4791 = bitcast <8 x i16> %4789 to <4 x i32>
  %4792 = bitcast <8 x i16> %4790 to <4 x i32>
  %4793 = add <4 x i32> %4792, %4791
  %4794 = shufflevector <8 x i16> %4779, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4795 = bitcast <8 x i16> %4794 to <4 x i32>
  %4796 = add <4 x i32> %4793, %4795
  %4797 = shl <4 x i32> %4788, <i32 2, i32 2, i32 2, i32 2>
  %4798 = shl <4 x i32> %4796, <i32 2, i32 2, i32 2, i32 2>
  %4799 = bitcast i32* %4520 to <4 x i32>*
  store <4 x i32> %4797, <4 x i32>* %4799, align 16
  %4800 = getelementptr inbounds i32, i32* %4520, i64 4
  %4801 = bitcast i32* %4800 to <4 x i32>*
  store <4 x i32> %4798, <4 x i32>* %4801, align 16
  %4802 = mul <4 x i32> %4788, <i32 3, i32 3, i32 3, i32 3>
  %4803 = add <4 x i32> %4802, %4784
  %4804 = sub <4 x i32> %4792, %4796
  %4805 = add <4 x i32> %4804, %4798
  %4806 = bitcast i32* %4519 to <4 x i32>*
  store <4 x i32> %4803, <4 x i32>* %4806, align 16
  %4807 = getelementptr inbounds i32, i32* %4519, i64 4
  %4808 = bitcast i32* %4807 to <4 x i32>*
  store <4 x i32> %4805, <4 x i32>* %4808, align 16
  %4809 = shufflevector <16 x i8> %4759, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4810 = shufflevector <16 x i8> %4760, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4811 = bitcast <16 x i8> %4809 to <8 x i16>
  %4812 = bitcast <16 x i8> %4810 to <8 x i16>
  %4813 = add <8 x i16> %4812, %4811
  %4814 = shufflevector <16 x i8> %4761, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4815 = bitcast <16 x i8> %4814 to <8 x i16>
  %4816 = add <8 x i16> %4813, %4815
  %4817 = shl <8 x i16> %4816, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %4818 = getelementptr inbounds i16, i16* %4518, i64 8
  %4819 = bitcast i16* %4818 to <8 x i16>*
  store <8 x i16> %4817, <8 x i16>* %4819, align 16
  %4820 = mul <8 x i16> %4816, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %4821 = add <8 x i16> %4820, %4812
  %4822 = getelementptr inbounds i16, i16* %4517, i64 8
  %4823 = bitcast i16* %4822 to <8 x i16>*
  store <8 x i16> %4821, <8 x i16>* %4823, align 16
  %4824 = bitcast <8 x i16> %4756 to <16 x i8>
  %4825 = shufflevector <16 x i8> %4775, <16 x i8> %4824, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4826 = shufflevector <16 x i8> %4775, <16 x i8> %4824, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4827 = bitcast <16 x i8> %4826 to <8 x i16>
  %4828 = bitcast <16 x i8> %4825 to <8 x i16>
  %4829 = shufflevector <8 x i16> %4743, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4830 = shufflevector <8 x i16> %4828, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4831 = bitcast <8 x i16> %4829 to <4 x i32>
  %4832 = bitcast <8 x i16> %4830 to <4 x i32>
  %4833 = add <4 x i32> %4832, %4831
  %4834 = shufflevector <8 x i16> %4827, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4835 = bitcast <8 x i16> %4834 to <4 x i32>
  %4836 = add <4 x i32> %4833, %4835
  %4837 = shufflevector <8 x i16> %4743, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4838 = shufflevector <8 x i16> %4828, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4839 = bitcast <8 x i16> %4837 to <4 x i32>
  %4840 = bitcast <8 x i16> %4838 to <4 x i32>
  %4841 = add <4 x i32> %4840, %4839
  %4842 = shufflevector <8 x i16> %4827, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4843 = bitcast <8 x i16> %4842 to <4 x i32>
  %4844 = add <4 x i32> %4841, %4843
  %4845 = shl <4 x i32> %4836, <i32 2, i32 2, i32 2, i32 2>
  %4846 = shl <4 x i32> %4844, <i32 2, i32 2, i32 2, i32 2>
  %4847 = getelementptr inbounds i32, i32* %4520, i64 8
  %4848 = bitcast i32* %4847 to <4 x i32>*
  store <4 x i32> %4845, <4 x i32>* %4848, align 16
  %4849 = getelementptr inbounds i32, i32* %4520, i64 12
  %4850 = bitcast i32* %4849 to <4 x i32>*
  store <4 x i32> %4846, <4 x i32>* %4850, align 16
  %4851 = mul <4 x i32> %4836, <i32 3, i32 3, i32 3, i32 3>
  %4852 = add <4 x i32> %4851, %4832
  %4853 = sub <4 x i32> %4840, %4844
  %4854 = add <4 x i32> %4853, %4846
  %4855 = getelementptr inbounds i32, i32* %4519, i64 8
  %4856 = bitcast i32* %4855 to <4 x i32>*
  store <4 x i32> %4852, <4 x i32>* %4856, align 16
  %4857 = getelementptr inbounds i32, i32* %4519, i64 12
  %4858 = bitcast i32* %4857 to <4 x i32>*
  store <4 x i32> %4854, <4 x i32>* %4858, align 16
  %4859 = getelementptr inbounds i16, i16* %4518, i64 16
  %4860 = getelementptr inbounds i32, i32* %4520, i64 16
  %4861 = getelementptr inbounds i16, i16* %4517, i64 16
  %4862 = getelementptr inbounds i32, i32* %4519, i64 16
  %4863 = icmp slt i64 %4523, %3747
  br i1 %4863, label %4511, label %4864

4864:                                             ; preds = %4511
  %4865 = getelementptr inbounds i8, i8* %3885, i64 %6
  %4866 = select i1 %4382, i8* %3885, i8* %4865
  %4867 = add nsw i32 %8, -2
  %4868 = icmp sgt i32 %4867, 0
  br i1 %4868, label %4874, label %4869

4869:                                             ; preds = %4864
  %4870 = sext i16 %3770 to i32
  %4871 = insertelement <4 x i32> undef, i32 %4870, i32 0
  %4872 = shufflevector <4 x i32> %4871, <4 x i32> undef, <4 x i32> zeroinitializer
  %4873 = bitcast <4 x i32> %4872 to <8 x i16>
  br label %4880

4874:                                             ; preds = %4864
  %4875 = shl nsw i64 %2, 1
  %4876 = sext i16 %3770 to i32
  %4877 = insertelement <4 x i32> undef, i32 %4876, i32 0
  %4878 = shufflevector <4 x i32> %4877, <4 x i32> undef, <4 x i32> zeroinitializer
  %4879 = bitcast <4 x i32> %4878 to <8 x i16>
  br label %4903

4880:                                             ; preds = %5534, %4869
  %4881 = phi i64 [ %3888, %4869 ], [ %4905, %5534 ]
  %4882 = phi i64 [ %3892, %4869 ], [ %4906, %5534 ]
  %4883 = phi i64 [ %3896, %4869 ], [ %4904, %5534 ]
  %4884 = phi i64 [ %3889, %4869 ], [ %4908, %5534 ]
  %4885 = phi i64 [ %3893, %4869 ], [ %4909, %5534 ]
  %4886 = phi i64 [ %3897, %4869 ], [ %4907, %5534 ]
  %4887 = phi i64 [ %3886, %4869 ], [ %4912, %5534 ]
  %4888 = phi i64 [ %3894, %4869 ], [ %4910, %5534 ]
  %4889 = phi i64 [ %3890, %4869 ], [ %4911, %5534 ]
  %4890 = phi i64 [ %3887, %4869 ], [ %4915, %5534 ]
  %4891 = phi i64 [ %3895, %4869 ], [ %4913, %5534 ]
  %4892 = phi i64 [ %3891, %4869 ], [ %4914, %5534 ]
  %4893 = phi <8 x i16> [ %4873, %4869 ], [ %4879, %5534 ]
  %4894 = phi i64 [ %3901, %4869 ], [ %4919, %5534 ]
  %4895 = phi i64 [ %4381, %4869 ], [ %4920, %5534 ]
  %4896 = phi i64 [ %3902, %4869 ], [ %4921, %5534 ]
  %4897 = phi i64 [ %4380, %4869 ], [ %4922, %5534 ]
  %4898 = phi i8* [ %10, %4869 ], [ %5536, %5534 ]
  %4899 = phi i8* [ %3884, %4869 ], [ %5535, %5534 ]
  %4900 = icmp slt i32 %8, 2
  %4901 = select i1 %4900, i32 %8, i32 2
  %4902 = getelementptr inbounds i8, i8* %4899, i64 2
  br label %5539

4903:                                             ; preds = %5534, %4874
  %4904 = phi i64 [ %3888, %4874 ], [ %4905, %5534 ]
  %4905 = phi i64 [ %3892, %4874 ], [ %4906, %5534 ]
  %4906 = phi i64 [ %3896, %4874 ], [ %4904, %5534 ]
  %4907 = phi i64 [ %3889, %4874 ], [ %4908, %5534 ]
  %4908 = phi i64 [ %3893, %4874 ], [ %4909, %5534 ]
  %4909 = phi i64 [ %3897, %4874 ], [ %4907, %5534 ]
  %4910 = phi i64 [ %3886, %4874 ], [ %4912, %5534 ]
  %4911 = phi i64 [ %3894, %4874 ], [ %4910, %5534 ]
  %4912 = phi i64 [ %3890, %4874 ], [ %4911, %5534 ]
  %4913 = phi i64 [ %3887, %4874 ], [ %4915, %5534 ]
  %4914 = phi i64 [ %3895, %4874 ], [ %4913, %5534 ]
  %4915 = phi i64 [ %3891, %4874 ], [ %4914, %5534 ]
  %4916 = phi i32 [ %4867, %4874 ], [ %5537, %5534 ]
  %4917 = phi i8* [ %3884, %4874 ], [ %5535, %5534 ]
  %4918 = phi i8* [ %10, %4874 ], [ %5536, %5534 ]
  %4919 = phi i64 [ %4380, %4874 ], [ %4922, %5534 ]
  %4920 = phi i64 [ %3902, %4874 ], [ %4921, %5534 ]
  %4921 = phi i64 [ %4381, %4874 ], [ %4920, %5534 ]
  %4922 = phi i64 [ %3901, %4874 ], [ %4919, %5534 ]
  %4923 = getelementptr inbounds i8, i8* %4917, i64 2
  %4924 = getelementptr inbounds i8, i8* %4917, i64 %4875
  %4925 = bitcast i8* %4924 to <2 x i64>*
  %4926 = load <2 x i64>, <2 x i64>* %4925, align 1
  %4927 = bitcast <2 x i64> %4926 to <16 x i8>
  %4928 = shufflevector <16 x i8> %4927, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4929 = bitcast <16 x i8> %4928 to <8 x i16>
  %4930 = mul <8 x i16> %4929, %4929
  %4931 = shufflevector <16 x i8> %4927, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %4932 = bitcast <16 x i8> %4931 to <8 x i16>
  %4933 = mul <8 x i16> %4932, %4932
  %4934 = shufflevector <16 x i8> %4927, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4935 = shufflevector <16 x i8> %4927, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %4936 = shufflevector <16 x i8> %4934, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4937 = bitcast <16 x i8> %4936 to <8 x i16>
  %4938 = add <8 x i16> %4937, %4929
  %4939 = shufflevector <16 x i8> %4935, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %4940 = bitcast <16 x i8> %4939 to <8 x i16>
  %4941 = add <8 x i16> %4938, %4940
  %4942 = inttoptr i64 %4912 to <8 x i16>*
  store <8 x i16> %4941, <8 x i16>* %4942, align 16
  %4943 = bitcast <8 x i16> %4933 to <16 x i8>
  %4944 = bitcast <8 x i16> %4930 to <16 x i8>
  %4945 = shufflevector <16 x i8> %4944, <16 x i8> %4943, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %4946 = bitcast <16 x i8> %4945 to <8 x i16>
  %4947 = shufflevector <16 x i8> %4944, <16 x i8> %4943, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %4948 = bitcast <16 x i8> %4947 to <8 x i16>
  %4949 = shufflevector <8 x i16> %4930, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4950 = shufflevector <8 x i16> %4946, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4951 = bitcast <8 x i16> %4949 to <4 x i32>
  %4952 = bitcast <8 x i16> %4950 to <4 x i32>
  %4953 = add <4 x i32> %4952, %4951
  %4954 = shufflevector <8 x i16> %4948, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4955 = bitcast <8 x i16> %4954 to <4 x i32>
  %4956 = add <4 x i32> %4953, %4955
  %4957 = shufflevector <8 x i16> %4930, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4958 = shufflevector <8 x i16> %4946, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4959 = bitcast <8 x i16> %4957 to <4 x i32>
  %4960 = bitcast <8 x i16> %4958 to <4 x i32>
  %4961 = add <4 x i32> %4960, %4959
  %4962 = shufflevector <8 x i16> %4948, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4963 = bitcast <8 x i16> %4962 to <4 x i32>
  %4964 = add <4 x i32> %4961, %4963
  %4965 = inttoptr i64 %4915 to i32*
  %4966 = inttoptr i64 %4915 to <4 x i32>*
  store <4 x i32> %4956, <4 x i32>* %4966, align 16
  %4967 = getelementptr inbounds i32, i32* %4965, i64 4
  %4968 = bitcast i32* %4967 to <4 x i32>*
  store <4 x i32> %4964, <4 x i32>* %4968, align 16
  %4969 = inttoptr i64 %4911 to <8 x i16>*
  %4970 = load <8 x i16>, <8 x i16>* %4969, align 16
  %4971 = inttoptr i64 %4910 to <8 x i16>*
  %4972 = load <8 x i16>, <8 x i16>* %4971, align 16
  %4973 = inttoptr i64 %4914 to i32*
  %4974 = inttoptr i64 %4914 to <4 x i32>*
  %4975 = load <4 x i32>, <4 x i32>* %4974, align 16
  %4976 = getelementptr inbounds i32, i32* %4973, i64 4
  %4977 = bitcast i32* %4976 to <4 x i32>*
  %4978 = load <4 x i32>, <4 x i32>* %4977, align 16
  %4979 = inttoptr i64 %4913 to i32*
  %4980 = inttoptr i64 %4913 to <4 x i32>*
  %4981 = load <4 x i32>, <4 x i32>* %4980, align 16
  %4982 = getelementptr inbounds i32, i32* %4979, i64 4
  %4983 = bitcast i32* %4982 to <4 x i32>*
  %4984 = load <4 x i32>, <4 x i32>* %4983, align 16
  %4985 = add <8 x i16> %4972, %4970
  %4986 = add <8 x i16> %4985, %4941
  %4987 = add <4 x i32> %4981, %4975
  %4988 = add <4 x i32> %4987, %4956
  %4989 = add <4 x i32> %4984, %4978
  %4990 = add <4 x i32> %4989, %4964
  %4991 = shufflevector <8 x i16> %4986, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %4992 = shufflevector <8 x i16> %4986, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %4993 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4991, <8 x i16> %4991) #5
  %4994 = mul <4 x i32> %4988, <i32 9, i32 9, i32 9, i32 9>
  %4995 = sub <4 x i32> %4994, %4993
  %4996 = icmp sgt <4 x i32> %4995, zeroinitializer
  %4997 = select <4 x i1> %4996, <4 x i32> %4995, <4 x i32> zeroinitializer
  %4998 = mul <4 x i32> %4997, %3974
  %4999 = add <4 x i32> %4998, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5000 = lshr <4 x i32> %4999, <i32 20, i32 20, i32 20, i32 20>
  %5001 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %4992, <8 x i16> %4992) #5
  %5002 = mul <4 x i32> %4990, <i32 9, i32 9, i32 9, i32 9>
  %5003 = sub <4 x i32> %5002, %5001
  %5004 = icmp sgt <4 x i32> %5003, zeroinitializer
  %5005 = select <4 x i1> %5004, <4 x i32> %5003, <4 x i32> zeroinitializer
  %5006 = mul <4 x i32> %5005, %3974
  %5007 = add <4 x i32> %5006, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5008 = lshr <4 x i32> %5007, <i32 20, i32 20, i32 20, i32 20>
  %5009 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5000, <4 x i32> %5008) #5
  %5010 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %5009, <8 x i16> undef) #5
  %5011 = bitcast <16 x i8> %5010 to <2 x i64>
  %5012 = extractelement <2 x i64> %5011, i32 0
  %5013 = lshr i64 %5012, 8
  %5014 = lshr i64 %5012, 16
  %5015 = lshr i64 %5012, 24
  %5016 = lshr i64 %5012, 32
  %5017 = lshr i64 %5012, 40
  %5018 = lshr i64 %5012, 48
  %5019 = lshr i64 %5012, 56
  %5020 = and i64 %5012, 255
  %5021 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5020
  %5022 = load i8, i8* %5021, align 1
  %5023 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %5022, i64 0
  %5024 = and i64 %5013, 255
  %5025 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5024
  %5026 = load i8, i8* %5025, align 1
  %5027 = insertelement <16 x i8> %5023, i8 %5026, i64 1
  %5028 = and i64 %5014, 255
  %5029 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5028
  %5030 = load i8, i8* %5029, align 1
  %5031 = insertelement <16 x i8> %5027, i8 %5030, i64 2
  %5032 = and i64 %5015, 255
  %5033 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5032
  %5034 = load i8, i8* %5033, align 1
  %5035 = insertelement <16 x i8> %5031, i8 %5034, i64 3
  %5036 = and i64 %5016, 255
  %5037 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5036
  %5038 = load i8, i8* %5037, align 1
  %5039 = insertelement <16 x i8> %5035, i8 %5038, i64 4
  %5040 = and i64 %5017, 255
  %5041 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5040
  %5042 = load i8, i8* %5041, align 1
  %5043 = insertelement <16 x i8> %5039, i8 %5042, i64 5
  %5044 = and i64 %5018, 255
  %5045 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5044
  %5046 = load i8, i8* %5045, align 1
  %5047 = insertelement <16 x i8> %5043, i8 %5046, i64 6
  %5048 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5019
  %5049 = load i8, i8* %5048, align 1
  %5050 = insertelement <16 x i8> %5047, i8 %5049, i64 7
  %5051 = shufflevector <16 x i8> %5050, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5052 = bitcast <16 x i8> %5051 to <8 x i16>
  %5053 = shufflevector <8 x i16> %5052, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5054 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5053, <8 x i16> %4991) #5
  %5055 = shufflevector <8 x i16> %5052, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5056 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5055, <8 x i16> %4992) #5
  %5057 = mul <4 x i32> %5054, <i32 455, i32 455, i32 455, i32 455>
  %5058 = mul <4 x i32> %5056, <i32 455, i32 455, i32 455, i32 455>
  %5059 = add <4 x i32> %5057, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5060 = lshr <4 x i32> %5059, <i32 12, i32 12, i32 12, i32 12>
  %5061 = add <4 x i32> %5058, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5062 = lshr <4 x i32> %5061, <i32 12, i32 12, i32 12, i32 12>
  %5063 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5060, <4 x i32> %5062) #5
  %5064 = getelementptr inbounds i8, i8* %4924, i64 16
  %5065 = inttoptr i64 %4919 to i16*
  %5066 = inttoptr i64 %4921 to i32*
  %5067 = inttoptr i64 %4922 to i16*
  %5068 = inttoptr i64 %4920 to i32*
  %5069 = getelementptr inbounds i16, i16* %5067, i64 8
  %5070 = getelementptr inbounds i32, i32* %5068, i64 8
  %5071 = inttoptr i64 %4912 to i16*
  %5072 = inttoptr i64 %4911 to i16*
  %5073 = inttoptr i64 %4910 to i16*
  %5074 = getelementptr inbounds i32, i32* %4965, i64 8
  %5075 = inttoptr i64 %4906 to i16*
  %5076 = inttoptr i64 %4909 to i32*
  %5077 = inttoptr i64 %4904 to i16*
  %5078 = inttoptr i64 %4907 to i32*
  %5079 = getelementptr inbounds i16, i16* %5077, i64 8
  %5080 = getelementptr inbounds i32, i32* %5078, i64 8
  br label %5081

5081:                                             ; preds = %5081, %4903
  %5082 = phi i64 [ 0, %4903 ], [ %5089, %5081 ]
  %5083 = phi <2 x i64> [ %4926, %4903 ], [ %5091, %5081 ]
  %5084 = phi <16 x i8> [ %5050, %4903 ], [ %5324, %5081 ]
  %5085 = phi <8 x i16> [ %4933, %4903 ], [ %5192, %5081 ]
  %5086 = phi <8 x i16> [ %5063, %4903 ], [ %5322, %5081 ]
  %5087 = bitcast <16 x i8> %5084 to <2 x i64>
  %5088 = getelementptr inbounds i8, i8* %5064, i64 %5082
  %5089 = add nuw nsw i64 %5082, 16
  %5090 = bitcast i8* %5088 to <2 x i64>*
  %5091 = load <2 x i64>, <2 x i64>* %5090, align 1
  %5092 = or i64 %5082, 8
  %5093 = bitcast <2 x i64> %5091 to <16 x i8>
  %5094 = shufflevector <16 x i8> %5093, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5095 = bitcast <16 x i8> %5094 to <8 x i16>
  %5096 = mul <8 x i16> %5095, %5095
  %5097 = bitcast <2 x i64> %5083 to <16 x i8>
  %5098 = shufflevector <16 x i8> %5097, <16 x i8> %5093, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %5099 = shufflevector <16 x i8> %5097, <16 x i8> %5093, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %5100 = shufflevector <16 x i8> %5097, <16 x i8> %5093, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %5101 = shufflevector <16 x i8> %5098, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5102 = shufflevector <16 x i8> %5099, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5103 = bitcast <16 x i8> %5101 to <8 x i16>
  %5104 = bitcast <16 x i8> %5102 to <8 x i16>
  %5105 = add <8 x i16> %5104, %5103
  %5106 = shufflevector <16 x i8> %5100, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5107 = bitcast <16 x i8> %5106 to <8 x i16>
  %5108 = add <8 x i16> %5105, %5107
  %5109 = shufflevector <16 x i8> %5098, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5110 = shufflevector <16 x i8> %5099, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5111 = bitcast <16 x i8> %5109 to <8 x i16>
  %5112 = bitcast <16 x i8> %5110 to <8 x i16>
  %5113 = add <8 x i16> %5112, %5111
  %5114 = shufflevector <16 x i8> %5100, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5115 = bitcast <16 x i8> %5114 to <8 x i16>
  %5116 = add <8 x i16> %5113, %5115
  %5117 = getelementptr inbounds i16, i16* %5071, i64 %5092
  %5118 = bitcast i16* %5117 to <8 x i16>*
  store <8 x i16> %5108, <8 x i16>* %5118, align 16
  %5119 = getelementptr inbounds i16, i16* %5117, i64 8
  %5120 = bitcast i16* %5119 to <8 x i16>*
  store <8 x i16> %5116, <8 x i16>* %5120, align 16
  %5121 = bitcast <8 x i16> %5096 to <16 x i8>
  %5122 = bitcast <8 x i16> %5085 to <16 x i8>
  %5123 = shufflevector <16 x i8> %5122, <16 x i8> %5121, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5124 = bitcast <16 x i8> %5123 to <8 x i16>
  %5125 = shufflevector <16 x i8> %5122, <16 x i8> %5121, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %5126 = bitcast <16 x i8> %5125 to <8 x i16>
  %5127 = shufflevector <8 x i16> %5085, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5128 = shufflevector <8 x i16> %5124, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5129 = bitcast <8 x i16> %5127 to <4 x i32>
  %5130 = bitcast <8 x i16> %5128 to <4 x i32>
  %5131 = add <4 x i32> %5130, %5129
  %5132 = shufflevector <8 x i16> %5126, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5133 = bitcast <8 x i16> %5132 to <4 x i32>
  %5134 = add <4 x i32> %5131, %5133
  %5135 = shufflevector <8 x i16> %5085, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5136 = shufflevector <8 x i16> %5124, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5137 = bitcast <8 x i16> %5135 to <4 x i32>
  %5138 = bitcast <8 x i16> %5136 to <4 x i32>
  %5139 = add <4 x i32> %5138, %5137
  %5140 = shufflevector <8 x i16> %5126, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5141 = bitcast <8 x i16> %5140 to <4 x i32>
  %5142 = add <4 x i32> %5139, %5141
  %5143 = getelementptr inbounds i32, i32* %4965, i64 %5092
  %5144 = bitcast i32* %5143 to <4 x i32>*
  store <4 x i32> %5134, <4 x i32>* %5144, align 16
  %5145 = getelementptr inbounds i32, i32* %5143, i64 4
  %5146 = bitcast i32* %5145 to <4 x i32>*
  store <4 x i32> %5142, <4 x i32>* %5146, align 16
  %5147 = getelementptr inbounds i16, i16* %5072, i64 %5092
  %5148 = bitcast i16* %5147 to <8 x i16>*
  %5149 = load <8 x i16>, <8 x i16>* %5148, align 16
  %5150 = getelementptr inbounds i16, i16* %5073, i64 %5092
  %5151 = bitcast i16* %5150 to <8 x i16>*
  %5152 = load <8 x i16>, <8 x i16>* %5151, align 16
  %5153 = getelementptr inbounds i32, i32* %4973, i64 %5092
  %5154 = bitcast i32* %5153 to <4 x i32>*
  %5155 = load <4 x i32>, <4 x i32>* %5154, align 16
  %5156 = getelementptr inbounds i32, i32* %5153, i64 4
  %5157 = bitcast i32* %5156 to <4 x i32>*
  %5158 = load <4 x i32>, <4 x i32>* %5157, align 16
  %5159 = getelementptr inbounds i32, i32* %4979, i64 %5092
  %5160 = bitcast i32* %5159 to <4 x i32>*
  %5161 = load <4 x i32>, <4 x i32>* %5160, align 16
  %5162 = getelementptr inbounds i32, i32* %5159, i64 4
  %5163 = bitcast i32* %5162 to <4 x i32>*
  %5164 = load <4 x i32>, <4 x i32>* %5163, align 16
  %5165 = add <8 x i16> %5108, %5149
  %5166 = add <8 x i16> %5165, %5152
  %5167 = add <4 x i32> %5161, %5155
  %5168 = add <4 x i32> %5167, %5134
  %5169 = add <4 x i32> %5164, %5158
  %5170 = add <4 x i32> %5169, %5142
  %5171 = shufflevector <8 x i16> %5166, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5172 = shufflevector <8 x i16> %5166, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5173 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5171, <8 x i16> %5171) #5
  %5174 = mul <4 x i32> %5168, <i32 9, i32 9, i32 9, i32 9>
  %5175 = sub <4 x i32> %5174, %5173
  %5176 = icmp sgt <4 x i32> %5175, zeroinitializer
  %5177 = select <4 x i1> %5176, <4 x i32> %5175, <4 x i32> zeroinitializer
  %5178 = mul <4 x i32> %5177, %3974
  %5179 = add <4 x i32> %5178, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5180 = lshr <4 x i32> %5179, <i32 20, i32 20, i32 20, i32 20>
  %5181 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5172, <8 x i16> %5172) #5
  %5182 = mul <4 x i32> %5170, <i32 9, i32 9, i32 9, i32 9>
  %5183 = sub <4 x i32> %5182, %5181
  %5184 = icmp sgt <4 x i32> %5183, zeroinitializer
  %5185 = select <4 x i1> %5184, <4 x i32> %5183, <4 x i32> zeroinitializer
  %5186 = mul <4 x i32> %5185, %3974
  %5187 = add <4 x i32> %5186, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5188 = lshr <4 x i32> %5187, <i32 20, i32 20, i32 20, i32 20>
  %5189 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5180, <4 x i32> %5188) #5
  %5190 = shufflevector <16 x i8> %5093, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5191 = bitcast <16 x i8> %5190 to <8 x i16>
  %5192 = mul <8 x i16> %5191, %5191
  %5193 = bitcast <8 x i16> %5192 to <16 x i8>
  %5194 = shufflevector <16 x i8> %5121, <16 x i8> %5193, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5195 = bitcast <16 x i8> %5194 to <8 x i16>
  %5196 = shufflevector <16 x i8> %5121, <16 x i8> %5193, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %5197 = bitcast <16 x i8> %5196 to <8 x i16>
  %5198 = shufflevector <8 x i16> %5096, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5199 = shufflevector <8 x i16> %5195, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5200 = bitcast <8 x i16> %5198 to <4 x i32>
  %5201 = bitcast <8 x i16> %5199 to <4 x i32>
  %5202 = add <4 x i32> %5201, %5200
  %5203 = shufflevector <8 x i16> %5197, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5204 = bitcast <8 x i16> %5203 to <4 x i32>
  %5205 = add <4 x i32> %5202, %5204
  %5206 = shufflevector <8 x i16> %5096, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5207 = shufflevector <8 x i16> %5195, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5208 = bitcast <8 x i16> %5206 to <4 x i32>
  %5209 = bitcast <8 x i16> %5207 to <4 x i32>
  %5210 = add <4 x i32> %5209, %5208
  %5211 = shufflevector <8 x i16> %5197, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5212 = bitcast <8 x i16> %5211 to <4 x i32>
  %5213 = add <4 x i32> %5210, %5212
  %5214 = getelementptr inbounds i32, i32* %5074, i64 %5092
  %5215 = bitcast i32* %5214 to <4 x i32>*
  store <4 x i32> %5205, <4 x i32>* %5215, align 16
  %5216 = getelementptr inbounds i32, i32* %5214, i64 4
  %5217 = bitcast i32* %5216 to <4 x i32>*
  store <4 x i32> %5213, <4 x i32>* %5217, align 16
  %5218 = add nuw nsw i64 %5092, 8
  %5219 = getelementptr inbounds i16, i16* %5072, i64 %5218
  %5220 = bitcast i16* %5219 to <8 x i16>*
  %5221 = load <8 x i16>, <8 x i16>* %5220, align 16
  %5222 = getelementptr inbounds i16, i16* %5073, i64 %5218
  %5223 = bitcast i16* %5222 to <8 x i16>*
  %5224 = load <8 x i16>, <8 x i16>* %5223, align 16
  %5225 = getelementptr inbounds i32, i32* %4973, i64 %5218
  %5226 = bitcast i32* %5225 to <4 x i32>*
  %5227 = load <4 x i32>, <4 x i32>* %5226, align 16
  %5228 = getelementptr inbounds i32, i32* %5225, i64 4
  %5229 = bitcast i32* %5228 to <4 x i32>*
  %5230 = load <4 x i32>, <4 x i32>* %5229, align 16
  %5231 = getelementptr inbounds i32, i32* %4979, i64 %5218
  %5232 = bitcast i32* %5231 to <4 x i32>*
  %5233 = load <4 x i32>, <4 x i32>* %5232, align 16
  %5234 = getelementptr inbounds i32, i32* %5231, i64 4
  %5235 = bitcast i32* %5234 to <4 x i32>*
  %5236 = load <4 x i32>, <4 x i32>* %5235, align 16
  %5237 = add <8 x i16> %5221, %5116
  %5238 = add <8 x i16> %5237, %5224
  %5239 = add <4 x i32> %5227, %5205
  %5240 = add <4 x i32> %5239, %5233
  %5241 = add <4 x i32> %5230, %5213
  %5242 = add <4 x i32> %5241, %5236
  %5243 = shufflevector <8 x i16> %5238, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5244 = shufflevector <8 x i16> %5238, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5245 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5243, <8 x i16> %5243) #5
  %5246 = mul <4 x i32> %5240, <i32 9, i32 9, i32 9, i32 9>
  %5247 = sub <4 x i32> %5246, %5245
  %5248 = icmp sgt <4 x i32> %5247, zeroinitializer
  %5249 = select <4 x i1> %5248, <4 x i32> %5247, <4 x i32> zeroinitializer
  %5250 = mul <4 x i32> %5249, %3974
  %5251 = add <4 x i32> %5250, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5252 = lshr <4 x i32> %5251, <i32 20, i32 20, i32 20, i32 20>
  %5253 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5244, <8 x i16> %5244) #5
  %5254 = mul <4 x i32> %5242, <i32 9, i32 9, i32 9, i32 9>
  %5255 = sub <4 x i32> %5254, %5253
  %5256 = icmp sgt <4 x i32> %5255, zeroinitializer
  %5257 = select <4 x i1> %5256, <4 x i32> %5255, <4 x i32> zeroinitializer
  %5258 = mul <4 x i32> %5257, %3974
  %5259 = add <4 x i32> %5258, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5260 = lshr <4 x i32> %5259, <i32 20, i32 20, i32 20, i32 20>
  %5261 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5252, <4 x i32> %5260) #5
  %5262 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %5189, <8 x i16> %5261) #5
  %5263 = icmp ult <16 x i8> %5262, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %5264 = select <16 x i1> %5263, <16 x i8> %5262, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %5265 = icmp sgt <16 x i8> %5264, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %5266 = select <16 x i1> %5265, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %5264
  %5267 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4042, <16 x i8> %5266) #5
  %5268 = add nsw <16 x i8> %5264, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %5269 = icmp sgt <16 x i8> %5268, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %5270 = select <16 x i1> %5269, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %5268
  %5271 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4043, <16 x i8> %5270) #5
  %5272 = or <16 x i8> %5271, %5267
  %5273 = add nsw <16 x i8> %5264, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %5274 = icmp sgt <16 x i8> %5273, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %5275 = select <16 x i1> %5274, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %5273
  %5276 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4044, <16 x i8> %5275) #5
  %5277 = or <16 x i8> %5272, %5276
  %5278 = xor <16 x i8> %5262, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %5279 = icmp ugt <16 x i8> %5277, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %5280 = select <16 x i1> %5279, <16 x i8> %5277, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %5281 = icmp sgt <16 x i8> %5278, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %5282 = icmp sgt <16 x i8> %5278, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %5283 = sext <16 x i1> %5282 to <16 x i8>
  %5284 = icmp sgt <16 x i8> %5278, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %5285 = icmp sgt <16 x i8> %5278, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %5286 = icmp eq <16 x i8> %5278, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %5287 = zext <16 x i1> %5281 to <16 x i8>
  %5288 = sub nsw <16 x i8> %5283, %5287
  %5289 = zext <16 x i1> %5284 to <16 x i8>
  %5290 = sub nsw <16 x i8> %5288, %5289
  %5291 = zext <16 x i1> %5285 to <16 x i8>
  %5292 = sub nsw <16 x i8> %5290, %5291
  %5293 = zext <16 x i1> %5286 to <16 x i8>
  %5294 = sub nsw <16 x i8> %5292, %5293
  %5295 = add <16 x i8> %5294, %5280
  %5296 = bitcast <16 x i8> %5295 to <2 x i64>
  %5297 = shufflevector <16 x i8> %5295, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5298 = bitcast <16 x i8> %5297 to <8 x i16>
  %5299 = shufflevector <8 x i16> %5298, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5300 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5299, <8 x i16> %5171) #5
  %5301 = shufflevector <8 x i16> %5298, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5302 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5301, <8 x i16> %5172) #5
  %5303 = mul <4 x i32> %5300, <i32 455, i32 455, i32 455, i32 455>
  %5304 = mul <4 x i32> %5302, <i32 455, i32 455, i32 455, i32 455>
  %5305 = add <4 x i32> %5303, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5306 = lshr <4 x i32> %5305, <i32 12, i32 12, i32 12, i32 12>
  %5307 = add <4 x i32> %5304, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5308 = lshr <4 x i32> %5307, <i32 12, i32 12, i32 12, i32 12>
  %5309 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5306, <4 x i32> %5308) #5
  %5310 = shufflevector <16 x i8> %5295, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5311 = bitcast <16 x i8> %5310 to <8 x i16>
  %5312 = shufflevector <8 x i16> %5311, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5313 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5312, <8 x i16> %5243) #5
  %5314 = shufflevector <8 x i16> %5311, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5315 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5314, <8 x i16> %5244) #5
  %5316 = mul <4 x i32> %5313, <i32 455, i32 455, i32 455, i32 455>
  %5317 = mul <4 x i32> %5315, <i32 455, i32 455, i32 455, i32 455>
  %5318 = add <4 x i32> %5316, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5319 = lshr <4 x i32> %5318, <i32 12, i32 12, i32 12, i32 12>
  %5320 = add <4 x i32> %5317, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5321 = lshr <4 x i32> %5320, <i32 12, i32 12, i32 12, i32 12>
  %5322 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5319, <4 x i32> %5321) #5
  %5323 = shufflevector <2 x i64> %5087, <2 x i64> %5296, <2 x i32> <i32 0, i32 2>
  %5324 = shufflevector <16 x i8> %5295, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %5325 = bitcast <2 x i64> %5323 to <16 x i8>
  %5326 = shufflevector <16 x i8> %5325, <16 x i8> %5324, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %5327 = shufflevector <16 x i8> %5325, <16 x i8> %5324, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5328 = shufflevector <16 x i8> %5325, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5329 = shufflevector <16 x i8> %5326, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5330 = bitcast <16 x i8> %5328 to <8 x i16>
  %5331 = bitcast <16 x i8> %5329 to <8 x i16>
  %5332 = add <8 x i16> %5331, %5330
  %5333 = shufflevector <16 x i8> %5327, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5334 = bitcast <16 x i8> %5333 to <8 x i16>
  %5335 = add <8 x i16> %5332, %5334
  %5336 = shl <8 x i16> %5335, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %5337 = getelementptr inbounds i16, i16* %5065, i64 %5082
  %5338 = bitcast i16* %5337 to <8 x i16>*
  store <8 x i16> %5336, <8 x i16>* %5338, align 16
  %5339 = mul <8 x i16> %5335, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %5340 = add <8 x i16> %5339, %5331
  %5341 = getelementptr inbounds i16, i16* %5075, i64 %5082
  %5342 = bitcast i16* %5341 to <8 x i16>*
  store <8 x i16> %5340, <8 x i16>* %5342, align 16
  %5343 = bitcast <8 x i16> %5309 to <16 x i8>
  %5344 = bitcast <8 x i16> %5086 to <16 x i8>
  %5345 = shufflevector <16 x i8> %5344, <16 x i8> %5343, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5346 = shufflevector <16 x i8> %5344, <16 x i8> %5343, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %5347 = bitcast <16 x i8> %5346 to <8 x i16>
  %5348 = bitcast <16 x i8> %5345 to <8 x i16>
  %5349 = shufflevector <8 x i16> %5086, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5350 = shufflevector <8 x i16> %5348, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5351 = bitcast <8 x i16> %5349 to <4 x i32>
  %5352 = bitcast <8 x i16> %5350 to <4 x i32>
  %5353 = add <4 x i32> %5352, %5351
  %5354 = shufflevector <8 x i16> %5347, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5355 = bitcast <8 x i16> %5354 to <4 x i32>
  %5356 = add <4 x i32> %5353, %5355
  %5357 = shufflevector <8 x i16> %5086, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5358 = shufflevector <8 x i16> %5348, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5359 = bitcast <8 x i16> %5357 to <4 x i32>
  %5360 = bitcast <8 x i16> %5358 to <4 x i32>
  %5361 = add <4 x i32> %5360, %5359
  %5362 = shufflevector <8 x i16> %5347, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5363 = bitcast <8 x i16> %5362 to <4 x i32>
  %5364 = add <4 x i32> %5361, %5363
  %5365 = shl <4 x i32> %5356, <i32 2, i32 2, i32 2, i32 2>
  %5366 = shl <4 x i32> %5364, <i32 2, i32 2, i32 2, i32 2>
  %5367 = getelementptr inbounds i32, i32* %5066, i64 %5082
  %5368 = bitcast i32* %5367 to <4 x i32>*
  store <4 x i32> %5365, <4 x i32>* %5368, align 16
  %5369 = getelementptr inbounds i32, i32* %5367, i64 4
  %5370 = bitcast i32* %5369 to <4 x i32>*
  store <4 x i32> %5366, <4 x i32>* %5370, align 16
  %5371 = mul <4 x i32> %5356, <i32 3, i32 3, i32 3, i32 3>
  %5372 = add <4 x i32> %5371, %5352
  %5373 = sub <4 x i32> %5360, %5364
  %5374 = add <4 x i32> %5373, %5366
  %5375 = getelementptr inbounds i32, i32* %5076, i64 %5082
  %5376 = bitcast i32* %5375 to <4 x i32>*
  store <4 x i32> %5372, <4 x i32>* %5376, align 16
  %5377 = getelementptr inbounds i32, i32* %5375, i64 4
  %5378 = bitcast i32* %5377 to <4 x i32>*
  store <4 x i32> %5374, <4 x i32>* %5378, align 16
  %5379 = getelementptr inbounds i8, i8* %4923, i64 %5082
  %5380 = bitcast i8* %5379 to <16 x i8>*
  %5381 = load <16 x i8>, <16 x i8>* %5380, align 16
  %5382 = shufflevector <16 x i8> %5381, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5383 = getelementptr inbounds i16, i16* %5077, i64 %5082
  %5384 = bitcast i16* %5383 to <8 x i16>*
  %5385 = load <8 x i16>, <8 x i16>* %5384, align 16
  %5386 = getelementptr inbounds i16, i16* %5067, i64 %5082
  %5387 = bitcast i16* %5386 to <8 x i16>*
  %5388 = load <8 x i16>, <8 x i16>* %5387, align 16
  %5389 = getelementptr inbounds i32, i32* %5078, i64 %5082
  %5390 = bitcast i32* %5389 to <4 x i32>*
  %5391 = load <4 x i32>, <4 x i32>* %5390, align 16
  %5392 = getelementptr inbounds i32, i32* %5389, i64 4
  %5393 = bitcast i32* %5392 to <4 x i32>*
  %5394 = load <4 x i32>, <4 x i32>* %5393, align 16
  %5395 = getelementptr inbounds i32, i32* %5068, i64 %5082
  %5396 = bitcast i32* %5395 to <4 x i32>*
  %5397 = load <4 x i32>, <4 x i32>* %5396, align 16
  %5398 = getelementptr inbounds i32, i32* %5395, i64 4
  %5399 = bitcast i32* %5398 to <4 x i32>*
  %5400 = load <4 x i32>, <4 x i32>* %5399, align 16
  %5401 = add <8 x i16> %5340, %5385
  %5402 = add <8 x i16> %5401, %5388
  %5403 = shufflevector <8 x i16> %5402, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5404 = bitcast <16 x i8> %5382 to <8 x i16>
  %5405 = shufflevector <8 x i16> %5404, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5406 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5403, <8 x i16> %5405) #5
  %5407 = shufflevector <8 x i16> %5402, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5408 = shufflevector <8 x i16> %5404, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5409 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5407, <8 x i16> %5408) #5
  %5410 = add <4 x i32> %5372, <i32 256, i32 256, i32 256, i32 256>
  %5411 = add <4 x i32> %5410, %5391
  %5412 = add <4 x i32> %5411, %5397
  %5413 = sub <4 x i32> %5412, %5406
  %5414 = ashr <4 x i32> %5413, <i32 9, i32 9, i32 9, i32 9>
  %5415 = add <4 x i32> %5374, <i32 256, i32 256, i32 256, i32 256>
  %5416 = add <4 x i32> %5415, %5394
  %5417 = add <4 x i32> %5416, %5400
  %5418 = sub <4 x i32> %5417, %5409
  %5419 = ashr <4 x i32> %5418, <i32 9, i32 9, i32 9, i32 9>
  %5420 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %5414, <4 x i32> %5419) #5
  %5421 = shufflevector <16 x i8> %5325, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5422 = shufflevector <16 x i8> %5326, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5423 = bitcast <16 x i8> %5421 to <8 x i16>
  %5424 = bitcast <16 x i8> %5422 to <8 x i16>
  %5425 = add <8 x i16> %5424, %5423
  %5426 = shufflevector <16 x i8> %5327, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5427 = bitcast <16 x i8> %5426 to <8 x i16>
  %5428 = add <8 x i16> %5425, %5427
  %5429 = shl <8 x i16> %5428, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %5430 = getelementptr inbounds i16, i16* %5065, i64 %5092
  %5431 = bitcast i16* %5430 to <8 x i16>*
  store <8 x i16> %5429, <8 x i16>* %5431, align 16
  %5432 = mul <8 x i16> %5428, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %5433 = add <8 x i16> %5432, %5424
  %5434 = getelementptr inbounds i16, i16* %5075, i64 %5092
  %5435 = bitcast i16* %5434 to <8 x i16>*
  store <8 x i16> %5433, <8 x i16>* %5435, align 16
  %5436 = bitcast <8 x i16> %5322 to <16 x i8>
  %5437 = shufflevector <16 x i8> %5343, <16 x i8> %5436, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5438 = shufflevector <16 x i8> %5343, <16 x i8> %5436, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %5439 = bitcast <16 x i8> %5438 to <8 x i16>
  %5440 = bitcast <16 x i8> %5437 to <8 x i16>
  %5441 = shufflevector <8 x i16> %5309, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5442 = shufflevector <8 x i16> %5440, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5443 = bitcast <8 x i16> %5441 to <4 x i32>
  %5444 = bitcast <8 x i16> %5442 to <4 x i32>
  %5445 = add <4 x i32> %5444, %5443
  %5446 = shufflevector <8 x i16> %5439, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5447 = bitcast <8 x i16> %5446 to <4 x i32>
  %5448 = add <4 x i32> %5445, %5447
  %5449 = shufflevector <8 x i16> %5309, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5450 = shufflevector <8 x i16> %5440, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5451 = bitcast <8 x i16> %5449 to <4 x i32>
  %5452 = bitcast <8 x i16> %5450 to <4 x i32>
  %5453 = add <4 x i32> %5452, %5451
  %5454 = shufflevector <8 x i16> %5439, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5455 = bitcast <8 x i16> %5454 to <4 x i32>
  %5456 = add <4 x i32> %5453, %5455
  %5457 = shl <4 x i32> %5448, <i32 2, i32 2, i32 2, i32 2>
  %5458 = shl <4 x i32> %5456, <i32 2, i32 2, i32 2, i32 2>
  %5459 = getelementptr inbounds i32, i32* %5066, i64 %5092
  %5460 = bitcast i32* %5459 to <4 x i32>*
  store <4 x i32> %5457, <4 x i32>* %5460, align 16
  %5461 = getelementptr inbounds i32, i32* %5459, i64 4
  %5462 = bitcast i32* %5461 to <4 x i32>*
  store <4 x i32> %5458, <4 x i32>* %5462, align 16
  %5463 = mul <4 x i32> %5448, <i32 3, i32 3, i32 3, i32 3>
  %5464 = add <4 x i32> %5463, %5444
  %5465 = sub <4 x i32> %5452, %5456
  %5466 = add <4 x i32> %5465, %5458
  %5467 = getelementptr inbounds i32, i32* %5076, i64 %5092
  %5468 = bitcast i32* %5467 to <4 x i32>*
  store <4 x i32> %5464, <4 x i32>* %5468, align 16
  %5469 = getelementptr inbounds i32, i32* %5467, i64 4
  %5470 = bitcast i32* %5469 to <4 x i32>*
  store <4 x i32> %5466, <4 x i32>* %5470, align 16
  %5471 = shufflevector <16 x i8> %5381, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5472 = getelementptr inbounds i16, i16* %5079, i64 %5082
  %5473 = bitcast i16* %5472 to <8 x i16>*
  %5474 = load <8 x i16>, <8 x i16>* %5473, align 16
  %5475 = getelementptr inbounds i16, i16* %5069, i64 %5082
  %5476 = bitcast i16* %5475 to <8 x i16>*
  %5477 = load <8 x i16>, <8 x i16>* %5476, align 16
  %5478 = getelementptr inbounds i32, i32* %5080, i64 %5082
  %5479 = bitcast i32* %5478 to <4 x i32>*
  %5480 = load <4 x i32>, <4 x i32>* %5479, align 16
  %5481 = getelementptr inbounds i32, i32* %5478, i64 4
  %5482 = bitcast i32* %5481 to <4 x i32>*
  %5483 = load <4 x i32>, <4 x i32>* %5482, align 16
  %5484 = getelementptr inbounds i32, i32* %5070, i64 %5082
  %5485 = bitcast i32* %5484 to <4 x i32>*
  %5486 = load <4 x i32>, <4 x i32>* %5485, align 16
  %5487 = getelementptr inbounds i32, i32* %5484, i64 4
  %5488 = bitcast i32* %5487 to <4 x i32>*
  %5489 = load <4 x i32>, <4 x i32>* %5488, align 16
  %5490 = add <8 x i16> %5474, %5433
  %5491 = add <8 x i16> %5490, %5477
  %5492 = shufflevector <8 x i16> %5491, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5493 = bitcast <16 x i8> %5471 to <8 x i16>
  %5494 = shufflevector <8 x i16> %5493, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5495 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5492, <8 x i16> %5494) #5
  %5496 = shufflevector <8 x i16> %5491, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5497 = shufflevector <8 x i16> %5493, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5498 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5496, <8 x i16> %5497) #5
  %5499 = add <4 x i32> %5464, <i32 256, i32 256, i32 256, i32 256>
  %5500 = add <4 x i32> %5499, %5480
  %5501 = add <4 x i32> %5500, %5486
  %5502 = sub <4 x i32> %5501, %5495
  %5503 = ashr <4 x i32> %5502, <i32 9, i32 9, i32 9, i32 9>
  %5504 = add <4 x i32> %5466, <i32 256, i32 256, i32 256, i32 256>
  %5505 = add <4 x i32> %5504, %5483
  %5506 = add <4 x i32> %5505, %5489
  %5507 = sub <4 x i32> %5506, %5498
  %5508 = ashr <4 x i32> %5507, <i32 9, i32 9, i32 9, i32 9>
  %5509 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %5503, <4 x i32> %5508) #5
  %5510 = shufflevector <8 x i16> %5420, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5511 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5510, <8 x i16> %4879) #5
  %5512 = shufflevector <8 x i16> %5420, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5513 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5512, <8 x i16> %4879) #5
  %5514 = add <4 x i32> %5511, <i32 1024, i32 1024, i32 1024, i32 1024>
  %5515 = ashr <4 x i32> %5514, <i32 11, i32 11, i32 11, i32 11>
  %5516 = add <4 x i32> %5513, <i32 1024, i32 1024, i32 1024, i32 1024>
  %5517 = ashr <4 x i32> %5516, <i32 11, i32 11, i32 11, i32 11>
  %5518 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %5515, <4 x i32> %5517) #5
  %5519 = add <8 x i16> %5518, %5404
  %5520 = shufflevector <8 x i16> %5509, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5521 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5520, <8 x i16> %4879) #5
  %5522 = shufflevector <8 x i16> %5509, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5523 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5522, <8 x i16> %4879) #5
  %5524 = add <4 x i32> %5521, <i32 1024, i32 1024, i32 1024, i32 1024>
  %5525 = ashr <4 x i32> %5524, <i32 11, i32 11, i32 11, i32 11>
  %5526 = add <4 x i32> %5523, <i32 1024, i32 1024, i32 1024, i32 1024>
  %5527 = ashr <4 x i32> %5526, <i32 11, i32 11, i32 11, i32 11>
  %5528 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %5525, <4 x i32> %5527) #5
  %5529 = add <8 x i16> %5528, %5493
  %5530 = getelementptr inbounds i8, i8* %4918, i64 %5082
  %5531 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %5519, <8 x i16> %5529) #5
  %5532 = bitcast i8* %5530 to <16 x i8>*
  store <16 x i8> %5531, <16 x i8>* %5532, align 16
  %5533 = icmp slt i64 %5089, %3747
  br i1 %5533, label %5081, label %5534

5534:                                             ; preds = %5081
  %5535 = getelementptr inbounds i8, i8* %4917, i64 %2
  %5536 = getelementptr inbounds i8, i8* %4918, i64 %2
  %5537 = add nsw i32 %4916, -1
  %5538 = icmp sgt i32 %5537, 0
  br i1 %5538, label %4903, label %4880

5539:                                             ; preds = %6169, %4880
  %5540 = phi i64 [ %4881, %4880 ], [ %5541, %6169 ]
  %5541 = phi i64 [ %4882, %4880 ], [ %5542, %6169 ]
  %5542 = phi i64 [ %4883, %4880 ], [ %5540, %6169 ]
  %5543 = phi i64 [ %4884, %4880 ], [ %5544, %6169 ]
  %5544 = phi i64 [ %4885, %4880 ], [ %5545, %6169 ]
  %5545 = phi i64 [ %4886, %4880 ], [ %5543, %6169 ]
  %5546 = phi i64 [ %4887, %4880 ], [ %5548, %6169 ]
  %5547 = phi i64 [ %4888, %4880 ], [ %5546, %6169 ]
  %5548 = phi i64 [ %4889, %4880 ], [ %5547, %6169 ]
  %5549 = phi i64 [ %4890, %4880 ], [ %5551, %6169 ]
  %5550 = phi i64 [ %4891, %4880 ], [ %5549, %6169 ]
  %5551 = phi i64 [ %4892, %4880 ], [ %5550, %6169 ]
  %5552 = phi i64 [ %4894, %4880 ], [ %5555, %6169 ]
  %5553 = phi i64 [ %4895, %4880 ], [ %5554, %6169 ]
  %5554 = phi i64 [ %4896, %4880 ], [ %5553, %6169 ]
  %5555 = phi i64 [ %4897, %4880 ], [ %5552, %6169 ]
  %5556 = phi i8* [ %4898, %4880 ], [ %6171, %6169 ]
  %5557 = phi i8* [ %4866, %4880 ], [ %6172, %6169 ]
  %5558 = phi i8* [ %4902, %4880 ], [ %6170, %6169 ]
  %5559 = phi i32 [ %4901, %4880 ], [ %6173, %6169 ]
  %5560 = bitcast i8* %5557 to <2 x i64>*
  %5561 = load <2 x i64>, <2 x i64>* %5560, align 1
  %5562 = bitcast <2 x i64> %5561 to <16 x i8>
  %5563 = shufflevector <16 x i8> %5562, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5564 = bitcast <16 x i8> %5563 to <8 x i16>
  %5565 = mul <8 x i16> %5564, %5564
  %5566 = shufflevector <16 x i8> %5562, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5567 = bitcast <16 x i8> %5566 to <8 x i16>
  %5568 = mul <8 x i16> %5567, %5567
  %5569 = shufflevector <16 x i8> %5562, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %5570 = shufflevector <16 x i8> %5562, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %5571 = shufflevector <16 x i8> %5569, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5572 = bitcast <16 x i8> %5571 to <8 x i16>
  %5573 = add <8 x i16> %5572, %5564
  %5574 = shufflevector <16 x i8> %5570, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5575 = bitcast <16 x i8> %5574 to <8 x i16>
  %5576 = add <8 x i16> %5573, %5575
  %5577 = inttoptr i64 %5548 to <8 x i16>*
  store <8 x i16> %5576, <8 x i16>* %5577, align 16
  %5578 = bitcast <8 x i16> %5568 to <16 x i8>
  %5579 = bitcast <8 x i16> %5565 to <16 x i8>
  %5580 = shufflevector <16 x i8> %5579, <16 x i8> %5578, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5581 = bitcast <16 x i8> %5580 to <8 x i16>
  %5582 = shufflevector <16 x i8> %5579, <16 x i8> %5578, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %5583 = bitcast <16 x i8> %5582 to <8 x i16>
  %5584 = shufflevector <8 x i16> %5565, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5585 = shufflevector <8 x i16> %5581, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5586 = bitcast <8 x i16> %5584 to <4 x i32>
  %5587 = bitcast <8 x i16> %5585 to <4 x i32>
  %5588 = add <4 x i32> %5587, %5586
  %5589 = shufflevector <8 x i16> %5583, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5590 = bitcast <8 x i16> %5589 to <4 x i32>
  %5591 = add <4 x i32> %5588, %5590
  %5592 = shufflevector <8 x i16> %5565, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5593 = shufflevector <8 x i16> %5581, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5594 = bitcast <8 x i16> %5592 to <4 x i32>
  %5595 = bitcast <8 x i16> %5593 to <4 x i32>
  %5596 = add <4 x i32> %5595, %5594
  %5597 = shufflevector <8 x i16> %5583, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5598 = bitcast <8 x i16> %5597 to <4 x i32>
  %5599 = add <4 x i32> %5596, %5598
  %5600 = inttoptr i64 %5551 to i32*
  %5601 = inttoptr i64 %5551 to <4 x i32>*
  store <4 x i32> %5591, <4 x i32>* %5601, align 16
  %5602 = getelementptr inbounds i32, i32* %5600, i64 4
  %5603 = bitcast i32* %5602 to <4 x i32>*
  store <4 x i32> %5599, <4 x i32>* %5603, align 16
  %5604 = inttoptr i64 %5547 to <8 x i16>*
  %5605 = load <8 x i16>, <8 x i16>* %5604, align 16
  %5606 = inttoptr i64 %5546 to <8 x i16>*
  %5607 = load <8 x i16>, <8 x i16>* %5606, align 16
  %5608 = inttoptr i64 %5550 to i32*
  %5609 = inttoptr i64 %5550 to <4 x i32>*
  %5610 = load <4 x i32>, <4 x i32>* %5609, align 16
  %5611 = getelementptr inbounds i32, i32* %5608, i64 4
  %5612 = bitcast i32* %5611 to <4 x i32>*
  %5613 = load <4 x i32>, <4 x i32>* %5612, align 16
  %5614 = inttoptr i64 %5549 to i32*
  %5615 = inttoptr i64 %5549 to <4 x i32>*
  %5616 = load <4 x i32>, <4 x i32>* %5615, align 16
  %5617 = getelementptr inbounds i32, i32* %5614, i64 4
  %5618 = bitcast i32* %5617 to <4 x i32>*
  %5619 = load <4 x i32>, <4 x i32>* %5618, align 16
  %5620 = add <8 x i16> %5607, %5605
  %5621 = add <8 x i16> %5620, %5576
  %5622 = add <4 x i32> %5616, %5610
  %5623 = add <4 x i32> %5622, %5591
  %5624 = add <4 x i32> %5619, %5613
  %5625 = add <4 x i32> %5624, %5599
  %5626 = shufflevector <8 x i16> %5621, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5627 = shufflevector <8 x i16> %5621, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5628 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5626, <8 x i16> %5626) #5
  %5629 = mul <4 x i32> %5623, <i32 9, i32 9, i32 9, i32 9>
  %5630 = sub <4 x i32> %5629, %5628
  %5631 = icmp sgt <4 x i32> %5630, zeroinitializer
  %5632 = select <4 x i1> %5631, <4 x i32> %5630, <4 x i32> zeroinitializer
  %5633 = mul <4 x i32> %5632, %3974
  %5634 = add <4 x i32> %5633, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5635 = lshr <4 x i32> %5634, <i32 20, i32 20, i32 20, i32 20>
  %5636 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5627, <8 x i16> %5627) #5
  %5637 = mul <4 x i32> %5625, <i32 9, i32 9, i32 9, i32 9>
  %5638 = sub <4 x i32> %5637, %5636
  %5639 = icmp sgt <4 x i32> %5638, zeroinitializer
  %5640 = select <4 x i1> %5639, <4 x i32> %5638, <4 x i32> zeroinitializer
  %5641 = mul <4 x i32> %5640, %3974
  %5642 = add <4 x i32> %5641, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5643 = lshr <4 x i32> %5642, <i32 20, i32 20, i32 20, i32 20>
  %5644 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5635, <4 x i32> %5643) #5
  %5645 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %5644, <8 x i16> undef) #5
  %5646 = bitcast <16 x i8> %5645 to <2 x i64>
  %5647 = extractelement <2 x i64> %5646, i32 0
  %5648 = lshr i64 %5647, 8
  %5649 = lshr i64 %5647, 16
  %5650 = lshr i64 %5647, 24
  %5651 = lshr i64 %5647, 32
  %5652 = lshr i64 %5647, 40
  %5653 = lshr i64 %5647, 48
  %5654 = lshr i64 %5647, 56
  %5655 = and i64 %5647, 255
  %5656 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5655
  %5657 = load i8, i8* %5656, align 1
  %5658 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %5657, i64 0
  %5659 = and i64 %5648, 255
  %5660 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5659
  %5661 = load i8, i8* %5660, align 1
  %5662 = insertelement <16 x i8> %5658, i8 %5661, i64 1
  %5663 = and i64 %5649, 255
  %5664 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5663
  %5665 = load i8, i8* %5664, align 1
  %5666 = insertelement <16 x i8> %5662, i8 %5665, i64 2
  %5667 = and i64 %5650, 255
  %5668 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5667
  %5669 = load i8, i8* %5668, align 1
  %5670 = insertelement <16 x i8> %5666, i8 %5669, i64 3
  %5671 = and i64 %5651, 255
  %5672 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5671
  %5673 = load i8, i8* %5672, align 1
  %5674 = insertelement <16 x i8> %5670, i8 %5673, i64 4
  %5675 = and i64 %5652, 255
  %5676 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5675
  %5677 = load i8, i8* %5676, align 1
  %5678 = insertelement <16 x i8> %5674, i8 %5677, i64 5
  %5679 = and i64 %5653, 255
  %5680 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5679
  %5681 = load i8, i8* %5680, align 1
  %5682 = insertelement <16 x i8> %5678, i8 %5681, i64 6
  %5683 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %5654
  %5684 = load i8, i8* %5683, align 1
  %5685 = insertelement <16 x i8> %5682, i8 %5684, i64 7
  %5686 = shufflevector <16 x i8> %5685, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5687 = bitcast <16 x i8> %5686 to <8 x i16>
  %5688 = shufflevector <8 x i16> %5687, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5689 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5688, <8 x i16> %5626) #5
  %5690 = shufflevector <8 x i16> %5687, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5691 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5690, <8 x i16> %5627) #5
  %5692 = mul <4 x i32> %5689, <i32 455, i32 455, i32 455, i32 455>
  %5693 = mul <4 x i32> %5691, <i32 455, i32 455, i32 455, i32 455>
  %5694 = add <4 x i32> %5692, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5695 = lshr <4 x i32> %5694, <i32 12, i32 12, i32 12, i32 12>
  %5696 = add <4 x i32> %5693, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5697 = lshr <4 x i32> %5696, <i32 12, i32 12, i32 12, i32 12>
  %5698 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5695, <4 x i32> %5697) #5
  %5699 = getelementptr inbounds i8, i8* %5557, i64 16
  %5700 = inttoptr i64 %5555 to i16*
  %5701 = inttoptr i64 %5553 to i32*
  %5702 = inttoptr i64 %5552 to i16*
  %5703 = inttoptr i64 %5554 to i32*
  %5704 = getelementptr inbounds i16, i16* %5702, i64 8
  %5705 = getelementptr inbounds i32, i32* %5703, i64 8
  %5706 = inttoptr i64 %5548 to i16*
  %5707 = inttoptr i64 %5547 to i16*
  %5708 = inttoptr i64 %5546 to i16*
  %5709 = getelementptr inbounds i32, i32* %5600, i64 8
  %5710 = inttoptr i64 %5542 to i16*
  %5711 = inttoptr i64 %5545 to i32*
  %5712 = inttoptr i64 %5540 to i16*
  %5713 = inttoptr i64 %5543 to i32*
  %5714 = getelementptr inbounds i16, i16* %5712, i64 8
  %5715 = getelementptr inbounds i32, i32* %5713, i64 8
  br label %5716

5716:                                             ; preds = %5716, %5539
  %5717 = phi i64 [ 0, %5539 ], [ %5724, %5716 ]
  %5718 = phi <2 x i64> [ %5561, %5539 ], [ %5726, %5716 ]
  %5719 = phi <16 x i8> [ %5685, %5539 ], [ %5959, %5716 ]
  %5720 = phi <8 x i16> [ %5568, %5539 ], [ %5827, %5716 ]
  %5721 = phi <8 x i16> [ %5698, %5539 ], [ %5957, %5716 ]
  %5722 = bitcast <16 x i8> %5719 to <2 x i64>
  %5723 = getelementptr inbounds i8, i8* %5699, i64 %5717
  %5724 = add nuw nsw i64 %5717, 16
  %5725 = bitcast i8* %5723 to <2 x i64>*
  %5726 = load <2 x i64>, <2 x i64>* %5725, align 1
  %5727 = or i64 %5717, 8
  %5728 = bitcast <2 x i64> %5726 to <16 x i8>
  %5729 = shufflevector <16 x i8> %5728, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5730 = bitcast <16 x i8> %5729 to <8 x i16>
  %5731 = mul <8 x i16> %5730, %5730
  %5732 = bitcast <2 x i64> %5718 to <16 x i8>
  %5733 = shufflevector <16 x i8> %5732, <16 x i8> %5728, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %5734 = shufflevector <16 x i8> %5732, <16 x i8> %5728, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %5735 = shufflevector <16 x i8> %5732, <16 x i8> %5728, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %5736 = shufflevector <16 x i8> %5733, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5737 = shufflevector <16 x i8> %5734, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5738 = bitcast <16 x i8> %5736 to <8 x i16>
  %5739 = bitcast <16 x i8> %5737 to <8 x i16>
  %5740 = add <8 x i16> %5739, %5738
  %5741 = shufflevector <16 x i8> %5735, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5742 = bitcast <16 x i8> %5741 to <8 x i16>
  %5743 = add <8 x i16> %5740, %5742
  %5744 = shufflevector <16 x i8> %5733, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5745 = shufflevector <16 x i8> %5734, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5746 = bitcast <16 x i8> %5744 to <8 x i16>
  %5747 = bitcast <16 x i8> %5745 to <8 x i16>
  %5748 = add <8 x i16> %5747, %5746
  %5749 = shufflevector <16 x i8> %5735, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5750 = bitcast <16 x i8> %5749 to <8 x i16>
  %5751 = add <8 x i16> %5748, %5750
  %5752 = getelementptr inbounds i16, i16* %5706, i64 %5727
  %5753 = bitcast i16* %5752 to <8 x i16>*
  store <8 x i16> %5743, <8 x i16>* %5753, align 16
  %5754 = getelementptr inbounds i16, i16* %5752, i64 8
  %5755 = bitcast i16* %5754 to <8 x i16>*
  store <8 x i16> %5751, <8 x i16>* %5755, align 16
  %5756 = bitcast <8 x i16> %5731 to <16 x i8>
  %5757 = bitcast <8 x i16> %5720 to <16 x i8>
  %5758 = shufflevector <16 x i8> %5757, <16 x i8> %5756, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5759 = bitcast <16 x i8> %5758 to <8 x i16>
  %5760 = shufflevector <16 x i8> %5757, <16 x i8> %5756, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %5761 = bitcast <16 x i8> %5760 to <8 x i16>
  %5762 = shufflevector <8 x i16> %5720, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5763 = shufflevector <8 x i16> %5759, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5764 = bitcast <8 x i16> %5762 to <4 x i32>
  %5765 = bitcast <8 x i16> %5763 to <4 x i32>
  %5766 = add <4 x i32> %5765, %5764
  %5767 = shufflevector <8 x i16> %5761, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5768 = bitcast <8 x i16> %5767 to <4 x i32>
  %5769 = add <4 x i32> %5766, %5768
  %5770 = shufflevector <8 x i16> %5720, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5771 = shufflevector <8 x i16> %5759, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5772 = bitcast <8 x i16> %5770 to <4 x i32>
  %5773 = bitcast <8 x i16> %5771 to <4 x i32>
  %5774 = add <4 x i32> %5773, %5772
  %5775 = shufflevector <8 x i16> %5761, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5776 = bitcast <8 x i16> %5775 to <4 x i32>
  %5777 = add <4 x i32> %5774, %5776
  %5778 = getelementptr inbounds i32, i32* %5600, i64 %5727
  %5779 = bitcast i32* %5778 to <4 x i32>*
  store <4 x i32> %5769, <4 x i32>* %5779, align 16
  %5780 = getelementptr inbounds i32, i32* %5778, i64 4
  %5781 = bitcast i32* %5780 to <4 x i32>*
  store <4 x i32> %5777, <4 x i32>* %5781, align 16
  %5782 = getelementptr inbounds i16, i16* %5707, i64 %5727
  %5783 = bitcast i16* %5782 to <8 x i16>*
  %5784 = load <8 x i16>, <8 x i16>* %5783, align 16
  %5785 = getelementptr inbounds i16, i16* %5708, i64 %5727
  %5786 = bitcast i16* %5785 to <8 x i16>*
  %5787 = load <8 x i16>, <8 x i16>* %5786, align 16
  %5788 = getelementptr inbounds i32, i32* %5608, i64 %5727
  %5789 = bitcast i32* %5788 to <4 x i32>*
  %5790 = load <4 x i32>, <4 x i32>* %5789, align 16
  %5791 = getelementptr inbounds i32, i32* %5788, i64 4
  %5792 = bitcast i32* %5791 to <4 x i32>*
  %5793 = load <4 x i32>, <4 x i32>* %5792, align 16
  %5794 = getelementptr inbounds i32, i32* %5614, i64 %5727
  %5795 = bitcast i32* %5794 to <4 x i32>*
  %5796 = load <4 x i32>, <4 x i32>* %5795, align 16
  %5797 = getelementptr inbounds i32, i32* %5794, i64 4
  %5798 = bitcast i32* %5797 to <4 x i32>*
  %5799 = load <4 x i32>, <4 x i32>* %5798, align 16
  %5800 = add <8 x i16> %5743, %5784
  %5801 = add <8 x i16> %5800, %5787
  %5802 = add <4 x i32> %5796, %5790
  %5803 = add <4 x i32> %5802, %5769
  %5804 = add <4 x i32> %5799, %5793
  %5805 = add <4 x i32> %5804, %5777
  %5806 = shufflevector <8 x i16> %5801, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5807 = shufflevector <8 x i16> %5801, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5808 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5806, <8 x i16> %5806) #5
  %5809 = mul <4 x i32> %5803, <i32 9, i32 9, i32 9, i32 9>
  %5810 = sub <4 x i32> %5809, %5808
  %5811 = icmp sgt <4 x i32> %5810, zeroinitializer
  %5812 = select <4 x i1> %5811, <4 x i32> %5810, <4 x i32> zeroinitializer
  %5813 = mul <4 x i32> %5812, %3974
  %5814 = add <4 x i32> %5813, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5815 = lshr <4 x i32> %5814, <i32 20, i32 20, i32 20, i32 20>
  %5816 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5807, <8 x i16> %5807) #5
  %5817 = mul <4 x i32> %5805, <i32 9, i32 9, i32 9, i32 9>
  %5818 = sub <4 x i32> %5817, %5816
  %5819 = icmp sgt <4 x i32> %5818, zeroinitializer
  %5820 = select <4 x i1> %5819, <4 x i32> %5818, <4 x i32> zeroinitializer
  %5821 = mul <4 x i32> %5820, %3974
  %5822 = add <4 x i32> %5821, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5823 = lshr <4 x i32> %5822, <i32 20, i32 20, i32 20, i32 20>
  %5824 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5815, <4 x i32> %5823) #5
  %5825 = shufflevector <16 x i8> %5728, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5826 = bitcast <16 x i8> %5825 to <8 x i16>
  %5827 = mul <8 x i16> %5826, %5826
  %5828 = bitcast <8 x i16> %5827 to <16 x i8>
  %5829 = shufflevector <16 x i8> %5756, <16 x i8> %5828, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5830 = bitcast <16 x i8> %5829 to <8 x i16>
  %5831 = shufflevector <16 x i8> %5756, <16 x i8> %5828, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %5832 = bitcast <16 x i8> %5831 to <8 x i16>
  %5833 = shufflevector <8 x i16> %5731, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5834 = shufflevector <8 x i16> %5830, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5835 = bitcast <8 x i16> %5833 to <4 x i32>
  %5836 = bitcast <8 x i16> %5834 to <4 x i32>
  %5837 = add <4 x i32> %5836, %5835
  %5838 = shufflevector <8 x i16> %5832, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5839 = bitcast <8 x i16> %5838 to <4 x i32>
  %5840 = add <4 x i32> %5837, %5839
  %5841 = shufflevector <8 x i16> %5731, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5842 = shufflevector <8 x i16> %5830, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5843 = bitcast <8 x i16> %5841 to <4 x i32>
  %5844 = bitcast <8 x i16> %5842 to <4 x i32>
  %5845 = add <4 x i32> %5844, %5843
  %5846 = shufflevector <8 x i16> %5832, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5847 = bitcast <8 x i16> %5846 to <4 x i32>
  %5848 = add <4 x i32> %5845, %5847
  %5849 = getelementptr inbounds i32, i32* %5709, i64 %5727
  %5850 = bitcast i32* %5849 to <4 x i32>*
  store <4 x i32> %5840, <4 x i32>* %5850, align 16
  %5851 = getelementptr inbounds i32, i32* %5849, i64 4
  %5852 = bitcast i32* %5851 to <4 x i32>*
  store <4 x i32> %5848, <4 x i32>* %5852, align 16
  %5853 = add nuw nsw i64 %5727, 8
  %5854 = getelementptr inbounds i16, i16* %5707, i64 %5853
  %5855 = bitcast i16* %5854 to <8 x i16>*
  %5856 = load <8 x i16>, <8 x i16>* %5855, align 16
  %5857 = getelementptr inbounds i16, i16* %5708, i64 %5853
  %5858 = bitcast i16* %5857 to <8 x i16>*
  %5859 = load <8 x i16>, <8 x i16>* %5858, align 16
  %5860 = getelementptr inbounds i32, i32* %5608, i64 %5853
  %5861 = bitcast i32* %5860 to <4 x i32>*
  %5862 = load <4 x i32>, <4 x i32>* %5861, align 16
  %5863 = getelementptr inbounds i32, i32* %5860, i64 4
  %5864 = bitcast i32* %5863 to <4 x i32>*
  %5865 = load <4 x i32>, <4 x i32>* %5864, align 16
  %5866 = getelementptr inbounds i32, i32* %5614, i64 %5853
  %5867 = bitcast i32* %5866 to <4 x i32>*
  %5868 = load <4 x i32>, <4 x i32>* %5867, align 16
  %5869 = getelementptr inbounds i32, i32* %5866, i64 4
  %5870 = bitcast i32* %5869 to <4 x i32>*
  %5871 = load <4 x i32>, <4 x i32>* %5870, align 16
  %5872 = add <8 x i16> %5856, %5751
  %5873 = add <8 x i16> %5872, %5859
  %5874 = add <4 x i32> %5862, %5840
  %5875 = add <4 x i32> %5874, %5868
  %5876 = add <4 x i32> %5865, %5848
  %5877 = add <4 x i32> %5876, %5871
  %5878 = shufflevector <8 x i16> %5873, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5879 = shufflevector <8 x i16> %5873, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5880 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5878, <8 x i16> %5878) #5
  %5881 = mul <4 x i32> %5875, <i32 9, i32 9, i32 9, i32 9>
  %5882 = sub <4 x i32> %5881, %5880
  %5883 = icmp sgt <4 x i32> %5882, zeroinitializer
  %5884 = select <4 x i1> %5883, <4 x i32> %5882, <4 x i32> zeroinitializer
  %5885 = mul <4 x i32> %5884, %3974
  %5886 = add <4 x i32> %5885, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5887 = lshr <4 x i32> %5886, <i32 20, i32 20, i32 20, i32 20>
  %5888 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5879, <8 x i16> %5879) #5
  %5889 = mul <4 x i32> %5877, <i32 9, i32 9, i32 9, i32 9>
  %5890 = sub <4 x i32> %5889, %5888
  %5891 = icmp sgt <4 x i32> %5890, zeroinitializer
  %5892 = select <4 x i1> %5891, <4 x i32> %5890, <4 x i32> zeroinitializer
  %5893 = mul <4 x i32> %5892, %3974
  %5894 = add <4 x i32> %5893, <i32 524288, i32 524288, i32 524288, i32 524288>
  %5895 = lshr <4 x i32> %5894, <i32 20, i32 20, i32 20, i32 20>
  %5896 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5887, <4 x i32> %5895) #5
  %5897 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %5824, <8 x i16> %5896) #5
  %5898 = icmp ult <16 x i8> %5897, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %5899 = select <16 x i1> %5898, <16 x i8> %5897, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %5900 = icmp sgt <16 x i8> %5899, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %5901 = select <16 x i1> %5900, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %5899
  %5902 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4042, <16 x i8> %5901) #5
  %5903 = add nsw <16 x i8> %5899, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %5904 = icmp sgt <16 x i8> %5903, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %5905 = select <16 x i1> %5904, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %5903
  %5906 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4043, <16 x i8> %5905) #5
  %5907 = or <16 x i8> %5906, %5902
  %5908 = add nsw <16 x i8> %5899, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %5909 = icmp sgt <16 x i8> %5908, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %5910 = select <16 x i1> %5909, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %5908
  %5911 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %4044, <16 x i8> %5910) #5
  %5912 = or <16 x i8> %5907, %5911
  %5913 = xor <16 x i8> %5897, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %5914 = icmp ugt <16 x i8> %5912, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %5915 = select <16 x i1> %5914, <16 x i8> %5912, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %5916 = icmp sgt <16 x i8> %5913, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %5917 = icmp sgt <16 x i8> %5913, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %5918 = sext <16 x i1> %5917 to <16 x i8>
  %5919 = icmp sgt <16 x i8> %5913, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %5920 = icmp sgt <16 x i8> %5913, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %5921 = icmp eq <16 x i8> %5913, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %5922 = zext <16 x i1> %5916 to <16 x i8>
  %5923 = sub nsw <16 x i8> %5918, %5922
  %5924 = zext <16 x i1> %5919 to <16 x i8>
  %5925 = sub nsw <16 x i8> %5923, %5924
  %5926 = zext <16 x i1> %5920 to <16 x i8>
  %5927 = sub nsw <16 x i8> %5925, %5926
  %5928 = zext <16 x i1> %5921 to <16 x i8>
  %5929 = sub nsw <16 x i8> %5927, %5928
  %5930 = add <16 x i8> %5929, %5915
  %5931 = bitcast <16 x i8> %5930 to <2 x i64>
  %5932 = shufflevector <16 x i8> %5930, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5933 = bitcast <16 x i8> %5932 to <8 x i16>
  %5934 = shufflevector <8 x i16> %5933, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5935 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5934, <8 x i16> %5806) #5
  %5936 = shufflevector <8 x i16> %5933, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5937 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5936, <8 x i16> %5807) #5
  %5938 = mul <4 x i32> %5935, <i32 455, i32 455, i32 455, i32 455>
  %5939 = mul <4 x i32> %5937, <i32 455, i32 455, i32 455, i32 455>
  %5940 = add <4 x i32> %5938, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5941 = lshr <4 x i32> %5940, <i32 12, i32 12, i32 12, i32 12>
  %5942 = add <4 x i32> %5939, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5943 = lshr <4 x i32> %5942, <i32 12, i32 12, i32 12, i32 12>
  %5944 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5941, <4 x i32> %5943) #5
  %5945 = shufflevector <16 x i8> %5930, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %5946 = bitcast <16 x i8> %5945 to <8 x i16>
  %5947 = shufflevector <8 x i16> %5946, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5948 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5947, <8 x i16> %5878) #5
  %5949 = shufflevector <8 x i16> %5946, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5950 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %5949, <8 x i16> %5879) #5
  %5951 = mul <4 x i32> %5948, <i32 455, i32 455, i32 455, i32 455>
  %5952 = mul <4 x i32> %5950, <i32 455, i32 455, i32 455, i32 455>
  %5953 = add <4 x i32> %5951, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5954 = lshr <4 x i32> %5953, <i32 12, i32 12, i32 12, i32 12>
  %5955 = add <4 x i32> %5952, <i32 2048, i32 2048, i32 2048, i32 2048>
  %5956 = lshr <4 x i32> %5955, <i32 12, i32 12, i32 12, i32 12>
  %5957 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %5954, <4 x i32> %5956) #5
  %5958 = shufflevector <2 x i64> %5722, <2 x i64> %5931, <2 x i32> <i32 0, i32 2>
  %5959 = shufflevector <16 x i8> %5930, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %5960 = bitcast <2 x i64> %5958 to <16 x i8>
  %5961 = shufflevector <16 x i8> %5960, <16 x i8> %5959, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %5962 = shufflevector <16 x i8> %5960, <16 x i8> %5959, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5963 = shufflevector <16 x i8> %5960, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5964 = shufflevector <16 x i8> %5961, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5965 = bitcast <16 x i8> %5963 to <8 x i16>
  %5966 = bitcast <16 x i8> %5964 to <8 x i16>
  %5967 = add <8 x i16> %5966, %5965
  %5968 = shufflevector <16 x i8> %5962, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %5969 = bitcast <16 x i8> %5968 to <8 x i16>
  %5970 = add <8 x i16> %5967, %5969
  %5971 = shl <8 x i16> %5970, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %5972 = getelementptr inbounds i16, i16* %5700, i64 %5717
  %5973 = bitcast i16* %5972 to <8 x i16>*
  store <8 x i16> %5971, <8 x i16>* %5973, align 16
  %5974 = mul <8 x i16> %5970, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %5975 = add <8 x i16> %5974, %5966
  %5976 = getelementptr inbounds i16, i16* %5710, i64 %5717
  %5977 = bitcast i16* %5976 to <8 x i16>*
  store <8 x i16> %5975, <8 x i16>* %5977, align 16
  %5978 = bitcast <8 x i16> %5944 to <16 x i8>
  %5979 = bitcast <8 x i16> %5721 to <16 x i8>
  %5980 = shufflevector <16 x i8> %5979, <16 x i8> %5978, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %5981 = shufflevector <16 x i8> %5979, <16 x i8> %5978, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %5982 = bitcast <16 x i8> %5981 to <8 x i16>
  %5983 = bitcast <16 x i8> %5980 to <8 x i16>
  %5984 = shufflevector <8 x i16> %5721, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5985 = shufflevector <8 x i16> %5983, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5986 = bitcast <8 x i16> %5984 to <4 x i32>
  %5987 = bitcast <8 x i16> %5985 to <4 x i32>
  %5988 = add <4 x i32> %5987, %5986
  %5989 = shufflevector <8 x i16> %5982, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %5990 = bitcast <8 x i16> %5989 to <4 x i32>
  %5991 = add <4 x i32> %5988, %5990
  %5992 = shufflevector <8 x i16> %5721, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5993 = shufflevector <8 x i16> %5983, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5994 = bitcast <8 x i16> %5992 to <4 x i32>
  %5995 = bitcast <8 x i16> %5993 to <4 x i32>
  %5996 = add <4 x i32> %5995, %5994
  %5997 = shufflevector <8 x i16> %5982, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %5998 = bitcast <8 x i16> %5997 to <4 x i32>
  %5999 = add <4 x i32> %5996, %5998
  %6000 = shl <4 x i32> %5991, <i32 2, i32 2, i32 2, i32 2>
  %6001 = shl <4 x i32> %5999, <i32 2, i32 2, i32 2, i32 2>
  %6002 = getelementptr inbounds i32, i32* %5701, i64 %5717
  %6003 = bitcast i32* %6002 to <4 x i32>*
  store <4 x i32> %6000, <4 x i32>* %6003, align 16
  %6004 = getelementptr inbounds i32, i32* %6002, i64 4
  %6005 = bitcast i32* %6004 to <4 x i32>*
  store <4 x i32> %6001, <4 x i32>* %6005, align 16
  %6006 = mul <4 x i32> %5991, <i32 3, i32 3, i32 3, i32 3>
  %6007 = add <4 x i32> %6006, %5987
  %6008 = sub <4 x i32> %5995, %5999
  %6009 = add <4 x i32> %6008, %6001
  %6010 = getelementptr inbounds i32, i32* %5711, i64 %5717
  %6011 = bitcast i32* %6010 to <4 x i32>*
  store <4 x i32> %6007, <4 x i32>* %6011, align 16
  %6012 = getelementptr inbounds i32, i32* %6010, i64 4
  %6013 = bitcast i32* %6012 to <4 x i32>*
  store <4 x i32> %6009, <4 x i32>* %6013, align 16
  %6014 = getelementptr inbounds i8, i8* %5558, i64 %5717
  %6015 = bitcast i8* %6014 to <16 x i8>*
  %6016 = load <16 x i8>, <16 x i8>* %6015, align 16
  %6017 = shufflevector <16 x i8> %6016, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6018 = getelementptr inbounds i16, i16* %5712, i64 %5717
  %6019 = bitcast i16* %6018 to <8 x i16>*
  %6020 = load <8 x i16>, <8 x i16>* %6019, align 16
  %6021 = getelementptr inbounds i16, i16* %5702, i64 %5717
  %6022 = bitcast i16* %6021 to <8 x i16>*
  %6023 = load <8 x i16>, <8 x i16>* %6022, align 16
  %6024 = getelementptr inbounds i32, i32* %5713, i64 %5717
  %6025 = bitcast i32* %6024 to <4 x i32>*
  %6026 = load <4 x i32>, <4 x i32>* %6025, align 16
  %6027 = getelementptr inbounds i32, i32* %6024, i64 4
  %6028 = bitcast i32* %6027 to <4 x i32>*
  %6029 = load <4 x i32>, <4 x i32>* %6028, align 16
  %6030 = getelementptr inbounds i32, i32* %5703, i64 %5717
  %6031 = bitcast i32* %6030 to <4 x i32>*
  %6032 = load <4 x i32>, <4 x i32>* %6031, align 16
  %6033 = getelementptr inbounds i32, i32* %6030, i64 4
  %6034 = bitcast i32* %6033 to <4 x i32>*
  %6035 = load <4 x i32>, <4 x i32>* %6034, align 16
  %6036 = add <8 x i16> %5975, %6020
  %6037 = add <8 x i16> %6036, %6023
  %6038 = shufflevector <8 x i16> %6037, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6039 = bitcast <16 x i8> %6017 to <8 x i16>
  %6040 = shufflevector <8 x i16> %6039, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6041 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6038, <8 x i16> %6040) #5
  %6042 = shufflevector <8 x i16> %6037, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6043 = shufflevector <8 x i16> %6039, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6044 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6042, <8 x i16> %6043) #5
  %6045 = add <4 x i32> %6007, <i32 256, i32 256, i32 256, i32 256>
  %6046 = add <4 x i32> %6045, %6026
  %6047 = add <4 x i32> %6046, %6032
  %6048 = sub <4 x i32> %6047, %6041
  %6049 = ashr <4 x i32> %6048, <i32 9, i32 9, i32 9, i32 9>
  %6050 = add <4 x i32> %6009, <i32 256, i32 256, i32 256, i32 256>
  %6051 = add <4 x i32> %6050, %6029
  %6052 = add <4 x i32> %6051, %6035
  %6053 = sub <4 x i32> %6052, %6044
  %6054 = ashr <4 x i32> %6053, <i32 9, i32 9, i32 9, i32 9>
  %6055 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %6049, <4 x i32> %6054) #5
  %6056 = shufflevector <16 x i8> %5960, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6057 = shufflevector <16 x i8> %5961, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6058 = bitcast <16 x i8> %6056 to <8 x i16>
  %6059 = bitcast <16 x i8> %6057 to <8 x i16>
  %6060 = add <8 x i16> %6059, %6058
  %6061 = shufflevector <16 x i8> %5962, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6062 = bitcast <16 x i8> %6061 to <8 x i16>
  %6063 = add <8 x i16> %6060, %6062
  %6064 = shl <8 x i16> %6063, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %6065 = getelementptr inbounds i16, i16* %5700, i64 %5727
  %6066 = bitcast i16* %6065 to <8 x i16>*
  store <8 x i16> %6064, <8 x i16>* %6066, align 16
  %6067 = mul <8 x i16> %6063, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %6068 = add <8 x i16> %6067, %6059
  %6069 = getelementptr inbounds i16, i16* %5710, i64 %5727
  %6070 = bitcast i16* %6069 to <8 x i16>*
  store <8 x i16> %6068, <8 x i16>* %6070, align 16
  %6071 = bitcast <8 x i16> %5957 to <16 x i8>
  %6072 = shufflevector <16 x i8> %5978, <16 x i8> %6071, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %6073 = shufflevector <16 x i8> %5978, <16 x i8> %6071, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %6074 = bitcast <16 x i8> %6073 to <8 x i16>
  %6075 = bitcast <16 x i8> %6072 to <8 x i16>
  %6076 = shufflevector <8 x i16> %5944, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6077 = shufflevector <8 x i16> %6075, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6078 = bitcast <8 x i16> %6076 to <4 x i32>
  %6079 = bitcast <8 x i16> %6077 to <4 x i32>
  %6080 = add <4 x i32> %6079, %6078
  %6081 = shufflevector <8 x i16> %6074, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6082 = bitcast <8 x i16> %6081 to <4 x i32>
  %6083 = add <4 x i32> %6080, %6082
  %6084 = shufflevector <8 x i16> %5944, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6085 = shufflevector <8 x i16> %6075, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6086 = bitcast <8 x i16> %6084 to <4 x i32>
  %6087 = bitcast <8 x i16> %6085 to <4 x i32>
  %6088 = add <4 x i32> %6087, %6086
  %6089 = shufflevector <8 x i16> %6074, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6090 = bitcast <8 x i16> %6089 to <4 x i32>
  %6091 = add <4 x i32> %6088, %6090
  %6092 = shl <4 x i32> %6083, <i32 2, i32 2, i32 2, i32 2>
  %6093 = shl <4 x i32> %6091, <i32 2, i32 2, i32 2, i32 2>
  %6094 = getelementptr inbounds i32, i32* %5701, i64 %5727
  %6095 = bitcast i32* %6094 to <4 x i32>*
  store <4 x i32> %6092, <4 x i32>* %6095, align 16
  %6096 = getelementptr inbounds i32, i32* %6094, i64 4
  %6097 = bitcast i32* %6096 to <4 x i32>*
  store <4 x i32> %6093, <4 x i32>* %6097, align 16
  %6098 = mul <4 x i32> %6083, <i32 3, i32 3, i32 3, i32 3>
  %6099 = add <4 x i32> %6098, %6079
  %6100 = sub <4 x i32> %6087, %6091
  %6101 = add <4 x i32> %6100, %6093
  %6102 = getelementptr inbounds i32, i32* %5711, i64 %5727
  %6103 = bitcast i32* %6102 to <4 x i32>*
  store <4 x i32> %6099, <4 x i32>* %6103, align 16
  %6104 = getelementptr inbounds i32, i32* %6102, i64 4
  %6105 = bitcast i32* %6104 to <4 x i32>*
  store <4 x i32> %6101, <4 x i32>* %6105, align 16
  %6106 = shufflevector <16 x i8> %6016, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6107 = getelementptr inbounds i16, i16* %5714, i64 %5717
  %6108 = bitcast i16* %6107 to <8 x i16>*
  %6109 = load <8 x i16>, <8 x i16>* %6108, align 16
  %6110 = getelementptr inbounds i16, i16* %5704, i64 %5717
  %6111 = bitcast i16* %6110 to <8 x i16>*
  %6112 = load <8 x i16>, <8 x i16>* %6111, align 16
  %6113 = getelementptr inbounds i32, i32* %5715, i64 %5717
  %6114 = bitcast i32* %6113 to <4 x i32>*
  %6115 = load <4 x i32>, <4 x i32>* %6114, align 16
  %6116 = getelementptr inbounds i32, i32* %6113, i64 4
  %6117 = bitcast i32* %6116 to <4 x i32>*
  %6118 = load <4 x i32>, <4 x i32>* %6117, align 16
  %6119 = getelementptr inbounds i32, i32* %5705, i64 %5717
  %6120 = bitcast i32* %6119 to <4 x i32>*
  %6121 = load <4 x i32>, <4 x i32>* %6120, align 16
  %6122 = getelementptr inbounds i32, i32* %6119, i64 4
  %6123 = bitcast i32* %6122 to <4 x i32>*
  %6124 = load <4 x i32>, <4 x i32>* %6123, align 16
  %6125 = add <8 x i16> %6109, %6068
  %6126 = add <8 x i16> %6125, %6112
  %6127 = shufflevector <8 x i16> %6126, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6128 = bitcast <16 x i8> %6106 to <8 x i16>
  %6129 = shufflevector <8 x i16> %6128, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6130 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6127, <8 x i16> %6129) #5
  %6131 = shufflevector <8 x i16> %6126, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6132 = shufflevector <8 x i16> %6128, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6133 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6131, <8 x i16> %6132) #5
  %6134 = add <4 x i32> %6099, <i32 256, i32 256, i32 256, i32 256>
  %6135 = add <4 x i32> %6134, %6115
  %6136 = add <4 x i32> %6135, %6121
  %6137 = sub <4 x i32> %6136, %6130
  %6138 = ashr <4 x i32> %6137, <i32 9, i32 9, i32 9, i32 9>
  %6139 = add <4 x i32> %6101, <i32 256, i32 256, i32 256, i32 256>
  %6140 = add <4 x i32> %6139, %6118
  %6141 = add <4 x i32> %6140, %6124
  %6142 = sub <4 x i32> %6141, %6133
  %6143 = ashr <4 x i32> %6142, <i32 9, i32 9, i32 9, i32 9>
  %6144 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %6138, <4 x i32> %6143) #5
  %6145 = shufflevector <8 x i16> %6055, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6146 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6145, <8 x i16> %4893) #5
  %6147 = shufflevector <8 x i16> %6055, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6148 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6147, <8 x i16> %4893) #5
  %6149 = add <4 x i32> %6146, <i32 1024, i32 1024, i32 1024, i32 1024>
  %6150 = ashr <4 x i32> %6149, <i32 11, i32 11, i32 11, i32 11>
  %6151 = add <4 x i32> %6148, <i32 1024, i32 1024, i32 1024, i32 1024>
  %6152 = ashr <4 x i32> %6151, <i32 11, i32 11, i32 11, i32 11>
  %6153 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %6150, <4 x i32> %6152) #5
  %6154 = add <8 x i16> %6153, %6039
  %6155 = shufflevector <8 x i16> %6144, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6156 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6155, <8 x i16> %4893) #5
  %6157 = shufflevector <8 x i16> %6144, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6158 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6157, <8 x i16> %4893) #5
  %6159 = add <4 x i32> %6156, <i32 1024, i32 1024, i32 1024, i32 1024>
  %6160 = ashr <4 x i32> %6159, <i32 11, i32 11, i32 11, i32 11>
  %6161 = add <4 x i32> %6158, <i32 1024, i32 1024, i32 1024, i32 1024>
  %6162 = ashr <4 x i32> %6161, <i32 11, i32 11, i32 11, i32 11>
  %6163 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %6160, <4 x i32> %6162) #5
  %6164 = add <8 x i16> %6163, %6128
  %6165 = getelementptr inbounds i8, i8* %5556, i64 %5717
  %6166 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %6154, <8 x i16> %6164) #5
  %6167 = bitcast i8* %6165 to <16 x i8>*
  store <16 x i8> %6166, <16 x i8>* %6167, align 16
  %6168 = icmp slt i64 %5724, %3747
  br i1 %6168, label %5716, label %6169

6169:                                             ; preds = %5716
  %6170 = getelementptr inbounds i8, i8* %5558, i64 %2
  %6171 = getelementptr inbounds i8, i8* %5556, i64 %2
  %6172 = getelementptr inbounds i8, i8* %5557, i64 %6
  %6173 = add nsw i32 %5559, -1
  %6174 = icmp eq i32 %6173, 0
  br i1 %6174, label %12577, label %5539

6175:                                             ; preds = %3741
  %6176 = getelementptr inbounds i8, i8* %3, i64 -3
  %6177 = sext i32 %7 to i64
  %6178 = add nsw i64 %6177, 15
  %6179 = and i64 %6178, -16
  %6180 = add nsw i64 %6177, 23
  %6181 = add nsw i64 %6179, 16
  %6182 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 1, i32 1, i64 0
  %6183 = load i32, i32* %6182, align 4
  %6184 = getelementptr inbounds %"struct.libgav1::RestorationUnitInfo", %"struct.libgav1::RestorationUnitInfo"* %0, i64 0, i32 1, i32 1, i64 1
  %6185 = load i32, i32* %6184, align 4
  %6186 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 0
  %6187 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 0
  %6188 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 4, i64 0
  %6189 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 7, i64 0
  %6190 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %6181
  %6191 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 %6181
  %6192 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 4, i64 %6179
  %6193 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 7, i64 %6179
  %6194 = getelementptr inbounds i16, i16* %6190, i64 %6181
  %6195 = getelementptr inbounds i32, i32* %6191, i64 %6181
  %6196 = getelementptr inbounds i16, i16* %6192, i64 %6179
  %6197 = getelementptr inbounds i32, i32* %6193, i64 %6179
  %6198 = getelementptr inbounds i16, i16* %6194, i64 %6181
  %6199 = getelementptr inbounds i32, i32* %6195, i64 %6181
  %6200 = getelementptr inbounds i16, i16* %6196, i64 %6179
  %6201 = getelementptr inbounds i32, i32* %6197, i64 %6179
  %6202 = and i64 %6180, -16
  %6203 = getelementptr inbounds [16 x [2 x i16]], [16 x [2 x i16]]* @_ZN7libgav118kSgrScaleParameterE, i64 0, i64 %14, i64 0
  %6204 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 1, i64 0
  %6205 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 1, i64 %6181
  %6206 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 3, i64 %6181
  %6207 = getelementptr inbounds i16, i16* %6205, i64 %6181
  %6208 = getelementptr inbounds i32, i32* %6206, i64 %6181
  %6209 = getelementptr inbounds i16, i16* %6207, i64 %6181
  %6210 = getelementptr inbounds i32, i32* %6208, i64 %6181
  %6211 = getelementptr inbounds i16, i16* %6209, i64 %6181
  %6212 = getelementptr inbounds i32, i32* %6210, i64 %6181
  %6213 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 5, i64 0
  %6214 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 8, i64 0
  %6215 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 5, i64 %6179
  %6216 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 8, i64 %6179
  %6217 = getelementptr inbounds i16, i16* %6215, i64 %6179
  %6218 = getelementptr inbounds i32, i32* %6216, i64 %6179
  %6219 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 6, i64 0
  %6220 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 9, i64 0
  %6221 = sub nsw i64 %4, %6202
  %6222 = sub nsw i64 %6181, %6202
  br label %6223

6223:                                             ; preds = %6387, %6175
  %6224 = phi i8* [ %6176, %6175 ], [ %6388, %6387 ]
  %6225 = phi i16* [ %6186, %6175 ], [ %6389, %6387 ]
  %6226 = phi i16* [ %6205, %6175 ], [ %6390, %6387 ]
  %6227 = phi i32* [ %6187, %6175 ], [ %6391, %6387 ]
  %6228 = phi i32* [ %6206, %6175 ], [ %6392, %6387 ]
  %6229 = phi i32 [ 2, %6175 ], [ %6393, %6387 ]
  %6230 = bitcast i8* %6224 to <2 x i64>*
  %6231 = load <2 x i64>, <2 x i64>* %6230, align 1
  %6232 = bitcast <2 x i64> %6231 to <16 x i8>
  %6233 = shufflevector <16 x i8> %6232, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6234 = bitcast <16 x i8> %6233 to <8 x i16>
  %6235 = mul <8 x i16> %6234, %6234
  br label %6236

6236:                                             ; preds = %6236, %6223
  %6237 = phi <8 x i16> [ %6235, %6223 ], [ %6256, %6236 ]
  %6238 = phi <2 x i64> [ %6231, %6223 ], [ %6248, %6236 ]
  %6239 = phi i8* [ %6224, %6223 ], [ %6246, %6236 ]
  %6240 = phi i16* [ %6225, %6223 ], [ %6382, %6236 ]
  %6241 = phi i16* [ %6226, %6223 ], [ %6383, %6236 ]
  %6242 = phi i32* [ %6227, %6223 ], [ %6384, %6236 ]
  %6243 = phi i32* [ %6228, %6223 ], [ %6385, %6236 ]
  %6244 = phi i64 [ %6202, %6223 ], [ %6245, %6236 ]
  %6245 = add nsw i64 %6244, -16
  %6246 = getelementptr inbounds i8, i8* %6239, i64 16
  %6247 = bitcast i8* %6246 to <2 x i64>*
  %6248 = load <2 x i64>, <2 x i64>* %6247, align 1
  %6249 = bitcast <2 x i64> %6238 to <16 x i8>
  %6250 = shufflevector <16 x i8> %6249, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6251 = bitcast <16 x i8> %6250 to <8 x i16>
  %6252 = mul <8 x i16> %6251, %6251
  %6253 = bitcast <2 x i64> %6248 to <16 x i8>
  %6254 = shufflevector <16 x i8> %6253, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6255 = bitcast <16 x i8> %6254 to <8 x i16>
  %6256 = mul <8 x i16> %6255, %6255
  %6257 = shufflevector <16 x i8> %6249, <16 x i8> %6253, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %6258 = shufflevector <16 x i8> %6249, <16 x i8> %6253, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %6259 = shufflevector <16 x i8> %6249, <16 x i8> %6253, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %6260 = shufflevector <16 x i8> %6249, <16 x i8> %6253, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %6261 = shufflevector <16 x i8> %6249, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6262 = shufflevector <16 x i8> %6260, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6263 = bitcast <16 x i8> %6261 to <8 x i16>
  %6264 = bitcast <16 x i8> %6262 to <8 x i16>
  %6265 = add <8 x i16> %6264, %6263
  %6266 = shufflevector <16 x i8> %6260, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6267 = bitcast <16 x i8> %6266 to <8 x i16>
  %6268 = add <8 x i16> %6267, %6251
  %6269 = shufflevector <16 x i8> %6257, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6270 = shufflevector <16 x i8> %6258, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6271 = bitcast <16 x i8> %6269 to <8 x i16>
  %6272 = bitcast <16 x i8> %6270 to <8 x i16>
  %6273 = add <8 x i16> %6272, %6271
  %6274 = shufflevector <16 x i8> %6259, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6275 = bitcast <16 x i8> %6274 to <8 x i16>
  %6276 = add <8 x i16> %6273, %6275
  %6277 = shufflevector <16 x i8> %6257, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6278 = shufflevector <16 x i8> %6258, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6279 = bitcast <16 x i8> %6277 to <8 x i16>
  %6280 = bitcast <16 x i8> %6278 to <8 x i16>
  %6281 = add <8 x i16> %6280, %6279
  %6282 = shufflevector <16 x i8> %6259, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6283 = bitcast <16 x i8> %6282 to <8 x i16>
  %6284 = add <8 x i16> %6281, %6283
  %6285 = add <8 x i16> %6265, %6276
  %6286 = add <8 x i16> %6268, %6284
  %6287 = bitcast i16* %6240 to <8 x i16>*
  store <8 x i16> %6276, <8 x i16>* %6287, align 16
  %6288 = getelementptr inbounds i16, i16* %6240, i64 8
  %6289 = bitcast i16* %6288 to <8 x i16>*
  store <8 x i16> %6284, <8 x i16>* %6289, align 16
  %6290 = bitcast i16* %6241 to <8 x i16>*
  store <8 x i16> %6285, <8 x i16>* %6290, align 16
  %6291 = getelementptr inbounds i16, i16* %6241, i64 8
  %6292 = bitcast i16* %6291 to <8 x i16>*
  store <8 x i16> %6286, <8 x i16>* %6292, align 16
  %6293 = bitcast <8 x i16> %6252 to <16 x i8>
  %6294 = bitcast <8 x i16> %6237 to <16 x i8>
  %6295 = shufflevector <16 x i8> %6294, <16 x i8> %6293, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %6296 = bitcast <16 x i8> %6295 to <8 x i16>
  %6297 = shufflevector <16 x i8> %6294, <16 x i8> %6293, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %6298 = bitcast <16 x i8> %6297 to <8 x i16>
  %6299 = shufflevector <16 x i8> %6294, <16 x i8> %6293, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %6300 = bitcast <16 x i8> %6299 to <8 x i16>
  %6301 = shufflevector <16 x i8> %6294, <16 x i8> %6293, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6302 = bitcast <16 x i8> %6301 to <8 x i16>
  %6303 = shufflevector <8 x i16> %6237, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6304 = shufflevector <8 x i16> %6302, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6305 = bitcast <8 x i16> %6303 to <4 x i32>
  %6306 = bitcast <8 x i16> %6304 to <4 x i32>
  %6307 = add <4 x i32> %6306, %6305
  %6308 = shufflevector <8 x i16> %6296, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6309 = shufflevector <8 x i16> %6298, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6310 = bitcast <8 x i16> %6308 to <4 x i32>
  %6311 = bitcast <8 x i16> %6309 to <4 x i32>
  %6312 = add <4 x i32> %6311, %6310
  %6313 = shufflevector <8 x i16> %6300, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6314 = bitcast <8 x i16> %6313 to <4 x i32>
  %6315 = add <4 x i32> %6312, %6314
  %6316 = add <4 x i32> %6307, %6315
  %6317 = shufflevector <8 x i16> %6237, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6318 = shufflevector <8 x i16> %6302, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6319 = bitcast <8 x i16> %6317 to <4 x i32>
  %6320 = bitcast <8 x i16> %6318 to <4 x i32>
  %6321 = add <4 x i32> %6320, %6319
  %6322 = shufflevector <8 x i16> %6296, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6323 = shufflevector <8 x i16> %6298, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6324 = bitcast <8 x i16> %6322 to <4 x i32>
  %6325 = bitcast <8 x i16> %6323 to <4 x i32>
  %6326 = add <4 x i32> %6325, %6324
  %6327 = shufflevector <8 x i16> %6300, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6328 = bitcast <8 x i16> %6327 to <4 x i32>
  %6329 = add <4 x i32> %6326, %6328
  %6330 = add <4 x i32> %6321, %6329
  %6331 = bitcast i32* %6242 to <4 x i32>*
  store <4 x i32> %6315, <4 x i32>* %6331, align 16
  %6332 = getelementptr inbounds i32, i32* %6242, i64 4
  %6333 = bitcast i32* %6332 to <4 x i32>*
  store <4 x i32> %6329, <4 x i32>* %6333, align 16
  %6334 = bitcast i32* %6243 to <4 x i32>*
  store <4 x i32> %6316, <4 x i32>* %6334, align 16
  %6335 = getelementptr inbounds i32, i32* %6243, i64 4
  %6336 = bitcast i32* %6335 to <4 x i32>*
  store <4 x i32> %6330, <4 x i32>* %6336, align 16
  %6337 = bitcast <8 x i16> %6256 to <16 x i8>
  %6338 = shufflevector <16 x i8> %6293, <16 x i8> %6337, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %6339 = bitcast <16 x i8> %6338 to <8 x i16>
  %6340 = shufflevector <16 x i8> %6293, <16 x i8> %6337, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %6341 = bitcast <16 x i8> %6340 to <8 x i16>
  %6342 = shufflevector <16 x i8> %6293, <16 x i8> %6337, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %6343 = bitcast <16 x i8> %6342 to <8 x i16>
  %6344 = shufflevector <16 x i8> %6293, <16 x i8> %6337, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6345 = bitcast <16 x i8> %6344 to <8 x i16>
  %6346 = shufflevector <8 x i16> %6252, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6347 = shufflevector <8 x i16> %6345, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6348 = bitcast <8 x i16> %6346 to <4 x i32>
  %6349 = bitcast <8 x i16> %6347 to <4 x i32>
  %6350 = add <4 x i32> %6349, %6348
  %6351 = shufflevector <8 x i16> %6339, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6352 = shufflevector <8 x i16> %6341, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6353 = bitcast <8 x i16> %6351 to <4 x i32>
  %6354 = bitcast <8 x i16> %6352 to <4 x i32>
  %6355 = add <4 x i32> %6354, %6353
  %6356 = shufflevector <8 x i16> %6343, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6357 = bitcast <8 x i16> %6356 to <4 x i32>
  %6358 = add <4 x i32> %6355, %6357
  %6359 = add <4 x i32> %6350, %6358
  %6360 = shufflevector <8 x i16> %6252, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6361 = shufflevector <8 x i16> %6345, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6362 = bitcast <8 x i16> %6360 to <4 x i32>
  %6363 = bitcast <8 x i16> %6361 to <4 x i32>
  %6364 = add <4 x i32> %6363, %6362
  %6365 = shufflevector <8 x i16> %6339, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6366 = shufflevector <8 x i16> %6341, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6367 = bitcast <8 x i16> %6365 to <4 x i32>
  %6368 = bitcast <8 x i16> %6366 to <4 x i32>
  %6369 = add <4 x i32> %6368, %6367
  %6370 = shufflevector <8 x i16> %6343, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6371 = bitcast <8 x i16> %6370 to <4 x i32>
  %6372 = add <4 x i32> %6369, %6371
  %6373 = add <4 x i32> %6364, %6372
  %6374 = getelementptr inbounds i32, i32* %6242, i64 8
  %6375 = bitcast i32* %6374 to <4 x i32>*
  store <4 x i32> %6358, <4 x i32>* %6375, align 16
  %6376 = getelementptr inbounds i32, i32* %6242, i64 12
  %6377 = bitcast i32* %6376 to <4 x i32>*
  store <4 x i32> %6372, <4 x i32>* %6377, align 16
  %6378 = getelementptr inbounds i32, i32* %6243, i64 8
  %6379 = bitcast i32* %6378 to <4 x i32>*
  store <4 x i32> %6359, <4 x i32>* %6379, align 16
  %6380 = getelementptr inbounds i32, i32* %6243, i64 12
  %6381 = bitcast i32* %6380 to <4 x i32>*
  store <4 x i32> %6373, <4 x i32>* %6381, align 16
  %6382 = getelementptr inbounds i16, i16* %6240, i64 16
  %6383 = getelementptr inbounds i16, i16* %6241, i64 16
  %6384 = getelementptr inbounds i32, i32* %6242, i64 16
  %6385 = getelementptr inbounds i32, i32* %6243, i64 16
  %6386 = icmp eq i64 %6245, 0
  br i1 %6386, label %6387, label %6236

6387:                                             ; preds = %6236
  %6388 = getelementptr inbounds i8, i8* %6246, i64 %6221
  %6389 = getelementptr inbounds i16, i16* %6382, i64 %6222
  %6390 = getelementptr inbounds i16, i16* %6383, i64 %6222
  %6391 = getelementptr inbounds i32, i32* %6384, i64 %6222
  %6392 = getelementptr inbounds i32, i32* %6385, i64 %6222
  %6393 = add nsw i32 %6229, -1
  %6394 = icmp eq i32 %6393, 0
  br i1 %6394, label %6395, label %6223

6395:                                             ; preds = %6387
  %6396 = getelementptr inbounds i8, i8* %1, i64 -3
  %6397 = getelementptr inbounds i8, i8* %5, i64 -3
  %6398 = sub i32 128, %6183
  %6399 = ptrtoint %"union.libgav1::RestorationBuffer"* %9 to i64
  %6400 = ptrtoint i32* %6187 to i64
  %6401 = ptrtoint i16* %6188 to i64
  %6402 = ptrtoint i32* %6189 to i64
  %6403 = ptrtoint i16* %6190 to i64
  %6404 = ptrtoint i32* %6191 to i64
  %6405 = ptrtoint i16* %6192 to i64
  %6406 = ptrtoint i32* %6193 to i64
  %6407 = ptrtoint i16* %6194 to i64
  %6408 = ptrtoint i32* %6195 to i64
  %6409 = ptrtoint i16* %6196 to i64
  %6410 = ptrtoint i32* %6197 to i64
  %6411 = ptrtoint i16* %6198 to i64
  %6412 = ptrtoint i32* %6199 to i64
  %6413 = ptrtoint i16* %6200 to i64
  %6414 = ptrtoint i32* %6201 to i64
  %6415 = sub i32 %6398, %6185
  %6416 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 3, i64 0
  %6417 = ptrtoint i16* %6205 to i64
  %6418 = ptrtoint i32* %6206 to i64
  %6419 = ptrtoint i16* %6207 to i64
  %6420 = ptrtoint i32* %6208 to i64
  %6421 = ptrtoint i16* %6209 to i64
  %6422 = ptrtoint i32* %6210 to i64
  %6423 = ptrtoint i16* %6211 to i64
  %6424 = ptrtoint i32* %6212 to i64
  %6425 = ptrtoint i16* %6213 to i64
  %6426 = ptrtoint i32* %6214 to i64
  %6427 = ptrtoint i16* %6217 to i64
  %6428 = ptrtoint i32* %6218 to i64
  %6429 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 6, i64 %6179
  %6430 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 9, i64 %6179
  %6431 = ptrtoint i16* %6219 to i64
  %6432 = ptrtoint i32* %6220 to i64
  %6433 = icmp sgt i32 %8, 1
  %6434 = getelementptr inbounds i8, i8* %6396, i64 %2
  %6435 = select i1 %6433, i8* %6434, i8* %6397
  %6436 = bitcast i8* %6396 to <2 x i64>*
  %6437 = load <2 x i64>, <2 x i64>* %6436, align 1
  %6438 = bitcast i8* %6435 to <2 x i64>*
  %6439 = load <2 x i64>, <2 x i64>* %6438, align 1
  %6440 = bitcast <2 x i64> %6437 to <16 x i8>
  %6441 = shufflevector <16 x i8> %6440, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6442 = bitcast <16 x i8> %6441 to <8 x i16>
  %6443 = mul <8 x i16> %6442, %6442
  %6444 = bitcast <2 x i64> %6439 to <16 x i8>
  %6445 = shufflevector <16 x i8> %6444, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6446 = bitcast <16 x i8> %6445 to <8 x i16>
  %6447 = mul <8 x i16> %6446, %6446
  %6448 = shufflevector <16 x i8> %6440, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6449 = bitcast <16 x i8> %6448 to <8 x i16>
  %6450 = mul <8 x i16> %6449, %6449
  %6451 = shufflevector <16 x i8> %6444, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6452 = bitcast <16 x i8> %6451 to <8 x i16>
  %6453 = mul <8 x i16> %6452, %6452
  %6454 = shufflevector <16 x i8> %6440, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %6455 = shufflevector <16 x i8> %6440, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %6456 = shufflevector <16 x i8> %6440, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %6457 = shufflevector <16 x i8> %6440, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %6458 = shufflevector <16 x i8> %6457, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6459 = bitcast <16 x i8> %6458 to <8 x i16>
  %6460 = add <8 x i16> %6459, %6442
  %6461 = shufflevector <16 x i8> %6454, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6462 = shufflevector <16 x i8> %6455, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6463 = bitcast <16 x i8> %6461 to <8 x i16>
  %6464 = bitcast <16 x i8> %6462 to <8 x i16>
  %6465 = add <8 x i16> %6464, %6463
  %6466 = shufflevector <16 x i8> %6456, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6467 = bitcast <16 x i8> %6466 to <8 x i16>
  %6468 = add <8 x i16> %6465, %6467
  %6469 = add <8 x i16> %6460, %6468
  %6470 = shufflevector <16 x i8> %6444, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %6471 = shufflevector <16 x i8> %6444, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %6472 = shufflevector <16 x i8> %6444, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %6473 = shufflevector <16 x i8> %6444, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %6474 = shufflevector <16 x i8> %6473, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6475 = bitcast <16 x i8> %6474 to <8 x i16>
  %6476 = add <8 x i16> %6475, %6446
  %6477 = shufflevector <16 x i8> %6470, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6478 = shufflevector <16 x i8> %6471, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6479 = bitcast <16 x i8> %6477 to <8 x i16>
  %6480 = bitcast <16 x i8> %6478 to <8 x i16>
  %6481 = add <8 x i16> %6480, %6479
  %6482 = shufflevector <16 x i8> %6472, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6483 = bitcast <16 x i8> %6482 to <8 x i16>
  %6484 = add <8 x i16> %6481, %6483
  %6485 = add <8 x i16> %6476, %6484
  %6486 = bitcast i16* %6194 to <8 x i16>*
  store <8 x i16> %6468, <8 x i16>* %6486, align 16
  %6487 = bitcast i16* %6198 to <8 x i16>*
  store <8 x i16> %6484, <8 x i16>* %6487, align 16
  %6488 = bitcast i16* %6209 to <8 x i16>*
  store <8 x i16> %6469, <8 x i16>* %6488, align 16
  %6489 = bitcast i16* %6211 to <8 x i16>*
  store <8 x i16> %6485, <8 x i16>* %6489, align 16
  %6490 = bitcast <8 x i16> %6450 to <16 x i8>
  %6491 = bitcast <8 x i16> %6443 to <16 x i8>
  %6492 = shufflevector <16 x i8> %6491, <16 x i8> %6490, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %6493 = bitcast <16 x i8> %6492 to <8 x i16>
  %6494 = shufflevector <16 x i8> %6491, <16 x i8> %6490, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %6495 = bitcast <16 x i8> %6494 to <8 x i16>
  %6496 = shufflevector <16 x i8> %6491, <16 x i8> %6490, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %6497 = bitcast <16 x i8> %6496 to <8 x i16>
  %6498 = shufflevector <16 x i8> %6491, <16 x i8> %6490, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6499 = bitcast <16 x i8> %6498 to <8 x i16>
  %6500 = shufflevector <8 x i16> %6443, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6501 = shufflevector <8 x i16> %6499, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6502 = bitcast <8 x i16> %6500 to <4 x i32>
  %6503 = bitcast <8 x i16> %6501 to <4 x i32>
  %6504 = add <4 x i32> %6503, %6502
  %6505 = shufflevector <8 x i16> %6493, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6506 = shufflevector <8 x i16> %6495, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6507 = bitcast <8 x i16> %6505 to <4 x i32>
  %6508 = bitcast <8 x i16> %6506 to <4 x i32>
  %6509 = add <4 x i32> %6508, %6507
  %6510 = shufflevector <8 x i16> %6497, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6511 = bitcast <8 x i16> %6510 to <4 x i32>
  %6512 = add <4 x i32> %6509, %6511
  %6513 = add <4 x i32> %6504, %6512
  %6514 = shufflevector <8 x i16> %6443, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6515 = shufflevector <8 x i16> %6499, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6516 = bitcast <8 x i16> %6514 to <4 x i32>
  %6517 = bitcast <8 x i16> %6515 to <4 x i32>
  %6518 = add <4 x i32> %6517, %6516
  %6519 = shufflevector <8 x i16> %6493, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6520 = shufflevector <8 x i16> %6495, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6521 = bitcast <8 x i16> %6519 to <4 x i32>
  %6522 = bitcast <8 x i16> %6520 to <4 x i32>
  %6523 = add <4 x i32> %6522, %6521
  %6524 = shufflevector <8 x i16> %6497, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6525 = bitcast <8 x i16> %6524 to <4 x i32>
  %6526 = add <4 x i32> %6523, %6525
  %6527 = add <4 x i32> %6518, %6526
  %6528 = bitcast i32* %6195 to <4 x i32>*
  store <4 x i32> %6512, <4 x i32>* %6528, align 16
  %6529 = getelementptr inbounds i32, i32* %6195, i64 4
  %6530 = bitcast i32* %6529 to <4 x i32>*
  store <4 x i32> %6526, <4 x i32>* %6530, align 16
  %6531 = bitcast i32* %6210 to <4 x i32>*
  store <4 x i32> %6513, <4 x i32>* %6531, align 16
  %6532 = getelementptr inbounds i32, i32* %6210, i64 4
  %6533 = bitcast i32* %6532 to <4 x i32>*
  store <4 x i32> %6527, <4 x i32>* %6533, align 16
  %6534 = bitcast <8 x i16> %6453 to <16 x i8>
  %6535 = bitcast <8 x i16> %6447 to <16 x i8>
  %6536 = shufflevector <16 x i8> %6535, <16 x i8> %6534, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %6537 = bitcast <16 x i8> %6536 to <8 x i16>
  %6538 = shufflevector <16 x i8> %6535, <16 x i8> %6534, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %6539 = bitcast <16 x i8> %6538 to <8 x i16>
  %6540 = shufflevector <16 x i8> %6535, <16 x i8> %6534, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %6541 = bitcast <16 x i8> %6540 to <8 x i16>
  %6542 = shufflevector <16 x i8> %6535, <16 x i8> %6534, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6543 = bitcast <16 x i8> %6542 to <8 x i16>
  %6544 = shufflevector <8 x i16> %6447, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6545 = shufflevector <8 x i16> %6543, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6546 = bitcast <8 x i16> %6544 to <4 x i32>
  %6547 = bitcast <8 x i16> %6545 to <4 x i32>
  %6548 = add <4 x i32> %6547, %6546
  %6549 = shufflevector <8 x i16> %6537, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6550 = shufflevector <8 x i16> %6539, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6551 = bitcast <8 x i16> %6549 to <4 x i32>
  %6552 = bitcast <8 x i16> %6550 to <4 x i32>
  %6553 = add <4 x i32> %6552, %6551
  %6554 = shufflevector <8 x i16> %6541, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6555 = bitcast <8 x i16> %6554 to <4 x i32>
  %6556 = add <4 x i32> %6553, %6555
  %6557 = add <4 x i32> %6548, %6556
  %6558 = shufflevector <8 x i16> %6447, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6559 = shufflevector <8 x i16> %6543, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6560 = bitcast <8 x i16> %6558 to <4 x i32>
  %6561 = bitcast <8 x i16> %6559 to <4 x i32>
  %6562 = add <4 x i32> %6561, %6560
  %6563 = shufflevector <8 x i16> %6537, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6564 = shufflevector <8 x i16> %6539, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6565 = bitcast <8 x i16> %6563 to <4 x i32>
  %6566 = bitcast <8 x i16> %6564 to <4 x i32>
  %6567 = add <4 x i32> %6566, %6565
  %6568 = shufflevector <8 x i16> %6541, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6569 = bitcast <8 x i16> %6568 to <4 x i32>
  %6570 = add <4 x i32> %6567, %6569
  %6571 = add <4 x i32> %6562, %6570
  %6572 = bitcast i32* %6199 to <4 x i32>*
  store <4 x i32> %6556, <4 x i32>* %6572, align 16
  %6573 = getelementptr inbounds i32, i32* %6199, i64 4
  %6574 = bitcast i32* %6573 to <4 x i32>*
  store <4 x i32> %6570, <4 x i32>* %6574, align 16
  %6575 = bitcast i32* %6212 to <4 x i32>*
  store <4 x i32> %6557, <4 x i32>* %6575, align 16
  %6576 = getelementptr inbounds i32, i32* %6212, i64 4
  %6577 = bitcast i32* %6576 to <4 x i32>*
  store <4 x i32> %6571, <4 x i32>* %6577, align 16
  %6578 = bitcast %"union.libgav1::RestorationBuffer"* %9 to <8 x i16>*
  %6579 = load <8 x i16>, <8 x i16>* %6578, align 16
  %6580 = bitcast i16* %6190 to <8 x i16>*
  %6581 = load <8 x i16>, <8 x i16>* %6580, align 16
  %6582 = bitcast i32* %6187 to <4 x i32>*
  %6583 = load <4 x i32>, <4 x i32>* %6582, align 16
  %6584 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 4
  %6585 = bitcast i32* %6584 to <4 x i32>*
  %6586 = load <4 x i32>, <4 x i32>* %6585, align 16
  %6587 = bitcast i32* %6191 to <4 x i32>*
  %6588 = load <4 x i32>, <4 x i32>* %6587, align 16
  %6589 = getelementptr inbounds i32, i32* %6191, i64 4
  %6590 = bitcast i32* %6589 to <4 x i32>*
  %6591 = load <4 x i32>, <4 x i32>* %6590, align 16
  %6592 = bitcast i16* %6205 to <8 x i16>*
  %6593 = load <8 x i16>, <8 x i16>* %6592, align 16
  %6594 = bitcast i16* %6207 to <8 x i16>*
  %6595 = load <8 x i16>, <8 x i16>* %6594, align 16
  %6596 = bitcast i32* %6206 to <4 x i32>*
  %6597 = load <4 x i32>, <4 x i32>* %6596, align 16
  %6598 = getelementptr inbounds i32, i32* %6206, i64 4
  %6599 = bitcast i32* %6598 to <4 x i32>*
  %6600 = load <4 x i32>, <4 x i32>* %6599, align 16
  %6601 = bitcast i32* %6208 to <4 x i32>*
  %6602 = load <4 x i32>, <4 x i32>* %6601, align 16
  %6603 = getelementptr inbounds i32, i32* %6208, i64 4
  %6604 = bitcast i32* %6603 to <4 x i32>*
  %6605 = load <4 x i32>, <4 x i32>* %6604, align 16
  %6606 = getelementptr inbounds [16 x [2 x i16]], [16 x [2 x i16]]* @_ZN7libgav118kSgrScaleParameterE, i64 0, i64 %14, i64 1
  %6607 = load i16, i16* %6606, align 2
  %6608 = zext i16 %6607 to i32
  %6609 = add <8 x i16> %6581, %6468
  %6610 = add <8 x i16> %6609, %6579
  %6611 = add <4 x i32> %6588, %6512
  %6612 = add <4 x i32> %6611, %6583
  %6613 = add <4 x i32> %6591, %6526
  %6614 = add <4 x i32> %6613, %6586
  %6615 = shufflevector <8 x i16> %6610, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6616 = shufflevector <8 x i16> %6610, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6617 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6615, <8 x i16> %6615) #5
  %6618 = mul <4 x i32> %6612, <i32 9, i32 9, i32 9, i32 9>
  %6619 = sub <4 x i32> %6618, %6617
  %6620 = icmp sgt <4 x i32> %6619, zeroinitializer
  %6621 = select <4 x i1> %6620, <4 x i32> %6619, <4 x i32> zeroinitializer
  %6622 = insertelement <4 x i32> undef, i32 %6608, i32 0
  %6623 = shufflevector <4 x i32> %6622, <4 x i32> undef, <4 x i32> zeroinitializer
  %6624 = mul <4 x i32> %6621, %6623
  %6625 = add <4 x i32> %6624, <i32 524288, i32 524288, i32 524288, i32 524288>
  %6626 = lshr <4 x i32> %6625, <i32 20, i32 20, i32 20, i32 20>
  %6627 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6616, <8 x i16> %6616) #5
  %6628 = mul <4 x i32> %6614, <i32 9, i32 9, i32 9, i32 9>
  %6629 = sub <4 x i32> %6628, %6627
  %6630 = icmp sgt <4 x i32> %6629, zeroinitializer
  %6631 = select <4 x i1> %6630, <4 x i32> %6629, <4 x i32> zeroinitializer
  %6632 = mul <4 x i32> %6631, %6623
  %6633 = add <4 x i32> %6632, <i32 524288, i32 524288, i32 524288, i32 524288>
  %6634 = lshr <4 x i32> %6633, <i32 20, i32 20, i32 20, i32 20>
  %6635 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %6626, <4 x i32> %6634) #5
  %6636 = add <8 x i16> %6609, %6484
  %6637 = add <4 x i32> %6611, %6556
  %6638 = add <4 x i32> %6613, %6570
  %6639 = shufflevector <8 x i16> %6636, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6640 = shufflevector <8 x i16> %6636, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6641 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6639, <8 x i16> %6639) #5
  %6642 = mul <4 x i32> %6637, <i32 9, i32 9, i32 9, i32 9>
  %6643 = sub <4 x i32> %6642, %6641
  %6644 = icmp sgt <4 x i32> %6643, zeroinitializer
  %6645 = select <4 x i1> %6644, <4 x i32> %6643, <4 x i32> zeroinitializer
  %6646 = mul <4 x i32> %6645, %6623
  %6647 = add <4 x i32> %6646, <i32 524288, i32 524288, i32 524288, i32 524288>
  %6648 = lshr <4 x i32> %6647, <i32 20, i32 20, i32 20, i32 20>
  %6649 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6640, <8 x i16> %6640) #5
  %6650 = mul <4 x i32> %6638, <i32 9, i32 9, i32 9, i32 9>
  %6651 = sub <4 x i32> %6650, %6649
  %6652 = icmp sgt <4 x i32> %6651, zeroinitializer
  %6653 = select <4 x i1> %6652, <4 x i32> %6651, <4 x i32> zeroinitializer
  %6654 = mul <4 x i32> %6653, %6623
  %6655 = add <4 x i32> %6654, <i32 524288, i32 524288, i32 524288, i32 524288>
  %6656 = lshr <4 x i32> %6655, <i32 20, i32 20, i32 20, i32 20>
  %6657 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %6648, <4 x i32> %6656) #5
  %6658 = load <16 x i8>, <16 x i8>* bitcast ([256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE to <16 x i8>*), align 16
  %6659 = load <16 x i8>, <16 x i8>* bitcast (i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 16) to <16 x i8>*), align 16
  %6660 = load <16 x i8>, <16 x i8>* bitcast (i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 32) to <16 x i8>*), align 16
  %6661 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %6635, <8 x i16> %6657) #5
  %6662 = icmp ult <16 x i8> %6661, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %6663 = select <16 x i1> %6662, <16 x i8> %6661, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %6664 = icmp sgt <16 x i8> %6663, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %6665 = select <16 x i1> %6664, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %6663
  %6666 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %6665) #5
  %6667 = add nsw <16 x i8> %6663, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %6668 = icmp sgt <16 x i8> %6667, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %6669 = select <16 x i1> %6668, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %6667
  %6670 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %6669) #5
  %6671 = or <16 x i8> %6670, %6666
  %6672 = add nsw <16 x i8> %6663, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %6673 = icmp sgt <16 x i8> %6672, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %6674 = select <16 x i1> %6673, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %6672
  %6675 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %6674) #5
  %6676 = or <16 x i8> %6671, %6675
  %6677 = xor <16 x i8> %6661, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %6678 = icmp ugt <16 x i8> %6676, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %6679 = select <16 x i1> %6678, <16 x i8> %6676, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %6680 = icmp sgt <16 x i8> %6677, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %6681 = icmp sgt <16 x i8> %6677, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %6682 = sext <16 x i1> %6681 to <16 x i8>
  %6683 = icmp sgt <16 x i8> %6677, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %6684 = icmp sgt <16 x i8> %6677, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %6685 = icmp eq <16 x i8> %6677, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %6686 = zext <16 x i1> %6680 to <16 x i8>
  %6687 = sub nsw <16 x i8> %6682, %6686
  %6688 = zext <16 x i1> %6683 to <16 x i8>
  %6689 = sub nsw <16 x i8> %6687, %6688
  %6690 = zext <16 x i1> %6684 to <16 x i8>
  %6691 = sub nsw <16 x i8> %6689, %6690
  %6692 = zext <16 x i1> %6685 to <16 x i8>
  %6693 = sub nsw <16 x i8> %6691, %6692
  %6694 = add <16 x i8> %6693, %6679
  %6695 = shufflevector <16 x i8> %6694, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6696 = bitcast <16 x i8> %6695 to <8 x i16>
  %6697 = shufflevector <8 x i16> %6696, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6698 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6697, <8 x i16> %6615) #5
  %6699 = shufflevector <8 x i16> %6696, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6700 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6699, <8 x i16> %6616) #5
  %6701 = mul <4 x i32> %6698, <i32 455, i32 455, i32 455, i32 455>
  %6702 = mul <4 x i32> %6700, <i32 455, i32 455, i32 455, i32 455>
  %6703 = add <4 x i32> %6701, <i32 2048, i32 2048, i32 2048, i32 2048>
  %6704 = lshr <4 x i32> %6703, <i32 12, i32 12, i32 12, i32 12>
  %6705 = add <4 x i32> %6702, <i32 2048, i32 2048, i32 2048, i32 2048>
  %6706 = lshr <4 x i32> %6705, <i32 12, i32 12, i32 12, i32 12>
  %6707 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %6704, <4 x i32> %6706) #5
  %6708 = shufflevector <16 x i8> %6694, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6709 = bitcast <16 x i8> %6708 to <8 x i16>
  %6710 = shufflevector <8 x i16> %6709, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6711 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6710, <8 x i16> %6639) #5
  %6712 = shufflevector <8 x i16> %6709, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6713 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6712, <8 x i16> %6640) #5
  %6714 = mul <4 x i32> %6711, <i32 455, i32 455, i32 455, i32 455>
  %6715 = mul <4 x i32> %6713, <i32 455, i32 455, i32 455, i32 455>
  %6716 = add <4 x i32> %6714, <i32 2048, i32 2048, i32 2048, i32 2048>
  %6717 = lshr <4 x i32> %6716, <i32 12, i32 12, i32 12, i32 12>
  %6718 = add <4 x i32> %6715, <i32 2048, i32 2048, i32 2048, i32 2048>
  %6719 = lshr <4 x i32> %6718, <i32 12, i32 12, i32 12, i32 12>
  %6720 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %6717, <4 x i32> %6719) #5
  %6721 = shufflevector <16 x i8> %6694, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6722 = load i16, i16* %6203, align 4
  %6723 = zext i16 %6722 to i32
  %6724 = shl <8 x i16> %6593, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %6725 = add <8 x i16> %6485, %6469
  %6726 = add <8 x i16> %6725, %6595
  %6727 = add <8 x i16> %6726, %6724
  %6728 = shl <4 x i32> %6597, <i32 1, i32 1, i32 1, i32 1>
  %6729 = add <4 x i32> %6557, %6513
  %6730 = add <4 x i32> %6729, %6728
  %6731 = add <4 x i32> %6730, %6602
  %6732 = shl <4 x i32> %6600, <i32 1, i32 1, i32 1, i32 1>
  %6733 = add <4 x i32> %6571, %6527
  %6734 = add <4 x i32> %6733, %6732
  %6735 = add <4 x i32> %6734, %6605
  %6736 = shufflevector <8 x i16> %6727, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6737 = shufflevector <8 x i16> %6727, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6738 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6736, <8 x i16> %6736) #5
  %6739 = mul <4 x i32> %6731, <i32 25, i32 25, i32 25, i32 25>
  %6740 = sub <4 x i32> %6739, %6738
  %6741 = icmp sgt <4 x i32> %6740, zeroinitializer
  %6742 = select <4 x i1> %6741, <4 x i32> %6740, <4 x i32> zeroinitializer
  %6743 = insertelement <4 x i32> undef, i32 %6723, i32 0
  %6744 = shufflevector <4 x i32> %6743, <4 x i32> undef, <4 x i32> zeroinitializer
  %6745 = mul <4 x i32> %6742, %6744
  %6746 = add <4 x i32> %6745, <i32 524288, i32 524288, i32 524288, i32 524288>
  %6747 = lshr <4 x i32> %6746, <i32 20, i32 20, i32 20, i32 20>
  %6748 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6737, <8 x i16> %6737) #5
  %6749 = mul <4 x i32> %6735, <i32 25, i32 25, i32 25, i32 25>
  %6750 = sub <4 x i32> %6749, %6748
  %6751 = icmp sgt <4 x i32> %6750, zeroinitializer
  %6752 = select <4 x i1> %6751, <4 x i32> %6750, <4 x i32> zeroinitializer
  %6753 = mul <4 x i32> %6752, %6744
  %6754 = add <4 x i32> %6753, <i32 524288, i32 524288, i32 524288, i32 524288>
  %6755 = lshr <4 x i32> %6754, <i32 20, i32 20, i32 20, i32 20>
  %6756 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %6747, <4 x i32> %6755) #5
  %6757 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %6756, <8 x i16> undef) #5
  %6758 = bitcast <16 x i8> %6757 to <2 x i64>
  %6759 = extractelement <2 x i64> %6758, i32 0
  %6760 = lshr i64 %6759, 8
  %6761 = lshr i64 %6759, 16
  %6762 = lshr i64 %6759, 24
  %6763 = lshr i64 %6759, 32
  %6764 = lshr i64 %6759, 40
  %6765 = lshr i64 %6759, 48
  %6766 = lshr i64 %6759, 56
  %6767 = and i64 %6759, 255
  %6768 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %6767
  %6769 = load i8, i8* %6768, align 1
  %6770 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %6769, i64 0
  %6771 = and i64 %6760, 255
  %6772 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %6771
  %6773 = load i8, i8* %6772, align 1
  %6774 = insertelement <16 x i8> %6770, i8 %6773, i64 1
  %6775 = and i64 %6761, 255
  %6776 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %6775
  %6777 = load i8, i8* %6776, align 1
  %6778 = insertelement <16 x i8> %6774, i8 %6777, i64 2
  %6779 = and i64 %6762, 255
  %6780 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %6779
  %6781 = load i8, i8* %6780, align 1
  %6782 = insertelement <16 x i8> %6778, i8 %6781, i64 3
  %6783 = and i64 %6763, 255
  %6784 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %6783
  %6785 = load i8, i8* %6784, align 1
  %6786 = insertelement <16 x i8> %6782, i8 %6785, i64 4
  %6787 = and i64 %6764, 255
  %6788 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %6787
  %6789 = load i8, i8* %6788, align 1
  %6790 = insertelement <16 x i8> %6786, i8 %6789, i64 5
  %6791 = and i64 %6765, 255
  %6792 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %6791
  %6793 = load i8, i8* %6792, align 1
  %6794 = insertelement <16 x i8> %6790, i8 %6793, i64 6
  %6795 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %6766
  %6796 = load i8, i8* %6795, align 1
  %6797 = insertelement <16 x i8> %6794, i8 %6796, i64 7
  %6798 = shufflevector <16 x i8> %6797, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6799 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %6798, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %6800 = shufflevector <8 x i16> %6799, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6801 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6800, <8 x i16> %6736) #5
  %6802 = shufflevector <8 x i16> %6799, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6803 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %6802, <8 x i16> %6737) #5
  %6804 = add <4 x i32> %6801, <i32 512, i32 512, i32 512, i32 512>
  %6805 = lshr <4 x i32> %6804, <i32 10, i32 10, i32 10, i32 10>
  %6806 = add <4 x i32> %6803, <i32 512, i32 512, i32 512, i32 512>
  %6807 = lshr <4 x i32> %6806, <i32 10, i32 10, i32 10, i32 10>
  %6808 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %6805, <4 x i32> %6807) #5
  %6809 = getelementptr inbounds i8, i8* %1, i64 13
  %6810 = getelementptr inbounds i8, i8* %6435, i64 16
  %6811 = getelementptr inbounds i16, i16* %6194, i64 8
  %6812 = getelementptr inbounds i16, i16* %6209, i64 8
  %6813 = getelementptr inbounds i16, i16* %6198, i64 8
  %6814 = getelementptr inbounds i16, i16* %6211, i64 8
  %6815 = getelementptr inbounds i32, i32* %6195, i64 8
  %6816 = getelementptr inbounds i32, i32* %6210, i64 8
  %6817 = getelementptr inbounds i32, i32* %6199, i64 8
  %6818 = getelementptr inbounds i32, i32* %6212, i64 8
  br label %6819

6819:                                             ; preds = %6819, %6395
  %6820 = phi i64 [ %6837, %6819 ], [ 0, %6395 ]
  %6821 = phi <2 x i64> [ %6839, %6819 ], [ %6437, %6395 ]
  %6822 = phi <16 x i8> [ %7481, %6819 ], [ %6721, %6395 ]
  %6823 = phi <16 x i8> [ %7418, %6819 ], [ %6694, %6395 ]
  %6824 = phi <16 x i8> [ %7571, %6819 ], [ <i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, %6395 ]
  %6825 = phi <16 x i8> [ %7571, %6819 ], [ %6797, %6395 ]
  %6826 = phi <8 x i16> [ %7199, %6819 ], [ %6453, %6395 ]
  %6827 = phi <8 x i16> [ %7196, %6819 ], [ %6450, %6395 ]
  %6828 = phi <8 x i16> [ %7479, %6819 ], [ %6720, %6395 ]
  %6829 = phi <8 x i16> [ %7416, %6819 ], [ %6707, %6395 ]
  %6830 = phi <8 x i16> [ %7582, %6819 ], [ %6808, %6395 ]
  %6831 = phi <2 x i64> [ %6842, %6819 ], [ %6439, %6395 ]
  %6832 = phi i16* [ %7855, %6819 ], [ %6219, %6395 ]
  %6833 = phi i32* [ %7856, %6819 ], [ %6220, %6395 ]
  %6834 = bitcast <16 x i8> %6823 to <2 x i64>
  %6835 = bitcast <16 x i8> %6822 to <2 x i64>
  %6836 = getelementptr inbounds i8, i8* %6809, i64 %6820
  %6837 = add nuw nsw i64 %6820, 16
  %6838 = bitcast i8* %6836 to <2 x i64>*
  %6839 = load <2 x i64>, <2 x i64>* %6838, align 1
  %6840 = getelementptr inbounds i8, i8* %6810, i64 %6820
  %6841 = bitcast i8* %6840 to <2 x i64>*
  %6842 = load <2 x i64>, <2 x i64>* %6841, align 1
  %6843 = or i64 %6820, 8
  %6844 = bitcast <2 x i64> %6839 to <16 x i8>
  %6845 = bitcast <2 x i64> %6821 to <16 x i8>
  %6846 = shufflevector <16 x i8> %6845, <16 x i8> %6844, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6847 = shufflevector <16 x i8> %6845, <16 x i8> %6844, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %6848 = shufflevector <16 x i8> %6845, <16 x i8> %6844, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %6849 = shufflevector <16 x i8> %6845, <16 x i8> %6844, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %6850 = shufflevector <16 x i8> %6845, <16 x i8> %6844, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %6851 = shufflevector <16 x i8> %6846, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6852 = shufflevector <16 x i8> %6850, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6853 = bitcast <16 x i8> %6851 to <8 x i16>
  %6854 = bitcast <16 x i8> %6852 to <8 x i16>
  %6855 = add <8 x i16> %6854, %6853
  %6856 = shufflevector <16 x i8> %6846, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6857 = shufflevector <16 x i8> %6850, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6858 = bitcast <16 x i8> %6856 to <8 x i16>
  %6859 = bitcast <16 x i8> %6857 to <8 x i16>
  %6860 = add <8 x i16> %6859, %6858
  %6861 = shufflevector <16 x i8> %6847, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6862 = shufflevector <16 x i8> %6848, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6863 = bitcast <16 x i8> %6861 to <8 x i16>
  %6864 = bitcast <16 x i8> %6862 to <8 x i16>
  %6865 = add <8 x i16> %6864, %6863
  %6866 = shufflevector <16 x i8> %6849, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6867 = bitcast <16 x i8> %6866 to <8 x i16>
  %6868 = add <8 x i16> %6865, %6867
  %6869 = shufflevector <16 x i8> %6847, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6870 = shufflevector <16 x i8> %6848, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6871 = bitcast <16 x i8> %6869 to <8 x i16>
  %6872 = bitcast <16 x i8> %6870 to <8 x i16>
  %6873 = add <8 x i16> %6872, %6871
  %6874 = shufflevector <16 x i8> %6849, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6875 = bitcast <16 x i8> %6874 to <8 x i16>
  %6876 = add <8 x i16> %6873, %6875
  %6877 = add <8 x i16> %6855, %6868
  %6878 = add <8 x i16> %6860, %6876
  %6879 = getelementptr inbounds i16, i16* %6194, i64 %6843
  %6880 = bitcast i16* %6879 to <8 x i16>*
  store <8 x i16> %6868, <8 x i16>* %6880, align 16
  %6881 = getelementptr inbounds i16, i16* %6811, i64 %6843
  %6882 = bitcast i16* %6881 to <8 x i16>*
  store <8 x i16> %6876, <8 x i16>* %6882, align 16
  %6883 = getelementptr inbounds i16, i16* %6209, i64 %6843
  %6884 = bitcast i16* %6883 to <8 x i16>*
  store <8 x i16> %6877, <8 x i16>* %6884, align 16
  %6885 = getelementptr inbounds i16, i16* %6812, i64 %6843
  %6886 = bitcast i16* %6885 to <8 x i16>*
  store <8 x i16> %6878, <8 x i16>* %6886, align 16
  %6887 = bitcast <2 x i64> %6842 to <16 x i8>
  %6888 = bitcast <2 x i64> %6831 to <16 x i8>
  %6889 = shufflevector <16 x i8> %6888, <16 x i8> %6887, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6890 = shufflevector <16 x i8> %6888, <16 x i8> %6887, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %6891 = shufflevector <16 x i8> %6888, <16 x i8> %6887, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %6892 = shufflevector <16 x i8> %6888, <16 x i8> %6887, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %6893 = shufflevector <16 x i8> %6888, <16 x i8> %6887, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %6894 = shufflevector <16 x i8> %6889, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6895 = shufflevector <16 x i8> %6893, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6896 = bitcast <16 x i8> %6894 to <8 x i16>
  %6897 = bitcast <16 x i8> %6895 to <8 x i16>
  %6898 = add <8 x i16> %6897, %6896
  %6899 = shufflevector <16 x i8> %6889, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6900 = shufflevector <16 x i8> %6893, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6901 = bitcast <16 x i8> %6899 to <8 x i16>
  %6902 = bitcast <16 x i8> %6900 to <8 x i16>
  %6903 = add <8 x i16> %6902, %6901
  %6904 = shufflevector <16 x i8> %6890, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6905 = shufflevector <16 x i8> %6891, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6906 = bitcast <16 x i8> %6904 to <8 x i16>
  %6907 = bitcast <16 x i8> %6905 to <8 x i16>
  %6908 = add <8 x i16> %6907, %6906
  %6909 = shufflevector <16 x i8> %6892, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6910 = bitcast <16 x i8> %6909 to <8 x i16>
  %6911 = add <8 x i16> %6908, %6910
  %6912 = shufflevector <16 x i8> %6890, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6913 = shufflevector <16 x i8> %6891, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6914 = bitcast <16 x i8> %6912 to <8 x i16>
  %6915 = bitcast <16 x i8> %6913 to <8 x i16>
  %6916 = add <8 x i16> %6915, %6914
  %6917 = shufflevector <16 x i8> %6892, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %6918 = bitcast <16 x i8> %6917 to <8 x i16>
  %6919 = add <8 x i16> %6916, %6918
  %6920 = add <8 x i16> %6898, %6911
  %6921 = add <8 x i16> %6903, %6919
  %6922 = getelementptr inbounds i16, i16* %6198, i64 %6843
  %6923 = bitcast i16* %6922 to <8 x i16>*
  store <8 x i16> %6911, <8 x i16>* %6923, align 16
  %6924 = getelementptr inbounds i16, i16* %6813, i64 %6843
  %6925 = bitcast i16* %6924 to <8 x i16>*
  store <8 x i16> %6919, <8 x i16>* %6925, align 16
  %6926 = getelementptr inbounds i16, i16* %6211, i64 %6843
  %6927 = bitcast i16* %6926 to <8 x i16>*
  store <8 x i16> %6920, <8 x i16>* %6927, align 16
  %6928 = getelementptr inbounds i16, i16* %6814, i64 %6843
  %6929 = bitcast i16* %6928 to <8 x i16>*
  store <8 x i16> %6921, <8 x i16>* %6929, align 16
  %6930 = shufflevector <16 x i8> %6844, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6931 = bitcast <16 x i8> %6930 to <8 x i16>
  %6932 = mul <8 x i16> %6931, %6931
  %6933 = shufflevector <16 x i8> %6887, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %6934 = bitcast <16 x i8> %6933 to <8 x i16>
  %6935 = mul <8 x i16> %6934, %6934
  %6936 = bitcast <8 x i16> %6932 to <16 x i8>
  %6937 = bitcast <8 x i16> %6827 to <16 x i8>
  %6938 = shufflevector <16 x i8> %6937, <16 x i8> %6936, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %6939 = bitcast <16 x i8> %6938 to <8 x i16>
  %6940 = shufflevector <16 x i8> %6937, <16 x i8> %6936, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %6941 = bitcast <16 x i8> %6940 to <8 x i16>
  %6942 = shufflevector <16 x i8> %6937, <16 x i8> %6936, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %6943 = bitcast <16 x i8> %6942 to <8 x i16>
  %6944 = shufflevector <16 x i8> %6937, <16 x i8> %6936, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6945 = bitcast <16 x i8> %6944 to <8 x i16>
  %6946 = shufflevector <8 x i16> %6827, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6947 = shufflevector <8 x i16> %6945, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6948 = bitcast <8 x i16> %6946 to <4 x i32>
  %6949 = bitcast <8 x i16> %6947 to <4 x i32>
  %6950 = add <4 x i32> %6949, %6948
  %6951 = shufflevector <8 x i16> %6939, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6952 = shufflevector <8 x i16> %6941, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6953 = bitcast <8 x i16> %6951 to <4 x i32>
  %6954 = bitcast <8 x i16> %6952 to <4 x i32>
  %6955 = add <4 x i32> %6954, %6953
  %6956 = shufflevector <8 x i16> %6943, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6957 = bitcast <8 x i16> %6956 to <4 x i32>
  %6958 = add <4 x i32> %6955, %6957
  %6959 = add <4 x i32> %6950, %6958
  %6960 = shufflevector <8 x i16> %6827, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6961 = shufflevector <8 x i16> %6945, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6962 = bitcast <8 x i16> %6960 to <4 x i32>
  %6963 = bitcast <8 x i16> %6961 to <4 x i32>
  %6964 = add <4 x i32> %6963, %6962
  %6965 = shufflevector <8 x i16> %6939, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6966 = shufflevector <8 x i16> %6941, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6967 = bitcast <8 x i16> %6965 to <4 x i32>
  %6968 = bitcast <8 x i16> %6966 to <4 x i32>
  %6969 = add <4 x i32> %6968, %6967
  %6970 = shufflevector <8 x i16> %6943, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %6971 = bitcast <8 x i16> %6970 to <4 x i32>
  %6972 = add <4 x i32> %6969, %6971
  %6973 = add <4 x i32> %6964, %6972
  %6974 = getelementptr inbounds i32, i32* %6195, i64 %6843
  %6975 = bitcast i32* %6974 to <4 x i32>*
  store <4 x i32> %6958, <4 x i32>* %6975, align 16
  %6976 = getelementptr inbounds i32, i32* %6974, i64 4
  %6977 = bitcast i32* %6976 to <4 x i32>*
  store <4 x i32> %6972, <4 x i32>* %6977, align 16
  %6978 = getelementptr inbounds i32, i32* %6210, i64 %6843
  %6979 = bitcast i32* %6978 to <4 x i32>*
  store <4 x i32> %6959, <4 x i32>* %6979, align 16
  %6980 = getelementptr inbounds i32, i32* %6978, i64 4
  %6981 = bitcast i32* %6980 to <4 x i32>*
  store <4 x i32> %6973, <4 x i32>* %6981, align 16
  %6982 = bitcast <8 x i16> %6935 to <16 x i8>
  %6983 = bitcast <8 x i16> %6826 to <16 x i8>
  %6984 = shufflevector <16 x i8> %6983, <16 x i8> %6982, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %6985 = bitcast <16 x i8> %6984 to <8 x i16>
  %6986 = shufflevector <16 x i8> %6983, <16 x i8> %6982, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %6987 = bitcast <16 x i8> %6986 to <8 x i16>
  %6988 = shufflevector <16 x i8> %6983, <16 x i8> %6982, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %6989 = bitcast <16 x i8> %6988 to <8 x i16>
  %6990 = shufflevector <16 x i8> %6983, <16 x i8> %6982, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %6991 = bitcast <16 x i8> %6990 to <8 x i16>
  %6992 = shufflevector <8 x i16> %6826, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6993 = shufflevector <8 x i16> %6991, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6994 = bitcast <8 x i16> %6992 to <4 x i32>
  %6995 = bitcast <8 x i16> %6993 to <4 x i32>
  %6996 = add <4 x i32> %6995, %6994
  %6997 = shufflevector <8 x i16> %6985, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6998 = shufflevector <8 x i16> %6987, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %6999 = bitcast <8 x i16> %6997 to <4 x i32>
  %7000 = bitcast <8 x i16> %6998 to <4 x i32>
  %7001 = add <4 x i32> %7000, %6999
  %7002 = shufflevector <8 x i16> %6989, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7003 = bitcast <8 x i16> %7002 to <4 x i32>
  %7004 = add <4 x i32> %7001, %7003
  %7005 = add <4 x i32> %6996, %7004
  %7006 = shufflevector <8 x i16> %6826, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7007 = shufflevector <8 x i16> %6991, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7008 = bitcast <8 x i16> %7006 to <4 x i32>
  %7009 = bitcast <8 x i16> %7007 to <4 x i32>
  %7010 = add <4 x i32> %7009, %7008
  %7011 = shufflevector <8 x i16> %6985, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7012 = shufflevector <8 x i16> %6987, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7013 = bitcast <8 x i16> %7011 to <4 x i32>
  %7014 = bitcast <8 x i16> %7012 to <4 x i32>
  %7015 = add <4 x i32> %7014, %7013
  %7016 = shufflevector <8 x i16> %6989, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7017 = bitcast <8 x i16> %7016 to <4 x i32>
  %7018 = add <4 x i32> %7015, %7017
  %7019 = add <4 x i32> %7010, %7018
  %7020 = getelementptr inbounds i32, i32* %6199, i64 %6843
  %7021 = bitcast i32* %7020 to <4 x i32>*
  store <4 x i32> %7004, <4 x i32>* %7021, align 16
  %7022 = getelementptr inbounds i32, i32* %7020, i64 4
  %7023 = bitcast i32* %7022 to <4 x i32>*
  store <4 x i32> %7018, <4 x i32>* %7023, align 16
  %7024 = getelementptr inbounds i32, i32* %6212, i64 %6843
  %7025 = bitcast i32* %7024 to <4 x i32>*
  store <4 x i32> %7005, <4 x i32>* %7025, align 16
  %7026 = getelementptr inbounds i32, i32* %7024, i64 4
  %7027 = bitcast i32* %7026 to <4 x i32>*
  store <4 x i32> %7019, <4 x i32>* %7027, align 16
  %7028 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %6843
  %7029 = bitcast i16* %7028 to <8 x i16>*
  %7030 = load <8 x i16>, <8 x i16>* %7029, align 16
  %7031 = getelementptr inbounds i16, i16* %6190, i64 %6843
  %7032 = bitcast i16* %7031 to <8 x i16>*
  %7033 = load <8 x i16>, <8 x i16>* %7032, align 16
  %7034 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 %6843
  %7035 = bitcast i32* %7034 to <4 x i32>*
  %7036 = load <4 x i32>, <4 x i32>* %7035, align 16
  %7037 = getelementptr inbounds i32, i32* %7034, i64 4
  %7038 = bitcast i32* %7037 to <4 x i32>*
  %7039 = load <4 x i32>, <4 x i32>* %7038, align 16
  %7040 = getelementptr inbounds i32, i32* %6191, i64 %6843
  %7041 = bitcast i32* %7040 to <4 x i32>*
  %7042 = load <4 x i32>, <4 x i32>* %7041, align 16
  %7043 = getelementptr inbounds i32, i32* %7040, i64 4
  %7044 = bitcast i32* %7043 to <4 x i32>*
  %7045 = load <4 x i32>, <4 x i32>* %7044, align 16
  %7046 = add <8 x i16> %7033, %6868
  %7047 = add <8 x i16> %7046, %7030
  %7048 = add <4 x i32> %7042, %6958
  %7049 = add <4 x i32> %7048, %7036
  %7050 = add <4 x i32> %7045, %6972
  %7051 = add <4 x i32> %7050, %7039
  %7052 = shufflevector <8 x i16> %7047, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7053 = shufflevector <8 x i16> %7047, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7054 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7052, <8 x i16> %7052) #5
  %7055 = mul <4 x i32> %7049, <i32 9, i32 9, i32 9, i32 9>
  %7056 = sub <4 x i32> %7055, %7054
  %7057 = icmp sgt <4 x i32> %7056, zeroinitializer
  %7058 = select <4 x i1> %7057, <4 x i32> %7056, <4 x i32> zeroinitializer
  %7059 = mul <4 x i32> %7058, %6623
  %7060 = add <4 x i32> %7059, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7061 = lshr <4 x i32> %7060, <i32 20, i32 20, i32 20, i32 20>
  %7062 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7053, <8 x i16> %7053) #5
  %7063 = mul <4 x i32> %7051, <i32 9, i32 9, i32 9, i32 9>
  %7064 = sub <4 x i32> %7063, %7062
  %7065 = icmp sgt <4 x i32> %7064, zeroinitializer
  %7066 = select <4 x i1> %7065, <4 x i32> %7064, <4 x i32> zeroinitializer
  %7067 = mul <4 x i32> %7066, %6623
  %7068 = add <4 x i32> %7067, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7069 = lshr <4 x i32> %7068, <i32 20, i32 20, i32 20, i32 20>
  %7070 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7061, <4 x i32> %7069) #5
  %7071 = add <8 x i16> %7046, %6911
  %7072 = add <4 x i32> %7048, %7004
  %7073 = add <4 x i32> %7050, %7018
  %7074 = shufflevector <8 x i16> %7071, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7075 = shufflevector <8 x i16> %7071, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7076 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7074, <8 x i16> %7074) #5
  %7077 = mul <4 x i32> %7072, <i32 9, i32 9, i32 9, i32 9>
  %7078 = sub <4 x i32> %7077, %7076
  %7079 = icmp sgt <4 x i32> %7078, zeroinitializer
  %7080 = select <4 x i1> %7079, <4 x i32> %7078, <4 x i32> zeroinitializer
  %7081 = mul <4 x i32> %7080, %6623
  %7082 = add <4 x i32> %7081, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7083 = lshr <4 x i32> %7082, <i32 20, i32 20, i32 20, i32 20>
  %7084 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7075, <8 x i16> %7075) #5
  %7085 = mul <4 x i32> %7073, <i32 9, i32 9, i32 9, i32 9>
  %7086 = sub <4 x i32> %7085, %7084
  %7087 = icmp sgt <4 x i32> %7086, zeroinitializer
  %7088 = select <4 x i1> %7087, <4 x i32> %7086, <4 x i32> zeroinitializer
  %7089 = mul <4 x i32> %7088, %6623
  %7090 = add <4 x i32> %7089, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7091 = lshr <4 x i32> %7090, <i32 20, i32 20, i32 20, i32 20>
  %7092 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7083, <4 x i32> %7091) #5
  %7093 = getelementptr inbounds i16, i16* %6205, i64 %6843
  %7094 = bitcast i16* %7093 to <8 x i16>*
  %7095 = load <8 x i16>, <8 x i16>* %7094, align 16
  %7096 = getelementptr inbounds i16, i16* %6207, i64 %6843
  %7097 = bitcast i16* %7096 to <8 x i16>*
  %7098 = load <8 x i16>, <8 x i16>* %7097, align 16
  %7099 = getelementptr inbounds i32, i32* %6206, i64 %6843
  %7100 = bitcast i32* %7099 to <4 x i32>*
  %7101 = load <4 x i32>, <4 x i32>* %7100, align 16
  %7102 = getelementptr inbounds i32, i32* %7099, i64 4
  %7103 = bitcast i32* %7102 to <4 x i32>*
  %7104 = load <4 x i32>, <4 x i32>* %7103, align 16
  %7105 = getelementptr inbounds i32, i32* %6208, i64 %6843
  %7106 = bitcast i32* %7105 to <4 x i32>*
  %7107 = load <4 x i32>, <4 x i32>* %7106, align 16
  %7108 = getelementptr inbounds i32, i32* %7105, i64 4
  %7109 = bitcast i32* %7108 to <4 x i32>*
  %7110 = load <4 x i32>, <4 x i32>* %7109, align 16
  %7111 = shl <8 x i16> %7095, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %7112 = add <8 x i16> %6920, %6877
  %7113 = add <8 x i16> %7112, %7098
  %7114 = add <8 x i16> %7113, %7111
  %7115 = shl <4 x i32> %7101, <i32 1, i32 1, i32 1, i32 1>
  %7116 = add <4 x i32> %7005, %6959
  %7117 = add <4 x i32> %7116, %7115
  %7118 = add <4 x i32> %7117, %7107
  %7119 = shl <4 x i32> %7104, <i32 1, i32 1, i32 1, i32 1>
  %7120 = add <4 x i32> %7019, %6973
  %7121 = add <4 x i32> %7120, %7119
  %7122 = add <4 x i32> %7121, %7110
  %7123 = shufflevector <8 x i16> %7114, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7124 = shufflevector <8 x i16> %7114, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7125 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7123, <8 x i16> %7123) #5
  %7126 = mul <4 x i32> %7118, <i32 25, i32 25, i32 25, i32 25>
  %7127 = sub <4 x i32> %7126, %7125
  %7128 = icmp sgt <4 x i32> %7127, zeroinitializer
  %7129 = select <4 x i1> %7128, <4 x i32> %7127, <4 x i32> zeroinitializer
  %7130 = mul <4 x i32> %7129, %6744
  %7131 = add <4 x i32> %7130, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7132 = lshr <4 x i32> %7131, <i32 20, i32 20, i32 20, i32 20>
  %7133 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7124, <8 x i16> %7124) #5
  %7134 = mul <4 x i32> %7122, <i32 25, i32 25, i32 25, i32 25>
  %7135 = sub <4 x i32> %7134, %7133
  %7136 = icmp sgt <4 x i32> %7135, zeroinitializer
  %7137 = select <4 x i1> %7136, <4 x i32> %7135, <4 x i32> zeroinitializer
  %7138 = mul <4 x i32> %7137, %6744
  %7139 = add <4 x i32> %7138, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7140 = lshr <4 x i32> %7139, <i32 20, i32 20, i32 20, i32 20>
  %7141 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7132, <4 x i32> %7140) #5
  %7142 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %7141, <8 x i16> undef) #5
  %7143 = bitcast <16 x i8> %7142 to <2 x i64>
  %7144 = extractelement <2 x i64> %7143, i32 0
  %7145 = lshr i64 %7144, 8
  %7146 = lshr i64 %7144, 16
  %7147 = lshr i64 %7144, 24
  %7148 = lshr i64 %7144, 32
  %7149 = lshr i64 %7144, 40
  %7150 = lshr i64 %7144, 48
  %7151 = lshr i64 %7144, 56
  %7152 = and i64 %7144, 255
  %7153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7152
  %7154 = load i8, i8* %7153, align 1
  %7155 = insertelement <16 x i8> %6825, i8 %7154, i64 8
  %7156 = and i64 %7145, 255
  %7157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7156
  %7158 = load i8, i8* %7157, align 1
  %7159 = insertelement <16 x i8> %7155, i8 %7158, i64 9
  %7160 = and i64 %7146, 255
  %7161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7160
  %7162 = load i8, i8* %7161, align 1
  %7163 = insertelement <16 x i8> %7159, i8 %7162, i64 10
  %7164 = and i64 %7147, 255
  %7165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7164
  %7166 = load i8, i8* %7165, align 1
  %7167 = insertelement <16 x i8> %7163, i8 %7166, i64 11
  %7168 = and i64 %7148, 255
  %7169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7168
  %7170 = load i8, i8* %7169, align 1
  %7171 = insertelement <16 x i8> %7167, i8 %7170, i64 12
  %7172 = and i64 %7149, 255
  %7173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7172
  %7174 = load i8, i8* %7173, align 1
  %7175 = insertelement <16 x i8> %7171, i8 %7174, i64 13
  %7176 = and i64 %7150, 255
  %7177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7176
  %7178 = load i8, i8* %7177, align 1
  %7179 = insertelement <16 x i8> %7175, i8 %7178, i64 14
  %7180 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7151
  %7181 = load i8, i8* %7180, align 1
  %7182 = insertelement <16 x i8> %7179, i8 %7181, i64 15
  %7183 = shufflevector <16 x i8> %7182, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7184 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %7183, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %7185 = shufflevector <8 x i16> %7184, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7186 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7185, <8 x i16> %7123) #5
  %7187 = shufflevector <8 x i16> %7184, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7188 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7187, <8 x i16> %7124) #5
  %7189 = add <4 x i32> %7186, <i32 512, i32 512, i32 512, i32 512>
  %7190 = lshr <4 x i32> %7189, <i32 10, i32 10, i32 10, i32 10>
  %7191 = add <4 x i32> %7188, <i32 512, i32 512, i32 512, i32 512>
  %7192 = lshr <4 x i32> %7191, <i32 10, i32 10, i32 10, i32 10>
  %7193 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7190, <4 x i32> %7192) #5
  %7194 = shufflevector <16 x i8> %6844, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7195 = bitcast <16 x i8> %7194 to <8 x i16>
  %7196 = mul <8 x i16> %7195, %7195
  %7197 = shufflevector <16 x i8> %6887, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7198 = bitcast <16 x i8> %7197 to <8 x i16>
  %7199 = mul <8 x i16> %7198, %7198
  %7200 = bitcast <8 x i16> %7196 to <16 x i8>
  %7201 = shufflevector <16 x i8> %6936, <16 x i8> %7200, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7202 = bitcast <16 x i8> %7201 to <8 x i16>
  %7203 = shufflevector <16 x i8> %6936, <16 x i8> %7200, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %7204 = bitcast <16 x i8> %7203 to <8 x i16>
  %7205 = shufflevector <16 x i8> %6936, <16 x i8> %7200, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %7206 = bitcast <16 x i8> %7205 to <8 x i16>
  %7207 = shufflevector <16 x i8> %6936, <16 x i8> %7200, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %7208 = bitcast <16 x i8> %7207 to <8 x i16>
  %7209 = shufflevector <8 x i16> %6932, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7210 = shufflevector <8 x i16> %7208, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7211 = bitcast <8 x i16> %7209 to <4 x i32>
  %7212 = bitcast <8 x i16> %7210 to <4 x i32>
  %7213 = add <4 x i32> %7212, %7211
  %7214 = shufflevector <8 x i16> %7202, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7215 = shufflevector <8 x i16> %7204, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7216 = bitcast <8 x i16> %7214 to <4 x i32>
  %7217 = bitcast <8 x i16> %7215 to <4 x i32>
  %7218 = add <4 x i32> %7217, %7216
  %7219 = shufflevector <8 x i16> %7206, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7220 = bitcast <8 x i16> %7219 to <4 x i32>
  %7221 = add <4 x i32> %7218, %7220
  %7222 = add <4 x i32> %7213, %7221
  %7223 = shufflevector <8 x i16> %6932, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7224 = shufflevector <8 x i16> %7208, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7225 = bitcast <8 x i16> %7223 to <4 x i32>
  %7226 = bitcast <8 x i16> %7224 to <4 x i32>
  %7227 = add <4 x i32> %7226, %7225
  %7228 = shufflevector <8 x i16> %7202, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7229 = shufflevector <8 x i16> %7204, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7230 = bitcast <8 x i16> %7228 to <4 x i32>
  %7231 = bitcast <8 x i16> %7229 to <4 x i32>
  %7232 = add <4 x i32> %7231, %7230
  %7233 = shufflevector <8 x i16> %7206, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7234 = bitcast <8 x i16> %7233 to <4 x i32>
  %7235 = add <4 x i32> %7232, %7234
  %7236 = add <4 x i32> %7227, %7235
  %7237 = getelementptr inbounds i32, i32* %6815, i64 %6843
  %7238 = bitcast i32* %7237 to <4 x i32>*
  store <4 x i32> %7221, <4 x i32>* %7238, align 16
  %7239 = getelementptr inbounds i32, i32* %7237, i64 4
  %7240 = bitcast i32* %7239 to <4 x i32>*
  store <4 x i32> %7235, <4 x i32>* %7240, align 16
  %7241 = getelementptr inbounds i32, i32* %6816, i64 %6843
  %7242 = bitcast i32* %7241 to <4 x i32>*
  store <4 x i32> %7222, <4 x i32>* %7242, align 16
  %7243 = getelementptr inbounds i32, i32* %7241, i64 4
  %7244 = bitcast i32* %7243 to <4 x i32>*
  store <4 x i32> %7236, <4 x i32>* %7244, align 16
  %7245 = bitcast <8 x i16> %7199 to <16 x i8>
  %7246 = shufflevector <16 x i8> %6982, <16 x i8> %7245, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7247 = bitcast <16 x i8> %7246 to <8 x i16>
  %7248 = shufflevector <16 x i8> %6982, <16 x i8> %7245, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %7249 = bitcast <16 x i8> %7248 to <8 x i16>
  %7250 = shufflevector <16 x i8> %6982, <16 x i8> %7245, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %7251 = bitcast <16 x i8> %7250 to <8 x i16>
  %7252 = shufflevector <16 x i8> %6982, <16 x i8> %7245, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %7253 = bitcast <16 x i8> %7252 to <8 x i16>
  %7254 = shufflevector <8 x i16> %6935, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7255 = shufflevector <8 x i16> %7253, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7256 = bitcast <8 x i16> %7254 to <4 x i32>
  %7257 = bitcast <8 x i16> %7255 to <4 x i32>
  %7258 = add <4 x i32> %7257, %7256
  %7259 = shufflevector <8 x i16> %7247, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7260 = shufflevector <8 x i16> %7249, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7261 = bitcast <8 x i16> %7259 to <4 x i32>
  %7262 = bitcast <8 x i16> %7260 to <4 x i32>
  %7263 = add <4 x i32> %7262, %7261
  %7264 = shufflevector <8 x i16> %7251, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7265 = bitcast <8 x i16> %7264 to <4 x i32>
  %7266 = add <4 x i32> %7263, %7265
  %7267 = add <4 x i32> %7258, %7266
  %7268 = shufflevector <8 x i16> %6935, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7269 = shufflevector <8 x i16> %7253, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7270 = bitcast <8 x i16> %7268 to <4 x i32>
  %7271 = bitcast <8 x i16> %7269 to <4 x i32>
  %7272 = add <4 x i32> %7271, %7270
  %7273 = shufflevector <8 x i16> %7247, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7274 = shufflevector <8 x i16> %7249, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7275 = bitcast <8 x i16> %7273 to <4 x i32>
  %7276 = bitcast <8 x i16> %7274 to <4 x i32>
  %7277 = add <4 x i32> %7276, %7275
  %7278 = shufflevector <8 x i16> %7251, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7279 = bitcast <8 x i16> %7278 to <4 x i32>
  %7280 = add <4 x i32> %7277, %7279
  %7281 = add <4 x i32> %7272, %7280
  %7282 = getelementptr inbounds i32, i32* %6817, i64 %6843
  %7283 = bitcast i32* %7282 to <4 x i32>*
  store <4 x i32> %7266, <4 x i32>* %7283, align 16
  %7284 = getelementptr inbounds i32, i32* %7282, i64 4
  %7285 = bitcast i32* %7284 to <4 x i32>*
  store <4 x i32> %7280, <4 x i32>* %7285, align 16
  %7286 = getelementptr inbounds i32, i32* %6818, i64 %6843
  %7287 = bitcast i32* %7286 to <4 x i32>*
  store <4 x i32> %7267, <4 x i32>* %7287, align 16
  %7288 = getelementptr inbounds i32, i32* %7286, i64 4
  %7289 = bitcast i32* %7288 to <4 x i32>*
  store <4 x i32> %7281, <4 x i32>* %7289, align 16
  %7290 = add nuw nsw i64 %6843, 8
  %7291 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 0, i64 %7290
  %7292 = bitcast i16* %7291 to <8 x i16>*
  %7293 = load <8 x i16>, <8 x i16>* %7292, align 16
  %7294 = getelementptr inbounds i16, i16* %6190, i64 %7290
  %7295 = bitcast i16* %7294 to <8 x i16>*
  %7296 = load <8 x i16>, <8 x i16>* %7295, align 16
  %7297 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 2, i64 %7290
  %7298 = bitcast i32* %7297 to <4 x i32>*
  %7299 = load <4 x i32>, <4 x i32>* %7298, align 16
  %7300 = getelementptr inbounds i32, i32* %7297, i64 4
  %7301 = bitcast i32* %7300 to <4 x i32>*
  %7302 = load <4 x i32>, <4 x i32>* %7301, align 16
  %7303 = getelementptr inbounds i32, i32* %6191, i64 %7290
  %7304 = bitcast i32* %7303 to <4 x i32>*
  %7305 = load <4 x i32>, <4 x i32>* %7304, align 16
  %7306 = getelementptr inbounds i32, i32* %7303, i64 4
  %7307 = bitcast i32* %7306 to <4 x i32>*
  %7308 = load <4 x i32>, <4 x i32>* %7307, align 16
  %7309 = add <8 x i16> %7296, %6876
  %7310 = add <8 x i16> %7309, %7293
  %7311 = add <4 x i32> %7305, %7221
  %7312 = add <4 x i32> %7311, %7299
  %7313 = add <4 x i32> %7308, %7235
  %7314 = add <4 x i32> %7313, %7302
  %7315 = shufflevector <8 x i16> %7310, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7316 = shufflevector <8 x i16> %7310, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7317 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7315, <8 x i16> %7315) #5
  %7318 = mul <4 x i32> %7312, <i32 9, i32 9, i32 9, i32 9>
  %7319 = sub <4 x i32> %7318, %7317
  %7320 = icmp sgt <4 x i32> %7319, zeroinitializer
  %7321 = select <4 x i1> %7320, <4 x i32> %7319, <4 x i32> zeroinitializer
  %7322 = mul <4 x i32> %7321, %6623
  %7323 = add <4 x i32> %7322, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7324 = lshr <4 x i32> %7323, <i32 20, i32 20, i32 20, i32 20>
  %7325 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7316, <8 x i16> %7316) #5
  %7326 = mul <4 x i32> %7314, <i32 9, i32 9, i32 9, i32 9>
  %7327 = sub <4 x i32> %7326, %7325
  %7328 = icmp sgt <4 x i32> %7327, zeroinitializer
  %7329 = select <4 x i1> %7328, <4 x i32> %7327, <4 x i32> zeroinitializer
  %7330 = mul <4 x i32> %7329, %6623
  %7331 = add <4 x i32> %7330, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7332 = lshr <4 x i32> %7331, <i32 20, i32 20, i32 20, i32 20>
  %7333 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7324, <4 x i32> %7332) #5
  %7334 = add <8 x i16> %7309, %6919
  %7335 = add <4 x i32> %7311, %7266
  %7336 = add <4 x i32> %7313, %7280
  %7337 = shufflevector <8 x i16> %7334, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7338 = shufflevector <8 x i16> %7334, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7339 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7337, <8 x i16> %7337) #5
  %7340 = mul <4 x i32> %7335, <i32 9, i32 9, i32 9, i32 9>
  %7341 = sub <4 x i32> %7340, %7339
  %7342 = icmp sgt <4 x i32> %7341, zeroinitializer
  %7343 = select <4 x i1> %7342, <4 x i32> %7341, <4 x i32> zeroinitializer
  %7344 = mul <4 x i32> %7343, %6623
  %7345 = add <4 x i32> %7344, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7346 = lshr <4 x i32> %7345, <i32 20, i32 20, i32 20, i32 20>
  %7347 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7338, <8 x i16> %7338) #5
  %7348 = mul <4 x i32> %7336, <i32 9, i32 9, i32 9, i32 9>
  %7349 = sub <4 x i32> %7348, %7347
  %7350 = icmp sgt <4 x i32> %7349, zeroinitializer
  %7351 = select <4 x i1> %7350, <4 x i32> %7349, <4 x i32> zeroinitializer
  %7352 = mul <4 x i32> %7351, %6623
  %7353 = add <4 x i32> %7352, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7354 = lshr <4 x i32> %7353, <i32 20, i32 20, i32 20, i32 20>
  %7355 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7346, <4 x i32> %7354) #5
  %7356 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %7070, <8 x i16> %7333) #5
  %7357 = icmp ult <16 x i8> %7356, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %7358 = select <16 x i1> %7357, <16 x i8> %7356, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %7359 = icmp sgt <16 x i8> %7358, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %7360 = select <16 x i1> %7359, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %7358
  %7361 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %7360) #5
  %7362 = add nsw <16 x i8> %7358, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %7363 = icmp sgt <16 x i8> %7362, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %7364 = select <16 x i1> %7363, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %7362
  %7365 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %7364) #5
  %7366 = or <16 x i8> %7365, %7361
  %7367 = add nsw <16 x i8> %7358, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %7368 = icmp sgt <16 x i8> %7367, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %7369 = select <16 x i1> %7368, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %7367
  %7370 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %7369) #5
  %7371 = or <16 x i8> %7366, %7370
  %7372 = xor <16 x i8> %7356, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %7373 = icmp ugt <16 x i8> %7371, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %7374 = select <16 x i1> %7373, <16 x i8> %7371, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %7375 = icmp sgt <16 x i8> %7372, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %7376 = icmp sgt <16 x i8> %7372, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %7377 = sext <16 x i1> %7376 to <16 x i8>
  %7378 = icmp sgt <16 x i8> %7372, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %7379 = icmp sgt <16 x i8> %7372, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %7380 = icmp eq <16 x i8> %7372, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %7381 = zext <16 x i1> %7375 to <16 x i8>
  %7382 = sub nsw <16 x i8> %7377, %7381
  %7383 = zext <16 x i1> %7378 to <16 x i8>
  %7384 = sub nsw <16 x i8> %7382, %7383
  %7385 = zext <16 x i1> %7379 to <16 x i8>
  %7386 = sub nsw <16 x i8> %7384, %7385
  %7387 = zext <16 x i1> %7380 to <16 x i8>
  %7388 = sub nsw <16 x i8> %7386, %7387
  %7389 = add <16 x i8> %7388, %7374
  %7390 = bitcast <16 x i8> %7389 to <2 x i64>
  %7391 = shufflevector <16 x i8> %7389, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7392 = bitcast <16 x i8> %7391 to <8 x i16>
  %7393 = shufflevector <8 x i16> %7392, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7394 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7393, <8 x i16> %7052) #5
  %7395 = shufflevector <8 x i16> %7392, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7396 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7395, <8 x i16> %7053) #5
  %7397 = mul <4 x i32> %7394, <i32 455, i32 455, i32 455, i32 455>
  %7398 = mul <4 x i32> %7396, <i32 455, i32 455, i32 455, i32 455>
  %7399 = add <4 x i32> %7397, <i32 2048, i32 2048, i32 2048, i32 2048>
  %7400 = lshr <4 x i32> %7399, <i32 12, i32 12, i32 12, i32 12>
  %7401 = add <4 x i32> %7398, <i32 2048, i32 2048, i32 2048, i32 2048>
  %7402 = lshr <4 x i32> %7401, <i32 12, i32 12, i32 12, i32 12>
  %7403 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7400, <4 x i32> %7402) #5
  %7404 = shufflevector <16 x i8> %7389, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7405 = bitcast <16 x i8> %7404 to <8 x i16>
  %7406 = shufflevector <8 x i16> %7405, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7407 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7406, <8 x i16> %7315) #5
  %7408 = shufflevector <8 x i16> %7405, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7409 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7408, <8 x i16> %7316) #5
  %7410 = mul <4 x i32> %7407, <i32 455, i32 455, i32 455, i32 455>
  %7411 = mul <4 x i32> %7409, <i32 455, i32 455, i32 455, i32 455>
  %7412 = add <4 x i32> %7410, <i32 2048, i32 2048, i32 2048, i32 2048>
  %7413 = lshr <4 x i32> %7412, <i32 12, i32 12, i32 12, i32 12>
  %7414 = add <4 x i32> %7411, <i32 2048, i32 2048, i32 2048, i32 2048>
  %7415 = lshr <4 x i32> %7414, <i32 12, i32 12, i32 12, i32 12>
  %7416 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7413, <4 x i32> %7415) #5
  %7417 = shufflevector <2 x i64> %6834, <2 x i64> %7390, <2 x i32> <i32 0, i32 2>
  %7418 = shufflevector <16 x i8> %7389, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %7419 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %7092, <8 x i16> %7355) #5
  %7420 = icmp ult <16 x i8> %7419, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %7421 = select <16 x i1> %7420, <16 x i8> %7419, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %7422 = icmp sgt <16 x i8> %7421, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %7423 = select <16 x i1> %7422, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %7421
  %7424 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %7423) #5
  %7425 = add nsw <16 x i8> %7421, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %7426 = icmp sgt <16 x i8> %7425, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %7427 = select <16 x i1> %7426, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %7425
  %7428 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %7427) #5
  %7429 = or <16 x i8> %7428, %7424
  %7430 = add nsw <16 x i8> %7421, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %7431 = icmp sgt <16 x i8> %7430, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %7432 = select <16 x i1> %7431, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %7430
  %7433 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %7432) #5
  %7434 = or <16 x i8> %7429, %7433
  %7435 = xor <16 x i8> %7419, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %7436 = icmp ugt <16 x i8> %7434, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %7437 = select <16 x i1> %7436, <16 x i8> %7434, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %7438 = icmp sgt <16 x i8> %7435, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %7439 = icmp sgt <16 x i8> %7435, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %7440 = sext <16 x i1> %7439 to <16 x i8>
  %7441 = icmp sgt <16 x i8> %7435, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %7442 = icmp sgt <16 x i8> %7435, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %7443 = icmp eq <16 x i8> %7435, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %7444 = zext <16 x i1> %7438 to <16 x i8>
  %7445 = sub nsw <16 x i8> %7440, %7444
  %7446 = zext <16 x i1> %7441 to <16 x i8>
  %7447 = sub nsw <16 x i8> %7445, %7446
  %7448 = zext <16 x i1> %7442 to <16 x i8>
  %7449 = sub nsw <16 x i8> %7447, %7448
  %7450 = zext <16 x i1> %7443 to <16 x i8>
  %7451 = sub nsw <16 x i8> %7449, %7450
  %7452 = add <16 x i8> %7451, %7437
  %7453 = bitcast <16 x i8> %7452 to <2 x i64>
  %7454 = shufflevector <16 x i8> %7452, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7455 = bitcast <16 x i8> %7454 to <8 x i16>
  %7456 = shufflevector <8 x i16> %7455, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7457 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7456, <8 x i16> %7074) #5
  %7458 = shufflevector <8 x i16> %7455, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7459 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7458, <8 x i16> %7075) #5
  %7460 = mul <4 x i32> %7457, <i32 455, i32 455, i32 455, i32 455>
  %7461 = mul <4 x i32> %7459, <i32 455, i32 455, i32 455, i32 455>
  %7462 = add <4 x i32> %7460, <i32 2048, i32 2048, i32 2048, i32 2048>
  %7463 = lshr <4 x i32> %7462, <i32 12, i32 12, i32 12, i32 12>
  %7464 = add <4 x i32> %7461, <i32 2048, i32 2048, i32 2048, i32 2048>
  %7465 = lshr <4 x i32> %7464, <i32 12, i32 12, i32 12, i32 12>
  %7466 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7463, <4 x i32> %7465) #5
  %7467 = shufflevector <16 x i8> %7452, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7468 = bitcast <16 x i8> %7467 to <8 x i16>
  %7469 = shufflevector <8 x i16> %7468, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7470 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7469, <8 x i16> %7337) #5
  %7471 = shufflevector <8 x i16> %7468, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7472 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7471, <8 x i16> %7338) #5
  %7473 = mul <4 x i32> %7470, <i32 455, i32 455, i32 455, i32 455>
  %7474 = mul <4 x i32> %7472, <i32 455, i32 455, i32 455, i32 455>
  %7475 = add <4 x i32> %7473, <i32 2048, i32 2048, i32 2048, i32 2048>
  %7476 = lshr <4 x i32> %7475, <i32 12, i32 12, i32 12, i32 12>
  %7477 = add <4 x i32> %7474, <i32 2048, i32 2048, i32 2048, i32 2048>
  %7478 = lshr <4 x i32> %7477, <i32 12, i32 12, i32 12, i32 12>
  %7479 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7476, <4 x i32> %7478) #5
  %7480 = shufflevector <2 x i64> %6835, <2 x i64> %7453, <2 x i32> <i32 0, i32 2>
  %7481 = shufflevector <16 x i8> %7452, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %7482 = getelementptr inbounds i16, i16* %6205, i64 %7290
  %7483 = bitcast i16* %7482 to <8 x i16>*
  %7484 = load <8 x i16>, <8 x i16>* %7483, align 16
  %7485 = getelementptr inbounds i16, i16* %6207, i64 %7290
  %7486 = bitcast i16* %7485 to <8 x i16>*
  %7487 = load <8 x i16>, <8 x i16>* %7486, align 16
  %7488 = getelementptr inbounds i32, i32* %6206, i64 %7290
  %7489 = bitcast i32* %7488 to <4 x i32>*
  %7490 = load <4 x i32>, <4 x i32>* %7489, align 16
  %7491 = getelementptr inbounds i32, i32* %7488, i64 4
  %7492 = bitcast i32* %7491 to <4 x i32>*
  %7493 = load <4 x i32>, <4 x i32>* %7492, align 16
  %7494 = getelementptr inbounds i32, i32* %6208, i64 %7290
  %7495 = bitcast i32* %7494 to <4 x i32>*
  %7496 = load <4 x i32>, <4 x i32>* %7495, align 16
  %7497 = getelementptr inbounds i32, i32* %7494, i64 4
  %7498 = bitcast i32* %7497 to <4 x i32>*
  %7499 = load <4 x i32>, <4 x i32>* %7498, align 16
  %7500 = shl <8 x i16> %7484, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %7501 = add <8 x i16> %6921, %6878
  %7502 = add <8 x i16> %7501, %7487
  %7503 = add <8 x i16> %7502, %7500
  %7504 = shl <4 x i32> %7490, <i32 1, i32 1, i32 1, i32 1>
  %7505 = add <4 x i32> %7267, %7222
  %7506 = add <4 x i32> %7505, %7504
  %7507 = add <4 x i32> %7506, %7496
  %7508 = shl <4 x i32> %7493, <i32 1, i32 1, i32 1, i32 1>
  %7509 = add <4 x i32> %7281, %7236
  %7510 = add <4 x i32> %7509, %7508
  %7511 = add <4 x i32> %7510, %7499
  %7512 = shufflevector <8 x i16> %7503, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7513 = shufflevector <8 x i16> %7503, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7514 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7512, <8 x i16> %7512) #5
  %7515 = mul <4 x i32> %7507, <i32 25, i32 25, i32 25, i32 25>
  %7516 = sub <4 x i32> %7515, %7514
  %7517 = icmp sgt <4 x i32> %7516, zeroinitializer
  %7518 = select <4 x i1> %7517, <4 x i32> %7516, <4 x i32> zeroinitializer
  %7519 = mul <4 x i32> %7518, %6744
  %7520 = add <4 x i32> %7519, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7521 = lshr <4 x i32> %7520, <i32 20, i32 20, i32 20, i32 20>
  %7522 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7513, <8 x i16> %7513) #5
  %7523 = mul <4 x i32> %7511, <i32 25, i32 25, i32 25, i32 25>
  %7524 = sub <4 x i32> %7523, %7522
  %7525 = icmp sgt <4 x i32> %7524, zeroinitializer
  %7526 = select <4 x i1> %7525, <4 x i32> %7524, <4 x i32> zeroinitializer
  %7527 = mul <4 x i32> %7526, %6744
  %7528 = add <4 x i32> %7527, <i32 524288, i32 524288, i32 524288, i32 524288>
  %7529 = lshr <4 x i32> %7528, <i32 20, i32 20, i32 20, i32 20>
  %7530 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7521, <4 x i32> %7529) #5
  %7531 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %7530, <8 x i16> undef) #5
  %7532 = bitcast <16 x i8> %7531 to <2 x i64>
  %7533 = extractelement <2 x i64> %7532, i32 0
  %7534 = lshr i64 %7533, 8
  %7535 = lshr i64 %7533, 16
  %7536 = lshr i64 %7533, 24
  %7537 = lshr i64 %7533, 32
  %7538 = lshr i64 %7533, 40
  %7539 = lshr i64 %7533, 48
  %7540 = lshr i64 %7533, 56
  %7541 = and i64 %7533, 255
  %7542 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7541
  %7543 = load i8, i8* %7542, align 1
  %7544 = insertelement <16 x i8> %6824, i8 %7543, i64 0
  %7545 = and i64 %7534, 255
  %7546 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7545
  %7547 = load i8, i8* %7546, align 1
  %7548 = insertelement <16 x i8> %7544, i8 %7547, i64 1
  %7549 = and i64 %7535, 255
  %7550 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7549
  %7551 = load i8, i8* %7550, align 1
  %7552 = insertelement <16 x i8> %7548, i8 %7551, i64 2
  %7553 = and i64 %7536, 255
  %7554 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7553
  %7555 = load i8, i8* %7554, align 1
  %7556 = insertelement <16 x i8> %7552, i8 %7555, i64 3
  %7557 = and i64 %7537, 255
  %7558 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7557
  %7559 = load i8, i8* %7558, align 1
  %7560 = insertelement <16 x i8> %7556, i8 %7559, i64 4
  %7561 = and i64 %7538, 255
  %7562 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7561
  %7563 = load i8, i8* %7562, align 1
  %7564 = insertelement <16 x i8> %7560, i8 %7563, i64 5
  %7565 = and i64 %7539, 255
  %7566 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7565
  %7567 = load i8, i8* %7566, align 1
  %7568 = insertelement <16 x i8> %7564, i8 %7567, i64 6
  %7569 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %7540
  %7570 = load i8, i8* %7569, align 1
  %7571 = insertelement <16 x i8> %7568, i8 %7570, i64 7
  %7572 = shufflevector <16 x i8> %7571, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7573 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %7572, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %7574 = shufflevector <8 x i16> %7573, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7575 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7574, <8 x i16> %7512) #5
  %7576 = shufflevector <8 x i16> %7573, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7577 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7576, <8 x i16> %7513) #5
  %7578 = add <4 x i32> %7575, <i32 512, i32 512, i32 512, i32 512>
  %7579 = lshr <4 x i32> %7578, <i32 10, i32 10, i32 10, i32 10>
  %7580 = add <4 x i32> %7577, <i32 512, i32 512, i32 512, i32 512>
  %7581 = lshr <4 x i32> %7580, <i32 10, i32 10, i32 10, i32 10>
  %7582 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %7579, <4 x i32> %7581) #5
  %7583 = bitcast <2 x i64> %7417 to <16 x i8>
  %7584 = shufflevector <16 x i8> %7583, <16 x i8> %7418, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %7585 = shufflevector <16 x i8> %7583, <16 x i8> %7418, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7586 = shufflevector <16 x i8> %7583, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7587 = shufflevector <16 x i8> %7584, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7588 = bitcast <16 x i8> %7586 to <8 x i16>
  %7589 = bitcast <16 x i8> %7587 to <8 x i16>
  %7590 = add <8 x i16> %7589, %7588
  %7591 = shufflevector <16 x i8> %7585, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7592 = bitcast <16 x i8> %7591 to <8 x i16>
  %7593 = add <8 x i16> %7590, %7592
  %7594 = mul <8 x i16> %7593, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %7595 = add <8 x i16> %7594, %7589
  %7596 = shufflevector <16 x i8> %7583, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7597 = shufflevector <16 x i8> %7584, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7598 = bitcast <16 x i8> %7596 to <8 x i16>
  %7599 = bitcast <16 x i8> %7597 to <8 x i16>
  %7600 = add <8 x i16> %7599, %7598
  %7601 = shufflevector <16 x i8> %7585, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7602 = bitcast <16 x i8> %7601 to <8 x i16>
  %7603 = add <8 x i16> %7600, %7602
  %7604 = mul <8 x i16> %7603, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %7605 = add <8 x i16> %7604, %7599
  %7606 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 4, i64 %6820
  %7607 = bitcast i16* %7606 to <8 x i16>*
  store <8 x i16> %7595, <8 x i16>* %7607, align 16
  %7608 = getelementptr inbounds i16, i16* %7606, i64 8
  %7609 = bitcast i16* %7608 to <8 x i16>*
  store <8 x i16> %7605, <8 x i16>* %7609, align 16
  %7610 = bitcast <8 x i16> %7403 to <16 x i8>
  %7611 = bitcast <8 x i16> %6829 to <16 x i8>
  %7612 = shufflevector <16 x i8> %7611, <16 x i8> %7610, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7613 = bitcast <16 x i8> %7612 to <8 x i16>
  %7614 = shufflevector <16 x i8> %7611, <16 x i8> %7610, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %7615 = bitcast <16 x i8> %7614 to <8 x i16>
  %7616 = shufflevector <8 x i16> %6829, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7617 = shufflevector <8 x i16> %7613, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7618 = bitcast <8 x i16> %7616 to <4 x i32>
  %7619 = bitcast <8 x i16> %7617 to <4 x i32>
  %7620 = add <4 x i32> %7619, %7618
  %7621 = shufflevector <8 x i16> %7615, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7622 = bitcast <8 x i16> %7621 to <4 x i32>
  %7623 = add <4 x i32> %7620, %7622
  %7624 = mul <4 x i32> %7623, <i32 3, i32 3, i32 3, i32 3>
  %7625 = add <4 x i32> %7624, %7619
  %7626 = shufflevector <8 x i16> %6829, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7627 = shufflevector <8 x i16> %7613, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7628 = bitcast <8 x i16> %7626 to <4 x i32>
  %7629 = bitcast <8 x i16> %7627 to <4 x i32>
  %7630 = add <4 x i32> %7629, %7628
  %7631 = shufflevector <8 x i16> %7615, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7632 = bitcast <8 x i16> %7631 to <4 x i32>
  %7633 = add <4 x i32> %7630, %7632
  %7634 = mul <4 x i32> %7633, <i32 3, i32 3, i32 3, i32 3>
  %7635 = add <4 x i32> %7634, %7629
  %7636 = bitcast <8 x i16> %7416 to <16 x i8>
  %7637 = shufflevector <16 x i8> %7610, <16 x i8> %7636, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7638 = bitcast <16 x i8> %7637 to <8 x i16>
  %7639 = shufflevector <16 x i8> %7610, <16 x i8> %7636, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %7640 = bitcast <16 x i8> %7639 to <8 x i16>
  %7641 = shufflevector <8 x i16> %7403, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7642 = shufflevector <8 x i16> %7638, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7643 = bitcast <8 x i16> %7641 to <4 x i32>
  %7644 = bitcast <8 x i16> %7642 to <4 x i32>
  %7645 = add <4 x i32> %7644, %7643
  %7646 = shufflevector <8 x i16> %7640, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7647 = bitcast <8 x i16> %7646 to <4 x i32>
  %7648 = add <4 x i32> %7645, %7647
  %7649 = mul <4 x i32> %7648, <i32 3, i32 3, i32 3, i32 3>
  %7650 = add <4 x i32> %7649, %7644
  %7651 = shufflevector <8 x i16> %7403, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7652 = shufflevector <8 x i16> %7638, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7653 = bitcast <8 x i16> %7651 to <4 x i32>
  %7654 = bitcast <8 x i16> %7652 to <4 x i32>
  %7655 = add <4 x i32> %7654, %7653
  %7656 = shufflevector <8 x i16> %7640, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7657 = bitcast <8 x i16> %7656 to <4 x i32>
  %7658 = add <4 x i32> %7655, %7657
  %7659 = mul <4 x i32> %7658, <i32 3, i32 3, i32 3, i32 3>
  %7660 = add <4 x i32> %7659, %7654
  %7661 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 7, i64 %6820
  %7662 = bitcast i32* %7661 to <4 x i32>*
  store <4 x i32> %7625, <4 x i32>* %7662, align 16
  %7663 = getelementptr inbounds i32, i32* %7661, i64 4
  %7664 = bitcast i32* %7663 to <4 x i32>*
  store <4 x i32> %7635, <4 x i32>* %7664, align 16
  %7665 = getelementptr inbounds i32, i32* %7661, i64 8
  %7666 = bitcast i32* %7665 to <4 x i32>*
  store <4 x i32> %7650, <4 x i32>* %7666, align 16
  %7667 = getelementptr inbounds i32, i32* %7661, i64 12
  %7668 = bitcast i32* %7667 to <4 x i32>*
  store <4 x i32> %7660, <4 x i32>* %7668, align 16
  %7669 = bitcast <8 x i16> %7193 to <16 x i8>
  %7670 = bitcast <8 x i16> %6830 to <16 x i8>
  %7671 = shufflevector <16 x i8> %7670, <16 x i8> %7669, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7672 = bitcast <16 x i8> %7671 to <8 x i16>
  %7673 = shufflevector <16 x i8> %7670, <16 x i8> %7669, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %7674 = bitcast <16 x i8> %7673 to <8 x i16>
  %7675 = shufflevector <8 x i16> %6830, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7676 = shufflevector <8 x i16> %7672, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7677 = bitcast <8 x i16> %7675 to <4 x i32>
  %7678 = bitcast <8 x i16> %7676 to <4 x i32>
  %7679 = add <4 x i32> %7678, %7677
  %7680 = shufflevector <8 x i16> %7674, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7681 = bitcast <8 x i16> %7680 to <4 x i32>
  %7682 = add <4 x i32> %7679, %7681
  %7683 = mul <4 x i32> %7682, <i32 5, i32 5, i32 5, i32 5>
  %7684 = add <4 x i32> %7683, %7678
  %7685 = shufflevector <8 x i16> %6830, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7686 = shufflevector <8 x i16> %7672, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7687 = bitcast <8 x i16> %7685 to <4 x i32>
  %7688 = bitcast <8 x i16> %7686 to <4 x i32>
  %7689 = add <4 x i32> %7688, %7687
  %7690 = shufflevector <8 x i16> %7674, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7691 = bitcast <8 x i16> %7690 to <4 x i32>
  %7692 = add <4 x i32> %7689, %7691
  %7693 = mul <4 x i32> %7692, <i32 5, i32 5, i32 5, i32 5>
  %7694 = add <4 x i32> %7693, %7688
  %7695 = bitcast <8 x i16> %7582 to <16 x i8>
  %7696 = shufflevector <16 x i8> %7669, <16 x i8> %7695, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7697 = bitcast <16 x i8> %7696 to <8 x i16>
  %7698 = shufflevector <16 x i8> %7669, <16 x i8> %7695, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %7699 = bitcast <16 x i8> %7698 to <8 x i16>
  %7700 = shufflevector <8 x i16> %7193, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7701 = shufflevector <8 x i16> %7697, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7702 = bitcast <8 x i16> %7700 to <4 x i32>
  %7703 = bitcast <8 x i16> %7701 to <4 x i32>
  %7704 = add <4 x i32> %7703, %7702
  %7705 = shufflevector <8 x i16> %7699, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7706 = bitcast <8 x i16> %7705 to <4 x i32>
  %7707 = add <4 x i32> %7704, %7706
  %7708 = mul <4 x i32> %7707, <i32 5, i32 5, i32 5, i32 5>
  %7709 = add <4 x i32> %7708, %7703
  %7710 = shufflevector <8 x i16> %7193, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7711 = shufflevector <8 x i16> %7697, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7712 = bitcast <8 x i16> %7710 to <4 x i32>
  %7713 = bitcast <8 x i16> %7711 to <4 x i32>
  %7714 = add <4 x i32> %7713, %7712
  %7715 = shufflevector <8 x i16> %7699, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7716 = bitcast <8 x i16> %7715 to <4 x i32>
  %7717 = add <4 x i32> %7714, %7716
  %7718 = mul <4 x i32> %7717, <i32 5, i32 5, i32 5, i32 5>
  %7719 = add <4 x i32> %7718, %7713
  %7720 = bitcast i32* %6833 to <4 x i32>*
  store <4 x i32> %7684, <4 x i32>* %7720, align 16
  %7721 = getelementptr inbounds i32, i32* %6833, i64 4
  %7722 = bitcast i32* %7721 to <4 x i32>*
  store <4 x i32> %7694, <4 x i32>* %7722, align 16
  %7723 = getelementptr inbounds i32, i32* %6833, i64 8
  %7724 = bitcast i32* %7723 to <4 x i32>*
  store <4 x i32> %7709, <4 x i32>* %7724, align 16
  %7725 = getelementptr inbounds i32, i32* %6833, i64 12
  %7726 = bitcast i32* %7725 to <4 x i32>*
  store <4 x i32> %7719, <4 x i32>* %7726, align 16
  %7727 = bitcast <2 x i64> %7480 to <16 x i8>
  %7728 = shufflevector <16 x i8> %7727, <16 x i8> %7481, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %7729 = shufflevector <16 x i8> %7727, <16 x i8> %7481, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7730 = shufflevector <16 x i8> %7727, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7731 = shufflevector <16 x i8> %7728, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7732 = bitcast <16 x i8> %7730 to <8 x i16>
  %7733 = bitcast <16 x i8> %7731 to <8 x i16>
  %7734 = add <8 x i16> %7733, %7732
  %7735 = shufflevector <16 x i8> %7729, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7736 = bitcast <16 x i8> %7735 to <8 x i16>
  %7737 = add <8 x i16> %7734, %7736
  %7738 = shl <8 x i16> %7737, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %7739 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 5, i64 %6820
  %7740 = bitcast i16* %7739 to <8 x i16>*
  store <8 x i16> %7738, <8 x i16>* %7740, align 16
  %7741 = mul <8 x i16> %7737, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %7742 = add <8 x i16> %7741, %7733
  %7743 = getelementptr inbounds i16, i16* %6192, i64 %6820
  %7744 = bitcast i16* %7743 to <8 x i16>*
  store <8 x i16> %7742, <8 x i16>* %7744, align 16
  %7745 = bitcast <8 x i16> %7466 to <16 x i8>
  %7746 = bitcast <8 x i16> %6828 to <16 x i8>
  %7747 = shufflevector <16 x i8> %7746, <16 x i8> %7745, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7748 = shufflevector <16 x i8> %7746, <16 x i8> %7745, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %7749 = bitcast <16 x i8> %7748 to <8 x i16>
  %7750 = bitcast <16 x i8> %7747 to <8 x i16>
  %7751 = shufflevector <8 x i16> %6828, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7752 = shufflevector <8 x i16> %7750, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7753 = bitcast <8 x i16> %7751 to <4 x i32>
  %7754 = bitcast <8 x i16> %7752 to <4 x i32>
  %7755 = add <4 x i32> %7754, %7753
  %7756 = shufflevector <8 x i16> %7749, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7757 = bitcast <8 x i16> %7756 to <4 x i32>
  %7758 = add <4 x i32> %7755, %7757
  %7759 = shufflevector <8 x i16> %6828, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7760 = shufflevector <8 x i16> %7750, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7761 = bitcast <8 x i16> %7759 to <4 x i32>
  %7762 = bitcast <8 x i16> %7760 to <4 x i32>
  %7763 = add <4 x i32> %7762, %7761
  %7764 = shufflevector <8 x i16> %7749, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7765 = bitcast <8 x i16> %7764 to <4 x i32>
  %7766 = add <4 x i32> %7763, %7765
  %7767 = shl <4 x i32> %7758, <i32 2, i32 2, i32 2, i32 2>
  %7768 = shl <4 x i32> %7766, <i32 2, i32 2, i32 2, i32 2>
  %7769 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 8, i64 %6820
  %7770 = bitcast i32* %7769 to <4 x i32>*
  store <4 x i32> %7767, <4 x i32>* %7770, align 16
  %7771 = getelementptr inbounds i32, i32* %7769, i64 4
  %7772 = bitcast i32* %7771 to <4 x i32>*
  store <4 x i32> %7768, <4 x i32>* %7772, align 16
  %7773 = mul <4 x i32> %7758, <i32 3, i32 3, i32 3, i32 3>
  %7774 = add <4 x i32> %7773, %7754
  %7775 = sub <4 x i32> %7762, %7766
  %7776 = add <4 x i32> %7775, %7768
  %7777 = getelementptr inbounds i32, i32* %6193, i64 %6820
  %7778 = bitcast i32* %7777 to <4 x i32>*
  store <4 x i32> %7774, <4 x i32>* %7778, align 16
  %7779 = getelementptr inbounds i32, i32* %7777, i64 4
  %7780 = bitcast i32* %7779 to <4 x i32>*
  store <4 x i32> %7776, <4 x i32>* %7780, align 16
  %7781 = shufflevector <16 x i8> %7727, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7782 = shufflevector <16 x i8> %7728, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7783 = bitcast <16 x i8> %7781 to <8 x i16>
  %7784 = bitcast <16 x i8> %7782 to <8 x i16>
  %7785 = add <8 x i16> %7784, %7783
  %7786 = shufflevector <16 x i8> %7729, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7787 = bitcast <16 x i8> %7786 to <8 x i16>
  %7788 = add <8 x i16> %7785, %7787
  %7789 = shl <8 x i16> %7788, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %7790 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 5, i64 %6843
  %7791 = bitcast i16* %7790 to <8 x i16>*
  store <8 x i16> %7789, <8 x i16>* %7791, align 16
  %7792 = mul <8 x i16> %7788, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %7793 = add <8 x i16> %7792, %7784
  %7794 = getelementptr inbounds i16, i16* %6192, i64 %6843
  %7795 = bitcast i16* %7794 to <8 x i16>*
  store <8 x i16> %7793, <8 x i16>* %7795, align 16
  %7796 = bitcast <8 x i16> %7479 to <16 x i8>
  %7797 = shufflevector <16 x i8> %7745, <16 x i8> %7796, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7798 = shufflevector <16 x i8> %7745, <16 x i8> %7796, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %7799 = bitcast <16 x i8> %7798 to <8 x i16>
  %7800 = bitcast <16 x i8> %7797 to <8 x i16>
  %7801 = shufflevector <8 x i16> %7466, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7802 = shufflevector <8 x i16> %7800, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7803 = bitcast <8 x i16> %7801 to <4 x i32>
  %7804 = bitcast <8 x i16> %7802 to <4 x i32>
  %7805 = add <4 x i32> %7804, %7803
  %7806 = shufflevector <8 x i16> %7799, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7807 = bitcast <8 x i16> %7806 to <4 x i32>
  %7808 = add <4 x i32> %7805, %7807
  %7809 = shufflevector <8 x i16> %7466, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7810 = shufflevector <8 x i16> %7800, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7811 = bitcast <8 x i16> %7809 to <4 x i32>
  %7812 = bitcast <8 x i16> %7810 to <4 x i32>
  %7813 = add <4 x i32> %7812, %7811
  %7814 = shufflevector <8 x i16> %7799, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %7815 = bitcast <8 x i16> %7814 to <4 x i32>
  %7816 = add <4 x i32> %7813, %7815
  %7817 = shl <4 x i32> %7808, <i32 2, i32 2, i32 2, i32 2>
  %7818 = shl <4 x i32> %7816, <i32 2, i32 2, i32 2, i32 2>
  %7819 = getelementptr inbounds %"union.libgav1::RestorationBuffer", %"union.libgav1::RestorationBuffer"* %9, i64 0, i32 0, i32 8, i64 %6843
  %7820 = bitcast i32* %7819 to <4 x i32>*
  store <4 x i32> %7817, <4 x i32>* %7820, align 16
  %7821 = getelementptr inbounds i32, i32* %7819, i64 4
  %7822 = bitcast i32* %7821 to <4 x i32>*
  store <4 x i32> %7818, <4 x i32>* %7822, align 16
  %7823 = mul <4 x i32> %7808, <i32 3, i32 3, i32 3, i32 3>
  %7824 = add <4 x i32> %7823, %7804
  %7825 = sub <4 x i32> %7812, %7816
  %7826 = add <4 x i32> %7825, %7818
  %7827 = getelementptr inbounds i32, i32* %6193, i64 %6843
  %7828 = bitcast i32* %7827 to <4 x i32>*
  store <4 x i32> %7824, <4 x i32>* %7828, align 16
  %7829 = getelementptr inbounds i32, i32* %7827, i64 4
  %7830 = bitcast i32* %7829 to <4 x i32>*
  store <4 x i32> %7826, <4 x i32>* %7830, align 16
  %7831 = shufflevector <16 x i8> %7182, <16 x i8> %7571, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %7832 = shufflevector <16 x i8> %7182, <16 x i8> %7571, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %7833 = shufflevector <16 x i8> %7182, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7834 = shufflevector <16 x i8> %7831, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7835 = bitcast <16 x i8> %7833 to <8 x i16>
  %7836 = bitcast <16 x i8> %7834 to <8 x i16>
  %7837 = add <8 x i16> %7836, %7835
  %7838 = shufflevector <16 x i8> %7832, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7839 = bitcast <16 x i8> %7838 to <8 x i16>
  %7840 = add <8 x i16> %7837, %7839
  %7841 = mul <8 x i16> %7840, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %7842 = add <8 x i16> %7841, %7836
  %7843 = shufflevector <16 x i8> %7831, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7844 = bitcast <16 x i8> %7183 to <8 x i16>
  %7845 = bitcast <16 x i8> %7843 to <8 x i16>
  %7846 = add <8 x i16> %7845, %7844
  %7847 = shufflevector <16 x i8> %7832, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7848 = bitcast <16 x i8> %7847 to <8 x i16>
  %7849 = add <8 x i16> %7846, %7848
  %7850 = mul <8 x i16> %7849, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %7851 = add <8 x i16> %7850, %7845
  %7852 = bitcast i16* %6832 to <8 x i16>*
  store <8 x i16> %7842, <8 x i16>* %7852, align 16
  %7853 = getelementptr inbounds i16, i16* %6832, i64 8
  %7854 = bitcast i16* %7853 to <8 x i16>*
  store <8 x i16> %7851, <8 x i16>* %7854, align 16
  %7855 = getelementptr inbounds i16, i16* %6832, i64 16
  %7856 = getelementptr inbounds i32, i32* %6833, i64 16
  %7857 = icmp slt i64 %6837, %6177
  br i1 %7857, label %6819, label %7858

7858:                                             ; preds = %6819
  %7859 = ptrtoint i16* %6429 to i64
  %7860 = ptrtoint i32* %6430 to i64
  %7861 = ashr i32 %8, 1
  %7862 = shl nsw i64 %2, 1
  %7863 = mul nsw i64 %2, 3
  %7864 = and i32 %6183, 65535
  %7865 = shl i32 %6415, 16
  %7866 = or i32 %7865, %7864
  %7867 = insertelement <4 x i32> undef, i32 %7866, i32 0
  %7868 = shufflevector <4 x i32> %7867, <4 x i32> undef, <4 x i32> zeroinitializer
  %7869 = bitcast <4 x i32> %7868 to <8 x i16>
  %7870 = ptrtoint i16* %6204 to i64
  %7871 = ptrtoint i32* %6416 to i64
  %7872 = add nsw i32 %7861, -1
  %7873 = icmp sgt i32 %7872, 0
  br i1 %7873, label %7919, label %7879

7874:                                             ; preds = %9715
  %7875 = inttoptr i64 %7952 to i16*
  %7876 = inttoptr i64 %7942 to i32*
  %7877 = inttoptr i64 %7950 to i16*
  %7878 = inttoptr i64 %7940 to i32*
  br label %7879

7879:                                             ; preds = %7874, %7858
  %7880 = phi i64 [ %6411, %7858 ], [ %7954, %7874 ]
  %7881 = phi i64 [ %6407, %7858 ], [ %7953, %7874 ]
  %7882 = phi i64 [ %6403, %7858 ], [ %7956, %7874 ]
  %7883 = phi i64 [ %6399, %7858 ], [ %7955, %7874 ]
  %7884 = phi i16* [ %6200, %7858 ], [ %7877, %7874 ]
  %7885 = phi i64 [ %6409, %7858 ], [ %7949, %7874 ]
  %7886 = phi i16* [ %6192, %7858 ], [ %7875, %7874 ]
  %7887 = phi i64 [ %6401, %7858 ], [ %7951, %7874 ]
  %7888 = phi i64 [ %6427, %7858 ], [ %7947, %7874 ]
  %7889 = phi i64 [ %6425, %7858 ], [ %7948, %7874 ]
  %7890 = phi i64 [ %6412, %7858 ], [ %7944, %7874 ]
  %7891 = phi i64 [ %6408, %7858 ], [ %7943, %7874 ]
  %7892 = phi i64 [ %6404, %7858 ], [ %7946, %7874 ]
  %7893 = phi i64 [ %6400, %7858 ], [ %7945, %7874 ]
  %7894 = phi i32* [ %6201, %7858 ], [ %7878, %7874 ]
  %7895 = phi i64 [ %6410, %7858 ], [ %7939, %7874 ]
  %7896 = phi i32* [ %6193, %7858 ], [ %7876, %7874 ]
  %7897 = phi i64 [ %6402, %7858 ], [ %7941, %7874 ]
  %7898 = phi i64 [ %6428, %7858 ], [ %7937, %7874 ]
  %7899 = phi i64 [ %6426, %7858 ], [ %7938, %7874 ]
  %7900 = phi i64 [ %6423, %7858 ], [ %7933, %7874 ]
  %7901 = phi i64 [ %6421, %7858 ], [ %7927, %7874 ]
  %7902 = phi i64 [ %6419, %7858 ], [ %7936, %7874 ]
  %7903 = phi i64 [ %6417, %7858 ], [ %7935, %7874 ]
  %7904 = phi i64 [ %6424, %7858 ], [ %7929, %7874 ]
  %7905 = phi i64 [ %6422, %7858 ], [ %7928, %7874 ]
  %7906 = phi i64 [ %6420, %7858 ], [ %7932, %7874 ]
  %7907 = phi i64 [ %6418, %7858 ], [ %7931, %7874 ]
  %7908 = phi i64 [ %7871, %7858 ], [ %7930, %7874 ]
  %7909 = phi i64 [ %7870, %7858 ], [ %7934, %7874 ]
  %7910 = phi i64 [ %7859, %7858 ], [ %7925, %7874 ]
  %7911 = phi i64 [ %6431, %7858 ], [ %7926, %7874 ]
  %7912 = phi i64 [ %7860, %7858 ], [ %7923, %7874 ]
  %7913 = phi i64 [ %6432, %7858 ], [ %7924, %7874 ]
  %7914 = phi i8* [ %10, %7858 ], [ %9716, %7874 ]
  %7915 = phi i8* [ %6396, %7858 ], [ %7959, %7874 ]
  %7916 = and i32 %8, 1
  %7917 = icmp eq i32 %7916, 0
  %7918 = or i1 %6433, %7917
  br i1 %7918, label %9719, label %11476

7919:                                             ; preds = %7858, %9715
  %7920 = phi i32 [ %9717, %9715 ], [ %7872, %7858 ]
  %7921 = phi i8* [ %7959, %9715 ], [ %6396, %7858 ]
  %7922 = phi i8* [ %9716, %9715 ], [ %10, %7858 ]
  %7923 = phi i64 [ %7924, %9715 ], [ %6432, %7858 ]
  %7924 = phi i64 [ %7923, %9715 ], [ %7860, %7858 ]
  %7925 = phi i64 [ %7926, %9715 ], [ %6431, %7858 ]
  %7926 = phi i64 [ %7925, %9715 ], [ %7859, %7858 ]
  %7927 = phi i64 [ %7934, %9715 ], [ %7870, %7858 ]
  %7928 = phi i64 [ %7930, %9715 ], [ %7871, %7858 ]
  %7929 = phi i64 [ %7931, %9715 ], [ %6418, %7858 ]
  %7930 = phi i64 [ %7932, %9715 ], [ %6420, %7858 ]
  %7931 = phi i64 [ %7928, %9715 ], [ %6422, %7858 ]
  %7932 = phi i64 [ %7929, %9715 ], [ %6424, %7858 ]
  %7933 = phi i64 [ %7935, %9715 ], [ %6417, %7858 ]
  %7934 = phi i64 [ %7936, %9715 ], [ %6419, %7858 ]
  %7935 = phi i64 [ %7927, %9715 ], [ %6421, %7858 ]
  %7936 = phi i64 [ %7933, %9715 ], [ %6423, %7858 ]
  %7937 = phi i64 [ %7938, %9715 ], [ %6426, %7858 ]
  %7938 = phi i64 [ %7937, %9715 ], [ %6428, %7858 ]
  %7939 = phi i64 [ %7941, %9715 ], [ %6402, %7858 ]
  %7940 = phi i64 [ %7942, %9715 ], [ %6406, %7858 ]
  %7941 = phi i64 [ %7939, %9715 ], [ %6410, %7858 ]
  %7942 = phi i64 [ %7940, %9715 ], [ %6414, %7858 ]
  %7943 = phi i64 [ %7945, %9715 ], [ %6400, %7858 ]
  %7944 = phi i64 [ %7946, %9715 ], [ %6404, %7858 ]
  %7945 = phi i64 [ %7943, %9715 ], [ %6408, %7858 ]
  %7946 = phi i64 [ %7944, %9715 ], [ %6412, %7858 ]
  %7947 = phi i64 [ %7948, %9715 ], [ %6425, %7858 ]
  %7948 = phi i64 [ %7947, %9715 ], [ %6427, %7858 ]
  %7949 = phi i64 [ %7951, %9715 ], [ %6401, %7858 ]
  %7950 = phi i64 [ %7952, %9715 ], [ %6405, %7858 ]
  %7951 = phi i64 [ %7949, %9715 ], [ %6409, %7858 ]
  %7952 = phi i64 [ %7950, %9715 ], [ %6413, %7858 ]
  %7953 = phi i64 [ %7955, %9715 ], [ %6399, %7858 ]
  %7954 = phi i64 [ %7956, %9715 ], [ %6403, %7858 ]
  %7955 = phi i64 [ %7953, %9715 ], [ %6407, %7858 ]
  %7956 = phi i64 [ %7954, %9715 ], [ %6411, %7858 ]
  %7957 = inttoptr i64 %7953 to <8 x i16>*
  %7958 = getelementptr inbounds i8, i8* %7921, i64 3
  %7959 = getelementptr inbounds i8, i8* %7921, i64 %7862
  %7960 = getelementptr inbounds i8, i8* %7921, i64 %7863
  %7961 = bitcast i8* %7959 to <2 x i64>*
  %7962 = load <2 x i64>, <2 x i64>* %7961, align 1
  %7963 = bitcast i8* %7960 to <2 x i64>*
  %7964 = load <2 x i64>, <2 x i64>* %7963, align 1
  %7965 = bitcast <2 x i64> %7962 to <16 x i8>
  %7966 = shufflevector <16 x i8> %7965, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7967 = bitcast <16 x i8> %7966 to <8 x i16>
  %7968 = mul <8 x i16> %7967, %7967
  %7969 = bitcast <2 x i64> %7964 to <16 x i8>
  %7970 = shufflevector <16 x i8> %7969, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7971 = bitcast <16 x i8> %7970 to <8 x i16>
  %7972 = mul <8 x i16> %7971, %7971
  %7973 = shufflevector <16 x i8> %7965, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7974 = bitcast <16 x i8> %7973 to <8 x i16>
  %7975 = mul <8 x i16> %7974, %7974
  %7976 = shufflevector <16 x i8> %7969, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %7977 = bitcast <16 x i8> %7976 to <8 x i16>
  %7978 = mul <8 x i16> %7977, %7977
  %7979 = shufflevector <16 x i8> %7965, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7980 = shufflevector <16 x i8> %7965, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7981 = shufflevector <16 x i8> %7965, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7982 = shufflevector <16 x i8> %7965, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7983 = shufflevector <16 x i8> %7982, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7984 = bitcast <16 x i8> %7983 to <8 x i16>
  %7985 = add <8 x i16> %7984, %7967
  %7986 = shufflevector <16 x i8> %7979, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7987 = shufflevector <16 x i8> %7980, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7988 = bitcast <16 x i8> %7986 to <8 x i16>
  %7989 = bitcast <16 x i8> %7987 to <8 x i16>
  %7990 = add <8 x i16> %7989, %7988
  %7991 = shufflevector <16 x i8> %7981, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %7992 = bitcast <16 x i8> %7991 to <8 x i16>
  %7993 = add <8 x i16> %7990, %7992
  %7994 = add <8 x i16> %7985, %7993
  %7995 = shufflevector <16 x i8> %7969, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7996 = shufflevector <16 x i8> %7969, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7997 = shufflevector <16 x i8> %7969, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7998 = shufflevector <16 x i8> %7969, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7999 = shufflevector <16 x i8> %7998, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8000 = bitcast <16 x i8> %7999 to <8 x i16>
  %8001 = add <8 x i16> %8000, %7971
  %8002 = shufflevector <16 x i8> %7995, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8003 = shufflevector <16 x i8> %7996, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8004 = bitcast <16 x i8> %8002 to <8 x i16>
  %8005 = bitcast <16 x i8> %8003 to <8 x i16>
  %8006 = add <8 x i16> %8005, %8004
  %8007 = shufflevector <16 x i8> %7997, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8008 = bitcast <16 x i8> %8007 to <8 x i16>
  %8009 = add <8 x i16> %8006, %8008
  %8010 = add <8 x i16> %8001, %8009
  store <8 x i16> %7993, <8 x i16>* %7957, align 16
  %8011 = inttoptr i64 %7954 to <8 x i16>*
  store <8 x i16> %8009, <8 x i16>* %8011, align 16
  %8012 = inttoptr i64 %7927 to <8 x i16>*
  store <8 x i16> %7994, <8 x i16>* %8012, align 16
  %8013 = inttoptr i64 %7933 to <8 x i16>*
  store <8 x i16> %8010, <8 x i16>* %8013, align 16
  %8014 = bitcast <8 x i16> %7975 to <16 x i8>
  %8015 = bitcast <8 x i16> %7968 to <16 x i8>
  %8016 = shufflevector <16 x i8> %8015, <16 x i8> %8014, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %8017 = bitcast <16 x i8> %8016 to <8 x i16>
  %8018 = shufflevector <16 x i8> %8015, <16 x i8> %8014, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %8019 = bitcast <16 x i8> %8018 to <8 x i16>
  %8020 = shufflevector <16 x i8> %8015, <16 x i8> %8014, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %8021 = bitcast <16 x i8> %8020 to <8 x i16>
  %8022 = shufflevector <16 x i8> %8015, <16 x i8> %8014, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8023 = bitcast <16 x i8> %8022 to <8 x i16>
  %8024 = shufflevector <8 x i16> %7968, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8025 = shufflevector <8 x i16> %8023, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8026 = bitcast <8 x i16> %8024 to <4 x i32>
  %8027 = bitcast <8 x i16> %8025 to <4 x i32>
  %8028 = add <4 x i32> %8027, %8026
  %8029 = shufflevector <8 x i16> %8017, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8030 = shufflevector <8 x i16> %8019, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8031 = bitcast <8 x i16> %8029 to <4 x i32>
  %8032 = bitcast <8 x i16> %8030 to <4 x i32>
  %8033 = add <4 x i32> %8032, %8031
  %8034 = shufflevector <8 x i16> %8021, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8035 = bitcast <8 x i16> %8034 to <4 x i32>
  %8036 = add <4 x i32> %8033, %8035
  %8037 = add <4 x i32> %8028, %8036
  %8038 = shufflevector <8 x i16> %7968, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8039 = shufflevector <8 x i16> %8023, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8040 = bitcast <8 x i16> %8038 to <4 x i32>
  %8041 = bitcast <8 x i16> %8039 to <4 x i32>
  %8042 = add <4 x i32> %8041, %8040
  %8043 = shufflevector <8 x i16> %8017, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8044 = shufflevector <8 x i16> %8019, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8045 = bitcast <8 x i16> %8043 to <4 x i32>
  %8046 = bitcast <8 x i16> %8044 to <4 x i32>
  %8047 = add <4 x i32> %8046, %8045
  %8048 = shufflevector <8 x i16> %8021, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8049 = bitcast <8 x i16> %8048 to <4 x i32>
  %8050 = add <4 x i32> %8047, %8049
  %8051 = add <4 x i32> %8042, %8050
  %8052 = inttoptr i64 %7943 to i32*
  %8053 = inttoptr i64 %7943 to <4 x i32>*
  store <4 x i32> %8036, <4 x i32>* %8053, align 16
  %8054 = getelementptr inbounds i32, i32* %8052, i64 4
  %8055 = bitcast i32* %8054 to <4 x i32>*
  store <4 x i32> %8050, <4 x i32>* %8055, align 16
  %8056 = inttoptr i64 %7928 to i32*
  %8057 = inttoptr i64 %7928 to <4 x i32>*
  store <4 x i32> %8037, <4 x i32>* %8057, align 16
  %8058 = getelementptr inbounds i32, i32* %8056, i64 4
  %8059 = bitcast i32* %8058 to <4 x i32>*
  store <4 x i32> %8051, <4 x i32>* %8059, align 16
  %8060 = bitcast <8 x i16> %7978 to <16 x i8>
  %8061 = bitcast <8 x i16> %7972 to <16 x i8>
  %8062 = shufflevector <16 x i8> %8061, <16 x i8> %8060, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %8063 = bitcast <16 x i8> %8062 to <8 x i16>
  %8064 = shufflevector <16 x i8> %8061, <16 x i8> %8060, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %8065 = bitcast <16 x i8> %8064 to <8 x i16>
  %8066 = shufflevector <16 x i8> %8061, <16 x i8> %8060, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %8067 = bitcast <16 x i8> %8066 to <8 x i16>
  %8068 = shufflevector <16 x i8> %8061, <16 x i8> %8060, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8069 = bitcast <16 x i8> %8068 to <8 x i16>
  %8070 = shufflevector <8 x i16> %7972, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8071 = shufflevector <8 x i16> %8069, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8072 = bitcast <8 x i16> %8070 to <4 x i32>
  %8073 = bitcast <8 x i16> %8071 to <4 x i32>
  %8074 = add <4 x i32> %8073, %8072
  %8075 = shufflevector <8 x i16> %8063, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8076 = shufflevector <8 x i16> %8065, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8077 = bitcast <8 x i16> %8075 to <4 x i32>
  %8078 = bitcast <8 x i16> %8076 to <4 x i32>
  %8079 = add <4 x i32> %8078, %8077
  %8080 = shufflevector <8 x i16> %8067, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8081 = bitcast <8 x i16> %8080 to <4 x i32>
  %8082 = add <4 x i32> %8079, %8081
  %8083 = add <4 x i32> %8074, %8082
  %8084 = shufflevector <8 x i16> %7972, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8085 = shufflevector <8 x i16> %8069, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8086 = bitcast <8 x i16> %8084 to <4 x i32>
  %8087 = bitcast <8 x i16> %8085 to <4 x i32>
  %8088 = add <4 x i32> %8087, %8086
  %8089 = shufflevector <8 x i16> %8063, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8090 = shufflevector <8 x i16> %8065, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8091 = bitcast <8 x i16> %8089 to <4 x i32>
  %8092 = bitcast <8 x i16> %8090 to <4 x i32>
  %8093 = add <4 x i32> %8092, %8091
  %8094 = shufflevector <8 x i16> %8067, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8095 = bitcast <8 x i16> %8094 to <4 x i32>
  %8096 = add <4 x i32> %8093, %8095
  %8097 = add <4 x i32> %8088, %8096
  %8098 = inttoptr i64 %7944 to i32*
  %8099 = inttoptr i64 %7944 to <4 x i32>*
  store <4 x i32> %8082, <4 x i32>* %8099, align 16
  %8100 = getelementptr inbounds i32, i32* %8098, i64 4
  %8101 = bitcast i32* %8100 to <4 x i32>*
  store <4 x i32> %8096, <4 x i32>* %8101, align 16
  %8102 = inttoptr i64 %7929 to i32*
  %8103 = inttoptr i64 %7929 to <4 x i32>*
  store <4 x i32> %8083, <4 x i32>* %8103, align 16
  %8104 = getelementptr inbounds i32, i32* %8102, i64 4
  %8105 = bitcast i32* %8104 to <4 x i32>*
  store <4 x i32> %8097, <4 x i32>* %8105, align 16
  %8106 = inttoptr i64 %7955 to <8 x i16>*
  %8107 = load <8 x i16>, <8 x i16>* %8106, align 16
  %8108 = inttoptr i64 %7956 to <8 x i16>*
  %8109 = load <8 x i16>, <8 x i16>* %8108, align 16
  %8110 = inttoptr i64 %7945 to i32*
  %8111 = inttoptr i64 %7945 to <4 x i32>*
  %8112 = load <4 x i32>, <4 x i32>* %8111, align 16
  %8113 = getelementptr inbounds i32, i32* %8110, i64 4
  %8114 = bitcast i32* %8113 to <4 x i32>*
  %8115 = load <4 x i32>, <4 x i32>* %8114, align 16
  %8116 = inttoptr i64 %7946 to i32*
  %8117 = inttoptr i64 %7946 to <4 x i32>*
  %8118 = load <4 x i32>, <4 x i32>* %8117, align 16
  %8119 = getelementptr inbounds i32, i32* %8116, i64 4
  %8120 = bitcast i32* %8119 to <4 x i32>*
  %8121 = load <4 x i32>, <4 x i32>* %8120, align 16
  %8122 = inttoptr i64 %7934 to <8 x i16>*
  %8123 = load <8 x i16>, <8 x i16>* %8122, align 16
  %8124 = inttoptr i64 %7935 to <8 x i16>*
  %8125 = load <8 x i16>, <8 x i16>* %8124, align 16
  %8126 = inttoptr i64 %7936 to <8 x i16>*
  %8127 = load <8 x i16>, <8 x i16>* %8126, align 16
  %8128 = inttoptr i64 %7930 to i32*
  %8129 = inttoptr i64 %7930 to <4 x i32>*
  %8130 = load <4 x i32>, <4 x i32>* %8129, align 16
  %8131 = getelementptr inbounds i32, i32* %8128, i64 4
  %8132 = bitcast i32* %8131 to <4 x i32>*
  %8133 = load <4 x i32>, <4 x i32>* %8132, align 16
  %8134 = inttoptr i64 %7931 to i32*
  %8135 = inttoptr i64 %7931 to <4 x i32>*
  %8136 = load <4 x i32>, <4 x i32>* %8135, align 16
  %8137 = getelementptr inbounds i32, i32* %8134, i64 4
  %8138 = bitcast i32* %8137 to <4 x i32>*
  %8139 = load <4 x i32>, <4 x i32>* %8138, align 16
  %8140 = inttoptr i64 %7932 to i32*
  %8141 = inttoptr i64 %7932 to <4 x i32>*
  %8142 = load <4 x i32>, <4 x i32>* %8141, align 16
  %8143 = getelementptr inbounds i32, i32* %8140, i64 4
  %8144 = bitcast i32* %8143 to <4 x i32>*
  %8145 = load <4 x i32>, <4 x i32>* %8144, align 16
  %8146 = add <8 x i16> %8109, %7993
  %8147 = add <8 x i16> %8146, %8107
  %8148 = add <4 x i32> %8118, %8036
  %8149 = add <4 x i32> %8148, %8112
  %8150 = add <4 x i32> %8121, %8050
  %8151 = add <4 x i32> %8150, %8115
  %8152 = shufflevector <8 x i16> %8147, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8153 = shufflevector <8 x i16> %8147, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8154 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8152, <8 x i16> %8152) #5
  %8155 = mul <4 x i32> %8149, <i32 9, i32 9, i32 9, i32 9>
  %8156 = sub <4 x i32> %8155, %8154
  %8157 = icmp sgt <4 x i32> %8156, zeroinitializer
  %8158 = select <4 x i1> %8157, <4 x i32> %8156, <4 x i32> zeroinitializer
  %8159 = mul <4 x i32> %8158, %6623
  %8160 = add <4 x i32> %8159, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8161 = lshr <4 x i32> %8160, <i32 20, i32 20, i32 20, i32 20>
  %8162 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8153, <8 x i16> %8153) #5
  %8163 = mul <4 x i32> %8151, <i32 9, i32 9, i32 9, i32 9>
  %8164 = sub <4 x i32> %8163, %8162
  %8165 = icmp sgt <4 x i32> %8164, zeroinitializer
  %8166 = select <4 x i1> %8165, <4 x i32> %8164, <4 x i32> zeroinitializer
  %8167 = mul <4 x i32> %8166, %6623
  %8168 = add <4 x i32> %8167, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8169 = lshr <4 x i32> %8168, <i32 20, i32 20, i32 20, i32 20>
  %8170 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8161, <4 x i32> %8169) #5
  %8171 = add <8 x i16> %8146, %8009
  %8172 = add <4 x i32> %8148, %8082
  %8173 = add <4 x i32> %8150, %8096
  %8174 = shufflevector <8 x i16> %8171, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8175 = shufflevector <8 x i16> %8171, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8176 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8174, <8 x i16> %8174) #5
  %8177 = mul <4 x i32> %8172, <i32 9, i32 9, i32 9, i32 9>
  %8178 = sub <4 x i32> %8177, %8176
  %8179 = icmp sgt <4 x i32> %8178, zeroinitializer
  %8180 = select <4 x i1> %8179, <4 x i32> %8178, <4 x i32> zeroinitializer
  %8181 = mul <4 x i32> %8180, %6623
  %8182 = add <4 x i32> %8181, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8183 = lshr <4 x i32> %8182, <i32 20, i32 20, i32 20, i32 20>
  %8184 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8175, <8 x i16> %8175) #5
  %8185 = mul <4 x i32> %8173, <i32 9, i32 9, i32 9, i32 9>
  %8186 = sub <4 x i32> %8185, %8184
  %8187 = icmp sgt <4 x i32> %8186, zeroinitializer
  %8188 = select <4 x i1> %8187, <4 x i32> %8186, <4 x i32> zeroinitializer
  %8189 = mul <4 x i32> %8188, %6623
  %8190 = add <4 x i32> %8189, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8191 = lshr <4 x i32> %8190, <i32 20, i32 20, i32 20, i32 20>
  %8192 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8183, <4 x i32> %8191) #5
  %8193 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %8170, <8 x i16> %8192) #5
  %8194 = icmp ult <16 x i8> %8193, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %8195 = select <16 x i1> %8194, <16 x i8> %8193, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %8196 = icmp sgt <16 x i8> %8195, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %8197 = select <16 x i1> %8196, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %8195
  %8198 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %8197) #5
  %8199 = add nsw <16 x i8> %8195, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %8200 = icmp sgt <16 x i8> %8199, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %8201 = select <16 x i1> %8200, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %8199
  %8202 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %8201) #5
  %8203 = or <16 x i8> %8202, %8198
  %8204 = add nsw <16 x i8> %8195, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %8205 = icmp sgt <16 x i8> %8204, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %8206 = select <16 x i1> %8205, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %8204
  %8207 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %8206) #5
  %8208 = or <16 x i8> %8203, %8207
  %8209 = xor <16 x i8> %8193, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %8210 = icmp ugt <16 x i8> %8208, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %8211 = select <16 x i1> %8210, <16 x i8> %8208, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %8212 = icmp sgt <16 x i8> %8209, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %8213 = icmp sgt <16 x i8> %8209, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %8214 = sext <16 x i1> %8213 to <16 x i8>
  %8215 = icmp sgt <16 x i8> %8209, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %8216 = icmp sgt <16 x i8> %8209, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %8217 = icmp eq <16 x i8> %8209, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %8218 = zext <16 x i1> %8212 to <16 x i8>
  %8219 = sub nsw <16 x i8> %8214, %8218
  %8220 = zext <16 x i1> %8215 to <16 x i8>
  %8221 = sub nsw <16 x i8> %8219, %8220
  %8222 = zext <16 x i1> %8216 to <16 x i8>
  %8223 = sub nsw <16 x i8> %8221, %8222
  %8224 = zext <16 x i1> %8217 to <16 x i8>
  %8225 = sub nsw <16 x i8> %8223, %8224
  %8226 = add <16 x i8> %8225, %8211
  %8227 = shufflevector <16 x i8> %8226, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8228 = bitcast <16 x i8> %8227 to <8 x i16>
  %8229 = shufflevector <8 x i16> %8228, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8230 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8229, <8 x i16> %8152) #5
  %8231 = shufflevector <8 x i16> %8228, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8232 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8231, <8 x i16> %8153) #5
  %8233 = mul <4 x i32> %8230, <i32 455, i32 455, i32 455, i32 455>
  %8234 = mul <4 x i32> %8232, <i32 455, i32 455, i32 455, i32 455>
  %8235 = add <4 x i32> %8233, <i32 2048, i32 2048, i32 2048, i32 2048>
  %8236 = lshr <4 x i32> %8235, <i32 12, i32 12, i32 12, i32 12>
  %8237 = add <4 x i32> %8234, <i32 2048, i32 2048, i32 2048, i32 2048>
  %8238 = lshr <4 x i32> %8237, <i32 12, i32 12, i32 12, i32 12>
  %8239 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8236, <4 x i32> %8238) #5
  %8240 = shufflevector <16 x i8> %8226, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8241 = bitcast <16 x i8> %8240 to <8 x i16>
  %8242 = shufflevector <8 x i16> %8241, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8243 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8242, <8 x i16> %8174) #5
  %8244 = shufflevector <8 x i16> %8241, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8245 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8244, <8 x i16> %8175) #5
  %8246 = mul <4 x i32> %8243, <i32 455, i32 455, i32 455, i32 455>
  %8247 = mul <4 x i32> %8245, <i32 455, i32 455, i32 455, i32 455>
  %8248 = add <4 x i32> %8246, <i32 2048, i32 2048, i32 2048, i32 2048>
  %8249 = lshr <4 x i32> %8248, <i32 12, i32 12, i32 12, i32 12>
  %8250 = add <4 x i32> %8247, <i32 2048, i32 2048, i32 2048, i32 2048>
  %8251 = lshr <4 x i32> %8250, <i32 12, i32 12, i32 12, i32 12>
  %8252 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8249, <4 x i32> %8251) #5
  %8253 = shufflevector <16 x i8> %8226, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8254 = add <8 x i16> %8010, %7994
  %8255 = add <8 x i16> %8254, %8123
  %8256 = add <8 x i16> %8255, %8125
  %8257 = add <8 x i16> %8256, %8127
  %8258 = add <4 x i32> %8083, %8037
  %8259 = add <4 x i32> %8258, %8130
  %8260 = add <4 x i32> %8259, %8136
  %8261 = add <4 x i32> %8260, %8142
  %8262 = add <4 x i32> %8097, %8051
  %8263 = add <4 x i32> %8262, %8133
  %8264 = add <4 x i32> %8263, %8139
  %8265 = add <4 x i32> %8264, %8145
  %8266 = shufflevector <8 x i16> %8257, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8267 = shufflevector <8 x i16> %8257, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8268 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8266, <8 x i16> %8266) #5
  %8269 = mul <4 x i32> %8261, <i32 25, i32 25, i32 25, i32 25>
  %8270 = sub <4 x i32> %8269, %8268
  %8271 = icmp sgt <4 x i32> %8270, zeroinitializer
  %8272 = select <4 x i1> %8271, <4 x i32> %8270, <4 x i32> zeroinitializer
  %8273 = mul <4 x i32> %8272, %6744
  %8274 = add <4 x i32> %8273, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8275 = lshr <4 x i32> %8274, <i32 20, i32 20, i32 20, i32 20>
  %8276 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8267, <8 x i16> %8267) #5
  %8277 = mul <4 x i32> %8265, <i32 25, i32 25, i32 25, i32 25>
  %8278 = sub <4 x i32> %8277, %8276
  %8279 = icmp sgt <4 x i32> %8278, zeroinitializer
  %8280 = select <4 x i1> %8279, <4 x i32> %8278, <4 x i32> zeroinitializer
  %8281 = mul <4 x i32> %8280, %6744
  %8282 = add <4 x i32> %8281, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8283 = lshr <4 x i32> %8282, <i32 20, i32 20, i32 20, i32 20>
  %8284 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8275, <4 x i32> %8283) #5
  %8285 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %8284, <8 x i16> undef) #5
  %8286 = bitcast <16 x i8> %8285 to <2 x i64>
  %8287 = extractelement <2 x i64> %8286, i32 0
  %8288 = lshr i64 %8287, 8
  %8289 = lshr i64 %8287, 16
  %8290 = lshr i64 %8287, 24
  %8291 = lshr i64 %8287, 32
  %8292 = lshr i64 %8287, 40
  %8293 = lshr i64 %8287, 48
  %8294 = lshr i64 %8287, 56
  %8295 = and i64 %8287, 255
  %8296 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8295
  %8297 = load i8, i8* %8296, align 1
  %8298 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %8297, i64 0
  %8299 = and i64 %8288, 255
  %8300 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8299
  %8301 = load i8, i8* %8300, align 1
  %8302 = insertelement <16 x i8> %8298, i8 %8301, i64 1
  %8303 = and i64 %8289, 255
  %8304 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8303
  %8305 = load i8, i8* %8304, align 1
  %8306 = insertelement <16 x i8> %8302, i8 %8305, i64 2
  %8307 = and i64 %8290, 255
  %8308 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8307
  %8309 = load i8, i8* %8308, align 1
  %8310 = insertelement <16 x i8> %8306, i8 %8309, i64 3
  %8311 = and i64 %8291, 255
  %8312 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8311
  %8313 = load i8, i8* %8312, align 1
  %8314 = insertelement <16 x i8> %8310, i8 %8313, i64 4
  %8315 = and i64 %8292, 255
  %8316 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8315
  %8317 = load i8, i8* %8316, align 1
  %8318 = insertelement <16 x i8> %8314, i8 %8317, i64 5
  %8319 = and i64 %8293, 255
  %8320 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8319
  %8321 = load i8, i8* %8320, align 1
  %8322 = insertelement <16 x i8> %8318, i8 %8321, i64 6
  %8323 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8294
  %8324 = load i8, i8* %8323, align 1
  %8325 = insertelement <16 x i8> %8322, i8 %8324, i64 7
  %8326 = shufflevector <16 x i8> %8325, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8327 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %8326, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %8328 = shufflevector <8 x i16> %8327, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8329 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8328, <8 x i16> %8266) #5
  %8330 = shufflevector <8 x i16> %8327, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8331 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8330, <8 x i16> %8267) #5
  %8332 = add <4 x i32> %8329, <i32 512, i32 512, i32 512, i32 512>
  %8333 = lshr <4 x i32> %8332, <i32 10, i32 10, i32 10, i32 10>
  %8334 = add <4 x i32> %8331, <i32 512, i32 512, i32 512, i32 512>
  %8335 = lshr <4 x i32> %8334, <i32 10, i32 10, i32 10, i32 10>
  %8336 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8333, <4 x i32> %8335) #5
  %8337 = getelementptr inbounds i8, i8* %7959, i64 16
  %8338 = getelementptr inbounds i8, i8* %7960, i64 16
  %8339 = getelementptr inbounds i8, i8* %7958, i64 %2
  %8340 = getelementptr inbounds i8, i8* %7922, i64 %2
  %8341 = inttoptr i64 %7926 to i16*
  %8342 = inttoptr i64 %7924 to i32*
  %8343 = inttoptr i64 %7925 to i16*
  %8344 = inttoptr i64 %7923 to i32*
  %8345 = getelementptr inbounds i16, i16* %8341, i64 8
  %8346 = getelementptr inbounds i32, i32* %8342, i64 8
  %8347 = getelementptr inbounds i16, i16* %8343, i64 8
  %8348 = getelementptr inbounds i32, i32* %8344, i64 8
  %8349 = inttoptr i64 %7953 to i16*
  %8350 = getelementptr inbounds i16, i16* %8349, i64 8
  %8351 = inttoptr i64 %7927 to i16*
  %8352 = getelementptr inbounds i16, i16* %8351, i64 8
  %8353 = inttoptr i64 %7954 to i16*
  %8354 = getelementptr inbounds i16, i16* %8353, i64 8
  %8355 = inttoptr i64 %7933 to i16*
  %8356 = getelementptr inbounds i16, i16* %8355, i64 8
  %8357 = inttoptr i64 %7955 to i16*
  %8358 = inttoptr i64 %7956 to i16*
  %8359 = inttoptr i64 %7934 to i16*
  %8360 = inttoptr i64 %7935 to i16*
  %8361 = inttoptr i64 %7936 to i16*
  %8362 = getelementptr inbounds i32, i32* %8052, i64 8
  %8363 = getelementptr inbounds i32, i32* %8056, i64 8
  %8364 = getelementptr inbounds i32, i32* %8098, i64 8
  %8365 = getelementptr inbounds i32, i32* %8102, i64 8
  %8366 = inttoptr i64 %7951 to i16*
  %8367 = inttoptr i64 %7941 to i32*
  %8368 = inttoptr i64 %7952 to i16*
  %8369 = inttoptr i64 %7948 to i16*
  %8370 = inttoptr i64 %7942 to i32*
  %8371 = inttoptr i64 %7938 to i32*
  %8372 = inttoptr i64 %7949 to i16*
  %8373 = inttoptr i64 %7947 to i16*
  %8374 = inttoptr i64 %7939 to i32*
  %8375 = inttoptr i64 %7937 to i32*
  %8376 = inttoptr i64 %7950 to i16*
  %8377 = inttoptr i64 %7940 to i32*
  %8378 = getelementptr inbounds i16, i16* %8372, i64 8
  %8379 = getelementptr inbounds i16, i16* %8373, i64 8
  %8380 = getelementptr inbounds i32, i32* %8374, i64 8
  %8381 = getelementptr inbounds i32, i32* %8375, i64 8
  %8382 = getelementptr inbounds i16, i16* %8376, i64 8
  %8383 = getelementptr inbounds i32, i32* %8377, i64 8
  br label %8384

8384:                                             ; preds = %8384, %7919
  %8385 = phi i64 [ %8400, %8384 ], [ 0, %7919 ]
  %8386 = phi <2 x i64> [ %8405, %8384 ], [ %7964, %7919 ]
  %8387 = phi <2 x i64> [ %8402, %8384 ], [ %7962, %7919 ]
  %8388 = phi <16 x i8> [ %9053, %8384 ], [ %8253, %7919 ]
  %8389 = phi <16 x i8> [ %8990, %8384 ], [ %8226, %7919 ]
  %8390 = phi <16 x i8> [ %9152, %8384 ], [ <i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, %7919 ]
  %8391 = phi <16 x i8> [ %9152, %8384 ], [ %8325, %7919 ]
  %8392 = phi <8 x i16> [ %8771, %8384 ], [ %7978, %7919 ]
  %8393 = phi <8 x i16> [ %8768, %8384 ], [ %7975, %7919 ]
  %8394 = phi <8 x i16> [ %9051, %8384 ], [ %8252, %7919 ]
  %8395 = phi <8 x i16> [ %8988, %8384 ], [ %8239, %7919 ]
  %8396 = phi <8 x i16> [ %9163, %8384 ], [ %8336, %7919 ]
  %8397 = bitcast <16 x i8> %8389 to <2 x i64>
  %8398 = bitcast <16 x i8> %8388 to <2 x i64>
  %8399 = getelementptr inbounds i8, i8* %8337, i64 %8385
  %8400 = add nuw nsw i64 %8385, 16
  %8401 = bitcast i8* %8399 to <2 x i64>*
  %8402 = load <2 x i64>, <2 x i64>* %8401, align 1
  %8403 = getelementptr inbounds i8, i8* %8338, i64 %8385
  %8404 = bitcast i8* %8403 to <2 x i64>*
  %8405 = load <2 x i64>, <2 x i64>* %8404, align 1
  %8406 = or i64 %8385, 8
  %8407 = bitcast <2 x i64> %8402 to <16 x i8>
  %8408 = bitcast <2 x i64> %8387 to <16 x i8>
  %8409 = shufflevector <16 x i8> %8408, <16 x i8> %8407, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8410 = shufflevector <16 x i8> %8408, <16 x i8> %8407, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %8411 = shufflevector <16 x i8> %8408, <16 x i8> %8407, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %8412 = shufflevector <16 x i8> %8408, <16 x i8> %8407, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %8413 = shufflevector <16 x i8> %8408, <16 x i8> %8407, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %8414 = shufflevector <16 x i8> %8409, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8415 = shufflevector <16 x i8> %8413, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8416 = bitcast <16 x i8> %8414 to <8 x i16>
  %8417 = bitcast <16 x i8> %8415 to <8 x i16>
  %8418 = add <8 x i16> %8417, %8416
  %8419 = shufflevector <16 x i8> %8409, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8420 = shufflevector <16 x i8> %8413, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8421 = bitcast <16 x i8> %8419 to <8 x i16>
  %8422 = bitcast <16 x i8> %8420 to <8 x i16>
  %8423 = add <8 x i16> %8422, %8421
  %8424 = shufflevector <16 x i8> %8410, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8425 = shufflevector <16 x i8> %8411, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8426 = bitcast <16 x i8> %8424 to <8 x i16>
  %8427 = bitcast <16 x i8> %8425 to <8 x i16>
  %8428 = add <8 x i16> %8427, %8426
  %8429 = shufflevector <16 x i8> %8412, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8430 = bitcast <16 x i8> %8429 to <8 x i16>
  %8431 = add <8 x i16> %8428, %8430
  %8432 = shufflevector <16 x i8> %8410, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8433 = shufflevector <16 x i8> %8411, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8434 = bitcast <16 x i8> %8432 to <8 x i16>
  %8435 = bitcast <16 x i8> %8433 to <8 x i16>
  %8436 = add <8 x i16> %8435, %8434
  %8437 = shufflevector <16 x i8> %8412, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8438 = bitcast <16 x i8> %8437 to <8 x i16>
  %8439 = add <8 x i16> %8436, %8438
  %8440 = add <8 x i16> %8418, %8431
  %8441 = add <8 x i16> %8423, %8439
  %8442 = getelementptr inbounds i16, i16* %8349, i64 %8406
  %8443 = bitcast i16* %8442 to <8 x i16>*
  store <8 x i16> %8431, <8 x i16>* %8443, align 16
  %8444 = getelementptr inbounds i16, i16* %8350, i64 %8406
  %8445 = bitcast i16* %8444 to <8 x i16>*
  store <8 x i16> %8439, <8 x i16>* %8445, align 16
  %8446 = getelementptr inbounds i16, i16* %8351, i64 %8406
  %8447 = bitcast i16* %8446 to <8 x i16>*
  store <8 x i16> %8440, <8 x i16>* %8447, align 16
  %8448 = getelementptr inbounds i16, i16* %8352, i64 %8406
  %8449 = bitcast i16* %8448 to <8 x i16>*
  store <8 x i16> %8441, <8 x i16>* %8449, align 16
  %8450 = bitcast <2 x i64> %8405 to <16 x i8>
  %8451 = bitcast <2 x i64> %8386 to <16 x i8>
  %8452 = shufflevector <16 x i8> %8451, <16 x i8> %8450, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8453 = shufflevector <16 x i8> %8451, <16 x i8> %8450, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %8454 = shufflevector <16 x i8> %8451, <16 x i8> %8450, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %8455 = shufflevector <16 x i8> %8451, <16 x i8> %8450, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %8456 = shufflevector <16 x i8> %8451, <16 x i8> %8450, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %8457 = shufflevector <16 x i8> %8452, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8458 = shufflevector <16 x i8> %8456, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8459 = bitcast <16 x i8> %8457 to <8 x i16>
  %8460 = bitcast <16 x i8> %8458 to <8 x i16>
  %8461 = add <8 x i16> %8460, %8459
  %8462 = shufflevector <16 x i8> %8452, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8463 = shufflevector <16 x i8> %8456, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8464 = bitcast <16 x i8> %8462 to <8 x i16>
  %8465 = bitcast <16 x i8> %8463 to <8 x i16>
  %8466 = add <8 x i16> %8465, %8464
  %8467 = shufflevector <16 x i8> %8453, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8468 = shufflevector <16 x i8> %8454, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8469 = bitcast <16 x i8> %8467 to <8 x i16>
  %8470 = bitcast <16 x i8> %8468 to <8 x i16>
  %8471 = add <8 x i16> %8470, %8469
  %8472 = shufflevector <16 x i8> %8455, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8473 = bitcast <16 x i8> %8472 to <8 x i16>
  %8474 = add <8 x i16> %8471, %8473
  %8475 = shufflevector <16 x i8> %8453, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8476 = shufflevector <16 x i8> %8454, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8477 = bitcast <16 x i8> %8475 to <8 x i16>
  %8478 = bitcast <16 x i8> %8476 to <8 x i16>
  %8479 = add <8 x i16> %8478, %8477
  %8480 = shufflevector <16 x i8> %8455, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8481 = bitcast <16 x i8> %8480 to <8 x i16>
  %8482 = add <8 x i16> %8479, %8481
  %8483 = add <8 x i16> %8461, %8474
  %8484 = add <8 x i16> %8466, %8482
  %8485 = getelementptr inbounds i16, i16* %8353, i64 %8406
  %8486 = bitcast i16* %8485 to <8 x i16>*
  store <8 x i16> %8474, <8 x i16>* %8486, align 16
  %8487 = getelementptr inbounds i16, i16* %8354, i64 %8406
  %8488 = bitcast i16* %8487 to <8 x i16>*
  store <8 x i16> %8482, <8 x i16>* %8488, align 16
  %8489 = getelementptr inbounds i16, i16* %8355, i64 %8406
  %8490 = bitcast i16* %8489 to <8 x i16>*
  store <8 x i16> %8483, <8 x i16>* %8490, align 16
  %8491 = getelementptr inbounds i16, i16* %8356, i64 %8406
  %8492 = bitcast i16* %8491 to <8 x i16>*
  store <8 x i16> %8484, <8 x i16>* %8492, align 16
  %8493 = shufflevector <16 x i8> %8407, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8494 = bitcast <16 x i8> %8493 to <8 x i16>
  %8495 = mul <8 x i16> %8494, %8494
  %8496 = shufflevector <16 x i8> %8450, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8497 = bitcast <16 x i8> %8496 to <8 x i16>
  %8498 = mul <8 x i16> %8497, %8497
  %8499 = bitcast <8 x i16> %8495 to <16 x i8>
  %8500 = bitcast <8 x i16> %8393 to <16 x i8>
  %8501 = shufflevector <16 x i8> %8500, <16 x i8> %8499, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %8502 = bitcast <16 x i8> %8501 to <8 x i16>
  %8503 = shufflevector <16 x i8> %8500, <16 x i8> %8499, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %8504 = bitcast <16 x i8> %8503 to <8 x i16>
  %8505 = shufflevector <16 x i8> %8500, <16 x i8> %8499, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %8506 = bitcast <16 x i8> %8505 to <8 x i16>
  %8507 = shufflevector <16 x i8> %8500, <16 x i8> %8499, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8508 = bitcast <16 x i8> %8507 to <8 x i16>
  %8509 = shufflevector <8 x i16> %8393, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8510 = shufflevector <8 x i16> %8508, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8511 = bitcast <8 x i16> %8509 to <4 x i32>
  %8512 = bitcast <8 x i16> %8510 to <4 x i32>
  %8513 = add <4 x i32> %8512, %8511
  %8514 = shufflevector <8 x i16> %8502, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8515 = shufflevector <8 x i16> %8504, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8516 = bitcast <8 x i16> %8514 to <4 x i32>
  %8517 = bitcast <8 x i16> %8515 to <4 x i32>
  %8518 = add <4 x i32> %8517, %8516
  %8519 = shufflevector <8 x i16> %8506, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8520 = bitcast <8 x i16> %8519 to <4 x i32>
  %8521 = add <4 x i32> %8518, %8520
  %8522 = add <4 x i32> %8513, %8521
  %8523 = shufflevector <8 x i16> %8393, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8524 = shufflevector <8 x i16> %8508, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8525 = bitcast <8 x i16> %8523 to <4 x i32>
  %8526 = bitcast <8 x i16> %8524 to <4 x i32>
  %8527 = add <4 x i32> %8526, %8525
  %8528 = shufflevector <8 x i16> %8502, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8529 = shufflevector <8 x i16> %8504, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8530 = bitcast <8 x i16> %8528 to <4 x i32>
  %8531 = bitcast <8 x i16> %8529 to <4 x i32>
  %8532 = add <4 x i32> %8531, %8530
  %8533 = shufflevector <8 x i16> %8506, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8534 = bitcast <8 x i16> %8533 to <4 x i32>
  %8535 = add <4 x i32> %8532, %8534
  %8536 = add <4 x i32> %8527, %8535
  %8537 = getelementptr inbounds i32, i32* %8052, i64 %8406
  %8538 = bitcast i32* %8537 to <4 x i32>*
  store <4 x i32> %8521, <4 x i32>* %8538, align 16
  %8539 = getelementptr inbounds i32, i32* %8537, i64 4
  %8540 = bitcast i32* %8539 to <4 x i32>*
  store <4 x i32> %8535, <4 x i32>* %8540, align 16
  %8541 = getelementptr inbounds i32, i32* %8056, i64 %8406
  %8542 = bitcast i32* %8541 to <4 x i32>*
  store <4 x i32> %8522, <4 x i32>* %8542, align 16
  %8543 = getelementptr inbounds i32, i32* %8541, i64 4
  %8544 = bitcast i32* %8543 to <4 x i32>*
  store <4 x i32> %8536, <4 x i32>* %8544, align 16
  %8545 = bitcast <8 x i16> %8498 to <16 x i8>
  %8546 = bitcast <8 x i16> %8392 to <16 x i8>
  %8547 = shufflevector <16 x i8> %8546, <16 x i8> %8545, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %8548 = bitcast <16 x i8> %8547 to <8 x i16>
  %8549 = shufflevector <16 x i8> %8546, <16 x i8> %8545, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %8550 = bitcast <16 x i8> %8549 to <8 x i16>
  %8551 = shufflevector <16 x i8> %8546, <16 x i8> %8545, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %8552 = bitcast <16 x i8> %8551 to <8 x i16>
  %8553 = shufflevector <16 x i8> %8546, <16 x i8> %8545, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8554 = bitcast <16 x i8> %8553 to <8 x i16>
  %8555 = shufflevector <8 x i16> %8392, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8556 = shufflevector <8 x i16> %8554, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8557 = bitcast <8 x i16> %8555 to <4 x i32>
  %8558 = bitcast <8 x i16> %8556 to <4 x i32>
  %8559 = add <4 x i32> %8558, %8557
  %8560 = shufflevector <8 x i16> %8548, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8561 = shufflevector <8 x i16> %8550, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8562 = bitcast <8 x i16> %8560 to <4 x i32>
  %8563 = bitcast <8 x i16> %8561 to <4 x i32>
  %8564 = add <4 x i32> %8563, %8562
  %8565 = shufflevector <8 x i16> %8552, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8566 = bitcast <8 x i16> %8565 to <4 x i32>
  %8567 = add <4 x i32> %8564, %8566
  %8568 = add <4 x i32> %8559, %8567
  %8569 = shufflevector <8 x i16> %8392, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8570 = shufflevector <8 x i16> %8554, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8571 = bitcast <8 x i16> %8569 to <4 x i32>
  %8572 = bitcast <8 x i16> %8570 to <4 x i32>
  %8573 = add <4 x i32> %8572, %8571
  %8574 = shufflevector <8 x i16> %8548, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8575 = shufflevector <8 x i16> %8550, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8576 = bitcast <8 x i16> %8574 to <4 x i32>
  %8577 = bitcast <8 x i16> %8575 to <4 x i32>
  %8578 = add <4 x i32> %8577, %8576
  %8579 = shufflevector <8 x i16> %8552, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8580 = bitcast <8 x i16> %8579 to <4 x i32>
  %8581 = add <4 x i32> %8578, %8580
  %8582 = add <4 x i32> %8573, %8581
  %8583 = getelementptr inbounds i32, i32* %8098, i64 %8406
  %8584 = bitcast i32* %8583 to <4 x i32>*
  store <4 x i32> %8567, <4 x i32>* %8584, align 16
  %8585 = getelementptr inbounds i32, i32* %8583, i64 4
  %8586 = bitcast i32* %8585 to <4 x i32>*
  store <4 x i32> %8581, <4 x i32>* %8586, align 16
  %8587 = getelementptr inbounds i32, i32* %8102, i64 %8406
  %8588 = bitcast i32* %8587 to <4 x i32>*
  store <4 x i32> %8568, <4 x i32>* %8588, align 16
  %8589 = getelementptr inbounds i32, i32* %8587, i64 4
  %8590 = bitcast i32* %8589 to <4 x i32>*
  store <4 x i32> %8582, <4 x i32>* %8590, align 16
  %8591 = getelementptr inbounds i16, i16* %8357, i64 %8406
  %8592 = bitcast i16* %8591 to <8 x i16>*
  %8593 = load <8 x i16>, <8 x i16>* %8592, align 16
  %8594 = getelementptr inbounds i16, i16* %8358, i64 %8406
  %8595 = bitcast i16* %8594 to <8 x i16>*
  %8596 = load <8 x i16>, <8 x i16>* %8595, align 16
  %8597 = getelementptr inbounds i32, i32* %8110, i64 %8406
  %8598 = bitcast i32* %8597 to <4 x i32>*
  %8599 = load <4 x i32>, <4 x i32>* %8598, align 16
  %8600 = getelementptr inbounds i32, i32* %8597, i64 4
  %8601 = bitcast i32* %8600 to <4 x i32>*
  %8602 = load <4 x i32>, <4 x i32>* %8601, align 16
  %8603 = getelementptr inbounds i32, i32* %8116, i64 %8406
  %8604 = bitcast i32* %8603 to <4 x i32>*
  %8605 = load <4 x i32>, <4 x i32>* %8604, align 16
  %8606 = getelementptr inbounds i32, i32* %8603, i64 4
  %8607 = bitcast i32* %8606 to <4 x i32>*
  %8608 = load <4 x i32>, <4 x i32>* %8607, align 16
  %8609 = add <8 x i16> %8596, %8431
  %8610 = add <8 x i16> %8609, %8593
  %8611 = add <4 x i32> %8605, %8521
  %8612 = add <4 x i32> %8611, %8599
  %8613 = add <4 x i32> %8608, %8535
  %8614 = add <4 x i32> %8613, %8602
  %8615 = shufflevector <8 x i16> %8610, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8616 = shufflevector <8 x i16> %8610, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8617 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8615, <8 x i16> %8615) #5
  %8618 = mul <4 x i32> %8612, <i32 9, i32 9, i32 9, i32 9>
  %8619 = sub <4 x i32> %8618, %8617
  %8620 = icmp sgt <4 x i32> %8619, zeroinitializer
  %8621 = select <4 x i1> %8620, <4 x i32> %8619, <4 x i32> zeroinitializer
  %8622 = mul <4 x i32> %8621, %6623
  %8623 = add <4 x i32> %8622, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8624 = lshr <4 x i32> %8623, <i32 20, i32 20, i32 20, i32 20>
  %8625 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8616, <8 x i16> %8616) #5
  %8626 = mul <4 x i32> %8614, <i32 9, i32 9, i32 9, i32 9>
  %8627 = sub <4 x i32> %8626, %8625
  %8628 = icmp sgt <4 x i32> %8627, zeroinitializer
  %8629 = select <4 x i1> %8628, <4 x i32> %8627, <4 x i32> zeroinitializer
  %8630 = mul <4 x i32> %8629, %6623
  %8631 = add <4 x i32> %8630, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8632 = lshr <4 x i32> %8631, <i32 20, i32 20, i32 20, i32 20>
  %8633 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8624, <4 x i32> %8632) #5
  %8634 = add <8 x i16> %8609, %8474
  %8635 = add <4 x i32> %8611, %8567
  %8636 = add <4 x i32> %8613, %8581
  %8637 = shufflevector <8 x i16> %8634, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8638 = shufflevector <8 x i16> %8634, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8639 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8637, <8 x i16> %8637) #5
  %8640 = mul <4 x i32> %8635, <i32 9, i32 9, i32 9, i32 9>
  %8641 = sub <4 x i32> %8640, %8639
  %8642 = icmp sgt <4 x i32> %8641, zeroinitializer
  %8643 = select <4 x i1> %8642, <4 x i32> %8641, <4 x i32> zeroinitializer
  %8644 = mul <4 x i32> %8643, %6623
  %8645 = add <4 x i32> %8644, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8646 = lshr <4 x i32> %8645, <i32 20, i32 20, i32 20, i32 20>
  %8647 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8638, <8 x i16> %8638) #5
  %8648 = mul <4 x i32> %8636, <i32 9, i32 9, i32 9, i32 9>
  %8649 = sub <4 x i32> %8648, %8647
  %8650 = icmp sgt <4 x i32> %8649, zeroinitializer
  %8651 = select <4 x i1> %8650, <4 x i32> %8649, <4 x i32> zeroinitializer
  %8652 = mul <4 x i32> %8651, %6623
  %8653 = add <4 x i32> %8652, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8654 = lshr <4 x i32> %8653, <i32 20, i32 20, i32 20, i32 20>
  %8655 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8646, <4 x i32> %8654) #5
  %8656 = getelementptr inbounds i16, i16* %8359, i64 %8406
  %8657 = bitcast i16* %8656 to <8 x i16>*
  %8658 = load <8 x i16>, <8 x i16>* %8657, align 16
  %8659 = getelementptr inbounds i16, i16* %8360, i64 %8406
  %8660 = bitcast i16* %8659 to <8 x i16>*
  %8661 = load <8 x i16>, <8 x i16>* %8660, align 16
  %8662 = getelementptr inbounds i16, i16* %8361, i64 %8406
  %8663 = bitcast i16* %8662 to <8 x i16>*
  %8664 = load <8 x i16>, <8 x i16>* %8663, align 16
  %8665 = getelementptr inbounds i32, i32* %8128, i64 %8406
  %8666 = bitcast i32* %8665 to <4 x i32>*
  %8667 = load <4 x i32>, <4 x i32>* %8666, align 16
  %8668 = getelementptr inbounds i32, i32* %8665, i64 4
  %8669 = bitcast i32* %8668 to <4 x i32>*
  %8670 = load <4 x i32>, <4 x i32>* %8669, align 16
  %8671 = getelementptr inbounds i32, i32* %8134, i64 %8406
  %8672 = bitcast i32* %8671 to <4 x i32>*
  %8673 = load <4 x i32>, <4 x i32>* %8672, align 16
  %8674 = getelementptr inbounds i32, i32* %8671, i64 4
  %8675 = bitcast i32* %8674 to <4 x i32>*
  %8676 = load <4 x i32>, <4 x i32>* %8675, align 16
  %8677 = getelementptr inbounds i32, i32* %8140, i64 %8406
  %8678 = bitcast i32* %8677 to <4 x i32>*
  %8679 = load <4 x i32>, <4 x i32>* %8678, align 16
  %8680 = getelementptr inbounds i32, i32* %8677, i64 4
  %8681 = bitcast i32* %8680 to <4 x i32>*
  %8682 = load <4 x i32>, <4 x i32>* %8681, align 16
  %8683 = add <8 x i16> %8483, %8440
  %8684 = add <8 x i16> %8683, %8658
  %8685 = add <8 x i16> %8684, %8661
  %8686 = add <8 x i16> %8685, %8664
  %8687 = add <4 x i32> %8568, %8522
  %8688 = add <4 x i32> %8687, %8667
  %8689 = add <4 x i32> %8688, %8673
  %8690 = add <4 x i32> %8689, %8679
  %8691 = add <4 x i32> %8582, %8536
  %8692 = add <4 x i32> %8691, %8670
  %8693 = add <4 x i32> %8692, %8676
  %8694 = add <4 x i32> %8693, %8682
  %8695 = shufflevector <8 x i16> %8686, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8696 = shufflevector <8 x i16> %8686, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8697 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8695, <8 x i16> %8695) #5
  %8698 = mul <4 x i32> %8690, <i32 25, i32 25, i32 25, i32 25>
  %8699 = sub <4 x i32> %8698, %8697
  %8700 = icmp sgt <4 x i32> %8699, zeroinitializer
  %8701 = select <4 x i1> %8700, <4 x i32> %8699, <4 x i32> zeroinitializer
  %8702 = mul <4 x i32> %8701, %6744
  %8703 = add <4 x i32> %8702, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8704 = lshr <4 x i32> %8703, <i32 20, i32 20, i32 20, i32 20>
  %8705 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8696, <8 x i16> %8696) #5
  %8706 = mul <4 x i32> %8694, <i32 25, i32 25, i32 25, i32 25>
  %8707 = sub <4 x i32> %8706, %8705
  %8708 = icmp sgt <4 x i32> %8707, zeroinitializer
  %8709 = select <4 x i1> %8708, <4 x i32> %8707, <4 x i32> zeroinitializer
  %8710 = mul <4 x i32> %8709, %6744
  %8711 = add <4 x i32> %8710, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8712 = lshr <4 x i32> %8711, <i32 20, i32 20, i32 20, i32 20>
  %8713 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8704, <4 x i32> %8712) #5
  %8714 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %8713, <8 x i16> undef) #5
  %8715 = bitcast <16 x i8> %8714 to <2 x i64>
  %8716 = extractelement <2 x i64> %8715, i32 0
  %8717 = lshr i64 %8716, 8
  %8718 = lshr i64 %8716, 16
  %8719 = lshr i64 %8716, 24
  %8720 = lshr i64 %8716, 32
  %8721 = lshr i64 %8716, 40
  %8722 = lshr i64 %8716, 48
  %8723 = lshr i64 %8716, 56
  %8724 = and i64 %8716, 255
  %8725 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8724
  %8726 = load i8, i8* %8725, align 1
  %8727 = insertelement <16 x i8> %8391, i8 %8726, i64 8
  %8728 = and i64 %8717, 255
  %8729 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8728
  %8730 = load i8, i8* %8729, align 1
  %8731 = insertelement <16 x i8> %8727, i8 %8730, i64 9
  %8732 = and i64 %8718, 255
  %8733 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8732
  %8734 = load i8, i8* %8733, align 1
  %8735 = insertelement <16 x i8> %8731, i8 %8734, i64 10
  %8736 = and i64 %8719, 255
  %8737 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8736
  %8738 = load i8, i8* %8737, align 1
  %8739 = insertelement <16 x i8> %8735, i8 %8738, i64 11
  %8740 = and i64 %8720, 255
  %8741 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8740
  %8742 = load i8, i8* %8741, align 1
  %8743 = insertelement <16 x i8> %8739, i8 %8742, i64 12
  %8744 = and i64 %8721, 255
  %8745 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8744
  %8746 = load i8, i8* %8745, align 1
  %8747 = insertelement <16 x i8> %8743, i8 %8746, i64 13
  %8748 = and i64 %8722, 255
  %8749 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8748
  %8750 = load i8, i8* %8749, align 1
  %8751 = insertelement <16 x i8> %8747, i8 %8750, i64 14
  %8752 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %8723
  %8753 = load i8, i8* %8752, align 1
  %8754 = insertelement <16 x i8> %8751, i8 %8753, i64 15
  %8755 = shufflevector <16 x i8> %8754, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8756 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %8755, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %8757 = shufflevector <8 x i16> %8756, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8758 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8757, <8 x i16> %8695) #5
  %8759 = shufflevector <8 x i16> %8756, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8760 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8759, <8 x i16> %8696) #5
  %8761 = add <4 x i32> %8758, <i32 512, i32 512, i32 512, i32 512>
  %8762 = lshr <4 x i32> %8761, <i32 10, i32 10, i32 10, i32 10>
  %8763 = add <4 x i32> %8760, <i32 512, i32 512, i32 512, i32 512>
  %8764 = lshr <4 x i32> %8763, <i32 10, i32 10, i32 10, i32 10>
  %8765 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8762, <4 x i32> %8764) #5
  %8766 = shufflevector <16 x i8> %8407, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8767 = bitcast <16 x i8> %8766 to <8 x i16>
  %8768 = mul <8 x i16> %8767, %8767
  %8769 = shufflevector <16 x i8> %8450, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8770 = bitcast <16 x i8> %8769 to <8 x i16>
  %8771 = mul <8 x i16> %8770, %8770
  %8772 = bitcast <8 x i16> %8768 to <16 x i8>
  %8773 = shufflevector <16 x i8> %8499, <16 x i8> %8772, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %8774 = bitcast <16 x i8> %8773 to <8 x i16>
  %8775 = shufflevector <16 x i8> %8499, <16 x i8> %8772, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %8776 = bitcast <16 x i8> %8775 to <8 x i16>
  %8777 = shufflevector <16 x i8> %8499, <16 x i8> %8772, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %8778 = bitcast <16 x i8> %8777 to <8 x i16>
  %8779 = shufflevector <16 x i8> %8499, <16 x i8> %8772, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8780 = bitcast <16 x i8> %8779 to <8 x i16>
  %8781 = shufflevector <8 x i16> %8495, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8782 = shufflevector <8 x i16> %8780, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8783 = bitcast <8 x i16> %8781 to <4 x i32>
  %8784 = bitcast <8 x i16> %8782 to <4 x i32>
  %8785 = add <4 x i32> %8784, %8783
  %8786 = shufflevector <8 x i16> %8774, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8787 = shufflevector <8 x i16> %8776, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8788 = bitcast <8 x i16> %8786 to <4 x i32>
  %8789 = bitcast <8 x i16> %8787 to <4 x i32>
  %8790 = add <4 x i32> %8789, %8788
  %8791 = shufflevector <8 x i16> %8778, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8792 = bitcast <8 x i16> %8791 to <4 x i32>
  %8793 = add <4 x i32> %8790, %8792
  %8794 = add <4 x i32> %8785, %8793
  %8795 = shufflevector <8 x i16> %8495, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8796 = shufflevector <8 x i16> %8780, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8797 = bitcast <8 x i16> %8795 to <4 x i32>
  %8798 = bitcast <8 x i16> %8796 to <4 x i32>
  %8799 = add <4 x i32> %8798, %8797
  %8800 = shufflevector <8 x i16> %8774, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8801 = shufflevector <8 x i16> %8776, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8802 = bitcast <8 x i16> %8800 to <4 x i32>
  %8803 = bitcast <8 x i16> %8801 to <4 x i32>
  %8804 = add <4 x i32> %8803, %8802
  %8805 = shufflevector <8 x i16> %8778, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8806 = bitcast <8 x i16> %8805 to <4 x i32>
  %8807 = add <4 x i32> %8804, %8806
  %8808 = add <4 x i32> %8799, %8807
  %8809 = getelementptr inbounds i32, i32* %8362, i64 %8406
  %8810 = bitcast i32* %8809 to <4 x i32>*
  store <4 x i32> %8793, <4 x i32>* %8810, align 16
  %8811 = getelementptr inbounds i32, i32* %8809, i64 4
  %8812 = bitcast i32* %8811 to <4 x i32>*
  store <4 x i32> %8807, <4 x i32>* %8812, align 16
  %8813 = getelementptr inbounds i32, i32* %8363, i64 %8406
  %8814 = bitcast i32* %8813 to <4 x i32>*
  store <4 x i32> %8794, <4 x i32>* %8814, align 16
  %8815 = getelementptr inbounds i32, i32* %8813, i64 4
  %8816 = bitcast i32* %8815 to <4 x i32>*
  store <4 x i32> %8808, <4 x i32>* %8816, align 16
  %8817 = bitcast <8 x i16> %8771 to <16 x i8>
  %8818 = shufflevector <16 x i8> %8545, <16 x i8> %8817, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %8819 = bitcast <16 x i8> %8818 to <8 x i16>
  %8820 = shufflevector <16 x i8> %8545, <16 x i8> %8817, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %8821 = bitcast <16 x i8> %8820 to <8 x i16>
  %8822 = shufflevector <16 x i8> %8545, <16 x i8> %8817, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %8823 = bitcast <16 x i8> %8822 to <8 x i16>
  %8824 = shufflevector <16 x i8> %8545, <16 x i8> %8817, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8825 = bitcast <16 x i8> %8824 to <8 x i16>
  %8826 = shufflevector <8 x i16> %8498, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8827 = shufflevector <8 x i16> %8825, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8828 = bitcast <8 x i16> %8826 to <4 x i32>
  %8829 = bitcast <8 x i16> %8827 to <4 x i32>
  %8830 = add <4 x i32> %8829, %8828
  %8831 = shufflevector <8 x i16> %8819, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8832 = shufflevector <8 x i16> %8821, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8833 = bitcast <8 x i16> %8831 to <4 x i32>
  %8834 = bitcast <8 x i16> %8832 to <4 x i32>
  %8835 = add <4 x i32> %8834, %8833
  %8836 = shufflevector <8 x i16> %8823, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8837 = bitcast <8 x i16> %8836 to <4 x i32>
  %8838 = add <4 x i32> %8835, %8837
  %8839 = add <4 x i32> %8830, %8838
  %8840 = shufflevector <8 x i16> %8498, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8841 = shufflevector <8 x i16> %8825, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8842 = bitcast <8 x i16> %8840 to <4 x i32>
  %8843 = bitcast <8 x i16> %8841 to <4 x i32>
  %8844 = add <4 x i32> %8843, %8842
  %8845 = shufflevector <8 x i16> %8819, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8846 = shufflevector <8 x i16> %8821, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8847 = bitcast <8 x i16> %8845 to <4 x i32>
  %8848 = bitcast <8 x i16> %8846 to <4 x i32>
  %8849 = add <4 x i32> %8848, %8847
  %8850 = shufflevector <8 x i16> %8823, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8851 = bitcast <8 x i16> %8850 to <4 x i32>
  %8852 = add <4 x i32> %8849, %8851
  %8853 = add <4 x i32> %8844, %8852
  %8854 = getelementptr inbounds i32, i32* %8364, i64 %8406
  %8855 = bitcast i32* %8854 to <4 x i32>*
  store <4 x i32> %8838, <4 x i32>* %8855, align 16
  %8856 = getelementptr inbounds i32, i32* %8854, i64 4
  %8857 = bitcast i32* %8856 to <4 x i32>*
  store <4 x i32> %8852, <4 x i32>* %8857, align 16
  %8858 = getelementptr inbounds i32, i32* %8365, i64 %8406
  %8859 = bitcast i32* %8858 to <4 x i32>*
  store <4 x i32> %8839, <4 x i32>* %8859, align 16
  %8860 = getelementptr inbounds i32, i32* %8858, i64 4
  %8861 = bitcast i32* %8860 to <4 x i32>*
  store <4 x i32> %8853, <4 x i32>* %8861, align 16
  %8862 = add nuw nsw i64 %8406, 8
  %8863 = getelementptr inbounds i16, i16* %8357, i64 %8862
  %8864 = bitcast i16* %8863 to <8 x i16>*
  %8865 = load <8 x i16>, <8 x i16>* %8864, align 16
  %8866 = getelementptr inbounds i16, i16* %8358, i64 %8862
  %8867 = bitcast i16* %8866 to <8 x i16>*
  %8868 = load <8 x i16>, <8 x i16>* %8867, align 16
  %8869 = getelementptr inbounds i32, i32* %8110, i64 %8862
  %8870 = bitcast i32* %8869 to <4 x i32>*
  %8871 = load <4 x i32>, <4 x i32>* %8870, align 16
  %8872 = getelementptr inbounds i32, i32* %8869, i64 4
  %8873 = bitcast i32* %8872 to <4 x i32>*
  %8874 = load <4 x i32>, <4 x i32>* %8873, align 16
  %8875 = getelementptr inbounds i32, i32* %8116, i64 %8862
  %8876 = bitcast i32* %8875 to <4 x i32>*
  %8877 = load <4 x i32>, <4 x i32>* %8876, align 16
  %8878 = getelementptr inbounds i32, i32* %8875, i64 4
  %8879 = bitcast i32* %8878 to <4 x i32>*
  %8880 = load <4 x i32>, <4 x i32>* %8879, align 16
  %8881 = add <8 x i16> %8868, %8439
  %8882 = add <8 x i16> %8881, %8865
  %8883 = add <4 x i32> %8877, %8793
  %8884 = add <4 x i32> %8883, %8871
  %8885 = add <4 x i32> %8880, %8807
  %8886 = add <4 x i32> %8885, %8874
  %8887 = shufflevector <8 x i16> %8882, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8888 = shufflevector <8 x i16> %8882, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8889 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8887, <8 x i16> %8887) #5
  %8890 = mul <4 x i32> %8884, <i32 9, i32 9, i32 9, i32 9>
  %8891 = sub <4 x i32> %8890, %8889
  %8892 = icmp sgt <4 x i32> %8891, zeroinitializer
  %8893 = select <4 x i1> %8892, <4 x i32> %8891, <4 x i32> zeroinitializer
  %8894 = mul <4 x i32> %8893, %6623
  %8895 = add <4 x i32> %8894, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8896 = lshr <4 x i32> %8895, <i32 20, i32 20, i32 20, i32 20>
  %8897 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8888, <8 x i16> %8888) #5
  %8898 = mul <4 x i32> %8886, <i32 9, i32 9, i32 9, i32 9>
  %8899 = sub <4 x i32> %8898, %8897
  %8900 = icmp sgt <4 x i32> %8899, zeroinitializer
  %8901 = select <4 x i1> %8900, <4 x i32> %8899, <4 x i32> zeroinitializer
  %8902 = mul <4 x i32> %8901, %6623
  %8903 = add <4 x i32> %8902, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8904 = lshr <4 x i32> %8903, <i32 20, i32 20, i32 20, i32 20>
  %8905 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8896, <4 x i32> %8904) #5
  %8906 = add <8 x i16> %8881, %8482
  %8907 = add <4 x i32> %8883, %8838
  %8908 = add <4 x i32> %8885, %8852
  %8909 = shufflevector <8 x i16> %8906, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8910 = shufflevector <8 x i16> %8906, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8911 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8909, <8 x i16> %8909) #5
  %8912 = mul <4 x i32> %8907, <i32 9, i32 9, i32 9, i32 9>
  %8913 = sub <4 x i32> %8912, %8911
  %8914 = icmp sgt <4 x i32> %8913, zeroinitializer
  %8915 = select <4 x i1> %8914, <4 x i32> %8913, <4 x i32> zeroinitializer
  %8916 = mul <4 x i32> %8915, %6623
  %8917 = add <4 x i32> %8916, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8918 = lshr <4 x i32> %8917, <i32 20, i32 20, i32 20, i32 20>
  %8919 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8910, <8 x i16> %8910) #5
  %8920 = mul <4 x i32> %8908, <i32 9, i32 9, i32 9, i32 9>
  %8921 = sub <4 x i32> %8920, %8919
  %8922 = icmp sgt <4 x i32> %8921, zeroinitializer
  %8923 = select <4 x i1> %8922, <4 x i32> %8921, <4 x i32> zeroinitializer
  %8924 = mul <4 x i32> %8923, %6623
  %8925 = add <4 x i32> %8924, <i32 524288, i32 524288, i32 524288, i32 524288>
  %8926 = lshr <4 x i32> %8925, <i32 20, i32 20, i32 20, i32 20>
  %8927 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8918, <4 x i32> %8926) #5
  %8928 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %8633, <8 x i16> %8905) #5
  %8929 = icmp ult <16 x i8> %8928, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %8930 = select <16 x i1> %8929, <16 x i8> %8928, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %8931 = icmp sgt <16 x i8> %8930, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %8932 = select <16 x i1> %8931, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %8930
  %8933 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %8932) #5
  %8934 = add nsw <16 x i8> %8930, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %8935 = icmp sgt <16 x i8> %8934, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %8936 = select <16 x i1> %8935, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %8934
  %8937 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %8936) #5
  %8938 = or <16 x i8> %8937, %8933
  %8939 = add nsw <16 x i8> %8930, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %8940 = icmp sgt <16 x i8> %8939, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %8941 = select <16 x i1> %8940, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %8939
  %8942 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %8941) #5
  %8943 = or <16 x i8> %8938, %8942
  %8944 = xor <16 x i8> %8928, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %8945 = icmp ugt <16 x i8> %8943, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %8946 = select <16 x i1> %8945, <16 x i8> %8943, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %8947 = icmp sgt <16 x i8> %8944, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %8948 = icmp sgt <16 x i8> %8944, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %8949 = sext <16 x i1> %8948 to <16 x i8>
  %8950 = icmp sgt <16 x i8> %8944, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %8951 = icmp sgt <16 x i8> %8944, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %8952 = icmp eq <16 x i8> %8944, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %8953 = zext <16 x i1> %8947 to <16 x i8>
  %8954 = sub nsw <16 x i8> %8949, %8953
  %8955 = zext <16 x i1> %8950 to <16 x i8>
  %8956 = sub nsw <16 x i8> %8954, %8955
  %8957 = zext <16 x i1> %8951 to <16 x i8>
  %8958 = sub nsw <16 x i8> %8956, %8957
  %8959 = zext <16 x i1> %8952 to <16 x i8>
  %8960 = sub nsw <16 x i8> %8958, %8959
  %8961 = add <16 x i8> %8960, %8946
  %8962 = bitcast <16 x i8> %8961 to <2 x i64>
  %8963 = shufflevector <16 x i8> %8961, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %8964 = bitcast <16 x i8> %8963 to <8 x i16>
  %8965 = shufflevector <8 x i16> %8964, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8966 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8965, <8 x i16> %8615) #5
  %8967 = shufflevector <8 x i16> %8964, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8968 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8967, <8 x i16> %8616) #5
  %8969 = mul <4 x i32> %8966, <i32 455, i32 455, i32 455, i32 455>
  %8970 = mul <4 x i32> %8968, <i32 455, i32 455, i32 455, i32 455>
  %8971 = add <4 x i32> %8969, <i32 2048, i32 2048, i32 2048, i32 2048>
  %8972 = lshr <4 x i32> %8971, <i32 12, i32 12, i32 12, i32 12>
  %8973 = add <4 x i32> %8970, <i32 2048, i32 2048, i32 2048, i32 2048>
  %8974 = lshr <4 x i32> %8973, <i32 12, i32 12, i32 12, i32 12>
  %8975 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8972, <4 x i32> %8974) #5
  %8976 = shufflevector <16 x i8> %8961, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %8977 = bitcast <16 x i8> %8976 to <8 x i16>
  %8978 = shufflevector <8 x i16> %8977, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %8979 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8978, <8 x i16> %8887) #5
  %8980 = shufflevector <8 x i16> %8977, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %8981 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %8980, <8 x i16> %8888) #5
  %8982 = mul <4 x i32> %8979, <i32 455, i32 455, i32 455, i32 455>
  %8983 = mul <4 x i32> %8981, <i32 455, i32 455, i32 455, i32 455>
  %8984 = add <4 x i32> %8982, <i32 2048, i32 2048, i32 2048, i32 2048>
  %8985 = lshr <4 x i32> %8984, <i32 12, i32 12, i32 12, i32 12>
  %8986 = add <4 x i32> %8983, <i32 2048, i32 2048, i32 2048, i32 2048>
  %8987 = lshr <4 x i32> %8986, <i32 12, i32 12, i32 12, i32 12>
  %8988 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %8985, <4 x i32> %8987) #5
  %8989 = shufflevector <2 x i64> %8397, <2 x i64> %8962, <2 x i32> <i32 0, i32 2>
  %8990 = shufflevector <16 x i8> %8961, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %8991 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %8655, <8 x i16> %8927) #5
  %8992 = icmp ult <16 x i8> %8991, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %8993 = select <16 x i1> %8992, <16 x i8> %8991, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %8994 = icmp sgt <16 x i8> %8993, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %8995 = select <16 x i1> %8994, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %8993
  %8996 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %8995) #5
  %8997 = add nsw <16 x i8> %8993, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %8998 = icmp sgt <16 x i8> %8997, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %8999 = select <16 x i1> %8998, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %8997
  %9000 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %8999) #5
  %9001 = or <16 x i8> %9000, %8996
  %9002 = add nsw <16 x i8> %8993, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %9003 = icmp sgt <16 x i8> %9002, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %9004 = select <16 x i1> %9003, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %9002
  %9005 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %9004) #5
  %9006 = or <16 x i8> %9001, %9005
  %9007 = xor <16 x i8> %8991, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %9008 = icmp ugt <16 x i8> %9006, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %9009 = select <16 x i1> %9008, <16 x i8> %9006, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %9010 = icmp sgt <16 x i8> %9007, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %9011 = icmp sgt <16 x i8> %9007, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %9012 = sext <16 x i1> %9011 to <16 x i8>
  %9013 = icmp sgt <16 x i8> %9007, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %9014 = icmp sgt <16 x i8> %9007, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %9015 = icmp eq <16 x i8> %9007, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %9016 = zext <16 x i1> %9010 to <16 x i8>
  %9017 = sub nsw <16 x i8> %9012, %9016
  %9018 = zext <16 x i1> %9013 to <16 x i8>
  %9019 = sub nsw <16 x i8> %9017, %9018
  %9020 = zext <16 x i1> %9014 to <16 x i8>
  %9021 = sub nsw <16 x i8> %9019, %9020
  %9022 = zext <16 x i1> %9015 to <16 x i8>
  %9023 = sub nsw <16 x i8> %9021, %9022
  %9024 = add <16 x i8> %9023, %9009
  %9025 = bitcast <16 x i8> %9024 to <2 x i64>
  %9026 = shufflevector <16 x i8> %9024, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9027 = bitcast <16 x i8> %9026 to <8 x i16>
  %9028 = shufflevector <8 x i16> %9027, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9029 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9028, <8 x i16> %8637) #5
  %9030 = shufflevector <8 x i16> %9027, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9031 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9030, <8 x i16> %8638) #5
  %9032 = mul <4 x i32> %9029, <i32 455, i32 455, i32 455, i32 455>
  %9033 = mul <4 x i32> %9031, <i32 455, i32 455, i32 455, i32 455>
  %9034 = add <4 x i32> %9032, <i32 2048, i32 2048, i32 2048, i32 2048>
  %9035 = lshr <4 x i32> %9034, <i32 12, i32 12, i32 12, i32 12>
  %9036 = add <4 x i32> %9033, <i32 2048, i32 2048, i32 2048, i32 2048>
  %9037 = lshr <4 x i32> %9036, <i32 12, i32 12, i32 12, i32 12>
  %9038 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %9035, <4 x i32> %9037) #5
  %9039 = shufflevector <16 x i8> %9024, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9040 = bitcast <16 x i8> %9039 to <8 x i16>
  %9041 = shufflevector <8 x i16> %9040, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9042 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9041, <8 x i16> %8909) #5
  %9043 = shufflevector <8 x i16> %9040, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9044 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9043, <8 x i16> %8910) #5
  %9045 = mul <4 x i32> %9042, <i32 455, i32 455, i32 455, i32 455>
  %9046 = mul <4 x i32> %9044, <i32 455, i32 455, i32 455, i32 455>
  %9047 = add <4 x i32> %9045, <i32 2048, i32 2048, i32 2048, i32 2048>
  %9048 = lshr <4 x i32> %9047, <i32 12, i32 12, i32 12, i32 12>
  %9049 = add <4 x i32> %9046, <i32 2048, i32 2048, i32 2048, i32 2048>
  %9050 = lshr <4 x i32> %9049, <i32 12, i32 12, i32 12, i32 12>
  %9051 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %9048, <4 x i32> %9050) #5
  %9052 = shufflevector <2 x i64> %8398, <2 x i64> %9025, <2 x i32> <i32 0, i32 2>
  %9053 = shufflevector <16 x i8> %9024, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %9054 = getelementptr inbounds i16, i16* %8359, i64 %8862
  %9055 = bitcast i16* %9054 to <8 x i16>*
  %9056 = load <8 x i16>, <8 x i16>* %9055, align 16
  %9057 = getelementptr inbounds i16, i16* %8360, i64 %8862
  %9058 = bitcast i16* %9057 to <8 x i16>*
  %9059 = load <8 x i16>, <8 x i16>* %9058, align 16
  %9060 = getelementptr inbounds i16, i16* %8361, i64 %8862
  %9061 = bitcast i16* %9060 to <8 x i16>*
  %9062 = load <8 x i16>, <8 x i16>* %9061, align 16
  %9063 = getelementptr inbounds i32, i32* %8128, i64 %8862
  %9064 = bitcast i32* %9063 to <4 x i32>*
  %9065 = load <4 x i32>, <4 x i32>* %9064, align 16
  %9066 = getelementptr inbounds i32, i32* %9063, i64 4
  %9067 = bitcast i32* %9066 to <4 x i32>*
  %9068 = load <4 x i32>, <4 x i32>* %9067, align 16
  %9069 = getelementptr inbounds i32, i32* %8134, i64 %8862
  %9070 = bitcast i32* %9069 to <4 x i32>*
  %9071 = load <4 x i32>, <4 x i32>* %9070, align 16
  %9072 = getelementptr inbounds i32, i32* %9069, i64 4
  %9073 = bitcast i32* %9072 to <4 x i32>*
  %9074 = load <4 x i32>, <4 x i32>* %9073, align 16
  %9075 = getelementptr inbounds i32, i32* %8140, i64 %8862
  %9076 = bitcast i32* %9075 to <4 x i32>*
  %9077 = load <4 x i32>, <4 x i32>* %9076, align 16
  %9078 = getelementptr inbounds i32, i32* %9075, i64 4
  %9079 = bitcast i32* %9078 to <4 x i32>*
  %9080 = load <4 x i32>, <4 x i32>* %9079, align 16
  %9081 = add <8 x i16> %8484, %8441
  %9082 = add <8 x i16> %9081, %9056
  %9083 = add <8 x i16> %9082, %9059
  %9084 = add <8 x i16> %9083, %9062
  %9085 = add <4 x i32> %8839, %8794
  %9086 = add <4 x i32> %9085, %9065
  %9087 = add <4 x i32> %9086, %9071
  %9088 = add <4 x i32> %9087, %9077
  %9089 = add <4 x i32> %8853, %8808
  %9090 = add <4 x i32> %9089, %9068
  %9091 = add <4 x i32> %9090, %9074
  %9092 = add <4 x i32> %9091, %9080
  %9093 = shufflevector <8 x i16> %9084, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9094 = shufflevector <8 x i16> %9084, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9095 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9093, <8 x i16> %9093) #5
  %9096 = mul <4 x i32> %9088, <i32 25, i32 25, i32 25, i32 25>
  %9097 = sub <4 x i32> %9096, %9095
  %9098 = icmp sgt <4 x i32> %9097, zeroinitializer
  %9099 = select <4 x i1> %9098, <4 x i32> %9097, <4 x i32> zeroinitializer
  %9100 = mul <4 x i32> %9099, %6744
  %9101 = add <4 x i32> %9100, <i32 524288, i32 524288, i32 524288, i32 524288>
  %9102 = lshr <4 x i32> %9101, <i32 20, i32 20, i32 20, i32 20>
  %9103 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9094, <8 x i16> %9094) #5
  %9104 = mul <4 x i32> %9092, <i32 25, i32 25, i32 25, i32 25>
  %9105 = sub <4 x i32> %9104, %9103
  %9106 = icmp sgt <4 x i32> %9105, zeroinitializer
  %9107 = select <4 x i1> %9106, <4 x i32> %9105, <4 x i32> zeroinitializer
  %9108 = mul <4 x i32> %9107, %6744
  %9109 = add <4 x i32> %9108, <i32 524288, i32 524288, i32 524288, i32 524288>
  %9110 = lshr <4 x i32> %9109, <i32 20, i32 20, i32 20, i32 20>
  %9111 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %9102, <4 x i32> %9110) #5
  %9112 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %9111, <8 x i16> undef) #5
  %9113 = bitcast <16 x i8> %9112 to <2 x i64>
  %9114 = extractelement <2 x i64> %9113, i32 0
  %9115 = lshr i64 %9114, 8
  %9116 = lshr i64 %9114, 16
  %9117 = lshr i64 %9114, 24
  %9118 = lshr i64 %9114, 32
  %9119 = lshr i64 %9114, 40
  %9120 = lshr i64 %9114, 48
  %9121 = lshr i64 %9114, 56
  %9122 = and i64 %9114, 255
  %9123 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %9122
  %9124 = load i8, i8* %9123, align 1
  %9125 = insertelement <16 x i8> %8390, i8 %9124, i64 0
  %9126 = and i64 %9115, 255
  %9127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %9126
  %9128 = load i8, i8* %9127, align 1
  %9129 = insertelement <16 x i8> %9125, i8 %9128, i64 1
  %9130 = and i64 %9116, 255
  %9131 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %9130
  %9132 = load i8, i8* %9131, align 1
  %9133 = insertelement <16 x i8> %9129, i8 %9132, i64 2
  %9134 = and i64 %9117, 255
  %9135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %9134
  %9136 = load i8, i8* %9135, align 1
  %9137 = insertelement <16 x i8> %9133, i8 %9136, i64 3
  %9138 = and i64 %9118, 255
  %9139 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %9138
  %9140 = load i8, i8* %9139, align 1
  %9141 = insertelement <16 x i8> %9137, i8 %9140, i64 4
  %9142 = and i64 %9119, 255
  %9143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %9142
  %9144 = load i8, i8* %9143, align 1
  %9145 = insertelement <16 x i8> %9141, i8 %9144, i64 5
  %9146 = and i64 %9120, 255
  %9147 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %9146
  %9148 = load i8, i8* %9147, align 1
  %9149 = insertelement <16 x i8> %9145, i8 %9148, i64 6
  %9150 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %9121
  %9151 = load i8, i8* %9150, align 1
  %9152 = insertelement <16 x i8> %9149, i8 %9151, i64 7
  %9153 = shufflevector <16 x i8> %9152, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9154 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %9153, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %9155 = shufflevector <8 x i16> %9154, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9156 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9155, <8 x i16> %9093) #5
  %9157 = shufflevector <8 x i16> %9154, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9158 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9157, <8 x i16> %9094) #5
  %9159 = add <4 x i32> %9156, <i32 512, i32 512, i32 512, i32 512>
  %9160 = lshr <4 x i32> %9159, <i32 10, i32 10, i32 10, i32 10>
  %9161 = add <4 x i32> %9158, <i32 512, i32 512, i32 512, i32 512>
  %9162 = lshr <4 x i32> %9161, <i32 10, i32 10, i32 10, i32 10>
  %9163 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %9160, <4 x i32> %9162) #5
  %9164 = bitcast <2 x i64> %8989 to <16 x i8>
  %9165 = shufflevector <16 x i8> %9164, <16 x i8> %8990, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %9166 = shufflevector <16 x i8> %9164, <16 x i8> %8990, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9167 = bitcast <2 x i64> %9052 to <16 x i8>
  %9168 = shufflevector <16 x i8> %9167, <16 x i8> %9053, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %9169 = shufflevector <16 x i8> %9167, <16 x i8> %9053, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9170 = shufflevector <16 x i8> %8754, <16 x i8> %9152, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %9171 = shufflevector <16 x i8> %8754, <16 x i8> %9152, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9172 = shufflevector <16 x i8> %9164, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9173 = shufflevector <16 x i8> %9165, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9174 = bitcast <16 x i8> %9172 to <8 x i16>
  %9175 = bitcast <16 x i8> %9173 to <8 x i16>
  %9176 = add <8 x i16> %9175, %9174
  %9177 = shufflevector <16 x i8> %9166, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9178 = bitcast <16 x i8> %9177 to <8 x i16>
  %9179 = add <8 x i16> %9176, %9178
  %9180 = shl <8 x i16> %9179, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %9181 = getelementptr inbounds i16, i16* %6215, i64 %8385
  %9182 = bitcast i16* %9181 to <8 x i16>*
  store <8 x i16> %9180, <8 x i16>* %9182, align 16
  %9183 = mul <8 x i16> %9179, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %9184 = add <8 x i16> %9183, %9175
  %9185 = getelementptr inbounds i16, i16* %8366, i64 %8385
  %9186 = bitcast i16* %9185 to <8 x i16>*
  store <8 x i16> %9184, <8 x i16>* %9186, align 16
  %9187 = bitcast <8 x i16> %8975 to <16 x i8>
  %9188 = bitcast <8 x i16> %8395 to <16 x i8>
  %9189 = shufflevector <16 x i8> %9188, <16 x i8> %9187, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9190 = shufflevector <16 x i8> %9188, <16 x i8> %9187, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %9191 = bitcast <16 x i8> %9190 to <8 x i16>
  %9192 = bitcast <16 x i8> %9189 to <8 x i16>
  %9193 = shufflevector <8 x i16> %8395, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9194 = shufflevector <8 x i16> %9192, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9195 = bitcast <8 x i16> %9193 to <4 x i32>
  %9196 = bitcast <8 x i16> %9194 to <4 x i32>
  %9197 = add <4 x i32> %9196, %9195
  %9198 = shufflevector <8 x i16> %9191, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9199 = bitcast <8 x i16> %9198 to <4 x i32>
  %9200 = add <4 x i32> %9197, %9199
  %9201 = shufflevector <8 x i16> %8395, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9202 = shufflevector <8 x i16> %9192, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9203 = bitcast <8 x i16> %9201 to <4 x i32>
  %9204 = bitcast <8 x i16> %9202 to <4 x i32>
  %9205 = add <4 x i32> %9204, %9203
  %9206 = shufflevector <8 x i16> %9191, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9207 = bitcast <8 x i16> %9206 to <4 x i32>
  %9208 = add <4 x i32> %9205, %9207
  %9209 = shl <4 x i32> %9200, <i32 2, i32 2, i32 2, i32 2>
  %9210 = shl <4 x i32> %9208, <i32 2, i32 2, i32 2, i32 2>
  %9211 = getelementptr inbounds i32, i32* %6216, i64 %8385
  %9212 = bitcast i32* %9211 to <4 x i32>*
  store <4 x i32> %9209, <4 x i32>* %9212, align 16
  %9213 = getelementptr inbounds i32, i32* %9211, i64 4
  %9214 = bitcast i32* %9213 to <4 x i32>*
  store <4 x i32> %9210, <4 x i32>* %9214, align 16
  %9215 = mul <4 x i32> %9200, <i32 3, i32 3, i32 3, i32 3>
  %9216 = add <4 x i32> %9215, %9196
  %9217 = sub <4 x i32> %9204, %9208
  %9218 = add <4 x i32> %9217, %9210
  %9219 = getelementptr inbounds i32, i32* %8367, i64 %8385
  %9220 = bitcast i32* %9219 to <4 x i32>*
  store <4 x i32> %9216, <4 x i32>* %9220, align 16
  %9221 = getelementptr inbounds i32, i32* %9219, i64 4
  %9222 = bitcast i32* %9221 to <4 x i32>*
  store <4 x i32> %9218, <4 x i32>* %9222, align 16
  %9223 = shufflevector <16 x i8> %9167, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9224 = shufflevector <16 x i8> %9168, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9225 = bitcast <16 x i8> %9223 to <8 x i16>
  %9226 = bitcast <16 x i8> %9224 to <8 x i16>
  %9227 = add <8 x i16> %9226, %9225
  %9228 = shufflevector <16 x i8> %9169, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9229 = bitcast <16 x i8> %9228 to <8 x i16>
  %9230 = add <8 x i16> %9227, %9229
  %9231 = shl <8 x i16> %9230, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %9232 = getelementptr inbounds i16, i16* %8369, i64 %8385
  %9233 = bitcast i16* %9232 to <8 x i16>*
  store <8 x i16> %9231, <8 x i16>* %9233, align 16
  %9234 = mul <8 x i16> %9230, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %9235 = add <8 x i16> %9234, %9226
  %9236 = getelementptr inbounds i16, i16* %8368, i64 %8385
  %9237 = bitcast i16* %9236 to <8 x i16>*
  store <8 x i16> %9235, <8 x i16>* %9237, align 16
  %9238 = bitcast <8 x i16> %9038 to <16 x i8>
  %9239 = bitcast <8 x i16> %8394 to <16 x i8>
  %9240 = shufflevector <16 x i8> %9239, <16 x i8> %9238, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9241 = shufflevector <16 x i8> %9239, <16 x i8> %9238, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %9242 = bitcast <16 x i8> %9241 to <8 x i16>
  %9243 = bitcast <16 x i8> %9240 to <8 x i16>
  %9244 = shufflevector <8 x i16> %8394, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9245 = shufflevector <8 x i16> %9243, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9246 = bitcast <8 x i16> %9244 to <4 x i32>
  %9247 = bitcast <8 x i16> %9245 to <4 x i32>
  %9248 = add <4 x i32> %9247, %9246
  %9249 = shufflevector <8 x i16> %9242, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9250 = bitcast <8 x i16> %9249 to <4 x i32>
  %9251 = add <4 x i32> %9248, %9250
  %9252 = shufflevector <8 x i16> %8394, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9253 = shufflevector <8 x i16> %9243, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9254 = bitcast <8 x i16> %9252 to <4 x i32>
  %9255 = bitcast <8 x i16> %9253 to <4 x i32>
  %9256 = add <4 x i32> %9255, %9254
  %9257 = shufflevector <8 x i16> %9242, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9258 = bitcast <8 x i16> %9257 to <4 x i32>
  %9259 = add <4 x i32> %9256, %9258
  %9260 = shl <4 x i32> %9251, <i32 2, i32 2, i32 2, i32 2>
  %9261 = shl <4 x i32> %9259, <i32 2, i32 2, i32 2, i32 2>
  %9262 = getelementptr inbounds i32, i32* %8371, i64 %8385
  %9263 = bitcast i32* %9262 to <4 x i32>*
  store <4 x i32> %9260, <4 x i32>* %9263, align 16
  %9264 = getelementptr inbounds i32, i32* %9262, i64 4
  %9265 = bitcast i32* %9264 to <4 x i32>*
  store <4 x i32> %9261, <4 x i32>* %9265, align 16
  %9266 = mul <4 x i32> %9251, <i32 3, i32 3, i32 3, i32 3>
  %9267 = add <4 x i32> %9266, %9247
  %9268 = sub <4 x i32> %9255, %9259
  %9269 = add <4 x i32> %9268, %9261
  %9270 = getelementptr inbounds i32, i32* %8370, i64 %8385
  %9271 = bitcast i32* %9270 to <4 x i32>*
  store <4 x i32> %9267, <4 x i32>* %9271, align 16
  %9272 = getelementptr inbounds i32, i32* %9270, i64 4
  %9273 = bitcast i32* %9272 to <4 x i32>*
  store <4 x i32> %9269, <4 x i32>* %9273, align 16
  %9274 = shufflevector <16 x i8> %8754, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9275 = shufflevector <16 x i8> %9170, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9276 = bitcast <16 x i8> %9274 to <8 x i16>
  %9277 = bitcast <16 x i8> %9275 to <8 x i16>
  %9278 = add <8 x i16> %9277, %9276
  %9279 = shufflevector <16 x i8> %9171, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9280 = bitcast <16 x i8> %9279 to <8 x i16>
  %9281 = add <8 x i16> %9278, %9280
  %9282 = mul <8 x i16> %9281, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %9283 = add <8 x i16> %9282, %9277
  %9284 = getelementptr inbounds i16, i16* %8341, i64 %8385
  %9285 = bitcast i16* %9284 to <8 x i16>*
  store <8 x i16> %9283, <8 x i16>* %9285, align 16
  %9286 = bitcast <8 x i16> %8765 to <16 x i8>
  %9287 = bitcast <8 x i16> %8396 to <16 x i8>
  %9288 = shufflevector <16 x i8> %9287, <16 x i8> %9286, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9289 = bitcast <16 x i8> %9288 to <8 x i16>
  %9290 = shufflevector <16 x i8> %9287, <16 x i8> %9286, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %9291 = bitcast <16 x i8> %9290 to <8 x i16>
  %9292 = shufflevector <8 x i16> %8396, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9293 = shufflevector <8 x i16> %9289, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9294 = bitcast <8 x i16> %9292 to <4 x i32>
  %9295 = bitcast <8 x i16> %9293 to <4 x i32>
  %9296 = add <4 x i32> %9295, %9294
  %9297 = shufflevector <8 x i16> %9291, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9298 = bitcast <8 x i16> %9297 to <4 x i32>
  %9299 = add <4 x i32> %9296, %9298
  %9300 = mul <4 x i32> %9299, <i32 5, i32 5, i32 5, i32 5>
  %9301 = add <4 x i32> %9300, %9295
  %9302 = shufflevector <8 x i16> %8396, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9303 = shufflevector <8 x i16> %9289, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9304 = bitcast <8 x i16> %9302 to <4 x i32>
  %9305 = bitcast <8 x i16> %9303 to <4 x i32>
  %9306 = add <4 x i32> %9305, %9304
  %9307 = shufflevector <8 x i16> %9291, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9308 = bitcast <8 x i16> %9307 to <4 x i32>
  %9309 = add <4 x i32> %9306, %9308
  %9310 = mul <4 x i32> %9309, <i32 5, i32 5, i32 5, i32 5>
  %9311 = add <4 x i32> %9310, %9305
  %9312 = getelementptr inbounds i32, i32* %8342, i64 %8385
  %9313 = bitcast i32* %9312 to <4 x i32>*
  store <4 x i32> %9301, <4 x i32>* %9313, align 16
  %9314 = getelementptr inbounds i32, i32* %9312, i64 4
  %9315 = bitcast i32* %9314 to <4 x i32>*
  store <4 x i32> %9311, <4 x i32>* %9315, align 16
  %9316 = getelementptr inbounds i8, i8* %7958, i64 %8385
  %9317 = bitcast i8* %9316 to <16 x i8>*
  %9318 = load <16 x i8>, <16 x i8>* %9317, align 16
  %9319 = getelementptr inbounds i8, i8* %8339, i64 %8385
  %9320 = bitcast i8* %9319 to <16 x i8>*
  %9321 = load <16 x i8>, <16 x i8>* %9320, align 16
  %9322 = shufflevector <16 x i8> %9318, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9323 = shufflevector <16 x i8> %9321, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9324 = getelementptr inbounds i16, i16* %8343, i64 %8385
  %9325 = bitcast i16* %9324 to <8 x i16>*
  %9326 = load <8 x i16>, <8 x i16>* %9325, align 16
  %9327 = getelementptr inbounds i32, i32* %8344, i64 %8385
  %9328 = bitcast i32* %9327 to <4 x i32>*
  %9329 = load <4 x i32>, <4 x i32>* %9328, align 16
  %9330 = getelementptr inbounds i32, i32* %9327, i64 4
  %9331 = bitcast i32* %9330 to <4 x i32>*
  %9332 = load <4 x i32>, <4 x i32>* %9331, align 16
  %9333 = add <8 x i16> %9326, %9283
  %9334 = shufflevector <8 x i16> %9333, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9335 = bitcast <16 x i8> %9322 to <8 x i16>
  %9336 = shufflevector <8 x i16> %9335, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9337 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9334, <8 x i16> %9336) #5
  %9338 = shufflevector <8 x i16> %9333, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9339 = shufflevector <8 x i16> %9335, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9340 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9338, <8 x i16> %9339) #5
  %9341 = add <4 x i32> %9301, <i32 256, i32 256, i32 256, i32 256>
  %9342 = add <4 x i32> %9341, %9329
  %9343 = sub <4 x i32> %9342, %9337
  %9344 = ashr <4 x i32> %9343, <i32 9, i32 9, i32 9, i32 9>
  %9345 = add <4 x i32> %9311, <i32 256, i32 256, i32 256, i32 256>
  %9346 = add <4 x i32> %9345, %9332
  %9347 = sub <4 x i32> %9346, %9340
  %9348 = ashr <4 x i32> %9347, <i32 9, i32 9, i32 9, i32 9>
  %9349 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9344, <4 x i32> %9348) #5
  %9350 = shufflevector <8 x i16> %9283, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9351 = bitcast <16 x i8> %9323 to <8 x i16>
  %9352 = shufflevector <8 x i16> %9351, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9353 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9350, <8 x i16> %9352) #5
  %9354 = shufflevector <8 x i16> %9283, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9355 = shufflevector <8 x i16> %9351, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9356 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9354, <8 x i16> %9355) #5
  %9357 = add <4 x i32> %9301, <i32 128, i32 128, i32 128, i32 128>
  %9358 = sub <4 x i32> %9357, %9353
  %9359 = ashr <4 x i32> %9358, <i32 8, i32 8, i32 8, i32 8>
  %9360 = add <4 x i32> %9311, <i32 128, i32 128, i32 128, i32 128>
  %9361 = sub <4 x i32> %9360, %9356
  %9362 = ashr <4 x i32> %9361, <i32 8, i32 8, i32 8, i32 8>
  %9363 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9359, <4 x i32> %9362) #5
  %9364 = getelementptr inbounds i16, i16* %8372, i64 %8385
  %9365 = bitcast i16* %9364 to <8 x i16>*
  %9366 = load <8 x i16>, <8 x i16>* %9365, align 16
  %9367 = getelementptr inbounds i16, i16* %8373, i64 %8385
  %9368 = bitcast i16* %9367 to <8 x i16>*
  %9369 = load <8 x i16>, <8 x i16>* %9368, align 16
  %9370 = getelementptr inbounds i32, i32* %8374, i64 %8385
  %9371 = bitcast i32* %9370 to <4 x i32>*
  %9372 = load <4 x i32>, <4 x i32>* %9371, align 16
  %9373 = getelementptr inbounds i32, i32* %9370, i64 4
  %9374 = bitcast i32* %9373 to <4 x i32>*
  %9375 = load <4 x i32>, <4 x i32>* %9374, align 16
  %9376 = getelementptr inbounds i32, i32* %8375, i64 %8385
  %9377 = bitcast i32* %9376 to <4 x i32>*
  %9378 = load <4 x i32>, <4 x i32>* %9377, align 16
  %9379 = getelementptr inbounds i32, i32* %9376, i64 4
  %9380 = bitcast i32* %9379 to <4 x i32>*
  %9381 = load <4 x i32>, <4 x i32>* %9380, align 16
  %9382 = add <8 x i16> %9366, %9184
  %9383 = add <8 x i16> %9382, %9369
  %9384 = shufflevector <8 x i16> %9383, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9385 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9384, <8 x i16> %9336) #5
  %9386 = shufflevector <8 x i16> %9383, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9387 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9386, <8 x i16> %9339) #5
  %9388 = add <4 x i32> %9216, <i32 256, i32 256, i32 256, i32 256>
  %9389 = add <4 x i32> %9388, %9372
  %9390 = add <4 x i32> %9389, %9378
  %9391 = sub <4 x i32> %9390, %9385
  %9392 = ashr <4 x i32> %9391, <i32 9, i32 9, i32 9, i32 9>
  %9393 = add <4 x i32> %9218, <i32 256, i32 256, i32 256, i32 256>
  %9394 = add <4 x i32> %9393, %9375
  %9395 = add <4 x i32> %9394, %9381
  %9396 = sub <4 x i32> %9395, %9387
  %9397 = ashr <4 x i32> %9396, <i32 9, i32 9, i32 9, i32 9>
  %9398 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9392, <4 x i32> %9397) #5
  %9399 = shufflevector <8 x i16> %9349, <8 x i16> %9398, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9400 = shufflevector <8 x i16> %9349, <8 x i16> %9398, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9401 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %9399) #5
  %9402 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %9400) #5
  %9403 = add <4 x i32> %9401, <i32 1024, i32 1024, i32 1024, i32 1024>
  %9404 = ashr <4 x i32> %9403, <i32 11, i32 11, i32 11, i32 11>
  %9405 = add <4 x i32> %9402, <i32 1024, i32 1024, i32 1024, i32 1024>
  %9406 = ashr <4 x i32> %9405, <i32 11, i32 11, i32 11, i32 11>
  %9407 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9404, <4 x i32> %9406) #5
  %9408 = add <8 x i16> %9407, %9335
  %9409 = getelementptr inbounds i16, i16* %8376, i64 %8385
  %9410 = bitcast i16* %9409 to <8 x i16>*
  %9411 = load <8 x i16>, <8 x i16>* %9410, align 16
  %9412 = getelementptr inbounds i32, i32* %8377, i64 %8385
  %9413 = bitcast i32* %9412 to <4 x i32>*
  %9414 = load <4 x i32>, <4 x i32>* %9413, align 16
  %9415 = getelementptr inbounds i32, i32* %9412, i64 4
  %9416 = bitcast i32* %9415 to <4 x i32>*
  %9417 = load <4 x i32>, <4 x i32>* %9416, align 16
  %9418 = add <8 x i16> %9235, %9180
  %9419 = add <8 x i16> %9418, %9411
  %9420 = shufflevector <8 x i16> %9419, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9421 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9420, <8 x i16> %9352) #5
  %9422 = shufflevector <8 x i16> %9419, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9423 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9422, <8 x i16> %9355) #5
  %9424 = add <4 x i32> %9209, <i32 256, i32 256, i32 256, i32 256>
  %9425 = add <4 x i32> %9424, %9267
  %9426 = add <4 x i32> %9425, %9414
  %9427 = sub <4 x i32> %9426, %9421
  %9428 = ashr <4 x i32> %9427, <i32 9, i32 9, i32 9, i32 9>
  %9429 = add <4 x i32> %9210, <i32 256, i32 256, i32 256, i32 256>
  %9430 = add <4 x i32> %9429, %9269
  %9431 = add <4 x i32> %9430, %9417
  %9432 = sub <4 x i32> %9431, %9423
  %9433 = ashr <4 x i32> %9432, <i32 9, i32 9, i32 9, i32 9>
  %9434 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9428, <4 x i32> %9433) #5
  %9435 = shufflevector <8 x i16> %9363, <8 x i16> %9434, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9436 = shufflevector <8 x i16> %9363, <8 x i16> %9434, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9437 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %9435) #5
  %9438 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %9436) #5
  %9439 = add <4 x i32> %9437, <i32 1024, i32 1024, i32 1024, i32 1024>
  %9440 = ashr <4 x i32> %9439, <i32 11, i32 11, i32 11, i32 11>
  %9441 = add <4 x i32> %9438, <i32 1024, i32 1024, i32 1024, i32 1024>
  %9442 = ashr <4 x i32> %9441, <i32 11, i32 11, i32 11, i32 11>
  %9443 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9440, <4 x i32> %9442) #5
  %9444 = add <8 x i16> %9443, %9351
  %9445 = shufflevector <16 x i8> %9164, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9446 = shufflevector <16 x i8> %9165, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9447 = bitcast <16 x i8> %9445 to <8 x i16>
  %9448 = bitcast <16 x i8> %9446 to <8 x i16>
  %9449 = add <8 x i16> %9448, %9447
  %9450 = shufflevector <16 x i8> %9166, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9451 = bitcast <16 x i8> %9450 to <8 x i16>
  %9452 = add <8 x i16> %9449, %9451
  %9453 = shl <8 x i16> %9452, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %9454 = getelementptr inbounds i16, i16* %6215, i64 %8406
  %9455 = bitcast i16* %9454 to <8 x i16>*
  store <8 x i16> %9453, <8 x i16>* %9455, align 16
  %9456 = mul <8 x i16> %9452, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %9457 = add <8 x i16> %9456, %9448
  %9458 = getelementptr inbounds i16, i16* %8366, i64 %8406
  %9459 = bitcast i16* %9458 to <8 x i16>*
  store <8 x i16> %9457, <8 x i16>* %9459, align 16
  %9460 = bitcast <8 x i16> %8988 to <16 x i8>
  %9461 = shufflevector <16 x i8> %9187, <16 x i8> %9460, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9462 = shufflevector <16 x i8> %9187, <16 x i8> %9460, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %9463 = bitcast <16 x i8> %9462 to <8 x i16>
  %9464 = bitcast <16 x i8> %9461 to <8 x i16>
  %9465 = shufflevector <8 x i16> %8975, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9466 = shufflevector <8 x i16> %9464, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9467 = bitcast <8 x i16> %9465 to <4 x i32>
  %9468 = bitcast <8 x i16> %9466 to <4 x i32>
  %9469 = add <4 x i32> %9468, %9467
  %9470 = shufflevector <8 x i16> %9463, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9471 = bitcast <8 x i16> %9470 to <4 x i32>
  %9472 = add <4 x i32> %9469, %9471
  %9473 = shufflevector <8 x i16> %8975, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9474 = shufflevector <8 x i16> %9464, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9475 = bitcast <8 x i16> %9473 to <4 x i32>
  %9476 = bitcast <8 x i16> %9474 to <4 x i32>
  %9477 = add <4 x i32> %9476, %9475
  %9478 = shufflevector <8 x i16> %9463, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9479 = bitcast <8 x i16> %9478 to <4 x i32>
  %9480 = add <4 x i32> %9477, %9479
  %9481 = shl <4 x i32> %9472, <i32 2, i32 2, i32 2, i32 2>
  %9482 = shl <4 x i32> %9480, <i32 2, i32 2, i32 2, i32 2>
  %9483 = getelementptr inbounds i32, i32* %6216, i64 %8406
  %9484 = bitcast i32* %9483 to <4 x i32>*
  store <4 x i32> %9481, <4 x i32>* %9484, align 16
  %9485 = getelementptr inbounds i32, i32* %9483, i64 4
  %9486 = bitcast i32* %9485 to <4 x i32>*
  store <4 x i32> %9482, <4 x i32>* %9486, align 16
  %9487 = mul <4 x i32> %9472, <i32 3, i32 3, i32 3, i32 3>
  %9488 = add <4 x i32> %9487, %9468
  %9489 = sub <4 x i32> %9476, %9480
  %9490 = add <4 x i32> %9489, %9482
  %9491 = getelementptr inbounds i32, i32* %8367, i64 %8406
  %9492 = bitcast i32* %9491 to <4 x i32>*
  store <4 x i32> %9488, <4 x i32>* %9492, align 16
  %9493 = getelementptr inbounds i32, i32* %9491, i64 4
  %9494 = bitcast i32* %9493 to <4 x i32>*
  store <4 x i32> %9490, <4 x i32>* %9494, align 16
  %9495 = shufflevector <16 x i8> %9167, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9496 = shufflevector <16 x i8> %9168, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9497 = bitcast <16 x i8> %9495 to <8 x i16>
  %9498 = bitcast <16 x i8> %9496 to <8 x i16>
  %9499 = add <8 x i16> %9498, %9497
  %9500 = shufflevector <16 x i8> %9169, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9501 = bitcast <16 x i8> %9500 to <8 x i16>
  %9502 = add <8 x i16> %9499, %9501
  %9503 = shl <8 x i16> %9502, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %9504 = getelementptr inbounds i16, i16* %8369, i64 %8406
  %9505 = bitcast i16* %9504 to <8 x i16>*
  store <8 x i16> %9503, <8 x i16>* %9505, align 16
  %9506 = mul <8 x i16> %9502, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %9507 = add <8 x i16> %9506, %9498
  %9508 = getelementptr inbounds i16, i16* %8368, i64 %8406
  %9509 = bitcast i16* %9508 to <8 x i16>*
  store <8 x i16> %9507, <8 x i16>* %9509, align 16
  %9510 = bitcast <8 x i16> %9051 to <16 x i8>
  %9511 = shufflevector <16 x i8> %9238, <16 x i8> %9510, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9512 = shufflevector <16 x i8> %9238, <16 x i8> %9510, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %9513 = bitcast <16 x i8> %9512 to <8 x i16>
  %9514 = bitcast <16 x i8> %9511 to <8 x i16>
  %9515 = shufflevector <8 x i16> %9038, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9516 = shufflevector <8 x i16> %9514, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9517 = bitcast <8 x i16> %9515 to <4 x i32>
  %9518 = bitcast <8 x i16> %9516 to <4 x i32>
  %9519 = add <4 x i32> %9518, %9517
  %9520 = shufflevector <8 x i16> %9513, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9521 = bitcast <8 x i16> %9520 to <4 x i32>
  %9522 = add <4 x i32> %9519, %9521
  %9523 = shufflevector <8 x i16> %9038, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9524 = shufflevector <8 x i16> %9514, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9525 = bitcast <8 x i16> %9523 to <4 x i32>
  %9526 = bitcast <8 x i16> %9524 to <4 x i32>
  %9527 = add <4 x i32> %9526, %9525
  %9528 = shufflevector <8 x i16> %9513, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9529 = bitcast <8 x i16> %9528 to <4 x i32>
  %9530 = add <4 x i32> %9527, %9529
  %9531 = shl <4 x i32> %9522, <i32 2, i32 2, i32 2, i32 2>
  %9532 = shl <4 x i32> %9530, <i32 2, i32 2, i32 2, i32 2>
  %9533 = getelementptr inbounds i32, i32* %8371, i64 %8406
  %9534 = bitcast i32* %9533 to <4 x i32>*
  store <4 x i32> %9531, <4 x i32>* %9534, align 16
  %9535 = getelementptr inbounds i32, i32* %9533, i64 4
  %9536 = bitcast i32* %9535 to <4 x i32>*
  store <4 x i32> %9532, <4 x i32>* %9536, align 16
  %9537 = mul <4 x i32> %9522, <i32 3, i32 3, i32 3, i32 3>
  %9538 = add <4 x i32> %9537, %9518
  %9539 = sub <4 x i32> %9526, %9530
  %9540 = add <4 x i32> %9539, %9532
  %9541 = getelementptr inbounds i32, i32* %8370, i64 %8406
  %9542 = bitcast i32* %9541 to <4 x i32>*
  store <4 x i32> %9538, <4 x i32>* %9542, align 16
  %9543 = getelementptr inbounds i32, i32* %9541, i64 4
  %9544 = bitcast i32* %9543 to <4 x i32>*
  store <4 x i32> %9540, <4 x i32>* %9544, align 16
  %9545 = shufflevector <16 x i8> %9170, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9546 = bitcast <16 x i8> %8755 to <8 x i16>
  %9547 = bitcast <16 x i8> %9545 to <8 x i16>
  %9548 = add <8 x i16> %9547, %9546
  %9549 = shufflevector <16 x i8> %9171, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9550 = bitcast <16 x i8> %9549 to <8 x i16>
  %9551 = add <8 x i16> %9548, %9550
  %9552 = mul <8 x i16> %9551, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %9553 = add <8 x i16> %9552, %9547
  %9554 = getelementptr inbounds i16, i16* %8345, i64 %8385
  %9555 = bitcast i16* %9554 to <8 x i16>*
  store <8 x i16> %9553, <8 x i16>* %9555, align 16
  %9556 = bitcast <8 x i16> %9163 to <16 x i8>
  %9557 = shufflevector <16 x i8> %9286, <16 x i8> %9556, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9558 = bitcast <16 x i8> %9557 to <8 x i16>
  %9559 = shufflevector <16 x i8> %9286, <16 x i8> %9556, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %9560 = bitcast <16 x i8> %9559 to <8 x i16>
  %9561 = shufflevector <8 x i16> %8765, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9562 = shufflevector <8 x i16> %9558, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9563 = bitcast <8 x i16> %9561 to <4 x i32>
  %9564 = bitcast <8 x i16> %9562 to <4 x i32>
  %9565 = add <4 x i32> %9564, %9563
  %9566 = shufflevector <8 x i16> %9560, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9567 = bitcast <8 x i16> %9566 to <4 x i32>
  %9568 = add <4 x i32> %9565, %9567
  %9569 = mul <4 x i32> %9568, <i32 5, i32 5, i32 5, i32 5>
  %9570 = add <4 x i32> %9569, %9564
  %9571 = shufflevector <8 x i16> %8765, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9572 = shufflevector <8 x i16> %9558, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9573 = bitcast <8 x i16> %9571 to <4 x i32>
  %9574 = bitcast <8 x i16> %9572 to <4 x i32>
  %9575 = add <4 x i32> %9574, %9573
  %9576 = shufflevector <8 x i16> %9560, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9577 = bitcast <8 x i16> %9576 to <4 x i32>
  %9578 = add <4 x i32> %9575, %9577
  %9579 = mul <4 x i32> %9578, <i32 5, i32 5, i32 5, i32 5>
  %9580 = add <4 x i32> %9579, %9574
  %9581 = getelementptr inbounds i32, i32* %8346, i64 %8385
  %9582 = bitcast i32* %9581 to <4 x i32>*
  store <4 x i32> %9570, <4 x i32>* %9582, align 16
  %9583 = getelementptr inbounds i32, i32* %9581, i64 4
  %9584 = bitcast i32* %9583 to <4 x i32>*
  store <4 x i32> %9580, <4 x i32>* %9584, align 16
  %9585 = shufflevector <16 x i8> %9318, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9586 = shufflevector <16 x i8> %9321, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9587 = getelementptr inbounds i16, i16* %8347, i64 %8385
  %9588 = bitcast i16* %9587 to <8 x i16>*
  %9589 = load <8 x i16>, <8 x i16>* %9588, align 16
  %9590 = getelementptr inbounds i32, i32* %8348, i64 %8385
  %9591 = bitcast i32* %9590 to <4 x i32>*
  %9592 = load <4 x i32>, <4 x i32>* %9591, align 16
  %9593 = getelementptr inbounds i32, i32* %9590, i64 4
  %9594 = bitcast i32* %9593 to <4 x i32>*
  %9595 = load <4 x i32>, <4 x i32>* %9594, align 16
  %9596 = add <8 x i16> %9589, %9553
  %9597 = shufflevector <8 x i16> %9596, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9598 = bitcast <16 x i8> %9585 to <8 x i16>
  %9599 = shufflevector <8 x i16> %9598, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9600 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9597, <8 x i16> %9599) #5
  %9601 = shufflevector <8 x i16> %9596, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9602 = shufflevector <8 x i16> %9598, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9603 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9601, <8 x i16> %9602) #5
  %9604 = add <4 x i32> %9570, <i32 256, i32 256, i32 256, i32 256>
  %9605 = add <4 x i32> %9604, %9592
  %9606 = sub <4 x i32> %9605, %9600
  %9607 = ashr <4 x i32> %9606, <i32 9, i32 9, i32 9, i32 9>
  %9608 = add <4 x i32> %9580, <i32 256, i32 256, i32 256, i32 256>
  %9609 = add <4 x i32> %9608, %9595
  %9610 = sub <4 x i32> %9609, %9603
  %9611 = ashr <4 x i32> %9610, <i32 9, i32 9, i32 9, i32 9>
  %9612 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9607, <4 x i32> %9611) #5
  %9613 = shufflevector <8 x i16> %9553, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9614 = bitcast <16 x i8> %9586 to <8 x i16>
  %9615 = shufflevector <8 x i16> %9614, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9616 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9613, <8 x i16> %9615) #5
  %9617 = shufflevector <8 x i16> %9553, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9618 = shufflevector <8 x i16> %9614, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9619 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9617, <8 x i16> %9618) #5
  %9620 = add <4 x i32> %9570, <i32 128, i32 128, i32 128, i32 128>
  %9621 = sub <4 x i32> %9620, %9616
  %9622 = ashr <4 x i32> %9621, <i32 8, i32 8, i32 8, i32 8>
  %9623 = add <4 x i32> %9580, <i32 128, i32 128, i32 128, i32 128>
  %9624 = sub <4 x i32> %9623, %9619
  %9625 = ashr <4 x i32> %9624, <i32 8, i32 8, i32 8, i32 8>
  %9626 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9622, <4 x i32> %9625) #5
  %9627 = getelementptr inbounds i16, i16* %8378, i64 %8385
  %9628 = bitcast i16* %9627 to <8 x i16>*
  %9629 = load <8 x i16>, <8 x i16>* %9628, align 16
  %9630 = getelementptr inbounds i16, i16* %8379, i64 %8385
  %9631 = bitcast i16* %9630 to <8 x i16>*
  %9632 = load <8 x i16>, <8 x i16>* %9631, align 16
  %9633 = getelementptr inbounds i32, i32* %8380, i64 %8385
  %9634 = bitcast i32* %9633 to <4 x i32>*
  %9635 = load <4 x i32>, <4 x i32>* %9634, align 16
  %9636 = getelementptr inbounds i32, i32* %9633, i64 4
  %9637 = bitcast i32* %9636 to <4 x i32>*
  %9638 = load <4 x i32>, <4 x i32>* %9637, align 16
  %9639 = getelementptr inbounds i32, i32* %8381, i64 %8385
  %9640 = bitcast i32* %9639 to <4 x i32>*
  %9641 = load <4 x i32>, <4 x i32>* %9640, align 16
  %9642 = getelementptr inbounds i32, i32* %9639, i64 4
  %9643 = bitcast i32* %9642 to <4 x i32>*
  %9644 = load <4 x i32>, <4 x i32>* %9643, align 16
  %9645 = add <8 x i16> %9629, %9457
  %9646 = add <8 x i16> %9645, %9632
  %9647 = shufflevector <8 x i16> %9646, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9648 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9647, <8 x i16> %9599) #5
  %9649 = shufflevector <8 x i16> %9646, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9650 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9649, <8 x i16> %9602) #5
  %9651 = add <4 x i32> %9488, <i32 256, i32 256, i32 256, i32 256>
  %9652 = add <4 x i32> %9651, %9635
  %9653 = add <4 x i32> %9652, %9641
  %9654 = sub <4 x i32> %9653, %9648
  %9655 = ashr <4 x i32> %9654, <i32 9, i32 9, i32 9, i32 9>
  %9656 = add <4 x i32> %9490, <i32 256, i32 256, i32 256, i32 256>
  %9657 = add <4 x i32> %9656, %9638
  %9658 = add <4 x i32> %9657, %9644
  %9659 = sub <4 x i32> %9658, %9650
  %9660 = ashr <4 x i32> %9659, <i32 9, i32 9, i32 9, i32 9>
  %9661 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9655, <4 x i32> %9660) #5
  %9662 = shufflevector <8 x i16> %9612, <8 x i16> %9661, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9663 = shufflevector <8 x i16> %9612, <8 x i16> %9661, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9664 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %9662) #5
  %9665 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %9663) #5
  %9666 = add <4 x i32> %9664, <i32 1024, i32 1024, i32 1024, i32 1024>
  %9667 = ashr <4 x i32> %9666, <i32 11, i32 11, i32 11, i32 11>
  %9668 = add <4 x i32> %9665, <i32 1024, i32 1024, i32 1024, i32 1024>
  %9669 = ashr <4 x i32> %9668, <i32 11, i32 11, i32 11, i32 11>
  %9670 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9667, <4 x i32> %9669) #5
  %9671 = add <8 x i16> %9670, %9598
  %9672 = getelementptr inbounds i8, i8* %7922, i64 %8385
  %9673 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %9408, <8 x i16> %9671) #5
  %9674 = bitcast i8* %9672 to <16 x i8>*
  store <16 x i8> %9673, <16 x i8>* %9674, align 16
  %9675 = getelementptr inbounds i16, i16* %8382, i64 %8385
  %9676 = bitcast i16* %9675 to <8 x i16>*
  %9677 = load <8 x i16>, <8 x i16>* %9676, align 16
  %9678 = getelementptr inbounds i32, i32* %8383, i64 %8385
  %9679 = bitcast i32* %9678 to <4 x i32>*
  %9680 = load <4 x i32>, <4 x i32>* %9679, align 16
  %9681 = getelementptr inbounds i32, i32* %9678, i64 4
  %9682 = bitcast i32* %9681 to <4 x i32>*
  %9683 = load <4 x i32>, <4 x i32>* %9682, align 16
  %9684 = add <8 x i16> %9507, %9453
  %9685 = add <8 x i16> %9684, %9677
  %9686 = shufflevector <8 x i16> %9685, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9687 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9686, <8 x i16> %9615) #5
  %9688 = shufflevector <8 x i16> %9685, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9689 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9688, <8 x i16> %9618) #5
  %9690 = add <4 x i32> %9481, <i32 256, i32 256, i32 256, i32 256>
  %9691 = add <4 x i32> %9690, %9538
  %9692 = add <4 x i32> %9691, %9680
  %9693 = sub <4 x i32> %9692, %9687
  %9694 = ashr <4 x i32> %9693, <i32 9, i32 9, i32 9, i32 9>
  %9695 = add <4 x i32> %9482, <i32 256, i32 256, i32 256, i32 256>
  %9696 = add <4 x i32> %9695, %9540
  %9697 = add <4 x i32> %9696, %9683
  %9698 = sub <4 x i32> %9697, %9689
  %9699 = ashr <4 x i32> %9698, <i32 9, i32 9, i32 9, i32 9>
  %9700 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9694, <4 x i32> %9699) #5
  %9701 = shufflevector <8 x i16> %9626, <8 x i16> %9700, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9702 = shufflevector <8 x i16> %9626, <8 x i16> %9700, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9703 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %9701) #5
  %9704 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %9702) #5
  %9705 = add <4 x i32> %9703, <i32 1024, i32 1024, i32 1024, i32 1024>
  %9706 = ashr <4 x i32> %9705, <i32 11, i32 11, i32 11, i32 11>
  %9707 = add <4 x i32> %9704, <i32 1024, i32 1024, i32 1024, i32 1024>
  %9708 = ashr <4 x i32> %9707, <i32 11, i32 11, i32 11, i32 11>
  %9709 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %9706, <4 x i32> %9708) #5
  %9710 = add <8 x i16> %9709, %9614
  %9711 = getelementptr inbounds i8, i8* %8340, i64 %8385
  %9712 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %9444, <8 x i16> %9710) #5
  %9713 = bitcast i8* %9711 to <16 x i8>*
  store <16 x i8> %9712, <16 x i8>* %9713, align 16
  %9714 = icmp slt i64 %8400, %6177
  br i1 %9714, label %8384, label %9715

9715:                                             ; preds = %8384
  %9716 = getelementptr inbounds i8, i8* %7922, i64 %7862
  %9717 = add nsw i32 %7920, -1
  %9718 = icmp sgt i32 %9717, 0
  br i1 %9718, label %7919, label %7874

9719:                                             ; preds = %7879
  %9720 = inttoptr i64 %7883 to <8 x i16>*
  %9721 = getelementptr inbounds i8, i8* %6397, i64 %6
  %9722 = getelementptr inbounds i8, i8* %7915, i64 %7862
  %9723 = select i1 %7917, i8* %9721, i8* %6397
  %9724 = select i1 %7917, i8* %6397, i8* %9722
  %9725 = getelementptr inbounds i8, i8* %7915, i64 3
  %9726 = bitcast i8* %9724 to <2 x i64>*
  %9727 = load <2 x i64>, <2 x i64>* %9726, align 1
  %9728 = bitcast i8* %9723 to <2 x i64>*
  %9729 = load <2 x i64>, <2 x i64>* %9728, align 1
  %9730 = bitcast <2 x i64> %9727 to <16 x i8>
  %9731 = shufflevector <16 x i8> %9730, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9732 = bitcast <16 x i8> %9731 to <8 x i16>
  %9733 = mul <8 x i16> %9732, %9732
  %9734 = bitcast <2 x i64> %9729 to <16 x i8>
  %9735 = shufflevector <16 x i8> %9734, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9736 = bitcast <16 x i8> %9735 to <8 x i16>
  %9737 = mul <8 x i16> %9736, %9736
  %9738 = shufflevector <16 x i8> %9730, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9739 = bitcast <16 x i8> %9738 to <8 x i16>
  %9740 = mul <8 x i16> %9739, %9739
  %9741 = shufflevector <16 x i8> %9734, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %9742 = bitcast <16 x i8> %9741 to <8 x i16>
  %9743 = mul <8 x i16> %9742, %9742
  %9744 = shufflevector <16 x i8> %9730, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9745 = shufflevector <16 x i8> %9730, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9746 = shufflevector <16 x i8> %9730, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9747 = shufflevector <16 x i8> %9730, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9748 = shufflevector <16 x i8> %9747, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9749 = bitcast <16 x i8> %9748 to <8 x i16>
  %9750 = add <8 x i16> %9749, %9732
  %9751 = shufflevector <16 x i8> %9744, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9752 = shufflevector <16 x i8> %9745, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9753 = bitcast <16 x i8> %9751 to <8 x i16>
  %9754 = bitcast <16 x i8> %9752 to <8 x i16>
  %9755 = add <8 x i16> %9754, %9753
  %9756 = shufflevector <16 x i8> %9746, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9757 = bitcast <16 x i8> %9756 to <8 x i16>
  %9758 = add <8 x i16> %9755, %9757
  %9759 = add <8 x i16> %9750, %9758
  %9760 = shufflevector <16 x i8> %9734, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9761 = shufflevector <16 x i8> %9734, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9762 = shufflevector <16 x i8> %9734, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9763 = shufflevector <16 x i8> %9734, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9764 = shufflevector <16 x i8> %9763, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9765 = bitcast <16 x i8> %9764 to <8 x i16>
  %9766 = add <8 x i16> %9765, %9736
  %9767 = shufflevector <16 x i8> %9760, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9768 = shufflevector <16 x i8> %9761, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9769 = bitcast <16 x i8> %9767 to <8 x i16>
  %9770 = bitcast <16 x i8> %9768 to <8 x i16>
  %9771 = add <8 x i16> %9770, %9769
  %9772 = shufflevector <16 x i8> %9762, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9773 = bitcast <16 x i8> %9772 to <8 x i16>
  %9774 = add <8 x i16> %9771, %9773
  %9775 = add <8 x i16> %9766, %9774
  store <8 x i16> %9758, <8 x i16>* %9720, align 16
  %9776 = inttoptr i64 %7882 to <8 x i16>*
  store <8 x i16> %9774, <8 x i16>* %9776, align 16
  %9777 = inttoptr i64 %7909 to <8 x i16>*
  store <8 x i16> %9759, <8 x i16>* %9777, align 16
  %9778 = inttoptr i64 %7903 to <8 x i16>*
  store <8 x i16> %9775, <8 x i16>* %9778, align 16
  %9779 = bitcast <8 x i16> %9740 to <16 x i8>
  %9780 = bitcast <8 x i16> %9733 to <16 x i8>
  %9781 = shufflevector <16 x i8> %9780, <16 x i8> %9779, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9782 = bitcast <16 x i8> %9781 to <8 x i16>
  %9783 = shufflevector <16 x i8> %9780, <16 x i8> %9779, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %9784 = bitcast <16 x i8> %9783 to <8 x i16>
  %9785 = shufflevector <16 x i8> %9780, <16 x i8> %9779, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %9786 = bitcast <16 x i8> %9785 to <8 x i16>
  %9787 = shufflevector <16 x i8> %9780, <16 x i8> %9779, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %9788 = bitcast <16 x i8> %9787 to <8 x i16>
  %9789 = shufflevector <8 x i16> %9733, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9790 = shufflevector <8 x i16> %9788, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9791 = bitcast <8 x i16> %9789 to <4 x i32>
  %9792 = bitcast <8 x i16> %9790 to <4 x i32>
  %9793 = add <4 x i32> %9792, %9791
  %9794 = shufflevector <8 x i16> %9782, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9795 = shufflevector <8 x i16> %9784, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9796 = bitcast <8 x i16> %9794 to <4 x i32>
  %9797 = bitcast <8 x i16> %9795 to <4 x i32>
  %9798 = add <4 x i32> %9797, %9796
  %9799 = shufflevector <8 x i16> %9786, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9800 = bitcast <8 x i16> %9799 to <4 x i32>
  %9801 = add <4 x i32> %9798, %9800
  %9802 = add <4 x i32> %9793, %9801
  %9803 = shufflevector <8 x i16> %9733, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9804 = shufflevector <8 x i16> %9788, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9805 = bitcast <8 x i16> %9803 to <4 x i32>
  %9806 = bitcast <8 x i16> %9804 to <4 x i32>
  %9807 = add <4 x i32> %9806, %9805
  %9808 = shufflevector <8 x i16> %9782, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9809 = shufflevector <8 x i16> %9784, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9810 = bitcast <8 x i16> %9808 to <4 x i32>
  %9811 = bitcast <8 x i16> %9809 to <4 x i32>
  %9812 = add <4 x i32> %9811, %9810
  %9813 = shufflevector <8 x i16> %9786, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9814 = bitcast <8 x i16> %9813 to <4 x i32>
  %9815 = add <4 x i32> %9812, %9814
  %9816 = add <4 x i32> %9807, %9815
  %9817 = inttoptr i64 %7893 to i32*
  %9818 = inttoptr i64 %7893 to <4 x i32>*
  store <4 x i32> %9801, <4 x i32>* %9818, align 16
  %9819 = getelementptr inbounds i32, i32* %9817, i64 4
  %9820 = bitcast i32* %9819 to <4 x i32>*
  store <4 x i32> %9815, <4 x i32>* %9820, align 16
  %9821 = inttoptr i64 %7908 to i32*
  %9822 = inttoptr i64 %7908 to <4 x i32>*
  store <4 x i32> %9802, <4 x i32>* %9822, align 16
  %9823 = getelementptr inbounds i32, i32* %9821, i64 4
  %9824 = bitcast i32* %9823 to <4 x i32>*
  store <4 x i32> %9816, <4 x i32>* %9824, align 16
  %9825 = bitcast <8 x i16> %9743 to <16 x i8>
  %9826 = bitcast <8 x i16> %9737 to <16 x i8>
  %9827 = shufflevector <16 x i8> %9826, <16 x i8> %9825, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %9828 = bitcast <16 x i8> %9827 to <8 x i16>
  %9829 = shufflevector <16 x i8> %9826, <16 x i8> %9825, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %9830 = bitcast <16 x i8> %9829 to <8 x i16>
  %9831 = shufflevector <16 x i8> %9826, <16 x i8> %9825, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %9832 = bitcast <16 x i8> %9831 to <8 x i16>
  %9833 = shufflevector <16 x i8> %9826, <16 x i8> %9825, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %9834 = bitcast <16 x i8> %9833 to <8 x i16>
  %9835 = shufflevector <8 x i16> %9737, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9836 = shufflevector <8 x i16> %9834, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9837 = bitcast <8 x i16> %9835 to <4 x i32>
  %9838 = bitcast <8 x i16> %9836 to <4 x i32>
  %9839 = add <4 x i32> %9838, %9837
  %9840 = shufflevector <8 x i16> %9828, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9841 = shufflevector <8 x i16> %9830, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9842 = bitcast <8 x i16> %9840 to <4 x i32>
  %9843 = bitcast <8 x i16> %9841 to <4 x i32>
  %9844 = add <4 x i32> %9843, %9842
  %9845 = shufflevector <8 x i16> %9832, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9846 = bitcast <8 x i16> %9845 to <4 x i32>
  %9847 = add <4 x i32> %9844, %9846
  %9848 = add <4 x i32> %9839, %9847
  %9849 = shufflevector <8 x i16> %9737, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9850 = shufflevector <8 x i16> %9834, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9851 = bitcast <8 x i16> %9849 to <4 x i32>
  %9852 = bitcast <8 x i16> %9850 to <4 x i32>
  %9853 = add <4 x i32> %9852, %9851
  %9854 = shufflevector <8 x i16> %9828, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9855 = shufflevector <8 x i16> %9830, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9856 = bitcast <8 x i16> %9854 to <4 x i32>
  %9857 = bitcast <8 x i16> %9855 to <4 x i32>
  %9858 = add <4 x i32> %9857, %9856
  %9859 = shufflevector <8 x i16> %9832, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9860 = bitcast <8 x i16> %9859 to <4 x i32>
  %9861 = add <4 x i32> %9858, %9860
  %9862 = add <4 x i32> %9853, %9861
  %9863 = inttoptr i64 %7892 to i32*
  %9864 = inttoptr i64 %7892 to <4 x i32>*
  store <4 x i32> %9847, <4 x i32>* %9864, align 16
  %9865 = getelementptr inbounds i32, i32* %9863, i64 4
  %9866 = bitcast i32* %9865 to <4 x i32>*
  store <4 x i32> %9861, <4 x i32>* %9866, align 16
  %9867 = inttoptr i64 %7907 to i32*
  %9868 = inttoptr i64 %7907 to <4 x i32>*
  store <4 x i32> %9848, <4 x i32>* %9868, align 16
  %9869 = getelementptr inbounds i32, i32* %9867, i64 4
  %9870 = bitcast i32* %9869 to <4 x i32>*
  store <4 x i32> %9862, <4 x i32>* %9870, align 16
  %9871 = inttoptr i64 %7881 to <8 x i16>*
  %9872 = load <8 x i16>, <8 x i16>* %9871, align 16
  %9873 = inttoptr i64 %7880 to <8 x i16>*
  %9874 = load <8 x i16>, <8 x i16>* %9873, align 16
  %9875 = inttoptr i64 %7891 to i32*
  %9876 = inttoptr i64 %7891 to <4 x i32>*
  %9877 = load <4 x i32>, <4 x i32>* %9876, align 16
  %9878 = getelementptr inbounds i32, i32* %9875, i64 4
  %9879 = bitcast i32* %9878 to <4 x i32>*
  %9880 = load <4 x i32>, <4 x i32>* %9879, align 16
  %9881 = inttoptr i64 %7890 to i32*
  %9882 = inttoptr i64 %7890 to <4 x i32>*
  %9883 = load <4 x i32>, <4 x i32>* %9882, align 16
  %9884 = getelementptr inbounds i32, i32* %9881, i64 4
  %9885 = bitcast i32* %9884 to <4 x i32>*
  %9886 = load <4 x i32>, <4 x i32>* %9885, align 16
  %9887 = inttoptr i64 %7902 to <8 x i16>*
  %9888 = load <8 x i16>, <8 x i16>* %9887, align 16
  %9889 = inttoptr i64 %7901 to <8 x i16>*
  %9890 = load <8 x i16>, <8 x i16>* %9889, align 16
  %9891 = inttoptr i64 %7900 to <8 x i16>*
  %9892 = load <8 x i16>, <8 x i16>* %9891, align 16
  %9893 = inttoptr i64 %7906 to i32*
  %9894 = inttoptr i64 %7906 to <4 x i32>*
  %9895 = load <4 x i32>, <4 x i32>* %9894, align 16
  %9896 = getelementptr inbounds i32, i32* %9893, i64 4
  %9897 = bitcast i32* %9896 to <4 x i32>*
  %9898 = load <4 x i32>, <4 x i32>* %9897, align 16
  %9899 = inttoptr i64 %7905 to i32*
  %9900 = inttoptr i64 %7905 to <4 x i32>*
  %9901 = load <4 x i32>, <4 x i32>* %9900, align 16
  %9902 = getelementptr inbounds i32, i32* %9899, i64 4
  %9903 = bitcast i32* %9902 to <4 x i32>*
  %9904 = load <4 x i32>, <4 x i32>* %9903, align 16
  %9905 = inttoptr i64 %7904 to i32*
  %9906 = inttoptr i64 %7904 to <4 x i32>*
  %9907 = load <4 x i32>, <4 x i32>* %9906, align 16
  %9908 = getelementptr inbounds i32, i32* %9905, i64 4
  %9909 = bitcast i32* %9908 to <4 x i32>*
  %9910 = load <4 x i32>, <4 x i32>* %9909, align 16
  %9911 = add <8 x i16> %9874, %9758
  %9912 = add <8 x i16> %9911, %9872
  %9913 = add <4 x i32> %9883, %9801
  %9914 = add <4 x i32> %9913, %9877
  %9915 = add <4 x i32> %9886, %9815
  %9916 = add <4 x i32> %9915, %9880
  %9917 = shufflevector <8 x i16> %9912, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9918 = shufflevector <8 x i16> %9912, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9919 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9917, <8 x i16> %9917) #5
  %9920 = mul <4 x i32> %9914, <i32 9, i32 9, i32 9, i32 9>
  %9921 = sub <4 x i32> %9920, %9919
  %9922 = icmp sgt <4 x i32> %9921, zeroinitializer
  %9923 = select <4 x i1> %9922, <4 x i32> %9921, <4 x i32> zeroinitializer
  %9924 = mul <4 x i32> %9923, %6623
  %9925 = add <4 x i32> %9924, <i32 524288, i32 524288, i32 524288, i32 524288>
  %9926 = lshr <4 x i32> %9925, <i32 20, i32 20, i32 20, i32 20>
  %9927 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9918, <8 x i16> %9918) #5
  %9928 = mul <4 x i32> %9916, <i32 9, i32 9, i32 9, i32 9>
  %9929 = sub <4 x i32> %9928, %9927
  %9930 = icmp sgt <4 x i32> %9929, zeroinitializer
  %9931 = select <4 x i1> %9930, <4 x i32> %9929, <4 x i32> zeroinitializer
  %9932 = mul <4 x i32> %9931, %6623
  %9933 = add <4 x i32> %9932, <i32 524288, i32 524288, i32 524288, i32 524288>
  %9934 = lshr <4 x i32> %9933, <i32 20, i32 20, i32 20, i32 20>
  %9935 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %9926, <4 x i32> %9934) #5
  %9936 = add <8 x i16> %9911, %9774
  %9937 = add <4 x i32> %9913, %9847
  %9938 = add <4 x i32> %9915, %9861
  %9939 = shufflevector <8 x i16> %9936, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9940 = shufflevector <8 x i16> %9936, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9941 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9939, <8 x i16> %9939) #5
  %9942 = mul <4 x i32> %9937, <i32 9, i32 9, i32 9, i32 9>
  %9943 = sub <4 x i32> %9942, %9941
  %9944 = icmp sgt <4 x i32> %9943, zeroinitializer
  %9945 = select <4 x i1> %9944, <4 x i32> %9943, <4 x i32> zeroinitializer
  %9946 = mul <4 x i32> %9945, %6623
  %9947 = add <4 x i32> %9946, <i32 524288, i32 524288, i32 524288, i32 524288>
  %9948 = lshr <4 x i32> %9947, <i32 20, i32 20, i32 20, i32 20>
  %9949 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9940, <8 x i16> %9940) #5
  %9950 = mul <4 x i32> %9938, <i32 9, i32 9, i32 9, i32 9>
  %9951 = sub <4 x i32> %9950, %9949
  %9952 = icmp sgt <4 x i32> %9951, zeroinitializer
  %9953 = select <4 x i1> %9952, <4 x i32> %9951, <4 x i32> zeroinitializer
  %9954 = mul <4 x i32> %9953, %6623
  %9955 = add <4 x i32> %9954, <i32 524288, i32 524288, i32 524288, i32 524288>
  %9956 = lshr <4 x i32> %9955, <i32 20, i32 20, i32 20, i32 20>
  %9957 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %9948, <4 x i32> %9956) #5
  %9958 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %9935, <8 x i16> %9957) #5
  %9959 = icmp ult <16 x i8> %9958, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %9960 = select <16 x i1> %9959, <16 x i8> %9958, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %9961 = icmp sgt <16 x i8> %9960, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %9962 = select <16 x i1> %9961, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %9960
  %9963 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %9962) #5
  %9964 = add nsw <16 x i8> %9960, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %9965 = icmp sgt <16 x i8> %9964, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %9966 = select <16 x i1> %9965, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %9964
  %9967 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %9966) #5
  %9968 = or <16 x i8> %9967, %9963
  %9969 = add nsw <16 x i8> %9960, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %9970 = icmp sgt <16 x i8> %9969, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %9971 = select <16 x i1> %9970, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %9969
  %9972 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %9971) #5
  %9973 = or <16 x i8> %9968, %9972
  %9974 = xor <16 x i8> %9958, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %9975 = icmp ugt <16 x i8> %9973, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %9976 = select <16 x i1> %9975, <16 x i8> %9973, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %9977 = icmp sgt <16 x i8> %9974, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %9978 = icmp sgt <16 x i8> %9974, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %9979 = sext <16 x i1> %9978 to <16 x i8>
  %9980 = icmp sgt <16 x i8> %9974, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %9981 = icmp sgt <16 x i8> %9974, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %9982 = icmp eq <16 x i8> %9974, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %9983 = zext <16 x i1> %9977 to <16 x i8>
  %9984 = sub nsw <16 x i8> %9979, %9983
  %9985 = zext <16 x i1> %9980 to <16 x i8>
  %9986 = sub nsw <16 x i8> %9984, %9985
  %9987 = zext <16 x i1> %9981 to <16 x i8>
  %9988 = sub nsw <16 x i8> %9986, %9987
  %9989 = zext <16 x i1> %9982 to <16 x i8>
  %9990 = sub nsw <16 x i8> %9988, %9989
  %9991 = add <16 x i8> %9990, %9976
  %9992 = shufflevector <16 x i8> %9991, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %9993 = bitcast <16 x i8> %9992 to <8 x i16>
  %9994 = shufflevector <8 x i16> %9993, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %9995 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9994, <8 x i16> %9917) #5
  %9996 = shufflevector <8 x i16> %9993, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %9997 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %9996, <8 x i16> %9918) #5
  %9998 = mul <4 x i32> %9995, <i32 455, i32 455, i32 455, i32 455>
  %9999 = mul <4 x i32> %9997, <i32 455, i32 455, i32 455, i32 455>
  %10000 = add <4 x i32> %9998, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10001 = lshr <4 x i32> %10000, <i32 12, i32 12, i32 12, i32 12>
  %10002 = add <4 x i32> %9999, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10003 = lshr <4 x i32> %10002, <i32 12, i32 12, i32 12, i32 12>
  %10004 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10001, <4 x i32> %10003) #5
  %10005 = shufflevector <16 x i8> %9991, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10006 = bitcast <16 x i8> %10005 to <8 x i16>
  %10007 = shufflevector <8 x i16> %10006, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10008 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10007, <8 x i16> %9939) #5
  %10009 = shufflevector <8 x i16> %10006, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10010 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10009, <8 x i16> %9940) #5
  %10011 = mul <4 x i32> %10008, <i32 455, i32 455, i32 455, i32 455>
  %10012 = mul <4 x i32> %10010, <i32 455, i32 455, i32 455, i32 455>
  %10013 = add <4 x i32> %10011, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10014 = lshr <4 x i32> %10013, <i32 12, i32 12, i32 12, i32 12>
  %10015 = add <4 x i32> %10012, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10016 = lshr <4 x i32> %10015, <i32 12, i32 12, i32 12, i32 12>
  %10017 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10014, <4 x i32> %10016) #5
  %10018 = shufflevector <16 x i8> %9991, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10019 = add <8 x i16> %9775, %9759
  %10020 = add <8 x i16> %10019, %9888
  %10021 = add <8 x i16> %10020, %9890
  %10022 = add <8 x i16> %10021, %9892
  %10023 = add <4 x i32> %9848, %9802
  %10024 = add <4 x i32> %10023, %9895
  %10025 = add <4 x i32> %10024, %9901
  %10026 = add <4 x i32> %10025, %9907
  %10027 = add <4 x i32> %9862, %9816
  %10028 = add <4 x i32> %10027, %9898
  %10029 = add <4 x i32> %10028, %9904
  %10030 = add <4 x i32> %10029, %9910
  %10031 = shufflevector <8 x i16> %10022, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10032 = shufflevector <8 x i16> %10022, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10033 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10031, <8 x i16> %10031) #5
  %10034 = mul <4 x i32> %10026, <i32 25, i32 25, i32 25, i32 25>
  %10035 = sub <4 x i32> %10034, %10033
  %10036 = icmp sgt <4 x i32> %10035, zeroinitializer
  %10037 = select <4 x i1> %10036, <4 x i32> %10035, <4 x i32> zeroinitializer
  %10038 = mul <4 x i32> %10037, %6744
  %10039 = add <4 x i32> %10038, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10040 = lshr <4 x i32> %10039, <i32 20, i32 20, i32 20, i32 20>
  %10041 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10032, <8 x i16> %10032) #5
  %10042 = mul <4 x i32> %10030, <i32 25, i32 25, i32 25, i32 25>
  %10043 = sub <4 x i32> %10042, %10041
  %10044 = icmp sgt <4 x i32> %10043, zeroinitializer
  %10045 = select <4 x i1> %10044, <4 x i32> %10043, <4 x i32> zeroinitializer
  %10046 = mul <4 x i32> %10045, %6744
  %10047 = add <4 x i32> %10046, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10048 = lshr <4 x i32> %10047, <i32 20, i32 20, i32 20, i32 20>
  %10049 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10040, <4 x i32> %10048) #5
  %10050 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %10049, <8 x i16> undef) #5
  %10051 = bitcast <16 x i8> %10050 to <2 x i64>
  %10052 = extractelement <2 x i64> %10051, i32 0
  %10053 = lshr i64 %10052, 8
  %10054 = lshr i64 %10052, 16
  %10055 = lshr i64 %10052, 24
  %10056 = lshr i64 %10052, 32
  %10057 = lshr i64 %10052, 40
  %10058 = lshr i64 %10052, 48
  %10059 = lshr i64 %10052, 56
  %10060 = and i64 %10052, 255
  %10061 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10060
  %10062 = load i8, i8* %10061, align 1
  %10063 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %10062, i64 0
  %10064 = and i64 %10053, 255
  %10065 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10064
  %10066 = load i8, i8* %10065, align 1
  %10067 = insertelement <16 x i8> %10063, i8 %10066, i64 1
  %10068 = and i64 %10054, 255
  %10069 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10068
  %10070 = load i8, i8* %10069, align 1
  %10071 = insertelement <16 x i8> %10067, i8 %10070, i64 2
  %10072 = and i64 %10055, 255
  %10073 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10072
  %10074 = load i8, i8* %10073, align 1
  %10075 = insertelement <16 x i8> %10071, i8 %10074, i64 3
  %10076 = and i64 %10056, 255
  %10077 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10076
  %10078 = load i8, i8* %10077, align 1
  %10079 = insertelement <16 x i8> %10075, i8 %10078, i64 4
  %10080 = and i64 %10057, 255
  %10081 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10080
  %10082 = load i8, i8* %10081, align 1
  %10083 = insertelement <16 x i8> %10079, i8 %10082, i64 5
  %10084 = and i64 %10058, 255
  %10085 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10084
  %10086 = load i8, i8* %10085, align 1
  %10087 = insertelement <16 x i8> %10083, i8 %10086, i64 6
  %10088 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10059
  %10089 = load i8, i8* %10088, align 1
  %10090 = insertelement <16 x i8> %10087, i8 %10089, i64 7
  %10091 = shufflevector <16 x i8> %10090, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10092 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %10091, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %10093 = shufflevector <8 x i16> %10092, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10094 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10093, <8 x i16> %10031) #5
  %10095 = shufflevector <8 x i16> %10092, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10096 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10095, <8 x i16> %10032) #5
  %10097 = add <4 x i32> %10094, <i32 512, i32 512, i32 512, i32 512>
  %10098 = lshr <4 x i32> %10097, <i32 10, i32 10, i32 10, i32 10>
  %10099 = add <4 x i32> %10096, <i32 512, i32 512, i32 512, i32 512>
  %10100 = lshr <4 x i32> %10099, <i32 10, i32 10, i32 10, i32 10>
  %10101 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10098, <4 x i32> %10100) #5
  %10102 = getelementptr inbounds i8, i8* %9724, i64 16
  %10103 = getelementptr inbounds i8, i8* %9723, i64 16
  %10104 = getelementptr inbounds i8, i8* %9725, i64 %2
  %10105 = getelementptr inbounds i8, i8* %7914, i64 %2
  %10106 = inttoptr i64 %7910 to i16*
  %10107 = inttoptr i64 %7912 to i32*
  %10108 = inttoptr i64 %7911 to i16*
  %10109 = inttoptr i64 %7913 to i32*
  %10110 = getelementptr inbounds i16, i16* %10106, i64 8
  %10111 = getelementptr inbounds i32, i32* %10107, i64 8
  %10112 = getelementptr inbounds i16, i16* %10108, i64 8
  %10113 = getelementptr inbounds i32, i32* %10109, i64 8
  %10114 = inttoptr i64 %7883 to i16*
  %10115 = getelementptr inbounds i16, i16* %10114, i64 8
  %10116 = inttoptr i64 %7909 to i16*
  %10117 = getelementptr inbounds i16, i16* %10116, i64 8
  %10118 = inttoptr i64 %7882 to i16*
  %10119 = getelementptr inbounds i16, i16* %10118, i64 8
  %10120 = inttoptr i64 %7903 to i16*
  %10121 = getelementptr inbounds i16, i16* %10120, i64 8
  %10122 = inttoptr i64 %7881 to i16*
  %10123 = inttoptr i64 %7880 to i16*
  %10124 = inttoptr i64 %7902 to i16*
  %10125 = inttoptr i64 %7901 to i16*
  %10126 = inttoptr i64 %7900 to i16*
  %10127 = getelementptr inbounds i32, i32* %9817, i64 8
  %10128 = getelementptr inbounds i32, i32* %9821, i64 8
  %10129 = getelementptr inbounds i32, i32* %9863, i64 8
  %10130 = getelementptr inbounds i32, i32* %9867, i64 8
  %10131 = inttoptr i64 %7885 to i16*
  %10132 = inttoptr i64 %7895 to i32*
  %10133 = inttoptr i64 %7888 to i16*
  %10134 = inttoptr i64 %7898 to i32*
  %10135 = inttoptr i64 %7887 to i16*
  %10136 = inttoptr i64 %7889 to i16*
  %10137 = inttoptr i64 %7897 to i32*
  %10138 = inttoptr i64 %7899 to i32*
  %10139 = getelementptr inbounds i16, i16* %10135, i64 8
  %10140 = getelementptr inbounds i16, i16* %10136, i64 8
  %10141 = getelementptr inbounds i32, i32* %10137, i64 8
  %10142 = getelementptr inbounds i32, i32* %10138, i64 8
  %10143 = getelementptr inbounds i16, i16* %7886, i64 8
  %10144 = getelementptr inbounds i32, i32* %7896, i64 8
  br label %10145

10145:                                            ; preds = %10145, %9719
  %10146 = phi i64 [ %10161, %10145 ], [ 0, %9719 ]
  %10147 = phi <2 x i64> [ %10166, %10145 ], [ %9729, %9719 ]
  %10148 = phi <2 x i64> [ %10163, %10145 ], [ %9727, %9719 ]
  %10149 = phi <16 x i8> [ %10814, %10145 ], [ %10018, %9719 ]
  %10150 = phi <16 x i8> [ %10751, %10145 ], [ %9991, %9719 ]
  %10151 = phi <16 x i8> [ %10913, %10145 ], [ <i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, %9719 ]
  %10152 = phi <16 x i8> [ %10913, %10145 ], [ %10090, %9719 ]
  %10153 = phi <8 x i16> [ %10532, %10145 ], [ %9743, %9719 ]
  %10154 = phi <8 x i16> [ %10529, %10145 ], [ %9740, %9719 ]
  %10155 = phi <8 x i16> [ %10812, %10145 ], [ %10017, %9719 ]
  %10156 = phi <8 x i16> [ %10749, %10145 ], [ %10004, %9719 ]
  %10157 = phi <8 x i16> [ %10924, %10145 ], [ %10101, %9719 ]
  %10158 = bitcast <16 x i8> %10150 to <2 x i64>
  %10159 = bitcast <16 x i8> %10149 to <2 x i64>
  %10160 = getelementptr inbounds i8, i8* %10102, i64 %10146
  %10161 = add nuw nsw i64 %10146, 16
  %10162 = bitcast i8* %10160 to <2 x i64>*
  %10163 = load <2 x i64>, <2 x i64>* %10162, align 1
  %10164 = getelementptr inbounds i8, i8* %10103, i64 %10146
  %10165 = bitcast i8* %10164 to <2 x i64>*
  %10166 = load <2 x i64>, <2 x i64>* %10165, align 1
  %10167 = or i64 %10146, 8
  %10168 = bitcast <2 x i64> %10163 to <16 x i8>
  %10169 = bitcast <2 x i64> %10148 to <16 x i8>
  %10170 = shufflevector <16 x i8> %10169, <16 x i8> %10168, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10171 = shufflevector <16 x i8> %10169, <16 x i8> %10168, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %10172 = shufflevector <16 x i8> %10169, <16 x i8> %10168, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %10173 = shufflevector <16 x i8> %10169, <16 x i8> %10168, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %10174 = shufflevector <16 x i8> %10169, <16 x i8> %10168, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %10175 = shufflevector <16 x i8> %10170, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10176 = shufflevector <16 x i8> %10174, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10177 = bitcast <16 x i8> %10175 to <8 x i16>
  %10178 = bitcast <16 x i8> %10176 to <8 x i16>
  %10179 = add <8 x i16> %10178, %10177
  %10180 = shufflevector <16 x i8> %10170, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10181 = shufflevector <16 x i8> %10174, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10182 = bitcast <16 x i8> %10180 to <8 x i16>
  %10183 = bitcast <16 x i8> %10181 to <8 x i16>
  %10184 = add <8 x i16> %10183, %10182
  %10185 = shufflevector <16 x i8> %10171, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10186 = shufflevector <16 x i8> %10172, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10187 = bitcast <16 x i8> %10185 to <8 x i16>
  %10188 = bitcast <16 x i8> %10186 to <8 x i16>
  %10189 = add <8 x i16> %10188, %10187
  %10190 = shufflevector <16 x i8> %10173, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10191 = bitcast <16 x i8> %10190 to <8 x i16>
  %10192 = add <8 x i16> %10189, %10191
  %10193 = shufflevector <16 x i8> %10171, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10194 = shufflevector <16 x i8> %10172, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10195 = bitcast <16 x i8> %10193 to <8 x i16>
  %10196 = bitcast <16 x i8> %10194 to <8 x i16>
  %10197 = add <8 x i16> %10196, %10195
  %10198 = shufflevector <16 x i8> %10173, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10199 = bitcast <16 x i8> %10198 to <8 x i16>
  %10200 = add <8 x i16> %10197, %10199
  %10201 = add <8 x i16> %10179, %10192
  %10202 = add <8 x i16> %10184, %10200
  %10203 = getelementptr inbounds i16, i16* %10114, i64 %10167
  %10204 = bitcast i16* %10203 to <8 x i16>*
  store <8 x i16> %10192, <8 x i16>* %10204, align 16
  %10205 = getelementptr inbounds i16, i16* %10115, i64 %10167
  %10206 = bitcast i16* %10205 to <8 x i16>*
  store <8 x i16> %10200, <8 x i16>* %10206, align 16
  %10207 = getelementptr inbounds i16, i16* %10116, i64 %10167
  %10208 = bitcast i16* %10207 to <8 x i16>*
  store <8 x i16> %10201, <8 x i16>* %10208, align 16
  %10209 = getelementptr inbounds i16, i16* %10117, i64 %10167
  %10210 = bitcast i16* %10209 to <8 x i16>*
  store <8 x i16> %10202, <8 x i16>* %10210, align 16
  %10211 = bitcast <2 x i64> %10166 to <16 x i8>
  %10212 = bitcast <2 x i64> %10147 to <16 x i8>
  %10213 = shufflevector <16 x i8> %10212, <16 x i8> %10211, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10214 = shufflevector <16 x i8> %10212, <16 x i8> %10211, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %10215 = shufflevector <16 x i8> %10212, <16 x i8> %10211, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %10216 = shufflevector <16 x i8> %10212, <16 x i8> %10211, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %10217 = shufflevector <16 x i8> %10212, <16 x i8> %10211, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %10218 = shufflevector <16 x i8> %10213, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10219 = shufflevector <16 x i8> %10217, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10220 = bitcast <16 x i8> %10218 to <8 x i16>
  %10221 = bitcast <16 x i8> %10219 to <8 x i16>
  %10222 = add <8 x i16> %10221, %10220
  %10223 = shufflevector <16 x i8> %10213, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10224 = shufflevector <16 x i8> %10217, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10225 = bitcast <16 x i8> %10223 to <8 x i16>
  %10226 = bitcast <16 x i8> %10224 to <8 x i16>
  %10227 = add <8 x i16> %10226, %10225
  %10228 = shufflevector <16 x i8> %10214, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10229 = shufflevector <16 x i8> %10215, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10230 = bitcast <16 x i8> %10228 to <8 x i16>
  %10231 = bitcast <16 x i8> %10229 to <8 x i16>
  %10232 = add <8 x i16> %10231, %10230
  %10233 = shufflevector <16 x i8> %10216, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10234 = bitcast <16 x i8> %10233 to <8 x i16>
  %10235 = add <8 x i16> %10232, %10234
  %10236 = shufflevector <16 x i8> %10214, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10237 = shufflevector <16 x i8> %10215, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10238 = bitcast <16 x i8> %10236 to <8 x i16>
  %10239 = bitcast <16 x i8> %10237 to <8 x i16>
  %10240 = add <8 x i16> %10239, %10238
  %10241 = shufflevector <16 x i8> %10216, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10242 = bitcast <16 x i8> %10241 to <8 x i16>
  %10243 = add <8 x i16> %10240, %10242
  %10244 = add <8 x i16> %10222, %10235
  %10245 = add <8 x i16> %10227, %10243
  %10246 = getelementptr inbounds i16, i16* %10118, i64 %10167
  %10247 = bitcast i16* %10246 to <8 x i16>*
  store <8 x i16> %10235, <8 x i16>* %10247, align 16
  %10248 = getelementptr inbounds i16, i16* %10119, i64 %10167
  %10249 = bitcast i16* %10248 to <8 x i16>*
  store <8 x i16> %10243, <8 x i16>* %10249, align 16
  %10250 = getelementptr inbounds i16, i16* %10120, i64 %10167
  %10251 = bitcast i16* %10250 to <8 x i16>*
  store <8 x i16> %10244, <8 x i16>* %10251, align 16
  %10252 = getelementptr inbounds i16, i16* %10121, i64 %10167
  %10253 = bitcast i16* %10252 to <8 x i16>*
  store <8 x i16> %10245, <8 x i16>* %10253, align 16
  %10254 = shufflevector <16 x i8> %10168, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10255 = bitcast <16 x i8> %10254 to <8 x i16>
  %10256 = mul <8 x i16> %10255, %10255
  %10257 = shufflevector <16 x i8> %10211, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10258 = bitcast <16 x i8> %10257 to <8 x i16>
  %10259 = mul <8 x i16> %10258, %10258
  %10260 = bitcast <8 x i16> %10256 to <16 x i8>
  %10261 = bitcast <8 x i16> %10154 to <16 x i8>
  %10262 = shufflevector <16 x i8> %10261, <16 x i8> %10260, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %10263 = bitcast <16 x i8> %10262 to <8 x i16>
  %10264 = shufflevector <16 x i8> %10261, <16 x i8> %10260, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %10265 = bitcast <16 x i8> %10264 to <8 x i16>
  %10266 = shufflevector <16 x i8> %10261, <16 x i8> %10260, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %10267 = bitcast <16 x i8> %10266 to <8 x i16>
  %10268 = shufflevector <16 x i8> %10261, <16 x i8> %10260, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10269 = bitcast <16 x i8> %10268 to <8 x i16>
  %10270 = shufflevector <8 x i16> %10154, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10271 = shufflevector <8 x i16> %10269, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10272 = bitcast <8 x i16> %10270 to <4 x i32>
  %10273 = bitcast <8 x i16> %10271 to <4 x i32>
  %10274 = add <4 x i32> %10273, %10272
  %10275 = shufflevector <8 x i16> %10263, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10276 = shufflevector <8 x i16> %10265, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10277 = bitcast <8 x i16> %10275 to <4 x i32>
  %10278 = bitcast <8 x i16> %10276 to <4 x i32>
  %10279 = add <4 x i32> %10278, %10277
  %10280 = shufflevector <8 x i16> %10267, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10281 = bitcast <8 x i16> %10280 to <4 x i32>
  %10282 = add <4 x i32> %10279, %10281
  %10283 = add <4 x i32> %10274, %10282
  %10284 = shufflevector <8 x i16> %10154, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10285 = shufflevector <8 x i16> %10269, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10286 = bitcast <8 x i16> %10284 to <4 x i32>
  %10287 = bitcast <8 x i16> %10285 to <4 x i32>
  %10288 = add <4 x i32> %10287, %10286
  %10289 = shufflevector <8 x i16> %10263, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10290 = shufflevector <8 x i16> %10265, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10291 = bitcast <8 x i16> %10289 to <4 x i32>
  %10292 = bitcast <8 x i16> %10290 to <4 x i32>
  %10293 = add <4 x i32> %10292, %10291
  %10294 = shufflevector <8 x i16> %10267, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10295 = bitcast <8 x i16> %10294 to <4 x i32>
  %10296 = add <4 x i32> %10293, %10295
  %10297 = add <4 x i32> %10288, %10296
  %10298 = getelementptr inbounds i32, i32* %9817, i64 %10167
  %10299 = bitcast i32* %10298 to <4 x i32>*
  store <4 x i32> %10282, <4 x i32>* %10299, align 16
  %10300 = getelementptr inbounds i32, i32* %10298, i64 4
  %10301 = bitcast i32* %10300 to <4 x i32>*
  store <4 x i32> %10296, <4 x i32>* %10301, align 16
  %10302 = getelementptr inbounds i32, i32* %9821, i64 %10167
  %10303 = bitcast i32* %10302 to <4 x i32>*
  store <4 x i32> %10283, <4 x i32>* %10303, align 16
  %10304 = getelementptr inbounds i32, i32* %10302, i64 4
  %10305 = bitcast i32* %10304 to <4 x i32>*
  store <4 x i32> %10297, <4 x i32>* %10305, align 16
  %10306 = bitcast <8 x i16> %10259 to <16 x i8>
  %10307 = bitcast <8 x i16> %10153 to <16 x i8>
  %10308 = shufflevector <16 x i8> %10307, <16 x i8> %10306, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %10309 = bitcast <16 x i8> %10308 to <8 x i16>
  %10310 = shufflevector <16 x i8> %10307, <16 x i8> %10306, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %10311 = bitcast <16 x i8> %10310 to <8 x i16>
  %10312 = shufflevector <16 x i8> %10307, <16 x i8> %10306, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %10313 = bitcast <16 x i8> %10312 to <8 x i16>
  %10314 = shufflevector <16 x i8> %10307, <16 x i8> %10306, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10315 = bitcast <16 x i8> %10314 to <8 x i16>
  %10316 = shufflevector <8 x i16> %10153, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10317 = shufflevector <8 x i16> %10315, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10318 = bitcast <8 x i16> %10316 to <4 x i32>
  %10319 = bitcast <8 x i16> %10317 to <4 x i32>
  %10320 = add <4 x i32> %10319, %10318
  %10321 = shufflevector <8 x i16> %10309, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10322 = shufflevector <8 x i16> %10311, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10323 = bitcast <8 x i16> %10321 to <4 x i32>
  %10324 = bitcast <8 x i16> %10322 to <4 x i32>
  %10325 = add <4 x i32> %10324, %10323
  %10326 = shufflevector <8 x i16> %10313, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10327 = bitcast <8 x i16> %10326 to <4 x i32>
  %10328 = add <4 x i32> %10325, %10327
  %10329 = add <4 x i32> %10320, %10328
  %10330 = shufflevector <8 x i16> %10153, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10331 = shufflevector <8 x i16> %10315, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10332 = bitcast <8 x i16> %10330 to <4 x i32>
  %10333 = bitcast <8 x i16> %10331 to <4 x i32>
  %10334 = add <4 x i32> %10333, %10332
  %10335 = shufflevector <8 x i16> %10309, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10336 = shufflevector <8 x i16> %10311, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10337 = bitcast <8 x i16> %10335 to <4 x i32>
  %10338 = bitcast <8 x i16> %10336 to <4 x i32>
  %10339 = add <4 x i32> %10338, %10337
  %10340 = shufflevector <8 x i16> %10313, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10341 = bitcast <8 x i16> %10340 to <4 x i32>
  %10342 = add <4 x i32> %10339, %10341
  %10343 = add <4 x i32> %10334, %10342
  %10344 = getelementptr inbounds i32, i32* %9863, i64 %10167
  %10345 = bitcast i32* %10344 to <4 x i32>*
  store <4 x i32> %10328, <4 x i32>* %10345, align 16
  %10346 = getelementptr inbounds i32, i32* %10344, i64 4
  %10347 = bitcast i32* %10346 to <4 x i32>*
  store <4 x i32> %10342, <4 x i32>* %10347, align 16
  %10348 = getelementptr inbounds i32, i32* %9867, i64 %10167
  %10349 = bitcast i32* %10348 to <4 x i32>*
  store <4 x i32> %10329, <4 x i32>* %10349, align 16
  %10350 = getelementptr inbounds i32, i32* %10348, i64 4
  %10351 = bitcast i32* %10350 to <4 x i32>*
  store <4 x i32> %10343, <4 x i32>* %10351, align 16
  %10352 = getelementptr inbounds i16, i16* %10122, i64 %10167
  %10353 = bitcast i16* %10352 to <8 x i16>*
  %10354 = load <8 x i16>, <8 x i16>* %10353, align 16
  %10355 = getelementptr inbounds i16, i16* %10123, i64 %10167
  %10356 = bitcast i16* %10355 to <8 x i16>*
  %10357 = load <8 x i16>, <8 x i16>* %10356, align 16
  %10358 = getelementptr inbounds i32, i32* %9875, i64 %10167
  %10359 = bitcast i32* %10358 to <4 x i32>*
  %10360 = load <4 x i32>, <4 x i32>* %10359, align 16
  %10361 = getelementptr inbounds i32, i32* %10358, i64 4
  %10362 = bitcast i32* %10361 to <4 x i32>*
  %10363 = load <4 x i32>, <4 x i32>* %10362, align 16
  %10364 = getelementptr inbounds i32, i32* %9881, i64 %10167
  %10365 = bitcast i32* %10364 to <4 x i32>*
  %10366 = load <4 x i32>, <4 x i32>* %10365, align 16
  %10367 = getelementptr inbounds i32, i32* %10364, i64 4
  %10368 = bitcast i32* %10367 to <4 x i32>*
  %10369 = load <4 x i32>, <4 x i32>* %10368, align 16
  %10370 = add <8 x i16> %10357, %10192
  %10371 = add <8 x i16> %10370, %10354
  %10372 = add <4 x i32> %10366, %10282
  %10373 = add <4 x i32> %10372, %10360
  %10374 = add <4 x i32> %10369, %10296
  %10375 = add <4 x i32> %10374, %10363
  %10376 = shufflevector <8 x i16> %10371, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10377 = shufflevector <8 x i16> %10371, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10378 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10376, <8 x i16> %10376) #5
  %10379 = mul <4 x i32> %10373, <i32 9, i32 9, i32 9, i32 9>
  %10380 = sub <4 x i32> %10379, %10378
  %10381 = icmp sgt <4 x i32> %10380, zeroinitializer
  %10382 = select <4 x i1> %10381, <4 x i32> %10380, <4 x i32> zeroinitializer
  %10383 = mul <4 x i32> %10382, %6623
  %10384 = add <4 x i32> %10383, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10385 = lshr <4 x i32> %10384, <i32 20, i32 20, i32 20, i32 20>
  %10386 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10377, <8 x i16> %10377) #5
  %10387 = mul <4 x i32> %10375, <i32 9, i32 9, i32 9, i32 9>
  %10388 = sub <4 x i32> %10387, %10386
  %10389 = icmp sgt <4 x i32> %10388, zeroinitializer
  %10390 = select <4 x i1> %10389, <4 x i32> %10388, <4 x i32> zeroinitializer
  %10391 = mul <4 x i32> %10390, %6623
  %10392 = add <4 x i32> %10391, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10393 = lshr <4 x i32> %10392, <i32 20, i32 20, i32 20, i32 20>
  %10394 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10385, <4 x i32> %10393) #5
  %10395 = add <8 x i16> %10370, %10235
  %10396 = add <4 x i32> %10372, %10328
  %10397 = add <4 x i32> %10374, %10342
  %10398 = shufflevector <8 x i16> %10395, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10399 = shufflevector <8 x i16> %10395, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10400 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10398, <8 x i16> %10398) #5
  %10401 = mul <4 x i32> %10396, <i32 9, i32 9, i32 9, i32 9>
  %10402 = sub <4 x i32> %10401, %10400
  %10403 = icmp sgt <4 x i32> %10402, zeroinitializer
  %10404 = select <4 x i1> %10403, <4 x i32> %10402, <4 x i32> zeroinitializer
  %10405 = mul <4 x i32> %10404, %6623
  %10406 = add <4 x i32> %10405, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10407 = lshr <4 x i32> %10406, <i32 20, i32 20, i32 20, i32 20>
  %10408 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10399, <8 x i16> %10399) #5
  %10409 = mul <4 x i32> %10397, <i32 9, i32 9, i32 9, i32 9>
  %10410 = sub <4 x i32> %10409, %10408
  %10411 = icmp sgt <4 x i32> %10410, zeroinitializer
  %10412 = select <4 x i1> %10411, <4 x i32> %10410, <4 x i32> zeroinitializer
  %10413 = mul <4 x i32> %10412, %6623
  %10414 = add <4 x i32> %10413, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10415 = lshr <4 x i32> %10414, <i32 20, i32 20, i32 20, i32 20>
  %10416 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10407, <4 x i32> %10415) #5
  %10417 = getelementptr inbounds i16, i16* %10124, i64 %10167
  %10418 = bitcast i16* %10417 to <8 x i16>*
  %10419 = load <8 x i16>, <8 x i16>* %10418, align 16
  %10420 = getelementptr inbounds i16, i16* %10125, i64 %10167
  %10421 = bitcast i16* %10420 to <8 x i16>*
  %10422 = load <8 x i16>, <8 x i16>* %10421, align 16
  %10423 = getelementptr inbounds i16, i16* %10126, i64 %10167
  %10424 = bitcast i16* %10423 to <8 x i16>*
  %10425 = load <8 x i16>, <8 x i16>* %10424, align 16
  %10426 = getelementptr inbounds i32, i32* %9893, i64 %10167
  %10427 = bitcast i32* %10426 to <4 x i32>*
  %10428 = load <4 x i32>, <4 x i32>* %10427, align 16
  %10429 = getelementptr inbounds i32, i32* %10426, i64 4
  %10430 = bitcast i32* %10429 to <4 x i32>*
  %10431 = load <4 x i32>, <4 x i32>* %10430, align 16
  %10432 = getelementptr inbounds i32, i32* %9899, i64 %10167
  %10433 = bitcast i32* %10432 to <4 x i32>*
  %10434 = load <4 x i32>, <4 x i32>* %10433, align 16
  %10435 = getelementptr inbounds i32, i32* %10432, i64 4
  %10436 = bitcast i32* %10435 to <4 x i32>*
  %10437 = load <4 x i32>, <4 x i32>* %10436, align 16
  %10438 = getelementptr inbounds i32, i32* %9905, i64 %10167
  %10439 = bitcast i32* %10438 to <4 x i32>*
  %10440 = load <4 x i32>, <4 x i32>* %10439, align 16
  %10441 = getelementptr inbounds i32, i32* %10438, i64 4
  %10442 = bitcast i32* %10441 to <4 x i32>*
  %10443 = load <4 x i32>, <4 x i32>* %10442, align 16
  %10444 = add <8 x i16> %10244, %10201
  %10445 = add <8 x i16> %10444, %10419
  %10446 = add <8 x i16> %10445, %10422
  %10447 = add <8 x i16> %10446, %10425
  %10448 = add <4 x i32> %10329, %10283
  %10449 = add <4 x i32> %10448, %10428
  %10450 = add <4 x i32> %10449, %10434
  %10451 = add <4 x i32> %10450, %10440
  %10452 = add <4 x i32> %10343, %10297
  %10453 = add <4 x i32> %10452, %10431
  %10454 = add <4 x i32> %10453, %10437
  %10455 = add <4 x i32> %10454, %10443
  %10456 = shufflevector <8 x i16> %10447, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10457 = shufflevector <8 x i16> %10447, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10458 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10456, <8 x i16> %10456) #5
  %10459 = mul <4 x i32> %10451, <i32 25, i32 25, i32 25, i32 25>
  %10460 = sub <4 x i32> %10459, %10458
  %10461 = icmp sgt <4 x i32> %10460, zeroinitializer
  %10462 = select <4 x i1> %10461, <4 x i32> %10460, <4 x i32> zeroinitializer
  %10463 = mul <4 x i32> %10462, %6744
  %10464 = add <4 x i32> %10463, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10465 = lshr <4 x i32> %10464, <i32 20, i32 20, i32 20, i32 20>
  %10466 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10457, <8 x i16> %10457) #5
  %10467 = mul <4 x i32> %10455, <i32 25, i32 25, i32 25, i32 25>
  %10468 = sub <4 x i32> %10467, %10466
  %10469 = icmp sgt <4 x i32> %10468, zeroinitializer
  %10470 = select <4 x i1> %10469, <4 x i32> %10468, <4 x i32> zeroinitializer
  %10471 = mul <4 x i32> %10470, %6744
  %10472 = add <4 x i32> %10471, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10473 = lshr <4 x i32> %10472, <i32 20, i32 20, i32 20, i32 20>
  %10474 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10465, <4 x i32> %10473) #5
  %10475 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %10474, <8 x i16> undef) #5
  %10476 = bitcast <16 x i8> %10475 to <2 x i64>
  %10477 = extractelement <2 x i64> %10476, i32 0
  %10478 = lshr i64 %10477, 8
  %10479 = lshr i64 %10477, 16
  %10480 = lshr i64 %10477, 24
  %10481 = lshr i64 %10477, 32
  %10482 = lshr i64 %10477, 40
  %10483 = lshr i64 %10477, 48
  %10484 = lshr i64 %10477, 56
  %10485 = and i64 %10477, 255
  %10486 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10485
  %10487 = load i8, i8* %10486, align 1
  %10488 = insertelement <16 x i8> %10152, i8 %10487, i64 8
  %10489 = and i64 %10478, 255
  %10490 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10489
  %10491 = load i8, i8* %10490, align 1
  %10492 = insertelement <16 x i8> %10488, i8 %10491, i64 9
  %10493 = and i64 %10479, 255
  %10494 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10493
  %10495 = load i8, i8* %10494, align 1
  %10496 = insertelement <16 x i8> %10492, i8 %10495, i64 10
  %10497 = and i64 %10480, 255
  %10498 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10497
  %10499 = load i8, i8* %10498, align 1
  %10500 = insertelement <16 x i8> %10496, i8 %10499, i64 11
  %10501 = and i64 %10481, 255
  %10502 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10501
  %10503 = load i8, i8* %10502, align 1
  %10504 = insertelement <16 x i8> %10500, i8 %10503, i64 12
  %10505 = and i64 %10482, 255
  %10506 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10505
  %10507 = load i8, i8* %10506, align 1
  %10508 = insertelement <16 x i8> %10504, i8 %10507, i64 13
  %10509 = and i64 %10483, 255
  %10510 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10509
  %10511 = load i8, i8* %10510, align 1
  %10512 = insertelement <16 x i8> %10508, i8 %10511, i64 14
  %10513 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10484
  %10514 = load i8, i8* %10513, align 1
  %10515 = insertelement <16 x i8> %10512, i8 %10514, i64 15
  %10516 = shufflevector <16 x i8> %10515, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10517 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %10516, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %10518 = shufflevector <8 x i16> %10517, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10519 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10518, <8 x i16> %10456) #5
  %10520 = shufflevector <8 x i16> %10517, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10521 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10520, <8 x i16> %10457) #5
  %10522 = add <4 x i32> %10519, <i32 512, i32 512, i32 512, i32 512>
  %10523 = lshr <4 x i32> %10522, <i32 10, i32 10, i32 10, i32 10>
  %10524 = add <4 x i32> %10521, <i32 512, i32 512, i32 512, i32 512>
  %10525 = lshr <4 x i32> %10524, <i32 10, i32 10, i32 10, i32 10>
  %10526 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10523, <4 x i32> %10525) #5
  %10527 = shufflevector <16 x i8> %10168, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10528 = bitcast <16 x i8> %10527 to <8 x i16>
  %10529 = mul <8 x i16> %10528, %10528
  %10530 = shufflevector <16 x i8> %10211, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10531 = bitcast <16 x i8> %10530 to <8 x i16>
  %10532 = mul <8 x i16> %10531, %10531
  %10533 = bitcast <8 x i16> %10529 to <16 x i8>
  %10534 = shufflevector <16 x i8> %10260, <16 x i8> %10533, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %10535 = bitcast <16 x i8> %10534 to <8 x i16>
  %10536 = shufflevector <16 x i8> %10260, <16 x i8> %10533, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %10537 = bitcast <16 x i8> %10536 to <8 x i16>
  %10538 = shufflevector <16 x i8> %10260, <16 x i8> %10533, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %10539 = bitcast <16 x i8> %10538 to <8 x i16>
  %10540 = shufflevector <16 x i8> %10260, <16 x i8> %10533, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10541 = bitcast <16 x i8> %10540 to <8 x i16>
  %10542 = shufflevector <8 x i16> %10256, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10543 = shufflevector <8 x i16> %10541, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10544 = bitcast <8 x i16> %10542 to <4 x i32>
  %10545 = bitcast <8 x i16> %10543 to <4 x i32>
  %10546 = add <4 x i32> %10545, %10544
  %10547 = shufflevector <8 x i16> %10535, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10548 = shufflevector <8 x i16> %10537, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10549 = bitcast <8 x i16> %10547 to <4 x i32>
  %10550 = bitcast <8 x i16> %10548 to <4 x i32>
  %10551 = add <4 x i32> %10550, %10549
  %10552 = shufflevector <8 x i16> %10539, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10553 = bitcast <8 x i16> %10552 to <4 x i32>
  %10554 = add <4 x i32> %10551, %10553
  %10555 = add <4 x i32> %10546, %10554
  %10556 = shufflevector <8 x i16> %10256, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10557 = shufflevector <8 x i16> %10541, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10558 = bitcast <8 x i16> %10556 to <4 x i32>
  %10559 = bitcast <8 x i16> %10557 to <4 x i32>
  %10560 = add <4 x i32> %10559, %10558
  %10561 = shufflevector <8 x i16> %10535, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10562 = shufflevector <8 x i16> %10537, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10563 = bitcast <8 x i16> %10561 to <4 x i32>
  %10564 = bitcast <8 x i16> %10562 to <4 x i32>
  %10565 = add <4 x i32> %10564, %10563
  %10566 = shufflevector <8 x i16> %10539, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10567 = bitcast <8 x i16> %10566 to <4 x i32>
  %10568 = add <4 x i32> %10565, %10567
  %10569 = add <4 x i32> %10560, %10568
  %10570 = getelementptr inbounds i32, i32* %10127, i64 %10167
  %10571 = bitcast i32* %10570 to <4 x i32>*
  store <4 x i32> %10554, <4 x i32>* %10571, align 16
  %10572 = getelementptr inbounds i32, i32* %10570, i64 4
  %10573 = bitcast i32* %10572 to <4 x i32>*
  store <4 x i32> %10568, <4 x i32>* %10573, align 16
  %10574 = getelementptr inbounds i32, i32* %10128, i64 %10167
  %10575 = bitcast i32* %10574 to <4 x i32>*
  store <4 x i32> %10555, <4 x i32>* %10575, align 16
  %10576 = getelementptr inbounds i32, i32* %10574, i64 4
  %10577 = bitcast i32* %10576 to <4 x i32>*
  store <4 x i32> %10569, <4 x i32>* %10577, align 16
  %10578 = bitcast <8 x i16> %10532 to <16 x i8>
  %10579 = shufflevector <16 x i8> %10306, <16 x i8> %10578, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %10580 = bitcast <16 x i8> %10579 to <8 x i16>
  %10581 = shufflevector <16 x i8> %10306, <16 x i8> %10578, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %10582 = bitcast <16 x i8> %10581 to <8 x i16>
  %10583 = shufflevector <16 x i8> %10306, <16 x i8> %10578, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %10584 = bitcast <16 x i8> %10583 to <8 x i16>
  %10585 = shufflevector <16 x i8> %10306, <16 x i8> %10578, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10586 = bitcast <16 x i8> %10585 to <8 x i16>
  %10587 = shufflevector <8 x i16> %10259, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10588 = shufflevector <8 x i16> %10586, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10589 = bitcast <8 x i16> %10587 to <4 x i32>
  %10590 = bitcast <8 x i16> %10588 to <4 x i32>
  %10591 = add <4 x i32> %10590, %10589
  %10592 = shufflevector <8 x i16> %10580, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10593 = shufflevector <8 x i16> %10582, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10594 = bitcast <8 x i16> %10592 to <4 x i32>
  %10595 = bitcast <8 x i16> %10593 to <4 x i32>
  %10596 = add <4 x i32> %10595, %10594
  %10597 = shufflevector <8 x i16> %10584, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10598 = bitcast <8 x i16> %10597 to <4 x i32>
  %10599 = add <4 x i32> %10596, %10598
  %10600 = add <4 x i32> %10591, %10599
  %10601 = shufflevector <8 x i16> %10259, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10602 = shufflevector <8 x i16> %10586, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10603 = bitcast <8 x i16> %10601 to <4 x i32>
  %10604 = bitcast <8 x i16> %10602 to <4 x i32>
  %10605 = add <4 x i32> %10604, %10603
  %10606 = shufflevector <8 x i16> %10580, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10607 = shufflevector <8 x i16> %10582, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10608 = bitcast <8 x i16> %10606 to <4 x i32>
  %10609 = bitcast <8 x i16> %10607 to <4 x i32>
  %10610 = add <4 x i32> %10609, %10608
  %10611 = shufflevector <8 x i16> %10584, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10612 = bitcast <8 x i16> %10611 to <4 x i32>
  %10613 = add <4 x i32> %10610, %10612
  %10614 = add <4 x i32> %10605, %10613
  %10615 = getelementptr inbounds i32, i32* %10129, i64 %10167
  %10616 = bitcast i32* %10615 to <4 x i32>*
  store <4 x i32> %10599, <4 x i32>* %10616, align 16
  %10617 = getelementptr inbounds i32, i32* %10615, i64 4
  %10618 = bitcast i32* %10617 to <4 x i32>*
  store <4 x i32> %10613, <4 x i32>* %10618, align 16
  %10619 = getelementptr inbounds i32, i32* %10130, i64 %10167
  %10620 = bitcast i32* %10619 to <4 x i32>*
  store <4 x i32> %10600, <4 x i32>* %10620, align 16
  %10621 = getelementptr inbounds i32, i32* %10619, i64 4
  %10622 = bitcast i32* %10621 to <4 x i32>*
  store <4 x i32> %10614, <4 x i32>* %10622, align 16
  %10623 = add nuw nsw i64 %10167, 8
  %10624 = getelementptr inbounds i16, i16* %10122, i64 %10623
  %10625 = bitcast i16* %10624 to <8 x i16>*
  %10626 = load <8 x i16>, <8 x i16>* %10625, align 16
  %10627 = getelementptr inbounds i16, i16* %10123, i64 %10623
  %10628 = bitcast i16* %10627 to <8 x i16>*
  %10629 = load <8 x i16>, <8 x i16>* %10628, align 16
  %10630 = getelementptr inbounds i32, i32* %9875, i64 %10623
  %10631 = bitcast i32* %10630 to <4 x i32>*
  %10632 = load <4 x i32>, <4 x i32>* %10631, align 16
  %10633 = getelementptr inbounds i32, i32* %10630, i64 4
  %10634 = bitcast i32* %10633 to <4 x i32>*
  %10635 = load <4 x i32>, <4 x i32>* %10634, align 16
  %10636 = getelementptr inbounds i32, i32* %9881, i64 %10623
  %10637 = bitcast i32* %10636 to <4 x i32>*
  %10638 = load <4 x i32>, <4 x i32>* %10637, align 16
  %10639 = getelementptr inbounds i32, i32* %10636, i64 4
  %10640 = bitcast i32* %10639 to <4 x i32>*
  %10641 = load <4 x i32>, <4 x i32>* %10640, align 16
  %10642 = add <8 x i16> %10629, %10200
  %10643 = add <8 x i16> %10642, %10626
  %10644 = add <4 x i32> %10638, %10554
  %10645 = add <4 x i32> %10644, %10632
  %10646 = add <4 x i32> %10641, %10568
  %10647 = add <4 x i32> %10646, %10635
  %10648 = shufflevector <8 x i16> %10643, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10649 = shufflevector <8 x i16> %10643, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10650 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10648, <8 x i16> %10648) #5
  %10651 = mul <4 x i32> %10645, <i32 9, i32 9, i32 9, i32 9>
  %10652 = sub <4 x i32> %10651, %10650
  %10653 = icmp sgt <4 x i32> %10652, zeroinitializer
  %10654 = select <4 x i1> %10653, <4 x i32> %10652, <4 x i32> zeroinitializer
  %10655 = mul <4 x i32> %10654, %6623
  %10656 = add <4 x i32> %10655, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10657 = lshr <4 x i32> %10656, <i32 20, i32 20, i32 20, i32 20>
  %10658 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10649, <8 x i16> %10649) #5
  %10659 = mul <4 x i32> %10647, <i32 9, i32 9, i32 9, i32 9>
  %10660 = sub <4 x i32> %10659, %10658
  %10661 = icmp sgt <4 x i32> %10660, zeroinitializer
  %10662 = select <4 x i1> %10661, <4 x i32> %10660, <4 x i32> zeroinitializer
  %10663 = mul <4 x i32> %10662, %6623
  %10664 = add <4 x i32> %10663, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10665 = lshr <4 x i32> %10664, <i32 20, i32 20, i32 20, i32 20>
  %10666 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10657, <4 x i32> %10665) #5
  %10667 = add <8 x i16> %10642, %10243
  %10668 = add <4 x i32> %10644, %10599
  %10669 = add <4 x i32> %10646, %10613
  %10670 = shufflevector <8 x i16> %10667, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10671 = shufflevector <8 x i16> %10667, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10672 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10670, <8 x i16> %10670) #5
  %10673 = mul <4 x i32> %10668, <i32 9, i32 9, i32 9, i32 9>
  %10674 = sub <4 x i32> %10673, %10672
  %10675 = icmp sgt <4 x i32> %10674, zeroinitializer
  %10676 = select <4 x i1> %10675, <4 x i32> %10674, <4 x i32> zeroinitializer
  %10677 = mul <4 x i32> %10676, %6623
  %10678 = add <4 x i32> %10677, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10679 = lshr <4 x i32> %10678, <i32 20, i32 20, i32 20, i32 20>
  %10680 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10671, <8 x i16> %10671) #5
  %10681 = mul <4 x i32> %10669, <i32 9, i32 9, i32 9, i32 9>
  %10682 = sub <4 x i32> %10681, %10680
  %10683 = icmp sgt <4 x i32> %10682, zeroinitializer
  %10684 = select <4 x i1> %10683, <4 x i32> %10682, <4 x i32> zeroinitializer
  %10685 = mul <4 x i32> %10684, %6623
  %10686 = add <4 x i32> %10685, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10687 = lshr <4 x i32> %10686, <i32 20, i32 20, i32 20, i32 20>
  %10688 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10679, <4 x i32> %10687) #5
  %10689 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %10394, <8 x i16> %10666) #5
  %10690 = icmp ult <16 x i8> %10689, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %10691 = select <16 x i1> %10690, <16 x i8> %10689, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %10692 = icmp sgt <16 x i8> %10691, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %10693 = select <16 x i1> %10692, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %10691
  %10694 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %10693) #5
  %10695 = add nsw <16 x i8> %10691, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %10696 = icmp sgt <16 x i8> %10695, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %10697 = select <16 x i1> %10696, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %10695
  %10698 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %10697) #5
  %10699 = or <16 x i8> %10698, %10694
  %10700 = add nsw <16 x i8> %10691, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %10701 = icmp sgt <16 x i8> %10700, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %10702 = select <16 x i1> %10701, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %10700
  %10703 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %10702) #5
  %10704 = or <16 x i8> %10699, %10703
  %10705 = xor <16 x i8> %10689, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %10706 = icmp ugt <16 x i8> %10704, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %10707 = select <16 x i1> %10706, <16 x i8> %10704, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %10708 = icmp sgt <16 x i8> %10705, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %10709 = icmp sgt <16 x i8> %10705, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %10710 = sext <16 x i1> %10709 to <16 x i8>
  %10711 = icmp sgt <16 x i8> %10705, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %10712 = icmp sgt <16 x i8> %10705, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %10713 = icmp eq <16 x i8> %10705, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %10714 = zext <16 x i1> %10708 to <16 x i8>
  %10715 = sub nsw <16 x i8> %10710, %10714
  %10716 = zext <16 x i1> %10711 to <16 x i8>
  %10717 = sub nsw <16 x i8> %10715, %10716
  %10718 = zext <16 x i1> %10712 to <16 x i8>
  %10719 = sub nsw <16 x i8> %10717, %10718
  %10720 = zext <16 x i1> %10713 to <16 x i8>
  %10721 = sub nsw <16 x i8> %10719, %10720
  %10722 = add <16 x i8> %10721, %10707
  %10723 = bitcast <16 x i8> %10722 to <2 x i64>
  %10724 = shufflevector <16 x i8> %10722, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10725 = bitcast <16 x i8> %10724 to <8 x i16>
  %10726 = shufflevector <8 x i16> %10725, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10727 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10726, <8 x i16> %10376) #5
  %10728 = shufflevector <8 x i16> %10725, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10729 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10728, <8 x i16> %10377) #5
  %10730 = mul <4 x i32> %10727, <i32 455, i32 455, i32 455, i32 455>
  %10731 = mul <4 x i32> %10729, <i32 455, i32 455, i32 455, i32 455>
  %10732 = add <4 x i32> %10730, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10733 = lshr <4 x i32> %10732, <i32 12, i32 12, i32 12, i32 12>
  %10734 = add <4 x i32> %10731, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10735 = lshr <4 x i32> %10734, <i32 12, i32 12, i32 12, i32 12>
  %10736 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10733, <4 x i32> %10735) #5
  %10737 = shufflevector <16 x i8> %10722, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10738 = bitcast <16 x i8> %10737 to <8 x i16>
  %10739 = shufflevector <8 x i16> %10738, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10740 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10739, <8 x i16> %10648) #5
  %10741 = shufflevector <8 x i16> %10738, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10742 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10741, <8 x i16> %10649) #5
  %10743 = mul <4 x i32> %10740, <i32 455, i32 455, i32 455, i32 455>
  %10744 = mul <4 x i32> %10742, <i32 455, i32 455, i32 455, i32 455>
  %10745 = add <4 x i32> %10743, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10746 = lshr <4 x i32> %10745, <i32 12, i32 12, i32 12, i32 12>
  %10747 = add <4 x i32> %10744, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10748 = lshr <4 x i32> %10747, <i32 12, i32 12, i32 12, i32 12>
  %10749 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10746, <4 x i32> %10748) #5
  %10750 = shufflevector <2 x i64> %10158, <2 x i64> %10723, <2 x i32> <i32 0, i32 2>
  %10751 = shufflevector <16 x i8> %10722, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10752 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %10416, <8 x i16> %10688) #5
  %10753 = icmp ult <16 x i8> %10752, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %10754 = select <16 x i1> %10753, <16 x i8> %10752, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %10755 = icmp sgt <16 x i8> %10754, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %10756 = select <16 x i1> %10755, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %10754
  %10757 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %10756) #5
  %10758 = add nsw <16 x i8> %10754, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %10759 = icmp sgt <16 x i8> %10758, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %10760 = select <16 x i1> %10759, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %10758
  %10761 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %10760) #5
  %10762 = or <16 x i8> %10761, %10757
  %10763 = add nsw <16 x i8> %10754, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %10764 = icmp sgt <16 x i8> %10763, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %10765 = select <16 x i1> %10764, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %10763
  %10766 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %10765) #5
  %10767 = or <16 x i8> %10762, %10766
  %10768 = xor <16 x i8> %10752, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %10769 = icmp ugt <16 x i8> %10767, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %10770 = select <16 x i1> %10769, <16 x i8> %10767, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %10771 = icmp sgt <16 x i8> %10768, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %10772 = icmp sgt <16 x i8> %10768, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %10773 = sext <16 x i1> %10772 to <16 x i8>
  %10774 = icmp sgt <16 x i8> %10768, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %10775 = icmp sgt <16 x i8> %10768, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %10776 = icmp eq <16 x i8> %10768, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %10777 = zext <16 x i1> %10771 to <16 x i8>
  %10778 = sub nsw <16 x i8> %10773, %10777
  %10779 = zext <16 x i1> %10774 to <16 x i8>
  %10780 = sub nsw <16 x i8> %10778, %10779
  %10781 = zext <16 x i1> %10775 to <16 x i8>
  %10782 = sub nsw <16 x i8> %10780, %10781
  %10783 = zext <16 x i1> %10776 to <16 x i8>
  %10784 = sub nsw <16 x i8> %10782, %10783
  %10785 = add <16 x i8> %10784, %10770
  %10786 = bitcast <16 x i8> %10785 to <2 x i64>
  %10787 = shufflevector <16 x i8> %10785, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10788 = bitcast <16 x i8> %10787 to <8 x i16>
  %10789 = shufflevector <8 x i16> %10788, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10790 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10789, <8 x i16> %10398) #5
  %10791 = shufflevector <8 x i16> %10788, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10792 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10791, <8 x i16> %10399) #5
  %10793 = mul <4 x i32> %10790, <i32 455, i32 455, i32 455, i32 455>
  %10794 = mul <4 x i32> %10792, <i32 455, i32 455, i32 455, i32 455>
  %10795 = add <4 x i32> %10793, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10796 = lshr <4 x i32> %10795, <i32 12, i32 12, i32 12, i32 12>
  %10797 = add <4 x i32> %10794, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10798 = lshr <4 x i32> %10797, <i32 12, i32 12, i32 12, i32 12>
  %10799 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10796, <4 x i32> %10798) #5
  %10800 = shufflevector <16 x i8> %10785, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %10801 = bitcast <16 x i8> %10800 to <8 x i16>
  %10802 = shufflevector <8 x i16> %10801, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10803 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10802, <8 x i16> %10670) #5
  %10804 = shufflevector <8 x i16> %10801, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10805 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10804, <8 x i16> %10671) #5
  %10806 = mul <4 x i32> %10803, <i32 455, i32 455, i32 455, i32 455>
  %10807 = mul <4 x i32> %10805, <i32 455, i32 455, i32 455, i32 455>
  %10808 = add <4 x i32> %10806, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10809 = lshr <4 x i32> %10808, <i32 12, i32 12, i32 12, i32 12>
  %10810 = add <4 x i32> %10807, <i32 2048, i32 2048, i32 2048, i32 2048>
  %10811 = lshr <4 x i32> %10810, <i32 12, i32 12, i32 12, i32 12>
  %10812 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10809, <4 x i32> %10811) #5
  %10813 = shufflevector <2 x i64> %10159, <2 x i64> %10786, <2 x i32> <i32 0, i32 2>
  %10814 = shufflevector <16 x i8> %10785, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %10815 = getelementptr inbounds i16, i16* %10124, i64 %10623
  %10816 = bitcast i16* %10815 to <8 x i16>*
  %10817 = load <8 x i16>, <8 x i16>* %10816, align 16
  %10818 = getelementptr inbounds i16, i16* %10125, i64 %10623
  %10819 = bitcast i16* %10818 to <8 x i16>*
  %10820 = load <8 x i16>, <8 x i16>* %10819, align 16
  %10821 = getelementptr inbounds i16, i16* %10126, i64 %10623
  %10822 = bitcast i16* %10821 to <8 x i16>*
  %10823 = load <8 x i16>, <8 x i16>* %10822, align 16
  %10824 = getelementptr inbounds i32, i32* %9893, i64 %10623
  %10825 = bitcast i32* %10824 to <4 x i32>*
  %10826 = load <4 x i32>, <4 x i32>* %10825, align 16
  %10827 = getelementptr inbounds i32, i32* %10824, i64 4
  %10828 = bitcast i32* %10827 to <4 x i32>*
  %10829 = load <4 x i32>, <4 x i32>* %10828, align 16
  %10830 = getelementptr inbounds i32, i32* %9899, i64 %10623
  %10831 = bitcast i32* %10830 to <4 x i32>*
  %10832 = load <4 x i32>, <4 x i32>* %10831, align 16
  %10833 = getelementptr inbounds i32, i32* %10830, i64 4
  %10834 = bitcast i32* %10833 to <4 x i32>*
  %10835 = load <4 x i32>, <4 x i32>* %10834, align 16
  %10836 = getelementptr inbounds i32, i32* %9905, i64 %10623
  %10837 = bitcast i32* %10836 to <4 x i32>*
  %10838 = load <4 x i32>, <4 x i32>* %10837, align 16
  %10839 = getelementptr inbounds i32, i32* %10836, i64 4
  %10840 = bitcast i32* %10839 to <4 x i32>*
  %10841 = load <4 x i32>, <4 x i32>* %10840, align 16
  %10842 = add <8 x i16> %10245, %10202
  %10843 = add <8 x i16> %10842, %10817
  %10844 = add <8 x i16> %10843, %10820
  %10845 = add <8 x i16> %10844, %10823
  %10846 = add <4 x i32> %10600, %10555
  %10847 = add <4 x i32> %10846, %10826
  %10848 = add <4 x i32> %10847, %10832
  %10849 = add <4 x i32> %10848, %10838
  %10850 = add <4 x i32> %10614, %10569
  %10851 = add <4 x i32> %10850, %10829
  %10852 = add <4 x i32> %10851, %10835
  %10853 = add <4 x i32> %10852, %10841
  %10854 = shufflevector <8 x i16> %10845, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10855 = shufflevector <8 x i16> %10845, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10856 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10854, <8 x i16> %10854) #5
  %10857 = mul <4 x i32> %10849, <i32 25, i32 25, i32 25, i32 25>
  %10858 = sub <4 x i32> %10857, %10856
  %10859 = icmp sgt <4 x i32> %10858, zeroinitializer
  %10860 = select <4 x i1> %10859, <4 x i32> %10858, <4 x i32> zeroinitializer
  %10861 = mul <4 x i32> %10860, %6744
  %10862 = add <4 x i32> %10861, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10863 = lshr <4 x i32> %10862, <i32 20, i32 20, i32 20, i32 20>
  %10864 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10855, <8 x i16> %10855) #5
  %10865 = mul <4 x i32> %10853, <i32 25, i32 25, i32 25, i32 25>
  %10866 = sub <4 x i32> %10865, %10864
  %10867 = icmp sgt <4 x i32> %10866, zeroinitializer
  %10868 = select <4 x i1> %10867, <4 x i32> %10866, <4 x i32> zeroinitializer
  %10869 = mul <4 x i32> %10868, %6744
  %10870 = add <4 x i32> %10869, <i32 524288, i32 524288, i32 524288, i32 524288>
  %10871 = lshr <4 x i32> %10870, <i32 20, i32 20, i32 20, i32 20>
  %10872 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10863, <4 x i32> %10871) #5
  %10873 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %10872, <8 x i16> undef) #5
  %10874 = bitcast <16 x i8> %10873 to <2 x i64>
  %10875 = extractelement <2 x i64> %10874, i32 0
  %10876 = lshr i64 %10875, 8
  %10877 = lshr i64 %10875, 16
  %10878 = lshr i64 %10875, 24
  %10879 = lshr i64 %10875, 32
  %10880 = lshr i64 %10875, 40
  %10881 = lshr i64 %10875, 48
  %10882 = lshr i64 %10875, 56
  %10883 = and i64 %10875, 255
  %10884 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10883
  %10885 = load i8, i8* %10884, align 1
  %10886 = insertelement <16 x i8> %10151, i8 %10885, i64 0
  %10887 = and i64 %10876, 255
  %10888 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10887
  %10889 = load i8, i8* %10888, align 1
  %10890 = insertelement <16 x i8> %10886, i8 %10889, i64 1
  %10891 = and i64 %10877, 255
  %10892 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10891
  %10893 = load i8, i8* %10892, align 1
  %10894 = insertelement <16 x i8> %10890, i8 %10893, i64 2
  %10895 = and i64 %10878, 255
  %10896 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10895
  %10897 = load i8, i8* %10896, align 1
  %10898 = insertelement <16 x i8> %10894, i8 %10897, i64 3
  %10899 = and i64 %10879, 255
  %10900 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10899
  %10901 = load i8, i8* %10900, align 1
  %10902 = insertelement <16 x i8> %10898, i8 %10901, i64 4
  %10903 = and i64 %10880, 255
  %10904 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10903
  %10905 = load i8, i8* %10904, align 1
  %10906 = insertelement <16 x i8> %10902, i8 %10905, i64 5
  %10907 = and i64 %10881, 255
  %10908 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10907
  %10909 = load i8, i8* %10908, align 1
  %10910 = insertelement <16 x i8> %10906, i8 %10909, i64 6
  %10911 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %10882
  %10912 = load i8, i8* %10911, align 1
  %10913 = insertelement <16 x i8> %10910, i8 %10912, i64 7
  %10914 = shufflevector <16 x i8> %10913, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10915 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %10914, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %10916 = shufflevector <8 x i16> %10915, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10917 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10916, <8 x i16> %10854) #5
  %10918 = shufflevector <8 x i16> %10915, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10919 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %10918, <8 x i16> %10855) #5
  %10920 = add <4 x i32> %10917, <i32 512, i32 512, i32 512, i32 512>
  %10921 = lshr <4 x i32> %10920, <i32 10, i32 10, i32 10, i32 10>
  %10922 = add <4 x i32> %10919, <i32 512, i32 512, i32 512, i32 512>
  %10923 = lshr <4 x i32> %10922, <i32 10, i32 10, i32 10, i32 10>
  %10924 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %10921, <4 x i32> %10923) #5
  %10925 = bitcast <2 x i64> %10750 to <16 x i8>
  %10926 = shufflevector <16 x i8> %10925, <16 x i8> %10751, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %10927 = shufflevector <16 x i8> %10925, <16 x i8> %10751, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %10928 = bitcast <2 x i64> %10813 to <16 x i8>
  %10929 = shufflevector <16 x i8> %10928, <16 x i8> %10814, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %10930 = shufflevector <16 x i8> %10928, <16 x i8> %10814, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %10931 = shufflevector <16 x i8> %10515, <16 x i8> %10913, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %10932 = shufflevector <16 x i8> %10515, <16 x i8> %10913, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %10933 = shufflevector <16 x i8> %10925, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10934 = shufflevector <16 x i8> %10926, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10935 = bitcast <16 x i8> %10933 to <8 x i16>
  %10936 = bitcast <16 x i8> %10934 to <8 x i16>
  %10937 = add <8 x i16> %10936, %10935
  %10938 = shufflevector <16 x i8> %10927, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10939 = bitcast <16 x i8> %10938 to <8 x i16>
  %10940 = add <8 x i16> %10937, %10939
  %10941 = shl <8 x i16> %10940, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %10942 = getelementptr inbounds i16, i16* %6215, i64 %10146
  %10943 = bitcast i16* %10942 to <8 x i16>*
  store <8 x i16> %10941, <8 x i16>* %10943, align 16
  %10944 = mul <8 x i16> %10940, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %10945 = add <8 x i16> %10944, %10936
  %10946 = getelementptr inbounds i16, i16* %10131, i64 %10146
  %10947 = bitcast i16* %10946 to <8 x i16>*
  store <8 x i16> %10945, <8 x i16>* %10947, align 16
  %10948 = bitcast <8 x i16> %10736 to <16 x i8>
  %10949 = bitcast <8 x i16> %10156 to <16 x i8>
  %10950 = shufflevector <16 x i8> %10949, <16 x i8> %10948, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %10951 = shufflevector <16 x i8> %10949, <16 x i8> %10948, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %10952 = bitcast <16 x i8> %10951 to <8 x i16>
  %10953 = bitcast <16 x i8> %10950 to <8 x i16>
  %10954 = shufflevector <8 x i16> %10156, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10955 = shufflevector <8 x i16> %10953, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10956 = bitcast <8 x i16> %10954 to <4 x i32>
  %10957 = bitcast <8 x i16> %10955 to <4 x i32>
  %10958 = add <4 x i32> %10957, %10956
  %10959 = shufflevector <8 x i16> %10952, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %10960 = bitcast <8 x i16> %10959 to <4 x i32>
  %10961 = add <4 x i32> %10958, %10960
  %10962 = shufflevector <8 x i16> %10156, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10963 = shufflevector <8 x i16> %10953, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10964 = bitcast <8 x i16> %10962 to <4 x i32>
  %10965 = bitcast <8 x i16> %10963 to <4 x i32>
  %10966 = add <4 x i32> %10965, %10964
  %10967 = shufflevector <8 x i16> %10952, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %10968 = bitcast <8 x i16> %10967 to <4 x i32>
  %10969 = add <4 x i32> %10966, %10968
  %10970 = shl <4 x i32> %10961, <i32 2, i32 2, i32 2, i32 2>
  %10971 = shl <4 x i32> %10969, <i32 2, i32 2, i32 2, i32 2>
  %10972 = getelementptr inbounds i32, i32* %6216, i64 %10146
  %10973 = bitcast i32* %10972 to <4 x i32>*
  store <4 x i32> %10970, <4 x i32>* %10973, align 16
  %10974 = getelementptr inbounds i32, i32* %10972, i64 4
  %10975 = bitcast i32* %10974 to <4 x i32>*
  store <4 x i32> %10971, <4 x i32>* %10975, align 16
  %10976 = mul <4 x i32> %10961, <i32 3, i32 3, i32 3, i32 3>
  %10977 = add <4 x i32> %10976, %10957
  %10978 = sub <4 x i32> %10965, %10969
  %10979 = add <4 x i32> %10978, %10971
  %10980 = getelementptr inbounds i32, i32* %10132, i64 %10146
  %10981 = bitcast i32* %10980 to <4 x i32>*
  store <4 x i32> %10977, <4 x i32>* %10981, align 16
  %10982 = getelementptr inbounds i32, i32* %10980, i64 4
  %10983 = bitcast i32* %10982 to <4 x i32>*
  store <4 x i32> %10979, <4 x i32>* %10983, align 16
  %10984 = shufflevector <16 x i8> %10928, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10985 = shufflevector <16 x i8> %10929, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10986 = bitcast <16 x i8> %10984 to <8 x i16>
  %10987 = bitcast <16 x i8> %10985 to <8 x i16>
  %10988 = add <8 x i16> %10987, %10986
  %10989 = shufflevector <16 x i8> %10930, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %10990 = bitcast <16 x i8> %10989 to <8 x i16>
  %10991 = add <8 x i16> %10988, %10990
  %10992 = shl <8 x i16> %10991, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %10993 = getelementptr inbounds i16, i16* %10133, i64 %10146
  %10994 = bitcast i16* %10993 to <8 x i16>*
  store <8 x i16> %10992, <8 x i16>* %10994, align 16
  %10995 = mul <8 x i16> %10991, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %10996 = add <8 x i16> %10995, %10987
  %10997 = getelementptr inbounds i16, i16* %7884, i64 %10146
  %10998 = bitcast i16* %10997 to <8 x i16>*
  store <8 x i16> %10996, <8 x i16>* %10998, align 16
  %10999 = bitcast <8 x i16> %10799 to <16 x i8>
  %11000 = bitcast <8 x i16> %10155 to <16 x i8>
  %11001 = shufflevector <16 x i8> %11000, <16 x i8> %10999, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %11002 = shufflevector <16 x i8> %11000, <16 x i8> %10999, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %11003 = bitcast <16 x i8> %11002 to <8 x i16>
  %11004 = bitcast <16 x i8> %11001 to <8 x i16>
  %11005 = shufflevector <8 x i16> %10155, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11006 = shufflevector <8 x i16> %11004, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11007 = bitcast <8 x i16> %11005 to <4 x i32>
  %11008 = bitcast <8 x i16> %11006 to <4 x i32>
  %11009 = add <4 x i32> %11008, %11007
  %11010 = shufflevector <8 x i16> %11003, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11011 = bitcast <8 x i16> %11010 to <4 x i32>
  %11012 = add <4 x i32> %11009, %11011
  %11013 = shufflevector <8 x i16> %10155, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11014 = shufflevector <8 x i16> %11004, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11015 = bitcast <8 x i16> %11013 to <4 x i32>
  %11016 = bitcast <8 x i16> %11014 to <4 x i32>
  %11017 = add <4 x i32> %11016, %11015
  %11018 = shufflevector <8 x i16> %11003, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11019 = bitcast <8 x i16> %11018 to <4 x i32>
  %11020 = add <4 x i32> %11017, %11019
  %11021 = shl <4 x i32> %11012, <i32 2, i32 2, i32 2, i32 2>
  %11022 = shl <4 x i32> %11020, <i32 2, i32 2, i32 2, i32 2>
  %11023 = getelementptr inbounds i32, i32* %10134, i64 %10146
  %11024 = bitcast i32* %11023 to <4 x i32>*
  store <4 x i32> %11021, <4 x i32>* %11024, align 16
  %11025 = getelementptr inbounds i32, i32* %11023, i64 4
  %11026 = bitcast i32* %11025 to <4 x i32>*
  store <4 x i32> %11022, <4 x i32>* %11026, align 16
  %11027 = mul <4 x i32> %11012, <i32 3, i32 3, i32 3, i32 3>
  %11028 = add <4 x i32> %11027, %11008
  %11029 = sub <4 x i32> %11016, %11020
  %11030 = add <4 x i32> %11029, %11022
  %11031 = getelementptr inbounds i32, i32* %7894, i64 %10146
  %11032 = bitcast i32* %11031 to <4 x i32>*
  store <4 x i32> %11028, <4 x i32>* %11032, align 16
  %11033 = getelementptr inbounds i32, i32* %11031, i64 4
  %11034 = bitcast i32* %11033 to <4 x i32>*
  store <4 x i32> %11030, <4 x i32>* %11034, align 16
  %11035 = shufflevector <16 x i8> %10515, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11036 = shufflevector <16 x i8> %10931, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11037 = bitcast <16 x i8> %11035 to <8 x i16>
  %11038 = bitcast <16 x i8> %11036 to <8 x i16>
  %11039 = add <8 x i16> %11038, %11037
  %11040 = shufflevector <16 x i8> %10932, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11041 = bitcast <16 x i8> %11040 to <8 x i16>
  %11042 = add <8 x i16> %11039, %11041
  %11043 = mul <8 x i16> %11042, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %11044 = add <8 x i16> %11043, %11038
  %11045 = getelementptr inbounds i16, i16* %10106, i64 %10146
  %11046 = bitcast i16* %11045 to <8 x i16>*
  store <8 x i16> %11044, <8 x i16>* %11046, align 16
  %11047 = bitcast <8 x i16> %10526 to <16 x i8>
  %11048 = bitcast <8 x i16> %10157 to <16 x i8>
  %11049 = shufflevector <16 x i8> %11048, <16 x i8> %11047, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %11050 = bitcast <16 x i8> %11049 to <8 x i16>
  %11051 = shufflevector <16 x i8> %11048, <16 x i8> %11047, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %11052 = bitcast <16 x i8> %11051 to <8 x i16>
  %11053 = shufflevector <8 x i16> %10157, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11054 = shufflevector <8 x i16> %11050, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11055 = bitcast <8 x i16> %11053 to <4 x i32>
  %11056 = bitcast <8 x i16> %11054 to <4 x i32>
  %11057 = add <4 x i32> %11056, %11055
  %11058 = shufflevector <8 x i16> %11052, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11059 = bitcast <8 x i16> %11058 to <4 x i32>
  %11060 = add <4 x i32> %11057, %11059
  %11061 = mul <4 x i32> %11060, <i32 5, i32 5, i32 5, i32 5>
  %11062 = add <4 x i32> %11061, %11056
  %11063 = shufflevector <8 x i16> %10157, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11064 = shufflevector <8 x i16> %11050, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11065 = bitcast <8 x i16> %11063 to <4 x i32>
  %11066 = bitcast <8 x i16> %11064 to <4 x i32>
  %11067 = add <4 x i32> %11066, %11065
  %11068 = shufflevector <8 x i16> %11052, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11069 = bitcast <8 x i16> %11068 to <4 x i32>
  %11070 = add <4 x i32> %11067, %11069
  %11071 = mul <4 x i32> %11070, <i32 5, i32 5, i32 5, i32 5>
  %11072 = add <4 x i32> %11071, %11066
  %11073 = getelementptr inbounds i32, i32* %10107, i64 %10146
  %11074 = bitcast i32* %11073 to <4 x i32>*
  store <4 x i32> %11062, <4 x i32>* %11074, align 16
  %11075 = getelementptr inbounds i32, i32* %11073, i64 4
  %11076 = bitcast i32* %11075 to <4 x i32>*
  store <4 x i32> %11072, <4 x i32>* %11076, align 16
  %11077 = getelementptr inbounds i8, i8* %9725, i64 %10146
  %11078 = bitcast i8* %11077 to <16 x i8>*
  %11079 = load <16 x i8>, <16 x i8>* %11078, align 16
  %11080 = getelementptr inbounds i8, i8* %10104, i64 %10146
  %11081 = bitcast i8* %11080 to <16 x i8>*
  %11082 = load <16 x i8>, <16 x i8>* %11081, align 16
  %11083 = shufflevector <16 x i8> %11079, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11084 = shufflevector <16 x i8> %11082, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11085 = getelementptr inbounds i16, i16* %10108, i64 %10146
  %11086 = bitcast i16* %11085 to <8 x i16>*
  %11087 = load <8 x i16>, <8 x i16>* %11086, align 16
  %11088 = getelementptr inbounds i32, i32* %10109, i64 %10146
  %11089 = bitcast i32* %11088 to <4 x i32>*
  %11090 = load <4 x i32>, <4 x i32>* %11089, align 16
  %11091 = getelementptr inbounds i32, i32* %11088, i64 4
  %11092 = bitcast i32* %11091 to <4 x i32>*
  %11093 = load <4 x i32>, <4 x i32>* %11092, align 16
  %11094 = add <8 x i16> %11087, %11044
  %11095 = shufflevector <8 x i16> %11094, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11096 = bitcast <16 x i8> %11083 to <8 x i16>
  %11097 = shufflevector <8 x i16> %11096, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11098 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11095, <8 x i16> %11097) #5
  %11099 = shufflevector <8 x i16> %11094, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11100 = shufflevector <8 x i16> %11096, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11101 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11099, <8 x i16> %11100) #5
  %11102 = add <4 x i32> %11062, <i32 256, i32 256, i32 256, i32 256>
  %11103 = add <4 x i32> %11102, %11090
  %11104 = sub <4 x i32> %11103, %11098
  %11105 = ashr <4 x i32> %11104, <i32 9, i32 9, i32 9, i32 9>
  %11106 = add <4 x i32> %11072, <i32 256, i32 256, i32 256, i32 256>
  %11107 = add <4 x i32> %11106, %11093
  %11108 = sub <4 x i32> %11107, %11101
  %11109 = ashr <4 x i32> %11108, <i32 9, i32 9, i32 9, i32 9>
  %11110 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11105, <4 x i32> %11109) #5
  %11111 = shufflevector <8 x i16> %11044, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11112 = bitcast <16 x i8> %11084 to <8 x i16>
  %11113 = shufflevector <8 x i16> %11112, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11114 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11111, <8 x i16> %11113) #5
  %11115 = shufflevector <8 x i16> %11044, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11116 = shufflevector <8 x i16> %11112, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11117 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11115, <8 x i16> %11116) #5
  %11118 = add <4 x i32> %11062, <i32 128, i32 128, i32 128, i32 128>
  %11119 = sub <4 x i32> %11118, %11114
  %11120 = ashr <4 x i32> %11119, <i32 8, i32 8, i32 8, i32 8>
  %11121 = add <4 x i32> %11072, <i32 128, i32 128, i32 128, i32 128>
  %11122 = sub <4 x i32> %11121, %11117
  %11123 = ashr <4 x i32> %11122, <i32 8, i32 8, i32 8, i32 8>
  %11124 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11120, <4 x i32> %11123) #5
  %11125 = getelementptr inbounds i16, i16* %10135, i64 %10146
  %11126 = bitcast i16* %11125 to <8 x i16>*
  %11127 = load <8 x i16>, <8 x i16>* %11126, align 16
  %11128 = getelementptr inbounds i16, i16* %10136, i64 %10146
  %11129 = bitcast i16* %11128 to <8 x i16>*
  %11130 = load <8 x i16>, <8 x i16>* %11129, align 16
  %11131 = getelementptr inbounds i32, i32* %10137, i64 %10146
  %11132 = bitcast i32* %11131 to <4 x i32>*
  %11133 = load <4 x i32>, <4 x i32>* %11132, align 16
  %11134 = getelementptr inbounds i32, i32* %11131, i64 4
  %11135 = bitcast i32* %11134 to <4 x i32>*
  %11136 = load <4 x i32>, <4 x i32>* %11135, align 16
  %11137 = getelementptr inbounds i32, i32* %10138, i64 %10146
  %11138 = bitcast i32* %11137 to <4 x i32>*
  %11139 = load <4 x i32>, <4 x i32>* %11138, align 16
  %11140 = getelementptr inbounds i32, i32* %11137, i64 4
  %11141 = bitcast i32* %11140 to <4 x i32>*
  %11142 = load <4 x i32>, <4 x i32>* %11141, align 16
  %11143 = add <8 x i16> %11127, %10945
  %11144 = add <8 x i16> %11143, %11130
  %11145 = shufflevector <8 x i16> %11144, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11146 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11145, <8 x i16> %11097) #5
  %11147 = shufflevector <8 x i16> %11144, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11148 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11147, <8 x i16> %11100) #5
  %11149 = add <4 x i32> %10977, <i32 256, i32 256, i32 256, i32 256>
  %11150 = add <4 x i32> %11149, %11133
  %11151 = add <4 x i32> %11150, %11139
  %11152 = sub <4 x i32> %11151, %11146
  %11153 = ashr <4 x i32> %11152, <i32 9, i32 9, i32 9, i32 9>
  %11154 = add <4 x i32> %10979, <i32 256, i32 256, i32 256, i32 256>
  %11155 = add <4 x i32> %11154, %11136
  %11156 = add <4 x i32> %11155, %11142
  %11157 = sub <4 x i32> %11156, %11148
  %11158 = ashr <4 x i32> %11157, <i32 9, i32 9, i32 9, i32 9>
  %11159 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11153, <4 x i32> %11158) #5
  %11160 = shufflevector <8 x i16> %11110, <8 x i16> %11159, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11161 = shufflevector <8 x i16> %11110, <8 x i16> %11159, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11162 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %11160) #5
  %11163 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %11161) #5
  %11164 = add <4 x i32> %11162, <i32 1024, i32 1024, i32 1024, i32 1024>
  %11165 = ashr <4 x i32> %11164, <i32 11, i32 11, i32 11, i32 11>
  %11166 = add <4 x i32> %11163, <i32 1024, i32 1024, i32 1024, i32 1024>
  %11167 = ashr <4 x i32> %11166, <i32 11, i32 11, i32 11, i32 11>
  %11168 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11165, <4 x i32> %11167) #5
  %11169 = add <8 x i16> %11168, %11096
  %11170 = getelementptr inbounds i16, i16* %7886, i64 %10146
  %11171 = bitcast i16* %11170 to <8 x i16>*
  %11172 = load <8 x i16>, <8 x i16>* %11171, align 16
  %11173 = getelementptr inbounds i32, i32* %7896, i64 %10146
  %11174 = bitcast i32* %11173 to <4 x i32>*
  %11175 = load <4 x i32>, <4 x i32>* %11174, align 16
  %11176 = getelementptr inbounds i32, i32* %11173, i64 4
  %11177 = bitcast i32* %11176 to <4 x i32>*
  %11178 = load <4 x i32>, <4 x i32>* %11177, align 16
  %11179 = add <8 x i16> %10996, %10941
  %11180 = add <8 x i16> %11179, %11172
  %11181 = shufflevector <8 x i16> %11180, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11182 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11181, <8 x i16> %11113) #5
  %11183 = shufflevector <8 x i16> %11180, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11184 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11183, <8 x i16> %11116) #5
  %11185 = add <4 x i32> %10970, <i32 256, i32 256, i32 256, i32 256>
  %11186 = add <4 x i32> %11185, %11028
  %11187 = add <4 x i32> %11186, %11175
  %11188 = sub <4 x i32> %11187, %11182
  %11189 = ashr <4 x i32> %11188, <i32 9, i32 9, i32 9, i32 9>
  %11190 = add <4 x i32> %10971, <i32 256, i32 256, i32 256, i32 256>
  %11191 = add <4 x i32> %11190, %11030
  %11192 = add <4 x i32> %11191, %11178
  %11193 = sub <4 x i32> %11192, %11184
  %11194 = ashr <4 x i32> %11193, <i32 9, i32 9, i32 9, i32 9>
  %11195 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11189, <4 x i32> %11194) #5
  %11196 = shufflevector <8 x i16> %11124, <8 x i16> %11195, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11197 = shufflevector <8 x i16> %11124, <8 x i16> %11195, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11198 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %11196) #5
  %11199 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %11197) #5
  %11200 = add <4 x i32> %11198, <i32 1024, i32 1024, i32 1024, i32 1024>
  %11201 = ashr <4 x i32> %11200, <i32 11, i32 11, i32 11, i32 11>
  %11202 = add <4 x i32> %11199, <i32 1024, i32 1024, i32 1024, i32 1024>
  %11203 = ashr <4 x i32> %11202, <i32 11, i32 11, i32 11, i32 11>
  %11204 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11201, <4 x i32> %11203) #5
  %11205 = add <8 x i16> %11204, %11112
  %11206 = shufflevector <16 x i8> %10925, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11207 = shufflevector <16 x i8> %10926, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11208 = bitcast <16 x i8> %11206 to <8 x i16>
  %11209 = bitcast <16 x i8> %11207 to <8 x i16>
  %11210 = add <8 x i16> %11209, %11208
  %11211 = shufflevector <16 x i8> %10927, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11212 = bitcast <16 x i8> %11211 to <8 x i16>
  %11213 = add <8 x i16> %11210, %11212
  %11214 = shl <8 x i16> %11213, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %11215 = getelementptr inbounds i16, i16* %6215, i64 %10167
  %11216 = bitcast i16* %11215 to <8 x i16>*
  store <8 x i16> %11214, <8 x i16>* %11216, align 16
  %11217 = mul <8 x i16> %11213, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %11218 = add <8 x i16> %11217, %11209
  %11219 = getelementptr inbounds i16, i16* %10131, i64 %10167
  %11220 = bitcast i16* %11219 to <8 x i16>*
  store <8 x i16> %11218, <8 x i16>* %11220, align 16
  %11221 = bitcast <8 x i16> %10749 to <16 x i8>
  %11222 = shufflevector <16 x i8> %10948, <16 x i8> %11221, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %11223 = shufflevector <16 x i8> %10948, <16 x i8> %11221, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %11224 = bitcast <16 x i8> %11223 to <8 x i16>
  %11225 = bitcast <16 x i8> %11222 to <8 x i16>
  %11226 = shufflevector <8 x i16> %10736, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11227 = shufflevector <8 x i16> %11225, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11228 = bitcast <8 x i16> %11226 to <4 x i32>
  %11229 = bitcast <8 x i16> %11227 to <4 x i32>
  %11230 = add <4 x i32> %11229, %11228
  %11231 = shufflevector <8 x i16> %11224, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11232 = bitcast <8 x i16> %11231 to <4 x i32>
  %11233 = add <4 x i32> %11230, %11232
  %11234 = shufflevector <8 x i16> %10736, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11235 = shufflevector <8 x i16> %11225, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11236 = bitcast <8 x i16> %11234 to <4 x i32>
  %11237 = bitcast <8 x i16> %11235 to <4 x i32>
  %11238 = add <4 x i32> %11237, %11236
  %11239 = shufflevector <8 x i16> %11224, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11240 = bitcast <8 x i16> %11239 to <4 x i32>
  %11241 = add <4 x i32> %11238, %11240
  %11242 = shl <4 x i32> %11233, <i32 2, i32 2, i32 2, i32 2>
  %11243 = shl <4 x i32> %11241, <i32 2, i32 2, i32 2, i32 2>
  %11244 = getelementptr inbounds i32, i32* %6216, i64 %10167
  %11245 = bitcast i32* %11244 to <4 x i32>*
  store <4 x i32> %11242, <4 x i32>* %11245, align 16
  %11246 = getelementptr inbounds i32, i32* %11244, i64 4
  %11247 = bitcast i32* %11246 to <4 x i32>*
  store <4 x i32> %11243, <4 x i32>* %11247, align 16
  %11248 = mul <4 x i32> %11233, <i32 3, i32 3, i32 3, i32 3>
  %11249 = add <4 x i32> %11248, %11229
  %11250 = sub <4 x i32> %11237, %11241
  %11251 = add <4 x i32> %11250, %11243
  %11252 = getelementptr inbounds i32, i32* %10132, i64 %10167
  %11253 = bitcast i32* %11252 to <4 x i32>*
  store <4 x i32> %11249, <4 x i32>* %11253, align 16
  %11254 = getelementptr inbounds i32, i32* %11252, i64 4
  %11255 = bitcast i32* %11254 to <4 x i32>*
  store <4 x i32> %11251, <4 x i32>* %11255, align 16
  %11256 = shufflevector <16 x i8> %10928, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11257 = shufflevector <16 x i8> %10929, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11258 = bitcast <16 x i8> %11256 to <8 x i16>
  %11259 = bitcast <16 x i8> %11257 to <8 x i16>
  %11260 = add <8 x i16> %11259, %11258
  %11261 = shufflevector <16 x i8> %10930, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11262 = bitcast <16 x i8> %11261 to <8 x i16>
  %11263 = add <8 x i16> %11260, %11262
  %11264 = shl <8 x i16> %11263, <i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2>
  %11265 = getelementptr inbounds i16, i16* %10133, i64 %10167
  %11266 = bitcast i16* %11265 to <8 x i16>*
  store <8 x i16> %11264, <8 x i16>* %11266, align 16
  %11267 = mul <8 x i16> %11263, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %11268 = add <8 x i16> %11267, %11259
  %11269 = getelementptr inbounds i16, i16* %7884, i64 %10167
  %11270 = bitcast i16* %11269 to <8 x i16>*
  store <8 x i16> %11268, <8 x i16>* %11270, align 16
  %11271 = bitcast <8 x i16> %10812 to <16 x i8>
  %11272 = shufflevector <16 x i8> %10999, <16 x i8> %11271, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %11273 = shufflevector <16 x i8> %10999, <16 x i8> %11271, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %11274 = bitcast <16 x i8> %11273 to <8 x i16>
  %11275 = bitcast <16 x i8> %11272 to <8 x i16>
  %11276 = shufflevector <8 x i16> %10799, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11277 = shufflevector <8 x i16> %11275, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11278 = bitcast <8 x i16> %11276 to <4 x i32>
  %11279 = bitcast <8 x i16> %11277 to <4 x i32>
  %11280 = add <4 x i32> %11279, %11278
  %11281 = shufflevector <8 x i16> %11274, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11282 = bitcast <8 x i16> %11281 to <4 x i32>
  %11283 = add <4 x i32> %11280, %11282
  %11284 = shufflevector <8 x i16> %10799, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11285 = shufflevector <8 x i16> %11275, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11286 = bitcast <8 x i16> %11284 to <4 x i32>
  %11287 = bitcast <8 x i16> %11285 to <4 x i32>
  %11288 = add <4 x i32> %11287, %11286
  %11289 = shufflevector <8 x i16> %11274, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11290 = bitcast <8 x i16> %11289 to <4 x i32>
  %11291 = add <4 x i32> %11288, %11290
  %11292 = shl <4 x i32> %11283, <i32 2, i32 2, i32 2, i32 2>
  %11293 = shl <4 x i32> %11291, <i32 2, i32 2, i32 2, i32 2>
  %11294 = getelementptr inbounds i32, i32* %10134, i64 %10167
  %11295 = bitcast i32* %11294 to <4 x i32>*
  store <4 x i32> %11292, <4 x i32>* %11295, align 16
  %11296 = getelementptr inbounds i32, i32* %11294, i64 4
  %11297 = bitcast i32* %11296 to <4 x i32>*
  store <4 x i32> %11293, <4 x i32>* %11297, align 16
  %11298 = mul <4 x i32> %11283, <i32 3, i32 3, i32 3, i32 3>
  %11299 = add <4 x i32> %11298, %11279
  %11300 = sub <4 x i32> %11287, %11291
  %11301 = add <4 x i32> %11300, %11293
  %11302 = getelementptr inbounds i32, i32* %7894, i64 %10167
  %11303 = bitcast i32* %11302 to <4 x i32>*
  store <4 x i32> %11299, <4 x i32>* %11303, align 16
  %11304 = getelementptr inbounds i32, i32* %11302, i64 4
  %11305 = bitcast i32* %11304 to <4 x i32>*
  store <4 x i32> %11301, <4 x i32>* %11305, align 16
  %11306 = shufflevector <16 x i8> %10931, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11307 = bitcast <16 x i8> %10516 to <8 x i16>
  %11308 = bitcast <16 x i8> %11306 to <8 x i16>
  %11309 = add <8 x i16> %11308, %11307
  %11310 = shufflevector <16 x i8> %10932, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11311 = bitcast <16 x i8> %11310 to <8 x i16>
  %11312 = add <8 x i16> %11309, %11311
  %11313 = mul <8 x i16> %11312, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %11314 = add <8 x i16> %11313, %11308
  %11315 = getelementptr inbounds i16, i16* %10110, i64 %10146
  %11316 = bitcast i16* %11315 to <8 x i16>*
  store <8 x i16> %11314, <8 x i16>* %11316, align 16
  %11317 = bitcast <8 x i16> %10924 to <16 x i8>
  %11318 = shufflevector <16 x i8> %11047, <16 x i8> %11317, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %11319 = bitcast <16 x i8> %11318 to <8 x i16>
  %11320 = shufflevector <16 x i8> %11047, <16 x i8> %11317, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %11321 = bitcast <16 x i8> %11320 to <8 x i16>
  %11322 = shufflevector <8 x i16> %10526, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11323 = shufflevector <8 x i16> %11319, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11324 = bitcast <8 x i16> %11322 to <4 x i32>
  %11325 = bitcast <8 x i16> %11323 to <4 x i32>
  %11326 = add <4 x i32> %11325, %11324
  %11327 = shufflevector <8 x i16> %11321, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11328 = bitcast <8 x i16> %11327 to <4 x i32>
  %11329 = add <4 x i32> %11326, %11328
  %11330 = mul <4 x i32> %11329, <i32 5, i32 5, i32 5, i32 5>
  %11331 = add <4 x i32> %11330, %11325
  %11332 = shufflevector <8 x i16> %10526, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11333 = shufflevector <8 x i16> %11319, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11334 = bitcast <8 x i16> %11332 to <4 x i32>
  %11335 = bitcast <8 x i16> %11333 to <4 x i32>
  %11336 = add <4 x i32> %11335, %11334
  %11337 = shufflevector <8 x i16> %11321, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11338 = bitcast <8 x i16> %11337 to <4 x i32>
  %11339 = add <4 x i32> %11336, %11338
  %11340 = mul <4 x i32> %11339, <i32 5, i32 5, i32 5, i32 5>
  %11341 = add <4 x i32> %11340, %11335
  %11342 = getelementptr inbounds i32, i32* %10111, i64 %10146
  %11343 = bitcast i32* %11342 to <4 x i32>*
  store <4 x i32> %11331, <4 x i32>* %11343, align 16
  %11344 = getelementptr inbounds i32, i32* %11342, i64 4
  %11345 = bitcast i32* %11344 to <4 x i32>*
  store <4 x i32> %11341, <4 x i32>* %11345, align 16
  %11346 = shufflevector <16 x i8> %11079, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11347 = shufflevector <16 x i8> %11082, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11348 = getelementptr inbounds i16, i16* %10112, i64 %10146
  %11349 = bitcast i16* %11348 to <8 x i16>*
  %11350 = load <8 x i16>, <8 x i16>* %11349, align 16
  %11351 = getelementptr inbounds i32, i32* %10113, i64 %10146
  %11352 = bitcast i32* %11351 to <4 x i32>*
  %11353 = load <4 x i32>, <4 x i32>* %11352, align 16
  %11354 = getelementptr inbounds i32, i32* %11351, i64 4
  %11355 = bitcast i32* %11354 to <4 x i32>*
  %11356 = load <4 x i32>, <4 x i32>* %11355, align 16
  %11357 = add <8 x i16> %11350, %11314
  %11358 = shufflevector <8 x i16> %11357, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11359 = bitcast <16 x i8> %11346 to <8 x i16>
  %11360 = shufflevector <8 x i16> %11359, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11361 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11358, <8 x i16> %11360) #5
  %11362 = shufflevector <8 x i16> %11357, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11363 = shufflevector <8 x i16> %11359, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11364 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11362, <8 x i16> %11363) #5
  %11365 = add <4 x i32> %11331, <i32 256, i32 256, i32 256, i32 256>
  %11366 = add <4 x i32> %11365, %11353
  %11367 = sub <4 x i32> %11366, %11361
  %11368 = ashr <4 x i32> %11367, <i32 9, i32 9, i32 9, i32 9>
  %11369 = add <4 x i32> %11341, <i32 256, i32 256, i32 256, i32 256>
  %11370 = add <4 x i32> %11369, %11356
  %11371 = sub <4 x i32> %11370, %11364
  %11372 = ashr <4 x i32> %11371, <i32 9, i32 9, i32 9, i32 9>
  %11373 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11368, <4 x i32> %11372) #5
  %11374 = shufflevector <8 x i16> %11314, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11375 = bitcast <16 x i8> %11347 to <8 x i16>
  %11376 = shufflevector <8 x i16> %11375, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11377 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11374, <8 x i16> %11376) #5
  %11378 = shufflevector <8 x i16> %11314, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11379 = shufflevector <8 x i16> %11375, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11380 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11378, <8 x i16> %11379) #5
  %11381 = add <4 x i32> %11331, <i32 128, i32 128, i32 128, i32 128>
  %11382 = sub <4 x i32> %11381, %11377
  %11383 = ashr <4 x i32> %11382, <i32 8, i32 8, i32 8, i32 8>
  %11384 = add <4 x i32> %11341, <i32 128, i32 128, i32 128, i32 128>
  %11385 = sub <4 x i32> %11384, %11380
  %11386 = ashr <4 x i32> %11385, <i32 8, i32 8, i32 8, i32 8>
  %11387 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11383, <4 x i32> %11386) #5
  %11388 = getelementptr inbounds i16, i16* %10139, i64 %10146
  %11389 = bitcast i16* %11388 to <8 x i16>*
  %11390 = load <8 x i16>, <8 x i16>* %11389, align 16
  %11391 = getelementptr inbounds i16, i16* %10140, i64 %10146
  %11392 = bitcast i16* %11391 to <8 x i16>*
  %11393 = load <8 x i16>, <8 x i16>* %11392, align 16
  %11394 = getelementptr inbounds i32, i32* %10141, i64 %10146
  %11395 = bitcast i32* %11394 to <4 x i32>*
  %11396 = load <4 x i32>, <4 x i32>* %11395, align 16
  %11397 = getelementptr inbounds i32, i32* %11394, i64 4
  %11398 = bitcast i32* %11397 to <4 x i32>*
  %11399 = load <4 x i32>, <4 x i32>* %11398, align 16
  %11400 = getelementptr inbounds i32, i32* %10142, i64 %10146
  %11401 = bitcast i32* %11400 to <4 x i32>*
  %11402 = load <4 x i32>, <4 x i32>* %11401, align 16
  %11403 = getelementptr inbounds i32, i32* %11400, i64 4
  %11404 = bitcast i32* %11403 to <4 x i32>*
  %11405 = load <4 x i32>, <4 x i32>* %11404, align 16
  %11406 = add <8 x i16> %11390, %11218
  %11407 = add <8 x i16> %11406, %11393
  %11408 = shufflevector <8 x i16> %11407, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11409 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11408, <8 x i16> %11360) #5
  %11410 = shufflevector <8 x i16> %11407, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11411 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11410, <8 x i16> %11363) #5
  %11412 = add <4 x i32> %11249, <i32 256, i32 256, i32 256, i32 256>
  %11413 = add <4 x i32> %11412, %11396
  %11414 = add <4 x i32> %11413, %11402
  %11415 = sub <4 x i32> %11414, %11409
  %11416 = ashr <4 x i32> %11415, <i32 9, i32 9, i32 9, i32 9>
  %11417 = add <4 x i32> %11251, <i32 256, i32 256, i32 256, i32 256>
  %11418 = add <4 x i32> %11417, %11399
  %11419 = add <4 x i32> %11418, %11405
  %11420 = sub <4 x i32> %11419, %11411
  %11421 = ashr <4 x i32> %11420, <i32 9, i32 9, i32 9, i32 9>
  %11422 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11416, <4 x i32> %11421) #5
  %11423 = shufflevector <8 x i16> %11373, <8 x i16> %11422, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11424 = shufflevector <8 x i16> %11373, <8 x i16> %11422, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11425 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %11423) #5
  %11426 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %11424) #5
  %11427 = add <4 x i32> %11425, <i32 1024, i32 1024, i32 1024, i32 1024>
  %11428 = ashr <4 x i32> %11427, <i32 11, i32 11, i32 11, i32 11>
  %11429 = add <4 x i32> %11426, <i32 1024, i32 1024, i32 1024, i32 1024>
  %11430 = ashr <4 x i32> %11429, <i32 11, i32 11, i32 11, i32 11>
  %11431 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11428, <4 x i32> %11430) #5
  %11432 = add <8 x i16> %11431, %11359
  %11433 = getelementptr inbounds i8, i8* %7914, i64 %10146
  %11434 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %11169, <8 x i16> %11432) #5
  %11435 = bitcast i8* %11433 to <16 x i8>*
  store <16 x i8> %11434, <16 x i8>* %11435, align 16
  %11436 = getelementptr inbounds i16, i16* %10143, i64 %10146
  %11437 = bitcast i16* %11436 to <8 x i16>*
  %11438 = load <8 x i16>, <8 x i16>* %11437, align 16
  %11439 = getelementptr inbounds i32, i32* %10144, i64 %10146
  %11440 = bitcast i32* %11439 to <4 x i32>*
  %11441 = load <4 x i32>, <4 x i32>* %11440, align 16
  %11442 = getelementptr inbounds i32, i32* %11439, i64 4
  %11443 = bitcast i32* %11442 to <4 x i32>*
  %11444 = load <4 x i32>, <4 x i32>* %11443, align 16
  %11445 = add <8 x i16> %11268, %11214
  %11446 = add <8 x i16> %11445, %11438
  %11447 = shufflevector <8 x i16> %11446, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11448 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11447, <8 x i16> %11376) #5
  %11449 = shufflevector <8 x i16> %11446, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11450 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11449, <8 x i16> %11379) #5
  %11451 = add <4 x i32> %11242, <i32 256, i32 256, i32 256, i32 256>
  %11452 = add <4 x i32> %11451, %11299
  %11453 = add <4 x i32> %11452, %11441
  %11454 = sub <4 x i32> %11453, %11448
  %11455 = ashr <4 x i32> %11454, <i32 9, i32 9, i32 9, i32 9>
  %11456 = add <4 x i32> %11243, <i32 256, i32 256, i32 256, i32 256>
  %11457 = add <4 x i32> %11456, %11301
  %11458 = add <4 x i32> %11457, %11444
  %11459 = sub <4 x i32> %11458, %11450
  %11460 = ashr <4 x i32> %11459, <i32 9, i32 9, i32 9, i32 9>
  %11461 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11455, <4 x i32> %11460) #5
  %11462 = shufflevector <8 x i16> %11387, <8 x i16> %11461, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11463 = shufflevector <8 x i16> %11387, <8 x i16> %11461, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11464 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %11462) #5
  %11465 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %11463) #5
  %11466 = add <4 x i32> %11464, <i32 1024, i32 1024, i32 1024, i32 1024>
  %11467 = ashr <4 x i32> %11466, <i32 11, i32 11, i32 11, i32 11>
  %11468 = add <4 x i32> %11465, <i32 1024, i32 1024, i32 1024, i32 1024>
  %11469 = ashr <4 x i32> %11468, <i32 11, i32 11, i32 11, i32 11>
  %11470 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %11467, <4 x i32> %11469) #5
  %11471 = add <8 x i16> %11470, %11375
  %11472 = getelementptr inbounds i8, i8* %10105, i64 %10146
  %11473 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %11205, <8 x i16> %11471) #5
  %11474 = bitcast i8* %11472 to <16 x i8>*
  store <16 x i8> %11473, <16 x i8>* %11474, align 16
  %11475 = icmp slt i64 %10161, %6177
  br i1 %11475, label %10145, label %11476

11476:                                            ; preds = %10145, %7879
  br i1 %7917, label %12577, label %11477

11477:                                            ; preds = %11476
  br i1 %6433, label %11478, label %11481

11478:                                            ; preds = %11477
  %11479 = getelementptr inbounds i8, i8* %7915, i64 %7862
  %11480 = getelementptr inbounds i8, i8* %7914, i64 %7862
  br label %11481

11481:                                            ; preds = %11477, %11478
  %11482 = phi i64 [ %7882, %11478 ], [ %7880, %11477 ]
  %11483 = phi i64 [ %7883, %11478 ], [ %7881, %11477 ]
  %11484 = phi i64 [ %7892, %11478 ], [ %7890, %11477 ]
  %11485 = phi i64 [ %7893, %11478 ], [ %7891, %11477 ]
  %11486 = phi i64 [ %7903, %11478 ], [ %7900, %11477 ]
  %11487 = phi i64 [ %7909, %11478 ], [ %7901, %11477 ]
  %11488 = phi i64 [ %7900, %11478 ], [ %7902, %11477 ]
  %11489 = phi i64 [ %7907, %11478 ], [ %7904, %11477 ]
  %11490 = phi i64 [ %7908, %11478 ], [ %7905, %11477 ]
  %11491 = phi i64 [ %7904, %11478 ], [ %7906, %11477 ]
  %11492 = phi i64 [ %7898, %11478 ], [ %7899, %11477 ]
  %11493 = phi i64 [ %7895, %11478 ], [ %7897, %11477 ]
  %11494 = phi i64 [ %7888, %11478 ], [ %7889, %11477 ]
  %11495 = phi i64 [ %7885, %11478 ], [ %7887, %11477 ]
  %11496 = phi i64 [ %7910, %11478 ], [ %7911, %11477 ]
  %11497 = phi i64 [ %7912, %11478 ], [ %7913, %11477 ]
  %11498 = phi i8* [ %11480, %11478 ], [ %7914, %11477 ]
  %11499 = phi i8* [ %11479, %11478 ], [ %7915, %11477 ]
  %11500 = inttoptr i64 %11495 to i16*
  %11501 = inttoptr i64 %11494 to i16*
  %11502 = inttoptr i64 %11493 to i32*
  %11503 = inttoptr i64 %11492 to i32*
  %11504 = inttoptr i64 %11488 to <8 x i16>*
  %11505 = inttoptr i64 %11487 to <8 x i16>*
  %11506 = inttoptr i64 %11486 to <8 x i16>*
  %11507 = inttoptr i64 %11491 to i32*
  %11508 = inttoptr i64 %11490 to i32*
  %11509 = inttoptr i64 %11489 to i32*
  %11510 = getelementptr inbounds i8, i8* %11499, i64 3
  %11511 = getelementptr inbounds i8, i8* %6397, i64 %6
  %11512 = inttoptr i64 %11496 to i16*
  %11513 = inttoptr i64 %11497 to i32*
  %11514 = bitcast i8* %11511 to <2 x i64>*
  %11515 = load <2 x i64>, <2 x i64>* %11514, align 1
  %11516 = bitcast <2 x i64> %11515 to <16 x i8>
  %11517 = shufflevector <16 x i8> %11516, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11518 = bitcast <16 x i8> %11517 to <8 x i16>
  %11519 = mul <8 x i16> %11518, %11518
  %11520 = shufflevector <16 x i8> %11516, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11521 = bitcast <16 x i8> %11520 to <8 x i16>
  %11522 = mul <8 x i16> %11521, %11521
  %11523 = shufflevector <16 x i8> %11516, <16 x i8> undef, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11524 = shufflevector <16 x i8> %11516, <16 x i8> undef, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11525 = shufflevector <16 x i8> %11516, <16 x i8> undef, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11526 = shufflevector <16 x i8> %11516, <16 x i8> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11527 = shufflevector <16 x i8> %11526, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11528 = bitcast <16 x i8> %11527 to <8 x i16>
  %11529 = add <8 x i16> %11528, %11518
  %11530 = shufflevector <16 x i8> %11523, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11531 = shufflevector <16 x i8> %11524, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11532 = bitcast <16 x i8> %11530 to <8 x i16>
  %11533 = bitcast <16 x i8> %11531 to <8 x i16>
  %11534 = add <8 x i16> %11533, %11532
  %11535 = shufflevector <16 x i8> %11525, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11536 = bitcast <16 x i8> %11535 to <8 x i16>
  %11537 = add <8 x i16> %11534, %11536
  %11538 = add <8 x i16> %11529, %11537
  %11539 = bitcast <8 x i16> %11522 to <16 x i8>
  %11540 = bitcast <8 x i16> %11519 to <16 x i8>
  %11541 = shufflevector <16 x i8> %11540, <16 x i8> %11539, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %11542 = bitcast <16 x i8> %11541 to <8 x i16>
  %11543 = shufflevector <16 x i8> %11540, <16 x i8> %11539, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %11544 = bitcast <16 x i8> %11543 to <8 x i16>
  %11545 = shufflevector <16 x i8> %11540, <16 x i8> %11539, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %11546 = bitcast <16 x i8> %11545 to <8 x i16>
  %11547 = shufflevector <16 x i8> %11540, <16 x i8> %11539, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %11548 = bitcast <16 x i8> %11547 to <8 x i16>
  %11549 = shufflevector <8 x i16> %11519, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11550 = shufflevector <8 x i16> %11548, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11551 = bitcast <8 x i16> %11549 to <4 x i32>
  %11552 = bitcast <8 x i16> %11550 to <4 x i32>
  %11553 = add <4 x i32> %11552, %11551
  %11554 = shufflevector <8 x i16> %11542, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11555 = shufflevector <8 x i16> %11544, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11556 = bitcast <8 x i16> %11554 to <4 x i32>
  %11557 = bitcast <8 x i16> %11555 to <4 x i32>
  %11558 = add <4 x i32> %11557, %11556
  %11559 = shufflevector <8 x i16> %11546, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11560 = bitcast <8 x i16> %11559 to <4 x i32>
  %11561 = add <4 x i32> %11558, %11560
  %11562 = add <4 x i32> %11553, %11561
  %11563 = shufflevector <8 x i16> %11519, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11564 = shufflevector <8 x i16> %11548, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11565 = bitcast <8 x i16> %11563 to <4 x i32>
  %11566 = bitcast <8 x i16> %11564 to <4 x i32>
  %11567 = add <4 x i32> %11566, %11565
  %11568 = shufflevector <8 x i16> %11542, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11569 = shufflevector <8 x i16> %11544, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11570 = bitcast <8 x i16> %11568 to <4 x i32>
  %11571 = bitcast <8 x i16> %11569 to <4 x i32>
  %11572 = add <4 x i32> %11571, %11570
  %11573 = shufflevector <8 x i16> %11546, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11574 = bitcast <8 x i16> %11573 to <4 x i32>
  %11575 = add <4 x i32> %11572, %11574
  %11576 = add <4 x i32> %11567, %11575
  %11577 = load <8 x i16>, <8 x i16>* %11504, align 16
  %11578 = load <8 x i16>, <8 x i16>* %11505, align 16
  %11579 = load <8 x i16>, <8 x i16>* %11506, align 16
  %11580 = inttoptr i64 %11491 to <4 x i32>*
  %11581 = load <4 x i32>, <4 x i32>* %11580, align 16
  %11582 = getelementptr inbounds i32, i32* %11507, i64 4
  %11583 = bitcast i32* %11582 to <4 x i32>*
  %11584 = load <4 x i32>, <4 x i32>* %11583, align 16
  %11585 = inttoptr i64 %11490 to <4 x i32>*
  %11586 = load <4 x i32>, <4 x i32>* %11585, align 16
  %11587 = getelementptr inbounds i32, i32* %11508, i64 4
  %11588 = bitcast i32* %11587 to <4 x i32>*
  %11589 = load <4 x i32>, <4 x i32>* %11588, align 16
  %11590 = inttoptr i64 %11489 to <4 x i32>*
  %11591 = load <4 x i32>, <4 x i32>* %11590, align 16
  %11592 = getelementptr inbounds i32, i32* %11509, i64 4
  %11593 = bitcast i32* %11592 to <4 x i32>*
  %11594 = load <4 x i32>, <4 x i32>* %11593, align 16
  %11595 = shl <8 x i16> %11538, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %11596 = add <8 x i16> %11578, %11577
  %11597 = add <8 x i16> %11596, %11579
  %11598 = add <8 x i16> %11597, %11595
  %11599 = shl <4 x i32> %11562, <i32 1, i32 1, i32 1, i32 1>
  %11600 = add <4 x i32> %11586, %11581
  %11601 = add <4 x i32> %11600, %11591
  %11602 = add <4 x i32> %11601, %11599
  %11603 = shl <4 x i32> %11576, <i32 1, i32 1, i32 1, i32 1>
  %11604 = add <4 x i32> %11589, %11584
  %11605 = add <4 x i32> %11604, %11594
  %11606 = add <4 x i32> %11605, %11603
  %11607 = shufflevector <8 x i16> %11598, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11608 = shufflevector <8 x i16> %11598, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11609 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11607, <8 x i16> %11607) #5
  %11610 = mul <4 x i32> %11602, <i32 25, i32 25, i32 25, i32 25>
  %11611 = sub <4 x i32> %11610, %11609
  %11612 = icmp sgt <4 x i32> %11611, zeroinitializer
  %11613 = select <4 x i1> %11612, <4 x i32> %11611, <4 x i32> zeroinitializer
  %11614 = mul <4 x i32> %11613, %6744
  %11615 = add <4 x i32> %11614, <i32 524288, i32 524288, i32 524288, i32 524288>
  %11616 = lshr <4 x i32> %11615, <i32 20, i32 20, i32 20, i32 20>
  %11617 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11608, <8 x i16> %11608) #5
  %11618 = mul <4 x i32> %11606, <i32 25, i32 25, i32 25, i32 25>
  %11619 = sub <4 x i32> %11618, %11617
  %11620 = icmp sgt <4 x i32> %11619, zeroinitializer
  %11621 = select <4 x i1> %11620, <4 x i32> %11619, <4 x i32> zeroinitializer
  %11622 = mul <4 x i32> %11621, %6744
  %11623 = add <4 x i32> %11622, <i32 524288, i32 524288, i32 524288, i32 524288>
  %11624 = lshr <4 x i32> %11623, <i32 20, i32 20, i32 20, i32 20>
  %11625 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %11616, <4 x i32> %11624) #5
  %11626 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %11625, <8 x i16> undef) #5
  %11627 = bitcast <16 x i8> %11626 to <2 x i64>
  %11628 = extractelement <2 x i64> %11627, i32 0
  %11629 = lshr i64 %11628, 8
  %11630 = lshr i64 %11628, 16
  %11631 = lshr i64 %11628, 24
  %11632 = lshr i64 %11628, 32
  %11633 = lshr i64 %11628, 40
  %11634 = lshr i64 %11628, 48
  %11635 = lshr i64 %11628, 56
  %11636 = and i64 %11628, 255
  %11637 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11636
  %11638 = load i8, i8* %11637, align 1
  %11639 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %11638, i64 0
  %11640 = and i64 %11629, 255
  %11641 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11640
  %11642 = load i8, i8* %11641, align 1
  %11643 = insertelement <16 x i8> %11639, i8 %11642, i64 1
  %11644 = and i64 %11630, 255
  %11645 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11644
  %11646 = load i8, i8* %11645, align 1
  %11647 = insertelement <16 x i8> %11643, i8 %11646, i64 2
  %11648 = and i64 %11631, 255
  %11649 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11648
  %11650 = load i8, i8* %11649, align 1
  %11651 = insertelement <16 x i8> %11647, i8 %11650, i64 3
  %11652 = and i64 %11632, 255
  %11653 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11652
  %11654 = load i8, i8* %11653, align 1
  %11655 = insertelement <16 x i8> %11651, i8 %11654, i64 4
  %11656 = and i64 %11633, 255
  %11657 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11656
  %11658 = load i8, i8* %11657, align 1
  %11659 = insertelement <16 x i8> %11655, i8 %11658, i64 5
  %11660 = and i64 %11634, 255
  %11661 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11660
  %11662 = load i8, i8* %11661, align 1
  %11663 = insertelement <16 x i8> %11659, i8 %11662, i64 6
  %11664 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11635
  %11665 = load i8, i8* %11664, align 1
  %11666 = insertelement <16 x i8> %11663, i8 %11665, i64 7
  %11667 = shufflevector <16 x i8> %11666, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11668 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %11667, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %11669 = shufflevector <8 x i16> %11668, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11670 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11669, <8 x i16> %11607) #5
  %11671 = shufflevector <8 x i16> %11668, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11672 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11671, <8 x i16> %11608) #5
  %11673 = add <4 x i32> %11670, <i32 512, i32 512, i32 512, i32 512>
  %11674 = lshr <4 x i32> %11673, <i32 10, i32 10, i32 10, i32 10>
  %11675 = add <4 x i32> %11672, <i32 512, i32 512, i32 512, i32 512>
  %11676 = lshr <4 x i32> %11675, <i32 10, i32 10, i32 10, i32 10>
  %11677 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %11674, <4 x i32> %11676) #5
  %11678 = inttoptr i64 %11483 to <8 x i16>*
  %11679 = load <8 x i16>, <8 x i16>* %11678, align 16
  %11680 = inttoptr i64 %11482 to <8 x i16>*
  %11681 = load <8 x i16>, <8 x i16>* %11680, align 16
  %11682 = inttoptr i64 %11485 to i32*
  %11683 = inttoptr i64 %11485 to <4 x i32>*
  %11684 = load <4 x i32>, <4 x i32>* %11683, align 16
  %11685 = getelementptr inbounds i32, i32* %11682, i64 4
  %11686 = bitcast i32* %11685 to <4 x i32>*
  %11687 = load <4 x i32>, <4 x i32>* %11686, align 16
  %11688 = inttoptr i64 %11484 to i32*
  %11689 = inttoptr i64 %11484 to <4 x i32>*
  %11690 = load <4 x i32>, <4 x i32>* %11689, align 16
  %11691 = getelementptr inbounds i32, i32* %11688, i64 4
  %11692 = bitcast i32* %11691 to <4 x i32>*
  %11693 = load <4 x i32>, <4 x i32>* %11692, align 16
  %11694 = add <8 x i16> %11679, %11537
  %11695 = add <8 x i16> %11694, %11681
  %11696 = add <4 x i32> %11684, %11561
  %11697 = add <4 x i32> %11696, %11690
  %11698 = add <4 x i32> %11687, %11575
  %11699 = add <4 x i32> %11698, %11693
  %11700 = shufflevector <8 x i16> %11695, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11701 = shufflevector <8 x i16> %11695, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11702 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11700, <8 x i16> %11700) #5
  %11703 = mul <4 x i32> %11697, <i32 9, i32 9, i32 9, i32 9>
  %11704 = sub <4 x i32> %11703, %11702
  %11705 = icmp sgt <4 x i32> %11704, zeroinitializer
  %11706 = select <4 x i1> %11705, <4 x i32> %11704, <4 x i32> zeroinitializer
  %11707 = mul <4 x i32> %11706, %6623
  %11708 = add <4 x i32> %11707, <i32 524288, i32 524288, i32 524288, i32 524288>
  %11709 = lshr <4 x i32> %11708, <i32 20, i32 20, i32 20, i32 20>
  %11710 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11701, <8 x i16> %11701) #5
  %11711 = mul <4 x i32> %11699, <i32 9, i32 9, i32 9, i32 9>
  %11712 = sub <4 x i32> %11711, %11710
  %11713 = icmp sgt <4 x i32> %11712, zeroinitializer
  %11714 = select <4 x i1> %11713, <4 x i32> %11712, <4 x i32> zeroinitializer
  %11715 = mul <4 x i32> %11714, %6623
  %11716 = add <4 x i32> %11715, <i32 524288, i32 524288, i32 524288, i32 524288>
  %11717 = lshr <4 x i32> %11716, <i32 20, i32 20, i32 20, i32 20>
  %11718 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %11709, <4 x i32> %11717) #5
  %11719 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %11718, <8 x i16> undef) #5
  %11720 = bitcast <16 x i8> %11719 to <2 x i64>
  %11721 = extractelement <2 x i64> %11720, i32 0
  %11722 = lshr i64 %11721, 8
  %11723 = lshr i64 %11721, 16
  %11724 = lshr i64 %11721, 24
  %11725 = lshr i64 %11721, 32
  %11726 = lshr i64 %11721, 40
  %11727 = lshr i64 %11721, 48
  %11728 = lshr i64 %11721, 56
  %11729 = and i64 %11721, 255
  %11730 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11729
  %11731 = load i8, i8* %11730, align 1
  %11732 = insertelement <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, i8 %11731, i64 0
  %11733 = and i64 %11722, 255
  %11734 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11733
  %11735 = load i8, i8* %11734, align 1
  %11736 = insertelement <16 x i8> %11732, i8 %11735, i64 1
  %11737 = and i64 %11723, 255
  %11738 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11737
  %11739 = load i8, i8* %11738, align 1
  %11740 = insertelement <16 x i8> %11736, i8 %11739, i64 2
  %11741 = and i64 %11724, 255
  %11742 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11741
  %11743 = load i8, i8* %11742, align 1
  %11744 = insertelement <16 x i8> %11740, i8 %11743, i64 3
  %11745 = and i64 %11725, 255
  %11746 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11745
  %11747 = load i8, i8* %11746, align 1
  %11748 = insertelement <16 x i8> %11744, i8 %11747, i64 4
  %11749 = and i64 %11726, 255
  %11750 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11749
  %11751 = load i8, i8* %11750, align 1
  %11752 = insertelement <16 x i8> %11748, i8 %11751, i64 5
  %11753 = and i64 %11727, 255
  %11754 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11753
  %11755 = load i8, i8* %11754, align 1
  %11756 = insertelement <16 x i8> %11752, i8 %11755, i64 6
  %11757 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11728
  %11758 = load i8, i8* %11757, align 1
  %11759 = insertelement <16 x i8> %11756, i8 %11758, i64 7
  %11760 = shufflevector <16 x i8> %11759, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11761 = bitcast <16 x i8> %11760 to <8 x i16>
  %11762 = shufflevector <8 x i16> %11761, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11763 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11762, <8 x i16> %11700) #5
  %11764 = shufflevector <8 x i16> %11761, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11765 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11764, <8 x i16> %11701) #5
  %11766 = mul <4 x i32> %11763, <i32 455, i32 455, i32 455, i32 455>
  %11767 = mul <4 x i32> %11765, <i32 455, i32 455, i32 455, i32 455>
  %11768 = add <4 x i32> %11766, <i32 2048, i32 2048, i32 2048, i32 2048>
  %11769 = lshr <4 x i32> %11768, <i32 12, i32 12, i32 12, i32 12>
  %11770 = add <4 x i32> %11767, <i32 2048, i32 2048, i32 2048, i32 2048>
  %11771 = lshr <4 x i32> %11770, <i32 12, i32 12, i32 12, i32 12>
  %11772 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %11769, <4 x i32> %11771) #5
  %11773 = getelementptr inbounds i8, i8* %11511, i64 16
  %11774 = inttoptr i64 %11488 to i16*
  %11775 = inttoptr i64 %11487 to i16*
  %11776 = inttoptr i64 %11486 to i16*
  %11777 = inttoptr i64 %11483 to i16*
  %11778 = inttoptr i64 %11482 to i16*
  br label %11779

11779:                                            ; preds = %11779, %11481
  %11780 = phi i64 [ %11790, %11779 ], [ 0, %11481 ]
  %11781 = phi <16 x i8> [ %12279, %11779 ], [ %11759, %11481 ]
  %11782 = phi <16 x i8> [ %12162, %11779 ], [ <i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86>, %11481 ]
  %11783 = phi <16 x i8> [ %12162, %11779 ], [ %11666, %11481 ]
  %11784 = phi <8 x i16> [ %12025, %11779 ], [ %11522, %11481 ]
  %11785 = phi <8 x i16> [ %12277, %11779 ], [ %11772, %11481 ]
  %11786 = phi <8 x i16> [ %12173, %11779 ], [ %11677, %11481 ]
  %11787 = phi <2 x i64> [ %11792, %11779 ], [ %11515, %11481 ]
  %11788 = bitcast <16 x i8> %11781 to <2 x i64>
  %11789 = getelementptr inbounds i8, i8* %11773, i64 %11780
  %11790 = add nuw nsw i64 %11780, 16
  %11791 = bitcast i8* %11789 to <2 x i64>*
  %11792 = load <2 x i64>, <2 x i64>* %11791, align 1
  %11793 = or i64 %11780, 8
  %11794 = bitcast <2 x i64> %11792 to <16 x i8>
  %11795 = shufflevector <16 x i8> %11794, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11796 = bitcast <16 x i8> %11795 to <8 x i16>
  %11797 = mul <8 x i16> %11796, %11796
  %11798 = bitcast <2 x i64> %11787 to <16 x i8>
  %11799 = shufflevector <16 x i8> %11798, <16 x i8> %11794, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %11800 = shufflevector <16 x i8> %11798, <16 x i8> %11794, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %11801 = shufflevector <16 x i8> %11798, <16 x i8> %11794, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %11802 = shufflevector <16 x i8> %11798, <16 x i8> %11794, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %11803 = shufflevector <16 x i8> %11798, <16 x i8> %11794, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %11804 = shufflevector <16 x i8> %11799, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11805 = shufflevector <16 x i8> %11803, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11806 = bitcast <16 x i8> %11804 to <8 x i16>
  %11807 = bitcast <16 x i8> %11805 to <8 x i16>
  %11808 = add <8 x i16> %11807, %11806
  %11809 = shufflevector <16 x i8> %11799, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11810 = shufflevector <16 x i8> %11803, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11811 = bitcast <16 x i8> %11809 to <8 x i16>
  %11812 = bitcast <16 x i8> %11810 to <8 x i16>
  %11813 = add <8 x i16> %11812, %11811
  %11814 = shufflevector <16 x i8> %11800, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11815 = shufflevector <16 x i8> %11801, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11816 = bitcast <16 x i8> %11814 to <8 x i16>
  %11817 = bitcast <16 x i8> %11815 to <8 x i16>
  %11818 = add <8 x i16> %11817, %11816
  %11819 = shufflevector <16 x i8> %11802, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %11820 = bitcast <16 x i8> %11819 to <8 x i16>
  %11821 = add <8 x i16> %11818, %11820
  %11822 = shufflevector <16 x i8> %11800, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11823 = shufflevector <16 x i8> %11801, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11824 = bitcast <16 x i8> %11822 to <8 x i16>
  %11825 = bitcast <16 x i8> %11823 to <8 x i16>
  %11826 = add <8 x i16> %11825, %11824
  %11827 = shufflevector <16 x i8> %11802, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11828 = bitcast <16 x i8> %11827 to <8 x i16>
  %11829 = add <8 x i16> %11826, %11828
  %11830 = add <8 x i16> %11808, %11821
  %11831 = add <8 x i16> %11813, %11829
  %11832 = bitcast <8 x i16> %11797 to <16 x i8>
  %11833 = bitcast <8 x i16> %11784 to <16 x i8>
  %11834 = shufflevector <16 x i8> %11833, <16 x i8> %11832, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %11835 = bitcast <16 x i8> %11834 to <8 x i16>
  %11836 = shufflevector <16 x i8> %11833, <16 x i8> %11832, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %11837 = bitcast <16 x i8> %11836 to <8 x i16>
  %11838 = shufflevector <16 x i8> %11833, <16 x i8> %11832, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %11839 = bitcast <16 x i8> %11838 to <8 x i16>
  %11840 = shufflevector <16 x i8> %11833, <16 x i8> %11832, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %11841 = bitcast <16 x i8> %11840 to <8 x i16>
  %11842 = shufflevector <8 x i16> %11784, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11843 = shufflevector <8 x i16> %11841, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11844 = bitcast <8 x i16> %11842 to <4 x i32>
  %11845 = bitcast <8 x i16> %11843 to <4 x i32>
  %11846 = add <4 x i32> %11845, %11844
  %11847 = shufflevector <8 x i16> %11835, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11848 = shufflevector <8 x i16> %11837, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11849 = bitcast <8 x i16> %11847 to <4 x i32>
  %11850 = bitcast <8 x i16> %11848 to <4 x i32>
  %11851 = add <4 x i32> %11850, %11849
  %11852 = shufflevector <8 x i16> %11839, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11853 = bitcast <8 x i16> %11852 to <4 x i32>
  %11854 = add <4 x i32> %11851, %11853
  %11855 = add <4 x i32> %11846, %11854
  %11856 = shufflevector <8 x i16> %11784, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11857 = shufflevector <8 x i16> %11841, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11858 = bitcast <8 x i16> %11856 to <4 x i32>
  %11859 = bitcast <8 x i16> %11857 to <4 x i32>
  %11860 = add <4 x i32> %11859, %11858
  %11861 = shufflevector <8 x i16> %11835, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11862 = shufflevector <8 x i16> %11837, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11863 = bitcast <8 x i16> %11861 to <4 x i32>
  %11864 = bitcast <8 x i16> %11862 to <4 x i32>
  %11865 = add <4 x i32> %11864, %11863
  %11866 = shufflevector <8 x i16> %11839, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11867 = bitcast <8 x i16> %11866 to <4 x i32>
  %11868 = add <4 x i32> %11865, %11867
  %11869 = add <4 x i32> %11860, %11868
  %11870 = getelementptr inbounds i16, i16* %11774, i64 %11793
  %11871 = bitcast i16* %11870 to <8 x i16>*
  %11872 = load <8 x i16>, <8 x i16>* %11871, align 16
  %11873 = getelementptr inbounds i16, i16* %11775, i64 %11793
  %11874 = bitcast i16* %11873 to <8 x i16>*
  %11875 = load <8 x i16>, <8 x i16>* %11874, align 16
  %11876 = getelementptr inbounds i16, i16* %11776, i64 %11793
  %11877 = bitcast i16* %11876 to <8 x i16>*
  %11878 = load <8 x i16>, <8 x i16>* %11877, align 16
  %11879 = getelementptr inbounds i32, i32* %11507, i64 %11793
  %11880 = bitcast i32* %11879 to <4 x i32>*
  %11881 = load <4 x i32>, <4 x i32>* %11880, align 16
  %11882 = getelementptr inbounds i32, i32* %11879, i64 4
  %11883 = bitcast i32* %11882 to <4 x i32>*
  %11884 = load <4 x i32>, <4 x i32>* %11883, align 16
  %11885 = getelementptr inbounds i32, i32* %11508, i64 %11793
  %11886 = bitcast i32* %11885 to <4 x i32>*
  %11887 = load <4 x i32>, <4 x i32>* %11886, align 16
  %11888 = getelementptr inbounds i32, i32* %11885, i64 4
  %11889 = bitcast i32* %11888 to <4 x i32>*
  %11890 = load <4 x i32>, <4 x i32>* %11889, align 16
  %11891 = getelementptr inbounds i32, i32* %11509, i64 %11793
  %11892 = bitcast i32* %11891 to <4 x i32>*
  %11893 = load <4 x i32>, <4 x i32>* %11892, align 16
  %11894 = getelementptr inbounds i32, i32* %11891, i64 4
  %11895 = bitcast i32* %11894 to <4 x i32>*
  %11896 = load <4 x i32>, <4 x i32>* %11895, align 16
  %11897 = shl <8 x i16> %11830, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %11898 = add <8 x i16> %11875, %11872
  %11899 = add <8 x i16> %11898, %11878
  %11900 = add <8 x i16> %11899, %11897
  %11901 = shl <4 x i32> %11855, <i32 1, i32 1, i32 1, i32 1>
  %11902 = add <4 x i32> %11887, %11881
  %11903 = add <4 x i32> %11902, %11893
  %11904 = add <4 x i32> %11903, %11901
  %11905 = shl <4 x i32> %11869, <i32 1, i32 1, i32 1, i32 1>
  %11906 = add <4 x i32> %11890, %11884
  %11907 = add <4 x i32> %11906, %11896
  %11908 = add <4 x i32> %11907, %11905
  %11909 = shufflevector <8 x i16> %11900, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11910 = shufflevector <8 x i16> %11900, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11911 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11909, <8 x i16> %11909) #5
  %11912 = mul <4 x i32> %11904, <i32 25, i32 25, i32 25, i32 25>
  %11913 = sub <4 x i32> %11912, %11911
  %11914 = icmp sgt <4 x i32> %11913, zeroinitializer
  %11915 = select <4 x i1> %11914, <4 x i32> %11913, <4 x i32> zeroinitializer
  %11916 = mul <4 x i32> %11915, %6744
  %11917 = add <4 x i32> %11916, <i32 524288, i32 524288, i32 524288, i32 524288>
  %11918 = lshr <4 x i32> %11917, <i32 20, i32 20, i32 20, i32 20>
  %11919 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11910, <8 x i16> %11910) #5
  %11920 = mul <4 x i32> %11908, <i32 25, i32 25, i32 25, i32 25>
  %11921 = sub <4 x i32> %11920, %11919
  %11922 = icmp sgt <4 x i32> %11921, zeroinitializer
  %11923 = select <4 x i1> %11922, <4 x i32> %11921, <4 x i32> zeroinitializer
  %11924 = mul <4 x i32> %11923, %6744
  %11925 = add <4 x i32> %11924, <i32 524288, i32 524288, i32 524288, i32 524288>
  %11926 = lshr <4 x i32> %11925, <i32 20, i32 20, i32 20, i32 20>
  %11927 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %11918, <4 x i32> %11926) #5
  %11928 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %11927, <8 x i16> undef) #5
  %11929 = bitcast <16 x i8> %11928 to <2 x i64>
  %11930 = extractelement <2 x i64> %11929, i32 0
  %11931 = lshr i64 %11930, 8
  %11932 = lshr i64 %11930, 16
  %11933 = lshr i64 %11930, 24
  %11934 = lshr i64 %11930, 32
  %11935 = lshr i64 %11930, 40
  %11936 = lshr i64 %11930, 48
  %11937 = lshr i64 %11930, 56
  %11938 = and i64 %11930, 255
  %11939 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11938
  %11940 = load i8, i8* %11939, align 1
  %11941 = insertelement <16 x i8> %11783, i8 %11940, i64 8
  %11942 = and i64 %11931, 255
  %11943 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11942
  %11944 = load i8, i8* %11943, align 1
  %11945 = insertelement <16 x i8> %11941, i8 %11944, i64 9
  %11946 = and i64 %11932, 255
  %11947 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11946
  %11948 = load i8, i8* %11947, align 1
  %11949 = insertelement <16 x i8> %11945, i8 %11948, i64 10
  %11950 = and i64 %11933, 255
  %11951 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11950
  %11952 = load i8, i8* %11951, align 1
  %11953 = insertelement <16 x i8> %11949, i8 %11952, i64 11
  %11954 = and i64 %11934, 255
  %11955 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11954
  %11956 = load i8, i8* %11955, align 1
  %11957 = insertelement <16 x i8> %11953, i8 %11956, i64 12
  %11958 = and i64 %11935, 255
  %11959 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11958
  %11960 = load i8, i8* %11959, align 1
  %11961 = insertelement <16 x i8> %11957, i8 %11960, i64 13
  %11962 = and i64 %11936, 255
  %11963 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11962
  %11964 = load i8, i8* %11963, align 1
  %11965 = insertelement <16 x i8> %11961, i8 %11964, i64 14
  %11966 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %11937
  %11967 = load i8, i8* %11966, align 1
  %11968 = insertelement <16 x i8> %11965, i8 %11967, i64 15
  %11969 = shufflevector <16 x i8> %11968, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %11970 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %11969, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %11971 = shufflevector <8 x i16> %11970, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %11972 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11971, <8 x i16> %11909) #5
  %11973 = shufflevector <8 x i16> %11970, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %11974 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %11973, <8 x i16> %11910) #5
  %11975 = add <4 x i32> %11972, <i32 512, i32 512, i32 512, i32 512>
  %11976 = lshr <4 x i32> %11975, <i32 10, i32 10, i32 10, i32 10>
  %11977 = add <4 x i32> %11974, <i32 512, i32 512, i32 512, i32 512>
  %11978 = lshr <4 x i32> %11977, <i32 10, i32 10, i32 10, i32 10>
  %11979 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %11976, <4 x i32> %11978) #5
  %11980 = getelementptr inbounds i16, i16* %11777, i64 %11793
  %11981 = bitcast i16* %11980 to <8 x i16>*
  %11982 = load <8 x i16>, <8 x i16>* %11981, align 16
  %11983 = getelementptr inbounds i16, i16* %11778, i64 %11793
  %11984 = bitcast i16* %11983 to <8 x i16>*
  %11985 = load <8 x i16>, <8 x i16>* %11984, align 16
  %11986 = getelementptr inbounds i32, i32* %11682, i64 %11793
  %11987 = bitcast i32* %11986 to <4 x i32>*
  %11988 = load <4 x i32>, <4 x i32>* %11987, align 16
  %11989 = getelementptr inbounds i32, i32* %11986, i64 4
  %11990 = bitcast i32* %11989 to <4 x i32>*
  %11991 = load <4 x i32>, <4 x i32>* %11990, align 16
  %11992 = getelementptr inbounds i32, i32* %11688, i64 %11793
  %11993 = bitcast i32* %11992 to <4 x i32>*
  %11994 = load <4 x i32>, <4 x i32>* %11993, align 16
  %11995 = getelementptr inbounds i32, i32* %11992, i64 4
  %11996 = bitcast i32* %11995 to <4 x i32>*
  %11997 = load <4 x i32>, <4 x i32>* %11996, align 16
  %11998 = add <8 x i16> %11982, %11821
  %11999 = add <8 x i16> %11998, %11985
  %12000 = add <4 x i32> %11988, %11854
  %12001 = add <4 x i32> %12000, %11994
  %12002 = add <4 x i32> %11991, %11868
  %12003 = add <4 x i32> %12002, %11997
  %12004 = shufflevector <8 x i16> %11999, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12005 = shufflevector <8 x i16> %11999, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12006 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12004, <8 x i16> %12004) #5
  %12007 = mul <4 x i32> %12001, <i32 9, i32 9, i32 9, i32 9>
  %12008 = sub <4 x i32> %12007, %12006
  %12009 = icmp sgt <4 x i32> %12008, zeroinitializer
  %12010 = select <4 x i1> %12009, <4 x i32> %12008, <4 x i32> zeroinitializer
  %12011 = mul <4 x i32> %12010, %6623
  %12012 = add <4 x i32> %12011, <i32 524288, i32 524288, i32 524288, i32 524288>
  %12013 = lshr <4 x i32> %12012, <i32 20, i32 20, i32 20, i32 20>
  %12014 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12005, <8 x i16> %12005) #5
  %12015 = mul <4 x i32> %12003, <i32 9, i32 9, i32 9, i32 9>
  %12016 = sub <4 x i32> %12015, %12014
  %12017 = icmp sgt <4 x i32> %12016, zeroinitializer
  %12018 = select <4 x i1> %12017, <4 x i32> %12016, <4 x i32> zeroinitializer
  %12019 = mul <4 x i32> %12018, %6623
  %12020 = add <4 x i32> %12019, <i32 524288, i32 524288, i32 524288, i32 524288>
  %12021 = lshr <4 x i32> %12020, <i32 20, i32 20, i32 20, i32 20>
  %12022 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %12013, <4 x i32> %12021) #5
  %12023 = shufflevector <16 x i8> %11794, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %12024 = bitcast <16 x i8> %12023 to <8 x i16>
  %12025 = mul <8 x i16> %12024, %12024
  %12026 = bitcast <8 x i16> %12025 to <16 x i8>
  %12027 = shufflevector <16 x i8> %11832, <16 x i8> %12026, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %12028 = bitcast <16 x i8> %12027 to <8 x i16>
  %12029 = shufflevector <16 x i8> %11832, <16 x i8> %12026, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %12030 = bitcast <16 x i8> %12029 to <8 x i16>
  %12031 = shufflevector <16 x i8> %11832, <16 x i8> %12026, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %12032 = bitcast <16 x i8> %12031 to <8 x i16>
  %12033 = shufflevector <16 x i8> %11832, <16 x i8> %12026, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %12034 = bitcast <16 x i8> %12033 to <8 x i16>
  %12035 = shufflevector <8 x i16> %11797, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12036 = shufflevector <8 x i16> %12034, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12037 = bitcast <8 x i16> %12035 to <4 x i32>
  %12038 = bitcast <8 x i16> %12036 to <4 x i32>
  %12039 = add <4 x i32> %12038, %12037
  %12040 = shufflevector <8 x i16> %12028, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12041 = shufflevector <8 x i16> %12030, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12042 = bitcast <8 x i16> %12040 to <4 x i32>
  %12043 = bitcast <8 x i16> %12041 to <4 x i32>
  %12044 = add <4 x i32> %12043, %12042
  %12045 = shufflevector <8 x i16> %12032, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12046 = bitcast <8 x i16> %12045 to <4 x i32>
  %12047 = add <4 x i32> %12044, %12046
  %12048 = add <4 x i32> %12039, %12047
  %12049 = shufflevector <8 x i16> %11797, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12050 = shufflevector <8 x i16> %12034, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12051 = bitcast <8 x i16> %12049 to <4 x i32>
  %12052 = bitcast <8 x i16> %12050 to <4 x i32>
  %12053 = add <4 x i32> %12052, %12051
  %12054 = shufflevector <8 x i16> %12028, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12055 = shufflevector <8 x i16> %12030, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12056 = bitcast <8 x i16> %12054 to <4 x i32>
  %12057 = bitcast <8 x i16> %12055 to <4 x i32>
  %12058 = add <4 x i32> %12057, %12056
  %12059 = shufflevector <8 x i16> %12032, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12060 = bitcast <8 x i16> %12059 to <4 x i32>
  %12061 = add <4 x i32> %12058, %12060
  %12062 = add <4 x i32> %12053, %12061
  %12063 = add nuw nsw i64 %11793, 8
  %12064 = getelementptr inbounds i16, i16* %11774, i64 %12063
  %12065 = bitcast i16* %12064 to <8 x i16>*
  %12066 = load <8 x i16>, <8 x i16>* %12065, align 16
  %12067 = getelementptr inbounds i16, i16* %11775, i64 %12063
  %12068 = bitcast i16* %12067 to <8 x i16>*
  %12069 = load <8 x i16>, <8 x i16>* %12068, align 16
  %12070 = getelementptr inbounds i16, i16* %11776, i64 %12063
  %12071 = bitcast i16* %12070 to <8 x i16>*
  %12072 = load <8 x i16>, <8 x i16>* %12071, align 16
  %12073 = getelementptr inbounds i32, i32* %11507, i64 %12063
  %12074 = bitcast i32* %12073 to <4 x i32>*
  %12075 = load <4 x i32>, <4 x i32>* %12074, align 16
  %12076 = getelementptr inbounds i32, i32* %12073, i64 4
  %12077 = bitcast i32* %12076 to <4 x i32>*
  %12078 = load <4 x i32>, <4 x i32>* %12077, align 16
  %12079 = getelementptr inbounds i32, i32* %11508, i64 %12063
  %12080 = bitcast i32* %12079 to <4 x i32>*
  %12081 = load <4 x i32>, <4 x i32>* %12080, align 16
  %12082 = getelementptr inbounds i32, i32* %12079, i64 4
  %12083 = bitcast i32* %12082 to <4 x i32>*
  %12084 = load <4 x i32>, <4 x i32>* %12083, align 16
  %12085 = getelementptr inbounds i32, i32* %11509, i64 %12063
  %12086 = bitcast i32* %12085 to <4 x i32>*
  %12087 = load <4 x i32>, <4 x i32>* %12086, align 16
  %12088 = getelementptr inbounds i32, i32* %12085, i64 4
  %12089 = bitcast i32* %12088 to <4 x i32>*
  %12090 = load <4 x i32>, <4 x i32>* %12089, align 16
  %12091 = shl <8 x i16> %11831, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %12092 = add <8 x i16> %12066, %12091
  %12093 = add <8 x i16> %12092, %12069
  %12094 = add <8 x i16> %12093, %12072
  %12095 = shl <4 x i32> %12048, <i32 1, i32 1, i32 1, i32 1>
  %12096 = add <4 x i32> %12075, %12095
  %12097 = add <4 x i32> %12096, %12081
  %12098 = add <4 x i32> %12097, %12087
  %12099 = shl <4 x i32> %12062, <i32 1, i32 1, i32 1, i32 1>
  %12100 = add <4 x i32> %12078, %12099
  %12101 = add <4 x i32> %12100, %12084
  %12102 = add <4 x i32> %12101, %12090
  %12103 = shufflevector <8 x i16> %12094, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12104 = shufflevector <8 x i16> %12094, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12105 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12103, <8 x i16> %12103) #5
  %12106 = mul <4 x i32> %12098, <i32 25, i32 25, i32 25, i32 25>
  %12107 = sub <4 x i32> %12106, %12105
  %12108 = icmp sgt <4 x i32> %12107, zeroinitializer
  %12109 = select <4 x i1> %12108, <4 x i32> %12107, <4 x i32> zeroinitializer
  %12110 = mul <4 x i32> %12109, %6744
  %12111 = add <4 x i32> %12110, <i32 524288, i32 524288, i32 524288, i32 524288>
  %12112 = lshr <4 x i32> %12111, <i32 20, i32 20, i32 20, i32 20>
  %12113 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12104, <8 x i16> %12104) #5
  %12114 = mul <4 x i32> %12102, <i32 25, i32 25, i32 25, i32 25>
  %12115 = sub <4 x i32> %12114, %12113
  %12116 = icmp sgt <4 x i32> %12115, zeroinitializer
  %12117 = select <4 x i1> %12116, <4 x i32> %12115, <4 x i32> zeroinitializer
  %12118 = mul <4 x i32> %12117, %6744
  %12119 = add <4 x i32> %12118, <i32 524288, i32 524288, i32 524288, i32 524288>
  %12120 = lshr <4 x i32> %12119, <i32 20, i32 20, i32 20, i32 20>
  %12121 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %12112, <4 x i32> %12120) #5
  %12122 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %12121, <8 x i16> undef) #5
  %12123 = bitcast <16 x i8> %12122 to <2 x i64>
  %12124 = extractelement <2 x i64> %12123, i32 0
  %12125 = lshr i64 %12124, 8
  %12126 = lshr i64 %12124, 16
  %12127 = lshr i64 %12124, 24
  %12128 = lshr i64 %12124, 32
  %12129 = lshr i64 %12124, 40
  %12130 = lshr i64 %12124, 48
  %12131 = lshr i64 %12124, 56
  %12132 = and i64 %12124, 255
  %12133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %12132
  %12134 = load i8, i8* %12133, align 1
  %12135 = insertelement <16 x i8> %11782, i8 %12134, i64 0
  %12136 = and i64 %12125, 255
  %12137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %12136
  %12138 = load i8, i8* %12137, align 1
  %12139 = insertelement <16 x i8> %12135, i8 %12138, i64 1
  %12140 = and i64 %12126, 255
  %12141 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %12140
  %12142 = load i8, i8* %12141, align 1
  %12143 = insertelement <16 x i8> %12139, i8 %12142, i64 2
  %12144 = and i64 %12127, 255
  %12145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %12144
  %12146 = load i8, i8* %12145, align 1
  %12147 = insertelement <16 x i8> %12143, i8 %12146, i64 3
  %12148 = and i64 %12128, 255
  %12149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %12148
  %12150 = load i8, i8* %12149, align 1
  %12151 = insertelement <16 x i8> %12147, i8 %12150, i64 4
  %12152 = and i64 %12129, 255
  %12153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %12152
  %12154 = load i8, i8* %12153, align 1
  %12155 = insertelement <16 x i8> %12151, i8 %12154, i64 5
  %12156 = and i64 %12130, 255
  %12157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %12156
  %12158 = load i8, i8* %12157, align 1
  %12159 = insertelement <16 x i8> %12155, i8 %12158, i64 6
  %12160 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN7libgav13dsp12kSgrMaLookupE, i64 0, i64 %12131
  %12161 = load i8, i8* %12160, align 1
  %12162 = insertelement <16 x i8> %12159, i8 %12161, i64 7
  %12163 = shufflevector <16 x i8> %12162, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12164 = tail call <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8> %12163, <16 x i8> <i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0, i8 41, i8 0>) #5
  %12165 = shufflevector <8 x i16> %12164, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12166 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12165, <8 x i16> %12103) #5
  %12167 = shufflevector <8 x i16> %12164, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12168 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12167, <8 x i16> %12104) #5
  %12169 = add <4 x i32> %12166, <i32 512, i32 512, i32 512, i32 512>
  %12170 = lshr <4 x i32> %12169, <i32 10, i32 10, i32 10, i32 10>
  %12171 = add <4 x i32> %12168, <i32 512, i32 512, i32 512, i32 512>
  %12172 = lshr <4 x i32> %12171, <i32 10, i32 10, i32 10, i32 10>
  %12173 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %12170, <4 x i32> %12172) #5
  %12174 = getelementptr inbounds i16, i16* %11777, i64 %12063
  %12175 = bitcast i16* %12174 to <8 x i16>*
  %12176 = load <8 x i16>, <8 x i16>* %12175, align 16
  %12177 = getelementptr inbounds i16, i16* %11778, i64 %12063
  %12178 = bitcast i16* %12177 to <8 x i16>*
  %12179 = load <8 x i16>, <8 x i16>* %12178, align 16
  %12180 = getelementptr inbounds i32, i32* %11682, i64 %12063
  %12181 = bitcast i32* %12180 to <4 x i32>*
  %12182 = load <4 x i32>, <4 x i32>* %12181, align 16
  %12183 = getelementptr inbounds i32, i32* %12180, i64 4
  %12184 = bitcast i32* %12183 to <4 x i32>*
  %12185 = load <4 x i32>, <4 x i32>* %12184, align 16
  %12186 = getelementptr inbounds i32, i32* %11688, i64 %12063
  %12187 = bitcast i32* %12186 to <4 x i32>*
  %12188 = load <4 x i32>, <4 x i32>* %12187, align 16
  %12189 = getelementptr inbounds i32, i32* %12186, i64 4
  %12190 = bitcast i32* %12189 to <4 x i32>*
  %12191 = load <4 x i32>, <4 x i32>* %12190, align 16
  %12192 = add <8 x i16> %12176, %11829
  %12193 = add <8 x i16> %12192, %12179
  %12194 = add <4 x i32> %12182, %12047
  %12195 = add <4 x i32> %12194, %12188
  %12196 = add <4 x i32> %12185, %12061
  %12197 = add <4 x i32> %12196, %12191
  %12198 = shufflevector <8 x i16> %12193, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12199 = shufflevector <8 x i16> %12193, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12200 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12198, <8 x i16> %12198) #5
  %12201 = mul <4 x i32> %12195, <i32 9, i32 9, i32 9, i32 9>
  %12202 = sub <4 x i32> %12201, %12200
  %12203 = icmp sgt <4 x i32> %12202, zeroinitializer
  %12204 = select <4 x i1> %12203, <4 x i32> %12202, <4 x i32> zeroinitializer
  %12205 = mul <4 x i32> %12204, %6623
  %12206 = add <4 x i32> %12205, <i32 524288, i32 524288, i32 524288, i32 524288>
  %12207 = lshr <4 x i32> %12206, <i32 20, i32 20, i32 20, i32 20>
  %12208 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12199, <8 x i16> %12199) #5
  %12209 = mul <4 x i32> %12197, <i32 9, i32 9, i32 9, i32 9>
  %12210 = sub <4 x i32> %12209, %12208
  %12211 = icmp sgt <4 x i32> %12210, zeroinitializer
  %12212 = select <4 x i1> %12211, <4 x i32> %12210, <4 x i32> zeroinitializer
  %12213 = mul <4 x i32> %12212, %6623
  %12214 = add <4 x i32> %12213, <i32 524288, i32 524288, i32 524288, i32 524288>
  %12215 = lshr <4 x i32> %12214, <i32 20, i32 20, i32 20, i32 20>
  %12216 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %12207, <4 x i32> %12215) #5
  %12217 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %12022, <8 x i16> %12216) #5
  %12218 = icmp ult <16 x i8> %12217, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %12219 = select <16 x i1> %12218, <16 x i8> %12217, <16 x i8> <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %12220 = icmp sgt <16 x i8> %12219, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %12221 = select <16 x i1> %12220, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %12219
  %12222 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6658, <16 x i8> %12221) #5
  %12223 = add nsw <16 x i8> %12219, <i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16, i8 -16>
  %12224 = icmp sgt <16 x i8> %12223, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %12225 = select <16 x i1> %12224, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %12223
  %12226 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6659, <16 x i8> %12225) #5
  %12227 = or <16 x i8> %12226, %12222
  %12228 = add nsw <16 x i8> %12219, <i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32, i8 -32>
  %12229 = icmp sgt <16 x i8> %12228, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %12230 = select <16 x i1> %12229, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %12228
  %12231 = tail call <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8> %6660, <16 x i8> %12230) #5
  %12232 = or <16 x i8> %12227, %12231
  %12233 = xor <16 x i8> %12217, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %12234 = icmp ugt <16 x i8> %12232, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %12235 = select <16 x i1> %12234, <16 x i8> %12232, <16 x i8> <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %12236 = icmp sgt <16 x i8> %12233, <i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73, i8 -73>
  %12237 = icmp sgt <16 x i8> %12233, <i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56, i8 -56>
  %12238 = sext <16 x i1> %12237 to <16 x i8>
  %12239 = icmp sgt <16 x i8> %12233, <i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27, i8 -27>
  %12240 = icmp sgt <16 x i8> %12233, <i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41, i8 41>
  %12241 = icmp eq <16 x i8> %12233, <i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127, i8 127>
  %12242 = zext <16 x i1> %12236 to <16 x i8>
  %12243 = sub nsw <16 x i8> %12238, %12242
  %12244 = zext <16 x i1> %12239 to <16 x i8>
  %12245 = sub nsw <16 x i8> %12243, %12244
  %12246 = zext <16 x i1> %12240 to <16 x i8>
  %12247 = sub nsw <16 x i8> %12245, %12246
  %12248 = zext <16 x i1> %12241 to <16 x i8>
  %12249 = sub nsw <16 x i8> %12247, %12248
  %12250 = add <16 x i8> %12249, %12235
  %12251 = bitcast <16 x i8> %12250 to <2 x i64>
  %12252 = shufflevector <16 x i8> %12250, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12253 = bitcast <16 x i8> %12252 to <8 x i16>
  %12254 = shufflevector <8 x i16> %12253, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12255 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12254, <8 x i16> %12004) #5
  %12256 = shufflevector <8 x i16> %12253, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12257 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12256, <8 x i16> %12005) #5
  %12258 = mul <4 x i32> %12255, <i32 455, i32 455, i32 455, i32 455>
  %12259 = mul <4 x i32> %12257, <i32 455, i32 455, i32 455, i32 455>
  %12260 = add <4 x i32> %12258, <i32 2048, i32 2048, i32 2048, i32 2048>
  %12261 = lshr <4 x i32> %12260, <i32 12, i32 12, i32 12, i32 12>
  %12262 = add <4 x i32> %12259, <i32 2048, i32 2048, i32 2048, i32 2048>
  %12263 = lshr <4 x i32> %12262, <i32 12, i32 12, i32 12, i32 12>
  %12264 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %12261, <4 x i32> %12263) #5
  %12265 = shufflevector <16 x i8> %12250, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %12266 = bitcast <16 x i8> %12265 to <8 x i16>
  %12267 = shufflevector <8 x i16> %12266, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12268 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12267, <8 x i16> %12198) #5
  %12269 = shufflevector <8 x i16> %12266, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12270 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12269, <8 x i16> %12199) #5
  %12271 = mul <4 x i32> %12268, <i32 455, i32 455, i32 455, i32 455>
  %12272 = mul <4 x i32> %12270, <i32 455, i32 455, i32 455, i32 455>
  %12273 = add <4 x i32> %12271, <i32 2048, i32 2048, i32 2048, i32 2048>
  %12274 = lshr <4 x i32> %12273, <i32 12, i32 12, i32 12, i32 12>
  %12275 = add <4 x i32> %12272, <i32 2048, i32 2048, i32 2048, i32 2048>
  %12276 = lshr <4 x i32> %12275, <i32 12, i32 12, i32 12, i32 12>
  %12277 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %12274, <4 x i32> %12276) #5
  %12278 = shufflevector <2 x i64> %11788, <2 x i64> %12251, <2 x i32> <i32 0, i32 2>
  %12279 = shufflevector <16 x i8> %12250, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %12280 = bitcast <2 x i64> %12278 to <16 x i8>
  %12281 = shufflevector <16 x i8> %12280, <16 x i8> %12279, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %12282 = shufflevector <16 x i8> %12280, <16 x i8> %12279, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %12283 = shufflevector <16 x i8> %11968, <16 x i8> %12162, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %12284 = shufflevector <16 x i8> %11968, <16 x i8> %12162, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %12285 = shufflevector <16 x i8> %11968, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12286 = shufflevector <16 x i8> %12283, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12287 = bitcast <16 x i8> %12285 to <8 x i16>
  %12288 = bitcast <16 x i8> %12286 to <8 x i16>
  %12289 = add <8 x i16> %12288, %12287
  %12290 = shufflevector <16 x i8> %12284, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12291 = bitcast <16 x i8> %12290 to <8 x i16>
  %12292 = add <8 x i16> %12289, %12291
  %12293 = mul <8 x i16> %12292, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %12294 = add <8 x i16> %12293, %12288
  %12295 = bitcast <8 x i16> %11979 to <16 x i8>
  %12296 = bitcast <8 x i16> %11786 to <16 x i8>
  %12297 = shufflevector <16 x i8> %12296, <16 x i8> %12295, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %12298 = bitcast <16 x i8> %12297 to <8 x i16>
  %12299 = shufflevector <16 x i8> %12296, <16 x i8> %12295, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %12300 = bitcast <16 x i8> %12299 to <8 x i16>
  %12301 = shufflevector <8 x i16> %11786, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12302 = shufflevector <8 x i16> %12298, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12303 = bitcast <8 x i16> %12301 to <4 x i32>
  %12304 = bitcast <8 x i16> %12302 to <4 x i32>
  %12305 = add <4 x i32> %12304, %12303
  %12306 = shufflevector <8 x i16> %12300, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12307 = bitcast <8 x i16> %12306 to <4 x i32>
  %12308 = add <4 x i32> %12305, %12307
  %12309 = mul <4 x i32> %12308, <i32 5, i32 5, i32 5, i32 5>
  %12310 = shufflevector <8 x i16> %11786, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12311 = shufflevector <8 x i16> %12298, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12312 = bitcast <8 x i16> %12310 to <4 x i32>
  %12313 = bitcast <8 x i16> %12311 to <4 x i32>
  %12314 = add <4 x i32> %12313, %12312
  %12315 = shufflevector <8 x i16> %12300, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12316 = bitcast <8 x i16> %12315 to <4 x i32>
  %12317 = add <4 x i32> %12314, %12316
  %12318 = mul <4 x i32> %12317, <i32 5, i32 5, i32 5, i32 5>
  %12319 = shufflevector <16 x i8> %12280, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12320 = shufflevector <16 x i8> %12281, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12321 = bitcast <16 x i8> %12319 to <8 x i16>
  %12322 = bitcast <16 x i8> %12320 to <8 x i16>
  %12323 = add <8 x i16> %12322, %12321
  %12324 = shufflevector <16 x i8> %12282, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12325 = bitcast <16 x i8> %12324 to <8 x i16>
  %12326 = add <8 x i16> %12323, %12325
  %12327 = mul <8 x i16> %12326, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %12328 = bitcast <8 x i16> %12264 to <16 x i8>
  %12329 = bitcast <8 x i16> %11785 to <16 x i8>
  %12330 = shufflevector <16 x i8> %12329, <16 x i8> %12328, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %12331 = bitcast <16 x i8> %12330 to <8 x i16>
  %12332 = shufflevector <16 x i8> %12329, <16 x i8> %12328, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %12333 = bitcast <16 x i8> %12332 to <8 x i16>
  %12334 = shufflevector <8 x i16> %11785, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12335 = shufflevector <8 x i16> %12331, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12336 = bitcast <8 x i16> %12334 to <4 x i32>
  %12337 = bitcast <8 x i16> %12335 to <4 x i32>
  %12338 = add <4 x i32> %12337, %12336
  %12339 = shufflevector <8 x i16> %12333, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12340 = bitcast <8 x i16> %12339 to <4 x i32>
  %12341 = add <4 x i32> %12338, %12340
  %12342 = mul <4 x i32> %12341, <i32 3, i32 3, i32 3, i32 3>
  %12343 = shufflevector <8 x i16> %11785, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12344 = shufflevector <8 x i16> %12331, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12345 = bitcast <8 x i16> %12343 to <4 x i32>
  %12346 = bitcast <8 x i16> %12344 to <4 x i32>
  %12347 = add <4 x i32> %12346, %12345
  %12348 = shufflevector <8 x i16> %12333, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12349 = bitcast <8 x i16> %12348 to <4 x i32>
  %12350 = add <4 x i32> %12347, %12349
  %12351 = mul <4 x i32> %12350, <i32 3, i32 3, i32 3, i32 3>
  %12352 = getelementptr inbounds i8, i8* %11510, i64 %11780
  %12353 = bitcast i8* %12352 to <16 x i8>*
  %12354 = load <16 x i8>, <16 x i8>* %12353, align 16
  %12355 = shufflevector <16 x i8> %12354, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %12356 = getelementptr inbounds i16, i16* %11512, i64 %11780
  %12357 = bitcast i16* %12356 to <8 x i16>*
  %12358 = load <8 x i16>, <8 x i16>* %12357, align 16
  %12359 = getelementptr inbounds i32, i32* %11513, i64 %11780
  %12360 = bitcast i32* %12359 to <4 x i32>*
  %12361 = load <4 x i32>, <4 x i32>* %12360, align 16
  %12362 = getelementptr inbounds i32, i32* %12359, i64 4
  %12363 = bitcast i32* %12362 to <4 x i32>*
  %12364 = load <4 x i32>, <4 x i32>* %12363, align 16
  %12365 = add <8 x i16> %12294, %12358
  %12366 = shufflevector <8 x i16> %12365, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12367 = bitcast <16 x i8> %12355 to <8 x i16>
  %12368 = shufflevector <8 x i16> %12367, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12369 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12366, <8 x i16> %12368) #5
  %12370 = shufflevector <8 x i16> %12365, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12371 = shufflevector <8 x i16> %12367, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12372 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12370, <8 x i16> %12371) #5
  %12373 = add <4 x i32> %12304, <i32 256, i32 256, i32 256, i32 256>
  %12374 = add <4 x i32> %12373, %12309
  %12375 = add <4 x i32> %12374, %12361
  %12376 = sub <4 x i32> %12375, %12369
  %12377 = ashr <4 x i32> %12376, <i32 9, i32 9, i32 9, i32 9>
  %12378 = add <4 x i32> %12313, <i32 256, i32 256, i32 256, i32 256>
  %12379 = add <4 x i32> %12378, %12318
  %12380 = add <4 x i32> %12379, %12364
  %12381 = sub <4 x i32> %12380, %12372
  %12382 = ashr <4 x i32> %12381, <i32 9, i32 9, i32 9, i32 9>
  %12383 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %12377, <4 x i32> %12382) #5
  %12384 = getelementptr inbounds i16, i16* %11500, i64 %11780
  %12385 = bitcast i16* %12384 to <8 x i16>*
  %12386 = load <8 x i16>, <8 x i16>* %12385, align 16
  %12387 = getelementptr inbounds i16, i16* %11501, i64 %11780
  %12388 = bitcast i16* %12387 to <8 x i16>*
  %12389 = load <8 x i16>, <8 x i16>* %12388, align 16
  %12390 = getelementptr inbounds i32, i32* %11502, i64 %11780
  %12391 = bitcast i32* %12390 to <4 x i32>*
  %12392 = load <4 x i32>, <4 x i32>* %12391, align 16
  %12393 = getelementptr inbounds i32, i32* %12390, i64 4
  %12394 = bitcast i32* %12393 to <4 x i32>*
  %12395 = load <4 x i32>, <4 x i32>* %12394, align 16
  %12396 = getelementptr inbounds i32, i32* %11503, i64 %11780
  %12397 = bitcast i32* %12396 to <4 x i32>*
  %12398 = load <4 x i32>, <4 x i32>* %12397, align 16
  %12399 = getelementptr inbounds i32, i32* %12396, i64 4
  %12400 = bitcast i32* %12399 to <4 x i32>*
  %12401 = load <4 x i32>, <4 x i32>* %12400, align 16
  %12402 = add <8 x i16> %12327, %12322
  %12403 = add <8 x i16> %12402, %12386
  %12404 = add <8 x i16> %12403, %12389
  %12405 = shufflevector <8 x i16> %12404, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12406 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12405, <8 x i16> %12368) #5
  %12407 = shufflevector <8 x i16> %12404, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12408 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12407, <8 x i16> %12371) #5
  %12409 = add <4 x i32> %12337, <i32 256, i32 256, i32 256, i32 256>
  %12410 = add <4 x i32> %12409, %12342
  %12411 = add <4 x i32> %12410, %12392
  %12412 = add <4 x i32> %12411, %12398
  %12413 = sub <4 x i32> %12412, %12406
  %12414 = ashr <4 x i32> %12413, <i32 9, i32 9, i32 9, i32 9>
  %12415 = add <4 x i32> %12346, <i32 256, i32 256, i32 256, i32 256>
  %12416 = add <4 x i32> %12415, %12351
  %12417 = add <4 x i32> %12416, %12395
  %12418 = add <4 x i32> %12417, %12401
  %12419 = sub <4 x i32> %12418, %12408
  %12420 = ashr <4 x i32> %12419, <i32 9, i32 9, i32 9, i32 9>
  %12421 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %12414, <4 x i32> %12420) #5
  %12422 = shufflevector <8 x i16> %12383, <8 x i16> %12421, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12423 = shufflevector <8 x i16> %12383, <8 x i16> %12421, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12424 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %12422) #5
  %12425 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %12423) #5
  %12426 = add <4 x i32> %12424, <i32 1024, i32 1024, i32 1024, i32 1024>
  %12427 = ashr <4 x i32> %12426, <i32 11, i32 11, i32 11, i32 11>
  %12428 = add <4 x i32> %12425, <i32 1024, i32 1024, i32 1024, i32 1024>
  %12429 = ashr <4 x i32> %12428, <i32 11, i32 11, i32 11, i32 11>
  %12430 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %12427, <4 x i32> %12429) #5
  %12431 = add <8 x i16> %12430, %12367
  %12432 = shufflevector <16 x i8> %12283, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %12433 = bitcast <16 x i8> %11969 to <8 x i16>
  %12434 = bitcast <16 x i8> %12432 to <8 x i16>
  %12435 = add <8 x i16> %12434, %12433
  %12436 = shufflevector <16 x i8> %12284, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %12437 = bitcast <16 x i8> %12436 to <8 x i16>
  %12438 = add <8 x i16> %12435, %12437
  %12439 = mul <8 x i16> %12438, <i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5>
  %12440 = add <8 x i16> %12439, %12434
  %12441 = bitcast <8 x i16> %12173 to <16 x i8>
  %12442 = shufflevector <16 x i8> %12295, <16 x i8> %12441, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %12443 = bitcast <16 x i8> %12442 to <8 x i16>
  %12444 = shufflevector <16 x i8> %12295, <16 x i8> %12441, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %12445 = bitcast <16 x i8> %12444 to <8 x i16>
  %12446 = shufflevector <8 x i16> %11979, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12447 = shufflevector <8 x i16> %12443, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12448 = bitcast <8 x i16> %12446 to <4 x i32>
  %12449 = bitcast <8 x i16> %12447 to <4 x i32>
  %12450 = add <4 x i32> %12449, %12448
  %12451 = shufflevector <8 x i16> %12445, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12452 = bitcast <8 x i16> %12451 to <4 x i32>
  %12453 = add <4 x i32> %12450, %12452
  %12454 = mul <4 x i32> %12453, <i32 5, i32 5, i32 5, i32 5>
  %12455 = shufflevector <8 x i16> %11979, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12456 = shufflevector <8 x i16> %12443, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12457 = bitcast <8 x i16> %12455 to <4 x i32>
  %12458 = bitcast <8 x i16> %12456 to <4 x i32>
  %12459 = add <4 x i32> %12458, %12457
  %12460 = shufflevector <8 x i16> %12445, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12461 = bitcast <8 x i16> %12460 to <4 x i32>
  %12462 = add <4 x i32> %12459, %12461
  %12463 = mul <4 x i32> %12462, <i32 5, i32 5, i32 5, i32 5>
  %12464 = shufflevector <16 x i8> %12280, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %12465 = shufflevector <16 x i8> %12281, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %12466 = bitcast <16 x i8> %12464 to <8 x i16>
  %12467 = bitcast <16 x i8> %12465 to <8 x i16>
  %12468 = add <8 x i16> %12467, %12466
  %12469 = shufflevector <16 x i8> %12282, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %12470 = bitcast <16 x i8> %12469 to <8 x i16>
  %12471 = add <8 x i16> %12468, %12470
  %12472 = mul <8 x i16> %12471, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %12473 = bitcast <8 x i16> %12277 to <16 x i8>
  %12474 = shufflevector <16 x i8> %12328, <16 x i8> %12473, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %12475 = bitcast <16 x i8> %12474 to <8 x i16>
  %12476 = shufflevector <16 x i8> %12328, <16 x i8> %12473, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %12477 = bitcast <16 x i8> %12476 to <8 x i16>
  %12478 = shufflevector <8 x i16> %12264, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12479 = shufflevector <8 x i16> %12475, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12480 = bitcast <8 x i16> %12478 to <4 x i32>
  %12481 = bitcast <8 x i16> %12479 to <4 x i32>
  %12482 = add <4 x i32> %12481, %12480
  %12483 = shufflevector <8 x i16> %12477, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12484 = bitcast <8 x i16> %12483 to <4 x i32>
  %12485 = add <4 x i32> %12482, %12484
  %12486 = mul <4 x i32> %12485, <i32 3, i32 3, i32 3, i32 3>
  %12487 = shufflevector <8 x i16> %12264, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12488 = shufflevector <8 x i16> %12475, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12489 = bitcast <8 x i16> %12487 to <4 x i32>
  %12490 = bitcast <8 x i16> %12488 to <4 x i32>
  %12491 = add <4 x i32> %12490, %12489
  %12492 = shufflevector <8 x i16> %12477, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12493 = bitcast <8 x i16> %12492 to <4 x i32>
  %12494 = add <4 x i32> %12491, %12493
  %12495 = mul <4 x i32> %12494, <i32 3, i32 3, i32 3, i32 3>
  %12496 = shufflevector <16 x i8> %12354, <16 x i8> <i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0>, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  %12497 = getelementptr inbounds i16, i16* %12356, i64 8
  %12498 = bitcast i16* %12497 to <8 x i16>*
  %12499 = load <8 x i16>, <8 x i16>* %12498, align 16
  %12500 = getelementptr inbounds i32, i32* %12359, i64 8
  %12501 = bitcast i32* %12500 to <4 x i32>*
  %12502 = load <4 x i32>, <4 x i32>* %12501, align 16
  %12503 = getelementptr inbounds i32, i32* %12500, i64 4
  %12504 = bitcast i32* %12503 to <4 x i32>*
  %12505 = load <4 x i32>, <4 x i32>* %12504, align 16
  %12506 = add <8 x i16> %12440, %12499
  %12507 = shufflevector <8 x i16> %12506, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12508 = bitcast <16 x i8> %12496 to <8 x i16>
  %12509 = shufflevector <8 x i16> %12508, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12510 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12507, <8 x i16> %12509) #5
  %12511 = shufflevector <8 x i16> %12506, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12512 = shufflevector <8 x i16> %12508, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12513 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12511, <8 x i16> %12512) #5
  %12514 = add <4 x i32> %12449, <i32 256, i32 256, i32 256, i32 256>
  %12515 = add <4 x i32> %12514, %12454
  %12516 = add <4 x i32> %12515, %12502
  %12517 = sub <4 x i32> %12516, %12510
  %12518 = ashr <4 x i32> %12517, <i32 9, i32 9, i32 9, i32 9>
  %12519 = add <4 x i32> %12458, <i32 256, i32 256, i32 256, i32 256>
  %12520 = add <4 x i32> %12519, %12463
  %12521 = add <4 x i32> %12520, %12505
  %12522 = sub <4 x i32> %12521, %12513
  %12523 = ashr <4 x i32> %12522, <i32 9, i32 9, i32 9, i32 9>
  %12524 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %12518, <4 x i32> %12523) #5
  %12525 = getelementptr inbounds i16, i16* %12384, i64 8
  %12526 = bitcast i16* %12525 to <8 x i16>*
  %12527 = load <8 x i16>, <8 x i16>* %12526, align 16
  %12528 = getelementptr inbounds i16, i16* %12387, i64 8
  %12529 = bitcast i16* %12528 to <8 x i16>*
  %12530 = load <8 x i16>, <8 x i16>* %12529, align 16
  %12531 = getelementptr inbounds i32, i32* %12390, i64 8
  %12532 = bitcast i32* %12531 to <4 x i32>*
  %12533 = load <4 x i32>, <4 x i32>* %12532, align 16
  %12534 = getelementptr inbounds i32, i32* %12531, i64 4
  %12535 = bitcast i32* %12534 to <4 x i32>*
  %12536 = load <4 x i32>, <4 x i32>* %12535, align 16
  %12537 = getelementptr inbounds i32, i32* %12396, i64 8
  %12538 = bitcast i32* %12537 to <4 x i32>*
  %12539 = load <4 x i32>, <4 x i32>* %12538, align 16
  %12540 = getelementptr inbounds i32, i32* %12537, i64 4
  %12541 = bitcast i32* %12540 to <4 x i32>*
  %12542 = load <4 x i32>, <4 x i32>* %12541, align 16
  %12543 = add <8 x i16> %12472, %12467
  %12544 = add <8 x i16> %12543, %12527
  %12545 = add <8 x i16> %12544, %12530
  %12546 = shufflevector <8 x i16> %12545, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12547 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12546, <8 x i16> %12509) #5
  %12548 = shufflevector <8 x i16> %12545, <8 x i16> <i16 undef, i16 undef, i16 undef, i16 undef, i16 0, i16 0, i16 0, i16 0>, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12549 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %12548, <8 x i16> %12512) #5
  %12550 = add <4 x i32> %12481, <i32 256, i32 256, i32 256, i32 256>
  %12551 = add <4 x i32> %12550, %12486
  %12552 = add <4 x i32> %12551, %12533
  %12553 = add <4 x i32> %12552, %12539
  %12554 = sub <4 x i32> %12553, %12547
  %12555 = ashr <4 x i32> %12554, <i32 9, i32 9, i32 9, i32 9>
  %12556 = add <4 x i32> %12490, <i32 256, i32 256, i32 256, i32 256>
  %12557 = add <4 x i32> %12556, %12495
  %12558 = add <4 x i32> %12557, %12536
  %12559 = add <4 x i32> %12558, %12542
  %12560 = sub <4 x i32> %12559, %12549
  %12561 = ashr <4 x i32> %12560, <i32 9, i32 9, i32 9, i32 9>
  %12562 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %12555, <4 x i32> %12561) #5
  %12563 = shufflevector <8 x i16> %12524, <8 x i16> %12562, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %12564 = shufflevector <8 x i16> %12524, <8 x i16> %12562, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  %12565 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %12563) #5
  %12566 = tail call <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16> %7869, <8 x i16> %12564) #5
  %12567 = add <4 x i32> %12565, <i32 1024, i32 1024, i32 1024, i32 1024>
  %12568 = ashr <4 x i32> %12567, <i32 11, i32 11, i32 11, i32 11>
  %12569 = add <4 x i32> %12566, <i32 1024, i32 1024, i32 1024, i32 1024>
  %12570 = ashr <4 x i32> %12569, <i32 11, i32 11, i32 11, i32 11>
  %12571 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %12568, <4 x i32> %12570) #5
  %12572 = add <8 x i16> %12571, %12508
  %12573 = getelementptr inbounds i8, i8* %11498, i64 %11780
  %12574 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %12431, <8 x i16> %12572) #5
  %12575 = bitcast i8* %12573 to <16 x i8>*
  store <16 x i8> %12574, <16 x i8>* %12575, align 16
  %12576 = icmp slt i64 %11790, %6177
  br i1 %12576, label %11779, label %12577

12577:                                            ; preds = %11779, %6169, %3237, %11476, %3043
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.ssse3.pshuf.b.128(<16 x i8>, <16 x i8>) #4

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8>, <16 x i8>) #4

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16>, <8 x i16>) #4

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32>, <4 x i32>) #4

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16>, <8 x i16>) #4

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32>, <4 x i32>) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
