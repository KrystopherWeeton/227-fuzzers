; ModuleID = '../../third_party/blink/renderer/platform/bindings/string_resource.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/string_resource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Vector<WTF::AtomicString, 0, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<WTF::AtomicString, 0, WTF::PartitionAllocator> >::InstanceStorage" = type { [16 x i8] }
%"class.v8::String" = type { i8 }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.WTF::Vector.12", i8, i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::ParkableStringImpl"* }
%"class.v8::Isolate" = type { i8 }
%"class.blink::StringResource8" = type { %"class.blink::StringResource8Base" }
%"class.blink::StringResource8Base" = type { %"class.blink::StringResourceBase", %"class.v8::String::ExternalOneByteStringResource" }
%"class.blink::StringResourceBase" = type { i32 (...)**, %"class.WTF::String", %"class.WTF::AtomicString", %"class.blink::ParkableString" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.blink::StringResource16" = type { %"class.blink::StringResource16Base" }
%"class.blink::StringResource16Base" = type { %"class.blink::StringResourceBase", %"class.v8::String::ExternalStringResource" }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i8* }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE = comdat any

$_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE = comdat any

$_ZN5blink18StringResourceBase15GetAtomicStringEv = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink15StringResource8D0Ev = comdat any

$_ZNK5blink15StringResource86lengthEv = comdat any

$_ZNK5blink15StringResource84dataEv = comdat any

$_ZThn32_N5blink15StringResource8D1Ev = comdat any

$_ZThn32_N5blink15StringResource8D0Ev = comdat any

$_ZNK2v86String26ExternalStringResourceBase11IsCacheableEv = comdat any

$_ZN2v86String26ExternalStringResourceBase7DisposeEv = comdat any

$_ZNK2v86String26ExternalStringResourceBase4LockEv = comdat any

$_ZNK2v86String26ExternalStringResourceBase6UnlockEv = comdat any

$_ZThn32_NK5blink15StringResource84dataEv = comdat any

$_ZThn32_NK5blink15StringResource86lengthEv = comdat any

$_ZN5blink19StringResource8BaseD2Ev = comdat any

$_ZN5blink18StringResourceBaseD2Ev = comdat any

$_ZN5blink18StringResourceBaseD0Ev = comdat any

$_ZN5blink16StringResource16D0Ev = comdat any

$_ZNK5blink16StringResource166lengthEv = comdat any

$_ZNK5blink16StringResource164dataEv = comdat any

$_ZThn32_N5blink16StringResource16D1Ev = comdat any

$_ZThn32_N5blink16StringResource16D0Ev = comdat any

$_ZThn32_NK5blink16StringResource164dataEv = comdat any

$_ZThn32_NK5blink16StringResource166lengthEv = comdat any

$_ZN5blink20StringResource16BaseD2Ev = comdat any

$_ZN5blink18StringResourceBaseC2ERKN3WTF12AtomicStringE = comdat any

$_ZTVN5blink15StringResource8E = comdat any

$_ZTVN5blink18StringResourceBaseE = comdat any

$_ZTVN5blink16StringResource16E = comdat any

@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZZN5blinkL17ToBlinkStringFastEiE13s_low_numbers = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL17ToBlinkStringFastEiE13s_low_numbers = internal global i64 0, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink15StringResource8E = linkonce_odr hidden unnamed_addr constant { [6 x i8*], [10 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StringResource8Base"*)* @_ZN5blink19StringResource8BaseD2Ev to i8*), i8* bitcast (void (%"class.blink::StringResource8"*)* @_ZN5blink15StringResource8D0Ev to i8*), i8* bitcast (i64 (%"class.blink::StringResource8"*)* @_ZNK5blink15StringResource86lengthEv to i8*), i8* bitcast (i8* (%"class.blink::StringResource8"*)* @_ZNK5blink15StringResource84dataEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.blink::StringResource8"*)* @_ZThn32_N5blink15StringResource8D1Ev to i8*), i8* bitcast (void (%"class.blink::StringResource8"*)* @_ZThn32_N5blink15StringResource8D0Ev to i8*), i8* bitcast (i1 (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase11IsCacheableEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZN2v86String26ExternalStringResourceBase7DisposeEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase4LockEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase6UnlockEv to i8*), i8* bitcast (i8* (%"class.blink::StringResource8"*)* @_ZThn32_NK5blink15StringResource84dataEv to i8*), i8* bitcast (i64 (%"class.blink::StringResource8"*)* @_ZThn32_NK5blink15StringResource86lengthEv to i8*)] }, comdat, align 8
@_ZTVN5blink18StringResourceBaseE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StringResourceBase"*)* @_ZN5blink18StringResourceBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::StringResourceBase"*)* @_ZN5blink18StringResourceBaseD0Ev to i8*)] }, comdat, align 8
@_ZTVN5blink16StringResource16E = linkonce_odr hidden unnamed_addr constant { [6 x i8*], [10 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StringResource16Base"*)* @_ZN5blink20StringResource16BaseD2Ev to i8*), i8* bitcast (void (%"class.blink::StringResource16"*)* @_ZN5blink16StringResource16D0Ev to i8*), i8* bitcast (i64 (%"class.blink::StringResource16"*)* @_ZNK5blink16StringResource166lengthEv to i8*), i8* bitcast (i16* (%"class.blink::StringResource16"*)* @_ZNK5blink16StringResource164dataEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.blink::StringResource16"*)* @_ZThn32_N5blink16StringResource16D1Ev to i8*), i8* bitcast (void (%"class.blink::StringResource16"*)* @_ZThn32_N5blink16StringResource16D0Ev to i8*), i8* bitcast (i1 (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase11IsCacheableEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZN2v86String26ExternalStringResourceBase7DisposeEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase4LockEv to i8*), i8* bitcast (void (%"class.v8::String::ExternalStringResourceBase"*)* @_ZNK2v86String26ExternalStringResourceBase6UnlockEv to i8*), i8* bitcast (i16* (%"class.blink::StringResource16"*)* @_ZThn32_NK5blink16StringResource164dataEv to i8*), i8* bitcast (i64 (%"class.blink::StringResource16"*)* @_ZThn32_NK5blink16StringResource166lengthEv to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [18 x i8] c"StackBackingStore\00", align 1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #0 comdat {
  %3 = alloca i16*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  store i32 -1431655766, i32* %5, align 4
  %7 = bitcast %"class.v8::String"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 7
  %20 = and i32 %18, 8
  store i32 %20, i32* %5, align 4
  %21 = or i32 %19, 8
  %22 = icmp eq i32 %21, 10
  br i1 %22, label %23, label %27

23:                                               ; preds = %2
  %24 = add i64 %8, 11
  %25 = inttoptr i64 %24 to %"class.v8::String::ExternalStringResourceBase"**
  %26 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %25, align 1
  br label %29

27:                                               ; preds = %2
  %28 = call %"class.v8::String::ExternalStringResourceBase"* @_ZNK2v86String33GetExternalStringResourceBaseSlowEPNS0_8EncodingE(%"class.v8::String"* %0, i32* nonnull %5) #9
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi %"class.v8::String::ExternalStringResourceBase"* [ %26, %23 ], [ %28, %27 ]
  %31 = icmp eq %"class.v8::String::ExternalStringResourceBase"* %30, null
  %32 = getelementptr inbounds %"class.v8::String::ExternalStringResourceBase", %"class.v8::String::ExternalStringResourceBase"* %30, i64 -4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  %33 = icmp eq %"class.v8::String::ExternalStringResourceBase"* %32, null
  %34 = or i1 %31, %33
  br i1 %34, label %85, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.v8::String::ExternalStringResourceBase", %"class.v8::String::ExternalStringResourceBase"* %30, i64 -1
  %37 = bitcast %"class.v8::String::ExternalStringResourceBase"* %36 to %"class.blink::ParkableStringImpl"**
  %38 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %37, align 8
  %39 = icmp eq %"class.blink::ParkableStringImpl"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String::ExternalStringResourceBase"* %36 to %"class.blink::ParkableString"*
  %42 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %41) #9
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %240, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %240

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #9
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %51
  call void @llvm.trap() #9
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %240

63:                                               ; preds = %35
  %64 = getelementptr inbounds %"class.v8::String::ExternalStringResourceBase", %"class.v8::String::ExternalStringResourceBase"* %30, i64 -3
  %65 = bitcast %"class.v8::String::ExternalStringResourceBase"* %64 to %"class.WTF::StringImpl"**
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %240, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %240

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #9
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  call void @llvm.trap() #9
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %240

85:                                               ; preds = %29
  %86 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %0) #9
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %110, !prof !2

88:                                               ; preds = %85
  %89 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %240, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %240

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #9
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %98
  call void @llvm.trap() #9
  unreachable

108:                                              ; preds = %98
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %99, align 4
  br label %240

110:                                              ; preds = %85
  %111 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %112 = icmp eq i32 %1, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = call zeroext i1 @_ZNK2v86String15CanMakeExternalEv(%"class.v8::String"* %0) #9
  br label %115

115:                                              ; preds = %110, %113
  %116 = phi i1 [ false, %110 ], [ %114, %113 ]
  %117 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %0) #9
  %118 = call zeroext i1 @_ZNK2v86String19ContainsOnlyOneByteEv(%"class.v8::String"* %0) #9
  br i1 %118, label %119, label %124

119:                                              ; preds = %115
  %120 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %121 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %117, i8** nonnull dereferenceable(8) %4) #9
  %122 = load i8*, i8** %4, align 8
  %123 = call i32 @_ZNK2v86String12WriteOneByteEPNS_7IsolateEPhiii(%"class.v8::String"* %0, %"class.v8::Isolate"* %111, i8* %122, i32 0, i32 %117, i32 0) #9
  br label %129

124:                                              ; preds = %115
  %125 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %3, align 8
  %126 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %117, i16** nonnull dereferenceable(8) %3) #9
  %127 = load i16*, i16** %3, align 8
  %128 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* %0, %"class.v8::Isolate"* %111, i16* %127, i32 0, i32 %117, i32 0) #9
  br label %129

129:                                              ; preds = %124, %119
  %130 = phi i8* [ %125, %124 ], [ %120, %119 ]
  %131 = phi %"class.WTF::StringImpl"* [ %126, %124 ], [ %121, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #9
  br i1 %116, label %132, label %240, !prof !3

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = call noalias i8* @malloc(i64 48) #9
  br i1 %136, label %189, label %138

138:                                              ; preds = %132
  %139 = bitcast i8* %137 to %"class.blink::StringResource8"*
  %140 = bitcast i8* %137 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink18StringResourceBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds i8, i8* %137, i64 8
  %142 = bitcast i8* %141 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %142, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %143, label %160, label %144

144:                                              ; preds = %138
  %145 = load atomic i32, i32* %133 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %160

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i33
  %152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %151, i33 1) #9
  %153 = extractvalue { i33, i1 } %152, 1
  %154 = extractvalue { i33, i1 } %152, 0
  %155 = icmp slt i33 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %157, label %158, !prof !2

157:                                              ; preds = %148
  call void @llvm.trap() #9
  unreachable

158:                                              ; preds = %148
  %159 = trunc i33 %154 to i32
  store i32 %159, i32* %149, align 4
  br label %160

160:                                              ; preds = %158, %144, %138
  %161 = getelementptr inbounds i8, i8* %137, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 16, i1 false) #9
  %162 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  br i1 %143, label %172, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  %167 = load atomic i32, i32* %133 monotonic, align 4
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = select i1 %169, i64 2, i64 1
  %171 = mul nuw nsw i64 %170, %166
  br label %172

172:                                              ; preds = %163, %160
  %173 = phi i64 [ %171, %163 ], [ 0, %160 ]
  %174 = call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %162, i64 %173) #9
  %175 = getelementptr inbounds i8, i8* %137, i64 32
  %176 = bitcast i8* %175 to i32 (...)***
  %177 = getelementptr inbounds i8, i8* %137, i64 40
  %178 = bitcast i8* %177 to i8**
  store i8* null, i8** %178, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink15StringResource8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink15StringResource8E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %176, align 8
  %179 = icmp eq i8* %137, null
  %180 = bitcast i8* %175 to %"class.v8::String::ExternalOneByteStringResource"*
  %181 = select i1 %179, %"class.v8::String::ExternalOneByteStringResource"* null, %"class.v8::String::ExternalOneByteStringResource"* %180
  %182 = call zeroext i1 @_ZN2v86String12MakeExternalEPNS0_29ExternalOneByteStringResourceE(%"class.v8::String"* %0, %"class.v8::String::ExternalOneByteStringResource"* %181) #9
  %183 = or i1 %179, %182
  br i1 %183, label %240, label %184, !prof !4

184:                                              ; preds = %172
  %185 = bitcast i8* %137 to void (%"class.blink::StringResource8"*)***
  %186 = load void (%"class.blink::StringResource8"*)**, void (%"class.blink::StringResource8"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::StringResource8"*)*, void (%"class.blink::StringResource8"*)** %186, i64 1
  %188 = load void (%"class.blink::StringResource8"*)*, void (%"class.blink::StringResource8"*)** %187, align 8
  call void %188(%"class.blink::StringResource8"* nonnull %139) #9
  br label %240

189:                                              ; preds = %132
  %190 = bitcast i8* %137 to %"class.blink::StringResource16"*
  %191 = bitcast i8* %137 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink18StringResourceBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %191, align 8
  %192 = getelementptr inbounds i8, i8* %137, i64 8
  %193 = bitcast i8* %192 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %193, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %194, label %211, label %195

195:                                              ; preds = %189
  %196 = load atomic i32, i32* %133 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #9
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  call void @llvm.trap() #9
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %195, %189
  %212 = getelementptr inbounds i8, i8* %137, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 16, i1 false) #9
  %213 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  br i1 %194, label %223, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i64
  %218 = load atomic i32, i32* %133 monotonic, align 4
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = select i1 %220, i64 2, i64 1
  %222 = mul nuw nsw i64 %221, %217
  br label %223

223:                                              ; preds = %214, %211
  %224 = phi i64 [ %222, %214 ], [ 0, %211 ]
  %225 = call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %213, i64 %224) #9
  %226 = getelementptr inbounds i8, i8* %137, i64 32
  %227 = bitcast i8* %226 to i32 (...)***
  %228 = getelementptr inbounds i8, i8* %137, i64 40
  %229 = bitcast i8* %228 to i16**
  store i16* null, i16** %229, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink16StringResource16E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %191, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink16StringResource16E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %227, align 8
  %230 = icmp eq i8* %137, null
  %231 = bitcast i8* %226 to %"class.v8::String::ExternalStringResource"*
  %232 = select i1 %230, %"class.v8::String::ExternalStringResource"* null, %"class.v8::String::ExternalStringResource"* %231
  %233 = call zeroext i1 @_ZN2v86String12MakeExternalEPNS0_22ExternalStringResourceE(%"class.v8::String"* %0, %"class.v8::String::ExternalStringResource"* %232) #9
  %234 = or i1 %230, %233
  br i1 %234, label %240, label %235, !prof !4

235:                                              ; preds = %223
  %236 = bitcast i8* %137 to void (%"class.blink::StringResource16"*)***
  %237 = load void (%"class.blink::StringResource16"*)**, void (%"class.blink::StringResource16"*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.blink::StringResource16"*)*, void (%"class.blink::StringResource16"*)** %237, i64 1
  %239 = load void (%"class.blink::StringResource16"*)*, void (%"class.blink::StringResource16"*)** %238, align 8
  call void %239(%"class.blink::StringResource16"* nonnull %190) #9
  br label %240

240:                                              ; preds = %223, %172, %235, %184, %129, %108, %93, %88, %83, %68, %63, %61, %46, %40
  %241 = phi %"class.WTF::StringImpl"* [ null, %40 ], [ %44, %46 ], [ %44, %61 ], [ null, %63 ], [ %66, %68 ], [ %66, %83 ], [ null, %88 ], [ %91, %93 ], [ %91, %108 ], [ %131, %223 ], [ %131, %172 ], [ %131, %129 ], [ %131, %184 ], [ %131, %235 ]
  ret %"class.WTF::StringImpl"* %241
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK2v86String6LengthEv(%"class.v8::String"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca [16 x i16], align 16
  %5 = alloca i16*, align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca [32 x i8], align 16
  %8 = alloca i8*, align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca i32, align 4
  %11 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  store i32 -1431655766, i32* %10, align 4
  %12 = bitcast %"class.v8::String"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %13, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 7
  %25 = and i32 %23, 8
  store i32 %25, i32* %10, align 4
  %26 = or i32 %24, 8
  %27 = icmp eq i32 %26, 10
  br i1 %27, label %28, label %32

28:                                               ; preds = %2
  %29 = add i64 %13, 11
  %30 = inttoptr i64 %29 to %"class.v8::String::ExternalStringResourceBase"**
  %31 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %30, align 1
  br label %34

32:                                               ; preds = %2
  %33 = call %"class.v8::String::ExternalStringResourceBase"* @_ZNK2v86String33GetExternalStringResourceBaseSlowEPNS0_8EncodingE(%"class.v8::String"* %0, i32* nonnull %10) #9
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi %"class.v8::String::ExternalStringResourceBase"* [ %31, %28 ], [ %33, %32 ]
  %36 = icmp eq %"class.v8::String::ExternalStringResourceBase"* %35, null
  %37 = getelementptr inbounds %"class.v8::String::ExternalStringResourceBase", %"class.v8::String::ExternalStringResourceBase"* %35, i64 -4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  %38 = icmp eq %"class.v8::String::ExternalStringResourceBase"* %37, null
  %39 = or i1 %36, %38
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.v8::String::ExternalStringResourceBase"* %37 to %"class.blink::StringResourceBase"*
  %42 = call %"class.WTF::StringImpl"* @_ZN5blink18StringResourceBase15GetAtomicStringEv(%"class.blink::StringResourceBase"* nonnull %41) #9
  br label %231

43:                                               ; preds = %34
  %44 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %0) #9
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %68, !prof !2

46:                                               ; preds = %43
  %47 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %231, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %231

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #9
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  call void @llvm.trap() #9
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %231

68:                                               ; preds = %43
  %69 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %70 = icmp eq i32 %1, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = call zeroext i1 @_ZNK2v86String15CanMakeExternalEv(%"class.v8::String"* %0) #9
  br label %73

73:                                               ; preds = %68, %71
  %74 = phi i1 [ false, %68 ], [ %72, %71 ]
  %75 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75)
  %76 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %0) #9
  %77 = call zeroext i1 @_ZNK2v86String19ContainsOnlyOneByteEv(%"class.v8::String"* %0) #9
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %78, align 8
  br i1 %77, label %79, label %132

79:                                               ; preds = %73
  %80 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = icmp slt i32 %76, 33
  br i1 %81, label %82, label %85

82:                                               ; preds = %79
  %83 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %83, i8 -86, i64 32, i1 false) #9
  %84 = call i32 @_ZNK2v86String12WriteOneByteEPNS_7IsolateEPhiii(%"class.v8::String"* %0, %"class.v8::Isolate"* %69, i8* nonnull %83, i32 0, i32 %76, i32 0) #9
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %6, i8* nonnull %83, i32 %76) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #9
  br label %186

85:                                               ; preds = %79
  %86 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %87 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %76, i8** nonnull dereferenceable(8) %8) #9
  %88 = load i8*, i8** %8, align 8
  %89 = call i32 @_ZNK2v86String12WriteOneByteEPNS_7IsolateEPhiii(%"class.v8::String"* %0, %"class.v8::Isolate"* %69, i8* %88, i32 0, i32 %76, i32 0) #9
  %90 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %90, label %114, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 acquire, align 4
  %94 = and i32 %93, 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %112, label %96

96:                                               ; preds = %91
  %97 = load atomic i32, i32* %92 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %116

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #9
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %100
  call void @llvm.trap() #9
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %116

112:                                              ; preds = %91
  %113 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %116

114:                                              ; preds = %85
  %115 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  store i64 0, i64* %115, align 8
  br label %131

116:                                              ; preds = %112, %110, %96
  %117 = phi %"class.WTF::StringImpl"* [ %87, %110 ], [ %87, %96 ], [ %113, %112 ]
  %118 = ptrtoint %"class.WTF::StringImpl"* %117 to i64
  %119 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  store i64 %118, i64* %119, align 8
  %120 = load atomic i32, i32* %92 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %116
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %116
  %128 = phi i32 [ %126, %125 ], [ %124, %116 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %131

131:                                              ; preds = %130, %127, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #9
  br label %186

132:                                              ; preds = %73
  %133 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #9
  %134 = icmp slt i32 %76, 17
  br i1 %134, label %135, label %139

135:                                              ; preds = %132
  %136 = bitcast [16 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %136) #9
  %137 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %136, i8 -86, i64 32, i1 false) #9
  %138 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* %0, %"class.v8::Isolate"* %69, i16* nonnull %137, i32 0, i32 %76, i32 0) #9
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %3, i16* nonnull %137, i32 %76) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %136) #9
  br label %186

139:                                              ; preds = %132
  %140 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %141 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %76, i16** nonnull dereferenceable(8) %5) #9
  %142 = load i16*, i16** %5, align 8
  %143 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* %0, %"class.v8::Isolate"* %69, i16* %142, i32 0, i32 %76, i32 0) #9
  %144 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %144, label %168, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 acquire, align 4
  %148 = and i32 %147, 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %166, label %150

150:                                              ; preds = %145
  %151 = load atomic i32, i32* %146 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %170

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i33
  %158 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %157, i33 1) #9
  %159 = extractvalue { i33, i1 } %158, 1
  %160 = extractvalue { i33, i1 } %158, 0
  %161 = icmp slt i33 %160, 0
  %162 = or i1 %159, %161
  br i1 %162, label %163, label %164, !prof !2

163:                                              ; preds = %154
  call void @llvm.trap() #9
  unreachable

164:                                              ; preds = %154
  %165 = trunc i33 %160 to i32
  store i32 %165, i32* %155, align 4
  br label %170

166:                                              ; preds = %145
  %167 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %141) #9
  br label %170

168:                                              ; preds = %139
  %169 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 0, i64* %169, align 8
  br label %185

170:                                              ; preds = %166, %164, %150
  %171 = phi %"class.WTF::StringImpl"* [ %141, %164 ], [ %141, %150 ], [ %167, %166 ]
  %172 = ptrtoint %"class.WTF::StringImpl"* %171 to i64
  %173 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %172, i64* %173, align 8
  %174 = load atomic i32, i32* %146 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %170
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %170
  %182 = phi i32 [ %180, %179 ], [ %178, %170 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #9
  br label %185

185:                                              ; preds = %184, %181, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #9
  br label %186

186:                                              ; preds = %135, %185, %82, %131
  %187 = phi %"class.WTF::AtomicString"* [ %6, %131 ], [ %6, %82 ], [ %3, %185 ], [ %3, %135 ]
  %188 = phi i8* [ %80, %131 ], [ %80, %82 ], [ %133, %185 ], [ %133, %135 ]
  %189 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %187, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #9
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %78, align 8
  br i1 %74, label %191, label %229, !prof !3

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = call noalias i8* @malloc(i64 48) #9
  %197 = bitcast i8* %196 to %"class.blink::StringResourceBase"*
  call void @_ZN5blink18StringResourceBaseC2ERKN3WTF12AtomicStringE(%"class.blink::StringResourceBase"* %197, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %198 = getelementptr inbounds i8, i8* %196, i64 32
  %199 = bitcast i8* %198 to i32 (...)***
  %200 = getelementptr inbounds i8, i8* %196, i64 40
  br i1 %195, label %215, label %201

201:                                              ; preds = %191
  %202 = bitcast i8* %200 to i8**
  store i8* null, i8** %202, align 8
  %203 = bitcast i8* %196 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink15StringResource8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %203, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink15StringResource8E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %199, align 8
  %204 = icmp eq i8* %196, null
  %205 = bitcast i8* %198 to %"class.v8::String::ExternalOneByteStringResource"*
  %206 = select i1 %204, %"class.v8::String::ExternalOneByteStringResource"* null, %"class.v8::String::ExternalOneByteStringResource"* %205
  %207 = call zeroext i1 @_ZN2v86String12MakeExternalEPNS0_29ExternalOneByteStringResourceE(%"class.v8::String"* %0, %"class.v8::String::ExternalOneByteStringResource"* %206) #9
  %208 = or i1 %204, %207
  br i1 %208, label %229, label %209, !prof !4

209:                                              ; preds = %201
  %210 = bitcast i8* %196 to %"class.blink::StringResource8"*
  %211 = bitcast i8* %196 to void (%"class.blink::StringResource8"*)***
  %212 = load void (%"class.blink::StringResource8"*)**, void (%"class.blink::StringResource8"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::StringResource8"*)*, void (%"class.blink::StringResource8"*)** %212, i64 1
  %214 = load void (%"class.blink::StringResource8"*)*, void (%"class.blink::StringResource8"*)** %213, align 8
  call void %214(%"class.blink::StringResource8"* nonnull %210) #9
  br label %229

215:                                              ; preds = %191
  %216 = bitcast i8* %200 to i16**
  store i16* null, i16** %216, align 8
  %217 = bitcast i8* %196 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink16StringResource16E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %217, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink16StringResource16E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %199, align 8
  %218 = icmp eq i8* %196, null
  %219 = bitcast i8* %198 to %"class.v8::String::ExternalStringResource"*
  %220 = select i1 %218, %"class.v8::String::ExternalStringResource"* null, %"class.v8::String::ExternalStringResource"* %219
  %221 = call zeroext i1 @_ZN2v86String12MakeExternalEPNS0_22ExternalStringResourceE(%"class.v8::String"* %0, %"class.v8::String::ExternalStringResource"* %220) #9
  %222 = or i1 %218, %221
  br i1 %222, label %229, label %223, !prof !4

223:                                              ; preds = %215
  %224 = bitcast i8* %196 to %"class.blink::StringResource16"*
  %225 = bitcast i8* %196 to void (%"class.blink::StringResource16"*)***
  %226 = load void (%"class.blink::StringResource16"*)**, void (%"class.blink::StringResource16"*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.blink::StringResource16"*)*, void (%"class.blink::StringResource16"*)** %226, i64 1
  %228 = load void (%"class.blink::StringResource16"*)*, void (%"class.blink::StringResource16"*)** %227, align 8
  call void %228(%"class.blink::StringResource16"* nonnull %224) #9
  br label %229

229:                                              ; preds = %215, %201, %186, %209, %223
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  br label %231

231:                                              ; preds = %66, %51, %46, %229, %40
  %232 = phi %"class.WTF::StringImpl"* [ %230, %229 ], [ %42, %40 ], [ null, %46 ], [ %49, %51 ], [ %49, %66 ]
  ret %"class.WTF::StringImpl"* %232
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ToBlinkStringViewEN2v85LocalINS0_6StringEEERN3WTF10StringView17StackBackingStoreENS_12ExternalModeE(%"class.WTF::StringView"* noalias sret, %"class.v8::String"*, %"class.WTF::StringView::StackBackingStore"* dereferenceable(136), i32) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca [16 x i16], align 16
  %7 = alloca i16*, align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca [32 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca i32, align 4
  %13 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #9
  store i32 -1431655766, i32* %12, align 4
  %14 = bitcast %"class.v8::String"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i64 %15, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = and i32 %25, 7
  %27 = and i32 %25, 8
  store i32 %27, i32* %12, align 4
  %28 = or i32 %26, 8
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %34

30:                                               ; preds = %4
  %31 = add i64 %15, 11
  %32 = inttoptr i64 %31 to %"class.v8::String::ExternalStringResourceBase"**
  %33 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %32, align 1
  br label %36

34:                                               ; preds = %4
  %35 = call %"class.v8::String::ExternalStringResourceBase"* @_ZNK2v86String33GetExternalStringResourceBaseSlowEPNS0_8EncodingE(%"class.v8::String"* %1, i32* nonnull %12) #9
  br label %36

36:                                               ; preds = %30, %34
  %37 = phi %"class.v8::String::ExternalStringResourceBase"* [ %33, %30 ], [ %35, %34 ]
  %38 = icmp eq %"class.v8::String::ExternalStringResourceBase"* %37, null
  %39 = getelementptr inbounds %"class.v8::String::ExternalStringResourceBase", %"class.v8::String::ExternalStringResourceBase"* %37, i64 -4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #9
  %40 = icmp eq %"class.v8::String::ExternalStringResourceBase"* %39, null
  %41 = or i1 %38, %40
  br i1 %41, label %71, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.v8::String::ExternalStringResourceBase"* %39 to %"class.blink::StringResourceBase"*
  %44 = call %"class.WTF::StringImpl"* @_ZN5blink18StringResourceBase15GetAtomicStringEv(%"class.blink::StringResourceBase"* nonnull %43) #9
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %46, label %51

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* null, i8** %47, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %49 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 0, i32* %50, align 8
  br label %348

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 1
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  %57 = bitcast i8** %56 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 %54, i32* %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %51
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %51
  %68 = phi i32 [ %66, %65 ], [ %64, %51 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %348

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #9
  br label %348

71:                                               ; preds = %36
  %72 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %1) #9
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %93, !prof !2

74:                                               ; preds = %71
  %75 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %76 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %79, label %83

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* null, i8** %80, align 8
  %81 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %82 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %81, i64* %82, align 8
  br label %90

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 1
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  %89 = bitcast i8** %88 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %89, align 8
  br label %90

90:                                               ; preds = %79, %83
  %91 = phi i32 [ %86, %83 ], [ 0, %79 ]
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 %91, i32* %92, align 8
  br label %348

93:                                               ; preds = %71
  %94 = icmp eq i32 %3, 0
  br i1 %94, label %97, label %95, !prof !5

95:                                               ; preds = %93
  %96 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  br label %302

97:                                               ; preds = %93
  %98 = call zeroext i1 @_ZNK2v86String15CanMakeExternalEv(%"class.v8::String"* %1) #9
  %99 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  br i1 %98, label %100, label %302, !prof !3

100:                                              ; preds = %97
  %101 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)
  %102 = call i32 @_ZNK2v86String6LengthEv(%"class.v8::String"* %1) #9
  %103 = call zeroext i1 @_ZNK2v86String19ContainsOnlyOneByteEv(%"class.v8::String"* %1) #9
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %104, align 8
  br i1 %103, label %105, label %158

105:                                              ; preds = %100
  %106 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #9
  %107 = icmp slt i32 %102, 33
  br i1 %107, label %108, label %111

108:                                              ; preds = %105
  %109 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %109, i8 -86, i64 32, i1 false) #9
  %110 = call i32 @_ZNK2v86String12WriteOneByteEPNS_7IsolateEPhiii(%"class.v8::String"* %1, %"class.v8::Isolate"* %99, i8* nonnull %109, i32 0, i32 %102, i32 0) #9
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %8, i8* nonnull %109, i32 %102) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #9
  br label %212

111:                                              ; preds = %105
  %112 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %113 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %102, i8** nonnull dereferenceable(8) %10) #9
  %114 = load i8*, i8** %10, align 8
  %115 = call i32 @_ZNK2v86String12WriteOneByteEPNS_7IsolateEPhiii(%"class.v8::String"* %1, %"class.v8::Isolate"* %99, i8* %114, i32 0, i32 %102, i32 0) #9
  %116 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %116, label %140, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 acquire, align 4
  %120 = and i32 %119, 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %117
  %123 = load atomic i32, i32* %118 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %142

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #9
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %126
  call void @llvm.trap() #9
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %142

138:                                              ; preds = %117
  %139 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %113) #9
  br label %142

140:                                              ; preds = %111
  %141 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 0, i64* %141, align 8
  br label %157

142:                                              ; preds = %138, %136, %122
  %143 = phi %"class.WTF::StringImpl"* [ %113, %136 ], [ %113, %122 ], [ %139, %138 ]
  %144 = ptrtoint %"class.WTF::StringImpl"* %143 to i64
  %145 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 %144, i64* %145, align 8
  %146 = load atomic i32, i32* %118 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %142
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %142
  %154 = phi i32 [ %152, %151 ], [ %150, %142 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #9
  br label %157

157:                                              ; preds = %156, %153, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #9
  br label %212

158:                                              ; preds = %100
  %159 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #9
  %160 = icmp slt i32 %102, 17
  br i1 %160, label %161, label %165

161:                                              ; preds = %158
  %162 = bitcast [16 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %162) #9
  %163 = getelementptr inbounds [16 x i16], [16 x i16]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %162, i8 -86, i64 32, i1 false) #9
  %164 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* %1, %"class.v8::Isolate"* %99, i16* nonnull %163, i32 0, i32 %102, i32 0) #9
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %5, i16* nonnull %163, i32 %102) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %162) #9
  br label %212

165:                                              ; preds = %158
  %166 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %167 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %102, i16** nonnull dereferenceable(8) %7) #9
  %168 = load i16*, i16** %7, align 8
  %169 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* %1, %"class.v8::Isolate"* %99, i16* %168, i32 0, i32 %102, i32 0) #9
  %170 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %170, label %194, label %171

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 acquire, align 4
  %174 = and i32 %173, 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %192, label %176

176:                                              ; preds = %171
  %177 = load atomic i32, i32* %172 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %196

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i33
  %184 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %183, i33 1) #9
  %185 = extractvalue { i33, i1 } %184, 1
  %186 = extractvalue { i33, i1 } %184, 0
  %187 = icmp slt i33 %186, 0
  %188 = or i1 %185, %187
  br i1 %188, label %189, label %190, !prof !2

189:                                              ; preds = %180
  call void @llvm.trap() #9
  unreachable

190:                                              ; preds = %180
  %191 = trunc i33 %186 to i32
  store i32 %191, i32* %181, align 4
  br label %196

192:                                              ; preds = %171
  %193 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %167) #9
  br label %196

194:                                              ; preds = %165
  %195 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 0, i64* %195, align 8
  br label %211

196:                                              ; preds = %192, %190, %176
  %197 = phi %"class.WTF::StringImpl"* [ %167, %190 ], [ %167, %176 ], [ %193, %192 ]
  %198 = ptrtoint %"class.WTF::StringImpl"* %197 to i64
  %199 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load atomic i32, i32* %172 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %196
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %196
  %208 = phi i32 [ %206, %205 ], [ %204, %196 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #9
  br label %211

211:                                              ; preds = %210, %207, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #9
  br label %212

212:                                              ; preds = %161, %211, %108, %157
  %213 = phi %"class.WTF::AtomicString"* [ %8, %157 ], [ %8, %108 ], [ %5, %211 ], [ %5, %161 ]
  %214 = phi i8* [ %106, %157 ], [ %106, %108 ], [ %159, %211 ], [ %159, %161 ]
  %215 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %213, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #9
  store %"class.WTF::StringImpl"* %216, %"class.WTF::StringImpl"** %104, align 8
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = call noalias i8* @malloc(i64 48) #9
  br i1 %220, label %240, label %222

222:                                              ; preds = %212
  %223 = bitcast i8* %221 to %"class.blink::StringResource8"*
  %224 = bitcast i8* %221 to %"class.blink::StringResourceBase"*
  call void @_ZN5blink18StringResourceBaseC2ERKN3WTF12AtomicStringE(%"class.blink::StringResourceBase"* %224, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11) #9
  %225 = getelementptr inbounds i8, i8* %221, i64 32
  %226 = bitcast i8* %225 to i32 (...)***
  %227 = getelementptr inbounds i8, i8* %221, i64 40
  %228 = bitcast i8* %227 to i8**
  store i8* null, i8** %228, align 8
  %229 = bitcast i8* %221 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink15StringResource8E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink15StringResource8E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %226, align 8
  %230 = icmp eq i8* %221, null
  %231 = bitcast i8* %225 to %"class.v8::String::ExternalOneByteStringResource"*
  %232 = select i1 %230, %"class.v8::String::ExternalOneByteStringResource"* null, %"class.v8::String::ExternalOneByteStringResource"* %231
  %233 = call zeroext i1 @_ZN2v86String12MakeExternalEPNS0_29ExternalOneByteStringResourceE(%"class.v8::String"* %1, %"class.v8::String::ExternalOneByteStringResource"* %232) #9
  br i1 %233, label %258, label %234, !prof !3

234:                                              ; preds = %222
  br i1 %230, label %286, label %235

235:                                              ; preds = %234
  %236 = bitcast i8* %221 to void (%"class.blink::StringResource8"*)***
  %237 = load void (%"class.blink::StringResource8"*)**, void (%"class.blink::StringResource8"*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.blink::StringResource8"*)*, void (%"class.blink::StringResource8"*)** %237, i64 1
  %239 = load void (%"class.blink::StringResource8"*)*, void (%"class.blink::StringResource8"*)** %238, align 8
  call void %239(%"class.blink::StringResource8"* nonnull %223) #9
  br label %286

240:                                              ; preds = %212
  %241 = bitcast i8* %221 to %"class.blink::StringResource16"*
  %242 = bitcast i8* %221 to %"class.blink::StringResourceBase"*
  call void @_ZN5blink18StringResourceBaseC2ERKN3WTF12AtomicStringE(%"class.blink::StringResourceBase"* %242, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11) #9
  %243 = getelementptr inbounds i8, i8* %221, i64 32
  %244 = bitcast i8* %243 to i32 (...)***
  %245 = getelementptr inbounds i8, i8* %221, i64 40
  %246 = bitcast i8* %245 to i16**
  store i16* null, i16** %246, align 8
  %247 = bitcast i8* %221 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink16StringResource16E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %247, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [10 x i8*] }, { [6 x i8*], [10 x i8*] }* @_ZTVN5blink16StringResource16E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %244, align 8
  %248 = icmp eq i8* %221, null
  %249 = bitcast i8* %243 to %"class.v8::String::ExternalStringResource"*
  %250 = select i1 %248, %"class.v8::String::ExternalStringResource"* null, %"class.v8::String::ExternalStringResource"* %249
  %251 = call zeroext i1 @_ZN2v86String12MakeExternalEPNS0_22ExternalStringResourceE(%"class.v8::String"* %1, %"class.v8::String::ExternalStringResource"* %250) #9
  br i1 %251, label %258, label %252, !prof !3

252:                                              ; preds = %240
  br i1 %248, label %286, label %253

253:                                              ; preds = %252
  %254 = bitcast i8* %221 to void (%"class.blink::StringResource16"*)***
  %255 = load void (%"class.blink::StringResource16"*)**, void (%"class.blink::StringResource16"*)*** %254, align 8
  %256 = getelementptr inbounds void (%"class.blink::StringResource16"*)*, void (%"class.blink::StringResource16"*)** %255, i64 1
  %257 = load void (%"class.blink::StringResource16"*)*, void (%"class.blink::StringResource16"*)** %256, align 8
  call void %257(%"class.blink::StringResource16"* nonnull %241) #9
  br label %286

258:                                              ; preds = %222, %240
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %261, label %266

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* null, i8** %262, align 8
  %263 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %264 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 0, i32* %265, align 8
  br label %348

266:                                              ; preds = %258
  %267 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  store %"class.WTF::StringImpl"* %259, %"class.WTF::StringImpl"** %267, align 8
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 1
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 1
  %271 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  %272 = bitcast i8** %271 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %270, %"class.WTF::StringImpl"** %272, align 8
  %273 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 %269, i32* %273, align 8
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %266
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %266
  %283 = phi i32 [ %281, %280 ], [ %279, %266 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %348

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #9
  br label %348

286:                                              ; preds = %252, %253, %234, %235
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %302, label %289

289:                                              ; preds = %286
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %287) #9
  br label %302

302:                                              ; preds = %301, %298, %286, %95, %97
  %303 = phi %"class.v8::Isolate"* [ %96, %95 ], [ %99, %97 ], [ %99, %286 ], [ %99, %298 ], [ %99, %301 ]
  %304 = call zeroext i1 @_ZNK2v86String19ContainsOnlyOneByteEv(%"class.v8::String"* %1) #9
  br i1 %304, label %305, label %324

305:                                              ; preds = %302
  %306 = icmp ugt i32 %72, 128
  br i1 %306, label %307, label %315, !prof !2

307:                                              ; preds = %305
  %308 = sext i32 %72 to i64
  %309 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %308, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #9
  %310 = getelementptr inbounds %"class.WTF::StringView::StackBackingStore", %"class.WTF::StringView::StackBackingStore"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %311 = load i8*, i8** %310, align 8
  store i8* %309, i8** %310, align 8
  %312 = icmp eq i8* %311, null
  br i1 %312, label %317, label %313

313:                                              ; preds = %307
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %311) #9
  %314 = load i8*, i8** %310, align 8
  br label %317

315:                                              ; preds = %305
  %316 = bitcast %"class.WTF::StringView::StackBackingStore"* %2 to i8*
  br label %317

317:                                              ; preds = %307, %313, %315
  %318 = phi i8* [ %316, %315 ], [ %309, %307 ], [ %314, %313 ]
  %319 = call i32 @_ZNK2v86String12WriteOneByteEPNS_7IsolateEPhiii(%"class.v8::String"* %1, %"class.v8::Isolate"* %303, i8* %318, i32 0, i32 %72, i32 0) #9
  %320 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %321 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %320, i64* %321, align 8
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  store i8* %318, i8** %322, align 8
  %323 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 %72, i32* %323, align 8
  br label %348

324:                                              ; preds = %302
  %325 = sext i32 %72 to i64
  %326 = shl nsw i64 %325, 1
  %327 = icmp ugt i64 %326, 128
  br i1 %327, label %328, label %338, !prof !2

328:                                              ; preds = %324
  %329 = call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %326, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #9
  %330 = getelementptr inbounds %"class.WTF::StringView::StackBackingStore", %"class.WTF::StringView::StackBackingStore"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %331 = load i8*, i8** %330, align 8
  store i8* %329, i8** %330, align 8
  %332 = icmp eq i8* %331, null
  br i1 %332, label %333, label %335

333:                                              ; preds = %328
  %334 = bitcast i8* %329 to i16*
  br label %340

335:                                              ; preds = %328
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %331) #9
  %336 = bitcast i8** %330 to i16**
  %337 = load i16*, i16** %336, align 8
  br label %340

338:                                              ; preds = %324
  %339 = getelementptr inbounds %"class.WTF::StringView::StackBackingStore", %"class.WTF::StringView::StackBackingStore"* %2, i64 0, i32 0, i64 0
  br label %340

340:                                              ; preds = %333, %335, %338
  %341 = phi i16* [ %339, %338 ], [ %334, %333 ], [ %337, %335 ]
  %342 = call i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"* %1, %"class.v8::Isolate"* %303, i16* %341, i32 0, i32 %72, i32 0) #9
  %343 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %344 = bitcast %"class.WTF::StringView"* %0 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  %346 = bitcast i8** %345 to i16**
  store i16* %341, i16** %346, align 8
  %347 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  store i32 %72, i32* %347, align 8
  br label %348

348:                                              ; preds = %285, %282, %261, %70, %67, %46, %90, %340, %317
  ret void
}

declare zeroext i1 @_ZNK2v86String19ContainsOnlyOneByteEv(%"class.v8::String"*) local_unnamed_addr #2

declare i32 @_ZNK2v86String12WriteOneByteEPNS_7IsolateEPhiii(%"class.v8::String"*, %"class.v8::Isolate"*, i8*, i32, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK2v86String5WriteEPNS_7IsolateEPtiii(%"class.v8::String"*, %"class.v8::Isolate"*, i16*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #9
  br i1 %6, label %7, label %201

7:                                                ; preds = %1
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17ToBlinkStringFastEiE13s_low_numbers to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %19, !prof !6

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17ToBlinkStringFastEiE13s_low_numbers) #9
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17ToBlinkStringFastEiE13s_low_numbers to %"class.WTF::AtomicString"**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL17ToBlinkStringFastEiE13s_low_numbers, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %14 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 808) #9
  %15 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %14, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #9
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17ToBlinkStringFastEiE13s_low_numbers to i64*) monotonic, align 8
  %17 = lshr i64 %14, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL17ToBlinkStringFastEiE13s_low_numbers, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  store i32 101, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL17ToBlinkStringFastEiE13s_low_numbers, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 808, i1 false) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17ToBlinkStringFastEiE13s_low_numbers) #9
  br label %19

19:                                               ; preds = %13, %10, %7
  %20 = icmp ult i32 %0, 101
  br i1 %20, label %21, label %142

21:                                               ; preds = %19
  %22 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.25"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17ToBlinkStringFastEiE13s_low_numbers to %"class.WTF::Vector.25"*), i32 %0) #9
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %45, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #9
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #9
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %41, %26
  %44 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  br label %198

45:                                               ; preds = %21
  %46 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 32, i1 false) #9
  store i8* %48, i8** %49, align 8
  %52 = trunc i32 %0 to i8
  %53 = urem i8 %52, 10
  %54 = udiv i8 %52, 10
  %55 = or i8 %53, 48
  store i8 %55, i8* %48, align 4
  %56 = icmp ugt i32 %0, 9
  br i1 %56, label %57, label %66

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  store i8* %58, i8** %49, align 8
  %59 = urem i8 %54, 10
  %60 = or i8 %59, 48
  store i8 %60, i8* %58, align 1
  %61 = icmp ugt i32 %0, 99
  br i1 %61, label %62, label %66

62:                                               ; preds = %57
  %63 = udiv i8 %52, 100
  %64 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %64, i8** %49, align 8
  %65 = or i8 %63, 48
  store i8 %65, i8* %64, align 2
  br label %66

66:                                               ; preds = %62, %57, %45
  %67 = phi i8* [ %64, %62 ], [ %58, %57 ], [ %48, %45 ]
  %68 = ptrtoint i8* %67 to i64
  %69 = ptrtoint i8* %51 to i64
  %70 = sub i64 %69, %68
  %71 = trunc i64 %70 to i32
  store i32 %71, i32* %50, align 8
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %3, i8* %67, i32 %71) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #9
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  %74 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.25"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17ToBlinkStringFastEiE13s_low_numbers to %"class.WTF::Vector.25"*), i32 %0) #9
  %75 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #9
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !2

90:                                               ; preds = %81
  call void @llvm.trap() #9
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4
  br label %93

93:                                               ; preds = %91, %76, %66
  %94 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  %95 = bitcast %"class.WTF::AtomicString"* %74 to i64*
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  store i64 %94, i64* %95, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #9
  br label %112

112:                                              ; preds = %111, %108, %93
  br i1 %75, label %198, label %113

113:                                              ; preds = %112
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #9
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #9
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = load atomic i32, i32* %114 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %137 = add i32 %131, -1
  store i32 %137, i32* %136, align 4
  br label %138

138:                                              ; preds = %135, %130
  %139 = phi i32 [ %137, %135 ], [ %131, %130 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %198

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %198

142:                                              ; preds = %19
  %143 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %143) #9
  %144 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  %145 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %146 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %147 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 13
  %148 = icmp slt i32 %0, 0
  %149 = sub i32 0, %0
  %150 = select i1 %148, i32 %149, i32 %0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 32, i1 false) #9
  store i8* %144, i8** %145, align 8
  %151 = urem i32 %150, 10
  %152 = udiv i32 %150, 10
  %153 = trunc i32 %151 to i8
  %154 = or i8 %153, 48
  store i8 %154, i8* %144, align 4
  %155 = icmp ugt i32 %150, 9
  br i1 %155, label %156, label %185

156:                                              ; preds = %142
  %157 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  store i8* %157, i8** %145, align 8
  %158 = urem i32 %152, 10
  %159 = trunc i32 %158 to i8
  %160 = or i8 %159, 48
  store i8 %160, i8* %157, align 1
  %161 = icmp ugt i32 %150, 99
  br i1 %161, label %162, label %185

162:                                              ; preds = %156
  %163 = udiv i32 %150, 100
  %164 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %164, i8** %145, align 8
  %165 = urem i32 %163, 10
  %166 = trunc i32 %165 to i8
  %167 = or i8 %166, 48
  store i8 %167, i8* %164, align 2
  %168 = icmp ugt i32 %150, 999
  br i1 %168, label %169, label %185

169:                                              ; preds = %162
  %170 = udiv i32 %150, 1000
  %171 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %171, i8** %145, align 8
  %172 = urem i32 %170, 10
  %173 = trunc i32 %172 to i8
  %174 = or i8 %173, 48
  store i8 %174, i8* %171, align 1
  %175 = icmp ugt i32 %150, 9999
  br i1 %175, label %176, label %185

176:                                              ; preds = %169, %176
  %177 = phi i32 [ %179, %176 ], [ %170, %169 ]
  %178 = load i8*, i8** %145, align 8
  %179 = udiv i32 %177, 10
  %180 = getelementptr inbounds i8, i8* %178, i64 -1
  store i8* %180, i8** %145, align 8
  %181 = urem i32 %179, 10
  %182 = trunc i32 %181 to i8
  %183 = or i8 %182, 48
  store i8 %183, i8* %180, align 1
  %184 = icmp ugt i32 %177, 99
  br i1 %184, label %176, label %185

185:                                              ; preds = %176, %169, %162, %156, %142
  br i1 %148, label %186, label %189

186:                                              ; preds = %185
  %187 = load i8*, i8** %145, align 8
  %188 = getelementptr inbounds i8, i8* %187, i64 -1
  store i8* %188, i8** %145, align 8
  store i8 45, i8* %188, align 1
  br label %189

189:                                              ; preds = %186, %185
  %190 = bitcast i8** %145 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = ptrtoint i8* %147 to i64
  %193 = sub i64 %192, %191
  %194 = trunc i64 %193 to i32
  store i32 %194, i32* %146, align 8
  %195 = inttoptr i64 %191 to i8*
  %196 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %195, i32 %194) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %143) #9
  %197 = ptrtoint %"class.WTF::StringImpl"* %196 to i64
  br label %198

198:                                              ; preds = %43, %112, %138, %141, %189
  %199 = phi i64 [ %197, %189 ], [ %44, %43 ], [ %94, %138 ], [ %94, %141 ], [ %94, %112 ]
  %200 = inttoptr i64 %199 to %"class.WTF::StringImpl"*
  br label %249

201:                                              ; preds = %1
  %202 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #9
  %203 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 12
  %204 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 2
  %205 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 3
  %206 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 13
  %207 = icmp slt i32 %0, 0
  %208 = sub i32 0, %0
  %209 = select i1 %207, i32 %208, i32 %0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 32, i1 false) #9
  store i8* %203, i8** %204, align 8
  %210 = urem i32 %209, 10
  %211 = udiv i32 %209, 10
  %212 = trunc i32 %210 to i8
  %213 = or i8 %212, 48
  store i8 %213, i8* %203, align 4
  %214 = icmp ugt i32 %209, 9
  br i1 %214, label %215, label %237

215:                                              ; preds = %201
  %216 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 11
  store i8* %216, i8** %204, align 8
  %217 = urem i32 %211, 10
  %218 = trunc i32 %217 to i8
  %219 = or i8 %218, 48
  store i8 %219, i8* %216, align 1
  %220 = icmp ugt i32 %209, 99
  br i1 %220, label %221, label %237

221:                                              ; preds = %215
  %222 = udiv i32 %209, 100
  %223 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %2, i64 0, i32 0, i64 10
  store i8* %223, i8** %204, align 8
  %224 = urem i32 %222, 10
  %225 = trunc i32 %224 to i8
  %226 = or i8 %225, 48
  store i8 %226, i8* %223, align 2
  %227 = icmp ugt i32 %209, 999
  br i1 %227, label %228, label %237

228:                                              ; preds = %221, %228
  %229 = phi i32 [ %231, %228 ], [ %222, %221 ]
  %230 = load i8*, i8** %204, align 8
  %231 = udiv i32 %229, 10
  %232 = getelementptr inbounds i8, i8* %230, i64 -1
  store i8* %232, i8** %204, align 8
  %233 = urem i32 %231, 10
  %234 = trunc i32 %233 to i8
  %235 = or i8 %234, 48
  store i8 %235, i8* %232, align 1
  %236 = icmp ugt i32 %229, 99
  br i1 %236, label %228, label %237

237:                                              ; preds = %228, %221, %215, %201
  br i1 %207, label %238, label %241

238:                                              ; preds = %237
  %239 = load i8*, i8** %204, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 -1
  store i8* %240, i8** %204, align 8
  store i8 45, i8* %240, align 1
  br label %241

241:                                              ; preds = %237, %238
  %242 = bitcast i8** %204 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = ptrtoint i8* %206 to i64
  %245 = sub i64 %244, %243
  %246 = trunc i64 %245 to i32
  store i32 %246, i32* %205, align 8
  %247 = inttoptr i64 %243 to i8*
  %248 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %247, i32 %246) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #9
  br label %249

249:                                              ; preds = %241, %198
  %250 = phi %"class.WTF::StringImpl"* [ %200, %198 ], [ %248, %241 ]
  ret %"class.WTF::StringImpl"* %250
}

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink18StringResourceBase15GetAtomicStringEv(%"class.blink::StringResourceBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %3, align 8
  %5 = icmp eq %"class.blink::ParkableStringImpl"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %2) #9
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %11
  %17 = load atomic i32, i32* %12 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %34

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #9
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %34

32:                                               ; preds = %11
  %33 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %9) #9
  br label %34

34:                                               ; preds = %6, %16, %30, %32
  %35 = phi %"class.WTF::StringImpl"* [ %33, %32 ], [ %9, %16 ], [ %9, %30 ], [ null, %6 ]
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  br label %135

37:                                               ; preds = %1
  %38 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  br label %116

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %71, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 acquire, align 4
  %51 = and i32 %50, 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %48
  %54 = load atomic i32, i32* %49 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %71

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #9
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  tail call void @llvm.trap() #9
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %71

69:                                               ; preds = %48
  %70 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %71

71:                                               ; preds = %44, %53, %67, %69
  %72 = phi %"class.WTF::StringImpl"* [ %70, %69 ], [ %46, %53 ], [ %46, %67 ], [ null, %44 ]
  %73 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  %74 = bitcast %"class.WTF::AtomicString"* %38 to i64*
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  store i64 %73, i64* %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #9
  br label %90

90:                                               ; preds = %89, %86, %71
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %91, %92
  br i1 %93, label %112, label %94

94:                                               ; preds = %90
  %95 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = select i1 %105, i64 2, i64 1
  %107 = mul nuw nsw i64 %106, %101
  br label %108

108:                                              ; preds = %94, %98
  %109 = phi i64 [ %107, %98 ], [ 0, %94 ]
  %110 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %95, i64 %109) #9
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  br label %112

112:                                              ; preds = %90, %108
  %113 = phi %"class.WTF::StringImpl"* [ %91, %90 ], [ %111, %108 ]
  %114 = ptrtoint %"class.WTF::StringImpl"* %113 to i64
  %115 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %115, label %135, label %116

116:                                              ; preds = %42, %112
  %117 = phi i64 [ %43, %42 ], [ %114, %112 ]
  %118 = phi %"class.WTF::StringImpl"* [ %40, %42 ], [ %113, %112 ]
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i33
  %127 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #9
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %123
  tail call void @llvm.trap() #9
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4
  br label %135

135:                                              ; preds = %133, %116, %112, %34
  %136 = phi i64 [ %36, %34 ], [ %114, %112 ], [ %117, %116 ], [ %117, %133 ]
  %137 = inttoptr i64 %136 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %137
}

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v86String15CanMakeExternalEv(%"class.v8::String"*) local_unnamed_addr #2

declare %"class.v8::String::ExternalStringResourceBase"* @_ZNK2v86String33GetExternalStringResourceBaseSlowEPNS0_8EncodingE(%"class.v8::String"*, i32*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.25"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"*, i8*, i32) unnamed_addr #2

declare zeroext i1 @_ZN2v86String12MakeExternalEPNS0_29ExternalOneByteStringResourceE(%"class.v8::String"*, %"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v86String12MakeExternalEPNS0_22ExternalStringResourceE(%"class.v8::String"*, %"class.v8::String::ExternalStringResource"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15StringResource8D0Ev(%"class.blink::StringResource8"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource8", %"class.blink::StringResource8"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %2) #9
  %3 = bitcast %"class.blink::StringResource8"* %0 to i8*
  tail call void @free(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink15StringResource86lengthEv(%"class.blink::StringResource8"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource8", %"class.blink::StringResource8"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink15StringResource84dataEv(%"class.blink::StringResource8"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource8", %"class.blink::StringResource8"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  %5 = bitcast %"class.WTF::StringImpl"* %4 to i8*
  ret i8* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N5blink15StringResource8D1Ev(%"class.blink::StringResource8"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource8", %"class.blink::StringResource8"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.WTF::AtomicString"* %2 to %"class.blink::StringResourceBase"*
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %3) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N5blink15StringResource8D0Ev(%"class.blink::StringResource8"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource8", %"class.blink::StringResource8"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.WTF::AtomicString"* %2 to %"class.blink::StringResourceBase"*
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %3) #9
  %4 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  tail call void @free(i8* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v86String26ExternalStringResourceBase11IsCacheableEv(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v86String26ExternalStringResourceBase7DisposeEv(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %"class.v8::String::ExternalStringResourceBase"* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.v8::String::ExternalStringResourceBase"* %0 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %5 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %5, i64 1
  %7 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %6, align 8
  tail call void %7(%"class.v8::String::ExternalStringResourceBase"* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2v86String26ExternalStringResourceBase4LockEv(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2v86String26ExternalStringResourceBase6UnlockEv(%"class.v8::String::ExternalStringResourceBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZThn32_NK5blink15StringResource84dataEv(%"class.blink::StringResource8"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource8", %"class.blink::StringResource8"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %6 = bitcast %"class.WTF::StringImpl"* %5 to i8*
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZThn32_NK5blink15StringResource86lengthEv(%"class.blink::StringResource8"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource8", %"class.blink::StringResource8"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  ret i64 %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19StringResource8BaseD2Ev(%"class.blink::StringResource8Base"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource8Base", %"class.blink::StringResource8Base"* %0, i64 0, i32 0
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink18StringResourceBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i64 2, i64 1
  %15 = mul nuw nsw i64 %14, %9
  br label %16

16:                                               ; preds = %1, %6
  %17 = phi i64 [ %15, %6 ], [ 0, %1 ]
  %18 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %4, %19
  %21 = icmp eq %"class.WTF::StringImpl"* %19, null
  %22 = or i1 %20, %21
  br i1 %22, label %34, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i64 2, i64 1
  %32 = mul nuw nsw i64 %31, %26
  %33 = add nuw nsw i64 %32, %17
  br label %34

34:                                               ; preds = %16, %23
  %35 = phi i64 [ %33, %23 ], [ %17, %16 ]
  %36 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %37 = sub nsw i64 0, %35
  %38 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %36, i64 %37) #9
  %39 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 3
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %39) #9
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #9
  br label %55

55:                                               ; preds = %34, %51, %54
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #9
  br label %71

71:                                               ; preds = %55, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18StringResourceBaseD0Ev(%"class.blink::StringResourceBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %0) #9
  %2 = bitcast %"class.blink::StringResourceBase"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16StringResource16D0Ev(%"class.blink::StringResource16"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource16", %"class.blink::StringResource16"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %2) #9
  %3 = bitcast %"class.blink::StringResource16"* %0 to i8*
  tail call void @free(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink16StringResource166lengthEv(%"class.blink::StringResource16"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource16", %"class.blink::StringResource16"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNK5blink16StringResource164dataEv(%"class.blink::StringResource16"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource16", %"class.blink::StringResource16"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  %5 = bitcast %"class.WTF::StringImpl"* %4 to i16*
  ret i16* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N5blink16StringResource16D1Ev(%"class.blink::StringResource16"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource16", %"class.blink::StringResource16"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.WTF::AtomicString"* %2 to %"class.blink::StringResourceBase"*
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %3) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N5blink16StringResource16D0Ev(%"class.blink::StringResource16"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource16", %"class.blink::StringResource16"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.WTF::AtomicString"* %2 to %"class.blink::StringResourceBase"*
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %3) #9
  %4 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  tail call void @free(i8* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZThn32_NK5blink16StringResource164dataEv(%"class.blink::StringResource16"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource16", %"class.blink::StringResource16"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %6 = bitcast %"class.WTF::StringImpl"* %5 to i16*
  ret i16* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZThn32_NK5blink16StringResource166lengthEv(%"class.blink::StringResource16"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource16", %"class.blink::StringResource16"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  ret i64 %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20StringResource16BaseD2Ev(%"class.blink::StringResource16Base"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringResource16Base", %"class.blink::StringResource16Base"* %0, i64 0, i32 0
  tail call void @_ZN5blink18StringResourceBaseD2Ev(%"class.blink::StringResourceBase"* %2) #9
  ret void
}

declare void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"*, i16*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18StringResourceBaseC2ERKN3WTF12AtomicStringE(%"class.blink::StringResourceBase"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink18StringResourceBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #9
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %27 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #9
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #9
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %25, %29, %44
  %47 = getelementptr inbounds %"class.blink::StringResourceBase", %"class.blink::StringResourceBase"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %47, align 8
  %48 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, i64 2, i64 1
  %60 = mul nuw nsw i64 %59, %54
  br label %61

61:                                               ; preds = %46, %51
  %62 = phi i64 [ %60, %51 ], [ 0, %46 ]
  %63 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %48, i64 %62) #9
  ret void
}

declare i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 4001, i32 1}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 1, i32 1048575}
