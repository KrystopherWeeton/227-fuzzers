; ModuleID = '../../third_party/blink/renderer/core/html/parser/html_entity_parser.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/html_entity_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon = type { i8* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.blink::DecodedHTMLEntity" = type { i32, [4 x i16] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2", [128 x i8] }
%"class.WTF::VectorBufferBase.2" = type { i16*, i32, i32 }
%"class.blink::HTMLEntitySearch" = type { i16, %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"* }
%"struct.blink::HTMLEntityTableEntry" = type { i32, i16, i16, i16 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink17DecodedHTMLEntity6AppendEi = comdat any

$_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

@.str = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/core/html/parser/html_entity_parser.h\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"length < kMaxLength\00", align 1
@_ZN5blinkL28kWindowsLatin1ExtensionArrayE = internal unnamed_addr constant [32 x i16] [i16 8364, i16 129, i16 8218, i16 402, i16 8222, i16 8230, i16 8224, i16 8225, i16 710, i16 8240, i16 352, i16 8249, i16 338, i16 141, i16 381, i16 143, i16 144, i16 8216, i16 8217, i16 8220, i16 8221, i16 8226, i16 8211, i16 8212, i16 732, i16 8482, i16 353, i16 8250, i16 339, i16 157, i16 382, i16 376], align 16
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.6 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17ConsumeHTMLEntityERNS_15SegmentedStringERNS_17DecodedHTMLEntityERbDs(%"class.blink::SegmentedString"* dereferenceable(88), %"class.blink::DecodedHTMLEntity"* dereferenceable(12), i8* nocapture dereferenceable(1), i16 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.WTF::Vector", align 8
  %14 = alloca %"class.blink::HTMLEntitySearch", align 8
  %15 = alloca %"class.WTF::Vector", align 8
  %16 = alloca i16, align 2
  %17 = bitcast %"class.WTF::Vector"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 128, i1 false)
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 1, i64 0
  %20 = bitcast %"class.WTF::Vector"* %15 to i8**
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 7
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %533

26:                                               ; preds = %4
  %27 = bitcast i16* %16 to i8*
  %28 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 0, i32 4
  %29 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.blink::SegmentedString"* %0 to i16**
  %31 = icmp ne i16 %3, 0
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %0, i64 0, i32 0, i32 2
  br label %34

34:                                               ; preds = %26, %528
  %35 = phi i32 [ 0, %26 ], [ %530, %528 ]
  %36 = phi i32 [ 0, %26 ], [ %529, %528 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %27) #8
  store i16 -21846, i16* %16, align 2
  %37 = load i8, i8* %28, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = load i8*, i8** %29, align 8
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  br label %47

43:                                               ; preds = %34
  %44 = load i16*, i16** %30, align 8
  %45 = load i16, i16* %44, align 2
  %46 = bitcast i16* %44 to i8*
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi i8* [ %40, %39 ], [ %46, %43 ]
  %49 = phi i16 [ %42, %39 ], [ %45, %43 ]
  store i16 %49, i16* %16, align 2
  switch i32 %36, label %490 [
    i32 0, label %50
    i32 1, label %62
    i32 2, label %68
    i32 3, label %73
    i32 4, label %78
    i32 5, label %202
    i32 6, label %316
  ]

50:                                               ; preds = %47
  %51 = add i16 %49, -9
  %52 = icmp ult i16 %51, 52
  br i1 %52, label %521, label %53

53:                                               ; preds = %521, %50
  %54 = icmp eq i16 %49, %3
  %55 = and i1 %31, %54
  br i1 %55, label %526, label %56

56:                                               ; preds = %53
  %57 = icmp eq i16 %49, 35
  br i1 %57, label %490, label %58

58:                                               ; preds = %56
  %59 = and i16 %49, -33
  %60 = add i16 %59, -65
  %61 = icmp ult i16 %60, 26
  br i1 %61, label %528, label %526

62:                                               ; preds = %47
  switch i16 %49, label %64 [
    i16 120, label %490
    i16 88, label %63
  ]

63:                                               ; preds = %62
  br label %490

64:                                               ; preds = %62
  %65 = add i16 %49, -48
  %66 = icmp ult i16 %65, 10
  br i1 %66, label %528, label %67

67:                                               ; preds = %64
  call void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"* %0, i16 zeroext 35) #8
  br label %526

68:                                               ; preds = %47
  %69 = add i16 %49, -48
  %70 = icmp ult i16 %69, 10
  br i1 %70, label %528, label %71

71:                                               ; preds = %68
  switch i16 %49, label %72 [
    i16 102, label %528
    i16 101, label %528
    i16 100, label %528
    i16 99, label %528
    i16 98, label %528
    i16 97, label %528
    i16 70, label %528
    i16 69, label %528
    i16 68, label %528
    i16 67, label %528
    i16 66, label %528
    i16 65, label %528
  ]

72:                                               ; preds = %71
  call void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"* %0, i16 zeroext 120) #8
  call void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"* %0, i16 zeroext 35) #8
  br label %526

73:                                               ; preds = %47
  %74 = add i16 %49, -48
  %75 = icmp ult i16 %74, 10
  br i1 %75, label %528, label %76

76:                                               ; preds = %73
  switch i16 %49, label %77 [
    i16 102, label %528
    i16 101, label %528
    i16 100, label %528
    i16 99, label %528
    i16 98, label %528
    i16 97, label %528
    i16 70, label %528
    i16 69, label %528
    i16 68, label %528
    i16 67, label %528
    i16 66, label %528
    i16 65, label %528
  ]

77:                                               ; preds = %76
  call void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"* %0, i16 zeroext 88) #8
  call void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"* %0, i16 zeroext 35) #8
  br label %526

78:                                               ; preds = %47
  %79 = add i16 %49, -48
  %80 = icmp ult i16 %79, 10
  %81 = add i16 %49, -97
  br i1 %80, label %83, label %82

82:                                               ; preds = %78
  switch i16 %49, label %156 [
    i16 102, label %83
    i16 101, label %83
    i16 100, label %83
    i16 99, label %83
    i16 98, label %83
    i16 97, label %83
    i16 70, label %83
    i16 69, label %83
    i16 68, label %83
    i16 67, label %83
    i16 66, label %83
    i16 65, label %83
    i16 59, label %100
  ]

83:                                               ; preds = %82, %82, %82, %82, %82, %82, %82, %82, %82, %82, %82, %82, %78
  %84 = icmp eq i32 %35, -1
  br i1 %84, label %495, label %85

85:                                               ; preds = %83
  %86 = shl i32 %35, 4
  br i1 %80, label %96, label %87

87:                                               ; preds = %85
  %88 = icmp ult i16 %81, 26
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = add nsw i16 %49, -87
  br label %96

91:                                               ; preds = %87
  %92 = add nsw i16 %49, -65
  %93 = icmp ult i16 %92, 26
  %94 = add nsw i16 %49, -55
  %95 = select i1 %93, i16 %94, i16 0
  br label %96

96:                                               ; preds = %85, %89, %91
  %97 = phi i16 [ %95, %91 ], [ %90, %89 ], [ %79, %85 ]
  %98 = zext i16 %97 to i32
  %99 = add nsw i32 %86, %98
  br label %490

100:                                              ; preds = %82
  %101 = load i8*, i8** %33, align 8
  %102 = icmp ult i8* %48, %101
  br i1 %102, label %103, label %108, !prof !3

103:                                              ; preds = %100
  br i1 %38, label %106, label %104

104:                                              ; preds = %103
  %105 = getelementptr inbounds i8, i8* %48, i64 1
  store i8* %105, i8** %29, align 8
  br label %110

106:                                              ; preds = %103
  %107 = getelementptr inbounds i8, i8* %48, i64 2
  store i8* %107, i8** %29, align 8
  br label %110

108:                                              ; preds = %100
  %109 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %0) #8
  br label %110

110:                                              ; preds = %104, %106, %108
  %111 = add i32 %35, -1
  %112 = icmp ugt i32 %111, 1114110
  %113 = and i32 %35, -2048
  %114 = icmp eq i32 %113, 55296
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %129

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp ult i32 %118, 4
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %122 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #8
  %123 = load i32, i32* %117, align 4
  br label %124

124:                                              ; preds = %116, %120
  %125 = phi i32 [ %118, %116 ], [ %123, %120 ]
  %126 = add i32 %125, 1
  store i32 %126, i32* %117, align 4
  %127 = zext i32 %125 to i64
  %128 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 1, i64 %127
  store i16 -3, i16* %128, align 2
  br label %526

129:                                              ; preds = %110
  %130 = icmp ult i32 %35, 65536
  br i1 %130, label %131, label %155

131:                                              ; preds = %129
  %132 = and i32 %35, -32
  %133 = icmp eq i32 %132, 128
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = trunc i32 %35 to i16
  br label %141

136:                                              ; preds = %131
  %137 = add nsw i32 %35, -128
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN5blinkL28kWindowsLatin1ExtensionArrayE, i64 0, i64 %138
  %140 = load i16, i16* %139, align 2
  br label %141

141:                                              ; preds = %136, %134
  %142 = phi i16 [ %135, %134 ], [ %140, %136 ]
  %143 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp ult i32 %144, 4
  br i1 %145, label %150, label %146

146:                                              ; preds = %141
  %147 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #8
  %149 = load i32, i32* %143, align 4
  br label %150

150:                                              ; preds = %141, %146
  %151 = phi i32 [ %144, %141 ], [ %149, %146 ]
  %152 = add i32 %151, 1
  store i32 %152, i32* %143, align 4
  %153 = zext i32 %151 to i64
  %154 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 1, i64 %153
  store i16 %142, i16* %154, align 2
  br label %526

155:                                              ; preds = %129
  call void @_ZN5blink17DecodedHTMLEntity6AppendEi(%"class.blink::DecodedHTMLEntity"* %1, i32 %35) #8
  br label %526

156:                                              ; preds = %82
  %157 = add i32 %35, -1
  %158 = icmp ugt i32 %157, 1114110
  %159 = and i32 %35, -2048
  %160 = icmp eq i32 %159, 55296
  %161 = or i1 %158, %160
  br i1 %161, label %162, label %175

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = icmp ult i32 %164, 4
  br i1 %165, label %170, label %166

166:                                              ; preds = %162
  %167 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %168 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #8
  %169 = load i32, i32* %163, align 4
  br label %170

170:                                              ; preds = %162, %166
  %171 = phi i32 [ %164, %162 ], [ %169, %166 ]
  %172 = add i32 %171, 1
  store i32 %172, i32* %163, align 4
  %173 = zext i32 %171 to i64
  %174 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 1, i64 %173
  store i16 -3, i16* %174, align 2
  br label %526

175:                                              ; preds = %156
  %176 = icmp ult i32 %35, 65536
  br i1 %176, label %177, label %201

177:                                              ; preds = %175
  %178 = and i32 %35, -32
  %179 = icmp eq i32 %178, 128
  br i1 %179, label %182, label %180

180:                                              ; preds = %177
  %181 = trunc i32 %35 to i16
  br label %187

182:                                              ; preds = %177
  %183 = add nsw i32 %35, -128
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN5blinkL28kWindowsLatin1ExtensionArrayE, i64 0, i64 %184
  %186 = load i16, i16* %185, align 2
  br label %187

187:                                              ; preds = %182, %180
  %188 = phi i16 [ %181, %180 ], [ %186, %182 ]
  %189 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp ult i32 %190, 4
  br i1 %191, label %196, label %192

192:                                              ; preds = %187
  %193 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %194 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #8
  %195 = load i32, i32* %189, align 4
  br label %196

196:                                              ; preds = %187, %192
  %197 = phi i32 [ %190, %187 ], [ %195, %192 ]
  %198 = add i32 %197, 1
  store i32 %198, i32* %189, align 4
  %199 = zext i32 %197 to i64
  %200 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 1, i64 %199
  store i16 %188, i16* %200, align 2
  br label %526

201:                                              ; preds = %175
  call void @_ZN5blink17DecodedHTMLEntity6AppendEi(%"class.blink::DecodedHTMLEntity"* %1, i32 %35) #8
  br label %526

202:                                              ; preds = %47
  %203 = zext i16 %49 to i32
  %204 = add i16 %49, -48
  %205 = icmp ult i16 %204, 10
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = icmp eq i32 %35, -1
  br i1 %207, label %495, label %208

208:                                              ; preds = %206
  %209 = mul nsw i32 %35, 10
  %210 = add i32 %209, -48
  %211 = add i32 %210, %203
  br label %490

212:                                              ; preds = %202
  %213 = icmp eq i16 %49, 59
  br i1 %213, label %214, label %270

214:                                              ; preds = %212
  %215 = load i8*, i8** %33, align 8
  %216 = icmp ult i8* %48, %215
  br i1 %216, label %217, label %222, !prof !3

217:                                              ; preds = %214
  br i1 %38, label %220, label %218

218:                                              ; preds = %217
  %219 = getelementptr inbounds i8, i8* %48, i64 1
  store i8* %219, i8** %29, align 8
  br label %224

220:                                              ; preds = %217
  %221 = getelementptr inbounds i8, i8* %48, i64 2
  store i8* %221, i8** %29, align 8
  br label %224

222:                                              ; preds = %214
  %223 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %0) #8
  br label %224

224:                                              ; preds = %218, %220, %222
  %225 = add i32 %35, -1
  %226 = icmp ugt i32 %225, 1114110
  %227 = and i32 %35, -2048
  %228 = icmp eq i32 %227, 55296
  %229 = or i1 %226, %228
  br i1 %229, label %230, label %243

230:                                              ; preds = %224
  %231 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = icmp ult i32 %232, 4
  br i1 %233, label %238, label %234

234:                                              ; preds = %230
  %235 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %236 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #8
  %237 = load i32, i32* %231, align 4
  br label %238

238:                                              ; preds = %230, %234
  %239 = phi i32 [ %232, %230 ], [ %237, %234 ]
  %240 = add i32 %239, 1
  store i32 %240, i32* %231, align 4
  %241 = zext i32 %239 to i64
  %242 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 1, i64 %241
  store i16 -3, i16* %242, align 2
  br label %526

243:                                              ; preds = %224
  %244 = icmp ult i32 %35, 65536
  br i1 %244, label %245, label %269

245:                                              ; preds = %243
  %246 = and i32 %35, -32
  %247 = icmp eq i32 %246, 128
  br i1 %247, label %250, label %248

248:                                              ; preds = %245
  %249 = trunc i32 %35 to i16
  br label %255

250:                                              ; preds = %245
  %251 = add nsw i32 %35, -128
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN5blinkL28kWindowsLatin1ExtensionArrayE, i64 0, i64 %252
  %254 = load i16, i16* %253, align 2
  br label %255

255:                                              ; preds = %250, %248
  %256 = phi i16 [ %249, %248 ], [ %254, %250 ]
  %257 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp ult i32 %258, 4
  br i1 %259, label %264, label %260

260:                                              ; preds = %255
  %261 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %262 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #8
  %263 = load i32, i32* %257, align 4
  br label %264

264:                                              ; preds = %255, %260
  %265 = phi i32 [ %258, %255 ], [ %263, %260 ]
  %266 = add i32 %265, 1
  store i32 %266, i32* %257, align 4
  %267 = zext i32 %265 to i64
  %268 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 1, i64 %267
  store i16 %256, i16* %268, align 2
  br label %526

269:                                              ; preds = %243
  call void @_ZN5blink17DecodedHTMLEntity6AppendEi(%"class.blink::DecodedHTMLEntity"* %1, i32 %35) #8
  br label %526

270:                                              ; preds = %212
  %271 = add i32 %35, -1
  %272 = icmp ugt i32 %271, 1114110
  %273 = and i32 %35, -2048
  %274 = icmp eq i32 %273, 55296
  %275 = or i1 %272, %274
  br i1 %275, label %276, label %289

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = icmp ult i32 %278, 4
  br i1 %279, label %284, label %280

280:                                              ; preds = %276
  %281 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %282 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #8
  %283 = load i32, i32* %277, align 4
  br label %284

284:                                              ; preds = %276, %280
  %285 = phi i32 [ %278, %276 ], [ %283, %280 ]
  %286 = add i32 %285, 1
  store i32 %286, i32* %277, align 4
  %287 = zext i32 %285 to i64
  %288 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 1, i64 %287
  store i16 -3, i16* %288, align 2
  br label %526

289:                                              ; preds = %270
  %290 = icmp ult i32 %35, 65536
  br i1 %290, label %291, label %315

291:                                              ; preds = %289
  %292 = and i32 %35, -32
  %293 = icmp eq i32 %292, 128
  br i1 %293, label %296, label %294

294:                                              ; preds = %291
  %295 = trunc i32 %35 to i16
  br label %301

296:                                              ; preds = %291
  %297 = add nsw i32 %35, -128
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN5blinkL28kWindowsLatin1ExtensionArrayE, i64 0, i64 %298
  %300 = load i16, i16* %299, align 2
  br label %301

301:                                              ; preds = %296, %294
  %302 = phi i16 [ %295, %294 ], [ %300, %296 ]
  %303 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = icmp ult i32 %304, 4
  br i1 %305, label %310, label %306

306:                                              ; preds = %301
  %307 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %308 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #8
  %309 = load i32, i32* %303, align 4
  br label %310

310:                                              ; preds = %301, %306
  %311 = phi i32 [ %304, %301 ], [ %309, %306 ]
  %312 = add i32 %311, 1
  store i32 %312, i32* %303, align 4
  %313 = zext i32 %311 to i64
  %314 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %1, i64 0, i32 1, i64 %313
  store i16 %302, i16* %314, align 2
  br label %526

315:                                              ; preds = %289
  call void @_ZN5blink17DecodedHTMLEntity6AppendEi(%"class.blink::DecodedHTMLEntity"* %1, i32 %35) #8
  br label %526

316:                                              ; preds = %47
  %317 = bitcast %"class.WTF::Vector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %317) #8
  %318 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %318, i8 -86, i64 128, i1 false) #8
  %319 = bitcast %"class.WTF::Vector"* %13 to i8**
  store i8* %318, i8** %319, align 8
  %320 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %320, align 8
  %321 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %321, align 4
  %322 = bitcast %"class.blink::HTMLEntitySearch"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %322) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %322, i8 -86, i64 32, i1 false) #8
  call void @_ZN5blink16HTMLEntitySearchC1Ev(%"class.blink::HTMLEntitySearch"* nonnull %14) #8
  %323 = load i8, i8* %23, align 1, !range !2
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %328

325:                                              ; preds = %316
  %326 = getelementptr inbounds %"class.blink::HTMLEntitySearch", %"class.blink::HTMLEntitySearch"* %14, i64 0, i32 2
  %327 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 0
  br label %329

328:                                              ; preds = %368, %316
  store i8 1, i8* %2, align 1
  br label %375

329:                                              ; preds = %368, %325
  %330 = load i8, i8* %28, align 1, !range !2
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %336, label %332

332:                                              ; preds = %329
  %333 = load i8*, i8** %29, align 8
  %334 = load i8, i8* %333, align 1
  %335 = zext i8 %334 to i16
  br label %339

336:                                              ; preds = %329
  %337 = load i16*, i16** %30, align 8
  %338 = load i16, i16* %337, align 2
  br label %339

339:                                              ; preds = %336, %332
  %340 = phi i16 [ %335, %332 ], [ %338, %336 ]
  store i16 %340, i16* %16, align 2
  call void @_ZN5blink16HTMLEntitySearch7AdvanceEDs(%"class.blink::HTMLEntitySearch"* nonnull %14, i16 zeroext %340) #8
  %341 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %326, align 8
  %342 = icmp eq %"struct.blink::HTMLEntityTableEntry"* %341, null
  br i1 %342, label %371, label %343

343:                                              ; preds = %339
  %344 = load i32, i32* %321, align 4
  %345 = load i32, i32* %320, align 8
  %346 = icmp eq i32 %344, %345
  br i1 %346, label %354, label %347, !prof !4

347:                                              ; preds = %343
  %348 = load i16*, i16** %327, align 8
  %349 = zext i32 %344 to i64
  %350 = getelementptr inbounds i16, i16* %348, i64 %349
  %351 = load i16, i16* %16, align 2
  store i16 %351, i16* %350, align 2
  %352 = load i32, i32* %321, align 4
  %353 = add i32 %352, 1
  store i32 %353, i32* %321, align 4
  br label %355

354:                                              ; preds = %343
  call void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector"* nonnull %13, i16* nonnull dereferenceable(2) %16) #8
  br label %355

355:                                              ; preds = %354, %347
  %356 = load i8*, i8** %29, align 8
  %357 = load i8*, i8** %33, align 8
  %358 = icmp ult i8* %356, %357
  br i1 %358, label %359, label %366, !prof !3

359:                                              ; preds = %355
  %360 = load i8, i8* %28, align 1, !range !2
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %364, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds i8, i8* %356, i64 1
  store i8* %363, i8** %29, align 8
  br label %368

364:                                              ; preds = %359
  %365 = getelementptr inbounds i8, i8* %356, i64 2
  store i8* %365, i8** %29, align 8
  br label %368

366:                                              ; preds = %355
  %367 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %0) #8
  br label %368

368:                                              ; preds = %366, %364, %362
  %369 = load i8, i8* %23, align 1, !range !2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %329, label %328

371:                                              ; preds = %339
  %372 = load i8, i8* %23, align 1
  %373 = icmp ne i8 %372, 0
  %374 = zext i1 %373 to i8
  store i8 %374, i8* %2, align 1
  br i1 %373, label %375, label %376

375:                                              ; preds = %371, %328
  call fastcc void @_ZN5blinkL19UnconsumeCharactersERNS_15SegmentedStringERN3WTF6VectorIDsLj64ENS2_18PartitionAllocatorEEE(%"class.blink::SegmentedString"* dereferenceable(88) %0, %"class.WTF::Vector"* nonnull dereferenceable(144) %13) #8
  br label %477

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::HTMLEntitySearch", %"class.blink::HTMLEntitySearch"* %14, i64 0, i32 1
  %378 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %377, align 8
  %379 = icmp eq %"struct.blink::HTMLEntityTableEntry"* %378, null
  br i1 %379, label %380, label %381

380:                                              ; preds = %376
  call fastcc void @_ZN5blinkL19UnconsumeCharactersERNS_15SegmentedStringERN3WTF6VectorIDsLj64ENS2_18PartitionAllocatorEEE(%"class.blink::SegmentedString"* dereferenceable(88) %0, %"class.WTF::Vector"* nonnull dereferenceable(144) %13) #8
  br label %477

381:                                              ; preds = %376
  %382 = getelementptr inbounds %"struct.blink::HTMLEntityTableEntry", %"struct.blink::HTMLEntityTableEntry"* %378, i64 0, i32 3
  %383 = load i16, i16* %382, align 4
  %384 = getelementptr inbounds %"class.blink::HTMLEntitySearch", %"class.blink::HTMLEntitySearch"* %14, i64 0, i32 0
  %385 = load i16, i16* %384, align 8
  %386 = icmp eq i16 %383, %385
  br i1 %386, label %449, label %387

387:                                              ; preds = %381
  call fastcc void @_ZN5blinkL19UnconsumeCharactersERNS_15SegmentedStringERN3WTF6VectorIDsLj64ENS2_18PartitionAllocatorEEE(%"class.blink::SegmentedString"* dereferenceable(88) %0, %"class.WTF::Vector"* nonnull dereferenceable(144) %13) #8
  %388 = load i32, i32* %320, align 8
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %402, label %390

390:                                              ; preds = %387
  %391 = load i32, i32* %321, align 4
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %394, label %393

393:                                              ; preds = %390
  store i32 0, i32* %321, align 4
  br label %394

394:                                              ; preds = %393, %390
  %395 = load i16*, i16** %327, align 8
  %396 = ptrtoint i8* %318 to i64
  %397 = bitcast %"class.WTF::Vector"* %13 to i64*
  store atomic i64 %396, i64* %397 monotonic, align 8
  store i32 64, i32* %320, align 8
  %398 = bitcast i8* %318 to i16*
  %399 = icmp eq i16* %395, %398
  br i1 %399, label %402, label %400, !prof !3

400:                                              ; preds = %394
  %401 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIDsLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1"* nonnull %401, i16* %395) #8
  br label %402

402:                                              ; preds = %400, %394, %387
  %403 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %377, align 8
  %404 = getelementptr inbounds %"struct.blink::HTMLEntityTableEntry", %"struct.blink::HTMLEntityTableEntry"* %403, i64 0, i32 3
  %405 = load i16, i16* %404, align 4
  %406 = call i8* @_ZN5blink15HTMLEntityTable12EntityStringERKNS_20HTMLEntityTableEntryE(%"struct.blink::HTMLEntityTableEntry"* dereferenceable(12) %403) #8
  br label %407

407:                                              ; preds = %445, %402
  %408 = phi i16 [ 0, %402 ], [ %446, %445 ]
  %409 = load i8, i8* %28, align 1, !range !2
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %415, label %411

411:                                              ; preds = %407
  %412 = load i8*, i8** %29, align 8
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i16
  br label %418

415:                                              ; preds = %407
  %416 = load i16*, i16** %30, align 8
  %417 = load i16, i16* %416, align 2
  br label %418

418:                                              ; preds = %415, %411
  %419 = phi i16 [ %414, %411 ], [ %417, %415 ]
  store i16 %419, i16* %16, align 2
  %420 = icmp eq i16 %408, %405
  br i1 %420, label %447, label %421

421:                                              ; preds = %418
  %422 = load i32, i32* %321, align 4
  %423 = load i32, i32* %320, align 8
  %424 = icmp eq i32 %422, %423
  br i1 %424, label %431, label %425, !prof !4

425:                                              ; preds = %421
  %426 = load i16*, i16** %327, align 8
  %427 = zext i32 %422 to i64
  %428 = getelementptr inbounds i16, i16* %426, i64 %427
  store i16 %419, i16* %428, align 2
  %429 = load i32, i32* %321, align 4
  %430 = add i32 %429, 1
  store i32 %430, i32* %321, align 4
  br label %432

431:                                              ; preds = %421
  call void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector"* nonnull %13, i16* nonnull dereferenceable(2) %16) #8
  br label %432

432:                                              ; preds = %431, %425
  %433 = load i8*, i8** %29, align 8
  %434 = load i8*, i8** %33, align 8
  %435 = icmp ult i8* %433, %434
  br i1 %435, label %436, label %443, !prof !3

436:                                              ; preds = %432
  %437 = load i8, i8* %28, align 1, !range !2
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %436
  %440 = getelementptr inbounds i8, i8* %433, i64 1
  store i8* %440, i8** %29, align 8
  br label %445

441:                                              ; preds = %436
  %442 = getelementptr inbounds i8, i8* %433, i64 2
  store i8* %442, i8** %29, align 8
  br label %445

443:                                              ; preds = %432
  %444 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %0) #8
  br label %445

445:                                              ; preds = %443, %441, %439
  %446 = add i16 %408, 1
  br label %407

447:                                              ; preds = %418
  %448 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %377, align 8
  br label %449

449:                                              ; preds = %447, %381
  %450 = phi %"struct.blink::HTMLEntityTableEntry"* [ %448, %447 ], [ %378, %381 ]
  %451 = call zeroext i8 @_ZNK5blink20HTMLEntityTableEntry13LastCharacterEv(%"struct.blink::HTMLEntityTableEntry"* %450) #8
  %452 = icmp ne i8 %451, 59
  %453 = and i1 %31, %452
  br i1 %453, label %454, label %466

454:                                              ; preds = %449
  %455 = load i16, i16* %16, align 2
  %456 = add i16 %455, -48
  %457 = icmp ult i16 %456, 10
  %458 = add i16 %455, -97
  %459 = icmp ult i16 %458, 26
  %460 = or i1 %457, %459
  br i1 %460, label %476, label %461

461:                                              ; preds = %454
  %462 = add i16 %455, -65
  %463 = icmp ult i16 %462, 26
  %464 = icmp eq i16 %455, 61
  %465 = or i1 %464, %463
  br i1 %465, label %476, label %466

466:                                              ; preds = %461, %449
  %467 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %377, align 8
  %468 = getelementptr inbounds %"struct.blink::HTMLEntityTableEntry", %"struct.blink::HTMLEntityTableEntry"* %467, i64 0, i32 0
  %469 = load i32, i32* %468, align 4
  call void @_ZN5blink17DecodedHTMLEntity6AppendEi(%"class.blink::DecodedHTMLEntity"* %1, i32 %469) #8
  %470 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %377, align 8
  %471 = getelementptr inbounds %"struct.blink::HTMLEntityTableEntry", %"struct.blink::HTMLEntityTableEntry"* %470, i64 0, i32 1
  %472 = load i16, i16* %471, align 4
  %473 = icmp eq i16 %472, 0
  br i1 %473, label %477, label %474

474:                                              ; preds = %466
  %475 = zext i16 %472 to i32
  call void @_ZN5blink17DecodedHTMLEntity6AppendEi(%"class.blink::DecodedHTMLEntity"* %1, i32 %475) #8
  br label %477

476:                                              ; preds = %461, %454
  call fastcc void @_ZN5blinkL19UnconsumeCharactersERNS_15SegmentedStringERN3WTF6VectorIDsLj64ENS2_18PartitionAllocatorEEE(%"class.blink::SegmentedString"* dereferenceable(88) %0, %"class.WTF::Vector"* nonnull dereferenceable(144) %13) #8
  br label %477

477:                                              ; preds = %476, %474, %466, %380, %375
  %478 = phi i1 [ false, %375 ], [ false, %476 ], [ false, %380 ], [ true, %466 ], [ true, %474 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %322) #8
  %479 = load i32, i32* %321, align 4
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %482, label %481, !prof !4

481:                                              ; preds = %477
  store i32 0, i32* %321, align 4
  br label %482

482:                                              ; preds = %481, %477
  %483 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 0
  %484 = load i16*, i16** %483, align 8
  %485 = bitcast i8* %318 to i16*
  %486 = icmp eq i16* %484, %485
  br i1 %486, label %489, label %487, !prof !3

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIDsLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1"* nonnull %488, i16* %484) #8
  br label %489

489:                                              ; preds = %482, %487
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %317) #8
  br label %526

490:                                              ; preds = %62, %56, %208, %96, %47, %63
  %491 = phi i32 [ %36, %47 ], [ 5, %208 ], [ 4, %96 ], [ 3, %63 ], [ 1, %56 ], [ 2, %62 ]
  %492 = phi i32 [ %35, %47 ], [ %211, %208 ], [ %99, %96 ], [ %35, %63 ], [ %35, %56 ], [ %35, %62 ]
  %493 = icmp sgt i32 %492, 1114111
  %494 = select i1 %493, i32 -1, i32 %492
  br label %495

495:                                              ; preds = %490, %83, %206
  %496 = phi i32 [ 4, %83 ], [ 5, %206 ], [ %491, %490 ]
  %497 = phi i32 [ -1, %83 ], [ -1, %206 ], [ %494, %490 ]
  %498 = load i32, i32* %22, align 4
  %499 = load i32, i32* %21, align 8
  %500 = icmp eq i32 %498, %499
  br i1 %500, label %507, label %501, !prof !4

501:                                              ; preds = %495
  %502 = load i16*, i16** %32, align 8
  %503 = zext i32 %498 to i64
  %504 = getelementptr inbounds i16, i16* %502, i64 %503
  store i16 %49, i16* %504, align 2
  %505 = load i32, i32* %22, align 4
  %506 = add i32 %505, 1
  store i32 %506, i32* %22, align 4
  br label %508

507:                                              ; preds = %495
  call void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector"* nonnull %15, i16* nonnull dereferenceable(2) %16) #8
  br label %508

508:                                              ; preds = %501, %507
  %509 = load i8*, i8** %29, align 8
  %510 = load i8*, i8** %33, align 8
  %511 = icmp ult i8* %509, %510
  br i1 %511, label %512, label %519, !prof !3

512:                                              ; preds = %508
  %513 = load i8, i8* %28, align 1, !range !2
  %514 = icmp eq i8 %513, 0
  br i1 %514, label %517, label %515

515:                                              ; preds = %512
  %516 = getelementptr inbounds i8, i8* %509, i64 1
  store i8* %516, i8** %29, align 8
  br label %528

517:                                              ; preds = %512
  %518 = getelementptr inbounds i8, i8* %509, i64 2
  store i8* %518, i8** %29, align 8
  br label %528

519:                                              ; preds = %508
  %520 = call zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"* %0) #8
  br label %528

521:                                              ; preds = %50
  %522 = zext i16 %51 to i64
  %523 = lshr i64 2251800358944779, %522
  %524 = and i64 %523, 1
  %525 = icmp eq i64 %524, 0
  br i1 %525, label %53, label %526

526:                                              ; preds = %521, %58, %53, %489, %77, %72, %67, %124, %150, %155, %170, %196, %201, %238, %264, %269, %284, %310, %315
  %527 = phi i1 [ true, %315 ], [ true, %310 ], [ true, %284 ], [ true, %269 ], [ true, %264 ], [ true, %238 ], [ true, %201 ], [ true, %196 ], [ true, %170 ], [ true, %155 ], [ true, %150 ], [ true, %124 ], [ false, %67 ], [ false, %72 ], [ false, %77 ], [ %478, %489 ], [ false, %53 ], [ false, %58 ], [ false, %521 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %27) #8
  br label %534

528:                                              ; preds = %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %73, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %71, %68, %519, %517, %515, %64, %58
  %529 = phi i32 [ 6, %58 ], [ 5, %64 ], [ %496, %515 ], [ %496, %517 ], [ %496, %519 ], [ 4, %71 ], [ 4, %76 ], [ 4, %68 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %71 ], [ 4, %73 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ], [ 4, %76 ]
  %530 = phi i32 [ %35, %58 ], [ %35, %64 ], [ %497, %515 ], [ %497, %517 ], [ %497, %519 ], [ %35, %71 ], [ %35, %76 ], [ %35, %68 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %71 ], [ %35, %73 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ], [ %35, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %27) #8
  %531 = load i8, i8* %23, align 1, !range !2
  %532 = icmp eq i8 %531, 0
  br i1 %532, label %34, label %533

533:                                              ; preds = %528, %4
  store i8 1, i8* %2, align 1
  call fastcc void @_ZN5blinkL19UnconsumeCharactersERNS_15SegmentedStringERN3WTF6VectorIDsLj64ENS2_18PartitionAllocatorEEE(%"class.blink::SegmentedString"* dereferenceable(88) %0, %"class.WTF::Vector"* nonnull dereferenceable(144) %15)
  br label %534

534:                                              ; preds = %526, %533
  %535 = phi i1 [ false, %533 ], [ %527, %526 ]
  %536 = load i32, i32* %22, align 4
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %539, label %538, !prof !4

538:                                              ; preds = %534
  store i32 0, i32* %22, align 4
  br label %539

539:                                              ; preds = %538, %534
  %540 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0, i32 0, i32 0
  %541 = load i16*, i16** %540, align 8
  %542 = bitcast i8* %19 to i16*
  %543 = icmp eq i16* %541, %542
  br i1 %543, label %546, label %544, !prof !3

544:                                              ; preds = %539
  %545 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %15, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIDsLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1"* nonnull %545, i16* %541) #8
  br label %546

546:                                              ; preds = %539, %544
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %17) #8
  ret i1 %535
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL19UnconsumeCharactersERNS_15SegmentedStringERN3WTF6VectorIDsLj64ENS2_18PartitionAllocatorEEE(%"class.blink::SegmentedString"* dereferenceable(88), %"class.WTF::Vector"* dereferenceable(144)) unnamed_addr #0 {
  %3 = alloca %"class.blink::SegmentedString", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %14 [
    i32 1, label %6
    i32 2, label %9
  ]

6:                                                ; preds = %2
  %7 = tail call dereferenceable(2) i16* @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 0) #8
  %8 = load i16, i16* %7, align 2
  tail call void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"* %0, i16 zeroext %8) #8
  br label %163

9:                                                ; preds = %2
  %10 = tail call dereferenceable(2) i16* @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 1) #8
  %11 = load i16, i16* %10, align 2
  tail call void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"* %0, i16 zeroext %11) #8
  %12 = tail call dereferenceable(2) i16* @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 0) #8
  %13 = load i16, i16* %12, align 2
  tail call void @_ZN5blink15SegmentedString4PushEDs(%"class.blink::SegmentedString"* %0, i16 zeroext %13) #8
  br label %163

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::SegmentedString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %15) #8
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16* %19, i32 %5) #8
  br label %41

21:                                               ; preds = %14
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #8
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !4

38:                                               ; preds = %29
  tail call void @llvm.trap() #8
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %17, %21, %24, %39
  %42 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %22, %39 ], [ %22, %24 ], [ %20, %17 ]
  %43 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 3
  store i8 1, i8* %43, align 8
  %44 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 4
  store i8 1, i8* %44, align 1
  %45 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %46, label %97, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #8
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !4

61:                                               ; preds = %52
  tail call void @llvm.trap() #8
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %97, label %68

68:                                               ; preds = %64
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %68
  store i8 1, i8* %44, align 1
  %75 = icmp eq %"class.WTF::StringImpl"* %69, null
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 1
  %77 = bitcast %"class.WTF::StringImpl"* %76 to i8*
  %78 = select i1 %75, i8* null, i8* %77
  %79 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %79, align 8
  %80 = zext i32 %66 to i64
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  %82 = getelementptr inbounds i8, i8* %81, i64 -1
  %83 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  store i8* %82, i8** %83, align 8
  %84 = ptrtoint i8* %78 to i64
  br label %100

85:                                               ; preds = %68
  store i8 0, i8* %44, align 1
  %86 = icmp eq %"class.WTF::StringImpl"* %69, null
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 1
  %88 = bitcast %"class.WTF::StringImpl"* %87 to i16*
  %89 = select i1 %86, i16* null, i16* %88
  %90 = bitcast %"class.blink::SegmentedString"* %3 to i16**
  store i16* %89, i16** %90, align 8
  %91 = zext i32 %66 to i64
  %92 = getelementptr inbounds i16, i16* %89, i64 %91
  %93 = getelementptr inbounds i16, i16* %92, i64 -1
  %94 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  %95 = bitcast i8** %94 to i16**
  store i16* %93, i16** %95, align 8
  %96 = ptrtoint i16* %89 to i64
  br label %100

97:                                               ; preds = %41, %64
  store i8 1, i8* %44, align 1
  %98 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %98, align 8
  %99 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 2
  store i8* null, i8** %99, align 8
  br label %100

100:                                              ; preds = %97, %85, %74
  %101 = phi i64 [ %84, %74 ], [ %96, %85 ], [ 0, %97 ]
  %102 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 0, i32 1
  %103 = bitcast i8** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 1
  store i32 0, i32* %104, align 8
  %105 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 2
  store i32 0, i32* %105, align 4
  %106 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 3
  store i32 0, i32* %106, align 8
  %107 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5
  %108 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 7
  %109 = bitcast %"class.WTF::Deque"* %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 25, i1 false) #8
  br i1 %46, label %115, label %110

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  %114 = zext i1 %113 to i8
  br label %115

115:                                              ; preds = %100, %110
  %116 = phi i8 [ %114, %110 ], [ 1, %100 ]
  store i8 %116, i8* %108, align 1
  call void @_ZN5blink15SegmentedString7PrependERKS0_NS0_11PrependTypeE(%"class.blink::SegmentedString"* %0, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %3, i32 1) #8
  %117 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %107, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %117, align 8
  %119 = icmp eq %"class.blink::SegmentedSubstring"* %118, null
  br i1 %119, label %132, label %120

120:                                              ; preds = %115
  %121 = bitcast %"class.blink::SegmentedSubstring"* %118 to i8*
  %122 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %3, i64 0, i32 5, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %123, %125
  br i1 %126, label %130, label %127

127:                                              ; preds = %120
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %107) #8
  %128 = bitcast %"class.WTF::Deque"* %107 to i8**
  %129 = load i8*, i8** %128, align 8
  br label %130

130:                                              ; preds = %127, %120
  %131 = phi i8* [ %129, %127 ], [ %121, %120 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %131) #8
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %117, align 8
  br label %132

132:                                              ; preds = %130, %115
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #8
  br label %148

148:                                              ; preds = %132, %144, %147
  br i1 %46, label %162, label %149

149:                                              ; preds = %148
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #8
  br label %162

162:                                              ; preds = %148, %158, %161
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %15) #8
  br label %163

163:                                              ; preds = %9, %162, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink29DecodeNamedEntityToUCharArrayEPKcPDs(i8* nocapture readonly, i16* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::HTMLEntitySearch", align 8
  %4 = bitcast %"class.blink::HTMLEntitySearch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  call void @_ZN5blink16HTMLEntitySearchC1Ev(%"class.blink::HTMLEntitySearch"* nonnull %3) #8
  %5 = getelementptr inbounds %"class.blink::HTMLEntitySearch", %"class.blink::HTMLEntitySearch"* %3, i64 0, i32 2
  br label %6

6:                                                ; preds = %10, %2
  %7 = phi i8* [ %0, %2 ], [ %11, %10 ]
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = sext i8 %8 to i16
  call void @_ZN5blink16HTMLEntitySearch7AdvanceEDs(%"class.blink::HTMLEntitySearch"* nonnull %3, i16 zeroext %12) #8
  %13 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %5, align 8
  %14 = icmp eq %"struct.blink::HTMLEntityTableEntry"* %13, null
  br i1 %14, label %42, label %6

15:                                               ; preds = %6
  call void @_ZN5blink16HTMLEntitySearch7AdvanceEDs(%"class.blink::HTMLEntitySearch"* nonnull %3, i16 zeroext 59) #8
  %16 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %5, align 8
  %17 = icmp eq %"struct.blink::HTMLEntityTableEntry"* %16, null
  br i1 %17, label %42, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::HTMLEntitySearch", %"class.blink::HTMLEntitySearch"* %3, i64 0, i32 1
  %20 = load %"struct.blink::HTMLEntityTableEntry"*, %"struct.blink::HTMLEntityTableEntry"** %19, align 8
  %21 = getelementptr inbounds %"struct.blink::HTMLEntityTableEntry", %"struct.blink::HTMLEntityTableEntry"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %22, 65536
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = trunc i32 %22 to i16
  store i16 %25, i16* %1, align 2
  br label %34

26:                                               ; preds = %18
  %27 = lshr i32 %22, 10
  %28 = trunc i32 %27 to i16
  %29 = add i16 %28, -10304
  store i16 %29, i16* %1, align 2
  %30 = trunc i32 %22 to i16
  %31 = and i16 %30, 1023
  %32 = or i16 %31, -9216
  %33 = getelementptr inbounds i16, i16* %1, i64 1
  store i16 %32, i16* %33, align 2
  br label %34

34:                                               ; preds = %24, %26
  %35 = phi i64 [ 1, %24 ], [ 2, %26 ]
  %36 = getelementptr inbounds %"struct.blink::HTMLEntityTableEntry", %"struct.blink::HTMLEntityTableEntry"* %20, i64 0, i32 1
  %37 = load i16, i16* %36, align 4
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds i16, i16* %1, i64 %35
  store i16 %37, i16* %40, align 2
  %41 = add nuw nsw i64 %35, 1
  br label %42

42:                                               ; preds = %10, %15, %39, %34
  %43 = phi i64 [ 0, %15 ], [ %41, %39 ], [ %35, %34 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8
  ret i64 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink16HTMLEntitySearchC1Ev(%"class.blink::HTMLEntitySearch"*) unnamed_addr #2

declare void @_ZN5blink16HTMLEntitySearch7AdvanceEDs(%"class.blink::HTMLEntitySearch"*, i16 zeroext) local_unnamed_addr #2

declare zeroext i16 @_ZN5blink15SegmentedString16AdvanceSubstringEv(%"class.blink::SegmentedString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DecodedHTMLEntity6AppendEi(%"class.blink::DecodedHTMLEntity"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp ult i32 %1, 65536
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = trunc i32 %1 to i16
  %9 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %10, 4
  br i1 %11, label %40, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  %15 = load i32, i32* %9, align 4
  br label %40

16:                                               ; preds = %2
  %17 = lshr i32 %1, 10
  %18 = trunc i32 %17 to i16
  %19 = add i16 %18, -10304
  %20 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp ult i32 %21, 4
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %26 = load i32, i32* %20, align 4
  br label %27

27:                                               ; preds = %16, %23
  %28 = phi i32 [ %21, %16 ], [ %26, %23 ]
  %29 = add i32 %28, 1
  store i32 %29, i32* %20, align 4
  %30 = zext i32 %28 to i64
  %31 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %0, i64 0, i32 1, i64 %30
  store i16 %19, i16* %31, align 2
  %32 = trunc i32 %1 to i16
  %33 = and i16 %32, 1023
  %34 = or i16 %33, -9216
  %35 = icmp ult i32 %29, 4
  br i1 %35, label %40, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #8
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %39 = load i32, i32* %20, align 4
  br label %40

40:                                               ; preds = %36, %27, %12, %7
  %41 = phi i32 [ %10, %7 ], [ %15, %12 ], [ %29, %27 ], [ %39, %36 ]
  %42 = phi i32* [ %9, %7 ], [ %9, %12 ], [ %20, %27 ], [ %20, %36 ]
  %43 = phi i16 [ %8, %7 ], [ %8, %12 ], [ %34, %27 ], [ %34, %36 ]
  %44 = add i32 %41, 1
  store i32 %44, i32* %42, align 4
  %45 = zext i32 %41 to i64
  %46 = getelementptr inbounds %"class.blink::DecodedHTMLEntity", %"class.blink::DecodedHTMLEntity"* %0, i64 0, i32 1, i64 %45
  store i16 %43, i16* %46, align 2
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN5blink15HTMLEntityTable12EntityStringERKNS_20HTMLEntityTableEntryE(%"struct.blink::HTMLEntityTableEntry"* dereferenceable(12)) local_unnamed_addr #2

declare zeroext i8 @_ZNK5blink20HTMLEntityTableEntry13LastCharacterEv(%"struct.blink::HTMLEntityTableEntry"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 65
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1"* %19, i16* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #8
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1"* %53, i16* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1"*, i16*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink15SegmentedString7PrependERKS0_NS0_11PrependTypeE(%"class.blink::SegmentedString"*, %"class.blink::SegmentedString"* dereferenceable(88), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(2) i16* @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  ret i16* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %9
  br i1 %6, label %37, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %95, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi %"class.blink::SegmentedSubstring"* [ %35, %34 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #8
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 1
  %36 = icmp eq %"class.blink::SegmentedSubstring"* %35, %10
  br i1 %36, label %95, label %16

37:                                               ; preds = %1
  %38 = icmp eq i32 %5, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %37, %57
  %40 = phi %"class.blink::SegmentedSubstring"* [ %58, %57 ], [ %8, %37 ]
  %41 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #8
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 1
  %59 = icmp eq %"class.blink::SegmentedSubstring"* %58, %10
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  %61 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %62 = load i32, i32* %2, align 8
  br label %63

63:                                               ; preds = %60, %37
  %64 = phi i32 [ %62, %60 ], [ %3, %37 ]
  %65 = phi %"class.blink::SegmentedSubstring"* [ %61, %60 ], [ %8, %37 ]
  %66 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %68
  %70 = icmp eq i32 %64, %67
  br i1 %70, label %95, label %71

71:                                               ; preds = %63
  %72 = zext i32 %64 to i64
  %73 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %72
  br label %74

74:                                               ; preds = %71, %92
  %75 = phi %"class.blink::SegmentedSubstring"* [ %93, %92 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #8
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 1
  %94 = icmp eq %"class.blink::SegmentedSubstring"* %93, %69
  br i1 %94, label %95, label %74

95:                                               ; preds = %34, %92, %63, %11
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector"*, i16* dereferenceable(2)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #8
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #8
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 64
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 64, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj64ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
