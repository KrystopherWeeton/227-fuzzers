; ModuleID = '../../cc/trees/managed_memory_policy.cc'
source_filename = "../../cc/trees/managed_memory_policy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"struct.gpu::MemoryAllocation" = type <{ i64, i32, [4 x i8] }>

@_ZN2cc19ManagedMemoryPolicy25kDefaultNumResourcesLimitE = hidden local_unnamed_addr constant i64 10000000, align 8

@_ZN2cc19ManagedMemoryPolicyC1Em = hidden unnamed_addr alias void (%"struct.cc::ManagedMemoryPolicy"*, i64), void (%"struct.cc::ManagedMemoryPolicy"*, i64)* @_ZN2cc19ManagedMemoryPolicyC2Em
@_ZN2cc19ManagedMemoryPolicyC1ERKN3gpu16MemoryAllocationE = hidden unnamed_addr alias void (%"struct.cc::ManagedMemoryPolicy"*, %"struct.gpu::MemoryAllocation"*), void (%"struct.cc::ManagedMemoryPolicy"*, %"struct.gpu::MemoryAllocation"*)* @_ZN2cc19ManagedMemoryPolicyC2ERKN3gpu16MemoryAllocationE
@_ZN2cc19ManagedMemoryPolicyC1EmN3gpu16MemoryAllocation14PriorityCutoffEm = hidden unnamed_addr alias void (%"struct.cc::ManagedMemoryPolicy"*, i64, i32, i64), void (%"struct.cc::ManagedMemoryPolicy"*, i64, i32, i64)* @_ZN2cc19ManagedMemoryPolicyC2EmN3gpu16MemoryAllocation14PriorityCutoffEm

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc19ManagedMemoryPolicyC2Em(%"struct.cc::ManagedMemoryPolicy"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 1
  store i32 3, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 2
  store i64 10000000, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc19ManagedMemoryPolicyC2ERKN3gpu16MemoryAllocationE(%"struct.cc::ManagedMemoryPolicy"* nocapture, %"struct.gpu::MemoryAllocation"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gpu::MemoryAllocation", %"struct.gpu::MemoryAllocation"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.gpu::MemoryAllocation", %"struct.gpu::MemoryAllocation"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 2
  store i64 10000000, i64* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc19ManagedMemoryPolicyC2EmN3gpu16MemoryAllocation14PriorityCutoffEm(%"struct.cc::ManagedMemoryPolicy"* nocapture, i64, i32, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 2
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19ManagedMemoryPolicyeqERKS0_(%"struct.cc::ManagedMemoryPolicy"* nocapture readonly, %"struct.cc::ManagedMemoryPolicy"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %1, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br label %20

20:                                               ; preds = %14, %8, %2
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc19ManagedMemoryPolicyneERKS0_(%"struct.cc::ManagedMemoryPolicy"* nocapture readonly, %"struct.cc::ManagedMemoryPolicy"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.cc::ManagedMemoryPolicy", %"struct.cc::ManagedMemoryPolicy"* %1, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp ne i64 %16, %18
  br label %20

20:                                               ; preds = %2, %8, %14
  %21 = phi i1 [ true, %8 ], [ true, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2cc19ManagedMemoryPolicy37PriorityCutoffToTileMemoryLimitPolicyEN3gpu16MemoryAllocation14PriorityCutoffE(i32) local_unnamed_addr #3 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
