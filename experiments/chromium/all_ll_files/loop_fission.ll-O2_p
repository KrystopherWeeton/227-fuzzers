; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_fission.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_fission.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spvtools::opt::LoopDependenceAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.970", %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.std::__1::basic_ostream"*, %"class.std::__1::list" }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.168", %"class.std::__1::unordered_map.190", %"class.std::__1::unordered_map.217", i32, [4 x i8], %"class.std::__1::unordered_map.241", %"class.std::__1::unordered_map.265", %"class.std::__1::unique_ptr.289", %"class.std::__1::map.371", %"class.std::__1::map.382", %"class.std::__1::unordered_map.391", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.611", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.656", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.742", %"class.std::__1::unique_ptr.772", %"class.std::__1::unique_ptr.891", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.36", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.41", %"class.std::__1::vector.29", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.29", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.24" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.13" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::vector.16"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { i32*, i32*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i32* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.36", %"class.std::__1::vector.46", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.53", %"class.std::__1::unique_ptr.36", %"class.std::__1::vector.46" }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.36", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::unique_ptr.55"* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::unique_ptr.36"*, %"class.std::__1::unique_ptr.36"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::unique_ptr.36"* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::unique_ptr.43"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set.99", %"class.std::__1::unordered_map.107" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.80", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.95", [4 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82", %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { float }
%"class.std::__1::set.99" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.107" = type { %"class.std::__1::__hash_table.108" }
%"class.std::__1::__hash_table.108" = type <{ %"class.std::__1::unique_ptr.109", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base.112"** }
%"struct.std::__1::__hash_node_base.112" = type { %"struct.std::__1::__hash_node_base.112"* }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::__bucket_list_deallocator.114" }
%"class.std::__1::__bucket_list_deallocator.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base.112" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.141", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.141" = type { %"class.std::__1::__hash_table.142" }
%"class.std::__1::__hash_table.142" = type <{ %"class.std::__1::unique_ptr.143", %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.161", [4 x i8] }>
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145", %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base.146"** }
%"struct.std::__1::__hash_node_base.146" = type { %"struct.std::__1::__hash_node_base.146"* }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::__bucket_list_deallocator.148" }
%"class.std::__1::__bucket_list_deallocator.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::__hash_node_base.146" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.186", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::set.174"* }
%"class.std::__1::set.174" = type { %"class.std::__1::__tree.175" }
%"class.std::__1::__tree.175" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.spvtools::EnumSet.186" = type { i64, %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unordered_map.190" = type { %"class.std::__1::__hash_table.191" }
%"class.std::__1::__hash_table.191" = type <{ %"class.std::__1::unique_ptr.192", %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.207", %"class.std::__1::__compressed_pair.212", [4 x i8] }>
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194", %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.std::__1::__hash_node_base.195"** }
%"struct.std::__1::__hash_node_base.195" = type { %"struct.std::__1::__hash_node_base.195"* }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::__bucket_list_deallocator.197" }
%"class.std::__1::__bucket_list_deallocator.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::__hash_node_base.195" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unordered_map.217" = type { %"class.std::__1::__hash_table.218" }
%"class.std::__1::__hash_table.218" = type <{ %"class.std::__1::unique_ptr.219", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.237", [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base.222"** }
%"struct.std::__1::__hash_node_base.222" = type { %"struct.std::__1::__hash_node_base.222"* }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::__bucket_list_deallocator.224" }
%"class.std::__1::__bucket_list_deallocator.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base.222" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unordered_map.241" = type { %"class.std::__1::__hash_table.242" }
%"class.std::__1::__hash_table.242" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.261", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.246"** }
%"struct.std::__1::__hash_node_base.246" = type { %"struct.std::__1::__hash_node_base.246"* }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::__bucket_list_deallocator.248" }
%"class.std::__1::__bucket_list_deallocator.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.246" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unordered_map.265" = type { %"class.std::__1::__hash_table.266" }
%"class.std::__1::__hash_table.266" = type <{ %"class.std::__1::unique_ptr.267", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.282", %"class.std::__1::__compressed_pair.285", [4 x i8] }>
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269", %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.270"** }
%"struct.std::__1::__hash_node_base.270" = type { %"struct.std::__1::__hash_node_base.270"* }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.std::__1::__bucket_list_deallocator.272" }
%"class.std::__1::__bucket_list_deallocator.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base.270" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.292", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.320", %"class.std::__1::unordered_map.344" }
%"class.std::__1::unordered_map.292" = type { %"class.std::__1::__hash_table.293" }
%"class.std::__1::__hash_table.293" = type <{ %"class.std::__1::unique_ptr.294", %"class.std::__1::__compressed_pair.304", %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.314", [4 x i8] }>
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296", %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.std::__1::__hash_node_base.297"** }
%"struct.std::__1::__hash_node_base.297" = type { %"struct.std::__1::__hash_node_base.297"* }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.std::__1::__bucket_list_deallocator.299" }
%"class.std::__1::__bucket_list_deallocator.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::__hash_node_base.297" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unordered_map.320" = type { %"class.std::__1::__hash_table.321" }
%"class.std::__1::__hash_table.321" = type <{ %"class.std::__1::unique_ptr.322", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.340", [4 x i8] }>
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.std::__1::__hash_node_base.325"** }
%"struct.std::__1::__hash_node_base.325" = type { %"struct.std::__1::__hash_node_base.325"* }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.std::__1::__bucket_list_deallocator.327" }
%"class.std::__1::__bucket_list_deallocator.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base.325" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unordered_map.344" = type { %"class.std::__1::__hash_table.345" }
%"class.std::__1::__hash_table.345" = type <{ %"class.std::__1::unique_ptr.346", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.364", [4 x i8] }>
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348", %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.std::__1::__hash_node_base.349"** }
%"struct.std::__1::__hash_node_base.349" = type { %"struct.std::__1::__hash_node_base.349"* }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.std::__1::__bucket_list_deallocator.351" }
%"class.std::__1::__bucket_list_deallocator.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::__hash_node_base.349" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.371" = type { %"class.std::__1::__tree.372" }
%"class.std::__1::__tree.372" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.382" = type { %"class.std::__1::__tree.383" }
%"class.std::__1::__tree.383" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.391" = type { %"class.std::__1::__hash_table.392" }
%"class.std::__1::__hash_table.392" = type <{ %"class.std::__1::unique_ptr.393", %"class.std::__1::__compressed_pair.403", %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.413", [4 x i8] }>
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395", %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base.396"** }
%"struct.std::__1::__hash_node_base.396" = type { %"struct.std::__1::__hash_node_base.396"* }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.std::__1::__bucket_list_deallocator.398" }
%"class.std::__1::__bucket_list_deallocator.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::__hash_node_base.396" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.421", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.476" }
%"class.std::__1::unordered_map.421" = type { %"class.std::__1::__hash_table.422" }
%"class.std::__1::__hash_table.422" = type <{ %"class.std::__1::unique_ptr.423", %"class.std::__1::__compressed_pair.433", %"class.std::__1::__compressed_pair.438", %"class.std::__1::__compressed_pair.441", [4 x i8] }>
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425", %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"struct.std::__1::__hash_node_base.426"** }
%"struct.std::__1::__hash_node_base.426" = type { %"struct.std::__1::__hash_node_base.426"* }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.std::__1::__bucket_list_deallocator.428" }
%"class.std::__1::__bucket_list_deallocator.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.std::__1::__hash_node_base.426" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.445" }
%"class.std::__1::__tree.445" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.446", %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.455" }
%"class.std::__1::__hash_table.455" = type <{ %"class.std::__1::unique_ptr.456", %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.471", %"class.std::__1::__compressed_pair.473", [4 x i8] }>
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458", %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"struct.std::__1::__hash_node_base.459"** }
%"struct.std::__1::__hash_node_base.459" = type { %"struct.std::__1::__hash_node_base.459"* }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.std::__1::__bucket_list_deallocator.461" }
%"class.std::__1::__bucket_list_deallocator.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::__hash_node_base.459" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::vector.476" = type { %"class.std::__1::__vector_base.477" }
%"class.std::__1::__vector_base.477" = type { %"class.std::__1::unique_ptr.478"*, %"class.std::__1::unique_ptr.478"*, %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.481", i32, [4 x i8] }>
%"class.std::__1::vector.481" = type { %"class.std::__1::__vector_base.482" }
%"class.std::__1::__vector_base.482" = type { %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"*, %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.std::__1::unique_ptr.478"* }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.501", %"class.std::__1::unordered_map.525", %"class.std::__1::unordered_set.549", %"class.std::__1::vector.571", %"class.std::__1::unordered_map.501", %"class.std::__1::unordered_map.584" }
%"class.std::__1::unordered_map.525" = type { %"class.std::__1::__hash_table.526" }
%"class.std::__1::__hash_table.526" = type <{ %"class.std::__1::unique_ptr.527", %"class.std::__1::__compressed_pair.537", %"class.std::__1::__compressed_pair.542", %"class.std::__1::__compressed_pair.545", [4 x i8] }>
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529", %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"struct.std::__1::__hash_node_base.530"** }
%"struct.std::__1::__hash_node_base.530" = type { %"struct.std::__1::__hash_node_base.530"* }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.std::__1::__bucket_list_deallocator.532" }
%"class.std::__1::__bucket_list_deallocator.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.std::__1::__hash_node_base.530" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unordered_set.549" = type { %"class.std::__1::__hash_table.550" }
%"class.std::__1::__hash_table.550" = type <{ %"class.std::__1::unique_ptr.551", %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.568", [4 x i8] }>
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553", %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"struct.std::__1::__hash_node_base.554"** }
%"struct.std::__1::__hash_node_base.554" = type { %"struct.std::__1::__hash_node_base.554"* }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.std::__1::__bucket_list_deallocator.556" }
%"class.std::__1::__bucket_list_deallocator.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"struct.std::__1::__hash_node_base.554" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::vector.571" = type { %"class.std::__1::__vector_base.572" }
%"class.std::__1::__vector_base.572" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.579" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.573" }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.501" = type { %"class.std::__1::__hash_table.502" }
%"class.std::__1::__hash_table.502" = type <{ %"class.std::__1::unique_ptr.503", %"class.std::__1::__compressed_pair.513", %"class.std::__1::__compressed_pair.518", %"class.std::__1::__compressed_pair.521", [4 x i8] }>
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505", %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"struct.std::__1::__hash_node_base.506"** }
%"struct.std::__1::__hash_node_base.506" = type { %"struct.std::__1::__hash_node_base.506"* }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.std::__1::__bucket_list_deallocator.508" }
%"class.std::__1::__bucket_list_deallocator.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.506" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unordered_map.584" = type { %"class.std::__1::__hash_table.585" }
%"class.std::__1::__hash_table.585" = type <{ %"class.std::__1::unique_ptr.586", %"class.std::__1::__compressed_pair.596", %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.604", [4 x i8] }>
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588", %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.std::__1::__hash_node_base.589"** }
%"struct.std::__1::__hash_node_base.589" = type { %"struct.std::__1::__hash_node_base.589"* }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.std::__1::__bucket_list_deallocator.591" }
%"class.std::__1::__bucket_list_deallocator.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.589" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.614", %"class.std::__1::unordered_map.614", %"class.std::__1::unordered_map.614", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.614" = type { %"class.std::__1::__hash_table.615" }
%"class.std::__1::__hash_table.615" = type <{ %"class.std::__1::unique_ptr.616", %"class.std::__1::__compressed_pair.626", %"class.std::__1::__compressed_pair.631", %"class.std::__1::__compressed_pair.634", [4 x i8] }>
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618", %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.619"** }
%"struct.std::__1::__hash_node_base.619" = type { %"struct.std::__1::__hash_node_base.619"* }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.std::__1::__bucket_list_deallocator.621" }
%"class.std::__1::__bucket_list_deallocator.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"struct.std::__1::__hash_node_base.619" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.std::__1::multimap.644"* }
%"class.std::__1::multimap.644" = type { %"class.std::__1::__tree.645" }
%"class.std::__1::__tree.645" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.715" }
%"class.std::__1::unordered_map.715" = type { %"class.std::__1::__hash_table.716" }
%"class.std::__1::__hash_table.716" = type <{ %"class.std::__1::unique_ptr.717", %"class.std::__1::__compressed_pair.727", %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.735", [4 x i8] }>
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719", %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"struct.std::__1::__hash_node_base.720"** }
%"struct.std::__1::__hash_node_base.720" = type { %"struct.std::__1::__hash_node_base.720"* }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.std::__1::__bucket_list_deallocator.722" }
%"class.std::__1::__bucket_list_deallocator.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"struct.std::__1::__hash_node_base.720" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.745", %"class.std::__1::unordered_map.265", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.745" = type { %"class.std::__1::__hash_table.746" }
%"class.std::__1::__hash_table.746" = type <{ %"class.std::__1::unique_ptr.747", %"class.std::__1::__compressed_pair.757", %"class.std::__1::__compressed_pair.762", %"class.std::__1::__compressed_pair.765", [4 x i8] }>
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749", %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.std::__1::__hash_node_base.750"** }
%"struct.std::__1::__hash_node_base.750" = type { %"struct.std::__1::__hash_node_base.750"* }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.std::__1::__bucket_list_deallocator.752" }
%"class.std::__1::__bucket_list_deallocator.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"struct.std::__1::__hash_node_base.750" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.775", %"class.std::__1::unique_ptr.835" }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.778", %"class.std::__1::map.802", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.813" }
%"class.std::__1::unordered_map.778" = type { %"class.std::__1::__hash_table.779" }
%"class.std::__1::__hash_table.779" = type <{ %"class.std::__1::unique_ptr.780", %"class.std::__1::__compressed_pair.790", %"class.std::__1::__compressed_pair.795", %"class.std::__1::__compressed_pair.798", [4 x i8] }>
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782", %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"struct.std::__1::__hash_node_base.783"** }
%"struct.std::__1::__hash_node_base.783" = type { %"struct.std::__1::__hash_node_base.783"* }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.std::__1::__bucket_list_deallocator.785" }
%"class.std::__1::__bucket_list_deallocator.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"struct.std::__1::__hash_node_base.783" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.802" = type { %"class.std::__1::__tree.803" }
%"class.std::__1::__tree.803" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.804", %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.813" = type { %"class.std::__1::__vector_base.814" }
%"class.std::__1::__vector_base.814" = type { %"class.std::__1::function.815"*, %"class.std::__1::function.815"*, %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::function.815" = type { %"class.std::__1::__function::__policy_func.818" }
%"class.std::__1::__function::__policy_func.818" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.819", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.819" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.820"*)* }
%"class.std::__1::vector.820" = type { %"class.std::__1::__vector_base.821" }
%"class.std::__1::__vector_base.821" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.std::__1::function.815"* }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.838", %"class.std::__1::map.862", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.873" }
%"class.std::__1::unordered_map.838" = type { %"class.std::__1::__hash_table.839" }
%"class.std::__1::__hash_table.839" = type <{ %"class.std::__1::unique_ptr.840", %"class.std::__1::__compressed_pair.850", %"class.std::__1::__compressed_pair.855", %"class.std::__1::__compressed_pair.858", [4 x i8] }>
%"class.std::__1::unique_ptr.840" = type { %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842", %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"struct.std::__1::__hash_node_base.843"** }
%"struct.std::__1::__hash_node_base.843" = type { %"struct.std::__1::__hash_node_base.843"* }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.std::__1::__bucket_list_deallocator.845" }
%"class.std::__1::__bucket_list_deallocator.845" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"struct.std::__1::__hash_node_base.843" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.862" = type { %"class.std::__1::__tree.863" }
%"class.std::__1::__tree.863" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.864", %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.873" = type { %"class.std::__1::__vector_base.874" }
%"class.std::__1::__vector_base.874" = type { %"class.std::__1::function.875"*, %"class.std::__1::function.875"*, %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::function.875" = type { %"class.std::__1::__function::__policy_func.878" }
%"class.std::__1::__function::__policy_func.878" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.879", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.879" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.820"*)* }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.std::__1::function.875"* }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.894", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.894" = type { %"class.std::__1::__hash_table.895" }
%"class.std::__1::__hash_table.895" = type <{ %"class.std::__1::unique_ptr.896", %"class.std::__1::__compressed_pair.906", %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.914", [4 x i8] }>
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898", %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"struct.std::__1::__hash_node_base.899"** }
%"struct.std::__1::__hash_node_base.899" = type { %"struct.std::__1::__hash_node_base.899"* }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.std::__1::__bucket_list_deallocator.901" }
%"class.std::__1::__bucket_list_deallocator.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"struct.std::__1::__hash_node_base.899" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.918" }
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { i64*, i64*, %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { i64* }
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.972" }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.928", %"class.std::__1::unordered_set.935", i8, [7 x i8] }>
%"class.std::__1::vector.928" = type { %"class.std::__1::__vector_base.929" }
%"class.std::__1::__vector_base.929" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::unordered_set.935" = type { %"class.std::__1::__hash_table.936" }
%"class.std::__1::__hash_table.936" = type <{ %"class.std::__1::unique_ptr.937", %"class.std::__1::__compressed_pair.947", %"class.std::__1::__compressed_pair.952", %"class.std::__1::__compressed_pair.954", [4 x i8] }>
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939", %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"struct.std::__1::__hash_node_base.940"** }
%"struct.std::__1::__hash_node_base.940" = type { %"struct.std::__1::__hash_node_base.940"* }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.std::__1::__bucket_list_deallocator.942" }
%"class.std::__1::__bucket_list_deallocator.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"struct.std::__1::__hash_node_base.940" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.spvtools::opt::Loop"** }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.659", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.676", %"class.std::__1::map.698" }
%"class.std::__1::map.659" = type { %"class.std::__1::__tree.660" }
%"class.std::__1::__tree.660" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.661", %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.669", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.676" = type { %"class.std::__1::__hash_table.677" }
%"class.std::__1::__hash_table.677" = type <{ %"class.std::__1::unique_ptr.678", %"class.std::__1::__compressed_pair.688", %"class.std::__1::__compressed_pair.693", %"class.std::__1::__compressed_pair.695", [4 x i8] }>
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680", %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"struct.std::__1::__hash_node_base.681"** }
%"struct.std::__1::__hash_node_base.681" = type { %"struct.std::__1::__hash_node_base.681"* }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::__bucket_list_deallocator.683" }
%"class.std::__1::__bucket_list_deallocator.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"struct.std::__1::__hash_node_base.681" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.698" = type { %"class.std::__1::__tree.699" }
%"class.std::__1::__tree.699" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.700", %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.977" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.spvtools::opt::LoopUtils::LoopCloningResult" = type { %"class.std::__1::unordered_map.1034", %"class.std::__1::unordered_map.265", %"class.std::__1::unordered_map.344", %"class.std::__1::unordered_map.344", %"class.std::__1::vector.53" }
%"class.std::__1::unordered_map.1034" = type { %"class.std::__1::__hash_table.1035" }
%"class.std::__1::__hash_table.1035" = type <{ %"class.std::__1::unique_ptr.1036", %"class.std::__1::__compressed_pair.1046", %"class.std::__1::__compressed_pair.1051", %"class.std::__1::__compressed_pair.1054", [4 x i8] }>
%"class.std::__1::unique_ptr.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038", %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.std::__1::__hash_node_base.1039"** }
%"struct.std::__1::__hash_node_base.1039" = type { %"struct.std::__1::__hash_node_base.1039"* }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"class.std::__1::__bucket_list_deallocator.1041" }
%"class.std::__1::__bucket_list_deallocator.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"struct.std::__1::__hash_node_base.1039" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness" = type { %"class.std::__1::unordered_set.1064", %"class.std::__1::unordered_set.1064", i64, %"class.std::__1::vector.1086" }
%"class.std::__1::unordered_set.1064" = type { %"class.std::__1::__hash_table.1065" }
%"class.std::__1::__hash_table.1065" = type <{ %"class.std::__1::unique_ptr.1066", %"class.std::__1::__compressed_pair.1076", %"class.std::__1::__compressed_pair.1081", %"class.std::__1::__compressed_pair.1083", [4 x i8] }>
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068", %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"struct.std::__1::__hash_node_base.1069"** }
%"struct.std::__1::__hash_node_base.1069" = type { %"struct.std::__1::__hash_node_base.1069"* }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"class.std::__1::__bucket_list_deallocator.1071" }
%"class.std::__1::__bucket_list_deallocator.1071" = type { %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::__hash_node_base.1069" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::vector.1086" = type { %"class.std::__1::__vector_base.1087" }
%"class.std::__1::__vector_base.1087" = type { %"struct.std::__1::pair.1088"*, %"struct.std::__1::pair.1088"*, %"class.std::__1::__compressed_pair.1089" }
%"struct.std::__1::pair.1088" = type { %"struct.spvtools::opt::RegisterLiveness::RegisterClass", i64 }
%"struct.spvtools::opt::RegisterLiveness::RegisterClass" = type { %"class.spvtools::opt::analysis::Type"*, i8 }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.std::__1::pair.1088"* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::LoopFissionPass" = type <{ %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::function.1058", i8, [7 x i8] }>
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function.1058" = type { %"class.std::__1::__function::__policy_func.1062" }
%"class.std::__1::__function::__policy_func.1062" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1063", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1063" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"*)* }
%"class.spvtools::opt::LoopFissionImpl" = type <{ %"class.std::__1::set", %"class.std::__1::set", %"class.std::__1::set", %"class.std::__1::map", %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Loop"*, i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::function.957" = type { %"class.std::__1::__function::__policy_func.961" }
%"class.std::__1::__function::__policy_func.961" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.962", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.962" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.136" = type { i8 }
%class.anon = type <{ %"class.spvtools::opt::LoopFissionImpl"*, %"class.spvtools::opt::analysis::DefUseManager"*, %"class.std::__1::set"*, %"class.std::__1::function.957"*, i8, i8, [6 x i8] }>
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"class.std::__1::set"*, %"class.std::__1::set"*, %"class.std::__1::__compressed_pair.965" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.std::__1::set"* }
%"class.std::__1::__tree_node.1205" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1206" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.1206" = type { %"struct.std::__1::pair.1207" }
%"struct.std::__1::pair.1207" = type { %"class.spvtools::opt::Instruction"*, i64 }
%"class.std::__1::__tree_node.1211" = type { %"class.std::__1::__tree_node_base.base", %"class.spvtools::opt::Instruction"* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.spvtools::opt::Instruction"** }
%"class.spvtools::opt::DistanceVector" = type { %"class.std::__1::vector.989" }
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"*, %"class.std::__1::__compressed_pair.991" }
%"class.spvtools::opt::DistanceEntry" = type { i32, i32, i64, i8, i8, i64, i64 }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.spvtools::opt::DistanceEntry"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::Constraint" = type { i32 (...)**, %"class.spvtools::opt::Loop"* }
%"class.std::__1::__tree_node.1146" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1147" }
%"struct.std::__1::pair.1147" = type { %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"* }
%"class.std::__1::__tree_node.1155" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1156" }
%"struct.std::__1::__value_type.1156" = type { %"struct.std::__1::pair.1157" }
%"struct.std::__1::pair.1157" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::SENode"* }
%"class.std::__1::tuple.1312" = type { %"struct.std::__1::__tuple_impl.1313" }
%"struct.std::__1::__tuple_impl.1313" = type { %"class.std::__1::__tuple_leaf.1314" }
%"class.std::__1::__tuple_leaf.1314" = type { i32* }
%"class.std::__1::tuple.1250" = type { i8 }
%"class.std::__1::tuple.1285" = type { %"struct.std::__1::__tuple_impl.1286" }
%"struct.std::__1::__tuple_impl.1286" = type { %"class.std::__1::__tuple_leaf.1287" }
%"class.std::__1::__tuple_leaf.1287" = type { %"class.spvtools::opt::Instruction"** }
%"class.spvtools::opt::LoopUtils" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.928", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.997", %"class.std::__1::vector.1021" }
%"class.std::__1::unordered_map.997" = type { %"class.std::__1::__hash_table.998" }
%"class.std::__1::__hash_table.998" = type <{ %"class.std::__1::unique_ptr.999", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1014", %"class.std::__1::__compressed_pair.1017", [4 x i8] }>
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001", %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"struct.std::__1::__hash_node_base.1002"** }
%"struct.std::__1::__hash_node_base.1002" = type { %"struct.std::__1::__hash_node_base.1002"* }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.std::__1::__bucket_list_deallocator.1004" }
%"class.std::__1::__bucket_list_deallocator.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"struct.std::__1::__hash_node_base.1002" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::vector.1021" = type { %"class.std::__1::__vector_base.1022" }
%"class.std::__1::__vector_base.1022" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.1029" }
%"struct.std::__1::pair" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.1023" }
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__hash_node.1139" = type <{ %"struct.std::__1::__hash_node_base.940", i64, i32, [4 x i8] }>
%"struct.std::__1::pair.1178" = type { i32, i32 }
%"struct.std::__1::default_delete.59" = type { i8 }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"struct.std::__1::default_delete.740" = type { i8 }
%"class.spvtools::opt::RegisterLiveness" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.1097" }
%"class.std::__1::unordered_map.1097" = type { %"class.std::__1::__hash_table.1098" }
%"class.std::__1::__hash_table.1098" = type <{ %"class.std::__1::unique_ptr.1099", %"class.std::__1::__compressed_pair.1109", %"class.std::__1::__compressed_pair.1114", %"class.std::__1::__compressed_pair.1117", [4 x i8] }>
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101", %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"struct.std::__1::__hash_node_base.1102"** }
%"struct.std::__1::__hash_node_base.1102" = type { %"struct.std::__1::__hash_node_base.1102"* }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.std::__1::__bucket_list_deallocator.1104" }
%"class.std::__1::__bucket_list_deallocator.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"struct.std::__1::__hash_node_base.1102" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::allocator.1112" = type { i8 }
%"struct.std::__1::pair.1187" = type { i32, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness" }
%"class.spvtools::opt::PostOrderTreeDFIterator" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1129" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"**, %"class.std::__1::__compressed_pair.1124" }
%"struct.std::__1::pair.1123" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::__wrap_iter.1133" }
%"class.std::__1::__wrap_iter.1133" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"struct.std::__1::pair.1123"** }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1135" }
%"struct.std::__1::pair.1135" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"struct.std::__1::__hash_node.1182" = type { %"struct.std::__1::__hash_node_base.720", i64, %"struct.std::__1::__hash_value_type.1183" }
%"struct.std::__1::__hash_value_type.1183" = type { %"struct.std::__1::pair.1184" }
%"struct.std::__1::pair.1184" = type { %"class.spvtools::opt::Function"*, %"class.spvtools::opt::RegisterLiveness" }
%"struct.std::__1::__split_buffer.1197" = type { %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"**, %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1125", %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.std::__1::allocator.1127"* }
%"class.std::__1::allocator.1127" = type { i8 }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%"class.std::__1::function.1267" = type { %"class.std::__1::__function::__policy_func.1271" }
%"class.std::__1::__function::__policy_func.1271" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1272", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1272" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.1219" = type { %"class.std::__1::__function::__policy_func.1223" }
%"class.std::__1::__function::__policy_func.1223" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1224", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1224" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.1226" = type { %"class.std::__1::__function::__policy_func.1230" }
%"class.std::__1::__function::__policy_func.1230" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1231", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1231" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.1238" = type { %"class.std::__1::__function::__policy_func.1242" }
%"class.std::__1::__function::__policy_func.1242" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1243", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1243" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }

$_ZNSt3__13setIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE6insertINS_21__tree_const_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEEEvT_SH_ = comdat any

$_ZN8spvtools3opt22LoopDependenceAnalysisD2Ev = comdat any

$_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev = comdat any

$_ZN8spvtools3opt16LivenessAnalysis3GetEPNS0_8FunctionE = comdat any

$_ZN8spvtools3opt15LoopFissionPassD2Ev = comdat any

$_ZN8spvtools3opt15LoopFissionPassD0Ev = comdat any

$_ZNK8spvtools3opt15LoopFissionPass4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt16LivenessAnalysisEEclEPS3_ = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIjN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEEPvEEEEE7destroyINS_4pairIKjS7_EEvvEEvRSB_PT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__emplace_unique_implIJRPS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEEDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS8_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE28__node_insert_unique_prepareEmRS8_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNSt3__16vectorINS_3setIPN8spvtools3opt11InstructionENS_4lessIS5_EENS_9allocatorIS5_EEEENS8_ISA_EEE21__push_back_slow_pathISA_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@__const._ZN8spvtools3opt15LoopFissionImpl15CanPerformSplitEv.analysis = private unnamed_addr constant %"class.spvtools::opt::LoopDependenceAnalysis" { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.std::__1::vector.970" { %"class.std::__1::__vector_base.971" { %"class.spvtools::opt::Loop"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"**), %"class.spvtools::opt::Loop"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"**), %"class.std::__1::__compressed_pair.972" { %"struct.std::__1::__compressed_pair_elem.973" { %"class.spvtools::opt::Loop"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"**) } } } }, %"class.spvtools::opt::ScalarEvolutionAnalysis" { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.std::__1::map.659" { %"class.std::__1::__tree.660" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.661" { %"struct.std::__1::__compressed_pair_elem" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.665" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } }, %"class.spvtools::opt::SENode"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::SENode"*), %"class.std::__1::unordered_set.676" { %"class.std::__1::__hash_table.677" <{ %"class.std::__1::unique_ptr.678" { %"class.std::__1::__compressed_pair.679" { %"struct.std::__1::__compressed_pair_elem.680" { %"struct.std::__1::__hash_node_base.681"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.681"**) }, %"struct.std::__1::__compressed_pair_elem.682" { %"class.std::__1::__bucket_list_deallocator.683" { %"class.std::__1::__compressed_pair.684" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.688" { %"struct.std::__1::__compressed_pair_elem.689" { %"struct.std::__1::__hash_node_base.681" { %"struct.std::__1::__hash_node_base.681"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.681"*) } } }, %"class.std::__1::__compressed_pair.693" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.695" { %"struct.std::__1::__compressed_pair_elem.96" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::map.698" { %"class.std::__1::__tree.699" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.700" { %"struct.std::__1::__compressed_pair_elem" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.704" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } }, %"class.std::__1::basic_ostream"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_ostream"*), %"class.std::__1::list" { %"class.std::__1::__list_imp" { %"struct.std::__1::__list_node_base" { %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*), %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*) }, %"class.std::__1::__compressed_pair.977" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } }, align 8
@__const._ZN8spvtools3opt15LoopFissionImpl9SplitLoopEv.clone_results = private unnamed_addr constant %"struct.spvtools::opt::LoopUtils::LoopCloningResult" { %"class.std::__1::unordered_map.1034" { %"class.std::__1::__hash_table.1035" <{ %"class.std::__1::unique_ptr.1036" { %"class.std::__1::__compressed_pair.1037" { %"struct.std::__1::__compressed_pair_elem.1038" { %"struct.std::__1::__hash_node_base.1039"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1039"**) }, %"struct.std::__1::__compressed_pair_elem.1040" { %"class.std::__1::__bucket_list_deallocator.1041" { %"class.std::__1::__compressed_pair.1042" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.1046" { %"struct.std::__1::__compressed_pair_elem.1047" { %"struct.std::__1::__hash_node_base.1039" { %"struct.std::__1::__hash_node_base.1039"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1039"*) } } }, %"class.std::__1::__compressed_pair.1051" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.1054" { %"struct.std::__1::__compressed_pair_elem.96" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.265" { %"class.std::__1::__hash_table.266" <{ %"class.std::__1::unique_ptr.267" { %"class.std::__1::__compressed_pair.268" { %"struct.std::__1::__compressed_pair_elem.269" { %"struct.std::__1::__hash_node_base.270"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.270"**) }, %"struct.std::__1::__compressed_pair_elem.271" { %"class.std::__1::__bucket_list_deallocator.272" { %"class.std::__1::__compressed_pair.273" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.277" { %"struct.std::__1::__compressed_pair_elem.278" { %"struct.std::__1::__hash_node_base.270" { %"struct.std::__1::__hash_node_base.270"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.270"*) } } }, %"class.std::__1::__compressed_pair.282" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.285" { %"struct.std::__1::__compressed_pair_elem.96" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.344" { %"class.std::__1::__hash_table.345" <{ %"class.std::__1::unique_ptr.346" { %"class.std::__1::__compressed_pair.347" { %"struct.std::__1::__compressed_pair_elem.348" { %"struct.std::__1::__hash_node_base.349"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.349"**) }, %"struct.std::__1::__compressed_pair_elem.350" { %"class.std::__1::__bucket_list_deallocator.351" { %"class.std::__1::__compressed_pair.352" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.356" { %"struct.std::__1::__compressed_pair_elem.357" { %"struct.std::__1::__hash_node_base.349" { %"struct.std::__1::__hash_node_base.349"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.349"*) } } }, %"class.std::__1::__compressed_pair.361" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.364" { %"struct.std::__1::__compressed_pair_elem.96" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.344" { %"class.std::__1::__hash_table.345" <{ %"class.std::__1::unique_ptr.346" { %"class.std::__1::__compressed_pair.347" { %"struct.std::__1::__compressed_pair_elem.348" { %"struct.std::__1::__hash_node_base.349"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.349"**) }, %"struct.std::__1::__compressed_pair_elem.350" { %"class.std::__1::__bucket_list_deallocator.351" { %"class.std::__1::__compressed_pair.352" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.356" { %"struct.std::__1::__compressed_pair_elem.357" { %"struct.std::__1::__hash_node_base.349" { %"struct.std::__1::__hash_node_base.349"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.349"*) } } }, %"class.std::__1::__compressed_pair.361" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.364" { %"struct.std::__1::__compressed_pair_elem.96" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::vector.53" { %"class.std::__1::__vector_base.54" { %"class.std::__1::unique_ptr.55"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.55"*), %"class.std::__1::unique_ptr.55"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.55"*), %"class.std::__1::__compressed_pair.61" { %"struct.std::__1::__compressed_pair_elem.62" { %"class.std::__1::unique_ptr.55"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.55"*) } } } } }, align 8
@_ZTVN8spvtools3opt15LoopFissionPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::LoopFissionPass"*)* @_ZN8spvtools3opt15LoopFissionPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::LoopFissionPass"*)* @_ZN8spvtools3opt15LoopFissionPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::LoopFissionPass"*)* @_ZNK8spvtools3opt15LoopFissionPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LoopFissionPass"*)* @_ZN8spvtools3opt15LoopFissionPass7ProcessEv to i8*)] }, align 8
@__const._ZN8spvtools3opt15LoopFissionPass15ShouldSplitLoopERKNS0_4LoopEPNS0_9IRContextE.liveness = private unnamed_addr constant %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness" { %"class.std::__1::unordered_set.1064" { %"class.std::__1::__hash_table.1065" <{ %"class.std::__1::unique_ptr.1066" { %"class.std::__1::__compressed_pair.1067" { %"struct.std::__1::__compressed_pair_elem.1068" { %"struct.std::__1::__hash_node_base.1069"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1069"**) }, %"struct.std::__1::__compressed_pair_elem.1070" { %"class.std::__1::__bucket_list_deallocator.1071" { %"class.std::__1::__compressed_pair.1072" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.1076" { %"struct.std::__1::__compressed_pair_elem.1077" { %"struct.std::__1::__hash_node_base.1069" { %"struct.std::__1::__hash_node_base.1069"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1069"*) } } }, %"class.std::__1::__compressed_pair.1081" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.1083" { %"struct.std::__1::__compressed_pair_elem.96" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.1064" { %"class.std::__1::__hash_table.1065" <{ %"class.std::__1::unique_ptr.1066" { %"class.std::__1::__compressed_pair.1067" { %"struct.std::__1::__compressed_pair_elem.1068" { %"struct.std::__1::__hash_node_base.1069"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1069"**) }, %"struct.std::__1::__compressed_pair_elem.1070" { %"class.std::__1::__bucket_list_deallocator.1071" { %"class.std::__1::__compressed_pair.1072" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.1076" { %"struct.std::__1::__compressed_pair_elem.1077" { %"struct.std::__1::__hash_node_base.1069" { %"struct.std::__1::__hash_node_base.1069"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1069"*) } } }, %"class.std::__1::__compressed_pair.1081" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.1083" { %"struct.std::__1::__compressed_pair_elem.96" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i64 -6148914691236517206, %"class.std::__1::vector.1086" { %"class.std::__1::__vector_base.1087" { %"struct.std::__1::pair.1088"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1088"*), %"struct.std::__1::pair.1088"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1088"*), %"class.std::__1::__compressed_pair.1089" { %"struct.std::__1::__compressed_pair_elem.1090" { %"struct.std::__1::pair.1088"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1088"*) } } } } }, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"loop-fission\00", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbENK3$_0clES8_EUlPKjE_FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbENK3$_0clES8_EUlS8_jE_FvS8_jEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionPassC1EmbE3$_1FbRKNS5_16RegisterLiveness22RegionRegisterLivenessEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionPassC1EvE3$_2FbRKNS5_16RegisterLiveness22RegionRegisterLivenessEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN8spvtools3opt15LoopFissionPassC1Emb = hidden unnamed_addr alias void (%"class.spvtools::opt::LoopFissionPass"*, i64, i1), void (%"class.spvtools::opt::LoopFissionPass"*, i64, i1)* @_ZN8spvtools3opt15LoopFissionPassC2Emb
@_ZN8spvtools3opt15LoopFissionPassC1Ev = hidden unnamed_addr alias void (%"class.spvtools::opt::LoopFissionPass"*), void (%"class.spvtools::opt::LoopFissionPass"*)* @_ZN8spvtools3opt15LoopFissionPassC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt15LoopFissionImpl18MovableInstructionERKNS0_11InstructionE(%"class.spvtools::opt::LoopFissionImpl"* nocapture readnone, %"class.spvtools::opt::Instruction"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %5 [
    i32 61, label %7
    i32 62, label %7
    i32 247, label %7
    i32 245, label %7
  ]

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZNK8spvtools3opt11Instruction22IsOpcodeCodeMotionSafeEv(%"class.spvtools::opt::Instruction"* %1) #12
  br label %7

7:                                                ; preds = %2, %2, %2, %2, %5
  %8 = phi i1 [ true, %2 ], [ %6, %5 ], [ true, %2 ], [ true, %2 ], [ true, %2 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK8spvtools3opt11Instruction22IsOpcodeCodeMotionSafeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS0_11InstructionEPNSt3__13setIS3_NS4_4lessIS3_EENS4_9allocatorIS3_EEEEbb(%"class.spvtools::opt::LoopFissionImpl"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::set"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::function.957", align 8
  %7 = zext i1 %3 to i8
  %8 = zext i1 %4 to i8
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 4
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #13
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #12
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #12
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.77"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.77"* %28 to %"struct.std::__1::default_delete.136"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.136"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #12
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  br label %39

39:                                               ; preds = %36, %5
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::function.957"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %6, i64 0, i32 0, i32 2
  %45 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %46 = bitcast i8* %45 to i64*
  store i64 -6148914691236517206, i64* %46, align 8
  %47 = tail call i8* @_Znwm(i64 40) #13, !noalias !2
  %48 = bitcast i8* %47 to %"class.spvtools::opt::LoopFissionImpl"**
  store %"class.spvtools::opt::LoopFissionImpl"* %0, %"class.spvtools::opt::LoopFissionImpl"** %48, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  %50 = bitcast i8* %49 to i64*
  store i64 %42, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %47, i64 16
  %52 = bitcast i8* %51 to %"class.std::__1::set"**
  store %"class.std::__1::set"* %2, %"class.std::__1::set"** %52, align 8
  %53 = getelementptr inbounds i8, i8* %47, i64 24
  %54 = bitcast i8* %53 to %"class.std::__1::function.957"**
  store %"class.std::__1::function.957"* %6, %"class.std::__1::function.957"** %54, align 8
  %55 = getelementptr inbounds i8, i8* %47, i64 32
  store i8 %7, i8* %55, align 8
  %56 = getelementptr inbounds i8, i8* %47, i64 33
  store i8 %8, i8* %56, align 1
  %57 = ptrtoint i8* %47 to i64
  %58 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %6, i64 0, i32 0, i32 1
  %59 = bitcast %"struct.std::__1::__function::__policy_invoker.962"* %58 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15LoopFissionImpl14TraverseUseDefES5_PNS_3setIS5_NS_4lessIS5_EENS_9allocatorIS5_EEEEbbE3$_0S6_EEEEvPKNS0_16__policy_storageES5_" to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" to i64)>, <2 x i64>* %59, align 8
  %60 = bitcast %"class.std::__1::function.957"* %6 to i64*
  store i64 %57, i64* %60, align 8
  %61 = bitcast i8* %47 to %class.anon*
  call fastcc void @"_ZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS0_11InstructionEPNSt3__13setIS3_NS4_4lessIS3_EENS4_9allocatorIS3_EEEEbbENK3$_0clES3_"(%class.anon* nonnull %61, %"class.spvtools::opt::Instruction"* %1) #12
  %62 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %44, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %62, i64 0, i32 1
  %64 = load void (i8*)*, void (i8*)** %63, align 8
  %65 = icmp eq void (i8*)* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %39
  %67 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %6, i64 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void %64(i8* %68) #12
  br label %69

69:                                               ; preds = %39, %66
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt15LoopFissionImpl25GroupInstructionsByUseDefEv(%"class.spvtools::opt::LoopFissionImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.963", align 8
  %3 = alloca %"class.std::__1::set", align 8
  %4 = alloca %"class.std::__1::set", align 8
  %5 = bitcast %"class.std::__1::vector.963"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %2, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %2, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 5
  %10 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %11 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %10) #12
  %12 = icmp eq %"class.spvtools::opt::BasicBlock"* %11, null
  br i1 %12, label %451, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %11, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8, !noalias !7
  %16 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %16, i64 0, i32 1
  %18 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %18, i64 0, i32 0
  %20 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %19, align 8
  %21 = bitcast %"class.std::__1::set"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_node_base"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %24, %"class.std::__1::__tree_end_node"** %22, align 8
  call void @_ZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS0_11InstructionEPNSt3__13setIS3_NS4_4lessIS3_EENS4_9allocatorIS3_EEEEbb(%"class.spvtools::opt::LoopFissionImpl"* %0, %"class.spvtools::opt::Instruction"* %15, %"class.std::__1::set"* nonnull %3, i1 zeroext true, i1 zeroext true)
  %26 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %20, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %20, i64 0, i32 3, i32 0, i32 1
  %29 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.55"* %27, %29
  br i1 %30, label %35, label %61

31:                                               ; preds = %153
  %32 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %26, align 8
  %33 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %28, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr.55"* %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %13, %31
  %36 = bitcast %"class.std::__1::set"** %7 to i64*
  br label %156

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %40 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node.1205"**
  %42 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %38, i64 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::map"* %38 to i64*
  %46 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node.1211"**
  %48 = bitcast %"class.std::__1::set"* %4 to i8*
  %49 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %53 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8*
  %54 = bitcast %"class.std::__1::set"* %4 to i64*
  %55 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__compressed_pair"* %55 to i64*
  %57 = bitcast %"class.std::__1::__tree_end_node"* %52 to i8*
  %58 = bitcast %"class.std::__1::set"** %7 to i64*
  %59 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node.1211"**
  br label %166

61:                                               ; preds = %13, %153
  %62 = phi %"class.std::__1::unique_ptr.55"* [ %154, %153 ], [ %27, %13 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %64, i64 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %67, i64 0, i32 4
  %69 = load i8, i8* %68, align 1, !range !10
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %67, i64 0, i32 3
  %73 = load i8, i8* %72, align 4, !range !10
  %74 = zext i8 %73 to i32
  %75 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %67, i32 %74) #12
  br label %76

76:                                               ; preds = %61, %71
  %77 = phi i32 [ %75, %71 ], [ 0, %61 ]
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %65, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %153, label %82

82:                                               ; preds = %76
  %83 = call i64 @llvm.ctpop.i64(i64 %80) #12, !range !11
  %84 = icmp ugt i64 %83, 1
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = add i64 %80, 4294967295
  %87 = and i64 %86, %78
  br label %92

88:                                               ; preds = %82
  %89 = icmp ugt i64 %80, %78
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %78, %80
  br label %92

92:                                               ; preds = %90, %88, %85
  %93 = phi i64 [ %87, %85 ], [ %91, %90 ], [ %78, %88 ]
  %94 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %65, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.940"**, %"struct.std::__1::__hash_node_base.940"*** %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %95, i64 %93
  %97 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.940"* %97, null
  br i1 %98, label %153, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %97, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.940"* %101, null
  br i1 %102, label %153, label %103

103:                                              ; preds = %99
  %104 = add i64 %80, -1
  br label %105

105:                                              ; preds = %126, %103
  %106 = phi %"struct.std::__1::__hash_node_base.940"* [ %101, %103 ], [ %128, %126 ]
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %106, i64 1
  %108 = bitcast %"struct.std::__1::__hash_node_base.940"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, %78
  br i1 %110, label %121, label %111

111:                                              ; preds = %105
  br i1 %84, label %114, label %112

112:                                              ; preds = %111
  %113 = and i64 %109, %104
  br label %118

114:                                              ; preds = %111
  %115 = icmp ult i64 %109, %80
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %109, %80
  br label %118

118:                                              ; preds = %116, %114, %112
  %119 = phi i64 [ %113, %112 ], [ %117, %116 ], [ %109, %114 ]
  %120 = icmp eq i64 %119, %93
  br i1 %120, label %126, label %153

121:                                              ; preds = %105
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %106, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.940"* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, %77
  br i1 %125, label %130, label %126

126:                                              ; preds = %121, %118
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %106, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.940"* %128, null
  br i1 %129, label %153, label %105

130:                                              ; preds = %121
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %64, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %132 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %64, i64 0, i32 2, i32 0, i32 1
  %133 = bitcast %"class.spvtools::opt::Instruction"** %131 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = inttoptr i64 %134 to %"class.spvtools::opt::Instruction"*
  %136 = icmp eq %"class.spvtools::opt::Instruction"* %132, %135
  br i1 %136, label %153, label %137

137:                                              ; preds = %130, %146
  %138 = phi %"class.spvtools::opt::Instruction"* [ %151, %146 ], [ %135, %130 ]
  %139 = phi i64 [ %150, %146 ], [ %134, %130 ]
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %138, i64 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 247
  br i1 %142, label %145, label %143

143:                                              ; preds = %137
  %144 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %141) #12
  br i1 %144, label %145, label %146

145:                                              ; preds = %143, %137
  call void @_ZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS0_11InstructionEPNSt3__13setIS3_NS4_4lessIS3_EENS4_9allocatorIS3_EEEEbb(%"class.spvtools::opt::LoopFissionImpl"* %0, %"class.spvtools::opt::Instruction"* %138, %"class.std::__1::set"* nonnull %3, i1 zeroext true, i1 zeroext true)
  br label %146

146:                                              ; preds = %145, %143
  %147 = inttoptr i64 %139 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %148 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %147, i64 0, i32 1
  %149 = bitcast %"class.spvtools::opt::Instruction"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = inttoptr i64 %150 to %"class.spvtools::opt::Instruction"*
  %152 = icmp eq %"class.spvtools::opt::Instruction"* %132, %151
  br i1 %152, label %153, label %137

153:                                              ; preds = %126, %118, %146, %130, %99, %76, %92
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %62, i64 1
  %155 = icmp eq %"class.std::__1::unique_ptr.55"* %154, %29
  br i1 %155, label %31, label %61

156:                                              ; preds = %393, %35
  %157 = phi i64* [ %36, %35 ], [ %58, %393 ]
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.std::__1::vector.963"* %2 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = sub i64 %158, %160
  %162 = sdiv exact i64 %161, 24
  %163 = icmp ult i64 %162, 2
  br i1 %163, label %427, label %164

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 0
  br label %400

166:                                              ; preds = %37, %393
  %167 = phi %"class.std::__1::unique_ptr.55"* [ %32, %37 ], [ %394, %393 ]
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %171 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %169, i64 0, i32 1, i32 0, i32 0, i32 0
  %172 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %171, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 4
  %174 = load i8, i8* %173, align 1, !range !10
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %181, label %176

176:                                              ; preds = %166
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %178 = load i8, i8* %177, align 4, !range !10
  %179 = zext i8 %178 to i32
  %180 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %179) #12
  br label %181

181:                                              ; preds = %166, %176
  %182 = phi i32 [ %180, %176 ], [ 0, %166 ]
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %170, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %393, label %187

187:                                              ; preds = %181
  %188 = call i64 @llvm.ctpop.i64(i64 %185) #12, !range !11
  %189 = icmp ugt i64 %188, 1
  br i1 %189, label %193, label %190

190:                                              ; preds = %187
  %191 = add i64 %185, 4294967295
  %192 = and i64 %191, %183
  br label %197

193:                                              ; preds = %187
  %194 = icmp ugt i64 %185, %183
  br i1 %194, label %197, label %195

195:                                              ; preds = %193
  %196 = urem i64 %183, %185
  br label %197

197:                                              ; preds = %195, %193, %190
  %198 = phi i64 [ %192, %190 ], [ %196, %195 ], [ %183, %193 ]
  %199 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %170, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load %"struct.std::__1::__hash_node_base.940"**, %"struct.std::__1::__hash_node_base.940"*** %199, align 8
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %200, i64 %198
  %202 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %201, align 8
  %203 = icmp eq %"struct.std::__1::__hash_node_base.940"* %202, null
  br i1 %203, label %393, label %204

204:                                              ; preds = %197
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %202, i64 0, i32 0
  %206 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %205, align 8
  %207 = icmp eq %"struct.std::__1::__hash_node_base.940"* %206, null
  br i1 %207, label %393, label %208

208:                                              ; preds = %204
  %209 = add i64 %185, -1
  br label %210

210:                                              ; preds = %231, %208
  %211 = phi %"struct.std::__1::__hash_node_base.940"* [ %206, %208 ], [ %233, %231 ]
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %211, i64 1
  %213 = bitcast %"struct.std::__1::__hash_node_base.940"* %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = icmp eq i64 %214, %183
  br i1 %215, label %226, label %216

216:                                              ; preds = %210
  br i1 %189, label %219, label %217

217:                                              ; preds = %216
  %218 = and i64 %214, %209
  br label %223

219:                                              ; preds = %216
  %220 = icmp ult i64 %214, %185
  br i1 %220, label %223, label %221

221:                                              ; preds = %219
  %222 = urem i64 %214, %185
  br label %223

223:                                              ; preds = %221, %219, %217
  %224 = phi i64 [ %218, %217 ], [ %222, %221 ], [ %214, %219 ]
  %225 = icmp eq i64 %224, %198
  br i1 %225, label %231, label %393

226:                                              ; preds = %210
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %211, i64 2
  %228 = bitcast %"struct.std::__1::__hash_node_base.940"* %227 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, %182
  br i1 %230, label %235, label %231

231:                                              ; preds = %226, %223
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %211, i64 0, i32 0
  %233 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %232, align 8
  %234 = icmp eq %"struct.std::__1::__hash_node_base.940"* %233, null
  br i1 %234, label %393, label %210

235:                                              ; preds = %226
  %236 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %237 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %236, i64 0, i32 1
  %238 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %237, align 8
  %239 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %238, i64 0, i32 1, i32 0, i32 0, i32 0
  %240 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %239, align 8
  %241 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %240, i64 0, i32 4
  %242 = load i8, i8* %241, align 1, !range !10
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %249, label %244

244:                                              ; preds = %235
  %245 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %240, i64 0, i32 3
  %246 = load i8, i8* %245, align 4, !range !10
  %247 = zext i8 %246 to i32
  %248 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %240, i32 %247) #12
  br label %249

249:                                              ; preds = %235, %244
  %250 = phi i32 [ %248, %244 ], [ 0, %235 ]
  %251 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %171, align 8
  %252 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %251, i64 0, i32 4
  %253 = load i8, i8* %252, align 1, !range !10
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %260, label %255

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %251, i64 0, i32 3
  %257 = load i8, i8* %256, align 4, !range !10
  %258 = zext i8 %257 to i32
  %259 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %251, i32 %258) #12
  br label %260

260:                                              ; preds = %249, %255
  %261 = phi i32 [ %259, %255 ], [ 0, %249 ]
  %262 = icmp eq i32 %250, %261
  br i1 %262, label %393, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %169, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %265 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %169, i64 0, i32 2, i32 0, i32 1
  %266 = bitcast %"class.spvtools::opt::Instruction"** %264 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = inttoptr i64 %267 to %"class.spvtools::opt::Instruction"*
  %269 = icmp eq %"class.spvtools::opt::Instruction"* %265, %268
  br i1 %269, label %393, label %270

270:                                              ; preds = %263, %386
  %271 = phi %"class.spvtools::opt::Instruction"* [ %391, %386 ], [ %268, %263 ]
  %272 = phi i64 [ %390, %386 ], [ %267, %263 ]
  %273 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %271, i64 0, i32 2
  %274 = load i32, i32* %273, align 8
  %275 = add i32 %274, -61
  %276 = icmp ult i32 %275, 2
  br i1 %276, label %277, label %339

277:                                              ; preds = %270
  %278 = load i64, i64* %39, align 8
  %279 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %41, align 8
  %280 = icmp eq %"class.std::__1::__tree_node.1205"* %279, null
  br i1 %280, label %307, label %281

281:                                              ; preds = %277, %303
  %282 = phi %"class.std::__1::__tree_node.1205"* [ %306, %303 ], [ %279, %277 ]
  %283 = phi %"class.std::__1::__tree_node_base"** [ %305, %303 ], [ %42, %277 ]
  %284 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %282, i64 0, i32 1, i32 0, i32 0
  %285 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %284, align 8
  %286 = icmp ugt %"class.spvtools::opt::Instruction"* %285, %271
  br i1 %286, label %287, label %293

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %282, i64 0, i32 0, i32 0, i32 0
  %289 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %288, align 8
  %290 = icmp eq %"class.std::__1::__tree_node_base"* %289, null
  br i1 %290, label %291, label %303

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %282, i64 0, i32 0, i32 0
  br label %307

293:                                              ; preds = %281
  %294 = icmp ult %"class.spvtools::opt::Instruction"* %285, %271
  br i1 %294, label %295, label %301

295:                                              ; preds = %293
  %296 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %282, i64 0, i32 0, i32 1
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = icmp eq %"class.std::__1::__tree_node_base"* %297, null
  br i1 %298, label %299, label %303

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %282, i64 0, i32 0, i32 0
  br label %307

301:                                              ; preds = %293
  %302 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %282, i64 0, i32 0, i32 0
  br label %307

303:                                              ; preds = %295, %287
  %304 = phi %"class.std::__1::__tree_node_base"* [ %289, %287 ], [ %297, %295 ]
  %305 = phi %"class.std::__1::__tree_node_base"** [ %288, %287 ], [ %296, %295 ]
  %306 = bitcast %"class.std::__1::__tree_node_base"* %304 to %"class.std::__1::__tree_node.1205"*
  br label %281

307:                                              ; preds = %277, %301, %299, %291
  %308 = phi %"class.std::__1::__tree_end_node"* [ %292, %291 ], [ %300, %299 ], [ %302, %301 ], [ %40, %277 ]
  %309 = phi %"class.std::__1::__tree_node_base"** [ %288, %291 ], [ %296, %299 ], [ %283, %301 ], [ %43, %277 ]
  %310 = bitcast %"class.std::__1::__tree_node_base"** %309 to %"class.std::__1::__tree_node.1205"**
  %311 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %310, align 8
  %312 = icmp eq %"class.std::__1::__tree_node.1205"* %311, null
  br i1 %312, label %313, label %336

313:                                              ; preds = %307
  %314 = call i8* @_Znwm(i64 48) #13, !noalias !12
  %315 = getelementptr inbounds i8, i8* %314, i64 32
  %316 = bitcast i8* %315 to i64*
  store i64 %272, i64* %316, align 8, !noalias !12
  %317 = getelementptr inbounds i8, i8* %314, i64 40
  %318 = bitcast i8* %317 to i64*
  store i64 0, i64* %318, align 8, !noalias !12
  %319 = bitcast i8* %314 to %"class.std::__1::__tree_node.1205"*
  %320 = bitcast i8* %314 to %"class.std::__1::__tree_node_base"*
  %321 = getelementptr inbounds i8, i8* %314, i64 16
  %322 = bitcast i8* %321 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %308, %"class.std::__1::__tree_end_node"** %322, align 8
  %323 = bitcast %"class.std::__1::__tree_node_base"** %309 to i8**
  store i8* %314, i8** %323, align 8
  %324 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %44, align 8
  %325 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %324, i64 0, i32 0
  %326 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %325, align 8
  %327 = icmp eq %"class.std::__1::__tree_node_base"* %326, null
  br i1 %327, label %331, label %328

328:                                              ; preds = %313
  %329 = ptrtoint %"class.std::__1::__tree_node_base"* %326 to i64
  store i64 %329, i64* %45, align 8
  %330 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %309, align 8
  br label %331

331:                                              ; preds = %328, %313
  %332 = phi %"class.std::__1::__tree_node_base"* [ %320, %313 ], [ %330, %328 ]
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %333, %"class.std::__1::__tree_node_base"* %332) #12
  %334 = load i64, i64* %39, align 8
  %335 = add i64 %334, 1
  store i64 %335, i64* %39, align 8
  br label %336

336:                                              ; preds = %307, %331
  %337 = phi %"class.std::__1::__tree_node.1205"* [ %319, %331 ], [ %311, %307 ]
  %338 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %337, i64 0, i32 1, i32 0, i32 1
  store i64 %278, i64* %338, align 8
  br label %339

339:                                              ; preds = %270, %336
  %340 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %47, align 8
  %341 = icmp eq %"class.std::__1::__tree_node.1211"* %340, null
  br i1 %341, label %358, label %342

342:                                              ; preds = %339, %354
  %343 = phi %"class.std::__1::__tree_node.1211"* [ %356, %354 ], [ %340, %339 ]
  %344 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %343, i64 0, i32 1
  %345 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %344, align 8
  %346 = icmp ugt %"class.spvtools::opt::Instruction"* %345, %271
  br i1 %346, label %347, label %349

347:                                              ; preds = %342
  %348 = bitcast %"class.std::__1::__tree_node.1211"* %343 to %"class.std::__1::__tree_node.1211"**
  br label %354

349:                                              ; preds = %342
  %350 = icmp ult %"class.spvtools::opt::Instruction"* %345, %271
  br i1 %350, label %351, label %386

351:                                              ; preds = %349
  %352 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %343, i64 0, i32 0, i32 1
  %353 = bitcast %"class.std::__1::__tree_node_base"** %352 to %"class.std::__1::__tree_node.1211"**
  br label %354

354:                                              ; preds = %351, %347
  %355 = phi %"class.std::__1::__tree_node.1211"** [ %348, %347 ], [ %353, %351 ]
  %356 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %355, align 8
  %357 = icmp eq %"class.std::__1::__tree_node.1211"* %356, null
  br i1 %357, label %358, label %342

358:                                              ; preds = %354, %339
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"** %49, align 8
  call void @_ZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS0_11InstructionEPNSt3__13setIS3_NS4_4lessIS3_EENS4_9allocatorIS3_EEEEbb(%"class.spvtools::opt::LoopFissionImpl"* %0, %"class.spvtools::opt::Instruction"* %271, %"class.std::__1::set"* nonnull %4, i1 zeroext false, i1 zeroext false)
  %359 = load i64, i64* %51, align 8
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %384, label %361

361:                                              ; preds = %358
  %362 = load %"class.std::__1::set"*, %"class.std::__1::set"** %7, align 8
  %363 = load %"class.std::__1::set"*, %"class.std::__1::set"** %8, align 8
  %364 = icmp ult %"class.std::__1::set"* %362, %363
  br i1 %364, label %365, label %383

365:                                              ; preds = %361
  %366 = load i64, i64* %54, align 8
  %367 = bitcast %"class.std::__1::set"* %362 to i64*
  store i64 %366, i64* %367, align 8
  %368 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %362, i64 0, i32 0, i32 1
  %369 = bitcast %"class.std::__1::__compressed_pair"* %368 to i64*
  %370 = load i64, i64* %56, align 8
  store i64 %370, i64* %369, align 8
  %371 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %362, i64 0, i32 0, i32 2, i32 0, i32 0
  %372 = load i64, i64* %51, align 8
  store i64 %372, i64* %371, align 8
  %373 = icmp eq i64 %372, 0
  %374 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %362, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %373, label %375, label %377

375:                                              ; preds = %365
  %376 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %362, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %374, %"class.std::__1::__tree_end_node"** %376, align 8
  br label %380

377:                                              ; preds = %365
  %378 = inttoptr i64 %370 to %"class.std::__1::__tree_node_base"*
  %379 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %378, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %374, %"class.std::__1::__tree_end_node"** %379, align 8
  store %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"** %49, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #12
  br label %380

380:                                              ; preds = %377, %375
  %381 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %362, i64 1
  %382 = ptrtoint %"class.std::__1::set"* %381 to i64
  store i64 %382, i64* %58, align 8
  br label %384

383:                                              ; preds = %361
  call void @_ZNSt3__16vectorINS_3setIPN8spvtools3opt11InstructionENS_4lessIS5_EENS_9allocatorIS5_EEEENS8_ISA_EEE21__push_back_slow_pathISA_EEvOT_(%"class.std::__1::vector.963"* nonnull %2, %"class.std::__1::set"* nonnull dereferenceable(24) %4) #12
  br label %384

384:                                              ; preds = %383, %380, %358
  %385 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %60, align 8
  call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* nonnull %59, %"class.std::__1::__tree_node.1211"* %385) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  br label %386

386:                                              ; preds = %349, %384
  %387 = inttoptr i64 %272 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %388 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %387, i64 0, i32 1
  %389 = bitcast %"class.spvtools::opt::Instruction"** %388 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = inttoptr i64 %390 to %"class.spvtools::opt::Instruction"*
  %392 = icmp eq %"class.spvtools::opt::Instruction"* %265, %391
  br i1 %392, label %393, label %270

393:                                              ; preds = %231, %223, %386, %263, %204, %181, %197, %260
  %394 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %167, i64 1
  %395 = icmp eq %"class.std::__1::unique_ptr.55"* %394, %33
  br i1 %395, label %156, label %166

396:                                              ; preds = %400
  %397 = icmp ult i64 %412, %411
  br i1 %397, label %398, label %427

398:                                              ; preds = %396
  %399 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 1
  br label %414

400:                                              ; preds = %164, %400
  %401 = phi i64 [ %160, %164 ], [ %409, %400 ]
  %402 = phi i64 [ 0, %164 ], [ %407, %400 ]
  %403 = inttoptr i64 %401 to %"class.std::__1::set"*
  %404 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %403, i64 %402, i32 0, i32 0
  %405 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %404, align 8
  %406 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %403, i64 %402, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__13setIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE6insertINS_21__tree_const_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEEEvT_SH_(%"class.std::__1::set"* %165, %"class.std::__1::__tree_end_node"* %405, %"class.std::__1::__tree_end_node"* %406)
  %407 = add nuw nsw i64 %402, 1
  %408 = load i64, i64* %157, align 8
  %409 = load i64, i64* %159, align 8
  %410 = sub i64 %408, %409
  %411 = sdiv exact i64 %410, 24
  %412 = lshr i64 %411, 1
  %413 = icmp ult i64 %407, %412
  br i1 %413, label %400, label %396

414:                                              ; preds = %398, %414
  %415 = phi i64 [ %409, %398 ], [ %423, %414 ]
  %416 = phi i64 [ %412, %398 ], [ %421, %414 ]
  %417 = inttoptr i64 %415 to %"class.std::__1::set"*
  %418 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %417, i64 %416, i32 0, i32 0
  %419 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %418, align 8
  %420 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %417, i64 %416, i32 0, i32 1, i32 0, i32 0
  call void @_ZNSt3__13setIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE6insertINS_21__tree_const_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEEEvT_SH_(%"class.std::__1::set"* %399, %"class.std::__1::__tree_end_node"* %419, %"class.std::__1::__tree_end_node"* %420)
  %421 = add nuw i64 %416, 1
  %422 = load i64, i64* %157, align 8
  %423 = load i64, i64* %159, align 8
  %424 = sub i64 %422, %423
  %425 = sdiv exact i64 %424, 24
  %426 = icmp ult i64 %421, %425
  br i1 %426, label %414, label %427

427:                                              ; preds = %414, %156, %396
  %428 = phi i1 [ false, %156 ], [ true, %396 ], [ true, %414 ]
  %429 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0
  %430 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node.1211"**
  %431 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %430, align 8
  call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* nonnull %429, %"class.std::__1::__tree_node.1211"* %431) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  %432 = load %"class.std::__1::set"*, %"class.std::__1::set"** %6, align 8
  %433 = icmp eq %"class.std::__1::set"* %432, null
  br i1 %433, label %451, label %434

434:                                              ; preds = %427
  %435 = bitcast %"class.std::__1::set"* %432 to i8*
  %436 = load %"class.std::__1::set"*, %"class.std::__1::set"** %7, align 8
  %437 = icmp eq %"class.std::__1::set"* %436, %432
  br i1 %437, label %449, label %438

438:                                              ; preds = %434, %438
  %439 = phi %"class.std::__1::set"* [ %440, %438 ], [ %436, %434 ]
  %440 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %439, i64 -1
  %441 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %440, i64 0, i32 0
  %442 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %439, i64 -1, i32 0, i32 1, i32 0, i32 0
  %443 = bitcast %"class.std::__1::__tree_end_node"* %442 to %"class.std::__1::__tree_node.1211"**
  %444 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %443, align 8
  call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %441, %"class.std::__1::__tree_node.1211"* %444) #12
  %445 = icmp eq %"class.std::__1::set"* %440, %432
  br i1 %445, label %446, label %438

446:                                              ; preds = %438
  %447 = bitcast %"class.std::__1::vector.963"* %2 to i8**
  %448 = load i8*, i8** %447, align 8
  br label %449

449:                                              ; preds = %446, %434
  %450 = phi i8* [ %448, %446 ], [ %435, %434 ]
  store %"class.std::__1::set"* %432, %"class.std::__1::set"** %7, align 8
  call void @_ZdlPv(i8* %450) #13
  br label %451

451:                                              ; preds = %1, %427, %449
  %452 = phi i1 [ %428, %427 ], [ %428, %449 ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret i1 %452
}

declare %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE6insertINS_21__tree_const_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEEEvT_SH_(%"class.std::__1::set"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = ptrtoint %"class.std::__1::__tree_end_node"* %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::set"* %0 to i64*
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %14

13:                                               ; preds = %137, %3
  ret void

14:                                               ; preds = %6, %137
  %15 = phi %"class.std::__1::__tree_end_node"* [ %1, %6 ], [ %138, %137 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 4
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.spvtools::opt::Instruction"**
  %18 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %19 = icmp eq %"class.std::__1::__tree_end_node"* %18, %4
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br i1 %19, label %47, label %21

21:                                               ; preds = %14
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %20, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %4, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1
  %43 = bitcast %"class.std::__1::__tree_node_base"* %42 to %"class.spvtools::opt::Instruction"**
  %44 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %43, align 8
  %45 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %46 = icmp ult %"class.spvtools::opt::Instruction"* %44, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %39, %14
  %48 = phi i64 [ %41, %39 ], [ %7, %14 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 1
  br label %81

53:                                               ; preds = %39
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %54, label %81, label %55

55:                                               ; preds = %53, %74
  %56 = phi %"class.std::__1::__tree_node_base"* [ %75, %74 ], [ %20, %53 ]
  %57 = phi %"class.std::__1::__tree_node_base"** [ %76, %74 ], [ %10, %53 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 1
  %59 = bitcast %"class.std::__1::__tree_node_base"* %58 to %"class.spvtools::opt::Instruction"**
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, align 8
  %61 = icmp ult %"class.spvtools::opt::Instruction"* %45, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = ptrtoint %"class.std::__1::__tree_node_base"* %56 to i64
  br label %81

68:                                               ; preds = %55
  %69 = icmp ult %"class.spvtools::opt::Instruction"* %60, %45
  br i1 %69, label %70, label %79

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 1
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70, %62
  %75 = phi %"class.std::__1::__tree_node_base"* [ %64, %62 ], [ %72, %70 ]
  %76 = phi %"class.std::__1::__tree_node_base"** [ %63, %62 ], [ %71, %70 ]
  br label %55

77:                                               ; preds = %70
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %56 to i64
  br label %81

79:                                               ; preds = %68
  %80 = ptrtoint %"class.std::__1::__tree_node_base"* %56 to i64
  br label %81

81:                                               ; preds = %53, %47, %50, %66, %77, %79
  %82 = phi i64 [ %48, %50 ], [ %67, %66 ], [ %78, %77 ], [ %80, %79 ], [ %7, %47 ], [ %7, %53 ]
  %83 = phi %"class.std::__1::__tree_node_base"** [ %52, %50 ], [ %63, %66 ], [ %71, %77 ], [ %57, %79 ], [ %9, %47 ], [ %9, %53 ]
  %84 = bitcast %"class.std::__1::__tree_node_base"** %83 to %"class.std::__1::__tree_node.1211"**
  %85 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node.1211"* %85, null
  br i1 %86, label %87, label %109

87:                                               ; preds = %81
  %88 = tail call i8* @_Znwm(i64 40) #13, !noalias !15
  %89 = getelementptr inbounds i8, i8* %88, i64 32
  %90 = bitcast %"class.std::__1::__tree_end_node"* %16 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !15
  %92 = bitcast i8* %89 to i64*
  store i64 %91, i64* %92, align 8, !noalias !15
  %93 = bitcast i8* %88 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds i8, i8* %88, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 16, i1 false) #12
  %95 = bitcast i8* %94 to i64*
  store i64 %82, i64* %95, align 8
  %96 = bitcast %"class.std::__1::__tree_node_base"** %83 to i8**
  store i8* %88, i8** %96, align 8
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %87
  %102 = ptrtoint %"class.std::__1::__tree_node_base"* %99 to i64
  store i64 %102, i64* %11, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  br label %104

104:                                              ; preds = %101, %87
  %105 = phi %"class.std::__1::__tree_node_base"* [ %93, %87 ], [ %103, %101 ]
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %106, %"class.std::__1::__tree_node_base"* %105) #12
  %107 = load i64, i64* %12, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %12, align 8
  br label %109

109:                                              ; preds = %81, %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, null
  br i1 %112, label %113, label %121

113:                                              ; preds = %109
  %114 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to %"class.std::__1::__tree_end_node"**
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, %114
  br i1 %120, label %137, label %128

121:                                              ; preds = %109, %121
  %122 = phi %"class.std::__1::__tree_node_base"* [ %124, %121 ], [ %111, %109 ]
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, null
  br i1 %125, label %126, label %121

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %122, i64 0, i32 0
  br label %137

128:                                              ; preds = %113, %128
  %129 = phi %"class.std::__1::__tree_end_node"** [ %132, %128 ], [ %116, %113 ]
  %130 = bitcast %"class.std::__1::__tree_end_node"** %129 to %"class.std::__1::__tree_node_base"**
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, %131
  br i1 %136, label %137, label %128

137:                                              ; preds = %128, %113, %126
  %138 = phi %"class.std::__1::__tree_end_node"* [ %127, %126 ], [ %117, %113 ], [ %133, %128 ]
  %139 = icmp eq %"class.std::__1::__tree_end_node"* %138, %2
  br i1 %139, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt15LoopFissionImpl15CanPerformSplitEv(%"class.spvtools::opt::LoopFissionImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [22 x i8], align 2
  %3 = alloca %"class.std::__1::vector.970", align 8
  %4 = alloca %"class.spvtools::opt::LoopDependenceAnalysis", align 8
  %5 = alloca %"class.std::__1::vector.970", align 8
  %6 = alloca %"class.std::__1::vector.981", align 8
  %7 = alloca %"class.std::__1::vector.981", align 8
  %8 = alloca %"class.spvtools::opt::DistanceVector", align 8
  %9 = alloca %"class.spvtools::opt::DistanceVector", align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 8, !range !10
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %832

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::vector.970"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::vector.970", %"class.std::__1::vector.970"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.970", %"class.std::__1::vector.970"* %3, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector.970", %"class.std::__1::vector.970"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  %18 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 5
  %19 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %18, align 8
  %20 = icmp eq %"class.spvtools::opt::Loop"* %19, null
  %21 = bitcast %"class.spvtools::opt::Loop"*** %16 to i64*
  br i1 %20, label %97, label %22

22:                                               ; preds = %13
  %23 = bitcast %"class.std::__1::vector.970"* %3 to i64*
  %24 = bitcast %"class.spvtools::opt::Loop"*** %17 to i64*
  br label %25

25:                                               ; preds = %95, %22
  %26 = phi %"class.spvtools::opt::Loop"** [ null, %22 ], [ %88, %95 ]
  %27 = phi i64 [ 0, %22 ], [ %89, %95 ]
  %28 = phi i64 [ 0, %22 ], [ %90, %95 ]
  %29 = phi %"class.spvtools::opt::Loop"** [ null, %22 ], [ %96, %95 ]
  %30 = phi %"class.spvtools::opt::Loop"** [ null, %22 ], [ %91, %95 ]
  %31 = phi %"class.spvtools::opt::Loop"* [ %19, %22 ], [ %93, %95 ]
  %32 = ptrtoint %"class.spvtools::opt::Loop"* %31 to i64
  %33 = icmp ult %"class.spvtools::opt::Loop"** %30, %29
  %34 = ptrtoint %"class.spvtools::opt::Loop"** %29 to i64
  br i1 %33, label %35, label %39

35:                                               ; preds = %25
  %36 = bitcast %"class.spvtools::opt::Loop"** %30 to i64*
  store i64 %32, i64* %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %30, i64 1
  %38 = ptrtoint %"class.spvtools::opt::Loop"** %37 to i64
  store i64 %38, i64* %21, align 8
  br label %87

39:                                               ; preds = %25
  %40 = ptrtoint %"class.spvtools::opt::Loop"** %30 to i64
  %41 = load i64, i64* %23, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 3
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 2305843009213693951
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::vector.970"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %47) #14
  unreachable

48:                                               ; preds = %39
  %49 = sub i64 %34, %41
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, 1152921504606846975
  br i1 %51, label %52, label %60

52:                                               ; preds = %48
  %53 = ashr exact i64 %49, 2
  %54 = icmp ult i64 %53, %44
  %55 = select i1 %54, i64 %44, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %52
  %58 = icmp ugt i64 %55, 2305843009213693951
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  tail call void @abort() #14
  unreachable

60:                                               ; preds = %57, %48
  %61 = phi i64 [ %55, %57 ], [ 2305843009213693951, %48 ]
  %62 = shl i64 %61, 3
  %63 = tail call i8* @_Znwm(i64 %62) #13
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Loop"**
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %61, %60 ], [ 0, %52 ]
  %67 = phi %"class.spvtools::opt::Loop"** [ %64, %60 ], [ null, %52 ]
  %68 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 %43
  %69 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 %66
  %70 = ptrtoint %"class.spvtools::opt::Loop"** %69 to i64
  %71 = bitcast %"class.spvtools::opt::Loop"** %68 to i64*
  store i64 %32, i64* %71, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %68, i64 1
  %73 = ptrtoint %"class.spvtools::opt::Loop"** %72 to i64
  %74 = sub i64 %28, %41
  %75 = ashr exact i64 %74, 3
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %68, i64 %76
  %78 = ptrtoint %"class.spvtools::opt::Loop"** %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %65
  %81 = bitcast %"class.spvtools::opt::Loop"** %77 to i8*
  %82 = inttoptr i64 %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %74, i1 false) #12
  br label %83

83:                                               ; preds = %80, %65
  store i64 %78, i64* %23, align 8
  store i64 %73, i64* %21, align 8
  store i64 %70, i64* %24, align 8
  %84 = icmp eq i64 %41, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = inttoptr i64 %41 to i8*
  tail call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %35, %83, %85
  %88 = phi %"class.spvtools::opt::Loop"** [ %26, %35 ], [ %77, %83 ], [ %77, %85 ]
  %89 = phi i64 [ %27, %35 ], [ %78, %83 ], [ %78, %85 ]
  %90 = phi i64 [ %38, %35 ], [ %73, %83 ], [ %73, %85 ]
  %91 = phi %"class.spvtools::opt::Loop"** [ %37, %35 ], [ %72, %83 ], [ %72, %85 ]
  %92 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %31, i64 0, i32 6
  %93 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %92, align 8
  %94 = icmp eq %"class.spvtools::opt::Loop"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %87
  %96 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %17, align 8
  br label %25

97:                                               ; preds = %87, %13
  %98 = phi %"class.spvtools::opt::Loop"** [ null, %13 ], [ %88, %87 ]
  %99 = phi i64 [ 0, %13 ], [ %89, %87 ]
  %100 = phi i64 [ 0, %13 ], [ %90, %87 ]
  %101 = bitcast %"class.spvtools::opt::LoopDependenceAnalysis"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %101) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 bitcast (%"class.spvtools::opt::LoopDependenceAnalysis"* @__const._ZN8spvtools3opt15LoopFissionImpl15CanPerformSplitEv.analysis to i8*), i64 168, i1 false)
  %102 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 4
  %103 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %102, align 8
  %104 = bitcast %"class.std::__1::vector.970"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #12
  %105 = sub i64 %100, %99
  %106 = ashr exact i64 %105, 3
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %133, label %108

108:                                              ; preds = %97
  %109 = icmp ugt i64 %106, 2305843009213693951
  br i1 %109, label %110, label %112

110:                                              ; preds = %108
  %111 = bitcast %"class.std::__1::vector.970"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %111) #14
  unreachable

112:                                              ; preds = %108
  %113 = tail call i8* @_Znwm(i64 %105) #13
  %114 = bitcast i8* %113 to %"class.spvtools::opt::Loop"**
  %115 = getelementptr inbounds %"class.std::__1::vector.970", %"class.std::__1::vector.970"* %5, i64 0, i32 0, i32 1
  %116 = bitcast %"class.spvtools::opt::Loop"*** %115 to i8**
  store i8* %113, i8** %116, align 8
  %117 = bitcast %"class.std::__1::vector.970"* %5 to i8**
  store i8* %113, i8** %117, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %114, i64 %106
  %119 = getelementptr inbounds %"class.std::__1::vector.970", %"class.std::__1::vector.970"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Loop"** %118, %"class.spvtools::opt::Loop"*** %119, align 8
  %120 = bitcast %"class.spvtools::opt::Loop"*** %115 to i64*
  %121 = ptrtoint i8* %113 to i64
  %122 = ptrtoint %"class.spvtools::opt::Loop"** %98 to i64
  %123 = sub i64 %100, %122
  %124 = icmp sgt i64 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %112
  %126 = lshr exact i64 %123, 3
  %127 = bitcast %"class.spvtools::opt::Loop"** %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* align 8 %127, i64 %123, i1 false) #12
  %128 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %114, i64 %126
  %129 = ptrtoint %"class.spvtools::opt::Loop"** %128 to i64
  br label %130

130:                                              ; preds = %125, %112
  %131 = phi i64 [ %129, %125 ], [ %121, %112 ]
  store i64 %131, i64* %120, align 8
  %132 = ptrtoint i8* %113 to i64
  br label %133

133:                                              ; preds = %97, %130
  %134 = phi i8* [ %113, %130 ], [ null, %97 ]
  %135 = phi i64 [ %132, %130 ], [ 0, %97 ]
  %136 = phi i64 [ %121, %130 ], [ 0, %97 ]
  %137 = phi i64 [ %131, %130 ], [ 0, %97 ]
  %138 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 0
  store %"class.spvtools::opt::IRContext"* %103, %"class.spvtools::opt::IRContext"** %138, align 8
  %139 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 1
  %140 = bitcast %"class.std::__1::vector.970"* %139 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #12
  %141 = getelementptr inbounds %"class.std::__1::vector.970", %"class.std::__1::vector.970"* %5, i64 0, i32 0, i32 1
  %142 = bitcast %"class.spvtools::opt::Loop"*** %141 to i64*
  %143 = sub i64 %137, %136
  %144 = ashr exact i64 %143, 3
  %145 = icmp eq i64 %143, 0
  br i1 %145, label %168, label %146

146:                                              ; preds = %133
  %147 = icmp ugt i64 %144, 2305843009213693951
  br i1 %147, label %148, label %150

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector.970"* %139 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #14
  unreachable

150:                                              ; preds = %146
  %151 = tail call i8* @_Znwm(i64 %143) #13
  %152 = bitcast i8* %151 to %"class.spvtools::opt::Loop"**
  %153 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 1, i32 0, i32 1
  %154 = bitcast %"class.spvtools::opt::Loop"*** %153 to i8**
  store i8* %151, i8** %154, align 8
  %155 = bitcast %"class.std::__1::vector.970"* %139 to i8**
  store i8* %151, i8** %155, align 8
  %156 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %152, i64 %144
  %157 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Loop"** %156, %"class.spvtools::opt::Loop"*** %157, align 8
  %158 = bitcast %"class.spvtools::opt::Loop"*** %153 to i64*
  %159 = ptrtoint i8* %151 to i64
  %160 = sub i64 %137, %135
  %161 = icmp sgt i64 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %150
  %163 = lshr exact i64 %160, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %151, i8* align 8 %134, i64 %160, i1 false) #12
  %164 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %152, i64 %163
  %165 = ptrtoint %"class.spvtools::opt::Loop"** %164 to i64
  br label %166

166:                                              ; preds = %162, %150
  %167 = phi i64 [ %165, %162 ], [ %159, %150 ]
  store i64 %167, i64* %158, align 8
  br label %168

168:                                              ; preds = %133, %166
  %169 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 2
  call void @_ZN8spvtools3opt23ScalarEvolutionAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %169, %"class.spvtools::opt::IRContext"* %103) #12
  %170 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 3
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %170, align 8
  %171 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 4
  %172 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %171, i64 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %171, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %172, %"struct.std::__1::__list_node_base"** %173, align 8
  %174 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 4, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %172, %"struct.std::__1::__list_node_base"** %174, align 8
  %175 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %4, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::vector.970", %"class.std::__1::vector.970"* %5, i64 0, i32 0, i32 0
  %177 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %176, align 8
  %178 = icmp eq %"class.spvtools::opt::Loop"** %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %168
  %180 = ptrtoint %"class.spvtools::opt::Loop"** %177 to i64
  store i64 %180, i64* %142, align 8
  %181 = bitcast %"class.spvtools::opt::Loop"** %177 to i8*
  call void @_ZdlPv(i8* %181) #13
  br label %182

182:                                              ; preds = %168, %179
  %183 = bitcast %"class.std::__1::vector.981"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #12
  %184 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %6, i64 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %6, i64 0, i32 0, i32 1
  %186 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 0, i64 24, i1 false) #12
  %187 = bitcast %"class.std::__1::vector.981"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #12
  %188 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %7, i64 0, i32 0, i32 0
  %189 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %7, i64 0, i32 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 0, i64 24, i1 false) #12
  %191 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %194 = icmp eq %"class.std::__1::__tree_end_node"* %192, %193
  br i1 %194, label %353, label %195

195:                                              ; preds = %182
  %196 = bitcast %"class.spvtools::opt::Instruction"*** %189 to i64*
  %197 = bitcast %"class.std::__1::vector.981"* %7 to i64*
  %198 = bitcast %"class.spvtools::opt::Instruction"*** %190 to i64*
  %199 = bitcast %"class.spvtools::opt::Instruction"*** %185 to i64*
  %200 = bitcast %"class.std::__1::vector.981"* %6 to i64*
  %201 = bitcast %"class.spvtools::opt::Instruction"*** %186 to i64*
  br label %202

202:                                              ; preds = %195, %350
  %203 = phi %"class.std::__1::__tree_end_node"* [ %192, %195 ], [ %351, %350 ]
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 4
  %205 = bitcast %"class.std::__1::__tree_end_node"* %204 to %"class.spvtools::opt::Instruction"**
  %206 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %205, align 8
  %207 = ptrtoint %"class.spvtools::opt::Instruction"* %206 to i64
  %208 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %206, i64 0, i32 2
  %209 = load i32, i32* %208, align 8
  switch i32 %209, label %318 [
    i32 62, label %210
    i32 61, label %263
  ]

210:                                              ; preds = %202
  %211 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %185, align 8
  %212 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %186, align 8
  %213 = icmp eq %"class.spvtools::opt::Instruction"** %211, %212
  %214 = ptrtoint %"class.spvtools::opt::Instruction"** %212 to i64
  br i1 %213, label %219, label %215

215:                                              ; preds = %210
  %216 = bitcast %"class.spvtools::opt::Instruction"** %211 to i64*
  store i64 %207, i64* %216, align 8
  %217 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %211, i64 1
  %218 = ptrtoint %"class.spvtools::opt::Instruction"** %217 to i64
  store i64 %218, i64* %199, align 8
  br label %316

219:                                              ; preds = %210
  %220 = ptrtoint %"class.spvtools::opt::Instruction"** %211 to i64
  %221 = load i64, i64* %200, align 8
  %222 = sub i64 %220, %221
  %223 = ashr exact i64 %222, 3
  %224 = add nsw i64 %223, 1
  %225 = icmp ugt i64 %224, 2305843009213693951
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = bitcast %"class.std::__1::vector.981"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %227) #14
  unreachable

228:                                              ; preds = %219
  %229 = sub i64 %214, %221
  %230 = ashr exact i64 %229, 3
  %231 = icmp ult i64 %230, 1152921504606846975
  br i1 %231, label %232, label %240

232:                                              ; preds = %228
  %233 = ashr exact i64 %229, 2
  %234 = icmp ult i64 %233, %224
  %235 = select i1 %234, i64 %224, i64 %233
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %245, label %237

237:                                              ; preds = %232
  %238 = icmp ugt i64 %235, 2305843009213693951
  br i1 %238, label %239, label %240

239:                                              ; preds = %237
  call void @abort() #14
  unreachable

240:                                              ; preds = %237, %228
  %241 = phi i64 [ %235, %237 ], [ 2305843009213693951, %228 ]
  %242 = shl i64 %241, 3
  %243 = call i8* @_Znwm(i64 %242) #13
  %244 = bitcast i8* %243 to %"class.spvtools::opt::Instruction"**
  br label %245

245:                                              ; preds = %240, %232
  %246 = phi i64 [ %241, %240 ], [ 0, %232 ]
  %247 = phi i8* [ %243, %240 ], [ null, %232 ]
  %248 = phi %"class.spvtools::opt::Instruction"** [ %244, %240 ], [ null, %232 ]
  %249 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %248, i64 %223
  %250 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %248, i64 %246
  %251 = ptrtoint %"class.spvtools::opt::Instruction"** %250 to i64
  %252 = bitcast %"class.spvtools::opt::Instruction"** %249 to i64*
  store i64 %207, i64* %252, align 8
  %253 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %249, i64 1
  %254 = ptrtoint %"class.spvtools::opt::Instruction"** %253 to i64
  %255 = ptrtoint %"class.spvtools::opt::Instruction"** %248 to i64
  %256 = icmp sgt i64 %222, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %245
  %258 = inttoptr i64 %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %258, i64 %222, i1 false) #12
  br label %259

259:                                              ; preds = %257, %245
  store i64 %255, i64* %200, align 8
  store i64 %254, i64* %199, align 8
  store i64 %251, i64* %201, align 8
  %260 = icmp eq i64 %221, 0
  br i1 %260, label %316, label %261

261:                                              ; preds = %259
  %262 = inttoptr i64 %221 to i8*
  call void @_ZdlPv(i8* %262) #13
  br label %316

263:                                              ; preds = %202
  %264 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %189, align 8
  %265 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %190, align 8
  %266 = icmp eq %"class.spvtools::opt::Instruction"** %264, %265
  %267 = ptrtoint %"class.spvtools::opt::Instruction"** %265 to i64
  br i1 %266, label %272, label %268

268:                                              ; preds = %263
  %269 = bitcast %"class.spvtools::opt::Instruction"** %264 to i64*
  store i64 %207, i64* %269, align 8
  %270 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %264, i64 1
  %271 = ptrtoint %"class.spvtools::opt::Instruction"** %270 to i64
  store i64 %271, i64* %196, align 8
  br label %316

272:                                              ; preds = %263
  %273 = ptrtoint %"class.spvtools::opt::Instruction"** %264 to i64
  %274 = load i64, i64* %197, align 8
  %275 = sub i64 %273, %274
  %276 = ashr exact i64 %275, 3
  %277 = add nsw i64 %276, 1
  %278 = icmp ugt i64 %277, 2305843009213693951
  br i1 %278, label %279, label %281

279:                                              ; preds = %272
  %280 = bitcast %"class.std::__1::vector.981"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %280) #14
  unreachable

281:                                              ; preds = %272
  %282 = sub i64 %267, %274
  %283 = ashr exact i64 %282, 3
  %284 = icmp ult i64 %283, 1152921504606846975
  br i1 %284, label %285, label %293

285:                                              ; preds = %281
  %286 = ashr exact i64 %282, 2
  %287 = icmp ult i64 %286, %277
  %288 = select i1 %287, i64 %277, i64 %286
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %298, label %290

290:                                              ; preds = %285
  %291 = icmp ugt i64 %288, 2305843009213693951
  br i1 %291, label %292, label %293

292:                                              ; preds = %290
  call void @abort() #14
  unreachable

293:                                              ; preds = %290, %281
  %294 = phi i64 [ %288, %290 ], [ 2305843009213693951, %281 ]
  %295 = shl i64 %294, 3
  %296 = call i8* @_Znwm(i64 %295) #13
  %297 = bitcast i8* %296 to %"class.spvtools::opt::Instruction"**
  br label %298

298:                                              ; preds = %293, %285
  %299 = phi i64 [ %294, %293 ], [ 0, %285 ]
  %300 = phi i8* [ %296, %293 ], [ null, %285 ]
  %301 = phi %"class.spvtools::opt::Instruction"** [ %297, %293 ], [ null, %285 ]
  %302 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %301, i64 %276
  %303 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %301, i64 %299
  %304 = ptrtoint %"class.spvtools::opt::Instruction"** %303 to i64
  %305 = bitcast %"class.spvtools::opt::Instruction"** %302 to i64*
  store i64 %207, i64* %305, align 8
  %306 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %302, i64 1
  %307 = ptrtoint %"class.spvtools::opt::Instruction"** %306 to i64
  %308 = ptrtoint %"class.spvtools::opt::Instruction"** %301 to i64
  %309 = icmp sgt i64 %275, 0
  br i1 %309, label %310, label %312

310:                                              ; preds = %298
  %311 = inttoptr i64 %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %311, i64 %275, i1 false) #12
  br label %312

312:                                              ; preds = %310, %298
  store i64 %308, i64* %197, align 8
  store i64 %307, i64* %196, align 8
  store i64 %304, i64* %198, align 8
  %313 = icmp eq i64 %274, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %312
  %315 = inttoptr i64 %274 to i8*
  call void @_ZdlPv(i8* %315) #13
  br label %316

316:                                              ; preds = %215, %259, %261, %268, %312, %314
  %317 = load i32, i32* %208, align 8
  br label %318

318:                                              ; preds = %202, %316
  %319 = phi i32 [ %317, %316 ], [ %209, %202 ]
  switch i32 %319, label %320 [
    i32 61, label %322
    i32 62, label %322
    i32 247, label %322
    i32 245, label %322
  ]

320:                                              ; preds = %318
  %321 = call zeroext i1 @_ZNK8spvtools3opt11Instruction22IsOpcodeCodeMotionSafeEv(%"class.spvtools::opt::Instruction"* %206) #12
  br i1 %321, label %322, label %810

322:                                              ; preds = %318, %318, %318, %318, %320
  %323 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 1, i32 0
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = icmp eq %"class.std::__1::__tree_node_base"* %324, null
  br i1 %325, label %326, label %334

326:                                              ; preds = %322
  %327 = bitcast %"class.std::__1::__tree_end_node"* %203 to %"class.std::__1::__tree_node_base"*
  %328 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 2
  %329 = bitcast %"class.std::__1::__tree_end_node"* %328 to %"class.std::__1::__tree_end_node"**
  %330 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %329, align 8
  %331 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %330, i64 0, i32 0
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = icmp eq %"class.std::__1::__tree_node_base"* %332, %327
  br i1 %333, label %350, label %341

334:                                              ; preds = %322, %334
  %335 = phi %"class.std::__1::__tree_node_base"* [ %337, %334 ], [ %324, %322 ]
  %336 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %335, i64 0, i32 0, i32 0
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = icmp eq %"class.std::__1::__tree_node_base"* %337, null
  br i1 %338, label %339, label %334

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %335, i64 0, i32 0
  br label %350

341:                                              ; preds = %326, %341
  %342 = phi %"class.std::__1::__tree_end_node"** [ %345, %341 ], [ %329, %326 ]
  %343 = bitcast %"class.std::__1::__tree_end_node"** %342 to %"class.std::__1::__tree_node_base"**
  %344 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %343, align 8
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %344, i64 0, i32 2
  %346 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %345, align 8
  %347 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %346, i64 0, i32 0
  %348 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %347, align 8
  %349 = icmp eq %"class.std::__1::__tree_node_base"* %348, %344
  br i1 %349, label %350, label %341

350:                                              ; preds = %341, %326, %339
  %351 = phi %"class.std::__1::__tree_end_node"* [ %340, %339 ], [ %330, %326 ], [ %346, %341 ]
  %352 = icmp eq %"class.std::__1::__tree_end_node"* %351, %193
  br i1 %352, label %353, label %202

353:                                              ; preds = %350, %182
  %354 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %18, align 8
  br label %355

355:                                              ; preds = %355, %353
  %356 = phi i64 [ 1, %353 ], [ %361, %355 ]
  %357 = phi %"class.spvtools::opt::Loop"* [ %354, %353 ], [ %359, %355 ]
  %358 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %357, i64 0, i32 6
  %359 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %358, align 8
  %360 = icmp eq %"class.spvtools::opt::Loop"* %359, null
  %361 = add i64 %356, 1
  br i1 %360, label %362, label %355

362:                                              ; preds = %355
  %363 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %363, align 8
  %365 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %366 = icmp eq %"class.std::__1::__tree_end_node"* %364, %365
  br i1 %366, label %810, label %367

367:                                              ; preds = %362
  %368 = bitcast %"class.spvtools::opt::DistanceVector"* %9 to i8*
  %369 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %9, i64 0, i32 0, i32 0, i32 0
  %370 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %9, i64 0, i32 0, i32 0, i32 1
  %371 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %372 = getelementptr inbounds [22 x i8], [22 x i8]* %2, i64 0, i64 0
  %373 = getelementptr inbounds [22 x i8], [22 x i8]* %2, i64 0, i64 6
  %374 = icmp eq i64 %356, 0
  %375 = icmp ugt i64 %356, 461168601842738790
  %376 = mul i64 %356, 40
  %377 = bitcast %"class.spvtools::opt::DistanceEntry"** %370 to i8**
  %378 = bitcast %"class.spvtools::opt::DistanceVector"* %9 to i8**
  %379 = bitcast %"class.spvtools::opt::DistanceEntry"** %370 to i64*
  %380 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 3
  %381 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %382 = bitcast %"class.std::__1::__tree_end_node"* %381 to %"class.std::__1::__tree_node.1205"**
  %383 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %384 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %381, i64 0, i32 0
  %385 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %380, i64 0, i32 0, i32 0
  %386 = bitcast %"class.std::__1::map"* %380 to i64*
  %387 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %388 = bitcast %"class.spvtools::opt::DistanceVector"* %8 to i8*
  %389 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %8, i64 0, i32 0, i32 0, i32 0
  %390 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %8, i64 0, i32 0, i32 0, i32 1
  %391 = getelementptr inbounds %"class.spvtools::opt::DistanceVector", %"class.spvtools::opt::DistanceVector"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %392 = bitcast %"class.spvtools::opt::DistanceEntry"** %390 to i8**
  %393 = bitcast %"class.spvtools::opt::DistanceVector"* %8 to i8**
  %394 = bitcast %"class.spvtools::opt::DistanceEntry"** %390 to i64*
  br label %395

395:                                              ; preds = %367, %807
  %396 = phi %"class.std::__1::__tree_end_node"* [ %364, %367 ], [ %808, %807 ]
  %397 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %396, i64 4
  %398 = bitcast %"class.std::__1::__tree_end_node"* %397 to %"class.spvtools::opt::Instruction"**
  %399 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %398, align 8
  %400 = ptrtoint %"class.spvtools::opt::Instruction"* %399 to i64
  %401 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %399, i64 0, i32 2
  %402 = load i32, i32* %401, align 8
  switch i32 %402, label %403 [
    i32 61, label %407
    i32 62, label %407
    i32 247, label %407
    i32 245, label %407
  ]

403:                                              ; preds = %395
  %404 = call zeroext i1 @_ZNK8spvtools3opt11Instruction22IsOpcodeCodeMotionSafeEv(%"class.spvtools::opt::Instruction"* %399) #12
  br i1 %404, label %405, label %810

405:                                              ; preds = %403
  %406 = load i32, i32* %401, align 8
  br label %407

407:                                              ; preds = %405, %395, %395, %395, %395
  %408 = phi i32 [ %406, %405 ], [ %402, %395 ], [ %402, %395 ], [ %402, %395 ], [ %402, %395 ]
  switch i32 %408, label %779 [
    i32 61, label %409
    i32 62, label %594
  ]

409:                                              ; preds = %407
  %410 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %184, align 8
  %411 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %185, align 8
  %412 = icmp eq %"class.spvtools::opt::Instruction"** %410, %411
  br i1 %412, label %779, label %415

413:                                              ; preds = %591
  %414 = icmp eq %"class.spvtools::opt::Instruction"** %593, %411
  br i1 %414, label %779, label %415

415:                                              ; preds = %409, %413
  %416 = phi %"class.spvtools::opt::Instruction"** [ %593, %413 ], [ %410, %409 ]
  %417 = bitcast %"class.spvtools::opt::Instruction"** %416 to i64*
  %418 = load i64, i64* %417, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %388) #12
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %372)
  call void @llvm.memset.p0i8.i64(i8* align 2 %373, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %388, i8 0, i64 24, i1 false) #12
  br i1 %374, label %439, label %419

419:                                              ; preds = %415
  br i1 %375, label %420, label %422

420:                                              ; preds = %419
  %421 = bitcast %"class.spvtools::opt::DistanceVector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %421) #14
  unreachable

422:                                              ; preds = %419
  %423 = call i8* @_Znwm(i64 %376) #13
  %424 = bitcast i8* %423 to %"class.spvtools::opt::DistanceEntry"*
  store i8* %423, i8** %392, align 8
  store i8* %423, i8** %393, align 8
  %425 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %424, i64 %356
  store %"class.spvtools::opt::DistanceEntry"* %425, %"class.spvtools::opt::DistanceEntry"** %391, align 8
  br label %426

426:                                              ; preds = %426, %422
  %427 = phi %"class.spvtools::opt::DistanceEntry"* [ %424, %422 ], [ %435, %426 ]
  %428 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %427, i64 0, i32 0
  store i32 0, i32* %428, align 8
  %429 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %427, i64 0, i32 1
  store i32 7, i32* %429, align 4
  %430 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %427, i64 0, i32 2
  store i64 0, i64* %430, align 8
  %431 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %427, i64 0, i32 3
  store i8 0, i8* %431, align 8
  %432 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %427, i64 0, i32 4
  store i8 0, i8* %432, align 1
  %433 = bitcast %"class.spvtools::opt::DistanceEntry"* %427 to i8*
  %434 = getelementptr inbounds i8, i8* %433, i64 18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %434, i8* nonnull align 2 %372, i64 22, i1 false) #12
  %435 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %427, i64 1
  %436 = icmp eq %"class.spvtools::opt::DistanceEntry"* %435, %425
  br i1 %436, label %437, label %426

437:                                              ; preds = %426
  %438 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %425 to i64
  store i64 %438, i64* %394, align 8
  br label %439

439:                                              ; preds = %415, %437
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %372)
  %440 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %382, align 8
  %441 = icmp eq %"class.std::__1::__tree_node.1205"* %440, null
  br i1 %441, label %470, label %442

442:                                              ; preds = %439
  %443 = inttoptr i64 %418 to %"class.spvtools::opt::Instruction"*
  br label %444

444:                                              ; preds = %466, %442
  %445 = phi %"class.std::__1::__tree_node.1205"* [ %469, %466 ], [ %440, %442 ]
  %446 = phi %"class.std::__1::__tree_node_base"** [ %468, %466 ], [ %383, %442 ]
  %447 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %445, i64 0, i32 1, i32 0, i32 0
  %448 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %447, align 8
  %449 = icmp ugt %"class.spvtools::opt::Instruction"* %448, %443
  br i1 %449, label %450, label %456

450:                                              ; preds = %444
  %451 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %445, i64 0, i32 0, i32 0, i32 0
  %452 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %451, align 8
  %453 = icmp eq %"class.std::__1::__tree_node_base"* %452, null
  br i1 %453, label %454, label %466

454:                                              ; preds = %450
  %455 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %445, i64 0, i32 0, i32 0
  br label %470

456:                                              ; preds = %444
  %457 = icmp ult %"class.spvtools::opt::Instruction"* %448, %443
  br i1 %457, label %458, label %464

458:                                              ; preds = %456
  %459 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %445, i64 0, i32 0, i32 1
  %460 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %459, align 8
  %461 = icmp eq %"class.std::__1::__tree_node_base"* %460, null
  br i1 %461, label %462, label %466

462:                                              ; preds = %458
  %463 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %445, i64 0, i32 0, i32 0
  br label %470

464:                                              ; preds = %456
  %465 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %445, i64 0, i32 0, i32 0
  br label %470

466:                                              ; preds = %458, %450
  %467 = phi %"class.std::__1::__tree_node_base"* [ %452, %450 ], [ %460, %458 ]
  %468 = phi %"class.std::__1::__tree_node_base"** [ %451, %450 ], [ %459, %458 ]
  %469 = bitcast %"class.std::__1::__tree_node_base"* %467 to %"class.std::__1::__tree_node.1205"*
  br label %444

470:                                              ; preds = %439, %464, %462, %454
  %471 = phi %"class.std::__1::__tree_end_node"* [ %455, %454 ], [ %463, %462 ], [ %465, %464 ], [ %381, %439 ]
  %472 = phi %"class.std::__1::__tree_node_base"** [ %451, %454 ], [ %459, %462 ], [ %446, %464 ], [ %384, %439 ]
  %473 = bitcast %"class.std::__1::__tree_node_base"** %472 to %"class.std::__1::__tree_node.1205"**
  %474 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %473, align 8
  %475 = icmp eq %"class.std::__1::__tree_node.1205"* %474, null
  br i1 %475, label %476, label %500

476:                                              ; preds = %470
  %477 = call i8* @_Znwm(i64 48) #13, !noalias !18
  %478 = getelementptr inbounds i8, i8* %477, i64 32
  %479 = bitcast i8* %478 to i64*
  store i64 %418, i64* %479, align 8, !noalias !18
  %480 = getelementptr inbounds i8, i8* %477, i64 40
  %481 = bitcast i8* %480 to i64*
  store i64 0, i64* %481, align 8, !noalias !18
  %482 = bitcast i8* %477 to %"class.std::__1::__tree_node.1205"*
  %483 = bitcast i8* %477 to %"class.std::__1::__tree_node_base"*
  %484 = getelementptr inbounds i8, i8* %477, i64 16
  %485 = bitcast i8* %484 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %477, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %471, %"class.std::__1::__tree_end_node"** %485, align 8
  %486 = bitcast %"class.std::__1::__tree_node_base"** %472 to i8**
  store i8* %477, i8** %486, align 8
  %487 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %385, align 8
  %488 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %487, i64 0, i32 0
  %489 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %488, align 8
  %490 = icmp eq %"class.std::__1::__tree_node_base"* %489, null
  br i1 %490, label %494, label %491

491:                                              ; preds = %476
  %492 = ptrtoint %"class.std::__1::__tree_node_base"* %489 to i64
  store i64 %492, i64* %386, align 8
  %493 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %472, align 8
  br label %494

494:                                              ; preds = %491, %476
  %495 = phi %"class.std::__1::__tree_node_base"* [ %483, %476 ], [ %493, %491 ]
  %496 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %383, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %496, %"class.std::__1::__tree_node_base"* %495) #12
  %497 = load i64, i64* %387, align 8
  %498 = add i64 %497, 1
  store i64 %498, i64* %387, align 8
  %499 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %382, align 8
  br label %500

500:                                              ; preds = %470, %494
  %501 = phi %"class.std::__1::__tree_node.1205"* [ %499, %494 ], [ %440, %470 ]
  %502 = phi %"class.std::__1::__tree_node.1205"* [ %482, %494 ], [ %474, %470 ]
  %503 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %502, i64 0, i32 1, i32 0, i32 1
  %504 = load i64, i64* %503, align 8
  %505 = icmp eq %"class.std::__1::__tree_node.1205"* %501, null
  br i1 %505, label %532, label %506

506:                                              ; preds = %500, %528
  %507 = phi %"class.std::__1::__tree_node.1205"* [ %531, %528 ], [ %501, %500 ]
  %508 = phi %"class.std::__1::__tree_node_base"** [ %530, %528 ], [ %383, %500 ]
  %509 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %507, i64 0, i32 1, i32 0, i32 0
  %510 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %509, align 8
  %511 = icmp ult %"class.spvtools::opt::Instruction"* %399, %510
  br i1 %511, label %512, label %518

512:                                              ; preds = %506
  %513 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %507, i64 0, i32 0, i32 0, i32 0
  %514 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %513, align 8
  %515 = icmp eq %"class.std::__1::__tree_node_base"* %514, null
  br i1 %515, label %516, label %528

516:                                              ; preds = %512
  %517 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %507, i64 0, i32 0, i32 0
  br label %532

518:                                              ; preds = %506
  %519 = icmp ult %"class.spvtools::opt::Instruction"* %510, %399
  br i1 %519, label %520, label %526

520:                                              ; preds = %518
  %521 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %507, i64 0, i32 0, i32 1
  %522 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %521, align 8
  %523 = icmp eq %"class.std::__1::__tree_node_base"* %522, null
  br i1 %523, label %524, label %528

524:                                              ; preds = %520
  %525 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %507, i64 0, i32 0, i32 0
  br label %532

526:                                              ; preds = %518
  %527 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %507, i64 0, i32 0, i32 0
  br label %532

528:                                              ; preds = %520, %512
  %529 = phi %"class.std::__1::__tree_node_base"* [ %514, %512 ], [ %522, %520 ]
  %530 = phi %"class.std::__1::__tree_node_base"** [ %513, %512 ], [ %521, %520 ]
  %531 = bitcast %"class.std::__1::__tree_node_base"* %529 to %"class.std::__1::__tree_node.1205"*
  br label %506

532:                                              ; preds = %500, %526, %524, %516
  %533 = phi %"class.std::__1::__tree_end_node"* [ %517, %516 ], [ %525, %524 ], [ %527, %526 ], [ %381, %500 ]
  %534 = phi %"class.std::__1::__tree_node_base"** [ %513, %516 ], [ %521, %524 ], [ %508, %526 ], [ %384, %500 ]
  %535 = bitcast %"class.std::__1::__tree_node_base"** %534 to %"class.std::__1::__tree_node.1205"**
  %536 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %535, align 8
  %537 = icmp eq %"class.std::__1::__tree_node.1205"* %536, null
  br i1 %537, label %538, label %561

538:                                              ; preds = %532
  %539 = call i8* @_Znwm(i64 48) #13, !noalias !21
  %540 = getelementptr inbounds i8, i8* %539, i64 32
  %541 = bitcast i8* %540 to i64*
  store i64 %400, i64* %541, align 8, !noalias !21
  %542 = getelementptr inbounds i8, i8* %539, i64 40
  %543 = bitcast i8* %542 to i64*
  store i64 0, i64* %543, align 8, !noalias !21
  %544 = bitcast i8* %539 to %"class.std::__1::__tree_node.1205"*
  %545 = bitcast i8* %539 to %"class.std::__1::__tree_node_base"*
  %546 = getelementptr inbounds i8, i8* %539, i64 16
  %547 = bitcast i8* %546 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %539, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %533, %"class.std::__1::__tree_end_node"** %547, align 8
  %548 = bitcast %"class.std::__1::__tree_node_base"** %534 to i8**
  store i8* %539, i8** %548, align 8
  %549 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %385, align 8
  %550 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %549, i64 0, i32 0
  %551 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %550, align 8
  %552 = icmp eq %"class.std::__1::__tree_node_base"* %551, null
  br i1 %552, label %556, label %553

553:                                              ; preds = %538
  %554 = ptrtoint %"class.std::__1::__tree_node_base"* %551 to i64
  store i64 %554, i64* %386, align 8
  %555 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %534, align 8
  br label %556

556:                                              ; preds = %553, %538
  %557 = phi %"class.std::__1::__tree_node_base"* [ %545, %538 ], [ %555, %553 ]
  %558 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %383, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %558, %"class.std::__1::__tree_node_base"* %557) #12
  %559 = load i64, i64* %387, align 8
  %560 = add i64 %559, 1
  store i64 %560, i64* %387, align 8
  br label %561

561:                                              ; preds = %532, %556
  %562 = phi %"class.std::__1::__tree_node.1205"* [ %544, %556 ], [ %536, %532 ]
  %563 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %562, i64 0, i32 1, i32 0, i32 1
  %564 = load i64, i64* %563, align 8
  %565 = icmp ugt i64 %504, %564
  br i1 %565, label %581, label %566

566:                                              ; preds = %561
  %567 = inttoptr i64 %418 to %"class.spvtools::opt::Instruction"*
  %568 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis13GetDependenceEPKNS0_11InstructionES4_PNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* nonnull %4, %"class.spvtools::opt::Instruction"* %567, %"class.spvtools::opt::Instruction"* %399, %"class.spvtools::opt::DistanceVector"* nonnull %8) #12
  br i1 %568, label %581, label %569

569:                                              ; preds = %566
  %570 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %389, align 8
  %571 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %390, align 8
  %572 = icmp eq %"class.spvtools::opt::DistanceEntry"* %570, %571
  br i1 %572, label %584, label %575

573:                                              ; preds = %575
  %574 = icmp eq %"class.spvtools::opt::DistanceEntry"* %580, %571
  br i1 %574, label %581, label %575

575:                                              ; preds = %569, %573
  %576 = phi %"class.spvtools::opt::DistanceEntry"* [ %580, %573 ], [ %570, %569 ]
  %577 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %576, i64 0, i32 2
  %578 = load i64, i64* %577, align 8
  %579 = icmp slt i64 %578, 1
  %580 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %576, i64 1
  br i1 %579, label %573, label %581

581:                                              ; preds = %573, %575, %561, %566
  %582 = phi i32 [ 0, %566 ], [ 1, %561 ], [ 0, %573 ], [ 1, %575 ]
  %583 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %389, align 8
  br label %584

584:                                              ; preds = %581, %569
  %585 = phi %"class.spvtools::opt::DistanceEntry"* [ %583, %581 ], [ %570, %569 ]
  %586 = phi i32 [ %582, %581 ], [ 0, %569 ]
  %587 = icmp eq %"class.spvtools::opt::DistanceEntry"* %585, null
  br i1 %587, label %591, label %588

588:                                              ; preds = %584
  %589 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %585 to i64
  store i64 %589, i64* %394, align 8
  %590 = bitcast %"class.spvtools::opt::DistanceEntry"* %585 to i8*
  call void @_ZdlPv(i8* %590) #13
  br label %591

591:                                              ; preds = %584, %588
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %388) #12
  %592 = icmp eq i32 %586, 0
  %593 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %416, i64 1
  br i1 %592, label %413, label %810

594:                                              ; preds = %407
  %595 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %188, align 8
  %596 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %189, align 8
  %597 = icmp eq %"class.spvtools::opt::Instruction"** %595, %596
  br i1 %597, label %779, label %600

598:                                              ; preds = %776
  %599 = icmp eq %"class.spvtools::opt::Instruction"** %778, %596
  br i1 %599, label %779, label %600

600:                                              ; preds = %594, %598
  %601 = phi %"class.spvtools::opt::Instruction"** [ %778, %598 ], [ %595, %594 ]
  %602 = bitcast %"class.spvtools::opt::Instruction"** %601 to i64*
  %603 = load i64, i64* %602, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #12
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %372)
  call void @llvm.memset.p0i8.i64(i8* align 2 %373, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %368, i8 0, i64 24, i1 false) #12
  br i1 %374, label %624, label %604

604:                                              ; preds = %600
  br i1 %375, label %605, label %607

605:                                              ; preds = %604
  %606 = bitcast %"class.spvtools::opt::DistanceVector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %606) #14
  unreachable

607:                                              ; preds = %604
  %608 = call i8* @_Znwm(i64 %376) #13
  %609 = bitcast i8* %608 to %"class.spvtools::opt::DistanceEntry"*
  store i8* %608, i8** %377, align 8
  store i8* %608, i8** %378, align 8
  %610 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %609, i64 %356
  store %"class.spvtools::opt::DistanceEntry"* %610, %"class.spvtools::opt::DistanceEntry"** %371, align 8
  br label %611

611:                                              ; preds = %611, %607
  %612 = phi %"class.spvtools::opt::DistanceEntry"* [ %609, %607 ], [ %620, %611 ]
  %613 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %612, i64 0, i32 0
  store i32 0, i32* %613, align 8
  %614 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %612, i64 0, i32 1
  store i32 7, i32* %614, align 4
  %615 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %612, i64 0, i32 2
  store i64 0, i64* %615, align 8
  %616 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %612, i64 0, i32 3
  store i8 0, i8* %616, align 8
  %617 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %612, i64 0, i32 4
  store i8 0, i8* %617, align 1
  %618 = bitcast %"class.spvtools::opt::DistanceEntry"* %612 to i8*
  %619 = getelementptr inbounds i8, i8* %618, i64 18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %619, i8* nonnull align 2 %372, i64 22, i1 false) #12
  %620 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %612, i64 1
  %621 = icmp eq %"class.spvtools::opt::DistanceEntry"* %620, %610
  br i1 %621, label %622, label %611

622:                                              ; preds = %611
  %623 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %610 to i64
  store i64 %623, i64* %379, align 8
  br label %624

624:                                              ; preds = %600, %622
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %372)
  %625 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %382, align 8
  %626 = icmp eq %"class.std::__1::__tree_node.1205"* %625, null
  br i1 %626, label %655, label %627

627:                                              ; preds = %624
  %628 = inttoptr i64 %603 to %"class.spvtools::opt::Instruction"*
  br label %629

629:                                              ; preds = %651, %627
  %630 = phi %"class.std::__1::__tree_node.1205"* [ %654, %651 ], [ %625, %627 ]
  %631 = phi %"class.std::__1::__tree_node_base"** [ %653, %651 ], [ %383, %627 ]
  %632 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %630, i64 0, i32 1, i32 0, i32 0
  %633 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %632, align 8
  %634 = icmp ugt %"class.spvtools::opt::Instruction"* %633, %628
  br i1 %634, label %635, label %641

635:                                              ; preds = %629
  %636 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %630, i64 0, i32 0, i32 0, i32 0
  %637 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %636, align 8
  %638 = icmp eq %"class.std::__1::__tree_node_base"* %637, null
  br i1 %638, label %639, label %651

639:                                              ; preds = %635
  %640 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %630, i64 0, i32 0, i32 0
  br label %655

641:                                              ; preds = %629
  %642 = icmp ult %"class.spvtools::opt::Instruction"* %633, %628
  br i1 %642, label %643, label %649

643:                                              ; preds = %641
  %644 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %630, i64 0, i32 0, i32 1
  %645 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %644, align 8
  %646 = icmp eq %"class.std::__1::__tree_node_base"* %645, null
  br i1 %646, label %647, label %651

647:                                              ; preds = %643
  %648 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %630, i64 0, i32 0, i32 0
  br label %655

649:                                              ; preds = %641
  %650 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %630, i64 0, i32 0, i32 0
  br label %655

651:                                              ; preds = %643, %635
  %652 = phi %"class.std::__1::__tree_node_base"* [ %637, %635 ], [ %645, %643 ]
  %653 = phi %"class.std::__1::__tree_node_base"** [ %636, %635 ], [ %644, %643 ]
  %654 = bitcast %"class.std::__1::__tree_node_base"* %652 to %"class.std::__1::__tree_node.1205"*
  br label %629

655:                                              ; preds = %624, %649, %647, %639
  %656 = phi %"class.std::__1::__tree_end_node"* [ %640, %639 ], [ %648, %647 ], [ %650, %649 ], [ %381, %624 ]
  %657 = phi %"class.std::__1::__tree_node_base"** [ %636, %639 ], [ %644, %647 ], [ %631, %649 ], [ %384, %624 ]
  %658 = bitcast %"class.std::__1::__tree_node_base"** %657 to %"class.std::__1::__tree_node.1205"**
  %659 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %658, align 8
  %660 = icmp eq %"class.std::__1::__tree_node.1205"* %659, null
  br i1 %660, label %661, label %685

661:                                              ; preds = %655
  %662 = call i8* @_Znwm(i64 48) #13, !noalias !24
  %663 = getelementptr inbounds i8, i8* %662, i64 32
  %664 = bitcast i8* %663 to i64*
  store i64 %603, i64* %664, align 8, !noalias !24
  %665 = getelementptr inbounds i8, i8* %662, i64 40
  %666 = bitcast i8* %665 to i64*
  store i64 0, i64* %666, align 8, !noalias !24
  %667 = bitcast i8* %662 to %"class.std::__1::__tree_node.1205"*
  %668 = bitcast i8* %662 to %"class.std::__1::__tree_node_base"*
  %669 = getelementptr inbounds i8, i8* %662, i64 16
  %670 = bitcast i8* %669 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %662, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %656, %"class.std::__1::__tree_end_node"** %670, align 8
  %671 = bitcast %"class.std::__1::__tree_node_base"** %657 to i8**
  store i8* %662, i8** %671, align 8
  %672 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %385, align 8
  %673 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %672, i64 0, i32 0
  %674 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %673, align 8
  %675 = icmp eq %"class.std::__1::__tree_node_base"* %674, null
  br i1 %675, label %679, label %676

676:                                              ; preds = %661
  %677 = ptrtoint %"class.std::__1::__tree_node_base"* %674 to i64
  store i64 %677, i64* %386, align 8
  %678 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %657, align 8
  br label %679

679:                                              ; preds = %676, %661
  %680 = phi %"class.std::__1::__tree_node_base"* [ %668, %661 ], [ %678, %676 ]
  %681 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %383, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %681, %"class.std::__1::__tree_node_base"* %680) #12
  %682 = load i64, i64* %387, align 8
  %683 = add i64 %682, 1
  store i64 %683, i64* %387, align 8
  %684 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %382, align 8
  br label %685

685:                                              ; preds = %655, %679
  %686 = phi %"class.std::__1::__tree_node.1205"* [ %684, %679 ], [ %625, %655 ]
  %687 = phi %"class.std::__1::__tree_node.1205"* [ %667, %679 ], [ %659, %655 ]
  %688 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %687, i64 0, i32 1, i32 0, i32 1
  %689 = load i64, i64* %688, align 8
  %690 = icmp eq %"class.std::__1::__tree_node.1205"* %686, null
  br i1 %690, label %717, label %691

691:                                              ; preds = %685, %713
  %692 = phi %"class.std::__1::__tree_node.1205"* [ %716, %713 ], [ %686, %685 ]
  %693 = phi %"class.std::__1::__tree_node_base"** [ %715, %713 ], [ %383, %685 ]
  %694 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %692, i64 0, i32 1, i32 0, i32 0
  %695 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %694, align 8
  %696 = icmp ult %"class.spvtools::opt::Instruction"* %399, %695
  br i1 %696, label %697, label %703

697:                                              ; preds = %691
  %698 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %692, i64 0, i32 0, i32 0, i32 0
  %699 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %698, align 8
  %700 = icmp eq %"class.std::__1::__tree_node_base"* %699, null
  br i1 %700, label %701, label %713

701:                                              ; preds = %697
  %702 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %692, i64 0, i32 0, i32 0
  br label %717

703:                                              ; preds = %691
  %704 = icmp ult %"class.spvtools::opt::Instruction"* %695, %399
  br i1 %704, label %705, label %711

705:                                              ; preds = %703
  %706 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %692, i64 0, i32 0, i32 1
  %707 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %706, align 8
  %708 = icmp eq %"class.std::__1::__tree_node_base"* %707, null
  br i1 %708, label %709, label %713

709:                                              ; preds = %705
  %710 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %692, i64 0, i32 0, i32 0
  br label %717

711:                                              ; preds = %703
  %712 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %692, i64 0, i32 0, i32 0
  br label %717

713:                                              ; preds = %705, %697
  %714 = phi %"class.std::__1::__tree_node_base"* [ %699, %697 ], [ %707, %705 ]
  %715 = phi %"class.std::__1::__tree_node_base"** [ %698, %697 ], [ %706, %705 ]
  %716 = bitcast %"class.std::__1::__tree_node_base"* %714 to %"class.std::__1::__tree_node.1205"*
  br label %691

717:                                              ; preds = %685, %711, %709, %701
  %718 = phi %"class.std::__1::__tree_end_node"* [ %702, %701 ], [ %710, %709 ], [ %712, %711 ], [ %381, %685 ]
  %719 = phi %"class.std::__1::__tree_node_base"** [ %698, %701 ], [ %706, %709 ], [ %693, %711 ], [ %384, %685 ]
  %720 = bitcast %"class.std::__1::__tree_node_base"** %719 to %"class.std::__1::__tree_node.1205"**
  %721 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %720, align 8
  %722 = icmp eq %"class.std::__1::__tree_node.1205"* %721, null
  br i1 %722, label %723, label %746

723:                                              ; preds = %717
  %724 = call i8* @_Znwm(i64 48) #13, !noalias !27
  %725 = getelementptr inbounds i8, i8* %724, i64 32
  %726 = bitcast i8* %725 to i64*
  store i64 %400, i64* %726, align 8, !noalias !27
  %727 = getelementptr inbounds i8, i8* %724, i64 40
  %728 = bitcast i8* %727 to i64*
  store i64 0, i64* %728, align 8, !noalias !27
  %729 = bitcast i8* %724 to %"class.std::__1::__tree_node.1205"*
  %730 = bitcast i8* %724 to %"class.std::__1::__tree_node_base"*
  %731 = getelementptr inbounds i8, i8* %724, i64 16
  %732 = bitcast i8* %731 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %724, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %718, %"class.std::__1::__tree_end_node"** %732, align 8
  %733 = bitcast %"class.std::__1::__tree_node_base"** %719 to i8**
  store i8* %724, i8** %733, align 8
  %734 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %385, align 8
  %735 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %734, i64 0, i32 0
  %736 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %735, align 8
  %737 = icmp eq %"class.std::__1::__tree_node_base"* %736, null
  br i1 %737, label %741, label %738

738:                                              ; preds = %723
  %739 = ptrtoint %"class.std::__1::__tree_node_base"* %736 to i64
  store i64 %739, i64* %386, align 8
  %740 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %719, align 8
  br label %741

741:                                              ; preds = %738, %723
  %742 = phi %"class.std::__1::__tree_node_base"* [ %730, %723 ], [ %740, %738 ]
  %743 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %383, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %743, %"class.std::__1::__tree_node_base"* %742) #12
  %744 = load i64, i64* %387, align 8
  %745 = add i64 %744, 1
  store i64 %745, i64* %387, align 8
  br label %746

746:                                              ; preds = %717, %741
  %747 = phi %"class.std::__1::__tree_node.1205"* [ %729, %741 ], [ %721, %717 ]
  %748 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %747, i64 0, i32 1, i32 0, i32 1
  %749 = load i64, i64* %748, align 8
  %750 = icmp ugt i64 %689, %749
  br i1 %750, label %766, label %751

751:                                              ; preds = %746
  %752 = inttoptr i64 %603 to %"class.spvtools::opt::Instruction"*
  %753 = call zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis13GetDependenceEPKNS0_11InstructionES4_PNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"* nonnull %4, %"class.spvtools::opt::Instruction"* %399, %"class.spvtools::opt::Instruction"* %752, %"class.spvtools::opt::DistanceVector"* nonnull %9) #12
  br i1 %753, label %766, label %754

754:                                              ; preds = %751
  %755 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %369, align 8
  %756 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %370, align 8
  %757 = icmp eq %"class.spvtools::opt::DistanceEntry"* %755, %756
  br i1 %757, label %769, label %760

758:                                              ; preds = %760
  %759 = icmp eq %"class.spvtools::opt::DistanceEntry"* %765, %756
  br i1 %759, label %766, label %760

760:                                              ; preds = %754, %758
  %761 = phi %"class.spvtools::opt::DistanceEntry"* [ %765, %758 ], [ %755, %754 ]
  %762 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %761, i64 0, i32 2
  %763 = load i64, i64* %762, align 8
  %764 = icmp sgt i64 %763, -1
  %765 = getelementptr inbounds %"class.spvtools::opt::DistanceEntry", %"class.spvtools::opt::DistanceEntry"* %761, i64 1
  br i1 %764, label %758, label %766

766:                                              ; preds = %758, %760, %746, %751
  %767 = phi i32 [ 0, %751 ], [ 1, %746 ], [ 0, %758 ], [ 1, %760 ]
  %768 = load %"class.spvtools::opt::DistanceEntry"*, %"class.spvtools::opt::DistanceEntry"** %369, align 8
  br label %769

769:                                              ; preds = %766, %754
  %770 = phi %"class.spvtools::opt::DistanceEntry"* [ %768, %766 ], [ %755, %754 ]
  %771 = phi i32 [ %767, %766 ], [ 0, %754 ]
  %772 = icmp eq %"class.spvtools::opt::DistanceEntry"* %770, null
  br i1 %772, label %776, label %773

773:                                              ; preds = %769
  %774 = ptrtoint %"class.spvtools::opt::DistanceEntry"* %770 to i64
  store i64 %774, i64* %379, align 8
  %775 = bitcast %"class.spvtools::opt::DistanceEntry"* %770 to i8*
  call void @_ZdlPv(i8* %775) #13
  br label %776

776:                                              ; preds = %769, %773
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #12
  %777 = icmp eq i32 %771, 0
  %778 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %601, i64 1
  br i1 %777, label %598, label %810

779:                                              ; preds = %598, %413, %594, %409, %407
  %780 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %396, i64 1, i32 0
  %781 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %780, align 8
  %782 = icmp eq %"class.std::__1::__tree_node_base"* %781, null
  br i1 %782, label %783, label %791

783:                                              ; preds = %779
  %784 = bitcast %"class.std::__1::__tree_end_node"* %396 to %"class.std::__1::__tree_node_base"*
  %785 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %396, i64 2
  %786 = bitcast %"class.std::__1::__tree_end_node"* %785 to %"class.std::__1::__tree_end_node"**
  %787 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %786, align 8
  %788 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %787, i64 0, i32 0
  %789 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %788, align 8
  %790 = icmp eq %"class.std::__1::__tree_node_base"* %789, %784
  br i1 %790, label %807, label %798

791:                                              ; preds = %779, %791
  %792 = phi %"class.std::__1::__tree_node_base"* [ %794, %791 ], [ %781, %779 ]
  %793 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %792, i64 0, i32 0, i32 0
  %794 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %793, align 8
  %795 = icmp eq %"class.std::__1::__tree_node_base"* %794, null
  br i1 %795, label %796, label %791

796:                                              ; preds = %791
  %797 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %792, i64 0, i32 0
  br label %807

798:                                              ; preds = %783, %798
  %799 = phi %"class.std::__1::__tree_end_node"** [ %802, %798 ], [ %786, %783 ]
  %800 = bitcast %"class.std::__1::__tree_end_node"** %799 to %"class.std::__1::__tree_node_base"**
  %801 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %800, align 8
  %802 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %801, i64 0, i32 2
  %803 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %802, align 8
  %804 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %803, i64 0, i32 0
  %805 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %804, align 8
  %806 = icmp eq %"class.std::__1::__tree_node_base"* %805, %801
  br i1 %806, label %807, label %798

807:                                              ; preds = %798, %783, %796
  %808 = phi %"class.std::__1::__tree_end_node"* [ %797, %796 ], [ %787, %783 ], [ %803, %798 ]
  %809 = icmp eq %"class.std::__1::__tree_end_node"* %808, %365
  br i1 %809, label %810, label %395

810:                                              ; preds = %320, %403, %807, %776, %591, %362
  %811 = phi i1 [ true, %362 ], [ false, %591 ], [ false, %776 ], [ false, %403 ], [ true, %807 ], [ false, %320 ]
  %812 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %188, align 8
  %813 = icmp eq %"class.spvtools::opt::Instruction"** %812, null
  br i1 %813, label %818, label %814

814:                                              ; preds = %810
  %815 = ptrtoint %"class.spvtools::opt::Instruction"** %812 to i64
  %816 = bitcast %"class.spvtools::opt::Instruction"*** %189 to i64*
  store i64 %815, i64* %816, align 8
  %817 = bitcast %"class.spvtools::opt::Instruction"** %812 to i8*
  call void @_ZdlPv(i8* %817) #13
  br label %818

818:                                              ; preds = %810, %814
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #12
  %819 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %184, align 8
  %820 = icmp eq %"class.spvtools::opt::Instruction"** %819, null
  br i1 %820, label %825, label %821

821:                                              ; preds = %818
  %822 = ptrtoint %"class.spvtools::opt::Instruction"** %819 to i64
  %823 = bitcast %"class.spvtools::opt::Instruction"*** %185 to i64*
  store i64 %822, i64* %823, align 8
  %824 = bitcast %"class.spvtools::opt::Instruction"** %819 to i8*
  call void @_ZdlPv(i8* %824) #13
  br label %825

825:                                              ; preds = %818, %821
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #12
  call void @_ZN8spvtools3opt22LoopDependenceAnalysisD2Ev(%"class.spvtools::opt::LoopDependenceAnalysis"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %101) #12
  %826 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %15, align 8
  %827 = icmp eq %"class.spvtools::opt::Loop"** %826, null
  br i1 %827, label %831, label %828

828:                                              ; preds = %825
  %829 = ptrtoint %"class.spvtools::opt::Loop"** %826 to i64
  store i64 %829, i64* %21, align 8
  %830 = bitcast %"class.spvtools::opt::Loop"** %826 to i8*
  call void @_ZdlPv(i8* %830) #13
  br label %831

831:                                              ; preds = %825, %828
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br label %832

832:                                              ; preds = %1, %831
  %833 = phi i1 [ %811, %831 ], [ false, %1 ]
  ret i1 %833
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN8spvtools3opt22LoopDependenceAnalysis13GetDependenceEPKNS0_11InstructionES4_PNS0_14DistanceVectorE(%"class.spvtools::opt::LoopDependenceAnalysis"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::DistanceVector"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt22LoopDependenceAnalysisD2Ev(%"class.spvtools::opt::LoopDependenceAnalysis"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %40, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %40, label %24

24:                                               ; preds = %6, %37
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %37 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 1
  %29 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"class.spvtools::opt::Constraint"**
  %30 = load %"class.spvtools::opt::Constraint"*, %"class.spvtools::opt::Constraint"** %29, align 8
  store %"class.spvtools::opt::Constraint"* null, %"class.spvtools::opt::Constraint"** %29, align 8
  %31 = icmp eq %"class.spvtools::opt::Constraint"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.spvtools::opt::Constraint"* %30 to void (%"class.spvtools::opt::Constraint"*)***
  %34 = load void (%"class.spvtools::opt::Constraint"*)**, void (%"class.spvtools::opt::Constraint"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.spvtools::opt::Constraint"*)*, void (%"class.spvtools::opt::Constraint"*)** %34, i64 2
  %36 = load void (%"class.spvtools::opt::Constraint"*)*, void (%"class.spvtools::opt::Constraint"*)** %35, align 8
  tail call void %36(%"class.spvtools::opt::Constraint"* nonnull %30) #12
  br label %37

37:                                               ; preds = %32, %24
  %38 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  %39 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %39, label %40, label %24

40:                                               ; preds = %37, %1, %6
  %41 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 4, i32 0
  %42 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 4, i32 0, i32 1, i32 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node.1146"**
  %44 = load %"class.std::__1::__tree_node.1146"*, %"class.std::__1::__tree_node.1146"** %43, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.699"* %41, %"class.std::__1::__tree_node.1146"* %44) #12
  %45 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.681"*, %"struct.std::__1::__hash_node_base.681"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.681"* %46, null
  br i1 %47, label %64, label %48

48:                                               ; preds = %40, %61
  %49 = phi %"struct.std::__1::__hash_node_base.681"* [ %51, %61 ], [ %46, %40 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.681", %"struct.std::__1::__hash_node_base.681"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.681"*, %"struct.std::__1::__hash_node_base.681"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.681", %"struct.std::__1::__hash_node_base.681"* %49, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base.681"* %52 to %"class.spvtools::opt::SENode"**
  %54 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %53, align 8
  store %"class.spvtools::opt::SENode"* null, %"class.spvtools::opt::SENode"** %53, align 8
  %55 = icmp eq %"class.spvtools::opt::SENode"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %48
  %57 = bitcast %"class.spvtools::opt::SENode"* %54 to void (%"class.spvtools::opt::SENode"*)***
  %58 = load void (%"class.spvtools::opt::SENode"*)**, void (%"class.spvtools::opt::SENode"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %58, i64 2
  %60 = load void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %59, align 8
  tail call void %60(%"class.spvtools::opt::SENode"* nonnull %54) #12
  br label %61

61:                                               ; preds = %56, %48
  %62 = bitcast %"struct.std::__1::__hash_node_base.681"* %49 to i8*
  tail call void @_ZdlPv(i8* %62) #13
  %63 = icmp eq %"struct.std::__1::__hash_node_base.681"* %51, null
  br i1 %63, label %64, label %48

64:                                               ; preds = %61, %40
  %65 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.681"**, %"struct.std::__1::__hash_node_base.681"*** %65, align 8
  store %"struct.std::__1::__hash_node_base.681"** null, %"struct.std::__1::__hash_node_base.681"*** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.681"** %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = bitcast %"struct.std::__1::__hash_node_base.681"** %66 to i8*
  tail call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %64, %68
  %71 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 1, i32 0
  %72 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 2, i32 1, i32 0, i32 1, i32 0, i32 0
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node.1155"**
  %74 = load %"class.std::__1::__tree_node.1155"*, %"class.std::__1::__tree_node.1155"** %73, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.660"* %71, %"class.std::__1::__tree_node.1155"* %74) #12
  %75 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %75, align 8
  %77 = icmp eq %"class.spvtools::opt::Loop"** %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %70
  %79 = ptrtoint %"class.spvtools::opt::Loop"** %76 to i64
  %80 = getelementptr inbounds %"class.spvtools::opt::LoopDependenceAnalysis", %"class.spvtools::opt::LoopDependenceAnalysis"* %0, i64 0, i32 1, i32 0, i32 1
  %81 = bitcast %"class.spvtools::opt::Loop"*** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %"class.spvtools::opt::Loop"** %76 to i8*
  tail call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %70, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt15LoopFissionImpl9SplitLoopEv(%"class.spvtools::opt::LoopFissionImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple.1312", align 8
  %3 = alloca %"class.std::__1::tuple.1250", align 1
  %4 = alloca %"class.std::__1::tuple.1285", align 8
  %5 = alloca %"class.std::__1::tuple.1250", align 1
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.spvtools::opt::LoopUtils", align 8
  %8 = alloca %"struct.spvtools::opt::LoopUtils::LoopCloningResult", align 8
  %9 = alloca %"class.std::__1::vector.981", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %12 = bitcast %"class.spvtools::opt::LoopUtils"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %7, i64 0, i32 2
  %16 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %7, i64 0, i32 3
  %17 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %7, i64 0, i32 1
  %19 = bitcast %"class.spvtools::opt::LoopDescriptor"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  %20 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 5
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  store %"class.spvtools::opt::IRContext"* %20, %"class.spvtools::opt::IRContext"** %13, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %24, i64 0, i32 0
  %26 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %25, align 8
  %27 = tail call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %20, %"class.spvtools::opt::Function"* %26) #12
  store %"class.spvtools::opt::LoopDescriptor"* %27, %"class.spvtools::opt::LoopDescriptor"** %14, align 8
  store %"class.spvtools::opt::Loop"* %22, %"class.spvtools::opt::Loop"** %15, align 8
  %28 = bitcast %"class.spvtools::opt::BasicBlock"** %23 to i64**
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.spvtools::opt::Function"** %16 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %32) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 bitcast (%"struct.spvtools::opt::LoopUtils::LoopCloningResult"* @__const._ZN8spvtools3opt15LoopFissionImpl9SplitLoopEv.clone_results to i8*), i64 160, i1 false)
  %33 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 0, i32 0, i32 3
  %34 = bitcast %"class.std::__1::__compressed_pair.1054"* %33 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 1, i32 0, i32 3
  %37 = bitcast %"class.std::__1::__compressed_pair.285"* %36 to i32*
  %38 = bitcast %"class.std::__1::unordered_map.265"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %37, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 2
  %40 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 2, i32 0, i32 3
  %41 = bitcast %"class.std::__1::__compressed_pair.364"* %40 to i32*
  %42 = bitcast %"class.std::__1::unordered_map.344"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 3
  %44 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 3, i32 0, i32 3
  %45 = bitcast %"class.std::__1::__compressed_pair.364"* %44 to i32*
  %46 = bitcast %"class.std::__1::unordered_map.344"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %45, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 4
  %48 = bitcast %"class.std::__1::vector.53"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #12
  %49 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"* nonnull %7, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %8) #12
  %50 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %49, i64 0, i32 1
  %51 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %50, align 8
  %52 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %51) #12
  %53 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %49, i64 0, i32 3
  %55 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %54, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %55, i64 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 4
  %59 = load i8, i8* %58, align 1, !range !10
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %1
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 3
  %63 = load i8, i8* %62, align 4, !range !10
  %64 = zext i8 %63 to i32
  %65 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %57, i32 %64) #12
  br label %66

66:                                               ; preds = %61, %1
  %67 = phi i32 [ %65, %61 ], [ 0, %1 ]
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %70 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %72 = bitcast i32** %70 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %71, %"struct.std::__1::aligned_storage<4, 4>::type"** %72, align 8
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %74 = bitcast %"class.std::__1::unique_ptr.13"* %73 to i64*
  store i64 0, i64* %74, align 8
  %75 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %71 to i32*
  store i64 1, i64* %69, align 8
  store i32 %67, i32* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 3
  %77 = load i8, i8* %76, align 4, !range !10
  %78 = icmp eq i8 %77, 0
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 4
  %80 = load i8, i8* %79, align 1, !range !10
  %81 = icmp eq i8 %80, 0
  %82 = select i1 %81, i64 1, i64 2
  %83 = xor i1 %81, true
  %84 = zext i1 %83 to i64
  %85 = select i1 %78, i64 %84, i64 %82
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 6, i32 0, i32 0
  %87 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %86, align 8
  %88 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %87, i64 %85, i32 1
  %89 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %88, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %90 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %90, align 8
  store %"class.std::__1::vector.16"* null, %"class.std::__1::vector.16"** %90, align 8
  %92 = icmp eq %"class.std::__1::vector.16"* %91, null
  br i1 %92, label %104, label %93

93:                                               ; preds = %66
  %94 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %91, i64 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp eq i32* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = ptrtoint i32* %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %91, i64 0, i32 0, i32 1
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i32* %95 to i8*
  call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %97, %93
  %103 = bitcast %"class.std::__1::vector.16"* %91 to i8*
  call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %66, %102
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #12
  %105 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %16, align 8
  %106 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %107 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"* %106) #12
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %109, i64 0, i32 4
  %111 = load i8, i8* %110, align 1, !range !10
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %109, i64 0, i32 3
  %115 = load i8, i8* %114, align 4, !range !10
  %116 = zext i8 %115 to i32
  %117 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %109, i32 %116) #12
  br label %118

118:                                              ; preds = %104, %113
  %119 = phi i32 [ %117, %113 ], [ 0, %104 ]
  %120 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %105, i64 0, i32 3, i32 0, i32 0
  %121 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %120, align 8
  %122 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %105, i64 0, i32 3, i32 0, i32 1
  %123 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %122, align 8
  %124 = icmp eq %"class.std::__1::unique_ptr.55"* %121, %123
  br i1 %124, label %145, label %125

125:                                              ; preds = %118, %142
  %126 = phi %"class.std::__1::unique_ptr.55"* [ %143, %142 ], [ %121, %118 ]
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %127, align 8
  %129 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %128, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 4
  %132 = load i8, i8* %131, align 1, !range !10
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %139, label %134

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 3
  %136 = load i8, i8* %135, align 4, !range !10
  %137 = zext i8 %136 to i32
  %138 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %130, i32 %137) #12
  br label %139

139:                                              ; preds = %134, %125
  %140 = phi i32 [ %138, %134 ], [ 0, %125 ]
  %141 = icmp eq i32 %140, %119
  br i1 %141, label %145, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %126, i64 1
  %144 = icmp eq %"class.std::__1::unique_ptr.55"* %143, %123
  br i1 %144, label %145, label %125

145:                                              ; preds = %139, %142, %118
  %146 = phi %"class.std::__1::unique_ptr.55"* [ %121, %118 ], [ %123, %142 ], [ %126, %139 ]
  %147 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %16, align 8
  %148 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %47, i64 0, i32 0, i32 0
  %149 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %148, align 8
  %150 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 4, i32 0, i32 1
  %151 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %146, i64 1
  %153 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %147, i64 0, i32 3
  %154 = call %"class.std::__1::unique_ptr.55"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.53"* %153, %"class.std::__1::unique_ptr.55"* %152, %"class.std::__1::unique_ptr.55"* %149, %"class.std::__1::unique_ptr.55"* %151) #12
  %155 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %156 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %54, align 8
  call void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %155, %"class.spvtools::opt::BasicBlock"* %156) #12
  %157 = bitcast %"class.std::__1::vector.981"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #12
  %158 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %9, i64 0, i32 0, i32 0
  %159 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %9, i64 0, i32 0, i32 1
  %160 = getelementptr inbounds %"class.std::__1::vector.981", %"class.std::__1::vector.981"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 0, i64 24, i1 false) #12
  %161 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %161, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %163 = bitcast %"struct.std::__1::__hash_node_base.940"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %179, label %166

166:                                              ; preds = %145
  %167 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %168 = bitcast %"class.std::__1::__tree_end_node"* %167 to %"class.std::__1::__tree_node.1211"**
  %169 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %170 = bitcast %"class.std::__1::__tree_end_node"* %169 to %"class.std::__1::__tree_node.1211"**
  %171 = bitcast %"class.spvtools::opt::Instruction"*** %159 to i64*
  %172 = bitcast %"class.std::__1::vector.981"* %9 to i64*
  %173 = bitcast %"class.spvtools::opt::Instruction"*** %160 to i64*
  %174 = bitcast i32* %10 to i8*
  %175 = getelementptr inbounds %"class.std::__1::unordered_map.265", %"class.std::__1::unordered_map.265"* %35, i64 0, i32 0
  %176 = bitcast %"class.std::__1::tuple.1312"* %2 to i8*
  %177 = getelementptr inbounds %"class.std::__1::tuple.1312", %"class.std::__1::tuple.1312"* %2, i64 0, i32 0, i32 0, i32 0
  %178 = getelementptr inbounds %"class.std::__1::tuple.1250", %"class.std::__1::tuple.1250"* %3, i64 0, i32 0
  br label %197

179:                                              ; preds = %289, %145
  %180 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %49, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %181 = bitcast %"struct.std::__1::__hash_node_base.940"** %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %424, label %184

184:                                              ; preds = %179
  %185 = bitcast %"class.spvtools::opt::Instruction"** %11 to i8*
  %186 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %8, i64 0, i32 0, i32 0
  %187 = bitcast %"class.std::__1::tuple.1285"* %4 to i8*
  %188 = getelementptr inbounds %"class.std::__1::tuple.1285", %"class.std::__1::tuple.1285"* %4, i64 0, i32 0, i32 0, i32 0
  %189 = getelementptr inbounds %"class.std::__1::tuple.1250", %"class.std::__1::tuple.1250"* %5, i64 0, i32 0
  %190 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %191 = bitcast %"class.std::__1::__tree_end_node"* %190 to %"class.std::__1::__tree_node.1211"**
  %192 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %193 = bitcast %"class.std::__1::__tree_end_node"* %192 to %"class.std::__1::__tree_node.1211"**
  %194 = bitcast %"class.spvtools::opt::Instruction"*** %159 to i64*
  %195 = bitcast %"class.std::__1::vector.981"* %9 to i64*
  %196 = bitcast %"class.spvtools::opt::Instruction"*** %160 to i64*
  br label %428

197:                                              ; preds = %166, %289
  %198 = phi i64 [ %164, %166 ], [ %291, %289 ]
  %199 = inttoptr i64 %198 to %"struct.std::__1::__hash_node.1139"*
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node.1139", %"struct.std::__1::__hash_node.1139"* %199, i64 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %203 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %202, i64 0, i32 11
  %204 = load i32, i32* %203, align 8
  %205 = and i32 %204, 16
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %223

207:                                              ; preds = %197
  %208 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %202, i64 0, i32 4, i32 0, i32 0, i32 0
  %209 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %208, align 8
  %210 = call i8* @_Znwm(i64 400) #13
  %211 = bitcast i8* %210 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %211, %"class.spvtools::opt::Module"* %209) #12
  %212 = ptrtoint i8* %210 to i64
  %213 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %202, i64 0, i32 15
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr.289", %"class.std::__1::unique_ptr.289"* %213, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %214, align 8
  %216 = bitcast %"class.std::__1::unique_ptr.289"* %213 to i64*
  store i64 %212, i64* %216, align 8
  %217 = icmp eq %"class.spvtools::opt::CFG"* %215, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %207
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %215) #12
  %219 = bitcast %"class.spvtools::opt::CFG"* %215 to i8*
  call void @_ZdlPv(i8* %219) #13
  br label %220

220:                                              ; preds = %218, %207
  %221 = load i32, i32* %203, align 8
  %222 = or i32 %221, 16
  store i32 %222, i32* %203, align 8
  br label %223

223:                                              ; preds = %197, %220
  %224 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %202, i64 0, i32 15, i32 0, i32 0, i32 0
  %225 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %224, align 8
  %226 = zext i32 %201 to i64
  %227 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %225, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %228 = load i64, i64* %227, align 8
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %278, label %230

230:                                              ; preds = %223
  %231 = call i64 @llvm.ctpop.i64(i64 %228) #12, !range !11
  %232 = icmp ugt i64 %231, 1
  br i1 %232, label %236, label %233

233:                                              ; preds = %230
  %234 = add i64 %228, 4294967295
  %235 = and i64 %234, %226
  br label %240

236:                                              ; preds = %230
  %237 = icmp ugt i64 %228, %226
  br i1 %237, label %240, label %238

238:                                              ; preds = %236
  %239 = urem i64 %226, %228
  br label %240

240:                                              ; preds = %238, %236, %233
  %241 = phi i64 [ %235, %233 ], [ %239, %238 ], [ %226, %236 ]
  %242 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %225, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load %"struct.std::__1::__hash_node_base.349"**, %"struct.std::__1::__hash_node_base.349"*** %242, align 8
  %244 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %243, i64 %241
  %245 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %244, align 8
  %246 = icmp eq %"struct.std::__1::__hash_node_base.349"* %245, null
  br i1 %246, label %278, label %247

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %245, i64 0, i32 0
  %249 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %248, align 8
  %250 = icmp eq %"struct.std::__1::__hash_node_base.349"* %249, null
  br i1 %250, label %278, label %251

251:                                              ; preds = %247
  %252 = add i64 %228, -1
  br label %253

253:                                              ; preds = %274, %251
  %254 = phi %"struct.std::__1::__hash_node_base.349"* [ %249, %251 ], [ %276, %274 ]
  %255 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %254, i64 1
  %256 = bitcast %"struct.std::__1::__hash_node_base.349"* %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = icmp eq i64 %257, %226
  br i1 %258, label %269, label %259

259:                                              ; preds = %253
  br i1 %232, label %262, label %260

260:                                              ; preds = %259
  %261 = and i64 %257, %252
  br label %266

262:                                              ; preds = %259
  %263 = icmp ult i64 %257, %228
  br i1 %263, label %266, label %264

264:                                              ; preds = %262
  %265 = urem i64 %257, %228
  br label %266

266:                                              ; preds = %264, %262, %260
  %267 = phi i64 [ %261, %260 ], [ %265, %264 ], [ %257, %262 ]
  %268 = icmp eq i64 %267, %241
  br i1 %268, label %274, label %278

269:                                              ; preds = %253
  %270 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %254, i64 2
  %271 = bitcast %"struct.std::__1::__hash_node_base.349"* %270 to i32*
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, %201
  br i1 %273, label %279, label %274

274:                                              ; preds = %269, %266
  %275 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %254, i64 0, i32 0
  %276 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %275, align 8
  %277 = icmp eq %"struct.std::__1::__hash_node_base.349"* %276, null
  br i1 %277, label %278, label %253

278:                                              ; preds = %247, %240, %223, %274, %266
  call void @abort() #14
  unreachable

279:                                              ; preds = %269
  %280 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %254, i64 3
  %281 = bitcast %"struct.std::__1::__hash_node_base.349"* %280 to %"class.spvtools::opt::BasicBlock"**
  %282 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %281, align 8
  %283 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %282, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %284 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %282, i64 0, i32 2, i32 0, i32 1
  %285 = bitcast %"class.spvtools::opt::Instruction"** %283 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = inttoptr i64 %286 to %"class.spvtools::opt::Instruction"*
  %288 = icmp eq %"class.spvtools::opt::Instruction"* %284, %287
  br i1 %288, label %289, label %293

289:                                              ; preds = %417, %279
  %290 = inttoptr i64 %198 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %179, label %197

293:                                              ; preds = %279, %417
  %294 = phi %"class.spvtools::opt::Instruction"* [ %422, %417 ], [ %287, %279 ]
  %295 = phi i64 [ %421, %417 ], [ %286, %279 ]
  %296 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %168, align 8
  %297 = icmp eq %"class.std::__1::__tree_node.1211"* %296, null
  br i1 %297, label %417, label %298

298:                                              ; preds = %293, %310
  %299 = phi %"class.std::__1::__tree_node.1211"* [ %312, %310 ], [ %296, %293 ]
  %300 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %299, i64 0, i32 1
  %301 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %300, align 8
  %302 = icmp ugt %"class.spvtools::opt::Instruction"* %301, %294
  br i1 %302, label %303, label %305

303:                                              ; preds = %298
  %304 = bitcast %"class.std::__1::__tree_node.1211"* %299 to %"class.std::__1::__tree_node.1211"**
  br label %310

305:                                              ; preds = %298
  %306 = icmp ult %"class.spvtools::opt::Instruction"* %301, %294
  br i1 %306, label %307, label %314

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %299, i64 0, i32 0, i32 1
  %309 = bitcast %"class.std::__1::__tree_node_base"** %308 to %"class.std::__1::__tree_node.1211"**
  br label %310

310:                                              ; preds = %307, %303
  %311 = phi %"class.std::__1::__tree_node.1211"** [ %304, %303 ], [ %309, %307 ]
  %312 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node.1211"* %312, null
  br i1 %313, label %417, label %298

314:                                              ; preds = %305
  %315 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %170, align 8
  %316 = icmp eq %"class.std::__1::__tree_node.1211"* %315, null
  br i1 %316, label %333, label %317

317:                                              ; preds = %314, %329
  %318 = phi %"class.std::__1::__tree_node.1211"* [ %331, %329 ], [ %315, %314 ]
  %319 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %318, i64 0, i32 1
  %320 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %319, align 8
  %321 = icmp ugt %"class.spvtools::opt::Instruction"* %320, %294
  br i1 %321, label %322, label %324

322:                                              ; preds = %317
  %323 = bitcast %"class.std::__1::__tree_node.1211"* %318 to %"class.std::__1::__tree_node.1211"**
  br label %329

324:                                              ; preds = %317
  %325 = icmp ult %"class.spvtools::opt::Instruction"* %320, %294
  br i1 %325, label %326, label %417

326:                                              ; preds = %324
  %327 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %318, i64 0, i32 0, i32 1
  %328 = bitcast %"class.std::__1::__tree_node_base"** %327 to %"class.std::__1::__tree_node.1211"**
  br label %329

329:                                              ; preds = %326, %322
  %330 = phi %"class.std::__1::__tree_node.1211"** [ %323, %322 ], [ %328, %326 ]
  %331 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %330, align 8
  %332 = icmp eq %"class.std::__1::__tree_node.1211"* %331, null
  br i1 %332, label %333, label %317

333:                                              ; preds = %329, %314
  %334 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %159, align 8
  %335 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %160, align 8
  %336 = icmp ult %"class.spvtools::opt::Instruction"** %334, %335
  %337 = ptrtoint %"class.spvtools::opt::Instruction"** %335 to i64
  br i1 %336, label %338, label %342

338:                                              ; preds = %333
  %339 = bitcast %"class.spvtools::opt::Instruction"** %334 to i64*
  store i64 %295, i64* %339, align 8
  %340 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %334, i64 1
  %341 = ptrtoint %"class.spvtools::opt::Instruction"** %340 to i64
  store i64 %341, i64* %171, align 8
  br label %386

342:                                              ; preds = %333
  %343 = ptrtoint %"class.spvtools::opt::Instruction"** %334 to i64
  %344 = load i64, i64* %172, align 8
  %345 = sub i64 %343, %344
  %346 = ashr exact i64 %345, 3
  %347 = add nsw i64 %346, 1
  %348 = icmp ugt i64 %347, 2305843009213693951
  br i1 %348, label %349, label %351

349:                                              ; preds = %342
  %350 = bitcast %"class.std::__1::vector.981"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %350) #14
  unreachable

351:                                              ; preds = %342
  %352 = sub i64 %337, %344
  %353 = ashr exact i64 %352, 3
  %354 = icmp ult i64 %353, 1152921504606846975
  br i1 %354, label %355, label %363

355:                                              ; preds = %351
  %356 = ashr exact i64 %352, 2
  %357 = icmp ult i64 %356, %347
  %358 = select i1 %357, i64 %347, i64 %356
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %368, label %360

360:                                              ; preds = %355
  %361 = icmp ugt i64 %358, 2305843009213693951
  br i1 %361, label %362, label %363

362:                                              ; preds = %360
  call void @abort() #14
  unreachable

363:                                              ; preds = %360, %351
  %364 = phi i64 [ %358, %360 ], [ 2305843009213693951, %351 ]
  %365 = shl i64 %364, 3
  %366 = call i8* @_Znwm(i64 %365) #13
  %367 = bitcast i8* %366 to %"class.spvtools::opt::Instruction"**
  br label %368

368:                                              ; preds = %363, %355
  %369 = phi i64 [ %364, %363 ], [ 0, %355 ]
  %370 = phi i8* [ %366, %363 ], [ null, %355 ]
  %371 = phi %"class.spvtools::opt::Instruction"** [ %367, %363 ], [ null, %355 ]
  %372 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %371, i64 %346
  %373 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %371, i64 %369
  %374 = ptrtoint %"class.spvtools::opt::Instruction"** %373 to i64
  %375 = bitcast %"class.spvtools::opt::Instruction"** %372 to i64*
  store i64 %295, i64* %375, align 8
  %376 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %372, i64 1
  %377 = ptrtoint %"class.spvtools::opt::Instruction"** %376 to i64
  %378 = ptrtoint %"class.spvtools::opt::Instruction"** %371 to i64
  %379 = icmp sgt i64 %345, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %368
  %381 = inttoptr i64 %344 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %370, i8* align 8 %381, i64 %345, i1 false) #12
  br label %382

382:                                              ; preds = %380, %368
  store i64 %378, i64* %172, align 8
  store i64 %377, i64* %171, align 8
  store i64 %374, i64* %173, align 8
  %383 = icmp eq i64 %344, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %382
  %385 = inttoptr i64 %344 to i8*
  call void @_ZdlPv(i8* %385) #13
  br label %386

386:                                              ; preds = %338, %382, %384
  %387 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %294, i64 0, i32 2
  %388 = load i32, i32* %387, align 8
  %389 = icmp eq i32 %388, 245
  br i1 %389, label %390, label %417

390:                                              ; preds = %386
  %391 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %392 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %294, i64 0, i32 4
  %393 = load i8, i8* %392, align 1, !range !10
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %390
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #12
  br label %407

396:                                              ; preds = %390
  %397 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %294, i64 0, i32 3
  %398 = load i8, i8* %397, align 4, !range !10
  %399 = zext i8 %398 to i32
  %400 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %294, i32 %399) #12
  %401 = load i8, i8* %392, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #12
  %402 = icmp eq i8 %401, 0
  br i1 %402, label %407, label %403

403:                                              ; preds = %396
  %404 = load i8, i8* %397, align 4, !range !10
  %405 = zext i8 %404 to i32
  %406 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %294, i32 %405) #12
  br label %407

407:                                              ; preds = %395, %396, %403
  %408 = phi i32 [ %400, %403 ], [ %400, %396 ], [ 0, %395 ]
  %409 = phi i32 [ %406, %403 ], [ 0, %396 ], [ 0, %395 ]
  store i32 %409, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #12
  store i32* %10, i32** %177, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %178) #12
  %410 = call { %"struct.std::__1::__hash_node_base.270"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.266"* %175, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1312"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1250"* nonnull dereferenceable(1) %3) #12
  %411 = extractvalue { %"struct.std::__1::__hash_node_base.270"*, i8 } %410, 0
  %412 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %411, i64 2
  %413 = bitcast %"struct.std::__1::__hash_node_base.270"* %412 to %"struct.std::__1::pair.1178"*
  %414 = getelementptr inbounds %"struct.std::__1::pair.1178", %"struct.std::__1::pair.1178"* %413, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %178) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #12
  %415 = load i32, i32* %414, align 4
  %416 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %391, i32 %408, i32 %415) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #12
  br label %417

417:                                              ; preds = %310, %324, %293, %386, %407
  %418 = inttoptr i64 %295 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %419 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %418, i64 0, i32 1
  %420 = bitcast %"class.spvtools::opt::Instruction"** %419 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = inttoptr i64 %421 to %"class.spvtools::opt::Instruction"*
  %423 = icmp eq %"class.spvtools::opt::Instruction"* %284, %422
  br i1 %423, label %289, label %293

424:                                              ; preds = %520, %179
  %425 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %158, align 8
  %426 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %159, align 8
  %427 = icmp eq %"class.spvtools::opt::Instruction"** %425, %426
  br i1 %427, label %635, label %643

428:                                              ; preds = %184, %520
  %429 = phi i64 [ %182, %184 ], [ %522, %520 ]
  %430 = inttoptr i64 %429 to %"struct.std::__1::__hash_node.1139"*
  %431 = getelementptr inbounds %"struct.std::__1::__hash_node.1139", %"struct.std::__1::__hash_node.1139"* %430, i64 0, i32 2
  %432 = load i32, i32* %431, align 4
  %433 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %434 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %433, i64 0, i32 11
  %435 = load i32, i32* %434, align 8
  %436 = and i32 %435, 16
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %454

438:                                              ; preds = %428
  %439 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %433, i64 0, i32 4, i32 0, i32 0, i32 0
  %440 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %439, align 8
  %441 = call i8* @_Znwm(i64 400) #13
  %442 = bitcast i8* %441 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %442, %"class.spvtools::opt::Module"* %440) #12
  %443 = ptrtoint i8* %441 to i64
  %444 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %433, i64 0, i32 15
  %445 = getelementptr inbounds %"class.std::__1::unique_ptr.289", %"class.std::__1::unique_ptr.289"* %444, i64 0, i32 0, i32 0, i32 0
  %446 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %445, align 8
  %447 = bitcast %"class.std::__1::unique_ptr.289"* %444 to i64*
  store i64 %443, i64* %447, align 8
  %448 = icmp eq %"class.spvtools::opt::CFG"* %446, null
  br i1 %448, label %451, label %449

449:                                              ; preds = %438
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %446) #12
  %450 = bitcast %"class.spvtools::opt::CFG"* %446 to i8*
  call void @_ZdlPv(i8* %450) #13
  br label %451

451:                                              ; preds = %449, %438
  %452 = load i32, i32* %434, align 8
  %453 = or i32 %452, 16
  store i32 %453, i32* %434, align 8
  br label %454

454:                                              ; preds = %428, %451
  %455 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %433, i64 0, i32 15, i32 0, i32 0, i32 0
  %456 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %455, align 8
  %457 = zext i32 %432 to i64
  %458 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %456, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %459 = load i64, i64* %458, align 8
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %509, label %461

461:                                              ; preds = %454
  %462 = call i64 @llvm.ctpop.i64(i64 %459) #12, !range !11
  %463 = icmp ugt i64 %462, 1
  br i1 %463, label %467, label %464

464:                                              ; preds = %461
  %465 = add i64 %459, 4294967295
  %466 = and i64 %465, %457
  br label %471

467:                                              ; preds = %461
  %468 = icmp ugt i64 %459, %457
  br i1 %468, label %471, label %469

469:                                              ; preds = %467
  %470 = urem i64 %457, %459
  br label %471

471:                                              ; preds = %469, %467, %464
  %472 = phi i64 [ %466, %464 ], [ %470, %469 ], [ %457, %467 ]
  %473 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %456, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load %"struct.std::__1::__hash_node_base.349"**, %"struct.std::__1::__hash_node_base.349"*** %473, align 8
  %475 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %474, i64 %472
  %476 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %475, align 8
  %477 = icmp eq %"struct.std::__1::__hash_node_base.349"* %476, null
  br i1 %477, label %509, label %478

478:                                              ; preds = %471
  %479 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %476, i64 0, i32 0
  %480 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %479, align 8
  %481 = icmp eq %"struct.std::__1::__hash_node_base.349"* %480, null
  br i1 %481, label %509, label %482

482:                                              ; preds = %478
  %483 = add i64 %459, -1
  br label %484

484:                                              ; preds = %505, %482
  %485 = phi %"struct.std::__1::__hash_node_base.349"* [ %480, %482 ], [ %507, %505 ]
  %486 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %485, i64 1
  %487 = bitcast %"struct.std::__1::__hash_node_base.349"* %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = icmp eq i64 %488, %457
  br i1 %489, label %500, label %490

490:                                              ; preds = %484
  br i1 %463, label %493, label %491

491:                                              ; preds = %490
  %492 = and i64 %488, %483
  br label %497

493:                                              ; preds = %490
  %494 = icmp ult i64 %488, %459
  br i1 %494, label %497, label %495

495:                                              ; preds = %493
  %496 = urem i64 %488, %459
  br label %497

497:                                              ; preds = %495, %493, %491
  %498 = phi i64 [ %492, %491 ], [ %496, %495 ], [ %488, %493 ]
  %499 = icmp eq i64 %498, %472
  br i1 %499, label %505, label %509

500:                                              ; preds = %484
  %501 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %485, i64 2
  %502 = bitcast %"struct.std::__1::__hash_node_base.349"* %501 to i32*
  %503 = load i32, i32* %502, align 4
  %504 = icmp eq i32 %503, %432
  br i1 %504, label %510, label %505

505:                                              ; preds = %500, %497
  %506 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %485, i64 0, i32 0
  %507 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %506, align 8
  %508 = icmp eq %"struct.std::__1::__hash_node_base.349"* %507, null
  br i1 %508, label %509, label %484

509:                                              ; preds = %478, %471, %454, %505, %497
  call void @abort() #14
  unreachable

510:                                              ; preds = %500
  %511 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %485, i64 3
  %512 = bitcast %"struct.std::__1::__hash_node_base.349"* %511 to %"class.spvtools::opt::BasicBlock"**
  %513 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %512, align 8
  %514 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %513, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %515 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %513, i64 0, i32 2, i32 0, i32 1
  %516 = bitcast %"class.spvtools::opt::Instruction"** %514 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = inttoptr i64 %517 to %"class.spvtools::opt::Instruction"*
  %519 = icmp eq %"class.spvtools::opt::Instruction"* %515, %518
  br i1 %519, label %520, label %524

520:                                              ; preds = %626, %510
  %521 = inttoptr i64 %429 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %424, label %428

524:                                              ; preds = %510, %626
  %525 = phi %"class.spvtools::opt::Instruction"* [ %631, %626 ], [ %518, %510 ]
  %526 = phi i64 [ %630, %626 ], [ %517, %510 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #12
  store %"class.spvtools::opt::Instruction"* %525, %"class.spvtools::opt::Instruction"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #12
  store %"class.spvtools::opt::Instruction"** %11, %"class.spvtools::opt::Instruction"*** %188, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %189) #12
  %527 = call { %"struct.std::__1::__hash_node_base.1039"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1035"* nonnull %186, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1285"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1250"* nonnull dereferenceable(1) %5) #12
  %528 = extractvalue { %"struct.std::__1::__hash_node_base.1039"*, i8 } %527, 0
  %529 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %528, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %189) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #12
  %530 = bitcast %"struct.std::__1::__hash_node_base.1039"* %529 to i64*
  %531 = load i64, i64* %530, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #12
  %532 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %191, align 8
  %533 = icmp eq %"class.std::__1::__tree_node.1211"* %532, null
  br i1 %533, label %552, label %534

534:                                              ; preds = %524
  %535 = inttoptr i64 %531 to %"class.spvtools::opt::Instruction"*
  br label %536

536:                                              ; preds = %548, %534
  %537 = phi %"class.std::__1::__tree_node.1211"* [ %532, %534 ], [ %550, %548 ]
  %538 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %537, i64 0, i32 1
  %539 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %538, align 8
  %540 = icmp ugt %"class.spvtools::opt::Instruction"* %539, %535
  br i1 %540, label %541, label %543

541:                                              ; preds = %536
  %542 = bitcast %"class.std::__1::__tree_node.1211"* %537 to %"class.std::__1::__tree_node.1211"**
  br label %548

543:                                              ; preds = %536
  %544 = icmp ult %"class.spvtools::opt::Instruction"* %539, %535
  br i1 %544, label %545, label %626

545:                                              ; preds = %543
  %546 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %537, i64 0, i32 0, i32 1
  %547 = bitcast %"class.std::__1::__tree_node_base"** %546 to %"class.std::__1::__tree_node.1211"**
  br label %548

548:                                              ; preds = %545, %541
  %549 = phi %"class.std::__1::__tree_node.1211"** [ %542, %541 ], [ %547, %545 ]
  %550 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %549, align 8
  %551 = icmp eq %"class.std::__1::__tree_node.1211"* %550, null
  br i1 %551, label %552, label %536

552:                                              ; preds = %548, %524
  %553 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %193, align 8
  %554 = icmp eq %"class.std::__1::__tree_node.1211"* %553, null
  br i1 %554, label %626, label %555

555:                                              ; preds = %552
  %556 = inttoptr i64 %531 to %"class.spvtools::opt::Instruction"*
  br label %557

557:                                              ; preds = %569, %555
  %558 = phi %"class.std::__1::__tree_node.1211"* [ %553, %555 ], [ %571, %569 ]
  %559 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %558, i64 0, i32 1
  %560 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %559, align 8
  %561 = icmp ugt %"class.spvtools::opt::Instruction"* %560, %556
  br i1 %561, label %562, label %564

562:                                              ; preds = %557
  %563 = bitcast %"class.std::__1::__tree_node.1211"* %558 to %"class.std::__1::__tree_node.1211"**
  br label %569

564:                                              ; preds = %557
  %565 = icmp ult %"class.spvtools::opt::Instruction"* %560, %556
  br i1 %565, label %566, label %573

566:                                              ; preds = %564
  %567 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %558, i64 0, i32 0, i32 1
  %568 = bitcast %"class.std::__1::__tree_node_base"** %567 to %"class.std::__1::__tree_node.1211"**
  br label %569

569:                                              ; preds = %566, %562
  %570 = phi %"class.std::__1::__tree_node.1211"** [ %563, %562 ], [ %568, %566 ]
  %571 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %570, align 8
  %572 = icmp eq %"class.std::__1::__tree_node.1211"* %571, null
  br i1 %572, label %626, label %557

573:                                              ; preds = %564
  %574 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %159, align 8
  %575 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %160, align 8
  %576 = icmp ult %"class.spvtools::opt::Instruction"** %574, %575
  %577 = ptrtoint %"class.spvtools::opt::Instruction"** %575 to i64
  br i1 %576, label %578, label %582

578:                                              ; preds = %573
  %579 = bitcast %"class.spvtools::opt::Instruction"** %574 to i64*
  store i64 %526, i64* %579, align 8
  %580 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %574, i64 1
  %581 = ptrtoint %"class.spvtools::opt::Instruction"** %580 to i64
  store i64 %581, i64* %194, align 8
  br label %626

582:                                              ; preds = %573
  %583 = ptrtoint %"class.spvtools::opt::Instruction"** %574 to i64
  %584 = load i64, i64* %195, align 8
  %585 = sub i64 %583, %584
  %586 = ashr exact i64 %585, 3
  %587 = add nsw i64 %586, 1
  %588 = icmp ugt i64 %587, 2305843009213693951
  br i1 %588, label %589, label %591

589:                                              ; preds = %582
  %590 = bitcast %"class.std::__1::vector.981"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %590) #14
  unreachable

591:                                              ; preds = %582
  %592 = sub i64 %577, %584
  %593 = ashr exact i64 %592, 3
  %594 = icmp ult i64 %593, 1152921504606846975
  br i1 %594, label %595, label %603

595:                                              ; preds = %591
  %596 = ashr exact i64 %592, 2
  %597 = icmp ult i64 %596, %587
  %598 = select i1 %597, i64 %587, i64 %596
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %608, label %600

600:                                              ; preds = %595
  %601 = icmp ugt i64 %598, 2305843009213693951
  br i1 %601, label %602, label %603

602:                                              ; preds = %600
  call void @abort() #14
  unreachable

603:                                              ; preds = %600, %591
  %604 = phi i64 [ %598, %600 ], [ 2305843009213693951, %591 ]
  %605 = shl i64 %604, 3
  %606 = call i8* @_Znwm(i64 %605) #13
  %607 = bitcast i8* %606 to %"class.spvtools::opt::Instruction"**
  br label %608

608:                                              ; preds = %603, %595
  %609 = phi i64 [ %604, %603 ], [ 0, %595 ]
  %610 = phi i8* [ %606, %603 ], [ null, %595 ]
  %611 = phi %"class.spvtools::opt::Instruction"** [ %607, %603 ], [ null, %595 ]
  %612 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %611, i64 %586
  %613 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %611, i64 %609
  %614 = ptrtoint %"class.spvtools::opt::Instruction"** %613 to i64
  %615 = bitcast %"class.spvtools::opt::Instruction"** %612 to i64*
  store i64 %526, i64* %615, align 8
  %616 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %612, i64 1
  %617 = ptrtoint %"class.spvtools::opt::Instruction"** %616 to i64
  %618 = ptrtoint %"class.spvtools::opt::Instruction"** %611 to i64
  %619 = icmp sgt i64 %585, 0
  br i1 %619, label %620, label %622

620:                                              ; preds = %608
  %621 = inttoptr i64 %584 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %610, i8* align 8 %621, i64 %585, i1 false) #12
  br label %622

622:                                              ; preds = %620, %608
  store i64 %618, i64* %195, align 8
  store i64 %617, i64* %194, align 8
  store i64 %614, i64* %196, align 8
  %623 = icmp eq i64 %584, 0
  br i1 %623, label %626, label %624

624:                                              ; preds = %622
  %625 = inttoptr i64 %584 to i8*
  call void @_ZdlPv(i8* %625) #13
  br label %626

626:                                              ; preds = %543, %569, %552, %624, %622, %578
  %627 = inttoptr i64 %526 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %628 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %627, i64 0, i32 1
  %629 = bitcast %"class.spvtools::opt::Instruction"** %628 to i64*
  %630 = load i64, i64* %629, align 8
  %631 = inttoptr i64 %630 to %"class.spvtools::opt::Instruction"*
  %632 = icmp eq %"class.spvtools::opt::Instruction"* %515, %631
  br i1 %632, label %520, label %524

633:                                              ; preds = %643
  %634 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %158, align 8
  br label %635

635:                                              ; preds = %633, %424
  %636 = phi %"class.spvtools::opt::Instruction"** [ %634, %633 ], [ %425, %424 ]
  %637 = icmp eq %"class.spvtools::opt::Instruction"** %636, null
  br i1 %637, label %642, label %638

638:                                              ; preds = %635
  %639 = ptrtoint %"class.spvtools::opt::Instruction"** %636 to i64
  %640 = bitcast %"class.spvtools::opt::Instruction"*** %159 to i64*
  store i64 %639, i64* %640, align 8
  %641 = bitcast %"class.spvtools::opt::Instruction"** %636 to i8*
  call void @_ZdlPv(i8* %641) #13
  br label %642

642:                                              ; preds = %635, %638
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #12
  call void @_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev(%"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  ret %"class.spvtools::opt::Loop"* %49

643:                                              ; preds = %424, %643
  %644 = phi %"class.spvtools::opt::Instruction"** [ %648, %643 ], [ %425, %424 ]
  %645 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %644, align 8
  %646 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %647 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %646, %"class.spvtools::opt::Instruction"* %645) #12
  %648 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %644, i64 1
  %649 = icmp eq %"class.spvtools::opt::Instruction"** %648, %426
  br i1 %649, label %633, label %643
}

declare %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*) local_unnamed_addr #1

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #1

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev(%"struct.spvtools::opt::LoopUtils::LoopCloningResult"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.55"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.55"* %4 to i8*
  %8 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.55"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr.55"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %14, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::BasicBlock"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::unique_ptr.55"* %13 to %"struct.std::__1::default_delete.59"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.59"* %18, %"class.spvtools::opt::BasicBlock"* nonnull %15) #12
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr.55"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.53"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.55"* %4, %"class.std::__1::unique_ptr.55"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.349"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.std::__1::__hash_node_base.349"* [ %33, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %32, align 8
  %34 = bitcast %"struct.std::__1::__hash_node_base.349"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  %35 = icmp eq %"struct.std::__1::__hash_node_base.349"* %33, null
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %26
  %37 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.349"**, %"struct.std::__1::__hash_node_base.349"*** %37, align 8
  store %"struct.std::__1::__hash_node_base.349"** null, %"struct.std::__1::__hash_node_base.349"*** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.349"** %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.std::__1::__hash_node_base.349"** %38 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %36, %40
  %43 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.349"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42, %46
  %47 = phi %"struct.std::__1::__hash_node_base.349"* [ %49, %46 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %47, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %48, align 8
  %50 = bitcast %"struct.std::__1::__hash_node_base.349"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #13
  %51 = icmp eq %"struct.std::__1::__hash_node_base.349"* %49, null
  br i1 %51, label %52, label %46

52:                                               ; preds = %46, %42
  %53 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.349"**, %"struct.std::__1::__hash_node_base.349"*** %53, align 8
  store %"struct.std::__1::__hash_node_base.349"** null, %"struct.std::__1::__hash_node_base.349"*** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.349"** %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = bitcast %"struct.std::__1::__hash_node_base.349"** %54 to i8*
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %52, %56
  %59 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.270"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %58, %62
  %63 = phi %"struct.std::__1::__hash_node_base.270"* [ %65, %62 ], [ %60, %58 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %63, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %64, align 8
  %66 = bitcast %"struct.std::__1::__hash_node_base.270"* %63 to i8*
  tail call void @_ZdlPv(i8* %66) #13
  %67 = icmp eq %"struct.std::__1::__hash_node_base.270"* %65, null
  br i1 %67, label %68, label %62

68:                                               ; preds = %62, %58
  %69 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %69, align 8
  store %"struct.std::__1::__hash_node_base.270"** null, %"struct.std::__1::__hash_node_base.270"*** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.270"** %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = bitcast %"struct.std::__1::__hash_node_base.270"** %70 to i8*
  tail call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %68, %72
  %75 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %74, %78
  %79 = phi %"struct.std::__1::__hash_node_base.1039"* [ %81, %78 ], [ %76, %74 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %79, i64 0, i32 0
  %81 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %80, align 8
  %82 = bitcast %"struct.std::__1::__hash_node_base.1039"* %79 to i8*
  tail call void @_ZdlPv(i8* %82) #13
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %81, null
  br i1 %83, label %84, label %78

84:                                               ; preds = %78, %74
  %85 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %85, align 8
  store %"struct.std::__1::__hash_node_base.1039"** null, %"struct.std::__1::__hash_node_base.1039"*** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.1039"** %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = bitcast %"struct.std::__1::__hash_node_base.1039"** %86 to i8*
  tail call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %84, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15LoopFissionPassC2Emb(%"class.spvtools::opt::LoopFissionPass"*, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = bitcast %"class.spvtools::opt::LoopFissionPass"* %0 to %"class.spvtools::opt::Pass"*
  tail call void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"* %5) #12
  %6 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt15LoopFissionPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 3
  store i8 %4, i8* %8, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__function::__policy_invoker.1063"* %9 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEE11__call_implINS0_20__default_alloc_funcIZNS3_15LoopFissionPassC1EmbE3$_1S8_EEEEbPKNS0_16__policy_storageES7_" to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionPassC1EmbE3$_1FbRKNS5_16RegisterLiveness22RegionRegisterLivenessEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" to i64)>, <2 x i64>* %10, align 8
  %11 = bitcast %"class.std::__1::function.1058"* %7 to i64*
  store i64 %1, i64* %11, align 8
  ret void
}

declare void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15LoopFissionPassC2Ev(%"class.spvtools::opt::LoopFissionPass"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.spvtools::opt::LoopFissionPass"* %0 to %"class.spvtools::opt::Pass"*
  tail call void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"* %2) #12
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt15LoopFissionPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 3
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::__function::__policy_invoker.1063"* %5 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEE11__call_implINS0_20__default_alloc_funcIZNS3_15LoopFissionPassC1EvE3$_2S8_EEEEbPKNS0_16__policy_storageES7_" to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionPassC1EvE3$_2FbRKNS5_16RegisterLiveness22RegionRegisterLivenessEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" to i64)>, <2 x i64>* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt15LoopFissionPass15ShouldSplitLoopERKNS0_4LoopEPNS0_9IRContextE(%"class.spvtools::opt::LoopFissionPass"*, %"class.spvtools::opt::Loop"* dereferenceable(128), %"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 512
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %3
  %10 = ptrtoint %"class.spvtools::opt::IRContext"* %2 to i64
  %11 = tail call i8* @_Znwm(i64 48) #13
  %12 = bitcast i8* %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = getelementptr inbounds i8, i8* %11, i64 40
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2, i64 0, i32 24
  %17 = ptrtoint i8* %11 to i64
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.712"* %16, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::LivenessAnalysis"*, %"class.spvtools::opt::LivenessAnalysis"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.712"* %16 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::LivenessAnalysis"* %19, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %9
  %23 = bitcast %"class.std::__1::unique_ptr.712"* %16 to %"struct.std::__1::default_delete.740"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt16LivenessAnalysisEEclEPS3_(%"struct.std::__1::default_delete.740"* %23, %"class.spvtools::opt::LivenessAnalysis"* nonnull %19) #12
  %24 = load i32, i32* %5, align 8
  br label %25

25:                                               ; preds = %22, %9
  %26 = phi i32 [ %6, %9 ], [ %24, %22 ]
  %27 = or i32 %26, 512
  store i32 %27, i32* %5, align 8
  br label %28

28:                                               ; preds = %3, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %2, i64 0, i32 24, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::LivenessAnalysis"*, %"class.spvtools::opt::LivenessAnalysis"** %29, align 8
  %31 = bitcast %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 bitcast (%"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* @__const._ZN8spvtools3opt15LoopFissionPass15ShouldSplitLoopERKNS0_4LoopEPNS0_9IRContextE.liveness to i8*), i64 80, i1 false)
  %32 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 0, i32 0, i32 3
  %33 = bitcast %"class.std::__1::__compressed_pair.1083"* %32 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 1, i32 0, i32 3
  %36 = bitcast %"class.std::__1::__compressed_pair.1083"* %35 to i32*
  %37 = bitcast %"class.std::__1::unordered_set.1064"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %36, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %40 = bitcast i64* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false)
  %41 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %39, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %41, i64 0, i32 0
  %43 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %42, align 8
  %44 = tail call %"class.spvtools::opt::RegisterLiveness"* @_ZN8spvtools3opt16LivenessAnalysis3GetEPNS0_8FunctionE(%"class.spvtools::opt::LivenessAnalysis"* %30, %"class.spvtools::opt::Function"* %43)
  call void @_ZNK8spvtools3opt16RegisterLiveness27ComputeLoopRegisterPressureERKNS0_4LoopEPNS1_22RegionRegisterLivenessE(%"class.spvtools::opt::RegisterLiveness"* %44, %"class.spvtools::opt::Loop"* dereferenceable(128) %1, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* nonnull %4) #12
  %45 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %46 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"*)** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2, i32 0, i32 0
  %48 = call zeroext i1 %46(%"union.std::__1::__function::__policy_storage"* %47, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* nonnull dereferenceable(112) %4) #12
  %49 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 3, i32 0, i32 0
  %50 = load %"struct.std::__1::pair.1088"*, %"struct.std::__1::pair.1088"** %49, align 8
  %51 = icmp eq %"struct.std::__1::pair.1088"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %28
  %53 = ptrtoint %"struct.std::__1::pair.1088"* %50 to i64
  %54 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 3, i32 0, i32 1
  %55 = bitcast %"struct.std::__1::pair.1088"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"struct.std::__1::pair.1088"* %50 to i8*
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %52, %28
  %58 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base.1069"*, %"struct.std::__1::__hash_node_base.1069"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base.1069"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %57, %61
  %62 = phi %"struct.std::__1::__hash_node_base.1069"* [ %64, %61 ], [ %59, %57 ]
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1069", %"struct.std::__1::__hash_node_base.1069"* %62, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.1069"*, %"struct.std::__1::__hash_node_base.1069"** %63, align 8
  %65 = bitcast %"struct.std::__1::__hash_node_base.1069"* %62 to i8*
  call void @_ZdlPv(i8* %65) #13
  %66 = icmp eq %"struct.std::__1::__hash_node_base.1069"* %64, null
  br i1 %66, label %67, label %61

67:                                               ; preds = %61, %57
  %68 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.1069"**, %"struct.std::__1::__hash_node_base.1069"*** %68, align 8
  store %"struct.std::__1::__hash_node_base.1069"** null, %"struct.std::__1::__hash_node_base.1069"*** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.1069"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = bitcast %"struct.std::__1::__hash_node_base.1069"** %69 to i8*
  call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1069"*, %"struct.std::__1::__hash_node_base.1069"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1069"* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73, %77
  %78 = phi %"struct.std::__1::__hash_node_base.1069"* [ %80, %77 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1069", %"struct.std::__1::__hash_node_base.1069"* %78, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.1069"*, %"struct.std::__1::__hash_node_base.1069"** %79, align 8
  %81 = bitcast %"struct.std::__1::__hash_node_base.1069"* %78 to i8*
  call void @_ZdlPv(i8* %81) #13
  %82 = icmp eq %"struct.std::__1::__hash_node_base.1069"* %80, null
  br i1 %82, label %83, label %77

83:                                               ; preds = %77, %73
  %84 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.1069"**, %"struct.std::__1::__hash_node_base.1069"*** %84, align 8
  store %"struct.std::__1::__hash_node_base.1069"** null, %"struct.std::__1::__hash_node_base.1069"*** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.1069"** %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast %"struct.std::__1::__hash_node_base.1069"** %85 to i8*
  call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #12
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::RegisterLiveness"* @_ZN8spvtools3opt16LivenessAnalysis3GetEPNS0_8FunctionE(%"class.spvtools::opt::LivenessAnalysis"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.spvtools::opt::Function"*, align 8
  %4 = alloca %"class.spvtools::opt::RegisterLiveness", align 8
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LivenessAnalysis", %"class.spvtools::opt::LivenessAnalysis"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.spvtools::opt::Function"* %1 to i64
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.spvtools::opt::LivenessAnalysis", %"class.spvtools::opt::LivenessAnalysis"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %71, label %23

23:                                               ; preds = %2
  %24 = tail call i64 @llvm.ctpop.i64(i64 %21) #12, !range !11
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::unordered_map.715", %"class.std::__1::unordered_map.715"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.720"* %38, null
  br i1 %39, label %71, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.720"* %42, null
  br i1 %43, label %71, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi %"struct.std::__1::__hash_node_base.720"* [ %42, %44 ], [ %69, %67 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.720"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %21
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %21
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %67, label %71

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.720"* %63 to %"class.spvtools::opt::Function"**
  %65 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %64, align 8
  %66 = icmp eq %"class.spvtools::opt::Function"* %65, %1
  br i1 %66, label %103, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %47, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.720"* %69, null
  br i1 %70, label %71, label %46

71:                                               ; preds = %59, %67, %33, %2, %40
  %72 = bitcast %"class.spvtools::opt::RegisterLiveness"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %72) #12
  %73 = bitcast %"class.spvtools::opt::LivenessAnalysis"* %0 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.spvtools::opt::RegisterLiveness"* %4 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %4, i64 0, i32 1
  %77 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %4, i64 0, i32 1, i32 0, i32 3
  %78 = bitcast %"class.std::__1::__compressed_pair.1117"* %77 to i32*
  %79 = bitcast %"class.std::__1::unordered_map.1097"* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %78, align 8
  call void @_ZN8spvtools3opt16RegisterLiveness7AnalyzeEPNS0_8FunctionE(%"class.spvtools::opt::RegisterLiveness"* nonnull %4, %"class.spvtools::opt::Function"* %1) #12
  %80 = getelementptr inbounds %"class.std::__1::unordered_map.715", %"class.std::__1::unordered_map.715"* %5, i64 0, i32 0
  %81 = call { %"struct.std::__1::__hash_node_base.720"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__emplace_unique_implIJRPS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEEDpOT_(%"class.std::__1::__hash_table.716"* %80, %"class.spvtools::opt::Function"** nonnull dereferenceable(8) %3, %"class.spvtools::opt::RegisterLiveness"* nonnull dereferenceable(48) %4) #12
  %82 = extractvalue { %"struct.std::__1::__hash_node_base.720"*, i8 } %81, 0
  %83 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %4, i64 0, i32 1, i32 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::__compressed_pair.1109", %"class.std::__1::__compressed_pair.1109"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.1102"*, %"struct.std::__1::__hash_node_base.1102"** %84, align 8
  %86 = bitcast %"class.std::__1::__compressed_pair.1109"* %83 to %"class.std::__1::allocator.1112"*
  %87 = icmp eq %"struct.std::__1::__hash_node_base.1102"* %85, null
  br i1 %87, label %96, label %88

88:                                               ; preds = %71, %88
  %89 = phi %"struct.std::__1::__hash_node_base.1102"* [ %91, %88 ], [ %85, %71 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1102", %"struct.std::__1::__hash_node_base.1102"* %89, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.1102"*, %"struct.std::__1::__hash_node_base.1102"** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1102", %"struct.std::__1::__hash_node_base.1102"* %89, i64 2
  %93 = bitcast %"struct.std::__1::__hash_node_base.1102"* %92 to %"struct.std::__1::pair.1187"*
  call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIjN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEEPvEEEEE7destroyINS_4pairIKjS7_EEvvEEvRSB_PT_(%"class.std::__1::allocator.1112"* dereferenceable(1) %86, %"struct.std::__1::pair.1187"* %93) #12
  %94 = bitcast %"struct.std::__1::__hash_node_base.1102"* %89 to i8*
  call void @_ZdlPv(i8* %94) #13
  %95 = icmp eq %"struct.std::__1::__hash_node_base.1102"* %91, null
  br i1 %95, label %96, label %88

96:                                               ; preds = %88, %71
  %97 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.1102"**, %"struct.std::__1::__hash_node_base.1102"*** %97, align 8
  store %"struct.std::__1::__hash_node_base.1102"** null, %"struct.std::__1::__hash_node_base.1102"*** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1102"** %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = bitcast %"struct.std::__1::__hash_node_base.1102"** %98 to i8*
  call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %96, %100
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %72) #12
  br label %103

103:                                              ; preds = %62, %102
  %104 = phi %"struct.std::__1::__hash_node_base.720"* [ %82, %102 ], [ %47, %62 ]
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %104, i64 3
  %106 = bitcast %"struct.std::__1::__hash_node_base.720"* %105 to %"class.spvtools::opt::RegisterLiveness"*
  ret %"class.spvtools::opt::RegisterLiveness"* %106
}

declare void @_ZNK8spvtools3opt16RegisterLiveness27ComputeLoopRegisterPressureERKNS0_4LoopEPNS1_22RegionRegisterLivenessE(%"class.spvtools::opt::RegisterLiveness"*, %"class.spvtools::opt::Loop"* dereferenceable(128), %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt15LoopFissionPass7ProcessEv(%"class.spvtools::opt::LoopFissionPass"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.928", align 8
  %3 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator", align 8
  %4 = alloca %"class.std::__1::vector.928", align 8
  %5 = alloca %"class.spvtools::opt::LoopFissionImpl", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %9, i64 0, i32 15, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %9, i64 0, i32 15, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.43"* %11, %13
  br i1 %14, label %76, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.std::__1::vector.928"* %2 to i8*
  %17 = getelementptr inbounds %"class.std::__1::vector.928", %"class.std::__1::vector.928"* %2, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.928", %"class.std::__1::vector.928"* %2, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.928", %"class.std::__1::vector.928"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %3 to i8*
  %21 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 0
  %22 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1
  %23 = bitcast %"class.std::__1::stack"* %22 to i8*
  %24 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast %"struct.std::__1::pair.1123"*** %24 to i64*
  %26 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"struct.std::__1::pair.1123"*** %26 to i64*
  %28 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0
  %31 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %3 to i64*
  %32 = bitcast %"class.spvtools::opt::Loop"*** %18 to i64*
  %33 = bitcast %"class.std::__1::vector.928"* %2 to i64*
  %34 = bitcast %"class.spvtools::opt::Loop"*** %19 to i64*
  %35 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::vector.928"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::vector.928", %"class.std::__1::vector.928"* %4, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::vector.928", %"class.std::__1::vector.928"* %4, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::vector.928", %"class.std::__1::vector.928"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.spvtools::opt::LoopFissionImpl"* %5 to i8*
  %41 = bitcast %"class.spvtools::opt::IRContext"** %6 to i64*
  %42 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8*
  %46 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %48 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 1, i32 0, i32 0
  %49 = bitcast %"class.std::__1::__tree_node_base"** %46 to i8*
  %50 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %52 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8*
  %54 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %56 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 3, i32 0, i32 0
  %57 = bitcast %"class.std::__1::__tree_node_base"** %54 to i8*
  %58 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 4
  %59 = bitcast %"class.spvtools::opt::IRContext"** %58 to i64*
  %60 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 5
  %61 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 6
  %62 = bitcast %"class.spvtools::opt::Loop"*** %38 to i64*
  %63 = bitcast %"class.std::__1::vector.928"* %4 to i64*
  %64 = bitcast %"class.spvtools::opt::Loop"*** %39 to i64*
  %65 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 3, i32 0
  %66 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node.1205"**
  %67 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 2, i32 0
  %68 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node.1211"**
  %69 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1211"**
  %71 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %5, i64 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.std::__1::__tree_node.1211"**
  %73 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 3
  %74 = bitcast %"class.spvtools::opt::Loop"*** %38 to <2 x i64>*
  %75 = bitcast %"class.spvtools::opt::Loop"*** %18 to <2 x i64>*
  br label %81

76:                                               ; preds = %483, %1
  %77 = phi i8 [ 0, %1 ], [ %478, %483 ]
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  %80 = select i1 %79, i32 17, i32 16
  ret i32 %80

81:                                               ; preds = %486, %15
  %82 = phi %"class.spvtools::opt::IRContext"* [ %7, %15 ], [ %487, %486 ]
  %83 = phi i8 [ 0, %15 ], [ %478, %486 ]
  %84 = phi %"class.std::__1::unique_ptr.43"* [ %11, %15 ], [ %484, %486 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  %87 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %82, %"class.spvtools::opt::Function"* %86) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #12
  %88 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %87, i64 0, i32 1
  store %"class.spvtools::opt::Loop"* %88, %"class.spvtools::opt::Loop"** %21, align 8, !alias.scope !30
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 48, i1 false) #12, !alias.scope !30
  %89 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %87, i64 0, i32 1, i32 7, i32 0, i32 0
  %90 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %89, align 8, !noalias !30
  %91 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %87, i64 0, i32 1, i32 7, i32 0, i32 1
  %92 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %91, align 8, !noalias !30
  %93 = icmp eq %"class.spvtools::opt::Loop"** %90, %92
  br i1 %93, label %154, label %94

94:                                               ; preds = %81, %147
  %95 = phi i64 [ %150, %147 ], [ 0, %81 ]
  %96 = phi i64 [ %149, %147 ], [ 0, %81 ]
  %97 = phi i64 [ %148, %147 ], [ 0, %81 ]
  %98 = phi i64 [ %135, %147 ], [ 0, %81 ]
  %99 = phi %"class.spvtools::opt::Loop"** [ %143, %147 ], [ %90, %81 ]
  %100 = phi %"class.spvtools::opt::Loop"* [ %141, %147 ], [ %88, %81 ]
  %101 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %99, i64 1
  %102 = sub i64 %97, %96
  %103 = icmp eq i64 %102, 0
  %104 = shl i64 %102, 5
  %105 = add i64 %104, -1
  %106 = select i1 %103, i64 0, i64 %105
  %107 = add i64 %98, %95
  %108 = icmp eq i64 %106, %107
  %109 = inttoptr i64 %96 to %"struct.std::__1::pair.1123"**
  %110 = inttoptr i64 %97 to %"struct.std::__1::pair.1123"**
  br i1 %108, label %111, label %117

111:                                              ; preds = %94
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %30) #12
  %112 = load i64, i64* %29, align 8, !alias.scope !30
  %113 = load i64, i64* %28, align 8, !alias.scope !30
  %114 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %26, align 8, !alias.scope !30
  %115 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %24, align 8, !alias.scope !30
  %116 = add i64 %113, %112
  br label %117

117:                                              ; preds = %111, %94
  %118 = phi i64 [ %116, %111 ], [ %107, %94 ]
  %119 = phi %"struct.std::__1::pair.1123"** [ %115, %111 ], [ %110, %94 ]
  %120 = phi %"struct.std::__1::pair.1123"** [ %114, %111 ], [ %109, %94 ]
  %121 = icmp eq %"struct.std::__1::pair.1123"** %119, %120
  br i1 %121, label %129, label %122

122:                                              ; preds = %117
  %123 = lshr i64 %118, 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %120, i64 %123
  %125 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %124, align 8
  %126 = and i64 %118, 255
  %127 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %125, i64 %126
  %128 = bitcast %"struct.std::__1::pair.1123"* %127 to i8*
  br label %129

129:                                              ; preds = %122, %117
  %130 = phi i8* [ %128, %122 ], [ null, %117 ]
  %131 = bitcast i8* %130 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %100, %"class.spvtools::opt::Loop"** %131, align 8
  %132 = getelementptr inbounds i8, i8* %130, i64 8
  %133 = bitcast i8* %132 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %101, %"class.spvtools::opt::Loop"*** %133, align 8
  %134 = load i64, i64* %29, align 8, !alias.scope !30
  %135 = add i64 %134, 1
  store i64 %135, i64* %29, align 8, !alias.scope !30
  %136 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8, !alias.scope !30
  %137 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %136, i64 0, i32 7, i32 0, i32 0
  %138 = bitcast %"class.spvtools::opt::Loop"*** %137 to i64**
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %31, align 8, !alias.scope !30
  %141 = inttoptr i64 %140 to %"class.spvtools::opt::Loop"*
  %142 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %141, i64 0, i32 7, i32 0, i32 0
  %143 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %142, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %141, i64 0, i32 7, i32 0, i32 1
  %145 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %144, align 8
  %146 = icmp eq %"class.spvtools::opt::Loop"** %143, %145
  br i1 %146, label %151, label %147

147:                                              ; preds = %129
  %148 = load i64, i64* %25, align 8, !alias.scope !30
  %149 = load i64, i64* %27, align 8, !alias.scope !30
  %150 = load i64, i64* %28, align 8, !alias.scope !30
  br label %94

151:                                              ; preds = %129
  %152 = inttoptr i64 %140 to %"class.spvtools::opt::Loop"*
  %153 = icmp eq %"class.spvtools::opt::Loop"* %88, %152
  br i1 %153, label %154, label %246

154:                                              ; preds = %310, %81, %151
  %155 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %26, align 8
  %156 = load i64, i64* %28, align 8
  %157 = lshr i64 %156, 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %155, i64 %157
  %159 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %24, align 8
  %160 = icmp eq %"struct.std::__1::pair.1123"** %159, %155
  %161 = ptrtoint %"struct.std::__1::pair.1123"** %159 to i64
  %162 = ptrtoint %"struct.std::__1::pair.1123"** %155 to i64
  br i1 %160, label %175, label %163

163:                                              ; preds = %154
  %164 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %158, align 8
  %165 = and i64 %156, 255
  %166 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %164, i64 %165
  %167 = load i64, i64* %29, align 8
  %168 = add i64 %167, %156
  %169 = lshr i64 %168, 8
  %170 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %155, i64 %169
  %171 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %170, align 8
  %172 = and i64 %168, 255
  %173 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %171, i64 %172
  %174 = icmp eq %"struct.std::__1::pair.1123"* %173, %166
  br i1 %174, label %175, label %179

175:                                              ; preds = %192, %154, %163
  store i64 0, i64* %29, align 8
  %176 = sub i64 %161, %162
  %177 = ashr exact i64 %176, 3
  %178 = icmp ugt i64 %177, 2
  br i1 %178, label %197, label %210

179:                                              ; preds = %163, %192
  %180 = phi %"struct.std::__1::pair.1123"* [ %195, %192 ], [ %166, %163 ]
  %181 = phi %"struct.std::__1::pair.1123"** [ %194, %192 ], [ %158, %163 ]
  %182 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %180, i64 1
  %183 = ptrtoint %"struct.std::__1::pair.1123"* %182 to i64
  %184 = bitcast %"struct.std::__1::pair.1123"** %181 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = sub i64 %183, %185
  %187 = icmp eq i64 %186, 4096
  br i1 %187, label %188, label %192

188:                                              ; preds = %179
  %189 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %181, i64 1
  %190 = bitcast %"struct.std::__1::pair.1123"** %189 to i64*
  %191 = load i64, i64* %190, align 8
  br label %192

192:                                              ; preds = %188, %179
  %193 = phi i64 [ %191, %188 ], [ %183, %179 ]
  %194 = phi %"struct.std::__1::pair.1123"** [ %189, %188 ], [ %181, %179 ]
  %195 = inttoptr i64 %193 to %"struct.std::__1::pair.1123"*
  %196 = icmp eq %"struct.std::__1::pair.1123"* %173, %195
  br i1 %196, label %175, label %179

197:                                              ; preds = %175, %197
  %198 = phi %"struct.std::__1::pair.1123"** [ %202, %197 ], [ %155, %175 ]
  %199 = bitcast %"struct.std::__1::pair.1123"** %198 to i8**
  %200 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %200) #13
  %201 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %26, align 8
  %202 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %201, i64 1
  store %"struct.std::__1::pair.1123"** %202, %"struct.std::__1::pair.1123"*** %26, align 8
  %203 = load i64, i64* %25, align 8
  %204 = ptrtoint %"struct.std::__1::pair.1123"** %202 to i64
  %205 = sub i64 %203, %204
  %206 = ashr exact i64 %205, 3
  %207 = icmp ugt i64 %206, 2
  br i1 %207, label %197, label %208

208:                                              ; preds = %197
  %209 = inttoptr i64 %203 to %"struct.std::__1::pair.1123"**
  br label %210

210:                                              ; preds = %208, %175
  %211 = phi %"struct.std::__1::pair.1123"** [ %159, %175 ], [ %209, %208 ]
  %212 = phi %"struct.std::__1::pair.1123"** [ %155, %175 ], [ %202, %208 ]
  %213 = phi i64 [ %177, %175 ], [ %206, %208 ]
  switch i64 %213, label %217 [
    i64 1, label %215
    i64 2, label %214
  ]

214:                                              ; preds = %210
  br label %215

215:                                              ; preds = %210, %214
  %216 = phi i64 [ 256, %214 ], [ 128, %210 ]
  store i64 %216, i64* %28, align 8
  br label %217

217:                                              ; preds = %215, %210
  %218 = icmp eq %"struct.std::__1::pair.1123"** %212, %211
  br i1 %218, label %237, label %219

219:                                              ; preds = %217, %219
  %220 = phi %"struct.std::__1::pair.1123"** [ %223, %219 ], [ %212, %217 ]
  %221 = bitcast %"struct.std::__1::pair.1123"** %220 to i8**
  %222 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %222) #13
  %223 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %220, i64 1
  %224 = icmp eq %"struct.std::__1::pair.1123"** %223, %211
  br i1 %224, label %225, label %219

225:                                              ; preds = %219
  %226 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %26, align 8
  %227 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %24, align 8
  %228 = icmp eq %"struct.std::__1::pair.1123"** %227, %226
  br i1 %228, label %237, label %229

229:                                              ; preds = %225
  %230 = ptrtoint %"struct.std::__1::pair.1123"** %226 to i64
  %231 = getelementptr %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %227, i64 -1
  %232 = ptrtoint %"struct.std::__1::pair.1123"** %231 to i64
  %233 = sub i64 %232, %230
  %234 = lshr i64 %233, 3
  %235 = xor i64 %234, -1
  %236 = getelementptr %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %227, i64 %235
  store %"struct.std::__1::pair.1123"** %236, %"struct.std::__1::pair.1123"*** %24, align 8
  br label %237

237:                                              ; preds = %229, %225, %217
  %238 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %35, align 8
  %239 = icmp eq %"struct.std::__1::pair.1123"** %238, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  %241 = bitcast %"struct.std::__1::pair.1123"** %238 to i8*
  call void @_ZdlPv(i8* %241) #13
  br label %242

242:                                              ; preds = %237, %240
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #12
  %243 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %17, align 8
  %244 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %18, align 8
  %245 = icmp eq %"class.spvtools::opt::Loop"** %243, %244
  br i1 %245, label %476, label %313

246:                                              ; preds = %151, %310
  %247 = phi %"class.spvtools::opt::Loop"* [ %311, %310 ], [ %152, %151 ]
  %248 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %247, i64 0, i32 7, i32 0, i32 0
  %249 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %248, align 8
  %250 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %247, i64 0, i32 7, i32 0, i32 1
  %251 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %250, align 8
  %252 = icmp eq %"class.spvtools::opt::Loop"** %249, %251
  br i1 %252, label %253, label %310

253:                                              ; preds = %246
  %254 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %255 = call zeroext i1 @_ZN8spvtools3opt15LoopFissionPass15ShouldSplitLoopERKNS0_4LoopEPNS0_9IRContextE(%"class.spvtools::opt::LoopFissionPass"* %0, %"class.spvtools::opt::Loop"* dereferenceable(128) %247, %"class.spvtools::opt::IRContext"* %254)
  br i1 %255, label %256, label %310

256:                                              ; preds = %253
  %257 = ptrtoint %"class.spvtools::opt::Loop"* %247 to i64
  %258 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %18, align 8
  %259 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %19, align 8
  %260 = icmp ult %"class.spvtools::opt::Loop"** %258, %259
  %261 = ptrtoint %"class.spvtools::opt::Loop"** %259 to i64
  br i1 %260, label %262, label %266

262:                                              ; preds = %256
  %263 = bitcast %"class.spvtools::opt::Loop"** %258 to i64*
  store i64 %257, i64* %263, align 8
  %264 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %258, i64 1
  %265 = ptrtoint %"class.spvtools::opt::Loop"** %264 to i64
  store i64 %265, i64* %32, align 8
  br label %310

266:                                              ; preds = %256
  %267 = ptrtoint %"class.spvtools::opt::Loop"** %258 to i64
  %268 = load i64, i64* %33, align 8
  %269 = sub i64 %267, %268
  %270 = ashr exact i64 %269, 3
  %271 = add nsw i64 %270, 1
  %272 = icmp ugt i64 %271, 2305843009213693951
  br i1 %272, label %273, label %275

273:                                              ; preds = %266
  %274 = bitcast %"class.std::__1::vector.928"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %274) #14
  unreachable

275:                                              ; preds = %266
  %276 = sub i64 %261, %268
  %277 = ashr exact i64 %276, 3
  %278 = icmp ult i64 %277, 1152921504606846975
  br i1 %278, label %279, label %287

279:                                              ; preds = %275
  %280 = ashr exact i64 %276, 2
  %281 = icmp ult i64 %280, %271
  %282 = select i1 %281, i64 %271, i64 %280
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %292, label %284

284:                                              ; preds = %279
  %285 = icmp ugt i64 %282, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %284
  call void @abort() #14
  unreachable

287:                                              ; preds = %284, %275
  %288 = phi i64 [ %282, %284 ], [ 2305843009213693951, %275 ]
  %289 = shl i64 %288, 3
  %290 = call i8* @_Znwm(i64 %289) #13
  %291 = bitcast i8* %290 to %"class.spvtools::opt::Loop"**
  br label %292

292:                                              ; preds = %287, %279
  %293 = phi i64 [ %288, %287 ], [ 0, %279 ]
  %294 = phi i8* [ %290, %287 ], [ null, %279 ]
  %295 = phi %"class.spvtools::opt::Loop"** [ %291, %287 ], [ null, %279 ]
  %296 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %295, i64 %270
  %297 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %295, i64 %293
  %298 = ptrtoint %"class.spvtools::opt::Loop"** %297 to i64
  %299 = bitcast %"class.spvtools::opt::Loop"** %296 to i64*
  store i64 %257, i64* %299, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %296, i64 1
  %301 = ptrtoint %"class.spvtools::opt::Loop"** %300 to i64
  %302 = ptrtoint %"class.spvtools::opt::Loop"** %295 to i64
  %303 = icmp sgt i64 %269, 0
  br i1 %303, label %304, label %306

304:                                              ; preds = %292
  %305 = inttoptr i64 %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* align 8 %305, i64 %269, i1 false) #12
  br label %306

306:                                              ; preds = %304, %292
  store i64 %302, i64* %33, align 8
  store i64 %301, i64* %32, align 8
  store i64 %298, i64* %34, align 8
  %307 = icmp eq i64 %268, 0
  br i1 %307, label %310, label %308

308:                                              ; preds = %306
  %309 = inttoptr i64 %268 to i8*
  call void @_ZdlPv(i8* %309) #13
  br label %310

310:                                              ; preds = %246, %308, %306, %262, %253
  call void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"* nonnull %3) #12
  %311 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %312 = icmp eq %"class.spvtools::opt::Loop"* %311, %88
  br i1 %312, label %154, label %246

313:                                              ; preds = %242, %461
  %314 = phi %"class.spvtools::opt::Loop"** [ %466, %461 ], [ %244, %242 ]
  %315 = phi %"class.spvtools::opt::Loop"** [ %464, %461 ], [ %243, %242 ]
  %316 = phi i8 [ %319, %461 ], [ %83, %242 ]
  %317 = icmp eq %"class.spvtools::opt::Loop"** %315, %314
  br i1 %317, label %318, label %322

318:                                              ; preds = %447, %313
  %319 = phi i8 [ %316, %313 ], [ %448, %447 ]
  %320 = load i8, i8* %73, align 8, !range !10
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %468, label %455

322:                                              ; preds = %313, %447
  %323 = phi i8 [ %448, %447 ], [ %316, %313 ]
  %324 = phi %"class.spvtools::opt::Loop"** [ %453, %447 ], [ %315, %313 ]
  %325 = bitcast %"class.spvtools::opt::Loop"** %324 to i64*
  %326 = load i64, i64* %325, align 8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 120, i1 false)
  %327 = load i64, i64* %41, align 8
  %328 = inttoptr i64 %326 to %"class.spvtools::opt::Loop"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %47, %"class.std::__1::__tree_end_node"** %48, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %52, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"** %56, align 8
  store i64 %327, i64* %59, align 8
  store %"class.spvtools::opt::Loop"* %328, %"class.spvtools::opt::Loop"** %60, align 8
  store i8 0, i8* %61, align 8
  %329 = call zeroext i1 @_ZN8spvtools3opt15LoopFissionImpl25GroupInstructionsByUseDefEv(%"class.spvtools::opt::LoopFissionImpl"* nonnull %5)
  br i1 %329, label %330, label %447

330:                                              ; preds = %322
  %331 = call zeroext i1 @_ZN8spvtools3opt15LoopFissionImpl15CanPerformSplitEv(%"class.spvtools::opt::LoopFissionImpl"* nonnull %5)
  br i1 %331, label %332, label %447

332:                                              ; preds = %330
  %333 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt15LoopFissionImpl9SplitLoopEv(%"class.spvtools::opt::LoopFissionImpl"* nonnull %5)
  %334 = ptrtoint %"class.spvtools::opt::Loop"* %333 to i64
  %335 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %335, i32 64) #12
  %336 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %337 = call zeroext i1 @_ZN8spvtools3opt15LoopFissionPass15ShouldSplitLoopERKNS0_4LoopEPNS0_9IRContextE(%"class.spvtools::opt::LoopFissionPass"* %0, %"class.spvtools::opt::Loop"* dereferenceable(128) %333, %"class.spvtools::opt::IRContext"* %336)
  br i1 %337, label %338, label %391

338:                                              ; preds = %332
  %339 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %38, align 8
  %340 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %39, align 8
  %341 = icmp eq %"class.spvtools::opt::Loop"** %339, %340
  %342 = ptrtoint %"class.spvtools::opt::Loop"** %340 to i64
  br i1 %341, label %347, label %343

343:                                              ; preds = %338
  %344 = bitcast %"class.spvtools::opt::Loop"** %339 to i64*
  store i64 %334, i64* %344, align 8
  %345 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %339, i64 1
  %346 = ptrtoint %"class.spvtools::opt::Loop"** %345 to i64
  store i64 %346, i64* %62, align 8
  br label %391

347:                                              ; preds = %338
  %348 = ptrtoint %"class.spvtools::opt::Loop"** %339 to i64
  %349 = load i64, i64* %63, align 8
  %350 = sub i64 %348, %349
  %351 = ashr exact i64 %350, 3
  %352 = add nsw i64 %351, 1
  %353 = icmp ugt i64 %352, 2305843009213693951
  br i1 %353, label %354, label %356

354:                                              ; preds = %347
  %355 = bitcast %"class.std::__1::vector.928"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %355) #14
  unreachable

356:                                              ; preds = %347
  %357 = sub i64 %342, %349
  %358 = ashr exact i64 %357, 3
  %359 = icmp ult i64 %358, 1152921504606846975
  br i1 %359, label %360, label %368

360:                                              ; preds = %356
  %361 = ashr exact i64 %357, 2
  %362 = icmp ult i64 %361, %352
  %363 = select i1 %362, i64 %352, i64 %361
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %373, label %365

365:                                              ; preds = %360
  %366 = icmp ugt i64 %363, 2305843009213693951
  br i1 %366, label %367, label %368

367:                                              ; preds = %365
  call void @abort() #14
  unreachable

368:                                              ; preds = %365, %356
  %369 = phi i64 [ %363, %365 ], [ 2305843009213693951, %356 ]
  %370 = shl i64 %369, 3
  %371 = call i8* @_Znwm(i64 %370) #13
  %372 = bitcast i8* %371 to %"class.spvtools::opt::Loop"**
  br label %373

373:                                              ; preds = %368, %360
  %374 = phi i64 [ %369, %368 ], [ 0, %360 ]
  %375 = phi i8* [ %371, %368 ], [ null, %360 ]
  %376 = phi %"class.spvtools::opt::Loop"** [ %372, %368 ], [ null, %360 ]
  %377 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %376, i64 %351
  %378 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %376, i64 %374
  %379 = ptrtoint %"class.spvtools::opt::Loop"** %378 to i64
  %380 = bitcast %"class.spvtools::opt::Loop"** %377 to i64*
  store i64 %334, i64* %380, align 8
  %381 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %377, i64 1
  %382 = ptrtoint %"class.spvtools::opt::Loop"** %381 to i64
  %383 = ptrtoint %"class.spvtools::opt::Loop"** %376 to i64
  %384 = icmp sgt i64 %350, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %373
  %386 = inttoptr i64 %349 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %375, i8* align 8 %386, i64 %350, i1 false) #12
  br label %387

387:                                              ; preds = %385, %373
  store i64 %383, i64* %63, align 8
  store i64 %382, i64* %62, align 8
  store i64 %379, i64* %64, align 8
  %388 = icmp eq i64 %349, 0
  br i1 %388, label %391, label %389

389:                                              ; preds = %387
  %390 = inttoptr i64 %349 to i8*
  call void @_ZdlPv(i8* %390) #13
  br label %391

391:                                              ; preds = %389, %387, %343, %332
  %392 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %393 = call zeroext i1 @_ZN8spvtools3opt15LoopFissionPass15ShouldSplitLoopERKNS0_4LoopEPNS0_9IRContextE(%"class.spvtools::opt::LoopFissionPass"* %0, %"class.spvtools::opt::Loop"* dereferenceable(128) %328, %"class.spvtools::opt::IRContext"* %392)
  br i1 %393, label %394, label %447

394:                                              ; preds = %391
  %395 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %38, align 8
  %396 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %39, align 8
  %397 = icmp eq %"class.spvtools::opt::Loop"** %395, %396
  %398 = ptrtoint %"class.spvtools::opt::Loop"** %396 to i64
  br i1 %397, label %403, label %399

399:                                              ; preds = %394
  %400 = bitcast %"class.spvtools::opt::Loop"** %395 to i64*
  store i64 %326, i64* %400, align 8
  %401 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 1
  %402 = ptrtoint %"class.spvtools::opt::Loop"** %401 to i64
  store i64 %402, i64* %62, align 8
  br label %447

403:                                              ; preds = %394
  %404 = ptrtoint %"class.spvtools::opt::Loop"** %395 to i64
  %405 = load i64, i64* %63, align 8
  %406 = sub i64 %404, %405
  %407 = ashr exact i64 %406, 3
  %408 = add nsw i64 %407, 1
  %409 = icmp ugt i64 %408, 2305843009213693951
  br i1 %409, label %410, label %412

410:                                              ; preds = %403
  %411 = bitcast %"class.std::__1::vector.928"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %411) #14
  unreachable

412:                                              ; preds = %403
  %413 = sub i64 %398, %405
  %414 = ashr exact i64 %413, 3
  %415 = icmp ult i64 %414, 1152921504606846975
  br i1 %415, label %416, label %424

416:                                              ; preds = %412
  %417 = ashr exact i64 %413, 2
  %418 = icmp ult i64 %417, %408
  %419 = select i1 %418, i64 %408, i64 %417
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %429, label %421

421:                                              ; preds = %416
  %422 = icmp ugt i64 %419, 2305843009213693951
  br i1 %422, label %423, label %424

423:                                              ; preds = %421
  call void @abort() #14
  unreachable

424:                                              ; preds = %421, %412
  %425 = phi i64 [ %419, %421 ], [ 2305843009213693951, %412 ]
  %426 = shl i64 %425, 3
  %427 = call i8* @_Znwm(i64 %426) #13
  %428 = bitcast i8* %427 to %"class.spvtools::opt::Loop"**
  br label %429

429:                                              ; preds = %424, %416
  %430 = phi i64 [ %425, %424 ], [ 0, %416 ]
  %431 = phi i8* [ %427, %424 ], [ null, %416 ]
  %432 = phi %"class.spvtools::opt::Loop"** [ %428, %424 ], [ null, %416 ]
  %433 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %432, i64 %407
  %434 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %432, i64 %430
  %435 = ptrtoint %"class.spvtools::opt::Loop"** %434 to i64
  %436 = bitcast %"class.spvtools::opt::Loop"** %433 to i64*
  store i64 %326, i64* %436, align 8
  %437 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %433, i64 1
  %438 = ptrtoint %"class.spvtools::opt::Loop"** %437 to i64
  %439 = ptrtoint %"class.spvtools::opt::Loop"** %432 to i64
  %440 = icmp sgt i64 %406, 0
  br i1 %440, label %441, label %443

441:                                              ; preds = %429
  %442 = inttoptr i64 %405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %442, i64 %406, i1 false) #12
  br label %443

443:                                              ; preds = %441, %429
  store i64 %439, i64* %63, align 8
  store i64 %438, i64* %62, align 8
  store i64 %435, i64* %64, align 8
  %444 = icmp eq i64 %405, 0
  br i1 %444, label %447, label %445

445:                                              ; preds = %443
  %446 = inttoptr i64 %405 to i8*
  call void @_ZdlPv(i8* %446) #13
  br label %447

447:                                              ; preds = %391, %399, %443, %445, %330, %322
  %448 = phi i8 [ %323, %322 ], [ %323, %330 ], [ 1, %445 ], [ 1, %443 ], [ 1, %399 ], [ 1, %391 ]
  %449 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %66, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.4"* %65, %"class.std::__1::__tree_node.1205"* %449) #12
  %450 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %68, align 8
  call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %67, %"class.std::__1::__tree_node.1211"* %450) #12
  %451 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %70, align 8
  call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %69, %"class.std::__1::__tree_node.1211"* %451) #12
  %452 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %72, align 8
  call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* nonnull %71, %"class.std::__1::__tree_node.1211"* %452) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %40) #12
  %453 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %324, i64 1
  %454 = icmp eq %"class.spvtools::opt::Loop"** %453, %314
  br i1 %454, label %318, label %322

455:                                              ; preds = %318
  %456 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %17, align 8
  %457 = icmp eq %"class.spvtools::opt::Loop"** %456, null
  br i1 %457, label %461, label %458

458:                                              ; preds = %455
  %459 = ptrtoint %"class.spvtools::opt::Loop"** %456 to i64
  store i64 %459, i64* %32, align 8
  %460 = bitcast %"class.spvtools::opt::Loop"** %456 to i8*
  call void @_ZdlPv(i8* %460) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  br label %461

461:                                              ; preds = %455, %458
  %462 = load i64, i64* %63, align 8
  store i64 %462, i64* %33, align 8
  %463 = load <2 x i64>, <2 x i64>* %74, align 8
  store <2 x i64> %463, <2 x i64>* %75, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #12
  %464 = inttoptr i64 %462 to %"class.spvtools::opt::Loop"**
  %465 = extractelement <2 x i64> %463, i32 0
  %466 = inttoptr i64 %465 to %"class.spvtools::opt::Loop"**
  %467 = icmp eq %"class.spvtools::opt::Loop"** %464, %466
  br i1 %467, label %474, label %313

468:                                              ; preds = %318
  %469 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %37, align 8
  %470 = icmp eq %"class.spvtools::opt::Loop"** %469, null
  br i1 %470, label %474, label %471

471:                                              ; preds = %468
  %472 = bitcast %"class.spvtools::opt::Loop"** %469 to i8*
  %473 = ptrtoint %"class.spvtools::opt::Loop"** %469 to i64
  store i64 %473, i64* %62, align 8
  call void @_ZdlPv(i8* %472) #13
  br label %474

474:                                              ; preds = %461, %471, %468
  %475 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %17, align 8
  br label %476

476:                                              ; preds = %474, %242
  %477 = phi %"class.spvtools::opt::Loop"** [ %475, %474 ], [ %243, %242 ]
  %478 = phi i8 [ %319, %474 ], [ %83, %242 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  %479 = icmp eq %"class.spvtools::opt::Loop"** %477, null
  br i1 %479, label %483, label %480

480:                                              ; preds = %476
  %481 = ptrtoint %"class.spvtools::opt::Loop"** %477 to i64
  store i64 %481, i64* %32, align 8
  %482 = bitcast %"class.spvtools::opt::Loop"** %477 to i8*
  call void @_ZdlPv(i8* %482) #13
  br label %483

483:                                              ; preds = %476, %480
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %484 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %84, i64 1
  %485 = icmp eq %"class.std::__1::unique_ptr.43"* %484, %13
  br i1 %485, label %76, label %486

486:                                              ; preds = %483
  %487 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  br label %81
}

declare %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15LoopFissionPassD2Ev(%"class.spvtools::opt::LoopFissionPass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt15LoopFissionPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %13 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %13, i64 0, i32 1
  %15 = load void (i8*)*, void (i8*)** %14, align 8
  %16 = icmp eq void (i8*)* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void %15(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15LoopFissionPassD0Ev(%"class.spvtools::opt::LoopFissionPass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt15LoopFissionPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %8, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %13 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %13, i64 0, i32 1
  %15 = load void (i8*)*, void (i8*)** %14, align 8
  %16 = icmp eq void (i8*)* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.spvtools::opt::LoopFissionPass", %"class.spvtools::opt::LoopFissionPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void %15(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.spvtools::opt::LoopFissionPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt15LoopFissionPass4nameEv(%"class.spvtools::opt::LoopFissionPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.136"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.112"*, %"struct.std::__1::__hash_node_base.112"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.112"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.112"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.112", %"struct.std::__1::__hash_node_base.112"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.112"*, %"struct.std::__1::__hash_node_base.112"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.112", %"struct.std::__1::__hash_node_base.112"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.112"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.112", %"struct.std::__1::__hash_node_base.112"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.112"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.112"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  %23 = icmp eq %"struct.std::__1::__hash_node_base.112"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.112"**, %"struct.std::__1::__hash_node_base.112"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.112"** null, %"struct.std::__1::__hash_node_base.112"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.112"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.112"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.100"* %31, %"class.std::__1::__tree_node"* %34) #12
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.100"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.100"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.100"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32) local_unnamed_addr #1

declare void @_ZN8spvtools3opt23ScalarEvolutionAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.699"*, %"class.std::__1::__tree_node.1146"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1146"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1146"* %1 to %"class.std::__1::__tree_node.1146"**
  %6 = load %"class.std::__1::__tree_node.1146"*, %"class.std::__1::__tree_node.1146"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.699"* %0, %"class.std::__1::__tree_node.1146"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1146", %"class.std::__1::__tree_node.1146"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1146"**
  %9 = load %"class.std::__1::__tree_node.1146"*, %"class.std::__1::__tree_node.1146"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.699"* %0, %"class.std::__1::__tree_node.1146"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1146"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.660"*, %"class.std::__1::__tree_node.1155"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1155"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1155"* %1 to %"class.std::__1::__tree_node.1155"**
  %6 = load %"class.std::__1::__tree_node.1155"*, %"class.std::__1::__tree_node.1155"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.660"* %0, %"class.std::__1::__tree_node.1155"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1155", %"class.std::__1::__tree_node.1155"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1155"**
  %9 = load %"class.std::__1::__tree_node.1155"*, %"class.std::__1::__tree_node.1155"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.660"* %0, %"class.std::__1::__tree_node.1155"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1155"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %3, align 8
  store %"class.std::__1::vector.16"* null, %"class.std::__1::vector.16"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.16"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.16"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.16"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.16"* null, %"class.std::__1::vector.16"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %8, align 8
  store %"class.std::__1::vector.16"* %4, %"class.std::__1::vector.16"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.16"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.16"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %23, align 8
  store %"class.std::__1::vector.16"* null, %"class.std::__1::vector.16"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.16"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.16"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %3, align 8
  store %"class.std::__1::vector.16"* null, %"class.std::__1::vector.16"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.16"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.16"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.349"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.349"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.349", %"struct.std::__1::__hash_node_base.349"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.349"*, %"struct.std::__1::__hash_node_base.349"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.349"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  %10 = icmp eq %"struct.std::__1::__hash_node_base.349"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.349"**, %"struct.std::__1::__hash_node_base.349"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.349"** null, %"struct.std::__1::__hash_node_base.349"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.349"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.349"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.325"*, %"struct.std::__1::__hash_node_base.325"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.325"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.325"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.325", %"struct.std::__1::__hash_node_base.325"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.325"*, %"struct.std::__1::__hash_node_base.325"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.325", %"struct.std::__1::__hash_node_base.325"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.325"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.325", %"struct.std::__1::__hash_node_base.325"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.325"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.325"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  %36 = icmp eq %"struct.std::__1::__hash_node_base.325"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.325"**, %"struct.std::__1::__hash_node_base.325"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.325"** null, %"struct.std::__1::__hash_node_base.325"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.325"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.325"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !10
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #12
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #12
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !10
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !10
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #12
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !10
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #12
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #12
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !10
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #12
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #12
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !10
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !10
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #12
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !10
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #12
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #12
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.297"*, %"struct.std::__1::__hash_node_base.297"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.297"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.297"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.297", %"struct.std::__1::__hash_node_base.297"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.297"*, %"struct.std::__1::__hash_node_base.297"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.297", %"struct.std::__1::__hash_node_base.297"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.297"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.297", %"struct.std::__1::__hash_node_base.297"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.297"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #13
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.297"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #13
  %214 = icmp eq %"struct.std::__1::__hash_node_base.297"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.297"**, %"struct.std::__1::__hash_node_base.297"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.297"** null, %"struct.std::__1::__hash_node_base.297"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.297"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.297"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #13
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !10
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #12
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !10
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !10
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !10
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !10
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #12
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !10
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !10
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !10
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #12
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #12
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %38, align 8
  store %"class.std::__1::vector.16"* null, %"class.std::__1::vector.16"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.16"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.16"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !10
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !10
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !10
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !10
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #12
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #12
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.59"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !10
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #12
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #12
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !10
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !10
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #12
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !10
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #12
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #12
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt16LivenessAnalysisEEclEPS3_(%"struct.std::__1::default_delete.740"*, %"class.spvtools::opt::LivenessAnalysis"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::LivenessAnalysis"* %1, null
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::LivenessAnalysis", %"class.spvtools::opt::LivenessAnalysis"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.720"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %4, %32
  %9 = phi %"struct.std::__1::__hash_node_base.720"* [ %11, %32 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %9, i64 6
  %13 = bitcast %"struct.std::__1::__hash_node_base.720"* %12 to %"struct.std::__1::__hash_node_base.1102"**
  %14 = load %"struct.std::__1::__hash_node_base.1102"*, %"struct.std::__1::__hash_node_base.1102"** %13, align 8
  %15 = bitcast %"struct.std::__1::__hash_node_base.720"* %12 to %"class.std::__1::allocator.1112"*
  %16 = icmp eq %"struct.std::__1::__hash_node_base.1102"* %14, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %8, %17
  %18 = phi %"struct.std::__1::__hash_node_base.1102"* [ %20, %17 ], [ %14, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1102", %"struct.std::__1::__hash_node_base.1102"* %18, i64 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.1102"*, %"struct.std::__1::__hash_node_base.1102"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1102", %"struct.std::__1::__hash_node_base.1102"* %18, i64 2
  %22 = bitcast %"struct.std::__1::__hash_node_base.1102"* %21 to %"struct.std::__1::pair.1187"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIjN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEEPvEEEEE7destroyINS_4pairIKjS7_EEvvEEvRSB_PT_(%"class.std::__1::allocator.1112"* dereferenceable(1) %15, %"struct.std::__1::pair.1187"* %22) #12
  %23 = bitcast %"struct.std::__1::__hash_node_base.1102"* %18 to i8*
  tail call void @_ZdlPv(i8* %23) #13
  %24 = icmp eq %"struct.std::__1::__hash_node_base.1102"* %20, null
  br i1 %24, label %25, label %17

25:                                               ; preds = %17, %8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %9, i64 4
  %27 = bitcast %"struct.std::__1::__hash_node_base.720"* %26 to %"struct.std::__1::__hash_node_base.1102"***
  %28 = load %"struct.std::__1::__hash_node_base.1102"**, %"struct.std::__1::__hash_node_base.1102"*** %27, align 8
  store %"struct.std::__1::__hash_node_base.1102"** null, %"struct.std::__1::__hash_node_base.1102"*** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.1102"** %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = bitcast %"struct.std::__1::__hash_node_base.1102"** %28 to i8*
  tail call void @_ZdlPv(i8* %31) #13
  br label %32

32:                                               ; preds = %30, %25
  %33 = bitcast %"struct.std::__1::__hash_node_base.720"* %9 to i8*
  tail call void @_ZdlPv(i8* %33) #13
  %34 = icmp eq %"struct.std::__1::__hash_node_base.720"* %11, null
  br i1 %34, label %35, label %8

35:                                               ; preds = %32, %4
  %36 = getelementptr inbounds %"class.spvtools::opt::LivenessAnalysis", %"class.spvtools::opt::LivenessAnalysis"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %36, align 8
  store %"struct.std::__1::__hash_node_base.720"** null, %"struct.std::__1::__hash_node_base.720"*** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.720"** %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast %"struct.std::__1::__hash_node_base.720"** %37 to i8*
  tail call void @_ZdlPv(i8* %40) #13
  br label %41

41:                                               ; preds = %35, %39
  %42 = bitcast %"class.spvtools::opt::LivenessAnalysis"* %1 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %41, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIjN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEEPvEEEEE7destroyINS_4pairIKjS7_EEvvEEvRSB_PT_(%"class.std::__1::allocator.1112"* dereferenceable(1), %"struct.std::__1::pair.1187"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %1, i64 0, i32 1, i32 3, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.1088"*, %"struct.std::__1::pair.1088"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.1088"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = ptrtoint %"struct.std::__1::pair.1088"* %4 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %1, i64 0, i32 1, i32 3, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.1088"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair.1088"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %6, %2
  %12 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %1, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.1069"*, %"struct.std::__1::__hash_node_base.1069"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1069"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11, %15
  %16 = phi %"struct.std::__1::__hash_node_base.1069"* [ %18, %15 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1069", %"struct.std::__1::__hash_node_base.1069"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.1069"*, %"struct.std::__1::__hash_node_base.1069"** %17, align 8
  %19 = bitcast %"struct.std::__1::__hash_node_base.1069"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  %20 = icmp eq %"struct.std::__1::__hash_node_base.1069"* %18, null
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1069"**, %"struct.std::__1::__hash_node_base.1069"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.1069"** null, %"struct.std::__1::__hash_node_base.1069"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.1069"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.1069"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.1069"*, %"struct.std::__1::__hash_node_base.1069"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.1069"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %27, %31
  %32 = phi %"struct.std::__1::__hash_node_base.1069"* [ %34, %31 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1069", %"struct.std::__1::__hash_node_base.1069"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.1069"*, %"struct.std::__1::__hash_node_base.1069"** %33, align 8
  %35 = bitcast %"struct.std::__1::__hash_node_base.1069"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #13
  %36 = icmp eq %"struct.std::__1::__hash_node_base.1069"* %34, null
  br i1 %36, label %37, label %31

37:                                               ; preds = %31, %27
  %38 = getelementptr inbounds %"struct.std::__1::pair.1187", %"struct.std::__1::pair.1187"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.1069"**, %"struct.std::__1::__hash_node_base.1069"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.1069"** null, %"struct.std::__1::__hash_node_base.1069"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1069"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.1069"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.720"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__emplace_unique_implIJRPS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEEDpOT_(%"class.std::__1::__hash_table.716"*, %"class.spvtools::opt::Function"** dereferenceable(8), %"class.spvtools::opt::RegisterLiveness"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_Znwm(i64 72) #13, !noalias !35
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast %"class.spvtools::opt::Function"** %1 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !35
  %8 = bitcast i8* %5 to i64*
  store i64 %7, i64* %8, align 8, !noalias !35
  %9 = getelementptr inbounds i8, i8* %4, i64 24
  %10 = getelementptr inbounds i8, i8* %4, i64 32
  %11 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.spvtools::opt::RegisterLiveness"* %2 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8, !noalias !35
  store %"struct.std::__1::__hash_node_base.1102"** null, %"struct.std::__1::__hash_node_base.1102"*** %11, align 8, !noalias !35
  %14 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %14, align 8, !noalias !35
  %15 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds i8, i8* %4, i64 40
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %15, align 8, !noalias !35
  store i64 %18, i64* %17, align 8, !noalias !35
  store i64 0, i64* %15, align 8, !noalias !35
  %19 = getelementptr inbounds i8, i8* %4, i64 48
  %20 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %2, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__compressed_pair.1109"* %20 to i64*
  %22 = bitcast i8* %19 to i64*
  %23 = load i64, i64* %21, align 8, !noalias !35
  store i64 %23, i64* %22, align 8, !noalias !35
  %24 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds i8, i8* %4, i64 56
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %24, align 8, !noalias !35
  store i64 %27, i64* %26, align 8, !noalias !35
  %28 = getelementptr inbounds i8, i8* %4, i64 64
  %29 = getelementptr inbounds %"class.spvtools::opt::RegisterLiveness", %"class.spvtools::opt::RegisterLiveness"* %2, i64 0, i32 1, i32 0, i32 3
  %30 = bitcast %"class.std::__1::__compressed_pair.1117"* %29 to i32*
  %31 = bitcast i8* %28 to i32*
  %32 = load i32, i32* %30, align 4, !noalias !35
  store i32 %32, i32* %31, align 8, !noalias !35
  %33 = icmp eq i64 %27, 0
  %34 = extractelement <2 x i64> %13, i32 1
  %35 = inttoptr i64 %34 to %"struct.std::__1::__hash_node_base.1102"**
  br i1 %33, label %56, label %36

36:                                               ; preds = %3
  %37 = inttoptr i64 %23 to %"struct.std::__1::__hash_node_base.1102"*
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1102", %"struct.std::__1::__hash_node_base.1102"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.1102"* %38 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !35
  %41 = tail call i64 @llvm.ctpop.i64(i64 %18) #12, !range !11
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = add i64 %18, -1
  %45 = and i64 %40, %44
  br label %50

46:                                               ; preds = %36
  %47 = icmp ult i64 %40, %18
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %40, %18
  br label %50

50:                                               ; preds = %48, %46, %43
  %51 = phi i64 [ %45, %43 ], [ %49, %48 ], [ %40, %46 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1102"*, %"struct.std::__1::__hash_node_base.1102"** %35, i64 %51
  %53 = bitcast %"struct.std::__1::__hash_node_base.1102"** %52 to i8**
  store i8* %19, i8** %53, align 8, !noalias !35
  %54 = bitcast %"class.std::__1::__compressed_pair.1109"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #12, !noalias !35
  %55 = load i64, i64* %8, align 8, !noalias !35
  br label %56

56:                                               ; preds = %3, %50
  %57 = phi i64 [ %7, %3 ], [ %55, %50 ]
  %58 = lshr i64 %57, 32
  %59 = shl i64 %57, 3
  %60 = and i64 %59, 4294967288
  %61 = add nuw nsw i64 %60, 8
  %62 = xor i64 %61, %58
  %63 = mul i64 %62, -7070675565921424023
  %64 = lshr i64 %63, 47
  %65 = xor i64 %63, %58
  %66 = xor i64 %65, %64
  %67 = mul i64 %66, -7070675565921424023
  %68 = lshr i64 %67, 47
  %69 = xor i64 %68, %67
  %70 = mul i64 %69, -7070675565921424023
  %71 = getelementptr inbounds i8, i8* %4, i64 8
  %72 = bitcast i8* %71 to i64*
  store i64 %70, i64* %72, align 8, !noalias !35
  %73 = bitcast i8* %4 to %"struct.std::__1::__hash_node_base.720"**
  store %"struct.std::__1::__hash_node_base.720"* null, %"struct.std::__1::__hash_node_base.720"** %73, align 8, !noalias !35
  %74 = bitcast i8* %4 to %"struct.std::__1::__hash_node.1182"*
  %75 = tail call { %"struct.std::__1::__hash_node_base.720"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS8_PvEE(%"class.std::__1::__hash_table.716"* %0, %"struct.std::__1::__hash_node.1182"* nonnull %74)
  %76 = extractvalue { %"struct.std::__1::__hash_node_base.720"*, i8 } %75, 1
  %77 = and i8 %76, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %99

79:                                               ; preds = %56
  %80 = bitcast i8* %19 to %"struct.std::__1::__hash_node_base.1102"**
  %81 = load %"struct.std::__1::__hash_node_base.1102"*, %"struct.std::__1::__hash_node_base.1102"** %80, align 8
  %82 = bitcast i8* %19 to %"class.std::__1::allocator.1112"*
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1102"* %81, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %79, %84
  %85 = phi %"struct.std::__1::__hash_node_base.1102"* [ %87, %84 ], [ %81, %79 ]
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1102", %"struct.std::__1::__hash_node_base.1102"* %85, i64 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base.1102"*, %"struct.std::__1::__hash_node_base.1102"** %86, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1102", %"struct.std::__1::__hash_node_base.1102"* %85, i64 2
  %89 = bitcast %"struct.std::__1::__hash_node_base.1102"* %88 to %"struct.std::__1::pair.1187"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIjN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEEPvEEEEE7destroyINS_4pairIKjS7_EEvvEEvRSB_PT_(%"class.std::__1::allocator.1112"* dereferenceable(1) %82, %"struct.std::__1::pair.1187"* %89) #12
  %90 = bitcast %"struct.std::__1::__hash_node_base.1102"* %85 to i8*
  tail call void @_ZdlPv(i8* %90) #13
  %91 = icmp eq %"struct.std::__1::__hash_node_base.1102"* %87, null
  br i1 %91, label %92, label %84

92:                                               ; preds = %84, %79
  %93 = bitcast i8* %10 to %"struct.std::__1::__hash_node_base.1102"***
  %94 = load %"struct.std::__1::__hash_node_base.1102"**, %"struct.std::__1::__hash_node_base.1102"*** %93, align 8
  store %"struct.std::__1::__hash_node_base.1102"** null, %"struct.std::__1::__hash_node_base.1102"*** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.1102"** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast %"struct.std::__1::__hash_node_base.1102"** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #13
  br label %98

98:                                               ; preds = %96, %92
  tail call void @_ZdlPv(i8* nonnull %4) #13
  br label %99

99:                                               ; preds = %56, %98
  ret { %"struct.std::__1::__hash_node_base.720"*, i8 } %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.720"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS8_PvEE(%"class.std::__1::__hash_table.716"*, %"struct.std::__1::__hash_node.1182"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node.1182", %"struct.std::__1::__hash_node.1182"* %1, i64 0, i32 2
  %4 = bitcast %"struct.std::__1::__hash_value_type.1183"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node.1182", %"struct.std::__1::__hash_node.1182"* %1, i64 0, i32 1
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node.1182", %"struct.std::__1::__hash_node.1182"* %1, i64 0, i32 0
  %21 = tail call %"struct.std::__1::__hash_node_base.720"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE28__node_insert_unique_prepareEmRS8_(%"class.std::__1::__hash_table.716"* %0, i64 %18, %"struct.std::__1::__hash_value_type.1183"* dereferenceable(56) %3)
  %22 = icmp eq %"struct.std::__1::__hash_node_base.720"* %21, null
  br i1 %22, label %23, label %82

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %20, i64 1
  %25 = bitcast %"struct.std::__1::__hash_node_base.720"* %24 to i64*
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %25, align 8
  %29 = tail call i64 @llvm.ctpop.i64(i64 %27) #12, !range !11
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %23
  %32 = add i64 %27, -1
  %33 = and i64 %32, %28
  br label %38

34:                                               ; preds = %23
  %35 = icmp ult i64 %28, %27
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %28, %27
  br label %38

38:                                               ; preds = %36, %34, %31
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %28, %34 ]
  %40 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.720"* %43, null
  br i1 %44, label %45, label %71

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 1, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %46, i64 0, i32 0
  %48 = bitcast %"struct.std::__1::__hash_node_base.720"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node.1182", %"struct.std::__1::__hash_node.1182"* %1, i64 0, i32 0, i32 0
  %51 = bitcast %"struct.std::__1::__hash_node.1182"* %1 to i64*
  store i64 %49, i64* %51, align 8
  store %"struct.std::__1::__hash_node_base.720"* %20, %"struct.std::__1::__hash_node_base.720"** %47, align 8
  %52 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %40, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %52, i64 %39
  store %"struct.std::__1::__hash_node_base.720"* %46, %"struct.std::__1::__hash_node_base.720"** %53, align 8
  %54 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %50, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.720"* %54, null
  br i1 %55, label %78, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.720"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  br i1 %30, label %63, label %60

60:                                               ; preds = %56
  %61 = add i64 %27, -1
  %62 = and i64 %59, %61
  br label %67

63:                                               ; preds = %56
  %64 = icmp ult i64 %59, %27
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %59, %27
  br label %67

67:                                               ; preds = %65, %63, %60
  %68 = phi i64 [ %62, %60 ], [ %66, %65 ], [ %59, %63 ]
  %69 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %40, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %69, i64 %68
  br label %76

71:                                               ; preds = %38
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %43, i64 0, i32 0
  %73 = bitcast %"struct.std::__1::__hash_node_base.720"* %43 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.std::__1::__hash_node.1182"* %1 to i64*
  store i64 %74, i64* %75, align 8
  br label %76

76:                                               ; preds = %71, %67
  %77 = phi %"struct.std::__1::__hash_node_base.720"** [ %70, %67 ], [ %72, %71 ]
  store %"struct.std::__1::__hash_node_base.720"* %20, %"struct.std::__1::__hash_node_base.720"** %77, align 8
  br label %78

78:                                               ; preds = %76, %45
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %78, %2
  %83 = phi i8 [ 1, %78 ], [ 0, %2 ]
  %84 = phi %"struct.std::__1::__hash_node_base.720"* [ %20, %78 ], [ %21, %2 ]
  %85 = insertvalue { %"struct.std::__1::__hash_node_base.720"*, i8 } undef, %"struct.std::__1::__hash_node_base.720"* %84, 0
  %86 = insertvalue { %"struct.std::__1::__hash_node_base.720"*, i8 } %85, i8 %83, 1
  ret { %"struct.std::__1::__hash_node_base.720"*, i8 } %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.720"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE28__node_insert_unique_prepareEmRS8_(%"class.std::__1::__hash_table.716"*, i64, %"struct.std::__1::__hash_value_type.1183"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %51, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !11
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %1
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %1
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %1, %5
  br label %17

17:                                               ; preds = %10, %13, %15
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %1, %13 ]
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.720"* %22, null
  br i1 %23, label %51, label %24

24:                                               ; preds = %17
  %25 = add i64 %5, -1
  %26 = getelementptr inbounds %"struct.std::__1::__hash_value_type.1183", %"struct.std::__1::__hash_value_type.1183"* %2, i64 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %26, align 8
  br label %28

28:                                               ; preds = %24, %46
  %29 = phi %"struct.std::__1::__hash_node_base.720"* [ %31, %46 ], [ %22, %24 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.720"* %31, null
  br i1 %32, label %51, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.720"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %9, label %39, label %37

37:                                               ; preds = %33
  %38 = and i64 %36, %25
  br label %43

39:                                               ; preds = %33
  %40 = icmp ult i64 %36, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %36, %5
  br label %43

43:                                               ; preds = %37, %39, %41
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %36, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %46, label %51

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.720"* %47 to %"class.spvtools::opt::Function"**
  %49 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %48, align 8
  %50 = icmp eq %"class.spvtools::opt::Function"* %49, %27
  br i1 %50, label %75, label %28

51:                                               ; preds = %43, %28, %17, %3
  %52 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  %55 = uitofp i64 %54 to float
  %56 = uitofp i64 %5 to float
  %57 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 3, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = fmul float %58, %56
  %60 = fcmp olt float %59, %55
  %61 = or i1 %6, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %51
  %63 = shl i64 %5, 1
  %64 = icmp ult i64 %5, 3
  %65 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !11
  %66 = icmp ugt i64 %65, 1
  %67 = or i1 %64, %66
  %68 = zext i1 %67 to i64
  %69 = or i64 %63, %68
  %70 = fdiv float %55, %58
  %71 = tail call float @llvm.ceil.f32(float %70) #12
  %72 = fptoui float %71 to i64
  %73 = icmp ult i64 %69, %72
  %74 = select i1 %73, i64 %72, i64 %69
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.716"* %0, i64 %74)
  br label %75

75:                                               ; preds = %46, %62, %51
  %76 = phi %"struct.std::__1::__hash_node_base.720"* [ null, %51 ], [ null, %62 ], [ %31, %46 ]
  ret %"struct.std::__1::__hash_node_base.720"* %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.716"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.716"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.716"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.716"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.716"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.720"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.720"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.722", %"class.std::__1::__bucket_list_deallocator.722"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.720"* null, %"struct.std::__1::__hash_node_base.720"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !38

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.720"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.720"* null, %"struct.std::__1::__hash_node_base.720"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.720"* null, %"struct.std::__1::__hash_node_base.720"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.720"* null, %"struct.std::__1::__hash_node_base.720"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.720"* null, %"struct.std::__1::__hash_node_base.720"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.720"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.720"* %36, %"struct.std::__1::__hash_node_base.720"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.720"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.720"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.720"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.720"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.720"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.720"* %101 to %"class.spvtools::opt::Function"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.720"* %82, %"struct.std::__1::__hash_node_base.720"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.720"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.720"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.720"* %110 to %"class.spvtools::opt::Function"**
  %112 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %102, align 8
  %113 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Function"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.720"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.720"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.720"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.720"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.720"* %80, %"struct.std::__1::__hash_node_base.720"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.720"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.720", %"struct.std::__1::__hash_node_base.720"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.720"*, %"struct.std::__1::__hash_node_base.720"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.720"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.716", %"class.std::__1::__hash_table.716"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.720"**, %"struct.std::__1::__hash_node_base.720"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.720"** null, %"struct.std::__1::__hash_node_base.720"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.720"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.720"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.722", %"class.std::__1::__bucket_list_deallocator.722"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare void @_ZN8spvtools3opt16RegisterLiveness7AnalyzeEPNS0_8FunctionE(%"class.spvtools::opt::RegisterLiveness"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.1123"*, align 8
  %3 = alloca %"struct.std::__1::pair.1123"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1197", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.1123"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %11, i64 1
  store %"struct.std::__1::pair.1123"** %14, %"struct.std::__1::pair.1123"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.1123"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.1123"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.1123"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.1123"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.1123"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.1123"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.1123"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.1123"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.1123"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #12
  %41 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.1123"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %33, i64 %36
  store %"struct.std::__1::pair.1123"** %44, %"struct.std::__1::pair.1123"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %43, i64 %32
  store %"struct.std::__1::pair.1123"** %45, %"struct.std::__1::pair.1123"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.1123"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.1123"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #13
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.1123"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.1123"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.1123"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.1123"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.1123"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.1123"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.1123"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.1123"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.1123"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !40

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.1123"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.1123"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.1123"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.1123"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.1123"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.1123"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.1123"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1123"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.1123"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1123"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.1123"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1123"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.1123"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1123"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.1123"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1123"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.1123"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.1123"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.1123"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.1123"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.1123"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.1123"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.1123"** %70 to i64
  %146 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.1123"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.1123"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.1123"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.1123"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.1123"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  %156 = bitcast %"struct.std::__1::pair.1123"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %160, i64 1
  store %"struct.std::__1::pair.1123"** %161, %"struct.std::__1::pair.1123"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.1123"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.1123"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.1123"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.1123"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.1123"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.1123"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #12
  %186 = tail call i8* @_Znwm(i64 4096) #13
  %187 = bitcast %"struct.std::__1::pair.1123"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.1123"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #12
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.1123"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #12
  %190 = tail call i8* @_Znwm(i64 4096) #13
  %191 = bitcast %"struct.std::__1::pair.1123"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.1123"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #12
  %192 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.1123"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %192, i64 1
  store %"struct.std::__1::pair.1123"** %195, %"struct.std::__1::pair.1123"*** %167, align 8
  %196 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %164, align 8
  %197 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.1123"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.1123"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.1123"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.1123"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.1123"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.1123"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.1123"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.1123"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.1123"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #12
  %220 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.1123"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %212, i64 %215
  store %"struct.std::__1::pair.1123"** %223, %"struct.std::__1::pair.1123"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %222, i64 %211
  store %"struct.std::__1::pair.1123"** %224, %"struct.std::__1::pair.1123"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.1123"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #13
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.1123"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.1123"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.1123"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.1123"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.1123"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.1123"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.1123"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.1123"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.1123"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !41

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.1123"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.1123"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.1123"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.1123"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.1123"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.1123"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.1123"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.1123"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.1123"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.1123"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.1123"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.1123"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.1123"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.1123"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.1123"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.1123"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.1123"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.1123"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.1123"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.1123"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.1123"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.1123"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.1123"** %247 to i64
  %323 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.1123"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.1123"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.1123"** %325 to i8*
  call void @_ZdlPv(i8* %330) #13
  %331 = bitcast %"struct.std::__1::pair.1123"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %335, i64 1
  store %"struct.std::__1::pair.1123"** %336, %"struct.std::__1::pair.1123"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #12
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1197", %"struct.std::__1::__split_buffer.1197"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1197", %"struct.std::__1::__split_buffer.1197"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1197", %"struct.std::__1::__split_buffer.1197"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1197", %"struct.std::__1::__split_buffer.1197"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1197"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1123"** null, %"struct.std::__1::pair.1123"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1127"** %342 to %"class.std::__1::__compressed_pair.1124"**
  store %"class.std::__1::__compressed_pair.1124"* %346, %"class.std::__1::__compressed_pair.1124"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #13
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.1123"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1197"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %354, i64 %171
  store %"struct.std::__1::pair.1123"** %356, %"struct.std::__1::pair.1123"*** %340, align 8
  store %"struct.std::__1::pair.1123"** %356, %"struct.std::__1::pair.1123"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %354, i64 %345
  store %"struct.std::__1::pair.1123"** %357, %"struct.std::__1::pair.1123"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #13
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.1123"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.1123"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.1123"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %356, i64 %370
  store %"struct.std::__1::pair.1123"** %371, %"struct.std::__1::pair.1123"*** %340, align 8
  store %"struct.std::__1::pair.1123"** %371, %"struct.std::__1::pair.1123"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.1123"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1197"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.1123"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #13
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.1123"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.1123"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.1123"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.1123"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.1123"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #13
  %394 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %164, align 8
  %395 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.1123"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.1123"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.1123"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.1123"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.1123"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.1123"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %406, i64 1
  store %"struct.std::__1::pair.1123"** %408, %"struct.std::__1::pair.1123"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.1123"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.1123"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1197"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.1123"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.1123"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.1123"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.1123"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1197"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.1123"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.1123"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.1123"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.1123"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.1123"**
  %442 = icmp eq %"struct.std::__1::pair.1123"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.1123"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %441, i64 %448
  store %"struct.std::__1::pair.1123"** %449, %"struct.std::__1::pair.1123"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #13
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #12
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.1123"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1197"* nonnull %4, %"struct.std::__1::pair.1123"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.1123"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.1123"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1123"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1123"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.1123"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.1123"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.1123"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.1123"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1123"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.1123"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.1123"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.1123"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %23, i64 %26
  store %"struct.std::__1::pair.1123"** %34, %"struct.std::__1::pair.1123"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %33, i64 %22
  store %"struct.std::__1::pair.1123"** %35, %"struct.std::__1::pair.1123"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.1123"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.1123"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.1123"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.1123"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.1123"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.1123"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1123"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.1123"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.1123"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.1123"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.1123"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !42

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.1123"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.1123"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.1123"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.1123"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.1123"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.1123"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.1123"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.1123"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.1123"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.1123"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.1123"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1123"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.1123"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1123"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.1123"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1123"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.1123"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1123"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.1123"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1123"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.1123"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.1123"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.1123"** %60 to i64
  %136 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.1123"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.1123"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.1123"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.1123"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.1123"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"struct.std::__1::pair.1123"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.1123"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %152, i64 1
  store %"struct.std::__1::pair.1123"** %153, %"struct.std::__1::pair.1123"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.1123"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1123"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1123"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1123"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1123"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1123"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1123"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1123"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1123"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1123"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1123"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1123"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1123"** %36, %"struct.std::__1::pair.1123"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %35, i64 %22
  store %"struct.std::__1::pair.1123"** %37, %"struct.std::__1::pair.1123"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1123"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1123"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1123"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1123"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1123"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1123"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1123"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1123"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1123"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !43

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1123"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1123"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1123"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1123"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1123"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1123"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1123"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1123"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1123"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1123"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1123"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1123"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1123"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1123"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1123"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1123"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1123"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1123"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1123"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1123"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1123"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1123"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1123"** %61 to i64
  %137 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1123"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1123"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1123"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1123"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1123"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1123"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1123"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1123"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %153, i64 -1
  store %"struct.std::__1::pair.1123"** %154, %"struct.std::__1::pair.1123"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1197"*, %"struct.std::__1::pair.1123"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1197", %"struct.std::__1::__split_buffer.1197"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1197", %"struct.std::__1::__split_buffer.1197"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1123"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1123"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1197", %"struct.std::__1::__split_buffer.1197"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1197", %"struct.std::__1::__split_buffer.1197"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1123"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1123"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1123"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1123"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1123"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1123"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1123"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1123"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1123"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1123"** %36, %"struct.std::__1::pair.1123"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %35, i64 %22
  store %"struct.std::__1::pair.1123"** %37, %"struct.std::__1::pair.1123"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1197"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1123"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1123"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1123"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1123"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1123"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1123"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1123"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1123"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1123"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !44

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1123"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1123"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1123"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1123"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1123"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1123"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1123"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1123"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1123"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1123"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1123"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1123"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1123"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1123"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1123"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1123"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1123"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1123"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1123"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1123"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1123"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1123"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1123"** %61 to i64
  %137 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1123"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1123"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1123"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1123"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1123"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1123"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1123"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1123"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %153, i64 -1
  store %"struct.std::__1::pair.1123"** %154, %"struct.std::__1::pair.1123"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.4"*, %"class.std::__1::__tree_node.1205"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1205"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1205"* %1 to %"class.std::__1::__tree_node.1205"**
  %6 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.4"* %0, %"class.std::__1::__tree_node.1205"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1205", %"class.std::__1::__tree_node.1205"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1205"**
  %9 = load %"class.std::__1::__tree_node.1205"*, %"class.std::__1::__tree_node.1205"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.4"* %0, %"class.std::__1::__tree_node.1205"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1205"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1211"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1211"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1211"* %1 to %"class.std::__1::__tree_node.1211"**
  %6 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1211"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1211"**
  %9 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1211"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1211"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15LoopFissionImpl14TraverseUseDefES5_PNS_3setIS5_NS_4lessIS5_EENS_9allocatorIS5_EEEEbbE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %4 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %4, i64 0, i32 0
  tail call fastcc void @"_ZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS0_11InstructionEPNSt3__13setIS3_NS4_4lessIS3_EENS4_9allocatorIS3_EEEEbbENK3$_0clES3_"(%class.anon* %5, %"class.spvtools::opt::Instruction"* %1) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS0_11InstructionEPNSt3__13setIS3_NS4_4lessIS3_EENS4_9allocatorIS3_EEEEbbENK3$_0clES3_"(%class.anon* nocapture readonly, %"class.spvtools::opt::Instruction"*) unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::function.1267", align 8
  %4 = alloca %"class.std::__1::function.1219", align 8
  %5 = alloca %"class.std::__1::function.1226", align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %8 = load %"class.spvtools::opt::LoopFissionImpl"*, %"class.spvtools::opt::LoopFissionImpl"** %7, align 8
  %9 = icmp eq %"class.spvtools::opt::Instruction"* %1, null
  br i1 %9, label %331, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %8, i64 0, i32 2
  %12 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %8, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.1211"**
  %14 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node.1211"* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %10, %28
  %17 = phi %"class.std::__1::__tree_node.1211"* [ %30, %28 ], [ %14, %10 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %17, i64 0, i32 1
  %19 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %20 = icmp ugt %"class.spvtools::opt::Instruction"* %19, %1
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::__tree_node.1211"* %17 to %"class.std::__1::__tree_node.1211"**
  br label %28

23:                                               ; preds = %16
  %24 = icmp ult %"class.spvtools::opt::Instruction"* %19, %1
  br i1 %24, label %25, label %331

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %17, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::__tree_node_base"** %26 to %"class.std::__1::__tree_node.1211"**
  br label %28

28:                                               ; preds = %25, %21
  %29 = phi %"class.std::__1::__tree_node.1211"** [ %22, %21 ], [ %27, %25 ]
  %30 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node.1211"* %30, null
  br i1 %31, label %32, label %16

32:                                               ; preds = %28, %10
  %33 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %8, i64 0, i32 4
  %34 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %35 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %34, %"class.spvtools::opt::Instruction"* nonnull %1)
  %36 = icmp eq %"class.spvtools::opt::BasicBlock"* %35, null
  br i1 %36, label %331, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %8, i64 0, i32 5
  %39 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %38, align 8
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %41 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %40, %"class.spvtools::opt::Instruction"* nonnull %1)
  %42 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %41, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !10
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 3
  %49 = load i8, i8* %48, align 4, !range !10
  %50 = zext i8 %49 to i32
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %50) #12
  br label %52

52:                                               ; preds = %47, %37
  %53 = phi i32 [ %51, %47 ], [ 0, %37 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %39, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %331, label %58

58:                                               ; preds = %52
  %59 = tail call i64 @llvm.ctpop.i64(i64 %56) #12, !range !11
  %60 = icmp ugt i64 %59, 1
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = add i64 %56, 4294967295
  %63 = and i64 %62, %54
  br label %68

64:                                               ; preds = %58
  %65 = icmp ugt i64 %56, %54
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %54, %56
  br label %68

68:                                               ; preds = %66, %64, %61
  %69 = phi i64 [ %63, %61 ], [ %67, %66 ], [ %54, %64 ]
  %70 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %39, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.940"**, %"struct.std::__1::__hash_node_base.940"*** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %71, i64 %69
  %73 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.940"* %73, null
  br i1 %74, label %331, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %73, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.940"* %77, null
  br i1 %78, label %331, label %79

79:                                               ; preds = %75
  %80 = add i64 %56, -1
  br label %81

81:                                               ; preds = %102, %79
  %82 = phi %"struct.std::__1::__hash_node_base.940"* [ %77, %79 ], [ %104, %102 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %82, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.940"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, %54
  br i1 %86, label %97, label %87

87:                                               ; preds = %81
  br i1 %60, label %90, label %88

88:                                               ; preds = %87
  %89 = and i64 %85, %80
  br label %94

90:                                               ; preds = %87
  %91 = icmp ult i64 %85, %56
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = urem i64 %85, %56
  br label %94

94:                                               ; preds = %92, %90, %88
  %95 = phi i64 [ %89, %88 ], [ %93, %92 ], [ %85, %90 ]
  %96 = icmp eq i64 %95, %69
  br i1 %96, label %102, label %331

97:                                               ; preds = %81
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %82, i64 2
  %99 = bitcast %"struct.std::__1::__hash_node_base.940"* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, %53
  br i1 %101, label %106, label %102

102:                                              ; preds = %97, %94
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.940", %"struct.std::__1::__hash_node_base.940"* %82, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.940"*, %"struct.std::__1::__hash_node_base.940"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.940"* %104, null
  br i1 %105, label %331, label %81

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %108 = load i32, i32* %107, align 8
  switch i32 %108, label %115 [
    i32 246, label %331
    i32 248, label %331
    i32 61, label %109
  ]

109:                                              ; preds = %106
  %110 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 5
  %111 = load i8, i8* %110, align 1, !range !10
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %8, i64 0, i32 6
  store i8 1, i8* %114, align 8
  br label %115

115:                                              ; preds = %106, %109, %113
  %116 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %13, align 8
  %117 = icmp eq %"class.std::__1::__tree_node.1211"* %116, null
  br i1 %117, label %146, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %8, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %120

120:                                              ; preds = %142, %118
  %121 = phi %"class.std::__1::__tree_node.1211"* [ %145, %142 ], [ %116, %118 ]
  %122 = phi %"class.std::__1::__tree_node_base"** [ %144, %142 ], [ %119, %118 ]
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %121, i64 0, i32 1
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %123, align 8
  %125 = icmp ugt %"class.spvtools::opt::Instruction"* %124, %1
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %121, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, null
  br i1 %129, label %130, label %142

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %121, i64 0, i32 0, i32 0
  br label %148

132:                                              ; preds = %120
  %133 = icmp ult %"class.spvtools::opt::Instruction"* %124, %1
  br i1 %133, label %134, label %140

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %121, i64 0, i32 0, i32 1
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %136, null
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %121, i64 0, i32 0, i32 0
  br label %148

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %121, i64 0, i32 0, i32 0
  br label %148

142:                                              ; preds = %134, %126
  %143 = phi %"class.std::__1::__tree_node_base"* [ %128, %126 ], [ %136, %134 ]
  %144 = phi %"class.std::__1::__tree_node_base"** [ %127, %126 ], [ %135, %134 ]
  %145 = bitcast %"class.std::__1::__tree_node_base"* %143 to %"class.std::__1::__tree_node.1211"*
  br label %120

146:                                              ; preds = %115
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  br label %148

148:                                              ; preds = %146, %140, %138, %130
  %149 = phi %"class.std::__1::__tree_end_node"* [ %12, %146 ], [ %131, %130 ], [ %139, %138 ], [ %141, %140 ]
  %150 = phi %"class.std::__1::__tree_node_base"** [ %147, %146 ], [ %127, %130 ], [ %135, %138 ], [ %122, %140 ]
  %151 = bitcast %"class.std::__1::__tree_node_base"** %150 to %"class.std::__1::__tree_node.1211"**
  %152 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node.1211"* %152, null
  br i1 %153, label %154, label %178

154:                                              ; preds = %148
  %155 = tail call i8* @_Znwm(i64 40) #13, !noalias !45
  %156 = getelementptr inbounds i8, i8* %155, i64 32
  %157 = bitcast i8* %156 to i64*
  store i64 %6, i64* %157, align 8, !noalias !45
  %158 = bitcast i8* %155 to %"class.std::__1::__tree_node_base"*
  %159 = getelementptr inbounds i8, i8* %155, i64 16
  %160 = bitcast i8* %159 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %149, %"class.std::__1::__tree_end_node"** %160, align 8
  %161 = bitcast %"class.std::__1::__tree_node_base"** %150 to i8**
  store i8* %155, i8** %161, align 8
  %162 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 0
  %163 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %162, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %171, label %167

167:                                              ; preds = %154
  %168 = ptrtoint %"class.std::__1::__tree_node_base"* %165 to i64
  %169 = bitcast %"class.std::__1::set"* %11 to i64*
  store i64 %168, i64* %169, align 8
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  br label %171

171:                                              ; preds = %167, %154
  %172 = phi %"class.std::__1::__tree_node_base"* [ %158, %154 ], [ %170, %167 ]
  %173 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %8, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %174, %"class.std::__1::__tree_node_base"* %172) #12
  %175 = getelementptr inbounds %"class.spvtools::opt::LoopFissionImpl", %"class.spvtools::opt::LoopFissionImpl"* %8, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %175, align 8
  br label %178

178:                                              ; preds = %148, %171
  %179 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %180 = load %"class.std::__1::set"*, %"class.std::__1::set"** %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %180, i64 0, i32 0, i32 1, i32 0, i32 0
  %182 = bitcast %"class.std::__1::__tree_end_node"* %181 to %"class.std::__1::__tree_node.1211"**
  %183 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %182, align 8
  %184 = icmp eq %"class.std::__1::__tree_node.1211"* %183, null
  br i1 %184, label %213, label %185

185:                                              ; preds = %178
  %186 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %180, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %187

187:                                              ; preds = %209, %185
  %188 = phi %"class.std::__1::__tree_node.1211"* [ %212, %209 ], [ %183, %185 ]
  %189 = phi %"class.std::__1::__tree_node_base"** [ %211, %209 ], [ %186, %185 ]
  %190 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %188, i64 0, i32 1
  %191 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %190, align 8
  %192 = icmp ugt %"class.spvtools::opt::Instruction"* %191, %1
  br i1 %192, label %193, label %199

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %188, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %194, align 8
  %196 = icmp eq %"class.std::__1::__tree_node_base"* %195, null
  br i1 %196, label %197, label %209

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %188, i64 0, i32 0, i32 0
  br label %215

199:                                              ; preds = %187
  %200 = icmp ult %"class.spvtools::opt::Instruction"* %191, %1
  br i1 %200, label %201, label %207

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %188, i64 0, i32 0, i32 1
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, null
  br i1 %204, label %205, label %209

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %188, i64 0, i32 0, i32 0
  br label %215

207:                                              ; preds = %199
  %208 = getelementptr inbounds %"class.std::__1::__tree_node.1211", %"class.std::__1::__tree_node.1211"* %188, i64 0, i32 0, i32 0
  br label %215

209:                                              ; preds = %201, %193
  %210 = phi %"class.std::__1::__tree_node_base"* [ %195, %193 ], [ %203, %201 ]
  %211 = phi %"class.std::__1::__tree_node_base"** [ %194, %193 ], [ %202, %201 ]
  %212 = bitcast %"class.std::__1::__tree_node_base"* %210 to %"class.std::__1::__tree_node.1211"*
  br label %187

213:                                              ; preds = %178
  %214 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %181, i64 0, i32 0
  br label %215

215:                                              ; preds = %213, %207, %205, %197
  %216 = phi %"class.std::__1::__tree_end_node"* [ %181, %213 ], [ %198, %197 ], [ %206, %205 ], [ %208, %207 ]
  %217 = phi %"class.std::__1::__tree_node_base"** [ %214, %213 ], [ %194, %197 ], [ %202, %205 ], [ %189, %207 ]
  %218 = bitcast %"class.std::__1::__tree_node_base"** %217 to %"class.std::__1::__tree_node.1211"**
  %219 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %218, align 8
  %220 = icmp eq %"class.std::__1::__tree_node.1211"* %219, null
  br i1 %220, label %221, label %245

221:                                              ; preds = %215
  %222 = tail call i8* @_Znwm(i64 40) #13, !noalias !48
  %223 = getelementptr inbounds i8, i8* %222, i64 32
  %224 = bitcast i8* %223 to i64*
  store i64 %6, i64* %224, align 8, !noalias !48
  %225 = bitcast i8* %222 to %"class.std::__1::__tree_node_base"*
  %226 = getelementptr inbounds i8, i8* %222, i64 16
  %227 = bitcast i8* %226 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %216, %"class.std::__1::__tree_end_node"** %227, align 8
  %228 = bitcast %"class.std::__1::__tree_node_base"** %217 to i8**
  store i8* %222, i8** %228, align 8
  %229 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %180, i64 0, i32 0, i32 0
  %230 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %229, align 8
  %231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %230, i64 0, i32 0
  %232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %231, align 8
  %233 = icmp eq %"class.std::__1::__tree_node_base"* %232, null
  br i1 %233, label %238, label %234

234:                                              ; preds = %221
  %235 = ptrtoint %"class.std::__1::__tree_node_base"* %232 to i64
  %236 = bitcast %"class.std::__1::set"* %180 to i64*
  store i64 %235, i64* %236, align 8
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  br label %238

238:                                              ; preds = %234, %221
  %239 = phi %"class.std::__1::__tree_node_base"* [ %225, %221 ], [ %237, %234 ]
  %240 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %180, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %241 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %240, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %241, %"class.std::__1::__tree_node_base"* %239) #12
  %242 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %180, i64 0, i32 0, i32 2, i32 0, i32 0
  %243 = load i64, i64* %242, align 8
  %244 = add i64 %243, 1
  store i64 %244, i64* %242, align 8
  br label %245

245:                                              ; preds = %215, %238
  %246 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %247 = bitcast %"class.std::__1::function.957"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %250 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.std::__1::function.1219"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %252) #12
  %253 = getelementptr inbounds %"class.std::__1::function.1219", %"class.std::__1::function.1219"* %4, i64 0, i32 0, i32 1, i32 0
  %254 = getelementptr inbounds %"class.std::__1::function.1219", %"class.std::__1::function.1219"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS8_11InstructionEPNS_3setISB_NS_4lessISB_EENS_9allocatorISB_EEEEbbENK3$_0clESB_EUlPKjE_S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %253, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbENK3$_0clES8_EUlPKjE_FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %254, align 8
  %255 = bitcast %"class.std::__1::function.1219"* %4 to i64*
  store i64 %248, i64* %255, align 8
  %256 = getelementptr inbounds %"class.std::__1::function.1219", %"class.std::__1::function.1219"* %4, i64 0, i32 0, i32 0, i32 1
  %257 = bitcast [8 x i8]* %256 to i64*
  store i64 %251, i64* %257, align 8
  %258 = bitcast %"class.std::__1::function.1267"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %258) #12
  %259 = ptrtoint %"class.std::__1::function.1219"* %4 to i64
  %260 = getelementptr inbounds %"class.std::__1::function.1267", %"class.std::__1::function.1267"* %3, i64 0, i32 0, i32 1, i32 0
  %261 = getelementptr inbounds %"class.std::__1::function.1267", %"class.std::__1::function.1267"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %260, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %261, align 8
  %262 = bitcast %"class.std::__1::function.1267"* %3 to i64*
  store i64 %259, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %264 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %263, align 8
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %266 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %265, align 8
  %267 = icmp eq %"struct.spvtools::opt::Operand"* %264, %266
  br i1 %267, label %291, label %268

268:                                              ; preds = %245
  %269 = getelementptr inbounds %"class.std::__1::function.1267", %"class.std::__1::function.1267"* %3, i64 0, i32 0, i32 0
  br label %270

270:                                              ; preds = %286, %268
  %271 = phi %"struct.spvtools::opt::Operand"* [ %264, %268 ], [ %287, %286 ]
  %272 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 0
  %273 = load i32, i32* %272, align 8
  %274 = and i32 %273, -2
  %275 = icmp eq i32 %274, 2
  br i1 %275, label %286, label %276

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %278 = load %"class.std::__1::vector.16"*, %"class.std::__1::vector.16"** %277, align 8
  %279 = icmp eq %"class.std::__1::vector.16"* %278, null
  %280 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %278, i64 0, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 2
  %282 = select i1 %279, i32** %281, i32** %280
  %283 = load i32*, i32** %282, align 8
  %284 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %260, align 8
  %285 = call zeroext i1 %284(%"union.std::__1::__function::__policy_storage"* nonnull %269, i32* %283) #12
  br i1 %285, label %286, label %289

286:                                              ; preds = %276, %270
  %287 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 1
  %288 = icmp eq %"struct.spvtools::opt::Operand"* %287, %266
  br i1 %288, label %289, label %270

289:                                              ; preds = %286, %276
  %290 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %261, align 8
  br label %291

291:                                              ; preds = %289, %245
  %292 = phi %"struct.std::__1::__function::__policy"* [ %290, %289 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %245 ]
  %293 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %292, i64 0, i32 1
  %294 = load void (i8*)*, void (i8*)** %293, align 8
  %295 = icmp eq void (i8*)* %294, null
  br i1 %295, label %299, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.std::__1::function.1267", %"class.std::__1::function.1267"* %3, i64 0, i32 0, i32 0, i32 0
  %298 = load i8*, i8** %297, align 8
  call void %294(i8* %298) #12
  br label %299

299:                                              ; preds = %291, %296
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %258) #12
  %300 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %254, align 8
  %301 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %300, i64 0, i32 1
  %302 = load void (i8*)*, void (i8*)** %301, align 8
  %303 = icmp eq void (i8*)* %302, null
  br i1 %303, label %307, label %304

304:                                              ; preds = %299
  %305 = getelementptr inbounds %"class.std::__1::function.1219", %"class.std::__1::function.1219"* %4, i64 0, i32 0, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  call void %302(i8* %306) #12
  br label %307

307:                                              ; preds = %299, %304
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %252) #12
  %308 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %309 = load i8, i8* %308, align 8, !range !10
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %314, label %311

311:                                              ; preds = %307
  %312 = load i32, i32* %107, align 8
  %313 = icmp eq i32 %312, 245
  br i1 %313, label %331, label %314

314:                                              ; preds = %307, %311
  %315 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %249, align 8
  %316 = load %"class.std::__1::function.957"*, %"class.std::__1::function.957"** %246, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %315, %"class.spvtools::opt::Instruction"* nonnull %1, %"class.std::__1::function.957"* dereferenceable(32) %316) #12
  %317 = load i64, i64* %247, align 8
  %318 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %249, align 8
  %319 = bitcast %"class.std::__1::function.1226"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %319) #12
  %320 = getelementptr inbounds %"class.std::__1::function.1226", %"class.std::__1::function.1226"* %5, i64 0, i32 0, i32 1, i32 0
  %321 = getelementptr inbounds %"class.std::__1::function.1226", %"class.std::__1::function.1226"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZZNS3_15LoopFissionImpl14TraverseUseDefES5_PNS_3setIS5_NS_4lessIS5_EENS_9allocatorIS5_EEEEbbENK3$_0clES5_EUlS5_jE_S6_EEEEvPKNS0_16__policy_storageES5_j", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %320, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbENK3$_0clES8_EUlS8_jE_FvS8_jEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %321, align 8
  %322 = bitcast %"class.std::__1::function.1226"* %5 to i64*
  store i64 %317, i64* %322, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"* %318, %"class.spvtools::opt::Instruction"* nonnull %1, %"class.std::__1::function.1226"* nonnull dereferenceable(32) %5) #12
  %323 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %321, align 8
  %324 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %323, i64 0, i32 1
  %325 = load void (i8*)*, void (i8*)** %324, align 8
  %326 = icmp eq void (i8*)* %325, null
  br i1 %326, label %330, label %327

327:                                              ; preds = %314
  %328 = getelementptr inbounds %"class.std::__1::function.1226", %"class.std::__1::function.1226"* %5, i64 0, i32 0, i32 0, i32 0
  %329 = load i8*, i8** %328, align 8
  call void %325(i8* %329) #12
  br label %330

330:                                              ; preds = %314, %327
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %319) #12
  br label %331

331:                                              ; preds = %23, %94, %102, %106, %106, %75, %52, %68, %330, %311, %32, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #12, !range !11
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.195"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.195"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.195"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.195"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.195"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.195"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.195"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.957"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1226"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1250", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1238", align 8
  %6 = alloca %"class.std::__1::function.957", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.195"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.195"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.195"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  %19 = icmp eq %"struct.std::__1::__hash_node_base.195"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !51

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.43"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.957"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.957"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1238"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.957"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1238", %"class.std::__1::function.1238"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1238", %"class.std::__1::function.1238"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1238"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1238", %"class.std::__1::function.1238"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1238", %"class.std::__1::function.1238"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1250", %"class.std::__1::tuple.1250"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.43"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.55"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.43"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.55"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #12
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #12
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #12
  %113 = call { %"struct.std::__1::__hash_node_base.195"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.191"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1250"* nonnull dereferenceable(1) %3) #12
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.195"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #12
  %116 = bitcast %"struct.std::__1::__hash_node_base.195"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !10
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !10
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #12
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #12
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #12
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #12
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #12
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.55"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.957"**
  %4 = load %"class.std::__1::function.957"*, %"class.std::__1::function.957"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1250", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1250", %"class.std::__1::tuple.1250"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call { %"struct.std::__1::__hash_node_base.195"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.191"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1250"* nonnull dereferenceable(1) %4) #12
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.195"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %21 = bitcast %"struct.std::__1::__hash_node_base.195"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.195"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.191"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1250"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !11
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.195"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.195"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.195"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.195"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.195"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #13, !noalias !52
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !52
  %75 = load i64, i64* %74, align 8, !noalias !52
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !52
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !52
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !52
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.195"**
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %81, align 8, !noalias !52
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !11
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.191"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !11
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.195"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.195"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.195"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.195"* %124, %"struct.std::__1::__hash_node_base.195"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.195"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.195"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !11
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.195"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.195"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.195"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.195"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.195"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.195"*, i8 } undef, %"struct.std::__1::__hash_node_base.195"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.195"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.195"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.191"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.191"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.191"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.191"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.191"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.195"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.195"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.197", %"class.std::__1::__bucket_list_deallocator.197"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !55

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.195"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.195"* null, %"struct.std::__1::__hash_node_base.195"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.195"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.195"* %36, %"struct.std::__1::__hash_node_base.195"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.195"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.195"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.195"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.195"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.195"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.195"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.195"* %82, %"struct.std::__1::__hash_node_base.195"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.195"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.195"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.195"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.195"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.195"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.195"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.195"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.195"* %80, %"struct.std::__1::__hash_node_base.195"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.195"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.195", %"struct.std::__1::__hash_node_base.195"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.195"*, %"struct.std::__1::__hash_node_base.195"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.195"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.191", %"class.std::__1::__hash_table.191"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.195"**, %"struct.std::__1::__hash_node_base.195"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.195"** null, %"struct.std::__1::__hash_node_base.195"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.195"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.195"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.197", %"class.std::__1::__bucket_list_deallocator.197"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !10
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1219"**
  %4 = load %"class.std::__1::function.1219"*, %"class.std::__1::function.1219"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1219", %"class.std::__1::function.1219"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1219", %"class.std::__1::function.1219"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS8_11InstructionEPNS_3setISB_NS_4lessISB_EENS_9allocatorISB_EEEEbbENK3$_0clESB_EUlPKjE_S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.957"**
  %4 = load %"class.std::__1::function.957"*, %"class.std::__1::function.957"** %3, align 8
  %5 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %6 = bitcast [8 x i8]* %5 to %"class.spvtools::opt::analysis::DefUseManager"**
  %7 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %6, align 8
  %8 = load i32, i32* %1, align 4
  %9 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %7, i32 %8) #12
  %10 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %4, i64 0, i32 0, i32 1, i32 0
  %11 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %4, i64 0, i32 0, i32 0
  tail call void %11(%"union.std::__1::__function::__policy_storage"* %12, %"class.spvtools::opt::Instruction"* %9) #12
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZZNS3_15LoopFissionImpl14TraverseUseDefES5_PNS_3setIS5_NS_4lessIS5_EENS_9allocatorIS5_EEEEbbENK3$_0clES5_EUlS5_jE_S6_EEEEvPKNS0_16__policy_storageES5_j"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #0 align 2 {
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.957"**
  %5 = load %"class.std::__1::function.957"*, %"class.std::__1::function.957"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %5, i64 0, i32 0, i32 1, i32 0
  %7 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %5, i64 0, i32 0, i32 0
  tail call void %7(%"union.std::__1::__function::__policy_storage"* %8, %"class.spvtools::opt::Instruction"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #13, !noalias !56
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 40, i1 false) #12
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_3setIPN8spvtools3opt11InstructionENS_4lessIS5_EENS_9allocatorIS5_EEEENS8_ISA_EEE21__push_back_slow_pathISA_EEvOT_(%"class.std::__1::vector.963"*, %"class.std::__1::set"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::set"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.963"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.963"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::set"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::set"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::set"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::set"* %35 to i64
  %37 = bitcast %"class.std::__1::set"* %1 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::set"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %9, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__compressed_pair"* %41 to i64*
  %43 = bitcast %"class.std::__1::__compressed_pair"* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %33, i64 %9, i32 0, i32 1, i32 0, i32 0
  br i1 %48, label %50, label %52

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %34, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %51, align 8
  br label %58

52:                                               ; preds = %31
  %53 = inttoptr i64 %44 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %54, align 8
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #12
  br label %58

58:                                               ; preds = %50, %52
  %59 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %34, i64 1
  %60 = ptrtoint %"class.std::__1::set"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %0, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::set"*, %"class.std::__1::set"** %61, align 8
  %63 = load %"class.std::__1::set"*, %"class.std::__1::set"** %3, align 8
  %64 = icmp eq %"class.std::__1::set"* %63, %62
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = ptrtoint %"class.std::__1::set"* %62 to i64
  br label %98

67:                                               ; preds = %58, %93
  %68 = phi %"class.std::__1::set"* [ %70, %93 ], [ %34, %58 ]
  %69 = phi %"class.std::__1::set"* [ %71, %93 ], [ %63, %58 ]
  %70 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %68, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %69, i64 -1
  %72 = bitcast %"class.std::__1::set"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::set"* %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %68, i64 -1, i32 0, i32 1
  %76 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %69, i64 -1, i32 0, i32 1
  %77 = bitcast %"class.std::__1::__compressed_pair"* %76 to i64*
  %78 = bitcast %"class.std::__1::__compressed_pair"* %75 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %69, i64 -1, i32 0, i32 2, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %68, i64 -1, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %68, i64 -1, i32 0, i32 1, i32 0, i32 0
  br i1 %83, label %85, label %87

85:                                               ; preds = %67
  %86 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %70, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %86, align 8
  br label %93

87:                                               ; preds = %67
  %88 = inttoptr i64 %79 to %"class.std::__1::__tree_node_base"*
  %89 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %71, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %69, i64 -1, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %89, align 8
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #12
  br label %93

93:                                               ; preds = %87, %85
  %94 = icmp eq %"class.std::__1::set"* %71, %62
  br i1 %94, label %95, label %67

95:                                               ; preds = %93
  %96 = load i64, i64* %6, align 8
  %97 = load %"class.std::__1::set"*, %"class.std::__1::set"** %3, align 8
  br label %98

98:                                               ; preds = %65, %95
  %99 = phi %"class.std::__1::set"* [ %62, %65 ], [ %97, %95 ]
  %100 = phi %"class.std::__1::set"* [ %34, %65 ], [ %70, %95 ]
  %101 = phi i64 [ %66, %65 ], [ %96, %95 ]
  %102 = ptrtoint %"class.std::__1::set"* %100 to i64
  store i64 %102, i64* %6, align 8
  store i64 %60, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %103 = inttoptr i64 %101 to %"class.std::__1::set"*
  %104 = icmp eq %"class.std::__1::set"* %99, %103
  br i1 %104, label %113, label %105

105:                                              ; preds = %98, %105
  %106 = phi %"class.std::__1::set"* [ %107, %105 ], [ %99, %98 ]
  %107 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %106, i64 -1
  %108 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %107, i64 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %106, i64 -1, i32 0, i32 1, i32 0, i32 0
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_node.1211"**
  %111 = load %"class.std::__1::__tree_node.1211"*, %"class.std::__1::__tree_node.1211"** %110, align 8
  tail call void @_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %108, %"class.std::__1::__tree_node.1211"* %111) #12
  %112 = icmp eq %"class.std::__1::set"* %107, %103
  br i1 %112, label %113, label %105

113:                                              ; preds = %105, %98
  %114 = icmp eq i64 %101, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %101 to i8*
  tail call void @_ZdlPv(i8* %116) #13
  br label %117

117:                                              ; preds = %113, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.55"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.53"*, %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::unique_ptr.55"* %2 to i64
  %6 = ptrtoint %"class.std::__1::unique_ptr.55"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"class.std::__1::unique_ptr.55"* %3 to i64
  %9 = sub i64 %8, %5
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %559

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.55"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr.55"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::unique_ptr.55"** %16 to i64*
  br i1 %21, label %246, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %116

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::unique_ptr.55"* %28, %3
  br i1 %29, label %111, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %3, i64 %31, i32 0, i32 0, i32 0
  %33 = ptrtoint %"class.spvtools::opt::BasicBlock"** %32 to i64
  %34 = sub i64 %33, %5
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %30, %39
  %40 = phi %"class.std::__1::unique_ptr.55"* [ %48, %39 ], [ %17, %30 ]
  %41 = phi %"class.std::__1::unique_ptr.55"* [ %47, %39 ], [ %28, %30 ]
  %42 = phi i64 [ %49, %39 ], [ %37, %30 ]
  %43 = bitcast %"class.std::__1::unique_ptr.55"* %40 to i64*
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.55"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %44, align 8
  store i64 %46, i64* %43, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %41, i64 1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %40, i64 1
  %49 = add i64 %42, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %39, !llvm.loop !61

51:                                               ; preds = %39, %30
  %52 = phi %"class.std::__1::unique_ptr.55"* [ undef, %30 ], [ %48, %39 ]
  %53 = phi %"class.std::__1::unique_ptr.55"* [ %17, %30 ], [ %48, %39 ]
  %54 = phi %"class.std::__1::unique_ptr.55"* [ %28, %30 ], [ %47, %39 ]
  %55 = icmp ult i64 %34, 56
  br i1 %55, label %108, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.std::__1::unique_ptr.55"* [ %106, %56 ], [ %53, %51 ]
  %58 = phi %"class.std::__1::unique_ptr.55"* [ %105, %56 ], [ %54, %51 ]
  %59 = bitcast %"class.std::__1::unique_ptr.55"* %57 to i64*
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr.55"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %60, align 8
  store i64 %62, i64* %59, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %57, i64 1
  %65 = bitcast %"class.std::__1::unique_ptr.55"* %64 to i64*
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.55"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %66, align 8
  store i64 %68, i64* %65, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 2
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %57, i64 2
  %71 = bitcast %"class.std::__1::unique_ptr.55"* %70 to i64*
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %69, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr.55"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %72, align 8
  store i64 %74, i64* %71, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 3
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %57, i64 3
  %77 = bitcast %"class.std::__1::unique_ptr.55"* %76 to i64*
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr.55"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8
  store i64 %80, i64* %77, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 4
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %57, i64 4
  %83 = bitcast %"class.std::__1::unique_ptr.55"* %82 to i64*
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %81, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.55"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %84, align 8
  store i64 %86, i64* %83, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 5
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %57, i64 5
  %89 = bitcast %"class.std::__1::unique_ptr.55"* %88 to i64*
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %87, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr.55"* %87 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %90, align 8
  store i64 %92, i64* %89, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 6
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %57, i64 6
  %95 = bitcast %"class.std::__1::unique_ptr.55"* %94 to i64*
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr.55"* %93 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %96, align 8
  store i64 %98, i64* %95, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 7
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %57, i64 7
  %101 = bitcast %"class.std::__1::unique_ptr.55"* %100 to i64*
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.55"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  store i64 %104, i64* %101, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %58, i64 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %57, i64 8
  %107 = icmp eq %"class.std::__1::unique_ptr.55"* %105, %3
  br i1 %107, label %108, label %56

108:                                              ; preds = %56, %51
  %109 = phi %"class.std::__1::unique_ptr.55"* [ %52, %51 ], [ %106, %56 ]
  %110 = ptrtoint %"class.std::__1::unique_ptr.55"* %109 to i64
  br label %111

111:                                              ; preds = %108, %27
  %112 = phi i64 [ %18, %27 ], [ %110, %108 ]
  store i64 %112, i64* %22, align 8
  %113 = icmp sgt i64 %24, 0
  br i1 %113, label %114, label %559

114:                                              ; preds = %111
  %115 = inttoptr i64 %112 to %"class.std::__1::unique_ptr.55"*
  br label %116

116:                                              ; preds = %114, %23
  %117 = phi i64 [ %112, %114 ], [ %18, %23 ]
  %118 = phi %"class.std::__1::unique_ptr.55"* [ %115, %114 ], [ %17, %23 ]
  %119 = phi %"class.std::__1::unique_ptr.55"* [ %28, %114 ], [ %3, %23 ]
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %1, i64 %10
  %121 = ptrtoint %"class.std::__1::unique_ptr.55"* %120 to i64
  %122 = sub i64 %117, %121
  %123 = ashr exact i64 %122, 3
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %1, i64 %123
  %125 = icmp ult %"class.std::__1::unique_ptr.55"* %124, %17
  br i1 %125, label %126, label %157

126:                                              ; preds = %116
  %127 = sub nsw i64 0, %123
  %128 = getelementptr %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %17, i64 %127, i32 0, i32 0, i32 0
  %129 = bitcast %"class.spvtools::opt::BasicBlock"** %128 to i8*
  %130 = xor i64 %6, -1
  %131 = getelementptr i8, i8* %129, i64 %130
  %132 = ptrtoint i8* %131 to i64
  %133 = lshr i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %126, %137
  %138 = phi %"class.std::__1::unique_ptr.55"* [ %146, %137 ], [ %118, %126 ]
  %139 = phi %"class.std::__1::unique_ptr.55"* [ %145, %137 ], [ %124, %126 ]
  %140 = phi i64 [ %147, %137 ], [ %135, %126 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %139, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.55"* %139 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.55"* %138 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %139, i64 1
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %138, i64 1
  %147 = add i64 %140, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %137, !llvm.loop !62

149:                                              ; preds = %137, %126
  %150 = phi %"class.std::__1::unique_ptr.55"* [ %118, %126 ], [ %146, %137 ]
  %151 = phi %"class.std::__1::unique_ptr.55"* [ %124, %126 ], [ %145, %137 ]
  %152 = phi %"class.std::__1::unique_ptr.55"* [ undef, %126 ], [ %146, %137 ]
  %153 = icmp ult i8* %131, inttoptr (i64 56 to i8*)
  br i1 %153, label %154, label %176

154:                                              ; preds = %176, %149
  %155 = phi %"class.std::__1::unique_ptr.55"* [ %152, %149 ], [ %226, %176 ]
  %156 = ptrtoint %"class.std::__1::unique_ptr.55"* %155 to i64
  br label %157

157:                                              ; preds = %154, %116
  %158 = phi i64 [ %156, %154 ], [ %117, %116 ]
  store i64 %158, i64* %22, align 8
  %159 = icmp eq i64 %122, 0
  br i1 %159, label %228, label %160

160:                                              ; preds = %157, %174
  %161 = phi %"class.std::__1::unique_ptr.55"* [ %164, %174 ], [ %118, %157 ]
  %162 = phi %"class.std::__1::unique_ptr.55"* [ %163, %174 ], [ %124, %157 ]
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %162, i64 -1
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %161, i64 -1
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %163, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr.55"* %163 to i64*
  %167 = load i64, i64* %166, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %165, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %164, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = bitcast %"class.std::__1::unique_ptr.55"* %164 to i64*
  store i64 %167, i64* %170, align 8
  %171 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %160
  %173 = bitcast %"class.std::__1::unique_ptr.55"* %164 to %"struct.std::__1::default_delete.59"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.59"* %173, %"class.spvtools::opt::BasicBlock"* nonnull %169) #12
  br label %174

174:                                              ; preds = %172, %160
  %175 = icmp eq %"class.std::__1::unique_ptr.55"* %163, %1
  br i1 %175, label %228, label %160

176:                                              ; preds = %149, %176
  %177 = phi %"class.std::__1::unique_ptr.55"* [ %226, %176 ], [ %150, %149 ]
  %178 = phi %"class.std::__1::unique_ptr.55"* [ %225, %176 ], [ %151, %149 ]
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 0, i32 0, i32 0, i32 0
  %180 = bitcast %"class.std::__1::unique_ptr.55"* %178 to i64*
  %181 = load i64, i64* %180, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %179, align 8
  %182 = bitcast %"class.std::__1::unique_ptr.55"* %177 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 1
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %177, i64 1
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = bitcast %"class.std::__1::unique_ptr.55"* %183 to i64*
  %187 = load i64, i64* %186, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %185, align 8
  %188 = bitcast %"class.std::__1::unique_ptr.55"* %184 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 2
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %177, i64 2
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = bitcast %"class.std::__1::unique_ptr.55"* %189 to i64*
  %193 = load i64, i64* %192, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %191, align 8
  %194 = bitcast %"class.std::__1::unique_ptr.55"* %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 3
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %177, i64 3
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %195, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.std::__1::unique_ptr.55"* %195 to i64*
  %199 = load i64, i64* %198, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %197, align 8
  %200 = bitcast %"class.std::__1::unique_ptr.55"* %196 to i64*
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 4
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %177, i64 4
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %201, i64 0, i32 0, i32 0, i32 0
  %204 = bitcast %"class.std::__1::unique_ptr.55"* %201 to i64*
  %205 = load i64, i64* %204, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %203, align 8
  %206 = bitcast %"class.std::__1::unique_ptr.55"* %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 5
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %177, i64 5
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %207, i64 0, i32 0, i32 0, i32 0
  %210 = bitcast %"class.std::__1::unique_ptr.55"* %207 to i64*
  %211 = load i64, i64* %210, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %209, align 8
  %212 = bitcast %"class.std::__1::unique_ptr.55"* %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 6
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %177, i64 6
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %213, i64 0, i32 0, i32 0, i32 0
  %216 = bitcast %"class.std::__1::unique_ptr.55"* %213 to i64*
  %217 = load i64, i64* %216, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %215, align 8
  %218 = bitcast %"class.std::__1::unique_ptr.55"* %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 7
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %177, i64 7
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %219, i64 0, i32 0, i32 0, i32 0
  %222 = bitcast %"class.std::__1::unique_ptr.55"* %219 to i64*
  %223 = load i64, i64* %222, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %221, align 8
  %224 = bitcast %"class.std::__1::unique_ptr.55"* %220 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %178, i64 8
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %177, i64 8
  %227 = icmp ult %"class.std::__1::unique_ptr.55"* %225, %17
  br i1 %227, label %176, label %154

228:                                              ; preds = %174, %157
  %229 = icmp eq %"class.std::__1::unique_ptr.55"* %119, %2
  br i1 %229, label %559, label %230

230:                                              ; preds = %228, %242
  %231 = phi %"class.std::__1::unique_ptr.55"* [ %244, %242 ], [ %1, %228 ]
  %232 = phi %"class.std::__1::unique_ptr.55"* [ %243, %242 ], [ %2, %228 ]
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %232, i64 0, i32 0, i32 0, i32 0
  %234 = bitcast %"class.std::__1::unique_ptr.55"* %232 to i64*
  %235 = load i64, i64* %234, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %233, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %231, i64 0, i32 0, i32 0, i32 0
  %237 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %236, align 8
  %238 = bitcast %"class.std::__1::unique_ptr.55"* %231 to i64*
  store i64 %235, i64* %238, align 8
  %239 = icmp eq %"class.spvtools::opt::BasicBlock"* %237, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %230
  %241 = bitcast %"class.std::__1::unique_ptr.55"* %231 to %"struct.std::__1::default_delete.59"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.59"* %241, %"class.spvtools::opt::BasicBlock"* nonnull %237) #12
  br label %242

242:                                              ; preds = %240, %230
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %232, i64 1
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %231, i64 1
  %245 = icmp eq %"class.std::__1::unique_ptr.55"* %243, %119
  br i1 %245, label %559, label %230

246:                                              ; preds = %12
  %247 = bitcast %"class.std::__1::vector.53"* %0 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = sub i64 %18, %248
  %250 = ashr exact i64 %249, 3
  %251 = add nsw i64 %250, %10
  %252 = icmp ugt i64 %251, 2305843009213693951
  br i1 %252, label %253, label %255

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::vector.53"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %254) #14
  unreachable

255:                                              ; preds = %246
  %256 = sub i64 %15, %248
  %257 = ashr exact i64 %256, 3
  %258 = icmp ult i64 %257, 1152921504606846975
  br i1 %258, label %262, label %259

259:                                              ; preds = %255
  %260 = sub i64 %6, %248
  %261 = ashr exact i64 %260, 3
  br label %272

262:                                              ; preds = %255
  %263 = ashr exact i64 %256, 2
  %264 = icmp ult i64 %263, %251
  %265 = select i1 %264, i64 %251, i64 %263
  %266 = sub i64 %6, %248
  %267 = ashr exact i64 %266, 3
  %268 = icmp eq i64 %265, 0
  br i1 %268, label %278, label %269

269:                                              ; preds = %262
  %270 = icmp ugt i64 %265, 2305843009213693951
  br i1 %270, label %271, label %272

271:                                              ; preds = %269
  tail call void @abort() #14
  unreachable

272:                                              ; preds = %259, %269
  %273 = phi i64 [ 2305843009213693951, %259 ], [ %265, %269 ]
  %274 = phi i64 [ %261, %259 ], [ %267, %269 ]
  %275 = shl i64 %273, 3
  %276 = tail call i8* @_Znwm(i64 %275) #13
  %277 = bitcast i8* %276 to %"class.std::__1::unique_ptr.55"*
  br label %278

278:                                              ; preds = %272, %262
  %279 = phi i64 [ %274, %272 ], [ %267, %262 ]
  %280 = phi i64 [ %273, %272 ], [ 0, %262 ]
  %281 = phi %"class.std::__1::unique_ptr.55"* [ %277, %272 ], [ null, %262 ]
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %281, i64 %279
  %283 = ptrtoint %"class.std::__1::unique_ptr.55"* %282 to i64
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %281, i64 %280
  %285 = ptrtoint %"class.std::__1::unique_ptr.55"* %284 to i64
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %282, i64 %10
  %287 = add i64 %9, -8
  %288 = lshr i64 %287, 3
  %289 = add nuw nsw i64 %288, 1
  %290 = and i64 %289, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %308, label %292

292:                                              ; preds = %278, %292
  %293 = phi %"class.std::__1::unique_ptr.55"* [ %301, %292 ], [ %282, %278 ]
  %294 = phi i64 [ %302, %292 ], [ %283, %278 ]
  %295 = phi %"class.std::__1::unique_ptr.55"* [ %303, %292 ], [ %2, %278 ]
  %296 = phi i64 [ %304, %292 ], [ %290, %278 ]
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %295, i64 0, i32 0, i32 0, i32 0
  %298 = bitcast %"class.std::__1::unique_ptr.55"* %295 to i64*
  %299 = load i64, i64* %298, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %297, align 8
  %300 = inttoptr i64 %294 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %293, i64 1
  %302 = ptrtoint %"class.std::__1::unique_ptr.55"* %301 to i64
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %295, i64 1
  %304 = add i64 %296, -1
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %292, !llvm.loop !63

306:                                              ; preds = %292
  %307 = ptrtoint %"class.std::__1::unique_ptr.55"* %301 to i64
  br label %308

308:                                              ; preds = %278, %306
  %309 = phi %"class.std::__1::unique_ptr.55"* [ %282, %278 ], [ %301, %306 ]
  %310 = phi i64 [ %283, %278 ], [ %307, %306 ]
  %311 = phi %"class.std::__1::unique_ptr.55"* [ %2, %278 ], [ %303, %306 ]
  %312 = icmp ult i64 %287, 56
  br i1 %312, label %367, label %313

313:                                              ; preds = %308, %313
  %314 = phi %"class.std::__1::unique_ptr.55"* [ %363, %313 ], [ %309, %308 ]
  %315 = phi i64 [ %364, %313 ], [ %310, %308 ]
  %316 = phi %"class.std::__1::unique_ptr.55"* [ %365, %313 ], [ %311, %308 ]
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 0, i32 0, i32 0, i32 0
  %318 = bitcast %"class.std::__1::unique_ptr.55"* %316 to i64*
  %319 = load i64, i64* %318, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %317, align 8
  %320 = inttoptr i64 %315 to i64*
  store i64 %319, i64* %320, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %314, i64 1
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 1
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %322, i64 0, i32 0, i32 0, i32 0
  %324 = bitcast %"class.std::__1::unique_ptr.55"* %322 to i64*
  %325 = load i64, i64* %324, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %323, align 8
  %326 = bitcast %"class.std::__1::unique_ptr.55"* %321 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %314, i64 2
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 2
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %328, i64 0, i32 0, i32 0, i32 0
  %330 = bitcast %"class.std::__1::unique_ptr.55"* %328 to i64*
  %331 = load i64, i64* %330, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %329, align 8
  %332 = bitcast %"class.std::__1::unique_ptr.55"* %327 to i64*
  store i64 %331, i64* %332, align 8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %314, i64 3
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 3
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %334, i64 0, i32 0, i32 0, i32 0
  %336 = bitcast %"class.std::__1::unique_ptr.55"* %334 to i64*
  %337 = load i64, i64* %336, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %335, align 8
  %338 = bitcast %"class.std::__1::unique_ptr.55"* %333 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %314, i64 4
  %340 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 4
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %340, i64 0, i32 0, i32 0, i32 0
  %342 = bitcast %"class.std::__1::unique_ptr.55"* %340 to i64*
  %343 = load i64, i64* %342, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %341, align 8
  %344 = bitcast %"class.std::__1::unique_ptr.55"* %339 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %314, i64 5
  %346 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 5
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %346, i64 0, i32 0, i32 0, i32 0
  %348 = bitcast %"class.std::__1::unique_ptr.55"* %346 to i64*
  %349 = load i64, i64* %348, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %347, align 8
  %350 = bitcast %"class.std::__1::unique_ptr.55"* %345 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %314, i64 6
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 6
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %352, i64 0, i32 0, i32 0, i32 0
  %354 = bitcast %"class.std::__1::unique_ptr.55"* %352 to i64*
  %355 = load i64, i64* %354, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %353, align 8
  %356 = bitcast %"class.std::__1::unique_ptr.55"* %351 to i64*
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %314, i64 7
  %358 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 7
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %358, i64 0, i32 0, i32 0, i32 0
  %360 = bitcast %"class.std::__1::unique_ptr.55"* %358 to i64*
  %361 = load i64, i64* %360, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %359, align 8
  %362 = bitcast %"class.std::__1::unique_ptr.55"* %357 to i64*
  store i64 %361, i64* %362, align 8
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %314, i64 8
  %364 = ptrtoint %"class.std::__1::unique_ptr.55"* %363 to i64
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %316, i64 8
  %366 = icmp eq %"class.std::__1::unique_ptr.55"* %286, %363
  br i1 %366, label %367, label %313

367:                                              ; preds = %313, %308
  %368 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %7, align 8
  %369 = icmp eq %"class.std::__1::unique_ptr.55"* %368, %1
  br i1 %369, label %451, label %370

370:                                              ; preds = %367
  %371 = ptrtoint %"class.std::__1::unique_ptr.55"* %368 to i64
  %372 = getelementptr %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %1, i64 -1, i32 0, i32 0, i32 0
  %373 = ptrtoint %"class.spvtools::opt::BasicBlock"** %372 to i64
  %374 = sub i64 %373, %371
  %375 = lshr i64 %374, 3
  %376 = add nuw nsw i64 %375, 1
  %377 = and i64 %376, 7
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %391, label %379

379:                                              ; preds = %370, %379
  %380 = phi %"class.std::__1::unique_ptr.55"* [ %383, %379 ], [ %282, %370 ]
  %381 = phi %"class.std::__1::unique_ptr.55"* [ %384, %379 ], [ %1, %370 ]
  %382 = phi i64 [ %389, %379 ], [ %377, %370 ]
  %383 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %380, i64 -1
  %384 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %381, i64 -1
  %385 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %384, i64 0, i32 0, i32 0, i32 0
  %386 = bitcast %"class.std::__1::unique_ptr.55"* %384 to i64*
  %387 = load i64, i64* %386, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %385, align 8
  %388 = bitcast %"class.std::__1::unique_ptr.55"* %383 to i64*
  store i64 %387, i64* %388, align 8
  %389 = add i64 %382, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %379, !llvm.loop !64

391:                                              ; preds = %379, %370
  %392 = phi %"class.std::__1::unique_ptr.55"* [ undef, %370 ], [ %383, %379 ]
  %393 = phi %"class.std::__1::unique_ptr.55"* [ %282, %370 ], [ %383, %379 ]
  %394 = phi %"class.std::__1::unique_ptr.55"* [ %1, %370 ], [ %384, %379 ]
  %395 = icmp ult i64 %374, 56
  br i1 %395, label %448, label %396

396:                                              ; preds = %391, %396
  %397 = phi %"class.std::__1::unique_ptr.55"* [ %441, %396 ], [ %393, %391 ]
  %398 = phi %"class.std::__1::unique_ptr.55"* [ %442, %396 ], [ %394, %391 ]
  %399 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %397, i64 -1
  %400 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %398, i64 -1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = bitcast %"class.std::__1::unique_ptr.55"* %400 to i64*
  %403 = load i64, i64* %402, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %401, align 8
  %404 = bitcast %"class.std::__1::unique_ptr.55"* %399 to i64*
  store i64 %403, i64* %404, align 8
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %397, i64 -2
  %406 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %398, i64 -2
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %406, i64 0, i32 0, i32 0, i32 0
  %408 = bitcast %"class.std::__1::unique_ptr.55"* %406 to i64*
  %409 = load i64, i64* %408, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %407, align 8
  %410 = bitcast %"class.std::__1::unique_ptr.55"* %405 to i64*
  store i64 %409, i64* %410, align 8
  %411 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %397, i64 -3
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %398, i64 -3
  %413 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %412, i64 0, i32 0, i32 0, i32 0
  %414 = bitcast %"class.std::__1::unique_ptr.55"* %412 to i64*
  %415 = load i64, i64* %414, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %413, align 8
  %416 = bitcast %"class.std::__1::unique_ptr.55"* %411 to i64*
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %397, i64 -4
  %418 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %398, i64 -4
  %419 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %418, i64 0, i32 0, i32 0, i32 0
  %420 = bitcast %"class.std::__1::unique_ptr.55"* %418 to i64*
  %421 = load i64, i64* %420, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %419, align 8
  %422 = bitcast %"class.std::__1::unique_ptr.55"* %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %397, i64 -5
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %398, i64 -5
  %425 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %424, i64 0, i32 0, i32 0, i32 0
  %426 = bitcast %"class.std::__1::unique_ptr.55"* %424 to i64*
  %427 = load i64, i64* %426, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %425, align 8
  %428 = bitcast %"class.std::__1::unique_ptr.55"* %423 to i64*
  store i64 %427, i64* %428, align 8
  %429 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %397, i64 -6
  %430 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %398, i64 -6
  %431 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %430, i64 0, i32 0, i32 0, i32 0
  %432 = bitcast %"class.std::__1::unique_ptr.55"* %430 to i64*
  %433 = load i64, i64* %432, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %431, align 8
  %434 = bitcast %"class.std::__1::unique_ptr.55"* %429 to i64*
  store i64 %433, i64* %434, align 8
  %435 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %397, i64 -7
  %436 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %398, i64 -7
  %437 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %436, i64 0, i32 0, i32 0, i32 0
  %438 = bitcast %"class.std::__1::unique_ptr.55"* %436 to i64*
  %439 = load i64, i64* %438, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %437, align 8
  %440 = bitcast %"class.std::__1::unique_ptr.55"* %435 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %397, i64 -8
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %398, i64 -8
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %442, i64 0, i32 0, i32 0, i32 0
  %444 = bitcast %"class.std::__1::unique_ptr.55"* %442 to i64*
  %445 = load i64, i64* %444, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %443, align 8
  %446 = bitcast %"class.std::__1::unique_ptr.55"* %441 to i64*
  store i64 %445, i64* %446, align 8
  %447 = icmp eq %"class.std::__1::unique_ptr.55"* %442, %368
  br i1 %447, label %448, label %396

448:                                              ; preds = %396, %391
  %449 = phi %"class.std::__1::unique_ptr.55"* [ %392, %391 ], [ %441, %396 ]
  %450 = ptrtoint %"class.std::__1::unique_ptr.55"* %449 to i64
  br label %451

451:                                              ; preds = %448, %367
  %452 = phi i64 [ %283, %367 ], [ %450, %448 ]
  %453 = phi %"class.std::__1::unique_ptr.55"* [ %282, %367 ], [ %449, %448 ]
  %454 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %16, align 8
  %455 = icmp eq %"class.std::__1::unique_ptr.55"* %454, %1
  br i1 %455, label %481, label %456

456:                                              ; preds = %451
  %457 = getelementptr %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %454, i64 -1, i32 0, i32 0, i32 0
  %458 = ptrtoint %"class.spvtools::opt::BasicBlock"** %457 to i64
  %459 = sub i64 %458, %6
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %476, label %464

464:                                              ; preds = %456, %464
  %465 = phi %"class.std::__1::unique_ptr.55"* [ %473, %464 ], [ %286, %456 ]
  %466 = phi %"class.std::__1::unique_ptr.55"* [ %472, %464 ], [ %1, %456 ]
  %467 = phi i64 [ %474, %464 ], [ %462, %456 ]
  %468 = bitcast %"class.std::__1::unique_ptr.55"* %465 to i64*
  %469 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %466, i64 0, i32 0, i32 0, i32 0
  %470 = bitcast %"class.std::__1::unique_ptr.55"* %466 to i64*
  %471 = load i64, i64* %470, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %469, align 8
  store i64 %471, i64* %468, align 8
  %472 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %466, i64 1
  %473 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %465, i64 1
  %474 = add i64 %467, -1
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %464, !llvm.loop !65

476:                                              ; preds = %464, %456
  %477 = phi %"class.std::__1::unique_ptr.55"* [ undef, %456 ], [ %473, %464 ]
  %478 = phi %"class.std::__1::unique_ptr.55"* [ %286, %456 ], [ %473, %464 ]
  %479 = phi %"class.std::__1::unique_ptr.55"* [ %1, %456 ], [ %472, %464 ]
  %480 = icmp ult i64 %459, 56
  br i1 %480, label %535, label %483

481:                                              ; preds = %451
  %482 = ptrtoint %"class.std::__1::unique_ptr.55"* %453 to i64
  br label %538

483:                                              ; preds = %476, %483
  %484 = phi %"class.std::__1::unique_ptr.55"* [ %533, %483 ], [ %478, %476 ]
  %485 = phi %"class.std::__1::unique_ptr.55"* [ %532, %483 ], [ %479, %476 ]
  %486 = bitcast %"class.std::__1::unique_ptr.55"* %484 to i64*
  %487 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 0, i32 0, i32 0, i32 0
  %488 = bitcast %"class.std::__1::unique_ptr.55"* %485 to i64*
  %489 = load i64, i64* %488, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %487, align 8
  store i64 %489, i64* %486, align 8
  %490 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 1
  %491 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %484, i64 1
  %492 = bitcast %"class.std::__1::unique_ptr.55"* %491 to i64*
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %490, i64 0, i32 0, i32 0, i32 0
  %494 = bitcast %"class.std::__1::unique_ptr.55"* %490 to i64*
  %495 = load i64, i64* %494, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %493, align 8
  store i64 %495, i64* %492, align 8
  %496 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 2
  %497 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %484, i64 2
  %498 = bitcast %"class.std::__1::unique_ptr.55"* %497 to i64*
  %499 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %496, i64 0, i32 0, i32 0, i32 0
  %500 = bitcast %"class.std::__1::unique_ptr.55"* %496 to i64*
  %501 = load i64, i64* %500, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %499, align 8
  store i64 %501, i64* %498, align 8
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 3
  %503 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %484, i64 3
  %504 = bitcast %"class.std::__1::unique_ptr.55"* %503 to i64*
  %505 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %502, i64 0, i32 0, i32 0, i32 0
  %506 = bitcast %"class.std::__1::unique_ptr.55"* %502 to i64*
  %507 = load i64, i64* %506, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %505, align 8
  store i64 %507, i64* %504, align 8
  %508 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 4
  %509 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %484, i64 4
  %510 = bitcast %"class.std::__1::unique_ptr.55"* %509 to i64*
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %508, i64 0, i32 0, i32 0, i32 0
  %512 = bitcast %"class.std::__1::unique_ptr.55"* %508 to i64*
  %513 = load i64, i64* %512, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %511, align 8
  store i64 %513, i64* %510, align 8
  %514 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 5
  %515 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %484, i64 5
  %516 = bitcast %"class.std::__1::unique_ptr.55"* %515 to i64*
  %517 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %514, i64 0, i32 0, i32 0, i32 0
  %518 = bitcast %"class.std::__1::unique_ptr.55"* %514 to i64*
  %519 = load i64, i64* %518, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %517, align 8
  store i64 %519, i64* %516, align 8
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 6
  %521 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %484, i64 6
  %522 = bitcast %"class.std::__1::unique_ptr.55"* %521 to i64*
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %520, i64 0, i32 0, i32 0, i32 0
  %524 = bitcast %"class.std::__1::unique_ptr.55"* %520 to i64*
  %525 = load i64, i64* %524, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %523, align 8
  store i64 %525, i64* %522, align 8
  %526 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 7
  %527 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %484, i64 7
  %528 = bitcast %"class.std::__1::unique_ptr.55"* %527 to i64*
  %529 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %526, i64 0, i32 0, i32 0, i32 0
  %530 = bitcast %"class.std::__1::unique_ptr.55"* %526 to i64*
  %531 = load i64, i64* %530, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %529, align 8
  store i64 %531, i64* %528, align 8
  %532 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %485, i64 8
  %533 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %484, i64 8
  %534 = icmp eq %"class.std::__1::unique_ptr.55"* %532, %454
  br i1 %534, label %535, label %483

535:                                              ; preds = %483, %476
  %536 = phi %"class.std::__1::unique_ptr.55"* [ %477, %476 ], [ %533, %483 ]
  %537 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %16, align 8
  br label %538

538:                                              ; preds = %535, %481
  %539 = phi %"class.std::__1::unique_ptr.55"* [ %1, %481 ], [ %537, %535 ]
  %540 = phi %"class.std::__1::unique_ptr.55"* [ %286, %481 ], [ %536, %535 ]
  %541 = phi i64 [ %482, %481 ], [ %452, %535 ]
  %542 = ptrtoint %"class.std::__1::unique_ptr.55"* %540 to i64
  %543 = load %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"** %7, align 8
  store i64 %541, i64* %247, align 8
  store i64 %542, i64* %22, align 8
  store i64 %285, i64* %14, align 8
  %544 = icmp eq %"class.std::__1::unique_ptr.55"* %539, %543
  br i1 %544, label %555, label %545

545:                                              ; preds = %538, %553
  %546 = phi %"class.std::__1::unique_ptr.55"* [ %547, %553 ], [ %539, %538 ]
  %547 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %546, i64 -1
  %548 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %547, i64 0, i32 0, i32 0, i32 0
  %549 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %548, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %548, align 8
  %550 = icmp eq %"class.spvtools::opt::BasicBlock"* %549, null
  br i1 %550, label %553, label %551

551:                                              ; preds = %545
  %552 = bitcast %"class.std::__1::unique_ptr.55"* %547 to %"struct.std::__1::default_delete.59"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.59"* %552, %"class.spvtools::opt::BasicBlock"* nonnull %549) #12
  br label %553

553:                                              ; preds = %551, %545
  %554 = icmp eq %"class.std::__1::unique_ptr.55"* %547, %543
  br i1 %554, label %555, label %545

555:                                              ; preds = %553, %538
  %556 = icmp eq %"class.std::__1::unique_ptr.55"* %543, null
  br i1 %556, label %559, label %557

557:                                              ; preds = %555
  %558 = bitcast %"class.std::__1::unique_ptr.55"* %543 to i8*
  tail call void @_ZdlPv(i8* %558) #13
  br label %559

559:                                              ; preds = %242, %557, %555, %111, %228, %4
  %560 = phi %"class.std::__1::unique_ptr.55"* [ %1, %4 ], [ %1, %228 ], [ %1, %111 ], [ %282, %555 ], [ %282, %557 ], [ %1, %242 ]
  ret %"class.std::__1::unique_ptr.55"* %560
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.270"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.266"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1312"* dereferenceable(8), %"class.std::__1::tuple.1250"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !11
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.270"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.270"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.270"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.270"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.270"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #13, !noalias !66
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1312", %"class.std::__1::tuple.1312"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !66
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !66
  store i32 %62, i32* %61, align 4, !noalias !66
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !66
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !66
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.270"**
  store %"struct.std::__1::__hash_node_base.270"* null, %"struct.std::__1::__hash_node_base.270"** %67, align 8, !noalias !66
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !11
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #12
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.266"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #12, !range !11
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.270"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.270"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.270"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.270"* %110, %"struct.std::__1::__hash_node_base.270"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.270"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.270"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #12, !range !11
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.270"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.270"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.270"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.270"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.270"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.270"*, i8 } undef, %"struct.std::__1::__hash_node_base.270"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.270"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.270"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.266"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.266"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.266"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.266"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.266"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.270"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.270"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.272", %"class.std::__1::__bucket_list_deallocator.272"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.270"* null, %"struct.std::__1::__hash_node_base.270"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !69

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.270"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.270"* null, %"struct.std::__1::__hash_node_base.270"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.270"* null, %"struct.std::__1::__hash_node_base.270"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.270"* null, %"struct.std::__1::__hash_node_base.270"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.270"* null, %"struct.std::__1::__hash_node_base.270"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.270"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.270"* %36, %"struct.std::__1::__hash_node_base.270"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.270"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.270"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.270"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.270"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.270"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.270"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.270"* %82, %"struct.std::__1::__hash_node_base.270"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.270"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.270"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.270"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.270"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.270"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.270"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.270"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.270"* %80, %"struct.std::__1::__hash_node_base.270"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.270"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.270", %"struct.std::__1::__hash_node_base.270"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.270"*, %"struct.std::__1::__hash_node_base.270"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.270"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.266", %"class.std::__1::__hash_table.266"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.270"**, %"struct.std::__1::__hash_node_base.270"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.270"** null, %"struct.std::__1::__hash_node_base.270"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.270"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.270"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.272", %"class.std::__1::__bucket_list_deallocator.272"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1039"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1035"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1285"* dereferenceable(8), %"class.std::__1::tuple.1250"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !11
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.1039"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.1039"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1039"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #13, !noalias !70
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1285"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !70
  %75 = load i64, i64* %74, align 8, !noalias !70
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !70
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %78, align 8, !noalias !70
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !70
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1039"**
  store %"struct.std::__1::__hash_node_base.1039"* null, %"struct.std::__1::__hash_node_base.1039"** %81, align 8, !noalias !70
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !11
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1035"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !11
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.1039"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1039"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.1039"* %124, %"struct.std::__1::__hash_node_base.1039"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.1039"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !11
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.1039"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.1039"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.1039"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1039"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.1039"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1039"*, i8 } undef, %"struct.std::__1::__hash_node_base.1039"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1039"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.1039"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1035"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1035"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1035"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1035"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1035"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1039"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1039"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1041", %"class.std::__1::__bucket_list_deallocator.1041"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1039"* null, %"struct.std::__1::__hash_node_base.1039"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !73

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1039"* null, %"struct.std::__1::__hash_node_base.1039"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1039"* null, %"struct.std::__1::__hash_node_base.1039"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1039"* null, %"struct.std::__1::__hash_node_base.1039"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1039"* null, %"struct.std::__1::__hash_node_base.1039"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1039"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1039"* %36, %"struct.std::__1::__hash_node_base.1039"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1039"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1039"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1039"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1039"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1039"* %82, %"struct.std::__1::__hash_node_base.1039"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1039"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1039"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1039"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1039"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1039"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1039"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1039"* %80, %"struct.std::__1::__hash_node_base.1039"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1039"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1039", %"struct.std::__1::__hash_node_base.1039"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1039"*, %"struct.std::__1::__hash_node_base.1039"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1039"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1035", %"class.std::__1::__hash_table.1035"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1039"**, %"struct.std::__1::__hash_node_base.1039"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1039"** null, %"struct.std::__1::__hash_node_base.1039"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1039"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1039"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1041", %"class.std::__1::__bucket_list_deallocator.1041"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEE11__call_implINS0_20__default_alloc_funcIZNS3_15LoopFissionPassC1EmbE3$_1S8_EEEEbPKNS0_16__policy_storageES7_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* nocapture readonly dereferenceable(112)) #10 align 2 {
  %3 = getelementptr inbounds %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness", %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* %1, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEE11__call_implINS0_20__default_alloc_funcIZNS3_15LoopFissionPassC1EvE3$_2S8_EEEEbPKNS0_16__policy_storageES7_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness"* nocapture readnone dereferenceable(112)) #11 align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Loop"* %3, null
  br i1 %4, label %122, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %2, align 8
  br label %122

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %19, i64 %20, i32 0
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 7, i32 0, i32 1
  %24 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %19, i64 %20, i32 1, i32 0
  %26 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %27 = icmp eq %"class.spvtools::opt::Loop"** %26, %24
  br i1 %27, label %28, label %51

28:                                               ; preds = %10
  %29 = ptrtoint %"struct.std::__1::pair.1123"** %16 to i64
  %30 = ptrtoint %"class.spvtools::opt::Loop"* %22 to i64
  %31 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %30, i64* %31, align 8
  store i64 %13, i64* %6, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast %"struct.std::__1::pair.1123"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %29
  %36 = icmp eq i64 %35, 0
  %37 = shl i64 %35, 5
  %38 = add i64 %37, -1
  %39 = select i1 %36, i64 0, i64 %38
  %40 = sub i64 1, %7
  %41 = sub i64 %40, %12
  %42 = add i64 %41, %39
  %43 = icmp ult i64 %42, 512
  br i1 %43, label %122, label %44

44:                                               ; preds = %28
  %45 = inttoptr i64 %34 to %"struct.std::__1::pair.1123"**
  %46 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %45, i64 -1
  %47 = bitcast %"struct.std::__1::pair.1123"** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #13
  %49 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %32, align 8
  %50 = getelementptr %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %49, i64 -1
  store %"struct.std::__1::pair.1123"** %50, %"struct.std::__1::pair.1123"*** %32, align 8
  br label %122

51:                                               ; preds = %10
  %52 = bitcast %"class.spvtools::opt::Loop"** %26 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %55, i64 1
  store %"class.spvtools::opt::Loop"** %56, %"class.spvtools::opt::Loop"*** %25, align 8
  %57 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 1
  %61 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %60, align 8
  %62 = icmp eq %"class.spvtools::opt::Loop"** %59, %61
  br i1 %62, label %122, label %63

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %65 = bitcast %"struct.std::__1::pair.1123"*** %64 to i64*
  %66 = bitcast %"struct.std::__1::pair.1123"*** %15 to i64*
  %67 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0
  %68 = load i64, i64* %6, align 8
  br label %69

69:                                               ; preds = %104, %63
  %70 = phi i64 [ %68, %63 ], [ %110, %104 ]
  %71 = phi %"class.spvtools::opt::Loop"** [ %59, %63 ], [ %118, %104 ]
  %72 = phi %"class.spvtools::opt::Loop"* [ %57, %63 ], [ %116, %104 ]
  %73 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %71, i64 1
  %74 = load i64, i64* %65, align 8
  %75 = load i64, i64* %66, align 8
  %76 = sub i64 %74, %75
  %77 = icmp eq i64 %76, 0
  %78 = shl i64 %76, 5
  %79 = add i64 %78, -1
  %80 = select i1 %77, i64 0, i64 %79
  %81 = load i64, i64* %11, align 8
  %82 = add i64 %81, %70
  %83 = icmp eq i64 %80, %82
  %84 = inttoptr i64 %75 to %"struct.std::__1::pair.1123"**
  %85 = inttoptr i64 %74 to %"struct.std::__1::pair.1123"**
  br i1 %83, label %86, label %92

86:                                               ; preds = %69
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %67) #12
  %87 = load i64, i64* %6, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %15, align 8
  %90 = load %"struct.std::__1::pair.1123"**, %"struct.std::__1::pair.1123"*** %64, align 8
  %91 = add i64 %88, %87
  br label %92

92:                                               ; preds = %86, %69
  %93 = phi i64 [ %91, %86 ], [ %82, %69 ]
  %94 = phi %"struct.std::__1::pair.1123"** [ %90, %86 ], [ %85, %69 ]
  %95 = phi %"struct.std::__1::pair.1123"** [ %89, %86 ], [ %84, %69 ]
  %96 = icmp eq %"struct.std::__1::pair.1123"** %94, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = lshr i64 %93, 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %95, i64 %98
  %100 = load %"struct.std::__1::pair.1123"*, %"struct.std::__1::pair.1123"** %99, align 8
  %101 = and i64 %93, 255
  %102 = getelementptr inbounds %"struct.std::__1::pair.1123", %"struct.std::__1::pair.1123"* %100, i64 %101
  %103 = bitcast %"struct.std::__1::pair.1123"* %102 to i8*
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i8* [ %103, %97 ], [ null, %92 ]
  %106 = bitcast i8* %105 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %72, %"class.spvtools::opt::Loop"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %73, %"class.spvtools::opt::Loop"*** %108, align 8
  %109 = load i64, i64* %6, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %6, align 8
  %111 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %111, i64 0, i32 7, i32 0, i32 0
  %113 = bitcast %"class.spvtools::opt::Loop"*** %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %54, align 8
  %116 = inttoptr i64 %115 to %"class.spvtools::opt::Loop"*
  %117 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 0
  %118 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 1
  %120 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %119, align 8
  %121 = icmp eq %"class.spvtools::opt::Loop"** %118, %120
  br i1 %121, label %122, label %69

122:                                              ; preds = %104, %51, %44, %28, %1, %9
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!9 = distinct !{!9, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!10 = !{i8 0, i8 2}
!11 = !{i64 0, i64 65}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISP_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISP_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeINS_12__value_typeIPN8spvtools3opt11InstructionEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_: argument 0"}
!32 = distinct !{!32, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_"}
!33 = distinct !{!33, !34, !"_ZN8spvtools3opt14LoopDescriptor5beginEv: argument 0"}
!34 = distinct !{!34, !"_ZN8spvtools3opt14LoopDescriptor5beginEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRPS4_S7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEDpOT_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN8spvtools3opt8FunctionENS3_16RegisterLivenessEEENS_22__unordered_map_hasherIS6_S8_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRPS4_S7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISQ_EEEEEEDpOT_"}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.unroll.disable"}
!40 = distinct !{!40, !39}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !39}
!43 = distinct !{!43, !39}
!44 = distinct !{!44, !39}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__16__treeIPN8spvtools3opt11InstructionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!51 = distinct !{!51, !39}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!55 = distinct !{!55, !39}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!59 = distinct !{!59, !60, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15LoopFissionImpl14TraverseUseDefEPNS5_11InstructionEPNS_3setIS8_NS_4lessIS8_EENS_9allocatorIS8_EEEEbbE3$_0FvS8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!61 = distinct !{!61, !39}
!62 = distinct !{!62, !39}
!63 = distinct !{!63, !39}
!64 = distinct !{!64, !39}
!65 = distinct !{!65, !39}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!69 = distinct !{!69, !39}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!73 = distinct !{!73, !39}
